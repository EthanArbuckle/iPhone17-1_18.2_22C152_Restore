id BDSCloudKitLog()
{
  void *v0;
  uint64_t vars8;

  if (qword_26AD776E0 != -1) {
    dispatch_once(&qword_26AD776E0, &unk_26E9719D0);
  }
  v0 = (void *)qword_26AD776D8;
  return v0;
}

id BDSCloudKitAudiobookLog()
{
  if (qword_26AD775E8 != -1) {
    dispatch_once(&qword_26AD775E8, &unk_26E971A30);
  }
  v0 = (void *)qword_26AD775E0;
  return v0;
}

id BDSServiceXPCNotificationLog()
{
  if (qword_26AD775B8 != -1) {
    dispatch_once(&qword_26AD775B8, &unk_26E971AB0);
  }
  v0 = (void *)qword_26AD775B0;
  return v0;
}

uint64_t BDSIsInternalInstall()
{
  return MEMORY[0x270EDAB30]("com.apple.iBooks.BookDataStore");
}

id BDSCloudKitSyncLog()
{
  if (qword_26AD76100 != -1) {
    dispatch_once(&qword_26AD76100, &unk_26E971A10);
  }
  v0 = (void *)qword_26AD760F8;
  return v0;
}

uint64_t BDSXPCNotificationsEnabled()
{
  return _os_feature_enabled_impl();
}

void bds_dispatch_service(void *a1, void *a2, void *a3)
{
}

id BDSServiceLog()
{
  if (qword_26AD775A8 != -1) {
    dispatch_once(&qword_26AD775A8, &unk_26E971A90);
  }
  v0 = (void *)qword_26AD775A0;
  return v0;
}

uint64_t sub_2360BE86C()
{
  qword_26AD77678 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

void sub_2360BEF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360BEF5C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360BEF6C(uint64_t a1)
{
}

uint64_t sub_2360BEF74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = objc_msgSend_currentSaltVersionIdentifier(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  return MEMORY[0x270F9A758]();
}

void sub_2360BF0A0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2360BF0B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_wq_refreshSalt_(WeakRetained, v2, *(void *)(a1 + 32), v3, v4, v5, v6, v7);
}

void sub_2360BF1E4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2360BF1F8(uint64_t a1)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v11 = objc_msgSend_currentSalt(WeakRetained, v4, v5, v6, v7, v8, v9, v10);
    int v40 = 138412546;
    v41 = v11;
    __int16 v42 = 1024;
    int isSaltRefreshInProgress = objc_msgSend_isSaltRefreshInProgress(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    _os_log_impl(&dword_2360BC000, v3, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager refreshSaltIfNeeded - currentSalt: %@, isSaltRefreshInProgress: %{BOOL}d", (uint8_t *)&v40, 0x12u);
  }
  v26 = objc_msgSend_currentSalt(WeakRetained, v19, v20, v21, v22, v23, v24, v25);
  if (v26)
  {
  }
  else if ((objc_msgSend_isSaltRefreshInProgress(WeakRetained, v27, v28, v29, v30, v31, v32, v33) & 1) == 0)
  {
    objc_msgSend_wq_refreshSalt_(WeakRetained, v34, *(void *)(a1 + 32), v35, v36, v37, v38, v39);
  }
}

void sub_2360BF4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360BF4D8(uint64_t a1, void *a2, void *a3)
{
  v45[1] = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v15 = WeakRetained;
  if (!WeakRetained)
  {
    id v17 = objc_alloc(MEMORY[0x263EFF940]);
    uint64_t v31 = objc_msgSend_stringWithFormat_(NSString, v18, @"Nil weak self after fetch salt record", v19, v20, v21, v22, v23);
    uint64_t v44 = *MEMORY[0x263F08608];
    uint64_t v32 = v6;
    if (!v6)
    {
      uint64_t v32 = objc_msgSend_null(MEMORY[0x263EFF9D0], v24, v25, v26, v27, v28, v29, v30);
    }
    v45[0] = v32;
    uint64_t v33 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v24, (uint64_t)v45, (uint64_t)&v44, 1, v28, v29, v30);
    id v38 = (id)objc_msgSend_initWithName_reason_userInfo_(v17, v34, @"No Books Salt", (uint64_t)v31, (uint64_t)v33, v35, v36, v37);

    if (!v6) {
    objc_exception_throw(v38);
    }
  }
  uint64_t v16 = objc_msgSend_workQueue(WeakRetained, v8, v9, v10, v11, v12, v13, v14);
  v39[0] = MEMORY[0x263EF8330];
  v39[1] = 3221225472;
  v39[2] = sub_2360BF7C4;
  v39[3] = &unk_264CA0B20;
  v39[4] = v15;
  id v40 = v6;
  id v41 = v5;
  objc_copyWeak(&v43, (id *)(a1 + 40));
  id v42 = *(id *)(a1 + 32);
  dispatch_async(v16, v39);

  objc_destroyWeak(&v43);
}

void sub_2360BF7C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v150 = *MEMORY[0x263EF8340];
  objc_msgSend_setIsSaltRefreshInProgress_(*(void **)(a1 + 32), a2, 0, a4, a5, a6, a7, a8);
  uint64_t v141 = 0;
  v142 = &v141;
  uint64_t v143 = 0x3032000000;
  v144 = sub_2360BEF5C;
  v145 = sub_2360BEF6C;
  id v146 = 0;
  uint64_t v16 = (void **)(a1 + 40);
  if (*(void *)(a1 + 40) || (v67 = *(void **)(a1 + 48)) == 0)
  {
    id v17 = BDSCloudKitLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_2361F5E64((uint64_t *)(a1 + 40), a1, v17);
    }

    memset(bytes, 0, sizeof(bytes));
    if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 0x80uLL, bytes))
    {
      id v112 = objc_alloc(MEMORY[0x263EFF940]);
      v126 = objc_msgSend_stringWithFormat_(NSString, v113, @"Unable to generate random salt", v114, v115, v116, v117, v118);
      uint64_t v147 = *MEMORY[0x263F08608];
      v127 = *v16;
      if (*v16)
      {
        v128 = *v16;
      }
      else
      {
        v128 = objc_msgSend_null(MEMORY[0x263EFF9D0], v119, v120, v121, v122, v123, v124, v125);
      }
      v148 = v128;
      v129 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v119, (uint64_t)&v148, (uint64_t)&v147, 1, v123, v124, v125);
      id v134 = (id)objc_msgSend_initWithName_reason_userInfo_(v112, v130, @"No Books Record Salt", (uint64_t)v126, (uint64_t)v129, v131, v132, v133);

      if (!v127) {
      objc_exception_throw(v134);
      }
    }
    id v18 = objc_alloc(MEMORY[0x263EFD7E8]);
    uint64_t v25 = objc_msgSend_initWithRecordName_(v18, v19, @"recordIDSalt", v20, v21, v22, v23, v24);
    id v26 = objc_alloc(MEMORY[0x263EFD7C8]);
    uint64_t v32 = objc_msgSend_initWithRecordType_recordID_(v26, v27, @"recordIDSalt", (uint64_t)v25, v28, v29, v30, v31);
    id v38 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v33, (uint64_t)bytes, 128, v34, v35, v36, v37);
    v46 = objc_msgSend_encryptedValuesByKey(v32, v39, v40, v41, v42, v43, v44, v45);
    objc_msgSend_setObject_forKeyedSubscript_(v46, v47, (uint64_t)v38, @"saltEncrypted", v48, v49, v50, v51);

    v52 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v52, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2360BC000, v52, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Will save record salt", buf, 2u);
    }

    v60 = objc_msgSend_database(*(void **)(a1 + 32), v53, v54, v55, v56, v57, v58, v59);
    v135[0] = MEMORY[0x263EF8330];
    v135[1] = 3221225472;
    v135[2] = sub_2360BFCA0;
    v135[3] = &unk_264CA0AF8;
    objc_copyWeak(&v139, (id *)(a1 + 64));
    v138 = &v141;
    id v61 = v38;
    id v136 = v61;
    id v137 = *(id *)(a1 + 56);
    objc_msgSend_saveRecord_completionHandler_(v60, v62, (uint64_t)v32, (uint64_t)v135, v63, v64, v65, v66);

    objc_destroyWeak(&v139);
  }
  else
  {
    v68 = objc_msgSend_encryptedValuesByKey(v67, v9, v10, v11, v12, v13, v14, v15);
    v75 = objc_msgSend_objectForKeyedSubscript_(v68, v69, @"saltEncrypted", v70, v71, v72, v73, v74);

    if (!v75)
    {
      v75 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 48), v76, @"salt", v77, v78, v79, v80, v81);
    }
    objc_msgSend_setCurrentSalt_(*(void **)(a1 + 32), v76, (uint64_t)v75, v77, v78, v79, v80, v81);
    uint64_t v89 = objc_msgSend_recordChangeTag(*(void **)(a1 + 48), v82, v83, v84, v85, v86, v87, v88);
    v90 = (void *)v142[5];
    v142[5] = v89;

    objc_msgSend_setCurrentSaltVersionIdentifier_(*(void **)(a1 + 32), v91, v142[5], v92, v93, v94, v95, v96);
    v97 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v98 = v142[5];
      LODWORD(bytes[0]) = 138412546;
      *(void *)((char *)bytes + 4) = v75;
      WORD6(bytes[0]) = 2112;
      *(void *)((char *)bytes + 14) = v98;
      _os_log_impl(&dword_2360BC000, v97, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", (uint8_t *)bytes, 0x16u);
    }

    v106 = objc_msgSend_observer(*(void **)(a1 + 32), v99, v100, v101, v102, v103, v104, v105);
    objc_msgSend_saltManager_updatedSaltWithVersion_(v106, v107, *(void *)(a1 + 32), v142[5], v108, v109, v110, v111);
  }
  _Block_object_dispose(&v141, 8);
}

void sub_2360BFC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2360BFCA0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v203 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    id v173 = objc_alloc(MEMORY[0x263EFF940]);
    v187 = objc_msgSend_stringWithFormat_(NSString, v174, @"Nil weak self after save record", v175, v176, v177, v178, v179);
    uint64_t v195 = *MEMORY[0x263F08608];
    v188 = v6;
    if (!v6)
    {
      v188 = objc_msgSend_null(MEMORY[0x263EFF9D0], v180, v181, v182, v183, v184, v185, v186, v195);
    }
    v196 = v188;
    v189 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v180, (uint64_t)&v196, (uint64_t)&v195, 1, v184, v185, v186);
    id v194 = (id)objc_msgSend_initWithName_reason_userInfo_(v173, v190, @"No Books Record Salt", (uint64_t)v187, (uint64_t)v189, v191, v192, v193);

    if (!v6) {
    objc_exception_throw(v194);
    }
  }
  uint64_t v8 = WeakRetained;
  uint64_t v9 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_2360BC000, v9, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Saving record salt....", buf, 2u);
  }

  id v17 = objc_msgSend_domain(v6, v10, v11, v12, v13, v14, v15, v16);
  if (objc_msgSend_isEqualToString_(v17, v18, *MEMORY[0x263EFD498], v19, v20, v21, v22, v23))
  {
    uint64_t v31 = objc_msgSend_code(v6, v24, v25, v26, v27, v28, v29, v30);

    if (v31 == 14)
    {
      uint64_t v39 = objc_msgSend_userInfo(v6, v32, v33, v34, v35, v36, v37, v38);
      v46 = objc_msgSend_objectForKeyedSubscript_(v39, v40, *MEMORY[0x263EFD4F8], v41, v42, v43, v44, v45);

      uint64_t v54 = objc_msgSend_encryptedValuesByKey(v46, v47, v48, v49, v50, v51, v52, v53);
      id v61 = objc_msgSend_objectForKeyedSubscript_(v54, v55, @"saltEncrypted", v56, v57, v58, v59, v60);

      if (v46)
      {
        v62 = BDSCloudKitSyncLog();
        if (os_log_type_enabled(v62, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v70 = objc_msgSend_recordChangeTag(v46, v63, v64, v65, v66, v67, v68, v69);
          *(_DWORD *)buf = 138412802;
          v198 = v61;
          __int16 v199 = 2112;
          v200 = v70;
          __int16 v201 = 2112;
          id v202 = v6;
          _os_log_impl(&dword_2360BC000, v62, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x20u);
        }
        objc_msgSend_setCurrentSalt_(v8, v71, (uint64_t)v61, v72, v73, v74, v75, v76);
        uint64_t v84 = objc_msgSend_recordChangeTag(v46, v77, v78, v79, v80, v81, v82, v83);
        uint64_t v85 = *(void *)(*(void *)(a1 + 48) + 8);
        uint64_t v86 = *(void **)(v85 + 40);
        *(void *)(v85 + 40) = v84;

        objc_msgSend_setCurrentSaltVersionIdentifier_(v8, v87, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v88, v89, v90, v91, v92);
        id v6 = 0;
      }

LABEL_15:
      goto LABEL_19;
    }
  }
  else
  {
  }
  uint64_t v93 = BDSCloudKitSyncLog();
  v46 = v93;
  if (v6)
  {
    if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR)) {
      sub_2361F5F5C();
    }
    goto LABEL_15;
  }
  if (os_log_type_enabled(v93, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v108 = *(void **)(a1 + 32);
    uint64_t v109 = objc_msgSend_recordChangeTag(v5, v101, v102, v103, v104, v105, v106, v107);
    *(_DWORD *)buf = 138412546;
    v198 = v108;
    __int16 v199 = 2112;
    v200 = v109;
    _os_log_impl(&dword_2360BC000, v46, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x16u);
  }
  uint64_t v117 = objc_msgSend_encryptedValuesByKey(v5, v110, v111, v112, v113, v114, v115, v116);
  uint64_t v124 = objc_msgSend_objectForKeyedSubscript_(v117, v118, @"saltEncrypted", v119, v120, v121, v122, v123);
  objc_msgSend_setCurrentSalt_(v8, v125, (uint64_t)v124, v126, v127, v128, v129, v130);

  uint64_t v138 = objc_msgSend_recordChangeTag(v5, v131, v132, v133, v134, v135, v136, v137);
  uint64_t v139 = *(void *)(*(void *)(a1 + 48) + 8);
  v140 = *(void **)(v139 + 40);
  *(void *)(v139 + 40) = v138;

  objc_msgSend_setCurrentSaltVersionIdentifier_(v8, v141, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v142, v143, v144, v145, v146);
  id v6 = 0;
LABEL_19:
  uint64_t v147 = objc_msgSend_currentSalt(v8, v94, v95, v96, v97, v98, v99, v100);

  v148 = BDSCloudKitSyncLog();
  v149 = v148;
  if (v6 || !v147)
  {
    if (os_log_type_enabled(v148, OS_LOG_TYPE_ERROR)) {
      sub_2361F5EF4();
    }

    v172 = _Block_copy(*(const void **)(a1 + 40));
    v166 = v172;
    if (v172) {
      (*((void (**)(void *, id))v172 + 2))(v172, v6);
    }
  }
  else
  {
    if (os_log_type_enabled(v148, OS_LOG_TYPE_DEFAULT))
    {
      v157 = objc_msgSend_currentSalt(v8, v150, v151, v152, v153, v154, v155, v156);
      v158 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412546;
      v198 = v157;
      __int16 v199 = 2112;
      v200 = v158;
      _os_log_impl(&dword_2360BC000, v149, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: *** Got record salt:(%@) changeTag:(%@)", buf, 0x16u);
    }
    v166 = objc_msgSend_observer(v8, v159, v160, v161, v162, v163, v164, v165);
    objc_msgSend_saltManager_updatedSaltWithVersion_(v166, v167, (uint64_t)v8, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v168, v169, v170, v171);
  }
}

void sub_2360C0268(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2360C027C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_wq_invalidateSalt(WeakRetained, v1, v2, v3, v4, v5, v6, v7);
}

void sub_2360C0400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2360C0418(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_currentSalt(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v9 != 0;
}

void sub_2360C05BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2360C05D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = a1 + 32;
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    id v17 = objc_msgSend__wq_saltedAndHashedIDFromLocalID_(*(void **)(a1 + 40), a2, v9, a4, a5, a6, a7, a8);
    if (v17)
    {
      id v18 = *(__CFString **)(a1 + 48);
      if (!v18) {
        id v18 = @"-";
      }
      uint64_t v19 = objc_msgSend_stringWithFormat_(NSString, v11, @"%@.%@", v12, v13, v14, v15, v16, v18, v17);
    }
    else
    {
      uint64_t v19 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v19);
    if (v17) {
  }
    }
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    uint64_t v20 = BDSCloudKitLog();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      sub_2361F5FC4(v10, v20, v21, v22, v23, v24, v25, v26);
    }
  }
}

void sub_2360C0A44(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id BDSErrorFromUnderlyingError(void *a1, int a2, void *a3)
{
  v20[1] = *MEMORY[0x263EF8340];
  uint64_t v19 = *MEMORY[0x263F08608];
  v20[0] = a3;
  uint64_t v5 = NSDictionary;
  id v6 = a3;
  id v7 = a1;
  uint64_t v12 = objc_msgSend_dictionaryWithObjects_forKeys_count_(v5, v8, (uint64_t)v20, (uint64_t)&v19, 1, v9, v10, v11);
  id v17 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v13, (uint64_t)v7, a2, (uint64_t)v12, v14, v15, v16);

  return v17;
}

uint64_t sub_2360C0BA4()
{
  qword_26AD77680 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

void sub_2360C112C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360C114C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = objc_msgSend_connectionDelegate(WeakRetained, v1, v2, v3, v4, v5, v6, v7);
  objc_msgSend_serviceDidRestart(v8, v9, v10, v11, v12, v13, v14, v15);
}

void sub_2360C1498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360C14D8()
{
  v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_INFO, "The connection to service was interrupted.", v1, 2u);
  }
}

void sub_2360C1540(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v18 = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "The connection to service was invalidated.", v18, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v10 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_setConnectionHealthy_(WeakRetained, v4, 0, v5, v6, v7, v8, v9);
    objc_msgSend_scheduleRestart(v10, v11, v12, v13, v14, v15, v16, v17);
  }
}

void sub_2360C15D4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_2361F609C();
  }
}

void sub_2360C16E8(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = BDSCloudKitLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v10 = 134217984;
      uint64_t v11 = 0x404E000000000000;
      _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "Attempting to re-form connection to XPC service %f seconds after invalidation.", (uint8_t *)&v10, 0xCu);
    }

    objc_msgSend_formXPCConnection(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  }
}

void sub_2360C185C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F609C();
  }

  uint64_t v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360C1998(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6104();
  }

  uint64_t v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360C1D5C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C1F10(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = BDSServiceLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_2361F61D4();
  }
}

uint64_t sub_2360C1F74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_signalFetchChangesTransaction_(a2, (const char *)a2, *(void *)(a1 + 32), a4, a5, a6, a7, a8);
}

void sub_2360C20B0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C23B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360C23D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360C23E4(uint64_t a1)
{
}

void sub_2360C23EC(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = sub_2360C2534;
  v22[3] = &unk_264CA0C90;
  uint64_t v24 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 40);
  id v23 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v5, v6, (uint64_t)v22, v7, v8, v9, v10, v11);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360C259C;
  v18[3] = &unk_264CA0CB8;
  id v19 = *(id *)(a1 + 48);
  int8x16_t v21 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  id v20 = *(id *)(a1 + 32);
  objc_msgSend_assetDetailsForAssetIDs_completion_(v12, v13, (uint64_t)v4, (uint64_t)v18, v14, v15, v16, v17);
}

void sub_2360C2534(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C259C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = *(void **)(a1 + 32);
  id v23 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v7;
  id v17 = v7;

  uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
  int8x16_t v21 = *(void **)(v18 + 40);
  id v19 = (id *)(v18 + 40);
  id v20 = v21;
  uint64_t v22 = v23;
  if (v21) {
    uint64_t v22 = v20;
  }
  objc_storeStrong(v19, v22);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_2360C2654(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C27F4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C2950(uint64_t a1)
{
  uint64_t v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    uint64_t v1 = v2;
  }
}

void sub_2360C2AEC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C2C84(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C2E34(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C3000(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C3304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C3334(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C3488;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C34FC;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_setAssetDetails_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C3488(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C34FC(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C35A4(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C3738(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C38CC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C3A58(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C3D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2360C3D7C(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = sub_2360C3EC4;
  v22[3] = &unk_264CA0C90;
  uint64_t v24 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 40);
  id v23 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v5, v6, (uint64_t)v22, v7, v8, v9, v10, v11);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360C3F2C;
  v18[3] = &unk_264CA0CB8;
  id v19 = *(id *)(a1 + 48);
  int8x16_t v21 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  id v20 = *(id *)(a1 + 32);
  objc_msgSend_readingNowDetailsForAssetIDs_completion_(v12, v13, (uint64_t)v4, (uint64_t)v18, v14, v15, v16, v17);
}

void sub_2360C3EC4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C3F2C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = *(void **)(a1 + 32);
  id v23 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v7;
  id v17 = v7;

  uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
  int8x16_t v21 = *(void **)(v18 + 40);
  id v19 = (id *)(v18 + 40);
  id v20 = v21;
  uint64_t v22 = v23;
  if (v21) {
    uint64_t v22 = v20;
  }
  objc_storeStrong(v19, v22);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_2360C3FE4(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C4140(uint64_t a1)
{
  uint64_t v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    uint64_t v1 = v2;
  }
}

void sub_2360C42DC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C4488(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C4794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C47C4(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C4918;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C498C;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_setReadingNowDetails_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C4918(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C498C(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C4A34(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C4BC8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C4D68(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C5068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2360C508C(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = sub_2360C51D4;
  v22[3] = &unk_264CA0C90;
  uint64_t v24 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 40);
  id v23 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v5, v6, (uint64_t)v22, v7, v8, v9, v10, v11);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360C523C;
  v18[3] = &unk_264CA0CB8;
  id v19 = *(id *)(a1 + 48);
  int8x16_t v21 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  id v20 = *(id *)(a1 + 32);
  objc_msgSend_assetReviewsForAssetReviewIDs_completion_(v12, v13, (uint64_t)v4, (uint64_t)v18, v14, v15, v16, v17);
}

void sub_2360C51D4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C523C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = *(void **)(a1 + 32);
  id v23 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v7;
  id v17 = v7;

  uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
  int8x16_t v21 = *(void **)(v18 + 40);
  id v19 = (id *)(v18 + 40);
  id v20 = v21;
  uint64_t v22 = v23;
  if (v21) {
    uint64_t v22 = v20;
  }
  objc_storeStrong(v19, v22);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_2360C52F4(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C54B0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C566C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C5820(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C59D0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C5B9C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C5EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C5ED0(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C6024;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C6098;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_setAssetReviews_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C6024(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C6098(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C6140(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C6308(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C660C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C663C(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C6790;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C6804;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_addStoreItems_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C6790(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C6804(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C68AC(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C6A70(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C6C2C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C6DC4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C6F74(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C7120(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C72C0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C75C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2360C75E4(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = sub_2360C772C;
  v22[3] = &unk_264CA0C90;
  uint64_t v24 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 40);
  id v23 = *(id *)(a1 + 32);
  uint64_t v12 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v5, v6, (uint64_t)v22, v7, v8, v9, v10, v11);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360C7794;
  v18[3] = &unk_264CA0CB8;
  id v19 = *(id *)(a1 + 48);
  int8x16_t v21 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  id v20 = *(id *)(a1 + 32);
  objc_msgSend_assetReviewsForAssetReviewIDs_completion_(v12, v13, (uint64_t)v4, (uint64_t)v18, v14, v15, v16, v17);
}

void sub_2360C772C(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C7794(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = *(void **)(a1 + 32);
  id v23 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v7;
  id v17 = v7;

  uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
  int8x16_t v21 = *(void **)(v18 + 40);
  id v19 = (id *)(v18 + 40);
  id v20 = v21;
  uint64_t v22 = v23;
  if (v21) {
    uint64_t v22 = v20;
  }
  objc_storeStrong(v19, v22);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_2360C784C(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C79A8(uint64_t a1)
{
  uint64_t v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    uint64_t v1 = v2;
  }
}

void sub_2360C7B4C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C7D10(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C7EA8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C8058(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C822C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C8530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C8560(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C86B4;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C8728;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_setCollectionDetails_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C86B4(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C8728(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C87D0(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C8978(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C8AD4(uint64_t a1)
{
  uint64_t v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    uint64_t v1 = v2;
  }
}

void sub_2360C8C78(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C8E3C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C8FD4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C917C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C932C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360C9500(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360C9804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_2360C9834(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  uint64_t v11 = objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7, v8, v9, v10);

  uint64_t v12 = *(void **)(a1 + 48);
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360C9988;
  v29[3] = &unk_264CA0D70;
  long long v31 = *(_OWORD *)(a1 + 56);
  id v30 = *(id *)(a1 + 32);
  id v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v12, v13, (uint64_t)v29, v14, v15, v16, v17, v18);
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360C99FC;
  v25[3] = &unk_264CA0D98;
  long long v27 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 72);
  id v26 = *(id *)(a1 + 32);
  objc_msgSend_setCollectionMembers_completion_(v19, v20, (uint64_t)v11, (uint64_t)v25, v21, v22, v23, v24);
}

void sub_2360C9988(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v4 + 40);
  id v5 = (id *)(v4 + 40);
  uint64_t v6 = v7;
  if (v7) {
    a2 = v6;
  }
  objc_storeStrong(v5, a2);
  id v8 = v2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C99FC(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v8 + 40);
  uint64_t v9 = (id *)(v8 + 40);
  uint64_t v10 = v11;
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = a4;
  }
  objc_storeStrong(v9, v12);
  id v17 = a4;
  uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(unsigned char *)(v13 + 24)) {
    char v14 = a2;
  }
  else {
    char v14 = 0;
  }
  *(unsigned char *)(v13 + 24) = v14;
  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
  if (*(unsigned char *)(v15 + 24)) {
    char v16 = 1;
  }
  else {
    char v16 = a3;
  }
  *(unsigned char *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2360C9AA4(uint64_t a1)
{
  id v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(void *, void, void, void))v2 + 2))(v2, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
    id v2 = v3;
  }
}

void sub_2360C9C4C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C9DD8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360C9FA4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_2360CA164(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_2360CA324(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_2360CA4BC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_2360CA644(uint64_t a1)
{
  uint64_t v6 = (void (**)(id, void, void *))_Block_copy(*(const void **)(a1 + 32));
  if (v6)
  {
    id v5 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v1, @"BDSErrorDomain", 1000, 0, v2, v3, v4);
    v6[2](v6, 0, v5);
  }
}

void sub_2360CA7BC(uint64_t a1)
{
  uint64_t v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    uint64_t v1 = v2;
  }
}

void sub_2360CA940(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360CAAE8(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360CAC8C(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360CAE2C(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360CB0AC(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, id))v3 + 2))(v3, 0, 0, v5);
  }
}

void sub_2360CB25C(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void, id, void))v3 + 2))(v3, 0, 0, 0, v5, 0);
  }
}

void sub_2360CB408(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360CB5A8(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, id))v3 + 2))(v3, 0, v5);
  }
}

void sub_2360CB760(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_2360CB920(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6280();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CBB00(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F631C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CBCF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F63B8();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CBEC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6454();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void, id))v5 + 2))(v5, 0, 0, v3);
  }
}

void sub_2360CC0B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F64F0();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void, void, id, void))v5 + 2))(v5, 0, 0, 0, v3, 0);
  }
}

void sub_2360CC2A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F658C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void, id))v5 + 2))(v5, 0, 0, v3);
  }
}

void sub_2360CC490(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6628();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void, id))v5 + 2))(v5, 0, 0, v3);
  }
}

void sub_2360CC65C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F66C4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CC820(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6760();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CC9E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F67FC();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CCBA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6898();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CCD80(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6934();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CCF7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F69D0();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CD14C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F69D0();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CD308(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6A6C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CD4F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6A6C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CD6E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6B08(a1, (uint64_t)v3, v4);
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CD8BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6BC4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CDA98(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6C60();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CDCA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6BC4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CDE78(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6CFC();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CE050(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6D98();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CE21C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6E34();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CE3E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6ED0();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CE5C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F6F6C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CE810(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7008();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

uint64_t sub_2360CE898(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_monitorServiceNotificationsWithChangeToken_completion_(a2, (const char *)a2, *(void *)(a1 + 32), *(void *)(a1 + 40), a5, a6, a7, a8);
}

void sub_2360CEA20(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F70A4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360CEBF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7140();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CEDD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F71DC();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360CEF90(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7278();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CF150(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7314();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CF2FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F73B0();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CF4A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F744C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CF650(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F74E8();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void))v5 + 2))(v5, 0, 0);
  }
}

void sub_2360CF7FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7584();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CF9A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7620();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CFB60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F76BC();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CFD08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7758();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360CFF4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F77F4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

uint64_t sub_2360CFFD4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_readingHistoryHandleSyncFileChangeWithSyncVersionInfo_updateInfo_completion_(a2, (const char *)a2, a1[4], a1[5], a1[6], a6, a7, a8);
}

void sub_2360D0140(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7890();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void))v5 + 2))(v5, 0);
  }
}

void sub_2360D0334(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F795C();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void))v5 + 2))(v5, 0, 0);
  }
}

void sub_2360D0510(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F79F8();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D071C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7B08();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360D0914(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7B08();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360D0B08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7B08();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D0D18(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7B08();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360D0F24(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7B08();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v3);
  }
}

void sub_2360D1130(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7BD8();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D1314(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7C74();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void, id))v5 + 2))(v5, 0, 0, v3);
  }
}

void sub_2360D1524(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7D10();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D16D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7DAC();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, void))v5 + 2))(v5, 0, 0);
  }
}

void sub_2360D18A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7E48();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D1A70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BDSServiceLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_2361F7EE4();
  }

  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, void, id))v5 + 2))(v5, 0, v3);
  }
}

void sub_2360D1C70(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_2360D1CD4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_2360D1D14(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x1Cu);
}

void sub_2360D1D4C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_2360D1D64(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_2360D1D84(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_2360D1DA4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t sub_2360D1DB0()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_2360D1DBC()
{
  return objc_opt_class();
}

uint64_t sub_2360D1DD4()
{
  return v0;
}

void sub_2360D1DEC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_2360D3440(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_2360D36B8(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

id sub_2360D376C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v7 = v6;
  if (v5 && v6)
  {
    id v8 = objc_alloc(MEMORY[0x263EFF8C0]);
    uint64_t v15 = objc_msgSend_initWithObjects_(v8, v9, (uint64_t)v5, v10, v11, v12, v13, v14, v7, 0);
    objc_msgSend_andPredicateWithSubpredicates_(MEMORY[0x263F08730], v16, (uint64_t)v15, v17, v18, v19, v20, v21);
    id v22 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (v5) {
      uint64_t v23 = v5;
    }
    else {
      uint64_t v23 = v6;
    }
    id v22 = v23;
  }

  return v22;
}

uint64_t sub_2360D381C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = (objc_class *)MEMORY[0x263EFF260];
  id v7 = a4;
  id v8 = a3;
  id v9 = objc_alloc_init(v6);
  uint64_t v15 = objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v10, (uint64_t)v8, (uint64_t)a1, v11, v12, v13, v14);

  objc_msgSend_setEntity_(v9, v16, (uint64_t)v15, v17, v18, v19, v20, v21);
  objc_msgSend_setPredicate_(v9, v22, (uint64_t)v7, v23, v24, v25, v26, v27);

  id v44 = 0;
  uint64_t Request_error = objc_msgSend_countForFetchRequest_error_(a1, v28, (uint64_t)v9, (uint64_t)&v44, v29, v30, v31, v32);
  id v34 = v44;
  uint64_t v42 = v34;
  if (v34) {
    objc_msgSend_logRecursively(v34, v35, v36, v37, v38, v39, v40, v41);
  }
  if (Request_error == 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t Request_error = 0;
  }

  return Request_error;
}

uint64_t sub_2360D3904(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, int a8)
{
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  context = (void *)MEMORY[0x237DFE9C0]();
  id v18 = objc_alloc_init(MEMORY[0x263EFF260]);
  uint64_t v24 = objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v19, (uint64_t)v15, (uint64_t)a1, v20, v21, v22, v23);
  objc_msgSend_setEntity_(v18, v25, (uint64_t)v24, v26, v27, v28, v29, v30);
  if (objc_msgSend_count(v14, v31, v32, v33, v34, v35, v36, v37) != 1) {
    goto LABEL_4;
  }
  objc_msgSend_objectAtIndex_(v14, v38, 0, v39, v40, v41, v42, v43);
  id v116 = v14;
  id v44 = v24;
  id v45 = v17;
  v46 = a1;
  int v47 = a8;
  id v48 = v16;
  id v49 = v15;
  v51 = uint64_t v50 = a7;
  int isEqualToString = objc_msgSend_isEqualToString_(v51, v52, @"objectID", v53, v54, v55, v56, v57);

  a7 = v50;
  id v15 = v49;
  id v16 = v48;
  a8 = v47;
  a1 = v46;
  id v17 = v45;
  uint64_t v24 = v44;
  id v14 = v116;
  if (isEqualToString)
  {
    objc_msgSend_setResultType_(v18, v38, 1, v39, v40, v41, v42, v43);
  }
  else
  {
LABEL_4:
    objc_msgSend_setPropertiesToFetch_(v18, v38, (uint64_t)v14, v39, v40, v41, v42, v43);
    objc_msgSend_setResultType_(v18, v65, 2, v66, v67, v68, v69, v70);
    if (a8) {
      objc_msgSend_setReturnsDistinctResults_(v18, v59, 1, v60, v61, v62, v63, v64);
    }
  }
  objc_msgSend_setPredicate_(v18, v59, (uint64_t)v16, v60, v61, v62, v63, v64);
  if (v17)
  {
    id v76 = objc_alloc(MEMORY[0x263F08B30]);
    uint64_t v82 = objc_msgSend_initWithKey_ascending_(v76, v77, (uint64_t)v17, a7, v78, v79, v80, v81);
    id v83 = objc_alloc(MEMORY[0x263EFF8C0]);
    uint64_t v90 = objc_msgSend_initWithObjects_(v83, v84, (uint64_t)v82, v85, v86, v87, v88, v89, 0);
    objc_msgSend_setSortDescriptors_(v18, v91, (uint64_t)v90, v92, v93, v94, v95, v96);
  }
  id v118 = 0;
  uint64_t v97 = objc_msgSend_executeFetchRequest_error_(a1, v71, (uint64_t)v18, (uint64_t)&v118, v72, v73, v74, v75);
  id v98 = v118;
  uint64_t v106 = v98;
  if (v98) {
    objc_msgSend_logRecursively(v98, v99, v100, v101, v102, v103, v104, v105);
  }

  uint64_t v114 = objc_msgSend_copy(v97, v107, v108, v109, v110, v111, v112, v113);

  return v114;
}

uint64_t sub_2360D3B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x270F9A6D0](a1, sel_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_distinct_, a3, a4, a5, a6, a7, 0);
}

uint64_t sub_2360D3B44(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v12 = (void *)MEMORY[0x263EFF8C0];
  id v13 = a6;
  id v14 = a5;
  id v15 = a4;
  uint64_t v22 = objc_msgSend_arrayWithObject_(v12, v16, a3, v17, v18, v19, v20, v21);
  uint64_t v25 = objc_msgSend_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_(a1, v23, (uint64_t)v22, (uint64_t)v15, (uint64_t)v14, (uint64_t)v13, a7, v24);

  return v25;
}

uint64_t sub_2360D3BF4(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v8 = objc_msgSend_copyEntityPropertyArray_fromEntityName_withPredicate_sortBy_ascending_(a1, a2, a3, a4, a5, 0, 0, a8);
  if (objc_msgSend_count(v8, v9, v10, v11, v12, v13, v14, v15) == 1
    || (unint64_t)objc_msgSend_count(v8, v16, v17, v18, v19, v20, v21, v22) >= 2)
  {
    uint64_t v23 = objc_msgSend_lastObject(v8, v16, v17, v18, v19, v20, v21, v22);
    uint64_t v31 = objc_msgSend_copy(v23, v24, v25, v26, v27, v28, v29, v30);
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v31 = objc_msgSend_copy(0, v16, v17, v18, v19, v20, v21, v22);
  }
  uint64_t v32 = v31;

  return v32;
}

uint64_t sub_2360D3C74(uint64_t a1, int a2, Class aClass)
{
  uint64_t v4 = (void *)MEMORY[0x263EFF240];
  id v5 = NSStringFromClass(aClass);
  uint64_t v11 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v4, v6, (uint64_t)v5, a1, v7, v8, v9, v10);

  return v11;
}

id sub_2360D3CD4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)MEMORY[0x237DFE9C0]();
  id v9 = objc_alloc_init(MEMORY[0x263EFF260]);
  uint64_t v15 = objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v10, (uint64_t)v7, (uint64_t)a1, v11, v12, v13, v14);
  objc_msgSend_setEntity_(v9, v16, (uint64_t)v15, v17, v18, v19, v20, v21);

  objc_msgSend_setPredicate_(v9, v22, (uint64_t)v6, v23, v24, v25, v26, v27);
  objc_msgSend_setResultType_(v9, v28, 1, v29, v30, v31, v32, v33);
  objc_msgSend_setIncludesPropertyValues_(v9, v34, 0, v35, v36, v37, v38, v39);
  id v56 = 0;
  id v45 = objc_msgSend_executeFetchRequest_error_(a1, v40, (uint64_t)v9, (uint64_t)&v56, v41, v42, v43, v44);
  id v46 = v56;
  uint64_t v54 = v46;
  if (v46) {
    objc_msgSend_logRecursively(v46, v47, v48, v49, v50, v51, v52, v53);
  }

  return v45;
}

id sub_2360D3DE8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = (void *)MEMORY[0x237DFE9C0]();
  id v9 = objc_alloc_init(MEMORY[0x263EFF260]);
  uint64_t v15 = objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v10, (uint64_t)v7, (uint64_t)a1, v11, v12, v13, v14);
  objc_msgSend_setEntity_(v9, v16, (uint64_t)v15, v17, v18, v19, v20, v21);

  objc_msgSend_setPredicate_(v9, v22, (uint64_t)v6, v23, v24, v25, v26, v27);
  objc_msgSend_setIncludesPropertyValues_(v9, v28, 1, v29, v30, v31, v32, v33);
  id v50 = 0;
  uint64_t v39 = objc_msgSend_executeFetchRequest_error_(a1, v34, (uint64_t)v9, (uint64_t)&v50, v35, v36, v37, v38);
  id v40 = v50;
  uint64_t v48 = v40;
  if (v40) {
    objc_msgSend_logRecursively(v40, v41, v42, v43, v44, v45, v46, v47);
  }

  return v39;
}

id sub_2360D3EF0(void *a1, uint64_t a2, void *a3, void *a4, void *a5, unint64_t a6, void *a7)
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a7;
  id v16 = (void *)MEMORY[0x237DFE9C0]();
  id v17 = objc_alloc_init(MEMORY[0x263EFF260]);
  uint64_t v23 = objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v18, (uint64_t)v12, (uint64_t)a1, v19, v20, v21, v22);
  objc_msgSend_setEntity_(v17, v24, (uint64_t)v23, v25, v26, v27, v28, v29);

  objc_msgSend_setPredicate_(v17, v30, (uint64_t)v13, v31, v32, v33, v34, v35);
  objc_msgSend_setSortDescriptors_(v17, v36, (uint64_t)v14, v37, v38, v39, v40, v41);
  if (objc_msgSend_count(v15, v42, v43, v44, v45, v46, v47, v48)) {
    objc_msgSend_setRelationshipKeyPathsForPrefetching_(v17, v49, (uint64_t)v15, v50, v51, v52, v53, v54);
  }
  if (a6)
  {
    if (a6 <= 0xA) {
      objc_msgSend_setReturnsObjectsAsFaults_(v17, v49, 0, v50, v51, v52, v53, v54);
    }
    objc_msgSend_setFetchLimit_(v17, v49, a6, v50, v51, v52, v53, v54);
  }
  else
  {
    objc_msgSend_setFetchBatchSize_(v17, v49, 100, v50, v51, v52, v53, v54);
  }
  id v71 = 0;
  uint64_t v60 = objc_msgSend_executeFetchRequest_error_(a1, v55, (uint64_t)v17, (uint64_t)&v71, v56, v57, v58, v59);
  id v61 = v71;
  uint64_t v69 = v61;
  if (v61) {
    objc_msgSend_logRecursively(v61, v62, v63, v64, v65, v66, v67, v68);
  }

  return v60;
}

id sub_2360D4078(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14 = a3;
  id v15 = a4;
  id v18 = a8;
  if (a5)
  {
    uint64_t v19 = (objc_class *)MEMORY[0x263F08B30];
    id v20 = a5;
    id v21 = [v19 alloc];
    uint64_t v27 = objc_msgSend_initWithKey_ascending_(v21, v22, (uint64_t)v20, a6, v23, v24, v25, v26);

    id v28 = objc_alloc(MEMORY[0x263EFF8C0]);
    uint64_t v35 = objc_msgSend_initWithObjects_(v28, v29, (uint64_t)v27, v30, v31, v32, v33, v34, 0);
  }
  else
  {
    uint64_t v35 = 0;
  }
  uint64_t v36 = objc_msgSend_entity_withPredicate_sortDescriptors_fetchLimit_prefetchRelationships_(a1, v16, (uint64_t)v14, (uint64_t)v15, (uint64_t)v35, a7, (uint64_t)v18, v17);

  return v36;
}

uint64_t sub_2360D4184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x270F9A6D0](a1, sel_entity_withPredicate_sortBy_ascending_fetchLimit_prefetchRelationships_, a3, a4, a5, a6, a7, 0);
}

uint64_t sub_2360D418C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](a1, sel_entity_withPredicate_sortBy_ascending_fetchLimit_, a3, a4, 0, 0, 0, a8);
}

void sub_2360D41A4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3;
  objc_msgSend_im_pushSafeAccessState(a1, v5, v6, v7, v8, v9, v10, v11);
  v4[2](v4);
  objc_msgSend_im_popSafeAccessState(a1, v12, v13, v14, v15, v16, v17, v18);
}

void sub_2360D4244(_Unwind_Exception *a1)
{
}

void sub_2360D425C(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x2360D4340);
}

void sub_2360D4264(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2)
  {
    if (a2 == 2)
    {
      id v9 = objc_begin_catch(exc_buf);
      uint64_t v17 = objc_msgSend_name(v9, v10, v11, v12, v13, v14, v15, v16);
      int isEqualToString = objc_msgSend_isEqualToString_(v17, v18, *MEMORY[0x263F08418], v19, v20, v21, v22, v23);

      if (isEqualToString)
      {
        uint64_t v25 = BDSCloudKitLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
        {
          LODWORD(a9) = 138412290;
          *(void *)((char *)&a9 + 4) = v9;
          _os_log_impl(&dword_2360BC000, v25, OS_LOG_TYPE_INFO, "Handled Exception {%@}", (uint8_t *)&a9, 0xCu);
        }

        objc_end_catch();
        JUMPOUT(0x2360D41F4);
      }
      objc_exception_throw(v9);
    }
    objc_begin_catch(exc_buf);
    JUMPOUT(0x2360D41F8);
  }
  _Unwind_Resume(exc_buf);
}

void sub_2360D431C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x2360D432CLL);
  }
  _Unwind_Resume(a1);
}

void sub_2360D4348(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = (void *)MEMORY[0x237DFE9C0]();
  uint64_t v17 = objc_msgSend_unbatchedObjectsWithPredicate_forEntity_(a1, v12, (uint64_t)v9, (uint64_t)v8, v13, v14, v15, v16);
  uint64_t v35 = 0;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x2020000000;
  int v38 = 0;
  v31[0] = MEMORY[0x263EF8330];
  v31[1] = 3221225472;
  v31[2] = sub_2360D4498;
  v31[3] = &unk_264CA1088;
  id v18 = v17;
  id v32 = v18;
  uint64_t v33 = a1;
  uint64_t v34 = &v35;
  objc_msgSend_im_performSafeAccess_(a1, v19, (uint64_t)v31, v20, v21, v22, v23, v24);
  if (*((_DWORD *)v36 + 6)) {
    objc_msgSend_save_(a1, v25, 0, v26, v27, v28, v29, v30);
  }

  _Block_object_dispose(&v35, 8);
}

void sub_2360D4480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2360D4498(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v18, (uint64_t)v22, 16, v4, v5, v6);
  if (v7)
  {
    uint64_t v14 = v7;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend_deleteObject_(*(void **)(a1 + 40), v8, *(void *)(*((void *)&v18 + 1) + 8 * v16), v9, v10, v11, v12, v13, (void)v18);
        ++*(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
        uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8);
        if (*(_DWORD *)(v17 + 24) == 100)
        {
          *(_DWORD *)(v17 + 24) = 0;
          objc_msgSend_save_(*(void **)(a1 + 40), v8, 0, v9, v10, v11, v12, v13);
        }
        ++v16;
      }
      while (v14 != v16);
      uint64_t v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v8, (uint64_t)&v18, (uint64_t)v22, 16, v11, v12, v13);
    }
    while (v14);
  }
}

uint64_t sub_2360D45C4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x263EFFA08];
  id v5 = a3;
  uint64_t v13 = objc_msgSend_persistentStores(a1, v6, v7, v8, v9, v10, v11, v12);
  long long v20 = objc_msgSend_valueForKey_(v13, v14, @"URL", v15, v16, v17, v18, v19);
  uint64_t v27 = objc_msgSend_setWithArray_(v4, v21, (uint64_t)v20, v22, v23, v24, v25, v26);

  uint64_t v28 = (void *)MEMORY[0x263EFFA08];
  uint64_t v36 = objc_msgSend_persistentStores(v5, v29, v30, v31, v32, v33, v34, v35);

  uint64_t v43 = objc_msgSend_valueForKey_(v36, v37, @"URL", v38, v39, v40, v41, v42);
  uint64_t v50 = objc_msgSend_setWithArray_(v28, v44, (uint64_t)v43, v45, v46, v47, v48, v49);

  uint64_t v57 = objc_msgSend_intersectsSet_(v27, v51, (uint64_t)v50, v52, v53, v54, v55, v56);
  return v57;
}

void sub_2360D4A98(void **a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_zoneDataManager(a1[4], a2, a3, a4, a5, a6, a7, a8);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360D4B64;
  v18[3] = &unk_264CA10D8;
  id v10 = a1[5];
  uint64_t v11 = a1[4];
  id v19 = v10;
  long long v20 = v11;
  id v21 = a1[6];
  id v22 = a1[7];
  objc_msgSend_dissociateCloudDataFromSyncWithCompletion_(v9, v12, (uint64_t)v18, v13, v14, v15, v16, v17);
}

void sub_2360D4B64(uint64_t a1, int a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v29 = v7;
    __int16 v30 = 1024;
    int v31 = a2;
    __int16 v32 = 2112;
    id v33 = v5;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (a2)
  {
    uint64_t v15 = objc_msgSend_tokenController(*(void **)(a1 + 40), v8, v9, v10, v11, v12, v13, v14);
    uint64_t v16 = *(void *)(a1 + 48);
    v25[0] = MEMORY[0x263EF8330];
    v25[1] = 3221225472;
    v25[2] = sub_2360D4D2C;
    v25[3] = &unk_264CA10B0;
    id v26 = *(id *)(a1 + 32);
    id v27 = *(id *)(a1 + 56);
    objc_msgSend_updateSaltVersionIdentifier_completion_(v15, v17, v16, (uint64_t)v25, v18, v19, v20, v21);

    id v22 = v26;
  }
  else
  {
    uint64_t v23 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_2361F8220(a1, (uint64_t)v5, v23);
    }

    uint64_t v24 = _Block_copy(*(const void **)(a1 + 56));
    id v22 = v24;
    if (v24) {
      (*((void (**)(void *, void))v24 + 2))(v24, 0);
    }
  }
}

void sub_2360D4D2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 1024;
    int v13 = a2;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  uint64_t v8 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(void *, uint64_t))v8 + 2))(v8, a2);
  }
}

void sub_2360D4E2C(uint64_t a1, int a2, void *a3)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v50 = v7;
    __int16 v51 = 1024;
    int v52 = a2;
    __int16 v53 = 2112;
    id v54 = v5;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (v5)
  {
    if (objc_msgSend_code(v5, v8, v9, v10, v11, v12, v13, v14) == 1003)
    {
      id v22 = objc_msgSend_zoneDataManager(*(void **)(a1 + 40), v15, v16, v17, v18, v19, v20, v21);
      v43[0] = MEMORY[0x263EF8330];
      v43[1] = 3221225472;
      v43[2] = sub_2360D5158;
      v43[3] = &unk_264CA1128;
      id v44 = *(id *)(a1 + 32);
      id v23 = *(id *)(a1 + 56);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void **)(a1 + 48);
      id v47 = v23;
      uint64_t v45 = v24;
      id v46 = v25;
      id v48 = *(id *)(a1 + 64);
      objc_msgSend_hasSaltChangedWithCompletion_(v22, v26, (uint64_t)v43, v27, v28, v29, v30, v31);

      goto LABEL_24;
    }
    uint64_t v35 = objc_msgSend_code(v5, v15, v16, v17, v18, v19, v20, v21);
    uint64_t v36 = BDSCloudKitSyncLog();
    BOOL v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);
    if (v35 == 1006)
    {
      if (v37)
      {
        uint64_t v38 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        uint64_t v50 = v38;
        _os_log_impl(&dword_2360BC000, v36, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError ", buf, 0xCu);
      }

LABEL_14:
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      goto LABEL_24;
    }
    if (v37)
    {
      uint64_t v40 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v50 = v40;
      _os_log_impl(&dword_2360BC000, v36, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing", buf, 0xCu);
    }
  }
  else
  {
    __int16 v32 = BDSCloudKitSyncLog();
    BOOL v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);
    if (a2)
    {
      if (v33)
      {
        uint64_t v34 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        uint64_t v50 = v34;
        _os_log_impl(&dword_2360BC000, v32, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate", buf, 0xCu);
      }

      goto LABEL_14;
    }
    if (v33)
    {
      uint64_t v39 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v50 = v39;
      _os_log_impl(&dword_2360BC000, v32, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.", buf, 0xCu);
    }
  }
  uint64_t v41 = _Block_copy(*(const void **)(a1 + 64));
  uint64_t v42 = v41;
  if (v41) {
    (*((void (**)(void *, uint64_t))v41 + 2))(v41, 1);
  }

LABEL_24:
}

void sub_2360D5158(uint64_t a1, int a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = BDSCloudKitLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    uint64_t v30 = v7;
    __int16 v31 = 1024;
    int v32 = a2;
    __int16 v33 = 2112;
    id v34 = v5;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_ERROR, "[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@", buf, 0x1Cu);
  }

  if (v5 || !a2)
  {
    if (v5 || (a2 & 1) != 0)
    {
      id v22 = BDSCloudKitSyncLog();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v23 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412802;
        uint64_t v30 = v23;
        __int16 v31 = 1024;
        int v32 = a2;
        __int16 v33 = 2112;
        id v34 = v5;
        _os_log_impl(&dword_2360BC000, v22, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@", buf, 0x1Cu);
      }

      uint64_t v24 = _Block_copy(*(const void **)(a1 + 64));
      uint64_t v25 = v24;
      if (v24) {
        (*((void (**)(void *, uint64_t))v24 + 2))(v24, 1);
      }
    }
    else
    {
      id v15 = objc_msgSend_tokenController(*(void **)(a1 + 40), v8, v9, v10, v11, v12, v13, v14);
      uint64_t v16 = *(void *)(a1 + 48);
      v26[0] = MEMORY[0x263EF8330];
      v26[1] = 3221225472;
      v26[2] = sub_2360D5380;
      v26[3] = &unk_264CA10B0;
      id v27 = *(id *)(a1 + 32);
      id v28 = *(id *)(a1 + 64);
      objc_msgSend_updateSaltVersionIdentifier_completion_(v15, v17, v16, (uint64_t)v26, v18, v19, v20, v21);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_2360D5380(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v6 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 1024;
    int v13 = a2;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  uint64_t v8 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(void *, uint64_t))v8 + 2))(v8, a2);
  }
}

uint64_t sub_2360D564C()
{
  qword_26AD77688 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D62F0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  objc_msgSend_valueForKey_(a1, v8, (uint64_t)v7, v9, v10, v11, v12, v13);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v21 = v14;
  if (v14 == v6 || (objc_msgSend_isEqual_(v14, v15, (uint64_t)v6, v16, v17, v18, v19, v20) & 1) != 0)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v23 = BUDynamicCast();
    objc_msgSend_setValue_forKey_(a1, v24, (uint64_t)v23, (uint64_t)v7, v25, v26, v27, v28);

    uint64_t v22 = 1;
  }

  return v22;
}

BOOL sub_2360D63A8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  objc_msgSend_valueForKey_(a1, v8, (uint64_t)v7, v9, v10, v11, v12, v13);
  id v19 = (id)objc_claimAutoreleasedReturnValue();
  if (v19 != v6) {
    objc_msgSend_setValue_forKey_(a1, v14, (uint64_t)v6, (uint64_t)v7, v15, v16, v17, v18);
  }

  return v19 != v6;
}

uint64_t sub_2360D6428(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = objc_opt_class();
  uint64_t v13 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8, v10, v11, v12);

  return v13;
}

uint64_t sub_2360D6498(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = objc_opt_class();
  uint64_t v13 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8, v10, v11, v12);

  return v13;
}

uint64_t sub_2360D6508(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a4;
  id v7 = a3;
  uint64_t v8 = objc_opt_class();
  uint64_t v13 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8, v10, v11, v12);

  return v13;
}

id sub_2360D6578(void *a1, uint64_t a2, void *a3)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v4 = a3;
  uint64_t v12 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], v5, v6, v7, v8, v9, v10, v11);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v13 = v4;
  uint64_t v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v36, (uint64_t)v40, 16, v15, v16, v17);
  if (v18)
  {
    uint64_t v25 = v18;
    uint64_t v26 = *(void *)v37;
    do
    {
      for (uint64_t i = 0; i != v25; ++i)
      {
        if (*(void *)v37 != v26) {
          objc_enumerationMutation(v13);
        }
        uint64_t v28 = *(void *)(*((void *)&v36 + 1) + 8 * i);
        id v34 = objc_msgSend_valueForKey_(a1, v19, v28, v20, v21, v22, v23, v24, (void)v36);
        if (v34) {
          objc_msgSend_setObject_forKey_(v12, v29, (uint64_t)v34, v28, v30, v31, v32, v33);
        }
      }
      uint64_t v25 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v19, (uint64_t)&v36, (uint64_t)v40, 16, v22, v23, v24);
    }
    while (v25);
  }

  return v12;
}

uint64_t sub_2360D6810()
{
  qword_26AD77628 = objc_alloc_init(BDSBookWidgetReadingHistoryDataFile);
  return MEMORY[0x270F9A758]();
}

void sub_2360D6CA8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = objc_msgSend_books(MEMORY[0x263F2BA40], a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_containerURL(v8, v9, v10, v11, v12, v13, v14, v15);

  uint64_t v22 = objc_msgSend_URLByAppendingPathComponent_isDirectory_(v16, v17, @"Library/Application Support/bookdatastored", 1, v18, v19, v20, v21);
  uint64_t v29 = objc_msgSend_URLByAppendingPathComponent_(v22, v23, @"currentWidgetReadingHistoryData.plist", v24, v25, v26, v27, v28);
  uint64_t v30 = (void *)qword_268854AA0;
  qword_268854AA0 = v29;

  long long v38 = objc_msgSend_defaultManager(MEMORY[0x263F08850], v31, v32, v33, v34, v35, v36, v37);
  id v45 = 0;
  char DirectoryAtURL_withIntermediateDirectories_attributes_error = objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(v38, v39, (uint64_t)v22, 1, 0, (uint64_t)&v45, v40, v41);
  id v43 = v45;

  if ((DirectoryAtURL_withIntermediateDirectories_attributes_error & 1) == 0)
  {
    id v44 = BDSWidgetLog();
    if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR)) {
      sub_2361F849C();
    }
  }
}

uint64_t sub_2360D7550()
{
  qword_26AD76110 = objc_alloc_init(BDSJaliscoDAAPClient);
  return MEMORY[0x270F9A758]();
}

void sub_2360D78B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setFamilyUpdateInProgress_(*(void **)(a1 + 32), a2, 0, a4, a5, a6, a7, a8);
  uint64_t v10 = _Block_copy(*(const void **)(a1 + 40));
  if (v10)
  {
    id v11 = v10;
    (*((void (**)(void *, const char *))v10 + 2))(v10, a2);
    uint64_t v10 = v11;
  }
}

void sub_2360D7A08(uint64_t a1, uint64_t a2, void *a3)
{
  id v13 = a3;
  objc_msgSend_setFamilyUpdateInProgress_(*(void **)(a1 + 32), v5, 0, v6, v7, v8, v9, v10);
  id v11 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v12 = v11;
  if (v11) {
    (*((void (**)(void *, uint64_t, id))v11 + 2))(v11, a2, v13);
  }
}

uint64_t sub_2360D8F4C()
{
  qword_26AD776D8 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit");
  return MEMORY[0x270F9A758]();
}

id BDSCloudKitDevelopmentLog()
{
  if (qword_268854AB8 != -1) {
    dispatch_once(&qword_268854AB8, &unk_26E9719F0);
  }
  uint64_t v0 = (void *)qword_268854AB0;
  return v0;
}

uint64_t sub_2360D8FE4()
{
  qword_268854AB0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit.Development");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D9028()
{
  qword_26AD760F8 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitSync");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D906C()
{
  qword_26AD775E0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitAudiobook");
  return MEMORY[0x270F9A758]();
}

id BDSPriceTrackingLog()
{
  if (qword_268854AC8 != -1) {
    dispatch_once(&qword_268854AC8, &unk_26E971A50);
  }
  uint64_t v0 = (void *)qword_268854AC0;
  return v0;
}

uint64_t sub_2360D9104()
{
  qword_268854AC0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.PriceTracking");
  return MEMORY[0x270F9A758]();
}

id BDSServiceCenterLog()
{
  if (qword_268854AD8 != -1) {
    dispatch_once(&qword_268854AD8, &unk_26E971A70);
  }
  uint64_t v0 = (void *)qword_268854AD0;
  return v0;
}

uint64_t sub_2360D919C()
{
  qword_268854AD0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.ServiceCenter");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D91E0()
{
  qword_26AD775A0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D9224()
{
  qword_26AD775B0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service.XPCNotification");
  return MEMORY[0x270F9A758]();
}

id BDSArtworkImporterLog()
{
  if (qword_268854AE8 != -1) {
    dispatch_once(&qword_268854AE8, &unk_26E971AD0);
  }
  uint64_t v0 = (void *)qword_268854AE0;
  return v0;
}

uint64_t sub_2360D92BC()
{
  qword_268854AE0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.ArtworkImporter");
  return MEMORY[0x270F9A758]();
}

id BDSCtlLog()
{
  if (qword_268854AF8 != -1) {
    dispatch_once(&qword_268854AF8, &unk_26E971AF0);
  }
  uint64_t v0 = (void *)qword_268854AF0;
  return v0;
}

uint64_t sub_2360D9354()
{
  qword_268854AF0 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.BDSCtl");
  return MEMORY[0x270F9A758]();
}

id BDSWidgetLog()
{
  if (qword_268854B08 != -1) {
    dispatch_once(&qword_268854B08, &unk_26E971B10);
  }
  uint64_t v0 = (void *)qword_268854B00;
  return v0;
}

uint64_t sub_2360D93EC()
{
  qword_268854B00 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Widget");
  return MEMORY[0x270F9A758]();
}

id BDSUbiquityLog()
{
  if (qword_268854B18 != -1) {
    dispatch_once(&qword_268854B18, &unk_26E971B30);
  }
  uint64_t v0 = (void *)qword_268854B10;
  return v0;
}

uint64_t sub_2360D9484()
{
  qword_268854B10 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Ubiquity");
  return MEMORY[0x270F9A758]();
}

id BDSMediaLibraryLog()
{
  if (qword_268854B28 != -1) {
    dispatch_once(&qword_268854B28, &unk_26E971B50);
  }
  uint64_t v0 = (void *)qword_268854B20;
  return v0;
}

uint64_t sub_2360D951C()
{
  qword_268854B20 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.MediaLibrary");
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360D99C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](BDSSyncUserDefaults, sel__stateForLog, a3, a4, a5, a6, a7, a8);
}

void *sub_2360D9FE0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3) {
    return objc_msgSend_addObject_(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return a1;
}

void sub_2360DB0B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  uint64_t v6 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(void *, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_2360DB22C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

BOOL BCAnnotationRangeReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 1) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
          {
            uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_38;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v17 += 7;
          BOOL v23 = v18++ > 8;
          if (v23)
          {
            uint64_t v19 = 0;
            uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_41;
          }
        }
        uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__length;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_41:
        *(void *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v25 = 0;
    unsigned int v26 = 0;
    uint64_t v19 = 0;
    while (1)
    {
      uint64_t v27 = *v3;
      unint64_t v28 = *(void *)(a2 + v27);
      if (v28 == -1 || v28 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
      *(void *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_39;
      }
      v25 += 7;
      BOOL v23 = v26++ > 8;
      if (v23)
      {
        uint64_t v19 = 0;
        uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_41;
      }
    }
    uint64_t v24 = &OBJC_IVAR___BCAnnotationRange__location;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_2360DE814(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    unsigned int v9 = objc_msgSend_sharedManager(BCCloudCollectionsManager, a2, a3, a4, a5, a6, a7, a8);
    char v17 = objc_msgSend_collectionMemberManager(v9, v10, v11, v12, v13, v14, v15, v16);

    unsigned int v18 = *(void **)(a1 + 56);
    uint64_t v19 = *(void **)(a1 + 40);
    v33[0] = MEMORY[0x263EF8330];
    v33[1] = 3221225472;
    v33[2] = sub_2360DE970;
    v33[3] = &unk_264CA12F0;
    id v34 = v19;
    id v35 = *(id *)(a1 + 32);
    id v36 = v17;
    id v37 = *(id *)(a1 + 48);
    id v20 = v17;
    objc_msgSend__nextSortOrderForCollectionMemberManager_collectionID_completion_(v18, v21, (uint64_t)v20, (uint64_t)v34, (uint64_t)v33, v22, v23, v24);
  }
  else
  {
    char v25 = BDSServiceCenterLog();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_2361F8CC4(a1, v25, v26, v27, v28, v29, v30, v31);
    }

    uint64_t v32 = _Block_copy(*(const void **)(a1 + 48));
    id v20 = v32;
    if (v32) {
      (*((void (**)(void *, void))v32 + 2))(v32, 0);
    }
  }
}

void sub_2360DE970(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10 = objc_msgSend_collectionMemberIDWithCollectionID_assetID_(BCCollectionMember, a2, *(void *)(a1 + 32), *(void *)(a1 + 40), a5, a6, a7, a8);
  uint64_t v11 = [BCMutableCollectionMember alloc];
  unsigned int v18 = objc_msgSend_initWithCollectionMemberID_(v11, v12, (uint64_t)v10, v13, v14, v15, v16, v17);
  objc_msgSend_setSortOrder_(v18, v19, (uint64_t)a2, v20, v21, v22, v23, v24);
  objc_msgSend_setDeletedFlag_(v18, v25, 0, v26, v27, v28, v29, v30);
  v37[0] = MEMORY[0x263EF8330];
  v37[1] = 3221225472;
  v37[2] = sub_2360DEA58;
  v37[3] = &unk_264CA12C8;
  uint64_t v31 = *(void **)(a1 + 48);
  id v38 = *(id *)(a1 + 56);
  objc_msgSend_setCollectionMember_completion_(v31, v32, (uint64_t)v18, (uint64_t)v37, v33, v34, v35, v36);
}

void sub_2360DEA58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (v6)
  {
    id v7 = BDSServiceCenterLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_2361F8D34();
    }
  }
  char v8 = _Block_copy(*(const void **)(a1 + 32));
  unsigned int v9 = v8;
  if (v8) {
    (*((void (**)(void *, uint64_t))v8 + 2))(v8, a2);
  }
}

void sub_2360DEBD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v13 = a3;
  if (v13)
  {
    uint64_t v14 = BDSServiceCenterLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_2361F8D9C();
    }
  }
  if (v5) {
    uint64_t v15 = objc_msgSend_deletedFlag(v5, v6, v7, v8, v9, v10, v11, v12) ^ 1;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v17 = v16;
  if (v16) {
    (*((void (**)(void *, uint64_t))v16 + 2))(v16, v15);
  }
}

void sub_2360DEEBC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v9 = objc_msgSend_sharedManager(BCCloudAssetManager, a2, a3, a4, a5, a6, a7, a8);
    uint64_t v17 = objc_msgSend_assetDetailManager(v9, v10, v11, v12, v13, v14, v15, v16);

    unsigned int v18 = *(void **)(a1 + 40);
    v34[0] = MEMORY[0x263EF8330];
    v34[1] = 3221225472;
    v34[2] = sub_2360DF000;
    v34[3] = &unk_264CA1368;
    id v19 = v18;
    char v38 = *(unsigned char *)(a1 + 56);
    id v35 = v19;
    id v36 = v17;
    id v37 = *(id *)(a1 + 48);
    id v20 = v17;
    objc_msgSend_assetDetailsForAssetIDs_completion_(v20, v21, (uint64_t)v19, (uint64_t)v34, v22, v23, v24, v25);
  }
  else
  {
    BDSServiceCenterLog();
    uint64_t v26 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR)) {
      sub_2361F8E04(a1, v26, v27, v28, v29, v30, v31, v32);
    }

    uint64_t v33 = _Block_copy(*(const void **)(a1 + 48));
    id v20 = v33;
    if (v33) {
      (*((void (**)(void *, void))v33 + 2))(v33, 0);
    }
  }
}

void sub_2360DF000(uint64_t a1, void *a2)
{
  uint64_t v152 = *MEMORY[0x263EF8340];
  id v3 = (objc_class *)MEMORY[0x263EFF9A0];
  id v4 = a2;
  id v5 = objc_alloc_init(v3);
  uint64_t v13 = objc_msgSend_bu_arrayByRemovingNSNulls(v4, v6, v7, v8, v9, v10, v11, v12);

  long long v148 = 0u;
  long long v149 = 0u;
  long long v146 = 0u;
  long long v147 = 0u;
  id v14 = v13;
  uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v15, (uint64_t)&v146, (uint64_t)v151, 16, v16, v17, v18);
  if (v19)
  {
    uint64_t v27 = v19;
    uint64_t v28 = *(void *)v147;
    do
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        if (*(void *)v147 != v28) {
          objc_enumerationMutation(v14);
        }
        uint64_t v30 = *(void **)(*((void *)&v146 + 1) + 8 * i);
        uint64_t v31 = objc_msgSend_assetID(v30, v20, v21, v22, v23, v24, v25, v26);
        objc_msgSend_setObject_forKeyedSubscript_(v5, v32, (uint64_t)v30, (uint64_t)v31, v33, v34, v35, v36);
      }
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v20, (uint64_t)&v146, (uint64_t)v151, 16, v24, v25, v26);
    }
    while (v27);
  }

  long long v144 = 0u;
  long long v145 = 0u;
  long long v142 = 0u;
  long long v143 = 0u;
  id v37 = *(id *)(a1 + 32);
  uint64_t v42 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v38, (uint64_t)&v142, (uint64_t)v150, 16, v39, v40, v41);
  if (v42)
  {
    uint64_t v49 = v42;
    uint64_t v50 = *(void *)v143;
    do
    {
      for (uint64_t j = 0; j != v49; ++j)
      {
        if (*(void *)v143 != v50) {
          objc_enumerationMutation(v37);
        }
        uint64_t v52 = *(void *)(*((void *)&v142 + 1) + 8 * j);
        uint64_t v59 = objc_msgSend_objectForKeyedSubscript_(v5, v43, v52, v44, v45, v46, v47, v48);
        if (!v59)
        {
          uint64_t v60 = [BCMutableAssetDetail alloc];
          uint64_t v59 = objc_msgSend_initWithAssetID_(v60, v61, v52, v62, v63, v64, v65, v66);
          uint64_t v74 = objc_msgSend_date(MEMORY[0x263EFF910], v67, v68, v69, v70, v71, v72, v73);
          objc_msgSend_setDateFinished_(v59, v75, (uint64_t)v74, v76, v77, v78, v79, v80);

          objc_msgSend_setObject_forKeyedSubscript_(v5, v81, (uint64_t)v59, v52, v82, v83, v84, v85);
        }
        if (*(unsigned char *)(a1 + 56))
        {
          objc_msgSend_setIsFinished_(v59, v53, 1, v54, v55, v56, v57, v58);
          objc_msgSend_setNotFinished_(v59, v86, 0, v87, v88, v89, v90, v91);
          uint64_t v99 = objc_msgSend_dateFinished(v59, v92, v93, v94, v95, v96, v97, v98);

          if (!v99)
          {
            uint64_t v114 = objc_msgSend_lastOpenDate(v59, v100, v101, v102, v103, v104, v105, v106);
            if (v114)
            {
              objc_msgSend_setDateFinished_(v59, v107, (uint64_t)v114, v109, v110, v111, v112, v113);
            }
            else
            {
              uint64_t v127 = objc_msgSend_date(MEMORY[0x263EFF910], v107, v108, v109, v110, v111, v112, v113);
              objc_msgSend_setDateFinished_(v59, v128, (uint64_t)v127, v129, v130, v131, v132, v133);
            }
          }
        }
        else
        {
          objc_msgSend_setIsFinished_(v59, v53, 0, v54, v55, v56, v57, v58);
          objc_msgSend_setNotFinished_(v59, v115, 1, v116, v117, v118, v119, v120);
          objc_msgSend_setDateFinished_(v59, v121, 0, v122, v123, v124, v125, v126);
        }
      }
      uint64_t v49 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v43, (uint64_t)&v142, (uint64_t)v150, 16, v46, v47, v48);
    }
    while (v49);
  }

  v140[0] = MEMORY[0x263EF8330];
  v140[1] = 3221225472;
  v140[2] = sub_2360DF35C;
  v140[3] = &unk_264CA12C8;
  uint64_t v134 = *(void **)(a1 + 40);
  id v141 = *(id *)(a1 + 48);
  objc_msgSend_setAssetDetails_completion_(v134, v135, (uint64_t)v5, (uint64_t)v140, v136, v137, v138, v139);
}

void sub_2360DF35C(uint64_t a1, uint64_t a2)
{
  id v3 = _Block_copy(*(const void **)(a1 + 32));
  if (v3)
  {
    id v4 = v3;
    (*((void (**)(void *, uint64_t))v3 + 2))(v3, a2);
    id v3 = v4;
  }
}

void sub_2360DF498(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = BDSServiceCenterLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_2361F8E9C();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_2360E0C9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_transactionNameForEntityName_(BCCloudKitDataChangedTransaction, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);
  objc_msgSend_objectForKey_(v9, v17, (uint64_t)v16, v18, v19, v20, v21, v22);
  id v63 = (id)objc_claimAutoreleasedReturnValue();

  if (!v63)
  {
    uint64_t v30 = [BCCloudKitDataChangedTransaction alloc];
    id v63 = (id)objc_msgSend_initWithEntityName_notificationName_delegate_(v30, v31, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 32), v32, v33, v34);
    uint64_t v42 = objc_msgSend_transactions(*(void **)(a1 + 32), v35, v36, v37, v38, v39, v40, v41);
    uint64_t v50 = objc_msgSend_transactionName(v63, v43, v44, v45, v46, v47, v48, v49);
    objc_msgSend_setObject_forKey_(v42, v51, (uint64_t)v63, (uint64_t)v50, v52, v53, v54, v55);
  }
  objc_msgSend_clientConnected(v63, v23, v24, v25, v26, v27, v28, v29);
  objc_msgSend_signal(v63, v56, v57, v58, v59, v60, v61, v62);
}

void sub_2360E0E94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_transactionNameForEntityName_(BCCloudKitSyncToCKTransaction, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);
  uint64_t v23 = objc_msgSend_objectForKey_(v9, v17, (uint64_t)v16, v18, v19, v20, v21, v22);

  uint64_t v31 = objc_msgSend_transactionName(v23, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v39 = (void *)v31;
  if (v23)
  {
    uint64_t v40 = (void *)v31;
  }
  else
  {
    uint64_t v41 = [BCCloudKitSyncToCKTransaction alloc];
    uint64_t v23 = objc_msgSend_initWithEntityName_syncManager_delegate_(v41, v42, *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 32), v43, v44, v45);
    uint64_t v40 = objc_msgSend_transactionName(v23, v46, v47, v48, v49, v50, v51, v52);

    uint64_t v60 = objc_msgSend_transactions(*(void **)(a1 + 32), v53, v54, v55, v56, v57, v58, v59);
    objc_msgSend_setObject_forKey_(v60, v61, (uint64_t)v23, (uint64_t)v40, v62, v63, v64, v65);

    id v66 = objc_alloc_init(MEMORY[0x263EFF980]);
    uint64_t v74 = objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 32), v67, v68, v69, v70, v71, v72, v73);
    objc_msgSend_setObject_forKeyedSubscript_(v74, v75, (uint64_t)v66, (uint64_t)v40, v76, v77, v78, v79);

    uint64_t v80 = BDSCloudKitLog();
    if (os_log_type_enabled(v80, OS_LOG_TYPE_DEBUG)) {
      sub_2361F9198((uint64_t)v40, v80);
    }
  }
  if (*(void *)(a1 + 56))
  {
    uint64_t v81 = BDSCloudKitLog();
    if (os_log_type_enabled(v81, OS_LOG_TYPE_DEBUG)) {
      sub_2361F90E8((const void **)(a1 + 56), (uint64_t)v40, v81);
    }

    uint64_t v89 = objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 32), v82, v83, v84, v85, v86, v87, v88);
    uint64_t v96 = objc_msgSend_objectForKeyedSubscript_(v89, v90, (uint64_t)v40, v91, v92, v93, v94, v95);
    uint64_t v97 = _Block_copy(*(const void **)(a1 + 56));
    objc_msgSend_addObject_(v96, v98, (uint64_t)v97, v99, v100, v101, v102, v103);
  }
  objc_msgSend_clientConnected(v23, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend_signal(v23, v104, v105, v106, v107, v108, v109, v110);
}

void sub_2360E1150(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_transactionNameForEntityName_(BCCloudKitFetchChangesTransaction, v10, @"iBooks", v11, v12, v13, v14, v15);
  objc_msgSend_objectForKey_(v9, v17, (uint64_t)v16, v18, v19, v20, v21, v22);
  id v72 = (id)objc_claimAutoreleasedReturnValue();

  if (!v72)
  {
    uint64_t v30 = [BCCloudKitFetchChangesTransaction alloc];
    uint64_t v38 = objc_msgSend_cloudKitController(*(void **)(a1 + 32), v31, v32, v33, v34, v35, v36, v37);
    id v72 = (id)objc_msgSend_initWithCloudKitController_delegate_(v30, v39, (uint64_t)v38, *(void *)(a1 + 32), v40, v41, v42, v43);

    uint64_t v51 = objc_msgSend_transactions(*(void **)(a1 + 32), v44, v45, v46, v47, v48, v49, v50);
    uint64_t v59 = objc_msgSend_transactionName(v72, v52, v53, v54, v55, v56, v57, v58);
    objc_msgSend_setObject_forKey_(v51, v60, (uint64_t)v72, (uint64_t)v59, v61, v62, v63, v64);
  }
  objc_msgSend_clientConnected(v72, v23, v24, v25, v26, v27, v28, v29);
  objc_msgSend_signal(v72, v65, v66, v67, v68, v69, v70, v71);
}

void sub_2360E1378(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v81 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_transactionName(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v10 = BDSCloudKitLog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v77 = v9;
    _os_log_impl(&dword_2360BC000, v10, OS_LOG_TYPE_DEFAULT, "[BCCloudKitTransactionManager] Transaction completed %@", buf, 0xCu);
  }

  long long v74 = 0u;
  long long v75 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  uint64_t v71 = a1;
  uint64_t v18 = objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 40), v11, v12, v13, v14, v15, v16, v17);
  uint64_t v25 = objc_msgSend_objectForKeyedSubscript_(v18, v19, (uint64_t)v9, v20, v21, v22, v23, v24);

  uint64_t v30 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v72, (uint64_t)v80, 16, v27, v28, v29);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = *(void *)v73;
    do
    {
      uint64_t v33 = 0;
      do
      {
        if (*(void *)v73 != v32) {
          objc_enumerationMutation(v25);
        }
        uint64_t v34 = *(const void **)(*((void *)&v72 + 1) + 8 * v33);
        uint64_t v35 = BDSCloudKitLog();
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v42 = _Block_copy(v34);
          *(_DWORD *)buf = 138412546;
          uint64_t v77 = v42;
          __int16 v78 = 2112;
          uint64_t v79 = v9;
          _os_log_debug_impl(&dword_2360BC000, v35, OS_LOG_TYPE_DEBUG, "Calling block %@ for transaction %@ ", buf, 0x16u);
        }
        uint64_t v36 = _Block_copy(v34);
        uint64_t v37 = v36;
        if (v36) {
          (*((void (**)(void *))v36 + 2))(v36);
        }

        ++v33;
      }
      while (v31 != v33);
      uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v38, (uint64_t)&v72, (uint64_t)v80, 16, v39, v40, v41);
    }
    while (v31);
  }

  uint64_t v50 = objc_msgSend_transactions(*(void **)(v71 + 40), v43, v44, v45, v46, v47, v48, v49);
  objc_msgSend_removeObjectForKey_(v50, v51, (uint64_t)v9, v52, v53, v54, v55, v56);

  uint64_t v64 = objc_msgSend_transactionCompletionCallbacks(*(void **)(v71 + 40), v57, v58, v59, v60, v61, v62, v63);
  objc_msgSend_removeObjectForKey_(v64, v65, (uint64_t)v9, v66, v67, v68, v69, v70);
}

void sub_2360E16C8(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v90 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_userInfo(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v17 = objc_msgSend_localizedDescription(a1, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v25 = objc_msgSend_localizedFailureReason(a1, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v33 = objc_msgSend_localizedRecoverySuggestion(a1, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v41 = objc_msgSend_localizedRecoveryOptions(a1, v34, v35, v36, v37, v38, v39, v40);
  NSLog(&cfstr_Nserror.isa, a1, v17, v25, v33, v41, v9);

  uint64_t v48 = objc_msgSend_objectForKey_(v9, v42, @"NSDetailedErrors", v43, v44, v45, v46, v47);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v48, v49, v50, v51, v52, v53, v54, v55))
  {
    uint64_t v63 = objc_msgSend_count(v48, v56, v57, v58, v59, v60, v61, v62);
    NSLog(&cfstr_SubErrors03lu.isa, v63);
    long long v87 = 0u;
    long long v88 = 0u;
    long long v85 = 0u;
    long long v86 = 0u;
    id v64 = v48;
    uint64_t v69 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v65, (uint64_t)&v85, (uint64_t)v89, 16, v66, v67, v68);
    if (v69)
    {
      uint64_t v70 = v69;
      uint64_t v71 = *(void *)v86;
      do
      {
        uint64_t v72 = 0;
        do
        {
          if (*(void *)v86 != v71) {
            objc_enumerationMutation(v64);
          }
          long long v73 = *(void **)(*((void *)&v85 + 1) + 8 * v72);
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            objc_msgSend_logRecursively(v73, v74, v75, v76, v77, v78, v79, v80);
          }
          else {
            NSLog(&cfstr_NotAnNserror.isa, v73);
          }
          ++v72;
        }
        while (v70 != v72);
        uint64_t v70 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v81, (uint64_t)&v85, (uint64_t)v89, 16, v82, v83, v84);
      }
      while (v70);
    }

    NSLog(&stru_26E977820.isa);
  }
}

uint64_t sub_2360E1C3C()
{
  qword_268854B30 = objc_alloc_init(BCCloudDataNullPrivacyDelegate);
  return MEMORY[0x270F9A758]();
}

uint64_t BCProtoAnnotationReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    uint64_t v16 = *v5;
    int v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(unsigned char *)(a2 + v16)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v17 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v19 = *v3;
        unint64_t v20 = *(void *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v20);
          *(void *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v21 = 0;
        }
        uint64_t v93 = 8;
        goto LABEL_161;
      case 2u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 72;
        goto LABEL_110;
      case 3u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(_WORD *)(a1 + 204) |= 0x200u;
        while (2)
        {
          uint64_t v27 = *v3;
          uint64_t v28 = *(void *)(a2 + v27);
          unint64_t v29 = v28 + 1;
          if (v28 == -1 || v29 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if (v30 < 0)
            {
              v24 += 7;
              BOOL v15 = v25++ >= 9;
              if (v15)
              {
                uint64_t v26 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v26 = 0;
        }
LABEL_117:
        BOOL v90 = v26 != 0;
        uint64_t v91 = 200;
        goto LABEL_134;
      case 4u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 0x400u;
        while (2)
        {
          uint64_t v34 = *v3;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v36;
            v33 |= (unint64_t)(v37 & 0x7F) << v31;
            if (v37 < 0)
            {
              v31 += 7;
              BOOL v15 = v32++ >= 9;
              if (v15)
              {
                uint64_t v33 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v33 = 0;
        }
LABEL_121:
        BOOL v90 = v33 != 0;
        uint64_t v91 = 201;
        goto LABEL_134;
      case 5u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 96;
        goto LABEL_110;
      case 6u:
        uint64_t v38 = *v3;
        unint64_t v39 = *(void *)(a2 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v39);
          *(void *)(a2 + v38) = v39 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v21 = 0;
        }
        uint64_t v93 = 24;
        goto LABEL_161;
      case 7u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 104;
        goto LABEL_110;
      case 8u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 160;
        goto LABEL_110;
      case 9u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 168;
        goto LABEL_110;
      case 0xAu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x80u;
        while (2)
        {
          uint64_t v43 = *v3;
          uint64_t v44 = *(void *)(a2 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
            *(void *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v15 = v41++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v42) = 0;
        }
LABEL_125:
        uint64_t v92 = 184;
        goto LABEL_147;
      case 0xBu:
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x100u;
        while (2)
        {
          uint64_t v49 = *v3;
          uint64_t v50 = *(void *)(a2 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
            *(void *)(a2 + v49) = v51;
            v42 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v15 = v48++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v42) = 0;
        }
LABEL_129:
        uint64_t v92 = 188;
        goto LABEL_147;
      case 0xCu:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 192;
        goto LABEL_110;
      case 0xDu:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 112;
        goto LABEL_110;
      case 0xEu:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 40;
        goto LABEL_110;
      case 0xFu:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 48;
        goto LABEL_110;
      case 0x10u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 56;
        goto LABEL_110;
      case 0x11u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 64;
        goto LABEL_110;
      case 0x12u:
        *(_WORD *)(a1 + 204) |= 2u;
        uint64_t v53 = *v3;
        unint64_t v54 = *(void *)(a2 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v54);
          *(void *)(a2 + v53) = v54 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        uint64_t v93 = 32;
        goto LABEL_161;
      case 0x13u:
        uint64_t v55 = objc_alloc_init(BCAnnotationRange);
        objc_storeStrong((id *)(a1 + 176), v55);
        if (PBReaderPlaceMark() && BCAnnotationRangeReadFrom((uint64_t)v55, a2))
        {
          PBReaderRecallMark();

LABEL_162:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 0x14u:
        *(_WORD *)(a1 + 204) |= 0x40u;
        uint64_t v56 = *v3;
        unint64_t v57 = *(void *)(a2 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFFBLL && v57 + 4 <= *(void *)(a2 + *v4))
        {
          int v58 = *(_DWORD *)(*(void *)(a2 + *v7) + v57);
          *(void *)(a2 + v56) = v57 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v58 = 0;
        }
        uint64_t v94 = 156;
        goto LABEL_158;
      case 0x15u:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + 204) |= 0x800u;
        while (2)
        {
          uint64_t v62 = *v3;
          uint64_t v63 = *(void *)(a2 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v63);
            *(void *)(a2 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v15 = v60++ >= 9;
              if (v15)
              {
                uint64_t v61 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v61 = 0;
        }
LABEL_133:
        BOOL v90 = v61 != 0;
        uint64_t v91 = 202;
LABEL_134:
        *(unsigned char *)(a1 + v91) = v90;
        goto LABEL_162;
      case 0x16u:
        *(_WORD *)(a1 + 204) |= 0x20u;
        uint64_t v66 = *v3;
        unint64_t v67 = *(void *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFFBLL && v67 + 4 <= *(void *)(a2 + *v4))
        {
          int v58 = *(_DWORD *)(*(void *)(a2 + *v7) + v67);
          *(void *)(a2 + v66) = v67 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v58 = 0;
        }
        uint64_t v94 = 152;
LABEL_158:
        *(_DWORD *)(a1 + v94) = v58;
        goto LABEL_162;
      case 0x17u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 80;
        goto LABEL_110;
      case 0x18u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 88;
        goto LABEL_110;
      case 0x1Au:
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 204) |= 4u;
        while (2)
        {
          uint64_t v71 = *v3;
          uint64_t v72 = *(void *)(a2 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(a2 + *v7) + v72);
            *(void *)(a2 + v71) = v73;
            v42 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v15 = v70++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v42) = 0;
        }
LABEL_138:
        uint64_t v92 = 120;
        goto LABEL_147;
      case 0x1Bu:
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 204) |= 8u;
        while (2)
        {
          uint64_t v77 = *v3;
          uint64_t v78 = *(void *)(a2 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(a2 + *v7) + v78);
            *(void *)(a2 + v77) = v79;
            v42 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v15 = v76++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v42) = 0;
        }
LABEL_142:
        uint64_t v92 = 124;
        goto LABEL_147;
      case 0x1Cu:
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x10u;
        while (2)
        {
          uint64_t v83 = *v3;
          uint64_t v84 = *(void *)(a2 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(a2 + *v7) + v84);
            *(void *)(a2 + v83) = v85;
            v42 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v15 = v82++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v42) = 0;
        }
LABEL_146:
        uint64_t v92 = 128;
LABEL_147:
        *(_DWORD *)(a1 + v92) = v42;
        goto LABEL_162;
      case 0x1Du:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 136;
        goto LABEL_110;
      case 0x1Eu:
        uint64_t v22 = PBReaderReadData();
        uint64_t v23 = 144;
LABEL_110:
        long long v87 = *(void **)(a1 + v23);
        *(void *)(a1 + v23) = v22;

        goto LABEL_162;
      case 0x1Fu:
        *(_WORD *)(a1 + 204) |= 1u;
        uint64_t v88 = *v3;
        unint64_t v89 = *(void *)(a2 + v88);
        if (v89 <= 0xFFFFFFFFFFFFFFF7 && v89 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v21 = *(void *)(*(void *)(a2 + *v7) + v89);
          *(void *)(a2 + v88) = v89 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v21 = 0;
        }
        uint64_t v93 = 16;
LABEL_161:
        *(void *)(a1 + v93) = v21;
        goto LABEL_162;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_162;
    }
  }
}

void sub_2360E7240(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_mainBundle(MEMORY[0x263F086E0], a2, a3, a4, a5, a6, a7, a8);
  id v24 = (id)objc_claimAutoreleasedReturnValue();
  char v14 = objc_msgSend_objectForInfoDictionaryKey_(v24, v8, @"CFBundleShortVersionString", v9, v10, v11, v12, v13);
  uint64_t v22 = objc_msgSend_copy(v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (void *)qword_268854B40;
  qword_268854B40 = v22;
}

void bc_turnProtoAnnotationIntoTombstone(void *a1)
{
  id v234 = a1;
  objc_msgSend_setCreationDate_(v234, v1, v2, v3, v4, v5, v6, v7, 0.0);
  objc_msgSend_setDeleted_(v234, v8, 1, v9, v10, v11, v12, v13);
  objc_msgSend_setIsUnderline_(v234, v14, 0, v15, v16, v17, v18, v19);
  objc_msgSend_setHasIsUnderline_(v234, v20, 0, v21, v22, v23, v24, v25);
  objc_msgSend_setLocationCFIString_(v234, v26, 0, v27, v28, v29, v30, v31);
  objc_msgSend_setNote_(v234, v32, 0, v33, v34, v35, v36, v37);
  objc_msgSend_setRepresentativeText_(v234, v38, 0, v39, v40, v41, v42, v43);
  objc_msgSend_setSelectedText_(v234, v44, 0, v45, v46, v47, v48, v49);
  objc_msgSend_setStyle_(v234, v50, 0, v51, v52, v53, v54, v55);
  objc_msgSend_setHasStyle_(v234, v56, 0, v57, v58, v59, v60, v61);
  objc_msgSend_setType_(v234, v62, 0, v63, v64, v65, v66, v67);
  objc_msgSend_setHasType_(v234, v68, 0, v69, v70, v71, v72, v73);
  objc_msgSend_setPhysicalPageNumber_(v234, v74, 0, v75, v76, v77, v78, v79);
  objc_msgSend_setAnnotationVersion_(v234, v80, 0, v81, v82, v83, v84, v85);
  objc_msgSend_setAssetVersion_(v234, v86, 0, v87, v88, v89, v90, v91);
  objc_msgSend_setAttachments_(v234, v92, 0, v93, v94, v95, v96, v97);
  objc_msgSend_setChapterTitle_(v234, v98, 0, v99, v100, v101, v102, v103);
  objc_msgSend_setUserModificationDate_(v234, v104, v105, v106, v107, v108, v109, v110, 0.0);
  objc_msgSend_setHasUserModificationDate_(v234, v111, 0, v112, v113, v114, v115, v116);
  objc_msgSend_setSelectedTextRange_(v234, v117, 0, v118, v119, v120, v121, v122);
  objc_msgSend_setReadingProgressHighWaterMark_(v234, v123, v124, v125, v126, v127, v128, v129, 0.0);
  objc_msgSend_setHasReadingProgressHighWaterMark_(v234, v130, 0, v131, v132, v133, v134, v135);
  objc_msgSend_setSpineIndexUpdated_(v234, v136, 0, v137, v138, v139, v140, v141);
  objc_msgSend_setHasSpineIndexUpdated_(v234, v142, 0, v143, v144, v145, v146, v147);
  objc_msgSend_setReadingProgress_(v234, v148, v149, v150, v151, v152, v153, v154, 0.0);
  objc_msgSend_setHasReadingProgress_(v234, v155, 0, v156, v157, v158, v159, v160);
  objc_msgSend_setFutureProofing11_(v234, v161, 0, v162, v163, v164, v165, v166);
  objc_msgSend_setFutureProofing12_(v234, v167, 0, v168, v169, v170, v171, v172);
  objc_msgSend_setPlAbsolutePhysicalLocation_(v234, v173, 0, v174, v175, v176, v177, v178);
  objc_msgSend_setHasPlAbsolutePhysicalLocation_(v234, v179, 0, v180, v181, v182, v183, v184);
  objc_msgSend_setPlLocationRangeEnd_(v234, v185, 0, v186, v187, v188, v189, v190);
  objc_msgSend_setHasPlLocationRangeEnd_(v234, v191, 0, v192, v193, v194, v195, v196);
  objc_msgSend_setPlLocationRangeStart_(v234, v197, 0, v198, v199, v200, v201, v202);
  objc_msgSend_setHasPlLocationRangeStart_(v234, v203, 0, v204, v205, v206, v207, v208);
  objc_msgSend_setPlLocationStorageUUID_(v234, v209, 0, v210, v211, v212, v213, v214);
  objc_msgSend_setPlUserData_(v234, v215, 0, v216, v217, v218, v219, v220);
  objc_msgSend_setLocationModificationDate_(v234, v221, v222, v223, v224, v225, v226, v227, 0.0);
  objc_msgSend_setHasLocationModificationDate_(v234, v228, 0, v229, v230, v231, v232, v233);
}

uint64_t sub_2360E8C40(void *a1)
{
  id v1 = a1;
  uint64_t v9 = objc_msgSend_uuid(v1, v2, v3, v4, v5, v6, v7, v8);
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v17 = (void *)v9;
  uint64_t v18 = objc_msgSend_creatorIdentifier(v1, v10, v11, v12, v13, v14, v15, v16);
  if (!v18)
  {

LABEL_11:
    goto LABEL_12;
  }
  uint64_t v26 = (void *)v18;
  uint64_t v27 = objc_msgSend_locationCFIString(v1, v19, v20, v21, v22, v23, v24, v25);
  if (!objc_msgSend_length(v27, v28, v29, v30, v31, v32, v33, v34))
  {
    uint64_t v42 = objc_msgSend_plUserData(v1, v35, v36, v37, v38, v39, v40, v41);
    if (objc_msgSend_length(v42, v43, v44, v45, v46, v47, v48, v49))
    {

      goto LABEL_6;
    }
    char v67 = objc_msgSend_deleted(v1, v50, v51, v52, v53, v54, v55, v56);

    if (v67) {
      goto LABEL_7;
    }
LABEL_12:
    uint64_t v64 = BDSCloudKitLog();
    if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
      sub_2361F9B34();
    }
    goto LABEL_14;
  }
LABEL_6:

LABEL_7:
  if (objc_msgSend_type(v1, v57, v58, v59, v60, v61, v62, v63) != 3)
  {
    uint64_t v65 = 1;
    goto LABEL_15;
  }
  uint64_t v64 = BDSCloudKitLog();
  if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR)) {
    sub_2361F9BA0();
  }
LABEL_14:

  uint64_t v65 = 0;
LABEL_15:

  return v65;
}

void sub_2360E8D88(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void BDSReportAssertionFailureWithMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id v13 = a5;
  if (objc_msgSend_length(v13, v14, v15, v16, v17, v18, v19, v20))
  {
    id v26 = [NSString alloc];
    uint64_t v32 = (__CFString *)objc_msgSend_initWithFormat_arguments_(v26, v27, (uint64_t)v13, (uint64_t)&a9, v28, v29, v30, v31);
    if (!a1) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v33 = objc_msgSend_stringWithCString_encoding_(NSString, v21, a1, 1, v22, v23, v24, v25);
    objc_msgSend_lastPathComponent(v33, v34, v35, v36, v37, v38, v39, v40);
    uint64_t v41 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (v41) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v32 = &stru_26E976C40;
  if (a1) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v41 = &stru_26E976C40;
LABEL_7:
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
  {
    uint64_t v48 = objc_msgSend_numberWithInt_(NSNumber, v42, a2, v43, v44, v45, v46, v47);
    *(_DWORD *)buf = 136316162;
    uint64_t v50 = a4;
    __int16 v51 = 2080;
    uint64_t v52 = a3;
    __int16 v53 = 2112;
    uint64_t v54 = v41;
    __int16 v55 = 2112;
    uint64_t v56 = v48;
    __int16 v57 = 2112;
    uint64_t v58 = v32;
    _os_log_error_impl(&dword_2360BC000, &_os_log_internal, OS_LOG_TYPE_ERROR, "*** Assertion failure: %s in %s - %@:%@ %@", buf, 0x34u);
  }
}

uint64_t sub_2360E9158()
{
  qword_26AD77690 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360E9448()
{
  qword_26AD77640 = objc_alloc_init(BDSCloudGlobalMetadataManager);
  return MEMORY[0x270F9A758]();
}

void sub_2360EA084(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  uint64_t v6 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(void *, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_2360EA1F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  uint64_t v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_2360EA9A4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  uint64_t v6 = BUDynamicCast();

  id v7 = _Block_copy(*(const void **)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(void *, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_2360EAB54(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  uint64_t v6 = BUDynamicCast();

  id v7 = _Block_copy(*(const void **)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(void *, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_2360EAE30(uint64_t a1, void *a2, void *a3)
{
  id v16 = a3;
  id v5 = a2;
  objc_opt_class();
  uint64_t v6 = BUDynamicCast();

  uint64_t v14 = (void (**)(void *, void *, id))_Block_copy(*(const void **)(a1 + 32));
  if (v14)
  {
    uint64_t v15 = objc_msgSend_value(v6, v7, v8, v9, v10, v11, v12, v13);
    v14[2](v14, v15, v16);
  }
}

void sub_2360EAF94(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  uint64_t v13 = (void (**)(void *, void *, id))_Block_copy(*(const void **)(a1 + 32));
  if (v13)
  {
    uint64_t v14 = objc_msgSend_value(v15, v6, v7, v8, v9, v10, v11, v12);
    v13[2](v13, v14, v5);
  }
}

void sub_2360EB114(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v10 = v3;
    objc_msgSend_setValue_(v3, v4, *(void *)(a1 + 40), v5, v6, v7, v8, v9);
  }
  else
  {
    uint64_t v11 = [BCMutableGlobalMetadatum alloc];
    uint64_t v10 = objc_msgSend_initWithKey_(v11, v12, *(void *)(a1 + 32), v13, v14, v15, v16, v17);
    objc_msgSend_setValue_(v10, v18, *(void *)(a1 + 40), v19, v20, v21, v22, v23);
    objc_msgSend_setModificationDate_(v10, v24, 0, v25, v26, v27, v28, v29);
  }
  v36[0] = MEMORY[0x263EF8330];
  v36[1] = 3221225472;
  v36[2] = sub_2360EB1F4;
  v36[3] = &unk_264CA12C8;
  uint64_t v30 = *(void **)(a1 + 48);
  id v37 = *(id *)(a1 + 56);
  objc_msgSend_setMetadatum_completion_(v30, v31, (uint64_t)v10, (uint64_t)v36, v32, v33, v34, v35);
}

void sub_2360EB1F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v5 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(void *, id))v5 + 2))(v5, v7);
  }
}

uint64_t sub_2360EB3C0()
{
  qword_26AD77698 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

void sub_2360EB8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
}

void sub_2360EB8E0(uint64_t a1)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v10 = objc_msgSend_currentToken(*(void **)(a1 + 32), v2, v3, v4, v5, v6, v7, v8);
    uint64_t v18 = objc_msgSend_plistContents(WeakRetained, v11, v12, v13, v14, v15, v16, v17);
    uint64_t v25 = objc_msgSend_objectForKey_(v18, v19, @"BDSICloudIdentityTokenTrackerToken", v20, v21, v22, v23, v24);

    uint64_t v26 = [BDSICloudIdentityToken alloc];
    uint64_t v33 = objc_msgSend_initFromArchive_(v26, v27, (uint64_t)v25, v28, v29, v30, v31, v32);
    uint64_t v40 = v33;
    if (v33) {
      char v41 = objc_msgSend_isEqual_(v33, v34, (uint64_t)v10, v35, v36, v37, v38, v39) ^ 1;
    }
    else {
      char v41 = 0;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v41;
    uint64_t v42 = BDSCloudKitLog();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
        uint64_t v43 = @"YES";
      }
      else {
        uint64_t v43 = @"NO";
      }
      int v44 = 138543874;
      uint64_t v45 = v43;
      __int16 v46 = 2114;
      uint64_t v47 = v40;
      __int16 v48 = 2114;
      uint64_t v49 = v10;
      _os_log_impl(&dword_2360BC000, v42, OS_LOG_TYPE_INFO, "BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@", (uint8_t *)&v44, 0x20u);
    }
  }
}

void sub_2360EBB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_2360EBB80(uint64_t a1)
{
  uint64_t v96 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v10 = objc_msgSend_currentToken(*(void **)(a1 + 32), v2, v3, v4, v5, v6, v7, v8);
    uint64_t v11 = [BDSICloudIdentityToken alloc];
    uint64_t v19 = objc_msgSend_plistContents(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    uint64_t v26 = objc_msgSend_objectForKey_(v19, v20, @"BDSICloudIdentityTokenTrackerToken", v21, v22, v23, v24, v25);
    uint64_t v33 = objc_msgSend_initFromArchive_(v11, v27, (uint64_t)v26, v28, v29, v30, v31, v32);

    if (v10 != v33 && (objc_msgSend_isEqual_(v10, v34, (uint64_t)v33, v35, v36, v37, v38, v39) & 1) == 0)
    {
      uint64_t v47 = objc_msgSend_plistContents(WeakRetained, v40, v41, v42, v43, v44, v45, v46);
      __int16 v55 = v47;
      if (v10)
      {
        uint64_t v56 = objc_msgSend_token(v10, v48, v49, v50, v51, v52, v53, v54);
        objc_msgSend_setObject_forKey_(v55, v57, (uint64_t)v56, @"BDSICloudIdentityTokenTrackerToken", v58, v59, v60, v61);
      }
      else
      {
        objc_msgSend_removeObjectForKey_(v47, v48, @"BDSICloudIdentityTokenTrackerToken", v50, v51, v52, v53, v54);
      }

      uint64_t v69 = objc_msgSend_plistContents(WeakRetained, v62, v63, v64, v65, v66, v67, v68);
      uint64_t v77 = objc_msgSend_plistURL(WeakRetained, v70, v71, v72, v73, v74, v75, v76);
      objc_msgSend_writeToURL_atomically_(v69, v78, (uint64_t)v77, 1, v79, v80, v81, v82);

      uint64_t v83 = BDSCloudKitLog();
      if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v91 = objc_msgSend_plistURL(WeakRetained, v84, v85, v86, v87, v88, v89, v90);
        int v92 = 141558274;
        uint64_t v93 = 1752392040;
        __int16 v94 = 2112;
        uint64_t v95 = v91;
        _os_log_impl(&dword_2360BC000, v83, OS_LOG_TYPE_DEFAULT, "Done acknowledge iCloud identity: %{mask.hash}@", (uint8_t *)&v92, 0x16u);
      }
    }
  }
}

uint64_t sub_2360EBED4(uint64_t a1)
{
  qword_26AD775C0 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));
  return MEMORY[0x270F9A758]();
}

uint64_t sub_2360EC0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_q_startMonitoringServiceNotifications, a3, a4, a5, a6, a7, a8);
}

void sub_2360EC120(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = BDSServiceXPCNotificationLog();
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_2361F9C50((uint64_t)v2, v4);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "monitorServiceNotifications: OK", v5, 2u);
  }
}

void sub_2360EC56C(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 3221225472;
  v22[2] = sub_2360EC690;
  v22[3] = &unk_264CA15E0;
  uint64_t v26 = a4;
  id v23 = v7;
  id v24 = v9;
  id v10 = v8;
  id v25 = v10;
  id v11 = v7;
  id v12 = v9;
  uint64_t v19 = objc_msgSend_remoteObjectProxyWithErrorHandler_(v11, v13, (uint64_t)v22, v14, v15, v16, v17, v18);
  uint64_t v20 = _Block_copy(v10);
  uint64_t v21 = v20;
  if (v20) {
    (*((void (**)(void *, void *))v20 + 2))(v20, v19);
  }
}

void sub_2360EC690(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend_code(v3, v4, v5, v6, v7, v8, v9, v10) == 4097
    && (objc_msgSend_domain(v3, v11, v12, v13, v14, v15, v16, v17),
        uint64_t v18 = objc_claimAutoreleasedReturnValue(),
        char isEqualToString = objc_msgSend_isEqualToString_(v18, v19, *MEMORY[0x263F07F70], v20, v21, v22, v23, v24),
        v18,
        (isEqualToString & 1) != 0))
  {
    uint64_t v26 = *(void *)(a1 + 56);
    uint64_t v27 = BDSServiceLog();
    BOOL v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);
    BOOL v29 = v26 <= 1;
    uint64_t v30 = v26 - 1;
    if (!v29)
    {
      if (v28) {
        sub_2361F9D40((uint64_t)v3, v30, v27);
      }

      sub_2360EC56C(*(void *)(a1 + 32), *(void *)(a1 + 48), *(void *)(a1 + 40), v30);
      goto LABEL_12;
    }
    if (v28) {
      sub_2361F9CC8((uint64_t)v3, v27);
    }
  }
  else
  {
    uint64_t v27 = BDSServiceLog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_2361F9DC8((uint64_t)v3, v27);
    }
  }

  uint64_t v31 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v32 = v31;
  if (v31) {
    (*((void (**)(void *, id))v31 + 2))(v31, v3);
  }

LABEL_12:
}

void sub_2360ED41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360ED434(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360ED444(uint64_t a1)
{
}

void sub_2360ED44C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_fetchRequest(BDSBookWidgetInfoMO, a2, a3, a4, a5, a6, a7, a8);
  id v175 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = (void *)MEMORY[0x263F08A98];
  uint64_t v17 = objc_msgSend_assetID(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
  uint64_t v24 = objc_msgSend_predicateWithFormat_(v9, v18, @"assetID == %@", v19, v20, v21, v22, v23, v17);
  objc_msgSend_setPredicate_(v175, v25, (uint64_t)v24, v26, v27, v28, v29, v30);

  objc_msgSend_setFetchLimit_(v175, v31, 1, v32, v33, v34, v35, v36);
  uint64_t v42 = objc_msgSend_executeFetchRequest_error_(*(void **)(a1 + 40), v37, (uint64_t)v175, 0, v38, v39, v40, v41);
  uint64_t v50 = objc_msgSend_firstObject(v42, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v51 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v52 = *(void **)(v51 + 40);
  *(void *)(v51 + 40) = v50;

  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v60 = [BDSBookWidgetInfoMO alloc];
    uint64_t v67 = objc_msgSend_initWithContext_(v60, v61, *(void *)(a1 + 40), v62, v63, v64, v65, v66);
    uint64_t v68 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v69 = *(void **)(v68 + 40);
    *(void *)(v68 + 40) = v67;
  }
  uint64_t v70 = objc_msgSend_assetID(*(void **)(a1 + 32), v53, v54, v55, v56, v57, v58, v59);
  objc_msgSend_setAssetID_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v71, (uint64_t)v70, v72, v73, v74, v75, v76);

  uint64_t v77 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v85 = objc_msgSend_title(*(void **)(a1 + 32), v78, v79, v80, v81, v82, v83, v84);
  objc_msgSend_bl_setNonNilValue_forKey_(v77, v86, (uint64_t)v85, @"title", v87, v88, v89, v90);

  uint64_t v91 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v99 = objc_msgSend_coverURL(*(void **)(a1 + 32), v92, v93, v94, v95, v96, v97, v98);
  objc_msgSend_bl_setNonNilValue_forKey_(v91, v100, (uint64_t)v99, @"coverURL", v101, v102, v103, v104);

  uint64_t v105 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v113 = objc_msgSend_totalDuration(*(void **)(a1 + 32), v106, v107, v108, v109, v110, v111, v112);
  objc_msgSend_bl_setNonNilValue_forKey_(v105, v114, (uint64_t)v113, @"totalDuration", v115, v116, v117, v118);

  uint64_t v126 = objc_msgSend_pageProgressionDirection(*(void **)(a1 + 32), v119, v120, v121, v122, v123, v124, v125);
  objc_msgSend_setPageProgressionDirection_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v127, (uint64_t)v126, v128, v129, v130, v131, v132);

  uint64_t v140 = objc_msgSend_cloudAssetType(*(void **)(a1 + 32), v133, v134, v135, v136, v137, v138, v139);
  objc_msgSend_setCloudAssetType_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v141, (uint64_t)v140, v142, v143, v144, v145, v146);

  uint64_t v154 = objc_msgSend_libraryContentAssetType(*(void **)(a1 + 32), v147, v148, v149, v150, v151, v152, v153);
  objc_msgSend_setLibraryContentAssetType_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v155, (uint64_t)v154, v156, v157, v158, v159, v160);

  uint64_t isExplicit = objc_msgSend_isExplicit(*(void **)(a1 + 32), v161, v162, v163, v164, v165, v166, v167);
  objc_msgSend_setIsExplicit_(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v169, isExplicit, v170, v171, v172, v173, v174);
}

uint64_t sub_2360ED710()
{
  qword_26AD776A0 = objc_alloc_init(BDSServiceProxy);
  return MEMORY[0x270F9A758]();
}

void sub_2360EDAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_2360EDAF0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v12 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_performWorkWithCompletion_(WeakRetained, v5, (uint64_t)v3, v6, v7, v8, v9, v10);
  }
  else
  {
    uint64_t v11 = (void (**)(void *))_Block_copy(v3);

    if (v11) {
      v11[2](v11);
    }
    id v3 = v11;
  }
}

void sub_2360EDB7C(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_2360BC000, v3, OS_LOG_TYPE_INFO, "_coalescedNotification in %@ did not call notification within 10s.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_2360EDD7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = objc_msgSend_clientCount(v9, a2, a3, a4, a5, a6, a7, a8);
  objc_msgSend_setClientCount_(v9, v11, v10 + 1, v12, v13, v14, v15, v16);
  uint64_t v24 = objc_msgSend_transactionLifetime(*(void **)(a1 + 32), v17, v18, v19, v20, v21, v22, v23);

  if (v24)
  {
    uint64_t v32 = objc_msgSend_transactionLifetime(*(void **)(a1 + 32), v25, v26, v27, v28, v29, v30, v31);
    dispatch_source_cancel(v32);
  }
}

void sub_2360EDF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360EDFB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_lifecycleAccessQueue(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 3221225472;
  v10[2] = sub_2360EE064;
  v10[3] = &unk_264CA1598;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  v10[4] = *(void *)(a1 + 32);
  dispatch_async(v9, v10);

  objc_destroyWeak(&v11);
}

void sub_2360EE064(uint64_t a1)
{
  uint64_t v83 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v10 = objc_msgSend_shared(MEMORY[0x263F2BA58], v2, v3, v4, v5, v6, v7, v8);
    int v18 = objc_msgSend_verboseLoggingEnabled(v10, v11, v12, v13, v14, v15, v16, v17);

    if (v18)
    {
      uint64_t v26 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v34 = objc_msgSend_transactionName(*(void **)(a1 + 32), v27, v28, v29, v30, v31, v32, v33);
        int v81 = 138412290;
        uint64_t v82 = v34;
        _os_log_impl(&dword_2360BC000, v26, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction client decrementing for %@\\\"\"", (uint8_t *)&v81, 0xCu);
      }
    }
    uint64_t v35 = objc_msgSend_clientCount(WeakRetained, v19, v20, v21, v22, v23, v24, v25);
    objc_msgSend_setClientCount_(WeakRetained, v36, v35 - 1, v37, v38, v39, v40, v41);
    if (!objc_msgSend_clientCount(WeakRetained, v42, v43, v44, v45, v46, v47, v48))
    {
      uint64_t v56 = objc_msgSend_shared(MEMORY[0x263F2BA58], v49, v50, v51, v52, v53, v54, v55);
      int v64 = objc_msgSend_verboseLoggingEnabled(v56, v57, v58, v59, v60, v61, v62, v63);

      if (v64)
      {
        uint64_t v72 = BDSCloudKitDevelopmentLog();
        if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v80 = objc_msgSend_transactionName(*(void **)(a1 + 32), v73, v74, v75, v76, v77, v78, v79);
          int v81 = 138412290;
          uint64_t v82 = v80;
          _os_log_impl(&dword_2360BC000, v72, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction clientCount 0 for %@\\\"\"", (uint8_t *)&v81, 0xCu);
        }
      }
      objc_msgSend_laq_scheduleTransactionLifetime(WeakRetained, v65, v66, v67, v68, v69, v70, v71);
    }
  }
}

uint64_t sub_2360EE42C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_shared(MEMORY[0x263F2BA58], a2, a3, a4, a5, a6, a7, a8);
  int v17 = objc_msgSend_verboseLoggingEnabled(v9, v10, v11, v12, v13, v14, v15, v16);

  if (v17)
  {
    uint64_t v25 = BDSCloudKitDevelopmentLog();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v33 = objc_msgSend_transactionName(*(void **)(a1 + 32), v26, v27, v28, v29, v30, v31, v32);
      int v54 = 138412290;
      uint64_t v55 = v33;
      _os_log_impl(&dword_2360BC000, v25, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Completion fired for %@\\\"\"", (uint8_t *)&v54, 0xCu);
    }
  }
  uint64_t v34 = objc_msgSend_delegate(*(void **)(a1 + 32), v18, v19, v20, v21, v22, v23, v24);
  objc_msgSend_transactionCompleted_(v34, v35, *(void *)(a1 + 32), v36, v37, v38, v39, v40);

  objc_msgSend_setDelegate_(*(void **)(a1 + 32), v41, 0, v42, v43, v44, v45, v46);
  return objc_msgSend_setTransactionLifetime_(*(void **)(a1 + 32), v47, 0, v48, v49, v50, v51, v52);
}

uint64_t sub_2360EE544(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_shared(MEMORY[0x263F2BA58], a2, a3, a4, a5, a6, a7, a8);
  int v17 = objc_msgSend_verboseLoggingEnabled(v9, v10, v11, v12, v13, v14, v15, v16);

  if (v17)
  {
    uint64_t v24 = BDSCloudKitDevelopmentLog();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = objc_msgSend_transactionName(*(void **)(a1 + 32), v25, v26, v27, v28, v29, v30, v31);
      int v34 = 138412290;
      uint64_t v35 = v32;
      _os_log_impl(&dword_2360BC000, v24, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Cancel fired for %@\\\"\"", (uint8_t *)&v34, 0xCu);
    }
  }
  return objc_msgSend_setTransactionLifetime_(*(void **)(a1 + 32), v18, 0, v19, v20, v21, v22, v23);
}

void sub_2360EEBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_2360EEBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_p_unarchive, a3, a4, a5, a6, a7, a8);
}

void sub_2360EEC04(uint64_t a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v5 = BDSCloudKitLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = objc_msgSend_containerIdentifier(WeakRetained, v6, v7, v8, v9, v10, v11, v12);
      *(_DWORD *)buf = 138412290;
      uint64_t v29 = v13;
      _os_log_impl(&dword_2360BC000, v5, OS_LOG_TYPE_INFO, "_coalescedArchive (%@)", buf, 0xCu);
    }
    uint64_t v21 = objc_msgSend_accessQueue(WeakRetained, v14, v15, v16, v17, v18, v19, v20);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2360EEDB8;
    block[3] = &unk_264CA1688;
    objc_copyWeak(&v27, (id *)(a1 + 40));
    id v25 = *(id *)(a1 + 32);
    id v26 = v3;
    dispatch_async(v21, block);

    objc_destroyWeak(&v27);
  }
  else
  {
    uint64_t v22 = _Block_copy(v3);
    uint64_t v23 = v22;
    if (v22) {
      (*((void (**)(void *))v22 + 2))(v22);
    }
  }
}

void sub_2360EEDB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v9 = objc_msgSend_p_archiveToData(WeakRetained, v2, v3, v4, v5, v6, v7, v8);
    objc_msgSend_writeToURL_atomically_(v9, v10, *(void *)(a1 + 32), 1, v11, v12, v13, v14);
  }
  uint64_t v15 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v16 = v15;
  if (v15) {
    (*((void (**)(void *))v15 + 2))(v15);
  }
}

void sub_2360EEE48(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138543362;
    id v5 = v2;
    _os_log_impl(&dword_2360BC000, v3, OS_LOG_TYPE_INFO, "did not call completion after 10s in %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_2360EEEF4(uint64_t a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v3 = a2;
  int v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = BDSCloudKitLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = objc_msgSend_containerIdentifier(WeakRetained, v7, v8, v9, v10, v11, v12, v13);
      *(_DWORD *)buf = 138412290;
      uint64_t v29 = v14;
      _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_INFO, "_coalescedZoneFetch (%@)", buf, 0xCu);
    }
    uint64_t v22 = objc_msgSend_accessQueue(WeakRetained, v15, v16, v17, v18, v19, v20, v21);
    v25[0] = MEMORY[0x263EF8330];
    v25[1] = 3221225472;
    v25[2] = sub_2360EF094;
    v25[3] = &unk_264CA0AD0;
    objc_copyWeak(&v27, v4);
    id v26 = v3;
    dispatch_async(v22, v25);

    objc_destroyWeak(&v27);
  }
  else
  {
    uint64_t v23 = _Block_copy(v3);
    uint64_t v24 = v23;
    if (v23) {
      (*((void (**)(void *))v23 + 2))(v23);
    }
  }
}

void sub_2360EF094(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v11 = WeakRetained;
  if (WeakRetained
    && (objc_msgSend_database(WeakRetained, v4, v5, v6, v7, v8, v9, v10),
        uint64_t v12 = objc_claimAutoreleasedReturnValue(),
        v12,
        v12))
  {
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = sub_2360EF1C8;
    v21[3] = &unk_264CA16D8;
    id v22 = v11;
    objc_copyWeak(&v24, v2);
    id v23 = *(id *)(a1 + 32);
    objc_msgSend_p_fetchZoneChanges_(v22, v13, (uint64_t)v21, v14, v15, v16, v17, v18);

    objc_destroyWeak(&v24);
  }
  else
  {
    uint64_t v19 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v20 = v19;
    if (v19) {
      (*((void (**)(void *))v19 + 2))(v19);
    }
  }
}

void sub_2360EF1B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2360EF1C8(void **a1, void *a2)
{
  id v10 = a2;
  if (v10)
  {
    uint64_t v11 = BDSCloudKitLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_2361F9E40();
    }
  }
  uint64_t v12 = objc_msgSend_accessQueue(a1[4], v3, v4, v5, v6, v7, v8, v9);
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 3221225472;
  v13[2] = sub_2360EF2C4;
  v13[3] = &unk_264CA0AD0;
  objc_copyWeak(&v15, a1 + 6);
  id v14 = a1[5];
  dispatch_async(v12, v13);

  objc_destroyWeak(&v15);
}

void sub_2360EF2C4(uint64_t a1)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = WeakRetained;
  if (WeakRetained
    && (objc_msgSend_attachedToContainer(WeakRetained, v3, v4, v5, v6, v7, v8, v9) & 1) == 0
    && objc_msgSend_fetchRecordZoneChangesSuccess(v10, v11, v12, v13, v14, v15, v16, v17))
  {
    id v25 = objc_msgSend_database(v10, v18, v19, v20, v21, v22, v23, v24);

    id v26 = BDSCloudKitLog();
    id v27 = v26;
    if (v25)
    {
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_containerIdentifier(v10, v28, v29, v30, v31, v32, v33, v34);
        int v57 = 138412290;
        uint64_t v58 = v35;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - attached to container: %@", (uint8_t *)&v57, 0xCu);
      }
      objc_msgSend_setAttachedToContainer_(v10, v36, 1, v37, v38, v39, v40, v41);
      objc_msgSend_p_informObserversOfAttachmentChange(v10, v42, v43, v44, v45, v46, v47, v48);
    }
    else
    {
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
        sub_2361F9EA8(v10, (char *)v27, v49, v50, v51, v52, v53, v54);
      }
    }
  }
  uint64_t v55 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v56 = v55;
  if (v55) {
    (*((void (**)(void *))v55 + 2))(v55);
  }
}

void sub_2360EF424(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_2361F9F3C();
  }
}

void sub_2360EF684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_2360EF6A0(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v12[0] = MEMORY[0x263EF8330];
    v12[1] = 3221225472;
    v12[2] = sub_2360EF7A4;
    v12[3] = &unk_264CA1728;
    objc_copyWeak(&v14, v2);
    id v13 = *(id *)(a1 + 32);
    objc_msgSend_p_fetchDatabaseChanges_(WeakRetained, v4, (uint64_t)v12, v5, v6, v7, v8, v9);

    objc_destroyWeak(&v14);
  }
  else
  {
    id v10 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v11 = v10;
    if (v10) {
      (*((void (**)(void *, void))v10 + 2))(v10, 0);
    }
  }
}

void sub_2360EF790(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2360EF7A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v12 = WeakRetained;
  if (WeakRetained)
  {
    if (!v3)
    {
      uint64_t v23 = objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8, v9, v10, v11);
      v24[0] = MEMORY[0x263EF8330];
      v24[1] = 3221225472;
      v24[2] = sub_2360EF914;
      v24[3] = &unk_264CA0AD0;
      objc_copyWeak(&v26, (id *)(a1 + 40));
      id v25 = *(id *)(a1 + 32);
      dispatch_async(v23, v24);

      objc_destroyWeak(&v26);
      goto LABEL_12;
    }
    id v13 = BDSCloudKitLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_2361F9FA4(v12, v3, (uint64_t)v13, v14, v15, v16, v17, v18);
    }

    uint64_t v19 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
    uint64_t v20 = v19;
    if (v19)
    {
      uint64_t v21 = v19[2];
LABEL_9:
      v21();
    }
  }
  else
  {
    uint64_t v22 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
    uint64_t v20 = v22;
    if (v22)
    {
      uint64_t v21 = v22[2];
      goto LABEL_9;
    }
  }

LABEL_12:
}

void sub_2360EF914(uint64_t a1)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = BDSCloudKitLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = objc_msgSend_containerIdentifier(WeakRetained, v4, v5, v6, v7, v8, v9, v10);
      uint64_t v19 = objc_msgSend_changedRecordZoneIDs(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
      id v27 = objc_msgSend_allObjects(v19, v20, v21, v22, v23, v24, v25, v26);
      id v28 = objc_alloc_init(MEMORY[0x263EFF980]);
      *(void *)buf = MEMORY[0x263EF8330];
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_2360FCDF8;
      uint64_t v62 = &unk_264CA1ED0;
      id v63 = v28;
      id v29 = v28;
      objc_msgSend_enumerateObjectsUsingBlock_(v27, v30, (uint64_t)buf, v31, v32, v33, v34, v35);
      uint64_t v42 = objc_msgSend_componentsJoinedByString_(v29, v36, @",", v37, v38, v39, v40, v41);

      *(_DWORD *)buf = 138543618;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v42;
      _os_log_impl(&dword_2360BC000, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@", buf, 0x16u);
    }
    uint64_t v50 = objc_msgSend_coalescedZoneFetch(WeakRetained, v43, v44, v45, v46, v47, v48, v49);
    v59[0] = MEMORY[0x263EF8330];
    v59[1] = 3221225472;
    v59[2] = sub_2360EFB60;
    v59[3] = &unk_264CA1700;
    id v60 = *(id *)(a1 + 32);
    objc_msgSend_signalWithCompletion_(v50, v51, (uint64_t)v59, v52, v53, v54, v55, v56);
  }
  else
  {
    int v57 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v58 = v57;
    if (v57) {
      (*((void (**)(void *, void))v57 + 2))(v57, 0);
    }
  }
}

void sub_2360EFB60(uint64_t a1)
{
  id v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(void *, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_2360EFCB0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2360EFCC4(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v10 = objc_msgSend_database(WeakRetained, v3, v4, v5, v6, v7, v8, v9);

  uint64_t v11 = BDSCloudKitLog();
  uint64_t v12 = (char *)v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_2361FA040(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    }

    uint64_t v26 = objc_msgSend_database(WeakRetained, v19, v20, v21, v22, v23, v24, v25);
    v44[0] = MEMORY[0x263EF8330];
    v44[1] = 3221225472;
    v44[2] = sub_2360EFE78;
    v44[3] = &unk_264CA1750;
    uint64_t v27 = *(void *)(a1 + 32);
    id v45 = *(id *)(a1 + 40);
    objc_msgSend_fetchRecordWithID_completionHandler_(v26, v28, v27, (uint64_t)v44, v29, v30, v31, v32);

    uint64_t v33 = v45;
  }
  else
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v41 = objc_msgSend_attachedToContainer(WeakRetained, v34, v35, v36, v37, v38, v39, v40);
      uint64_t v42 = @"NO";
      if (v41) {
        uint64_t v42 = @"YES";
      }
      *(_DWORD *)buf = 138412290;
      uint64_t v47 = v42;
      _os_log_impl(&dword_2360BC000, (os_log_t)v12, OS_LOG_TYPE_INFO, "WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@", buf, 0xCu);
    }

    uint64_t v43 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v33 = v43;
    if (v43) {
      (*((void (**)(void *, void))v43 + 2))(v43, 0);
    }
  }
}

void sub_2360EFE78(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  uint64_t v5 = (void (**)(void *, void))_Block_copy(*(const void **)(a1 + 32));
  if (v5)
  {
    if (a3) {
      id v6 = 0;
    }
    else {
      id v6 = v7;
    }
    ((void (**)(void *, id))v5)[2](v5, v6);
  }
}

void sub_2360EFFD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  if (v9
    && (uint64_t v17 = (void *)v9,
        objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16),
        uint64_t v18 = objc_claimAutoreleasedReturnValue(),
        char isEqualToString = objc_msgSend_isEqualToString_(v18, v19, *(void *)(a1 + 40), v20, v21, v22, v23, v24),
        v18,
        v17,
        (isEqualToString & 1) == 0))
  {
    uint64_t v27 = BDSCloudKitLog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v35 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v28, v29, v30, v31, v32, v33, v34);
      uint64_t v36 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      int v81 = v35;
      __int16 v82 = 2114;
      uint64_t v83 = v36;
      _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@", buf, 0x16u);
    }
    if (!*(unsigned char *)(a1 + 56))
    {
      uint64_t v44 = (void *)MEMORY[0x263EFD610];
      id v45 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v37, v38, v39, v40, v41, v42, v43);
      uint64_t v52 = objc_msgSend_containerWithIdentifier_(v44, v46, (uint64_t)v45, v47, v48, v49, v50, v51);

      objc_msgSend_p_unsubscribeToContainer_(*(void **)(a1 + 32), v53, (uint64_t)v52, v54, v55, v56, v57, v58);
    }
    objc_msgSend_setHasSubscription_(*(void **)(a1 + 32), v37, 0, v39, v40, v41, v42, v43);
    objc_msgSend_setServerChangeToken_(*(void **)(a1 + 32), v59, 0, v60, v61, v62, v63, v64);
    objc_msgSend_setContainerIdentifier_(*(void **)(a1 + 32), v65, 0, v66, v67, v68, v69, v70);
    objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 32), v71, (uint64_t)&unk_26E971CD0, v72, v73, v74, v75, v76);
    uint64_t v77 = _Block_copy(*(const void **)(a1 + 48));
    uint64_t v78 = v77;
    if (v77) {
      (*((void (**)(void *, uint64_t))v77 + 2))(v77, 1);
    }
  }
  else
  {
    uint64_t v26 = _Block_copy(*(const void **)(a1 + 48));
    if (v26)
    {
      id v79 = v26;
      (*((void (**)(void *, void))v26 + 2))(v26, 0);
      uint64_t v26 = v79;
    }
  }
}

void sub_2360F01E8()
{
  uint64_t v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (willAttachToContainer)", v1, 2u);
  }
}

void sub_2360F03FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v14 = v6;
  if (!v5 || v6)
  {
    uint64_t v18 = BDSCloudKitLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_2361FA0E4();
    }

    uint64_t v19 = _Block_copy(*(const void **)(a1 + 64));
    uint64_t v15 = v19;
    if (v19) {
      ((void (*)(NSObject *, void, void *))v19[2].isa)(v19, 0, v14);
    }
  }
  else
  {
    uint64_t v15 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2360F0578;
    block[3] = &unk_264CA17A0;
    id v21 = *(id *)(a1 + 40);
    id v22 = v5;
    id v16 = *(id *)(a1 + 48);
    uint64_t v17 = *(void *)(a1 + 32);
    id v23 = v16;
    uint64_t v24 = v17;
    char v27 = *(unsigned char *)(a1 + 72);
    id v25 = *(id *)(a1 + 56);
    id v26 = *(id *)(a1 + 64);
    dispatch_async(v15, block);
  }
}

void sub_2360F0578(uint64_t a1)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 48);
    int v45 = 138543874;
    uint64_t v46 = v10;
    __int16 v47 = 2114;
    uint64_t v48 = v11;
    __int16 v49 = 2114;
    uint64_t v50 = v12;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%{public}@", (uint8_t *)&v45, 0x20u);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 56) + 16), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(void *)(a1 + 56) + 24), *(id *)(a1 + 32));
  *(unsigned char *)(*(void *)(a1 + 56) + 13) = 0;
  uint64_t v20 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v13, v14, v15, v16, v17, v18, v19);
  uint64_t v28 = objc_msgSend_copy(v20, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v30 = *(void **)(v29 + 80);
  *(void *)(v29 + 80) = v28;

  objc_storeStrong((id *)(*(void *)(a1 + 56) + 88), *(id *)(a1 + 40));
  objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 56), v31, (uint64_t)&unk_26E971CF0, v32, v33, v34, v35, v36);
  if (*(unsigned char *)(a1 + 80)) {
    objc_msgSend_p_subscribeWithCompletion_(*(void **)(a1 + 56), v37, *(void *)(a1 + 64), v38, v39, v40, v41, v42);
  }
  uint64_t v43 = _Block_copy(*(const void **)(a1 + 72));
  uint64_t v44 = v43;
  if (v43) {
    (*((void (**)(void *, uint64_t, void))v43 + 2))(v43, 1, 0);
  }
}

void sub_2360F06F8()
{
  uint64_t v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (connectUserTo)", v1, 2u);
  }
}

void sub_2360F08A8(uint64_t a1)
{
  id v2 = [BDSOSTransaction alloc];
  uint64_t v9 = objc_msgSend_initWithTransactionName_(v2, v3, (uint64_t)"attachToZone", v4, v5, v6, v7, v8);
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_2360F0A10;
  aBlock[3] = &unk_264CA17F0;
  id v28 = v9;
  id v29 = *(id *)(a1 + 48);
  id v10 = v9;
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v19 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v12, v13, v14, v15, v16, v17, v18);
  v23[0] = MEMORY[0x263EF8330];
  v23[1] = 3221225472;
  v23[2] = sub_2360F0A70;
  v23[3] = &unk_264CA1100;
  uint64_t v20 = *(void **)(a1 + 40);
  v23[4] = *(void *)(a1 + 32);
  id v24 = v20;
  id v25 = v19;
  id v26 = v11;
  id v21 = v11;
  uint64_t v22 = v19;
  dispatch_async(v22, v23);
}

void sub_2360F0A10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_endTransaction(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
  if (v9)
  {
    id v10 = v9;
    v9[2]();
    uint64_t v9 = v10;
  }
}

void sub_2360F0A70(uint64_t a1)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v10 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v50 = v10;
    __int16 v51 = 2112;
    uint64_t v52 = v11;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@", buf, 0x16u);
  }
  id v12 = objc_alloc_init(MEMORY[0x263EFF980]);
  uint64_t v13 = *(void **)(a1 + 40);
  v47[0] = MEMORY[0x263EF8330];
  v47[1] = 3221225472;
  v47[2] = sub_2360F0C84;
  v47[3] = &unk_264CA1818;
  id v14 = v12;
  id v48 = v14;
  objc_msgSend_enumerateObjectsUsingBlock_(v13, v15, (uint64_t)v47, v16, v17, v18, v19, v20);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void **)(v21 + 40);
  *(void *)(v21 + 40) = v14;
  id v23 = v14;

  id v24 = objc_alloc_init(MEMORY[0x263EFF9A0]);
  uint64_t v25 = *(void *)(a1 + 32);
  id v26 = *(void **)(v25 + 112);
  *(void *)(v25 + 112) = v24;

  uint64_t v27 = *(void **)(a1 + 32);
  uint64_t v35 = objc_msgSend_desiredRecordZoneIDs(v27, v28, v29, v30, v31, v32, v33, v34);
  v43[0] = MEMORY[0x263EF8330];
  v43[1] = 3221225472;
  v43[2] = sub_2360F0D08;
  v43[3] = &unk_264CA1840;
  id v36 = *(id *)(a1 + 48);
  uint64_t v37 = *(void *)(a1 + 32);
  id v44 = v36;
  uint64_t v45 = v37;
  id v46 = *(id *)(a1 + 56);
  objc_msgSend_p_createRecordZones_completionHandler_(v27, v38, (uint64_t)v35, (uint64_t)v43, v39, v40, v41, v42);
}

void sub_2360F0C84(uint64_t a1, void *a2)
{
  id v3 = (objc_class *)MEMORY[0x263EFD808];
  id v4 = a2;
  id v5 = [v3 alloc];
  id v17 = (id)objc_msgSend_initWithZoneName_ownerName_(v5, v6, (uint64_t)v4, *MEMORY[0x263EFD488], v7, v8, v9, v10);

  objc_msgSend_addObject_(*(void **)(a1 + 32), v11, (uint64_t)v17, v12, v13, v14, v15, v16);
}

void sub_2360F0D08(uint64_t a1, void *a2)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = v3;
  if (!v3)
  {
    v57[0] = MEMORY[0x263EF8330];
    v57[1] = 3221225472;
    v57[2] = sub_2360F0F34;
    v57[3] = &unk_264CA17F0;
    uint64_t v33 = *(NSObject **)(a1 + 32);
    uint64_t v34 = *(void **)(a1 + 48);
    v57[4] = *(void *)(a1 + 40);
    id v58 = v34;
    dispatch_async(v33, v57);

    goto LABEL_14;
  }
  if (!sub_2360F1150(v3))
  {
    uint64_t v35 = BDSErrorFromUnderlyingError(@"BDSCloudKitClientError", 2002, v4);
    if (sub_2360F1330(v4))
    {
      int v36 = 2006;
    }
    else
    {
      if (!sub_2360F153C(v4))
      {
        uint64_t v43 = BDSCloudKitLog();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        {
          __int16 v51 = objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v44, v45, v46, v47, v48, v49, v50);
          *(_DWORD *)buf = 138412546;
          uint64_t v60 = v51;
          __int16 v61 = 2112;
          uint64_t v62 = v4;
          _os_log_impl(&dword_2360BC000, v43, OS_LOG_TYPE_ERROR, "[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@", buf, 0x16u);
        }
        objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 40), v52, (uint64_t)v35, *(void *)(a1 + 48), v53, v54, v55, v56);
        goto LABEL_13;
      }
      int v36 = 2007;
    }
    uint64_t v37 = BDSErrorFromUnderlyingError(@"BDSCloudKitClientError", v36, v4);

    uint64_t v35 = (void *)v37;
    objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 40), v38, v37, *(void *)(a1 + 48), v39, v40, v41, v42);
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v12 = objc_msgSend_userInfo(v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v19 = objc_msgSend_objectForKeyedSubscript_(v12, v13, *MEMORY[0x263EFD4C8], v14, v15, v16, v17, v18);
  uint64_t v27 = objc_msgSend_allKeys(v19, v20, v21, v22, v23, v24, v25, v26);

  objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(*(void **)(a1 + 40), v28, (uint64_t)v27, *(void *)(a1 + 48), v29, v30, v31, v32);
LABEL_14:
}

void sub_2360F0F34(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = sub_2360F0FC4;
  v8[3] = &unk_264CA0EC0;
  v8[4] = v1;
  id v9 = *(id *)(a1 + 40);
  objc_msgSend_p_createRecordIDSaltWithCompletion_(v1, v2, (uint64_t)v8, v3, v4, v5, v6, v7);
}

void sub_2360F0FC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = *(void **)(a1 + 32);
  if (a2)
  {
    objc_msgSend_detachWithError_completion_(*(void **)(a1 + 32), a2, (uint64_t)a2, 0, a5, a6, a7, a8);
    uint64_t v10 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    if (v10)
    {
      uint64_t v17 = v10;
      v10[2]();
      uint64_t v10 = v17;
    }
  }
  else
  {
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 3221225472;
    v18[2] = sub_2360F10AC;
    v18[3] = &unk_264CA0EC0;
    void v18[4] = v9;
    id v19 = *(id *)(a1 + 40);
    objc_msgSend_fetchChangesWithCompletion_(v9, v11, (uint64_t)v18, v12, v13, v14, v15, v16);
  }
}

void sub_2360F10AC(uint64_t a1, void *a2)
{
  id v11 = a2;
  if (v11)
  {
    uint64_t v3 = BDSErrorFromUnderlyingError(@"BDSCloudKitClientError", 2004, v11);
    objc_msgSend_detachWithError_completion_(*(void **)(a1 + 32), v4, (uint64_t)v3, 0, v5, v6, v7, v8);
  }
  id v9 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(void *))v9 + 2))(v9);
  }
}

uint64_t sub_2360F1150(void *a1)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v9 = objc_msgSend_domain(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = *MEMORY[0x263EFD498];
  int isEqualToString = objc_msgSend_isEqualToString_(v9, v11, *MEMORY[0x263EFD498], v12, v13, v14, v15, v16);

  if (!isEqualToString) {
    goto LABEL_17;
  }
  if (objc_msgSend_code(v1, v18, v19, v20, v21, v22, v23, v24) == 112)
  {
    uint64_t v32 = 1;
    goto LABEL_18;
  }
  if (objc_msgSend_code(v1, v25, v26, v27, v28, v29, v30, v31) != 2)
  {
LABEL_17:
    uint64_t v32 = 0;
    goto LABEL_18;
  }
  uint64_t v40 = objc_msgSend_userInfo(v1, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v47 = objc_msgSend_objectForKey_(v40, v41, *MEMORY[0x263EFD4C8], v42, v43, v44, v45, v46);

  long long v90 = 0u;
  long long v91 = 0u;
  long long v88 = 0u;
  long long v89 = 0u;
  uint64_t v55 = objc_msgSend_allValues(v47, v48, v49, v50, v51, v52, v53, v54, 0);
  uint64_t v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v56, (uint64_t)&v88, (uint64_t)v92, 16, v57, v58, v59);
  if (v60)
  {
    uint64_t v68 = v60;
    uint64_t v69 = *(void *)v89;
    do
    {
      for (uint64_t i = 0; i != v68; ++i)
      {
        if (*(void *)v89 != v69) {
          objc_enumerationMutation(v55);
        }
        uint64_t v71 = *(void **)(*((void *)&v88 + 1) + 8 * i);
        uint64_t v72 = objc_msgSend_domain(v71, v61, v62, v63, v64, v65, v66, v67);
        if (objc_msgSend_isEqualToString_(v72, v73, v10, v74, v75, v76, v77, v78))
        {
          uint64_t v86 = objc_msgSend_code(v71, v79, v80, v81, v82, v83, v84, v85);

          if (v86 == 112)
          {
            uint64_t v32 = 1;
            goto LABEL_19;
          }
        }
        else
        {
        }
      }
      uint64_t v68 = objc_msgSend_countByEnumeratingWithState_objects_count_(v55, v61, (uint64_t)&v88, (uint64_t)v92, 16, v65, v66, v67);
    }
    while (v68);
  }
  uint64_t v32 = 0;
LABEL_19:

LABEL_18:
  return v32;
}

BOOL sub_2360F1330(void *a1)
{
  uint64_t v98 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v9 = objc_msgSend_domain(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = *MEMORY[0x263EFD498];
  int isEqualToString = objc_msgSend_isEqualToString_(v9, v11, *MEMORY[0x263EFD498], v12, v13, v14, v15, v16);

  if (isEqualToString)
  {
    uint64_t v25 = objc_msgSend_code(v1, v18, v19, v20, v21, v22, v23, v24);
    int v33 = 1;
    if (v25 != 111 && v25 != 5008)
    {
      if (objc_msgSend_code(v1, v26, v27, v28, v29, v30, v31, v32) == 2)
      {
        uint64_t v41 = objc_msgSend_userInfo(v1, v34, v35, v36, v37, v38, v39, v40);
        uint64_t v48 = objc_msgSend_objectForKey_(v41, v42, *MEMORY[0x263EFD4C8], v43, v44, v45, v46, v47);

        long long v95 = 0u;
        long long v96 = 0u;
        long long v93 = 0u;
        long long v94 = 0u;
        uint64_t v56 = objc_msgSend_allValues(v48, v49, v50, v51, v52, v53, v54, v55);
        uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v57, (uint64_t)&v93, (uint64_t)v97, 16, v58, v59, v60);
        if (v61)
        {
          uint64_t v69 = v61;
          int v92 = v48;
          uint64_t v70 = *(void *)v94;
          while (2)
          {
            for (uint64_t i = 0; i != v69; ++i)
            {
              if (*(void *)v94 != v70) {
                objc_enumerationMutation(v56);
              }
              uint64_t v72 = *(void **)(*((void *)&v93 + 1) + 8 * i);
              uint64_t v73 = objc_msgSend_code(v72, v62, v63, v64, v65, v66, v67, v68);
              uint64_t v81 = objc_msgSend_domain(v72, v74, v75, v76, v77, v78, v79, v80);
              int v88 = objc_msgSend_isEqualToString_(v81, v82, v10, v83, v84, v85, v86, v87);

              if (v88)
              {
                if (v73 == 111 || v73 == 5008)
                {
                  int v33 = 1;
                  goto LABEL_21;
                }
              }
            }
            uint64_t v69 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v62, (uint64_t)&v93, (uint64_t)v97, 16, v66, v67, v68);
            if (v69) {
              continue;
            }
            break;
          }
          int v33 = 0;
LABEL_21:
          uint64_t v48 = v92;
        }
        else
        {
          int v33 = 0;
        }
      }
      else
      {
        int v33 = 0;
      }
    }
    BOOL v90 = v33 != 0;
  }
  else
  {
    BOOL v90 = 0;
  }

  return v90;
}

BOOL sub_2360F153C(void *a1)
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v9 = objc_msgSend_domain(v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = *MEMORY[0x263EFD498];
  int isEqualToString = objc_msgSend_isEqualToString_(v9, v11, *MEMORY[0x263EFD498], v12, v13, v14, v15, v16);

  if (isEqualToString)
  {
    uint64_t v25 = objc_msgSend_code(v1, v18, v19, v20, v21, v22, v23, v24);
    if (v25 == 2)
    {
      uint64_t v35 = objc_msgSend_userInfo(v1, v26, v27, v28, v29, v30, v31, v32);
      uint64_t v42 = objc_msgSend_objectForKey_(v35, v36, *MEMORY[0x263EFD4C8], v37, v38, v39, v40, v41);

      long long v86 = 0u;
      long long v87 = 0u;
      long long v84 = 0u;
      long long v85 = 0u;
      uint64_t v50 = objc_msgSend_allValues(v42, v43, v44, v45, v46, v47, v48, v49, 0);
      uint64_t v55 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v51, (uint64_t)&v84, (uint64_t)v88, 16, v52, v53, v54);
      if (v55)
      {
        uint64_t v63 = v55;
        uint64_t v64 = *(void *)v85;
        while (2)
        {
          for (uint64_t i = 0; i != v63; ++i)
          {
            if (*(void *)v85 != v64) {
              objc_enumerationMutation(v50);
            }
            uint64_t v66 = *(void **)(*((void *)&v84 + 1) + 8 * i);
            uint64_t v67 = objc_msgSend_code(v66, v56, v57, v58, v59, v60, v61, v62);
            uint64_t v75 = objc_msgSend_domain(v66, v68, v69, v70, v71, v72, v73, v74);
            int v82 = objc_msgSend_isEqualToString_(v75, v76, v10, v77, v78, v79, v80, v81);

            if (v82 && v67 == 36)
            {
              BOOL v33 = 1;
              goto LABEL_16;
            }
          }
          uint64_t v63 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v56, (uint64_t)&v84, (uint64_t)v88, 16, v60, v61, v62);
          if (v63) {
            continue;
          }
          break;
        }
      }
      BOOL v33 = 0;
LABEL_16:
    }
    else
    {
      BOOL v33 = v25 == 36;
    }
    BOOL v34 = v33;
  }
  else
  {
    BOOL v34 = 0;
  }

  return v34;
}

void sub_2360F17FC(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void *)(a1 + 40);
    int v27 = 138543618;
    uint64_t v28 = v10;
    __int16 v29 = 2112;
    uint64_t v30 = v11;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@", (uint8_t *)&v27, 0x16u);
  }
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(v12 + 16);
  *(void *)(v12 + 16) = 0;

  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void **)(v14 + 24);
  *(void *)(v14 + 24) = 0;

  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void **)(v16 + 112);
  *(void *)(v16 + 112) = 0;

  *(unsigned char *)(*(void *)(a1 + 32) + 13) = 0;
  objc_msgSend_p_informObserversOfAttachmentChange(*(void **)(a1 + 32), v18, v19, v20, v21, v22, v23, v24);
  uint64_t v25 = _Block_copy(*(const void **)(a1 + 48));
  uint64_t v26 = v25;
  if (v25) {
    (*((void (**)(void *))v25 + 2))(v25);
  }
}

void sub_2360F19E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int isOffline = objc_msgSend_isOffline(BDSReachability, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v18 = (void (**)(id, uint64_t, void))_Block_copy(*(const void **)(a1 + 40));
  if (v18)
  {
    uint64_t v17 = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
    v18[2](v18, v17, isOffline ^ 1u);
  }
}

void sub_2360F1B68(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_alloc(MEMORY[0x263EFD808]);
    uint64_t v8 = objc_msgSend_initWithZoneName_ownerName_(v2, v3, *(void *)(a1 + 32), *MEMORY[0x263EFD488], v4, v5, v6, v7);
    uint64_t v15 = *(void *)(a1 + 48);
    if (v8)
    {
      id v33 = (id)v8;
      uint64_t v16 = objc_msgSend_recordZones(*(void **)(a1 + 40), v9, v10, v15 + 16, v11, v12, v13, v14);
      uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v16, v17, (uint64_t)v33, v18, v19, v20, v21, v22);
      uint64_t v31 = objc_msgSend_recordZone(v23, v24, v25, v26, v27, v28, v29, v30);
      (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v31);

      return;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 48);
  }
  uint64_t v32 = *(void (**)(uint64_t, void))(v15 + 16);
  v32(v15, 0);
}

void sub_2360F20D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360F2118(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = WeakRetained;
  if (v5 && WeakRetained)
  {
    uint64_t v8 = BDSCloudKitLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138543362;
      id v45 = v5;
      _os_log_impl(&dword_2360BC000, v8, OS_LOG_TYPE_INFO, "CKModifySubscriptionsOperation failed: %{public}@", buf, 0xCu);
    }

    uint64_t v16 = objc_msgSend_userInfo(v5, v9, v10, v11, v12, v13, v14, v15);
    uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v16, v17, *MEMORY[0x263EFD4A0], v18, v19, v20, v21, v22);

    if (v23)
    {
      objc_msgSend_doubleValue(v23, v24, v25, v26, v27, v28, v29, v30);
      dispatch_time_t v32 = dispatch_time(0, (uint64_t)(v31 * 1000000000.0));
      uint64_t v40 = objc_msgSend_accessQueue(v7, v33, v34, v35, v36, v37, v38, v39);
      v41[0] = MEMORY[0x263EF8330];
      v41[1] = 3221225472;
      v41[2] = sub_2360F22D4;
      v41[3] = &unk_264CA1450;
      id v42 = v7;
      id v43 = *(id *)(a1 + 32);
      dispatch_after(v32, v40, v41);
    }
  }
}

uint64_t sub_2360F22D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_p_unsubscribeToContainer_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4, a5, a6, a7, a8);
}

void sub_2360F265C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360F26A4(void **a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    uint64_t v7 = BDSCloudKitLog();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        uint64_t v16 = objc_msgSend_containerIdentifier(a1[4], v9, v10, v11, v12, v13, v14, v15);
        *(_DWORD *)buf = 138543618;
        uint64_t v77 = v16;
        __int16 v78 = 2114;
        id v79 = v5;
        _os_log_impl(&dword_2360BC000, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation (%{public}@) failed: %{public}@", buf, 0x16u);
      }
      uint64_t v24 = objc_msgSend_userInfo(v5, v17, v18, v19, v20, v21, v22, v23);
      double v31 = objc_msgSend_objectForKeyedSubscript_(v24, v25, *MEMORY[0x263EFD4A0], v26, v27, v28, v29, v30);

      if (v31)
      {
        objc_msgSend_doubleValue(v31, v32, v33, v34, v35, v36, v37, v38);
        dispatch_time_t v40 = dispatch_time(0, (uint64_t)(v39 * 1000000000.0));
        uint64_t v48 = objc_msgSend_accessQueue(WeakRetained, v41, v42, v43, v44, v45, v46, v47);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = sub_2360F29C0;
        block[3] = &unk_264CA17F0;
        id v74 = WeakRetained;
        id v75 = a1[5];
        dispatch_after(v40, v48, block);

        uint64_t v49 = v74;
      }
      else
      {
        uint64_t v69 = _Block_copy(a1[5]);
        uint64_t v49 = v69;
        if (v69) {
          (*((void (**)(void *))v69 + 2))(v69);
        }
      }

      goto LABEL_17;
    }
    if (v8)
    {
      uint64_t v50 = objc_msgSend_containerIdentifier(a1[4], v9, v10, v11, v12, v13, v14, v15);
      *(_DWORD *)buf = 138543362;
      uint64_t v77 = v50;
      _os_log_impl(&dword_2360BC000, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation Success for: (%{public}@)", buf, 0xCu);
    }
    uint64_t v58 = objc_msgSend_accessQueue(WeakRetained, v51, v52, v53, v54, v55, v56, v57);

    if (v58)
    {
      uint64_t v66 = objc_msgSend_accessQueue(WeakRetained, v59, v60, v61, v62, v63, v64, v65);
      v70[0] = MEMORY[0x263EF8330];
      v70[1] = 3221225472;
      v70[2] = sub_2360F29CC;
      v70[3] = &unk_264CA17F0;
      id v71 = WeakRetained;
      id v72 = a1[5];
      dispatch_async(v66, v70);

      goto LABEL_17;
    }
  }
  uint64_t v67 = _Block_copy(a1[5]);
  uint64_t v68 = v67;
  if (v67) {
    (*((void (**)(void *))v67 + 2))(v67);
  }

LABEL_17:
}

uint64_t sub_2360F29C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_p_subscribeWithCompletion_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4, a5, a6, a7, a8);
}

uint64_t sub_2360F29CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setHasSubscription_(*(void **)(a1 + 32), a2, 1, a4, a5, a6, a7, a8);
  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  return objc_msgSend_p_scheduleArchiveWithCompletion_(v15, v9, v16, v10, v11, v12, v13, v14);
}

void sub_2360F2F54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360F2F80(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360F2F90(uint64_t a1)
{
}

void sub_2360F2F98(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v23 = v3;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 3221225472;
  void v20[2] = sub_2360F30E0;
  v20[3] = &unk_264CA1450;
  v20[4] = *(void *)(a1 + 32);
  id v21 = v3;
  id v19 = v3;
  dispatch_async(v18, v20);
}

void sub_2360F30E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v14, v9, 0, *(void *)(a1 + 40), v10, v11, v12, v13);
}

void sub_2360F3138(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v23 = v3;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was purged: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 3221225472;
  void v20[2] = sub_2360F3280;
  v20[3] = &unk_264CA1450;
  v20[4] = *(void *)(a1 + 32);
  id v21 = v3;
  id v19 = v3;
  dispatch_async(v18, v20);
}

void sub_2360F3280(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v14, v9, 0, *(void *)(a1 + 40), v10, v11, v12, v13);
}

void sub_2360F32D8(uint64_t a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v23 = v3;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted due to user encrypted data reset: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 3221225472;
  void v20[2] = sub_2360F3420;
  v20[3] = &unk_264CA1450;
  v20[4] = *(void *)(a1 + 32);
  id v21 = v3;
  id v19 = v3;
  dispatch_async(v18, v20);
}

void sub_2360F3420(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v14, v9, 0, *(void *)(a1 + 40), v10, v11, v12, v13);
}

void sub_2360F3478(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 3221225472;
  v14[2] = sub_2360F3530;
  v14[3] = &unk_264CA1450;
  uint64_t v12 = *(void *)(a1 + 32);
  id v15 = v3;
  uint64_t v16 = v12;
  id v13 = v3;
  dispatch_async(v11, v14);
}

uint64_t sub_2360F3530(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v17 = 138543362;
    uint64_t v18 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation serverChangeToken was updated: %{public}@", (uint8_t *)&v17, 0xCu);
  }

  objc_msgSend_setServerChangeToken_(*(void **)(a1 + 40), v4, *(void *)(a1 + 32), v5, v6, v7, v8, v9);
  return objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 40), v10, (uint64_t)&unk_26E971D10, v11, v12, v13, v14, v15);
}

void sub_2360F35F0()
{
  uint64_t v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (changeTokenUpdatedBlock)", v1, 2u);
  }
}

void sub_2360F3658(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F3724;
  block[3] = &unk_264CA1400;
  id v16 = v3;
  id v12 = *(id *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  id v17 = v12;
  uint64_t v18 = v13;
  id v14 = v3;
  dispatch_async(v11, block);
}

void sub_2360F3724(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v39 = 138543362;
    uint64_t v40 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was changed: %{public}@", (uint8_t *)&v39, 0xCu);
  }

  uint64_t v4 = *(void **)(a1 + 40);
  id v12 = objc_msgSend_zoneName(*(void **)(a1 + 32), v5, v6, v7, v8, v9, v10, v11);
  LODWORD(v4) = objc_msgSend_containsObject_(v4, v13, (uint64_t)v12, v14, v15, v16, v17, v18);

  if (v4)
  {
    uint64_t v26 = objc_msgSend_changedRecordZoneIDs(*(void **)(a1 + 48), v19, v20, v21, v22, v23, v24, v25);
    objc_msgSend_addObject_(v26, v27, *(void *)(a1 + 32), v28, v29, v30, v31, v32);

    objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 48), v33, (uint64_t)&unk_26E971D30, v34, v35, v36, v37, v38);
  }
}

void sub_2360F3828()
{
  uint64_t v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneWithIDChangedBlock)", v1, 2u);
  }
}

void sub_2360F3890(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  id v6 = a2;
  id v7 = a4;
  if (objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v8, v9, v10, v11, v12, v13, v14))
  {
    uint64_t v20 = *(void **)(a1 + 32);
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = *(void *)(*(void *)(v21 + 8) + 40);
    v41[0] = MEMORY[0x263EF8330];
    v41[1] = 3221225472;
    v41[2] = sub_2360F3B18;
    v41[3] = &unk_264CA19D0;
    void v41[4] = v21;
    objc_msgSend_zonesDeletedOrReset_completion_(v20, v15, v22, (uint64_t)v41, v16, v17, v18, v19);
  }
  if (v7)
  {
    uint64_t v23 = BDSCloudKitLog();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_2361FA284();
    }

    uint64_t v24 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    uint64_t v25 = v24;
    if (!v24) {
      goto LABEL_9;
    }
    uint64_t v26 = v24[2];
LABEL_8:
    v26();
LABEL_9:

    goto LABEL_14;
  }
  uint64_t v27 = BDSCloudKitLog();
  uint64_t v28 = v27;
  if (!v6)
  {
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_2360BC000, v28, OS_LOG_TYPE_INFO, "CKFetchDatabaseChangesOperation Success, but no serverChangeToken", buf, 2u);
    }

    uint64_t v37 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    uint64_t v25 = v37;
    if (!v37) {
      goto LABEL_9;
    }
    uint64_t v26 = v37[2];
    goto LABEL_8;
  }
  if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v43 = v6;
    _os_log_impl(&dword_2360BC000, v28, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation Success, serverChangeToken: %{public}@", buf, 0xCu);
  }

  uint64_t v36 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v29, v30, v31, v32, v33, v34, v35);
  v38[0] = MEMORY[0x263EF8330];
  v38[1] = 3221225472;
  v38[2] = sub_2360F3BC8;
  v38[3] = &unk_264CA1890;
  v38[4] = *(void *)(a1 + 32);
  id v39 = v6;
  id v40 = *(id *)(a1 + 40);
  dispatch_async(v36, v38);

LABEL_14:
}

void sub_2360F3B18(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_2360F3BC8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setServerChangeToken_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), a4, a5, a6, a7, a8);
  uint64_t v9 = _Block_copy(*(const void **)(a1 + 48));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(void *, void))v9 + 2))(v9, 0);
  }

  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 3221225472;
  v18[2] = sub_2360F3C84;
  v18[3] = &unk_264CA1428;
  uint64_t v11 = *(void **)(a1 + 32);
  id v19 = *(id *)(a1 + 40);
  objc_msgSend_p_scheduleArchiveWithCompletion_(v11, v12, (uint64_t)v18, v13, v14, v15, v16, v17);
}

void sub_2360F3C84(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (fetchDatabaseChangesCompletionBlock), serverChangeToken: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_2360F4090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360F40B8(id *a1, void *a2, void *a3)
{
  uint64_t v182 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = BDSCloudKitLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = objc_msgSend_allKeys(v5, v8, v9, v10, v11, v12, v13, v14);
    id v16 = objc_alloc_init(MEMORY[0x263EFF980]);
    *(void *)&long long buf = MEMORY[0x263EF8330];
    *((void *)&buf + 1) = 3221225472;
    uint64_t v179 = sub_2360FCDF8;
    uint64_t v180 = &unk_264CA1ED0;
    id v181 = v16;
    id v17 = v16;
    objc_msgSend_enumerateObjectsUsingBlock_(v15, v18, (uint64_t)&buf, v19, v20, v21, v22, v23);
    uint64_t v30 = objc_msgSend_componentsJoinedByString_(v17, v24, @",", v25, v26, v27, v28, v29);

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v30;
    _os_log_impl(&dword_2360BC000, v7, OS_LOG_TYPE_DEFAULT, "3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_2360F49D8;
  aBlock[3] = &unk_264CA1A48;
  objc_copyWeak(&v173, a1 + 8);
  id v172 = a1[7];
  uint64_t v31 = _Block_copy(aBlock);
  v163[0] = MEMORY[0x263EF8330];
  v163[1] = 3221225472;
  v163[2] = sub_2360F4D50;
  v163[3] = &unk_264CA1AE8;
  id v164 = a1[4];
  id v32 = v5;
  id v165 = v32;
  id v166 = a1[5];
  id v167 = a1[6];
  objc_copyWeak(&v170, a1 + 8);
  id v168 = a1[7];
  id v33 = v31;
  id v169 = v33;
  uint64_t v41 = (void (**)(void))_Block_copy(v163);
  if (!v6)
  {
    uint64_t v53 = (void *)MEMORY[0x263EFFA08];
    uint64_t v54 = objc_msgSend_allKeys(v32, v34, v35, v36, v37, v38, v39, v40);
    uint64_t v52 = objc_msgSend_setWithArray_(v53, v55, (uint64_t)v54, v56, v57, v58, v59, v60);

    uint64_t v67 = objc_msgSend_setWithArray_(MEMORY[0x263EFFA08], v61, (uint64_t)a1[4], v62, v63, v64, v65, v66);
    int isEqualToSet = objc_msgSend_isEqualToSet_(v52, v68, (uint64_t)v67, v69, v70, v71, v72, v73);

    if (!isEqualToSet)
    {
      long long v84 = BDSCloudKitLog();
      if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR))
      {
        id v85 = a1[4];
        id v86 = objc_alloc_init(MEMORY[0x263EFF980]);
        *(void *)&long long buf = MEMORY[0x263EF8330];
        *((void *)&buf + 1) = 3221225472;
        uint64_t v179 = sub_2360FCDF8;
        uint64_t v180 = &unk_264CA1ED0;
        id v87 = v86;
        id v181 = v87;
        objc_msgSend_enumerateObjectsUsingBlock_(v85, v88, (uint64_t)&buf, v89, v90, v91, v92, v93);
        uint64_t v100 = objc_msgSend_componentsJoinedByString_(v87, v94, @",", v95, v96, v97, v98, v99);

        id when = v100;
        objc_msgSend_allKeys(v32, v101, v102, v103, v104, v105, v106, v107);
        id v108 = (id)objc_claimAutoreleasedReturnValue();
        id v109 = objc_alloc_init(MEMORY[0x263EFF980]);
        *(void *)&long long buf = MEMORY[0x263EF8330];
        *((void *)&buf + 1) = 3221225472;
        uint64_t v179 = sub_2360FCDF8;
        uint64_t v180 = &unk_264CA1ED0;
        id v110 = v109;
        id v181 = v110;
        objc_msgSend_enumerateObjectsUsingBlock_(v108, v111, (uint64_t)&buf, v112, v113, v114, v115, v116);
        uint64_t v123 = objc_msgSend_componentsJoinedByString_(v110, v117, @",", v118, v119, v120, v121, v122);

        *(_DWORD *)uint64_t v174 = 138412546;
        id v175 = when;
        __int16 v176 = 2112;
        uint64_t v177 = v123;
        _os_log_impl(&dword_2360BC000, v84, OS_LOG_TYPE_ERROR, "CKFetchRecordZonesOperation Wanted:%@ Received:%@", v174, 0x16u);
      }
      v41[2](v41);
      goto LABEL_30;
    }
    id v75 = BDSCloudKitLog();
    if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_2360BC000, v75, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - calling saveResultsBlock", (uint8_t *)&buf, 2u);
    }

    uint64_t v83 = objc_msgSend_allValues(v32, v76, v77, v78, v79, v80, v81, v82);
    (*((void (**)(id, NSObject *, void))v33 + 2))(v33, v83, 0);
    goto LABEL_29;
  }
  uint64_t v42 = BDSCloudKitLog();
  if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
  {
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v6;
    _os_log_impl(&dword_2360BC000, v42, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@", (uint8_t *)&buf, 0xCu);
  }

  if ((sub_2360F1150(v6) & 1) != 0 || sub_2360F1330(v6))
  {
    uint64_t v50 = BDSCloudKitLog();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_2360BC000, v50, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - No PCS Identity available", (uint8_t *)&buf, 2u);
    }

    uint64_t v51 = _Block_copy(a1[7]);
    uint64_t v52 = v51;
    if (v51) {
      (*((void (**)(void *, id))v51 + 2))(v51, v6);
    }
    goto LABEL_30;
  }
  if (objc_msgSend_code(v6, v43, v44, v45, v46, v47, v48, v49) == 6
    || objc_msgSend_code(v6, v124, v125, v126, v127, v128, v129, v130) == 7)
  {
    uint64_t v131 = objc_msgSend_userInfo(v6, v124, v125, v126, v127, v128, v129, v130);
    uint64_t v52 = objc_msgSend_objectForKeyedSubscript_(v131, v132, *MEMORY[0x263EFD4A0], v133, v134, v135, v136, v137);

    id WeakRetained = objc_loadWeakRetained(a1 + 8);
    uint64_t v83 = objc_msgSend_accessQueue(WeakRetained, v139, v140, v141, v142, v143, v144, v145);

    if (v52 && v83)
    {
      uint64_t v146 = BDSCloudKitLog();
      if (os_log_type_enabled(v146, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v6;
        _os_log_impl(&dword_2360BC000, v146, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@", (uint8_t *)&buf, 0xCu);
      }

      objc_msgSend_doubleValue(v52, v147, v148, v149, v150, v151, v152, v153);
      dispatch_time_t whena = dispatch_time(0, (uint64_t)(v154 * 1000000000.0));
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_2360F55E8;
      block[3] = &unk_264CA1A98;
      objc_copyWeak(&v162, a1 + 8);
      id v161 = a1[7];
      id v160 = a1[4];
      dispatch_after(whena, v83, block);

      objc_destroyWeak(&v162);
    }
    else
    {
      uint64_t v155 = BDSCloudKitLog();
      if (os_log_type_enabled(v155, OS_LOG_TYPE_ERROR)) {
        sub_2361FA2EC();
      }

      (*((void (**)(id, void, id))v33 + 2))(v33, 0, v6);
    }
LABEL_29:

LABEL_30:
    goto LABEL_31;
  }
  if (objc_msgSend_code(v6, v124, v125, v126, v127, v128, v129, v130) == 3)
  {
    uint64_t v156 = BDSCloudKitLog();
    if (os_log_type_enabled(v156, OS_LOG_TYPE_ERROR)) {
      sub_2361FA2EC();
    }
  }
  else
  {
    if (!sub_2360F153C(v6))
    {
      v41[2](v41);
      goto LABEL_31;
    }
    uint64_t v156 = BDSCloudKitLog();
    if (os_log_type_enabled(v156, OS_LOG_TYPE_ERROR)) {
      sub_2361FA354();
    }
  }

  (*((void (**)(id, void, id))v33 + 2))(v33, 0, v6);
LABEL_31:

  objc_destroyWeak(&v170);
  objc_destroyWeak(&v173);
}

void sub_2360F497C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_2360F49D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v15 = WeakRetained;
  if (WeakRetained)
  {
    id v16 = objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11, v12, v13, v14);
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 3221225472;
    v19[2] = sub_2360F4AEC;
    v19[3] = &unk_264CA1450;
    id v20 = v15;
    id v21 = v5;
    dispatch_async(v16, v19);

    id v17 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v18 = v17;
    if (v17) {
      (*((void (**)(void *, id))v17 + 2))(v17, v6);
    }
  }
}

void sub_2360F4AEC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v10 = BDSCloudKitLog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = (objc_class *)MEMORY[0x263EFF980];
    id v12 = *(id *)(a1 + 40);
    id v13 = objc_alloc_init(v11);
    *(void *)&long long buf = MEMORY[0x263EF8330];
    *((void *)&buf + 1) = 3221225472;
    uint64_t v39 = sub_2360FCE50;
    uint64_t v40 = &unk_264CA1A20;
    id v41 = v13;
    id v14 = v13;
    objc_msgSend_enumerateObjectsUsingBlock_(v12, v15, (uint64_t)&buf, v16, v17, v18, v19, v20);
    uint64_t v27 = objc_msgSend_componentsJoinedByString_(v14, v21, @",", v22, v23, v24, v25, v26);

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v27;
    _os_log_impl(&dword_2360BC000, v10, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - assigning recordZones[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  uint64_t v28 = *(void **)(a1 + 40);
  v36[0] = MEMORY[0x263EF8330];
  v36[1] = 3221225472;
  v36[2] = sub_2360F4CBC;
  v36[3] = &unk_264CA1A20;
  id v37 = v9;
  id v29 = v9;
  objc_msgSend_enumerateObjectsUsingBlock_(v28, v30, (uint64_t)v36, v31, v32, v33, v34, v35);
}

void sub_2360F4CBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [BCCloudKitRecordZone alloc];
  id v25 = (id)objc_msgSend_initWithRecordZone_(v4, v5, (uint64_t)v3, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void **)(a1 + 32);
  uint64_t v19 = objc_msgSend_zoneID(v3, v12, v13, v14, v15, v16, v17, v18);

  objc_msgSend_setObject_forKeyedSubscript_(v11, v20, (uint64_t)v25, (uint64_t)v19, v21, v22, v23, v24);
}

void sub_2360F4D50(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v132 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_setWithArray_(MEMORY[0x263EFF9C0], a2, *(void *)(a1 + 32), a4, a5, a6, a7, a8);
  uint64_t v17 = objc_msgSend_allValues(*(void **)(a1 + 40), v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = (void *)MEMORY[0x263EFFA08];
  uint64_t v26 = objc_msgSend_allKeys(*(void **)(a1 + 40), v19, v20, v21, v22, v23, v24, v25);
  uint64_t v33 = objc_msgSend_setWithArray_(v18, v27, (uint64_t)v26, v28, v29, v30, v31, v32);
  objc_msgSend_minusSet_(v9, v34, (uint64_t)v33, v35, v36, v37, v38, v39);

  id v40 = objc_alloc_init(MEMORY[0x263EFF980]);
  v126[0] = MEMORY[0x263EF8330];
  v126[1] = 3221225472;
  v126[2] = sub_2360F50E8;
  v126[3] = &unk_264CA1A70;
  id v41 = v40;
  id v127 = v41;
  objc_msgSend_enumerateObjectsUsingBlock_(v9, v42, (uint64_t)v126, v43, v44, v45, v46, v47);
  uint64_t v48 = BDSCloudKitLog();
  if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
  {
    uint64_t v56 = objc_msgSend_allObjects(v9, v49, v50, v51, v52, v53, v54, v55);
    id v57 = objc_alloc_init(MEMORY[0x263EFF980]);
    *(void *)&long long buf = MEMORY[0x263EF8330];
    *((void *)&buf + 1) = 3221225472;
    uint64_t v129 = sub_2360FCDF8;
    uint64_t v130 = &unk_264CA1ED0;
    id v131 = v57;
    id v58 = v57;
    objc_msgSend_enumerateObjectsUsingBlock_(v56, v59, (uint64_t)&buf, v60, v61, v62, v63, v64);
    uint64_t v71 = objc_msgSend_componentsJoinedByString_(v58, v65, @",", v66, v67, v68, v69, v70);

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v71;
    _os_log_impl(&dword_2360BC000, v48, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  id v72 = objc_alloc(MEMORY[0x263EFD740]);
  uint64_t v78 = objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(v72, v73, (uint64_t)v41, 0, v74, v75, v76, v77);
  id v86 = objc_msgSend_bds_defaultConfiguration(MEMORY[0x263EFD778], v79, v80, v81, v82, v83, v84, v85);
  objc_msgSend_setContainer_(v86, v87, *(void *)(a1 + 48), v88, v89, v90, v91, v92);
  objc_msgSend_setConfiguration_(v78, v93, (uint64_t)v86, v94, v95, v96, v97, v98);
  objc_msgSend_setDatabase_(v78, v99, *(void *)(a1 + 56), v100, v101, v102, v103, v104);
  v119[0] = MEMORY[0x263EF8330];
  v119[1] = 3221225472;
  v119[2] = sub_2360F5160;
  v119[3] = &unk_264CA1AC0;
  objc_copyWeak(&v125, (id *)(a1 + 80));
  id v105 = v41;
  id v120 = v105;
  id v123 = *(id *)(a1 + 64);
  id v121 = *(id *)(a1 + 32);
  id v124 = *(id *)(a1 + 72);
  id v106 = v17;
  id v122 = v106;
  objc_msgSend_setModifyRecordZonesCompletionBlock_(v78, v107, (uint64_t)v119, v108, v109, v110, v111, v112);
  objc_msgSend_addOperation_(*(void **)(a1 + 56), v113, (uint64_t)v78, v114, v115, v116, v117, v118);

  objc_destroyWeak(&v125);
}

void sub_2360F50C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2360F50E8(uint64_t a1, void *a2)
{
  id v3 = (objc_class *)MEMORY[0x263EFD7F8];
  id v4 = a2;
  id v5 = [v3 alloc];
  id v18 = (id)objc_msgSend_initWithZoneID_(v5, v6, (uint64_t)v4, v7, v8, v9, v10, v11);

  objc_msgSend_addObject_(*(void **)(a1 + 32), v12, (uint64_t)v18, v13, v14, v15, v16, v17);
}

void sub_2360F5160(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v95 = *MEMORY[0x263EF8340];
  id v6 = a2;
  id v7 = a4;
  uint64_t v15 = v7;
  if (v7)
  {
    uint64_t v16 = objc_msgSend_userInfo(v7, v8, v9, v10, v11, v12, v13, v14);
    uint64_t v23 = objc_msgSend_objectForKeyedSubscript_(v16, v17, *MEMORY[0x263EFD4A0], v18, v19, v20, v21, v22);

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    uint64_t v32 = objc_msgSend_accessQueue(WeakRetained, v25, v26, v27, v28, v29, v30, v31);

    if (v23) {
      BOOL v39 = v32 == 0;
    }
    else {
      BOOL v39 = 1;
    }
    if (v39)
    {
      uint64_t v40 = *(void *)(a1 + 64);
      id v41 = objc_msgSend_arrayByAddingObjectsFromArray_(*(void **)(a1 + 48), v33, (uint64_t)v6, v34, v35, v36, v37, v38);
      (*(void (**)(uint64_t, void *, void *))(v40 + 16))(v40, v41, v15);
    }
    else
    {
      uint64_t v60 = BDSCloudKitLog();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
      {
        uint64_t v62 = (objc_class *)MEMORY[0x263EFF980];
        id v63 = *(id *)(a1 + 32);
        id v64 = objc_alloc_init(v62);
        *(void *)long long buf = MEMORY[0x263EF8330];
        *(void *)&buf[8] = 3221225472;
        *(void *)&uint8_t buf[16] = sub_2360FCE50;
        uint64_t v93 = &unk_264CA1A20;
        id v94 = v64;
        id v65 = v64;
        objc_msgSend_enumerateObjectsUsingBlock_(v63, v66, (uint64_t)buf, v67, v68, v69, v70, v71);
        uint64_t v78 = objc_msgSend_componentsJoinedByString_(v65, v72, @",", v73, v74, v75, v76, v77);

        *(_DWORD *)long long buf = 138543618;
        *(void *)&uint8_t buf[4] = v78;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v15;
        _os_log_impl(&dword_2360BC000, v60, OS_LOG_TYPE_ERROR, "5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@", buf, 0x16u);
      }
      objc_msgSend_doubleValue(v23, v79, v80, v81, v82, v83, v84, v85);
      dispatch_time_t v87 = dispatch_time(0, (uint64_t)(v86 * 1000000000.0));
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = sub_2360F5564;
      block[3] = &unk_264CA1A98;
      objc_copyWeak(&v91, (id *)(a1 + 72));
      id v90 = *(id *)(a1 + 56);
      id v89 = *(id *)(a1 + 40);
      dispatch_after(v87, v32, block);

      objc_destroyWeak(&v91);
    }
  }
  else
  {
    uint64_t v23 = objc_msgSend_arrayByAddingObjectsFromArray_(*(void **)(a1 + 48), v8, (uint64_t)v6, v10, v11, v12, v13, v14);
    uint64_t v42 = BDSCloudKitLog();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v43 = (objc_class *)MEMORY[0x263EFF980];
      id v44 = v23;
      id v45 = objc_alloc_init(v43);
      *(void *)long long buf = MEMORY[0x263EF8330];
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_2360FCE50;
      uint64_t v93 = &unk_264CA1A20;
      id v94 = v45;
      id v46 = v45;
      objc_msgSend_enumerateObjectsUsingBlock_(v44, v47, (uint64_t)buf, v48, v49, v50, v51, v52);

      uint64_t v59 = objc_msgSend_componentsJoinedByString_(v46, v53, @",", v54, v55, v56, v57, v58);

      *(_DWORD *)long long buf = 138543362;
      *(void *)&uint8_t buf[4] = v59;
      _os_log_impl(&dword_2360BC000, v42, OS_LOG_TYPE_DEFAULT, "CKModifyRecordZonesOperation success saving: %{public}@", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

void sub_2360F5564(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_p_createRecordZones_completionHandler_(WeakRetained, v2, *(void *)(a1 + 32), *(void *)(a1 + 40), v3, v4, v5, v6);
  }
  else
  {
    id v7 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v8 = v7;
    if (v7) {
      (*((void (**)(void *, void))v7 + 2))(v7, 0);
    }
  }
}

void sub_2360F55E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_p_createRecordZones_completionHandler_(WeakRetained, v2, *(void *)(a1 + 32), *(void *)(a1 + 40), v3, v4, v5, v6);
  }
  else
  {
    id v7 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v8 = v7;
    if (v7) {
      (*((void (**)(void *, void))v7 + 2))(v7, 0);
    }
  }
}

void sub_2360F5844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2360F5870(void **a1, void *a2, void *a3)
{
  uint64_t v222 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v197 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained)
  {
    id v135 = objc_alloc(MEMORY[0x263EFF940]);
    uint64_t v136 = NSString;
    uint64_t v144 = objc_msgSend_containerIdentifier(a1[4], v137, v138, v139, v140, v141, v142, v143);
    uint64_t v158 = objc_msgSend_stringWithFormat_(v136, v145, @"Nil weak self after fetch salt record %@", v146, v147, v148, v149, v150, v144);
    uint64_t v209 = *MEMORY[0x263F08608];
    uint64_t v159 = v197;
    if (!v197)
    {
      uint64_t v159 = objc_msgSend_null(MEMORY[0x263EFF9D0], v151, v152, v153, v154, v155, v156, v157);
    }
    uint64_t v210 = v159;
    id v160 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v151, (uint64_t)&v210, (uint64_t)&v209, 1, v155, v156, v157);
    id v165 = (id)objc_msgSend_initWithName_reason_userInfo_(v135, v161, @"No Books Salt", (uint64_t)v158, (uint64_t)v160, v162, v163, v164);

    if (!v197) {
    objc_exception_throw(v165);
    }
  }
  uint64_t v14 = WeakRetained;
  uint64_t v203 = 0;
  uint64_t v204 = &v203;
  uint64_t v205 = 0x3032000000;
  uint64_t v206 = sub_2360F2F80;
  uint64_t v207 = sub_2360F2F90;
  id v208 = 0;
  if (!v5 || v197)
  {
    uint64_t v69 = BDSCloudKitLog();
    if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
    {
      uint64_t v134 = objc_msgSend_containerIdentifier(a1[4], v70, v71, v72, v73, v74, v75, v76);
      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v134;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v197;
      *(_WORD *)&buf[22] = 2112;
      *(void *)&unsigned char buf[24] = v5;
      _os_log_error_impl(&dword_2360BC000, v69, OS_LOG_TYPE_ERROR, "(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover", buf, 0x20u);
    }
    long long v220 = 0u;
    long long v221 = 0u;
    long long v218 = 0u;
    long long v219 = 0u;
    long long v216 = 0u;
    long long v217 = 0u;
    memset(buf, 0, sizeof(buf));
    if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 0x80uLL, buf))
    {
      id v166 = objc_alloc(MEMORY[0x263EFF940]);
      id v167 = NSString;
      id v175 = objc_msgSend_containerIdentifier(a1[4], v168, v169, v170, v171, v172, v173, v174);
      uint64_t v189 = objc_msgSend_stringWithFormat_(v167, v176, @"Unable to generate random salt %@", v177, v178, v179, v180, v181, v175);
      uint64_t v211 = *MEMORY[0x263F08608];
      uint64_t v190 = v197;
      if (!v197)
      {
        uint64_t v190 = objc_msgSend_null(MEMORY[0x263EFF9D0], v182, v183, v184, v185, v186, v187, v188);
      }
      uint64_t v212 = v190;
      uint64_t v191 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v182, (uint64_t)&v212, (uint64_t)&v211, 1, v186, v187, v188);
      id v196 = (id)objc_msgSend_initWithName_reason_userInfo_(v166, v192, @"No Books Record Salt", (uint64_t)v189, (uint64_t)v191, v193, v194, v195);

      if (!v197) {
      objc_exception_throw(v196);
      }
    }
    id v77 = objc_alloc(MEMORY[0x263EFD7E8]);
    uint64_t v84 = objc_msgSend_initWithRecordName_(v77, v78, @"recordIDSalt", v79, v80, v81, v82, v83);
    id v85 = objc_alloc(MEMORY[0x263EFD7C8]);
    id v91 = objc_msgSend_initWithRecordType_recordID_(v85, v86, @"recordIDSalt", (uint64_t)v84, v87, v88, v89, v90);
    uint64_t v97 = objc_msgSend_dataWithBytes_length_(MEMORY[0x263EFF8F8], v92, (uint64_t)buf, 128, v93, v94, v95, v96);
    id v105 = objc_msgSend_encryptedValuesByKey(v91, v98, v99, v100, v101, v102, v103, v104);
    objc_msgSend_setObject_forKeyedSubscript_(v105, v106, (uint64_t)v97, @"saltEncrypted", v107, v108, v109, v110);

    uint64_t v111 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v111, OS_LOG_TYPE_INFO))
    {
      uint64_t v119 = objc_msgSend_containerIdentifier(a1[4], v112, v113, v114, v115, v116, v117, v118);
      *(_DWORD *)uint64_t v213 = 138543362;
      uint64_t v214 = v119;
      _os_log_impl(&dword_2360BC000, v111, OS_LOG_TYPE_INFO, "(%{public}@) Will save record salt", v213, 0xCu);
    }
    id v127 = objc_msgSend_database(a1[4], v120, v121, v122, v123, v124, v125, v126);
    v198[0] = MEMORY[0x263EF8330];
    v198[1] = 3221225472;
    v198[2] = sub_2360F5FF8;
    v198[3] = &unk_264CA1B38;
    objc_copyWeak(&v202, a1 + 6);
    v198[4] = a1[4];
    uint64_t v201 = &v203;
    id v128 = v97;
    id v199 = v128;
    id v200 = a1[5];
    objc_msgSend_saveRecord_completionHandler_(v127, v129, (uint64_t)v91, (uint64_t)v198, v130, v131, v132, v133);

    objc_destroyWeak(&v202);
  }
  else
  {
    uint64_t v15 = objc_msgSend_encryptedValuesByKey(v5, v7, v8, v9, v10, v11, v12, v13);
    uint64_t v22 = objc_msgSend_objectForKeyedSubscript_(v15, v16, @"saltEncrypted", v17, v18, v19, v20, v21);

    if (!v22)
    {
      uint64_t v22 = objc_msgSend_objectForKeyedSubscript_(v5, v23, @"salt", v24, v25, v26, v27, v28);
    }
    objc_msgSend_setRecordIDSalt_(v14, v23, (uint64_t)v22, v24, v25, v26, v27, v28);
    uint64_t v36 = objc_msgSend_recordChangeTag(v5, v29, v30, v31, v32, v33, v34, v35);
    uint64_t v37 = (void *)v204[5];
    v204[5] = v36;

    uint64_t v38 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      id v46 = objc_msgSend_containerIdentifier(a1[4], v39, v40, v41, v42, v43, v44, v45);
      uint64_t v47 = v204[5];
      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v46;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v22;
      *(_WORD *)&buf[22] = 2112;
      *(void *)&unsigned char buf[24] = v47;
      _os_log_impl(&dword_2360BC000, v38, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", buf, 0x20u);
    }
    uint64_t v48 = v204[5];
    uint64_t v49 = (void *)MEMORY[0x263EFFA08];
    uint64_t v57 = objc_msgSend_desiredRecordZoneIDs(a1[4], v50, v51, v52, v53, v54, v55, v56);
    id v64 = objc_msgSend_setWithArray_(v49, v58, (uint64_t)v57, v59, v60, v61, v62, v63);
    objc_msgSend_p_informObserversOfSaltVersionIdentifierChanged_forZones_completion_(v14, v65, v48, (uint64_t)v64, (uint64_t)a1[5], v66, v67, v68);
  }
  _Block_object_dispose(&v203, 8);
}

void sub_2360F5EDC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    uint64_t v18 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_2361FA3BC();
    }

    uint64_t v23 = (void (**)(void *, void *))_Block_copy(*(const void **)(v14 + 40));
    if (v23)
    {
      uint64_t v24 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v19, @"BDSErrorDomain", 1005, 0, v20, v21, v22);
      v23[2](v23, v24);
    }
    objc_end_catch();
    JUMPOUT(0x2360F5C68);
  }
  _Unwind_Resume(a1);
}

void sub_2360F5FF8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v241 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
  {
    id v200 = objc_alloc(MEMORY[0x263EFF940]);
    uint64_t v201 = NSString;
    uint64_t v209 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v202, v203, v204, v205, v206, v207, v208);
    uint64_t v223 = objc_msgSend_stringWithFormat_(v201, v210, @"Nil weak self after save record %@", v211, v212, v213, v214, v215, v209);
    uint64_t v231 = *MEMORY[0x263F08608];
    uint64_t v224 = v6;
    if (!v6)
    {
      uint64_t v224 = objc_msgSend_null(MEMORY[0x263EFF9D0], v216, v217, v218, v219, v220, v221, v222);
    }
    uint64_t v232 = v224;
    uint64_t v225 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v216, (uint64_t)&v232, (uint64_t)&v231, 1, v220, v221, v222);
    id v230 = (id)objc_msgSend_initWithName_reason_userInfo_(v200, v226, @"No Books Record Salt", (uint64_t)v223, (uint64_t)v225, v227, v228, v229);

    if (!v6) {
    objc_exception_throw(v230);
    }
  }
  uint64_t v8 = WeakRetained;
  uint64_t v9 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    id v17 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
    *(_DWORD *)long long buf = 138543362;
    id v234 = v17;
    _os_log_impl(&dword_2360BC000, v9, OS_LOG_TYPE_INFO, "(%{public}@) Saving record salt....", buf, 0xCu);
  }
  uint64_t v25 = objc_msgSend_domain(v6, v18, v19, v20, v21, v22, v23, v24);
  if (objc_msgSend_isEqualToString_(v25, v26, *MEMORY[0x263EFD498], v27, v28, v29, v30, v31))
  {
    uint64_t v39 = objc_msgSend_code(v6, v32, v33, v34, v35, v36, v37, v38);

    if (v39 == 14)
    {
      uint64_t v47 = objc_msgSend_userInfo(v6, v40, v41, v42, v43, v44, v45, v46);
      uint64_t v54 = objc_msgSend_objectForKeyedSubscript_(v47, v48, *MEMORY[0x263EFD4F8], v49, v50, v51, v52, v53);

      uint64_t v62 = objc_msgSend_encryptedValuesByKey(v54, v55, v56, v57, v58, v59, v60, v61);
      uint64_t v69 = objc_msgSend_objectForKeyedSubscript_(v62, v63, @"saltEncrypted", v64, v65, v66, v67, v68);

      if (v54)
      {
        uint64_t v70 = BDSCloudKitSyncLog();
        if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v78 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v71, v72, v73, v74, v75, v76, v77);
          double v86 = objc_msgSend_recordChangeTag(v54, v79, v80, v81, v82, v83, v84, v85);
          *(_DWORD *)long long buf = 138544130;
          id v234 = v78;
          __int16 v235 = 2112;
          v236 = v69;
          __int16 v237 = 2112;
          v238 = v86;
          __int16 v239 = 2112;
          id v240 = v6;
          _os_log_impl(&dword_2360BC000, v70, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x2Au);
        }
        objc_msgSend_setRecordIDSalt_(v8, v87, (uint64_t)v69, v88, v89, v90, v91, v92);
        uint64_t v100 = objc_msgSend_recordChangeTag(v54, v93, v94, v95, v96, v97, v98, v99);
        uint64_t v101 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v102 = *(void **)(v101 + 40);
        *(void *)(v101 + 40) = v100;

        id v6 = 0;
      }

      goto LABEL_18;
    }
  }
  else
  {
  }
  uint64_t v103 = BDSCloudKitSyncLog();
  uint64_t v54 = v103;
  if (v6)
  {
    if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR)) {
      sub_2361FA48C();
    }
  }
  else
  {
    if (os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v111 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v104, v105, v106, v107, v108, v109, v110);
      uint64_t v112 = *(void **)(a1 + 40);
      id v120 = objc_msgSend_recordChangeTag(v5, v113, v114, v115, v116, v117, v118, v119);
      *(_DWORD *)long long buf = 138543874;
      id v234 = v111;
      __int16 v235 = 2112;
      v236 = v112;
      __int16 v237 = 2112;
      v238 = v120;
      _os_log_impl(&dword_2360BC000, v54, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x20u);
    }
    id v128 = objc_msgSend_encryptedValuesByKey(v5, v121, v122, v123, v124, v125, v126, v127);
    id v135 = objc_msgSend_objectForKeyedSubscript_(v128, v129, @"saltEncrypted", v130, v131, v132, v133, v134);
    objc_msgSend_setRecordIDSalt_(v8, v136, (uint64_t)v135, v137, v138, v139, v140, v141);

    uint64_t v149 = objc_msgSend_recordChangeTag(v5, v142, v143, v144, v145, v146, v147, v148);
    id v6 = 0;
    uint64_t v150 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v54 = *(NSObject **)(v150 + 40);
    *(void *)(v150 + 40) = v149;
  }
LABEL_18:

  uint64_t v158 = objc_msgSend_recordIDSalt(v8, v151, v152, v153, v154, v155, v156, v157);

  uint64_t v159 = BDSCloudKitSyncLog();
  id v160 = v159;
  if (v6 || !v158)
  {
    if (os_log_type_enabled(v159, OS_LOG_TYPE_ERROR)) {
      sub_2361FA424();
    }

    id v199 = _Block_copy(*(const void **)(a1 + 48));
    uint64_t v187 = v199;
    if (v199) {
      (*((void (**)(void *, id))v199 + 2))(v199, v6);
    }
  }
  else
  {
    if (os_log_type_enabled(v159, OS_LOG_TYPE_DEFAULT))
    {
      id v168 = objc_msgSend_containerIdentifier(v8, v161, v162, v163, v164, v165, v166, v167);
      __int16 v176 = objc_msgSend_recordIDSalt(*(void **)(a1 + 32), v169, v170, v171, v172, v173, v174, v175);
      uint64_t v177 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      *(_DWORD *)long long buf = 138543874;
      id v234 = v168;
      __int16 v235 = 2112;
      v236 = v176;
      __int16 v237 = 2112;
      v238 = v177;
      _os_log_impl(&dword_2360BC000, v160, OS_LOG_TYPE_DEFAULT, "(%{public}@) *** Got record salt:(%@) changeTag:(%@)", buf, 0x20u);
    }
    uint64_t v178 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    uint64_t v179 = (void *)MEMORY[0x263EFFA08];
    uint64_t v187 = objc_msgSend_desiredRecordZoneIDs(*(void **)(a1 + 32), v180, v181, v182, v183, v184, v185, v186);
    uint64_t v194 = objc_msgSend_setWithArray_(v179, v188, (uint64_t)v187, v189, v190, v191, v192, v193);
    objc_msgSend_p_informObserversOfSaltVersionIdentifierChanged_forZones_completion_(v8, v195, v178, (uint64_t)v194, *(void *)(a1 + 48), v196, v197, v198);
  }
}

void sub_2360F67B0(void **a1, void *a2)
{
  id v64 = a2;
  uint64_t v10 = objc_msgSend_changedRecordZoneIDs(a1[4], v3, v4, v5, v6, v7, v8, v9);
  if (objc_msgSend_containsObject_(v10, v11, (uint64_t)v64, v12, v13, v14, v15, v16))
  {
    uint64_t v24 = objc_msgSend_tokenStores(a1[4], v17, v18, v19, v20, v21, v22, v23);
    uint64_t v31 = objc_msgSend_objectForKeyedSubscript_(v24, v25, (uint64_t)v64, v26, v27, v28, v29, v30);
    int v39 = objc_msgSend_cloudSyncEnabled(v31, v32, v33, v34, v35, v36, v37, v38);

    if (v39)
    {
      uint64_t v47 = a1 + 5;
      goto LABEL_7;
    }
  }
  else
  {
  }
  uint64_t v48 = objc_msgSend_tokenStores(a1[4], v40, v41, v42, v43, v44, v45, v46);
  uint64_t v55 = objc_msgSend_objectForKeyedSubscript_(v48, v49, (uint64_t)v64, v50, v51, v52, v53, v54);
  int v63 = objc_msgSend_cloudSyncEnabled(v55, v56, v57, v58, v59, v60, v61, v62);

  if (!v63) {
    goto LABEL_8;
  }
  uint64_t v47 = a1 + 6;
LABEL_7:
  objc_msgSend_addObject_(*v47, v40, (uint64_t)v64, v42, v43, v44, v45, v46);
LABEL_8:
}

void sub_2360F68A8(uint64_t a1, void *a2)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8, v9, v10, v11);
    uint64_t v13 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543618;
    uint64_t v46 = v12;
    __int16 v47 = 2114;
    uint64_t v48 = v13;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@",
      buf,
      0x16u);
  }
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v14 = *(id *)(a1 + 40);
  uint64_t v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v15, (uint64_t)&v40, (uint64_t)v44, 16, v16, v17, v18);
  if (v19)
  {
    uint64_t v27 = v19;
    uint64_t v28 = *(void *)v41;
    do
    {
      uint64_t v29 = 0;
      do
      {
        if (*(void *)v41 != v28) {
          objc_enumerationMutation(v14);
        }
        uint64_t v30 = *(void **)(a1 + 32);
        uint64_t v31 = objc_msgSend_zoneName(*(void **)(*((void *)&v40 + 1) + 8 * v29), v20, v21, v22, v23, v24, v25, v26, (void)v40);
        objc_msgSend_p_informObserversOfCompletedFetchOfZone_(v30, v32, (uint64_t)v31, v33, v34, v35, v36, v37);

        ++v29;
      }
      while (v27 != v29);
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v20, (uint64_t)&v40, (uint64_t)v44, 16, v24, v25, v26);
    }
    while (v27);
  }

  uint64_t v38 = _Block_copy(*(const void **)(a1 + 48));
  int v39 = v38;
  if (v38) {
    (*((void (**)(void *, id))v38 + 2))(v38, v3);
  }
}

void sub_2360F6DE0(uint64_t a1, void *a2)
{
  id v36 = a2;
  uint64_t v15 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v3, (uint64_t)v36, v4, v5, v6, v7, v8);
  if (!v15)
  {
    if (!objc_msgSend_containsObject_(*(void **)(a1 + 40), v9, (uint64_t)v36, v10, v11, v12, v13, v14)) {
      goto LABEL_5;
    }
    id v16 = objc_alloc(MEMORY[0x263EFD7F8]);
    uint64_t v15 = objc_msgSend_initWithZoneID_(v16, v17, (uint64_t)v36, v18, v19, v20, v21, v22);
    uint64_t v23 = [BCCloudKitRecordZone alloc];
    uint64_t v30 = objc_msgSend_initWithRecordZone_(v23, v24, (uint64_t)v15, v25, v26, v27, v28, v29);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v31, (uint64_t)v30, (uint64_t)v36, v32, v33, v34, v35);
  }
LABEL_5:
}

void sub_2360F6E9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = objc_msgSend_tokenStores(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_objectForKeyedSubscript_(v11, v12, (uint64_t)v3, v13, v14, v15, v16, v17);

  if (v18)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    uint64_t v26 = objc_msgSend_copy(v3, v19, v20, v21, v22, v23, v24, v25);
    v34[0] = MEMORY[0x263EF8330];
    v34[1] = 3221225472;
    v34[2] = sub_2360F6FAC;
    v34[3] = &unk_264CA1BD8;
    void v34[4] = *(void *)(a1 + 32);
    id v35 = *(id *)(a1 + 48);
    id v36 = v26;
    id v37 = *(id *)(a1 + 40);
    id v27 = v26;
    objc_msgSend_serverChangeTokenWithCompletion_(v18, v28, (uint64_t)v34, v29, v30, v31, v32, v33);
  }
}

void sub_2360F6FAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F708C;
  block[3] = &unk_264CA1400;
  id v14 = *(id *)(a1 + 40);
  id v15 = v3;
  id v16 = *(id *)(a1 + 48);
  id v12 = v3;
  dispatch_async(v11, block);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_2360F708C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (void *)a1[4];
  uint64_t v9 = a1[5];
  if (v9)
  {
    uint64_t v11 = a1[6];
    id v12 = (void *)a1[4];
    objc_msgSend_setObject_forKey_(v12, a2, v9, v11, a5, a6, a7, a8);
  }
  else
  {
    objc_msgSend_null(MEMORY[0x263EFF9D0], a2, 0, a4, a5, a6, a7, a8);
    id v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v10, v13, (uint64_t)v18, a1[6], v14, v15, v16, v17);
  }
}

void sub_2360F711C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8))
  {
    uint64_t v9 = BDSCloudKitLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v10, v11, v12, v13, v14, v15, v16);
      uint64_t v18 = *(void *)(a1 + 48);
      *(_DWORD *)long long buf = 138543618;
      uint64_t v38 = v17;
      __int16 v39 = 2114;
      uint64_t v40 = v18;
      _os_log_impl(&dword_2360BC000, v9, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@", buf, 0x16u);
    }
    uint64_t v19 = objc_opt_new();
    uint64_t v20 = *(void **)(a1 + 48);
    v34[0] = MEMORY[0x263EF8330];
    v34[1] = 3221225472;
    v34[2] = sub_2360F7300;
    v34[3] = &unk_264CA1BB0;
    id v35 = *(id *)(a1 + 32);
    id v36 = v19;
    id v21 = v19;
    objc_msgSend_enumerateObjectsUsingBlock_(v20, v22, (uint64_t)v34, v23, v24, v25, v26, v27);
    objc_msgSend_p_fetchRecordZoneChanges_optionsByRecordZoneID_completionHandler_(*(void **)(a1 + 40), v28, *(void *)(a1 + 48), (uint64_t)v21, *(void *)(a1 + 56), v29, v30, v31);
  }
  else
  {
    *(unsigned char *)(*(void *)(a1 + 40) + 15) = 1;
    uint64_t v32 = _Block_copy(*(const void **)(a1 + 56));
    if (v32)
    {
      id v33 = v32;
      (*((void (**)(void *, void))v32 + 2))(v32, 0);
      uint64_t v32 = v33;
    }
  }
}

void sub_2360F7300(uint64_t a1, void *a2)
{
  id v20 = a2;
  uint64_t v9 = objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v3, (uint64_t)v20, v4, v5, v6, v7, v8);
  id v17 = objc_alloc_init(MEMORY[0x263EFD6B0]);
  if (v9)
  {
    uint64_t v18 = objc_msgSend_null(MEMORY[0x263EFF9D0], v10, v11, v12, v13, v14, v15, v16);

    if (v9 != v18) {
      objc_msgSend_setPreviousServerChangeToken_(v17, v10, (uint64_t)v9, v19, v13, v14, v15, v16);
    }
  }
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v10, (uint64_t)v17, (uint64_t)v20, v13, v14, v15, v16);
}

void sub_2360F7B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
  objc_destroyWeak(v46);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v47 - 256), 8);
  _Block_object_dispose((const void *)(v47 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_2360F7BEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F7CA8;
  block[3] = &unk_264CA1C00;
  id v14 = v3;
  long long v15 = *(_OWORD *)(a1 + 32);
  id v12 = v3;
  dispatch_async(v11, block);
}

void sub_2360F7CA8(uint64_t a1)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_recordID(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v18 = objc_msgSend_recordType(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
    int v83 = 138412546;
    uint64_t v84 = v10;
    __int16 v85 = 2112;
    double v86 = v18;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@", (uint8_t *)&v83, 0x16u);
  }
  uint64_t v19 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v27 = objc_msgSend_recordType(*(void **)(a1 + 32), v20, v21, v22, v23, v24, v25, v26);
  uint64_t v34 = objc_msgSend_objectForKey_(v19, v28, (uint64_t)v27, v29, v30, v31, v32, v33);

  if (!v34)
  {
    uint64_t v34 = objc_opt_new();
    uint64_t v41 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    uint64_t v49 = objc_msgSend_recordType(*(void **)(a1 + 32), v42, v43, v44, v45, v46, v47, v48);
    objc_msgSend_setObject_forKey_(v41, v50, (uint64_t)v34, (uint64_t)v49, v51, v52, v53, v54);
  }
  objc_msgSend_addObject_(v34, v35, *(void *)(a1 + 32), v36, v37, v38, v39, v40);
  if ((unint64_t)objc_msgSend_count(v34, v55, v56, v57, v58, v59, v60, v61) >= 0x20)
  {
    uint64_t v69 = *(void **)(a1 + 40);
    uint64_t v70 = objc_msgSend_recordType(*(void **)(a1 + 32), v62, v63, v64, v65, v66, v67, v68);
    objc_msgSend_p_informObserversOfRecordsChanged_forRecordType_(v69, v71, (uint64_t)v34, (uint64_t)v70, v72, v73, v74, v75);

    objc_msgSend_removeAllObjects(v34, v76, v77, v78, v79, v80, v81, v82);
  }
}

void sub_2360F7E4C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v14 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F7F28;
  block[3] = &unk_264CA1400;
  uint64_t v15 = *(void *)(a1 + 32);
  id v19 = v5;
  uint64_t v20 = v15;
  id v21 = v6;
  id v16 = v6;
  id v17 = v5;
  dispatch_async(v14, block);
}

void sub_2360F7F28(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412290;
    uint64_t v45 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@", buf, 0xCu);
  }

  uint64_t v11 = objc_msgSend_observers(*(void **)(a1 + 40), v4, v5, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_objectForKeyedSubscript_(v11, v12, *(void *)(a1 + 48), v13, v14, v15, v16, v17);

  if (objc_msgSend_count(v18, v19, v20, v21, v22, v23, v24, v25))
  {
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v26 = v18;
    uint64_t v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v27, (uint64_t)&v39, (uint64_t)v43, 16, v28, v29, v30);
    if (v31)
    {
      uint64_t v36 = v31;
      uint64_t v37 = *(void *)v40;
      do
      {
        uint64_t v38 = 0;
        do
        {
          if (*(void *)v40 != v37) {
            objc_enumerationMutation(v26);
          }
          objc_msgSend_databaseController_recordWithIDWasDeleted_recordType_(*(void **)(*((void *)&v39 + 1) + 8 * v38++), v32, *(void *)(a1 + 40), *(void *)(a1 + 32), *(void *)(a1 + 48), v33, v34, v35, (void)v39);
        }
        while (v36 != v38);
        uint64_t v36 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v32, (uint64_t)&v39, (uint64_t)v43, 16, v33, v34, v35);
      }
      while (v36);
    }
  }
}

void sub_2360F80AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v14 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F819C;
  block[3] = &unk_264CA1C78;
  uint64_t v15 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v16 = v15;
  uint64_t v17 = *(void *)(a1 + 48);
  id v21 = v16;
  id v22 = v5;
  id v23 = v6;
  uint64_t v24 = v17;
  id v18 = v6;
  id v19 = v5;
  dispatch_async(v14, block);
}

void sub_2360F819C(uint64_t a1)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = (objc_class *)MEMORY[0x263EFF980];
    id v12 = *(id *)(a1 + 40);
    id v13 = objc_alloc_init(v11);
    *(void *)uint64_t v61 = MEMORY[0x263EF8330];
    *(void *)&v61[8] = 3221225472;
    *(void *)&v61[16] = sub_2360FCDF8;
    uint64_t v62 = &unk_264CA1ED0;
    id v63 = v13;
    id v14 = v13;
    objc_msgSend_enumerateObjectsUsingBlock_(v12, v15, (uint64_t)v61, v16, v17, v18, v19, v20);
    uint64_t v27 = objc_msgSend_componentsJoinedByString_(v14, v21, @",", v22, v23, v24, v25, v26, *(void *)v61, *(void *)&v61[8], *(void *)&v61[16], v62);

    *(_DWORD *)uint64_t v61 = 138543618;
    *(void *)&v61[4] = v10;
    *(_WORD *)&v61[12] = 2114;
    *(void *)&v61[14] = v27;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ ", v61, 0x16u);
  }
  objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 32), v28, *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v29, v30, v31, v32, v33);
  objc_msgSend_removeAllObjects(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v34, v35, v36, v37, v38, v39, v40);
  uint64_t v48 = objc_msgSend_tokenStores(*(void **)(a1 + 32), v41, v42, v43, v44, v45, v46, v47);
  uint64_t v55 = objc_msgSend_objectForKeyedSubscript_(v48, v49, *(void *)(a1 + 48), v50, v51, v52, v53, v54);

  objc_msgSend_storeServerChangeToken_completion_(v55, v56, *(void *)(a1 + 56), 0, v57, v58, v59, v60);
}

void sub_2360F8370(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id v10 = a2;
  id v11 = a3;
  id v12 = a6;
  id v13 = BDSCloudKitLog();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v21 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v14, v15, v16, v17, v18, v19, v20);
    uint64_t v22 = (objc_class *)MEMORY[0x263EFF980];
    id v23 = *(id *)(a1 + 40);
    id v24 = objc_alloc_init(v22);
    *(void *)long long buf = MEMORY[0x263EF8330];
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_2360FCDF8;
    uint64_t v57 = &unk_264CA1ED0;
    id v58 = v24;
    id v25 = v24;
    objc_msgSend_enumerateObjectsUsingBlock_(v23, v26, (uint64_t)buf, v27, v28, v29, v30, v31);
    uint64_t v38 = objc_msgSend_componentsJoinedByString_(v25, v32, @",", v33, v34, v35, v36, v37);

    *(_DWORD *)long long buf = 138543874;
    *(void *)&uint8_t buf[4] = v21;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v38;
    *(_WORD *)&buf[22] = 1024;
    LODWORD(v57) = a5;
    _os_log_impl(&dword_2360BC000, v13, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d", buf, 0x1Cu);
  }
  uint64_t v46 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v39, v40, v41, v42, v43, v44, v45);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F85E0;
  block[3] = &unk_264CA1CC8;
  void block[4] = *(void *)(a1 + 32);
  id v51 = v10;
  char v55 = a5;
  long long v54 = *(_OWORD *)(a1 + 48);
  id v52 = v12;
  id v53 = v11;
  id v47 = v11;
  id v48 = v12;
  id v49 = v10;
  dispatch_async(v46, block);
}

void sub_2360F85E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v216[1] = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_changedRecordZoneIDs(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  objc_msgSend_removeObject_(v9, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);

  objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 32), v16, (uint64_t)&unk_26E971D50, v17, v18, v19, v20, v21);
  uint64_t v22 = *(void **)(a1 + 48);
  if (v22)
  {
    int v30 = sub_2360F1150(v22);
    uint64_t v31 = *(void **)(a1 + 48);
    if (v30)
    {
      uint64_t v32 = objc_msgSend_userInfo(v31, v23, v24, v25, v26, v27, v28, v29);
      uint64_t v39 = objc_msgSend_objectForKeyedSubscript_(v32, v33, *MEMORY[0x263EFD4C8], v34, v35, v36, v37, v38);
      objc_msgSend_allKeys(v39, v40, v41, v42, v43, v44, v45, v46);
      id v204 = (id)objc_claimAutoreleasedReturnValue();

      objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(*(void **)(a1 + 32), v47, (uint64_t)v204, 0, v48, v49, v50, v51);

      return;
    }
    if (sub_2360F1330(v31))
    {
      uint64_t v115 = (void *)MEMORY[0x263F087E8];
      uint64_t v215 = *MEMORY[0x263F08320];
      v216[0] = @"Unreadable keychain - cannot fetch record zones";
      uint64_t v116 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v111, (uint64_t)v216, (uint64_t)&v215, 1, v112, v113, v114);
      objc_msgSend_errorWithDomain_code_userInfo_(v115, v117, @"BDSCloudKitClientError", 2006, (uint64_t)v116, v118, v119, v120);
    }
    else
    {
      if (!sub_2360F153C(*(void **)(a1 + 48)))
      {
        uint64_t v136 = BDSCloudKitSyncLog();
        if (os_log_type_enabled(v136, OS_LOG_TYPE_ERROR))
        {
          uint64_t v193 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v137, v138, v139, v140, v141, v142, v143);
          uint64_t v194 = *(void **)(a1 + 40);
          uint64_t v195 = *(void *)(a1 + 48);
          uint64_t v203 = objc_msgSend_zoneName(v194, v196, v197, v198, v199, v200, v201, v202);
          *(_DWORD *)long long buf = 138544130;
          uint64_t v206 = v193;
          __int16 v207 = 2114;
          uint64_t v208 = v194;
          __int16 v209 = 2114;
          uint64_t v210 = v195;
          __int16 v211 = 2112;
          uint64_t v212 = v203;
          _os_log_error_impl(&dword_2360BC000, v136, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@", buf, 0x2Au);
        }
        uint64_t v151 = objc_msgSend_tokenStores(*(void **)(a1 + 32), v144, v145, v146, v147, v148, v149, v150);
        uint64_t v130 = objc_msgSend_objectForKeyedSubscript_(v151, v152, *(void *)(a1 + 40), v153, v154, v155, v156, v157);

        objc_msgSend_deleteCloudDataWithCompletion_(v130, v158, 0, v159, v160, v161, v162, v163);
        uint64_t v171 = objc_msgSend_domain(*(void **)(a1 + 48), v164, v165, v166, v167, v168, v169, v170);
        int isEqualToString = objc_msgSend_isEqualToString_(v171, v172, *MEMORY[0x263EFD498], v173, v174, v175, v176, v177);

        if (isEqualToString)
        {
          unint64_t v186 = objc_msgSend_code(*(void **)(a1 + 48), v179, v180, v181, v182, v183, v184, v185);
          if (v186 <= 0x1C && ((1 << v186) & 0x14200000) != 0) {
            objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v187, *(void *)(a1 + 40), v188, v189, v190, v191, v192);
          }
        }
        goto LABEL_16;
      }
      uint64_t v125 = (void *)MEMORY[0x263F087E8];
      uint64_t v213 = *MEMORY[0x263F08320];
      uint64_t v214 = @"Account temporarily unavailable - cannot fetch record zones";
      uint64_t v116 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v121, (uint64_t)&v214, (uint64_t)&v213, 1, v122, v123, v124);
      objc_msgSend_errorWithDomain_code_userInfo_(v125, v126, @"BDSCloudKitClientError", 2007, (uint64_t)v116, v127, v128, v129);
    uint64_t v130 = };

    objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 32), v131, (uint64_t)v130, 0, v132, v133, v134, v135);
LABEL_16:

    return;
  }
  id v52 = BDSCloudKitLog();
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v60 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v53, v54, v55, v56, v57, v58, v59);
    uint64_t v68 = objc_msgSend_zoneName(*(void **)(a1 + 40), v61, v62, v63, v64, v65, v66, v67);
    int v69 = *(unsigned __int8 *)(a1 + 80);
    *(_DWORD *)long long buf = 138543874;
    uint64_t v206 = v60;
    __int16 v207 = 2114;
    uint64_t v208 = v68;
    __int16 v209 = 1024;
    LODWORD(v210) = v69;
    _os_log_impl(&dword_2360BC000, v52, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d", buf, 0x1Cu);
  }
  objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 32), v70, *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v71, v72, v73, v74, v75);
  if (!*(unsigned char *)(a1 + 80))
  {
    int v83 = *(void **)(a1 + 32);
    uint64_t v84 = objc_msgSend_zoneName(*(void **)(a1 + 40), v76, v77, v78, v79, v80, v81, v82);
    objc_msgSend_p_informObserversOfCompletedFetchOfZone_(v83, v85, (uint64_t)v84, v86, v87, v88, v89, v90);
  }
  objc_msgSend_removeAllObjects(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v76, v77, v78, v79, v80, v81, v82);
  uint64_t v98 = objc_msgSend_tokenStores(*(void **)(a1 + 32), v91, v92, v93, v94, v95, v96, v97);
  uint64_t v105 = objc_msgSend_objectForKeyedSubscript_(v98, v99, *(void *)(a1 + 40), v100, v101, v102, v103, v104);

  objc_msgSend_storeServerChangeToken_completion_(v105, v106, *(void *)(a1 + 56), 0, v107, v108, v109, v110);
}

void sub_2360F8A58()
{
  uint64_t v0 = BDSCloudKitLog();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v1 = 0;
    _os_log_impl(&dword_2360BC000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneFetchCompletionBlock)", v1, 2u);
  }
}

void sub_2360F8AC0(uint64_t a1, void *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = BDSCloudKitLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8, v9, v10, v11);
    *(_DWORD *)long long buf = 138543362;
    uint64_t v35 = v12;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock", buf, 0xCu);
  }
  uint64_t v20 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v13, v14, v15, v16, v17, v18, v19);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_2360F8C54;
  block[3] = &unk_264CA1D68;
  objc_copyWeak(&v33, (id *)(a1 + 72));
  uint64_t v31 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void **)(a1 + 40);
  id v27 = v3;
  uint64_t v28 = v21;
  id v23 = v22;
  uint64_t v24 = *(void *)(a1 + 64);
  id v29 = v23;
  uint64_t v32 = v24;
  id v30 = *(id *)(a1 + 48);
  id v25 = v3;
  dispatch_async(v20, block);

  objc_destroyWeak(&v33);
}

void sub_2360F8C54(uint64_t a1)
{
  uint64_t v180 = *MEMORY[0x263EF8340];
  id v2 = (id *)(a1 + 80);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if (objc_msgSend_count(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v4, v5, v6, v7, v8, v9, v10))
  {
    uint64_t v16 = *(void *)(a1 + 64);
    uint64_t v17 = *(void *)(*(void *)(v16 + 8) + 40);
    v176[0] = MEMORY[0x263EF8330];
    v176[1] = 3221225472;
    v176[2] = sub_2360F91F8;
    v176[3] = &unk_264CA1D18;
    v176[4] = WeakRetained;
    v176[5] = v16;
    objc_msgSend_zonesDeletedOrReset_completion_(WeakRetained, v11, v17, (uint64_t)v176, v12, v13, v14, v15);
  }
  id v18 = *(id *)(a1 + 32);
  uint64_t v26 = v18;
  if (v18)
  {
    id v27 = objc_msgSend_domain(v18, v19, v20, v21, v22, v23, v24, v25);
    uint64_t v28 = *MEMORY[0x263EFD498];
    if (objc_msgSend_isEqualToString_(v27, v29, *MEMORY[0x263EFD498], v30, v31, v32, v33, v34))
    {
      uint64_t v42 = objc_msgSend_code(v26, v35, v36, v37, v38, v39, v40, v41);

      if (v42 == 2) {
        objc_msgSend_setBackOffInterval_(WeakRetained, v43, v44, v45, v46, v47, v48, v49, 0.0);
      }
    }
    else
    {
    }
    uint64_t v95 = BDSCloudKitLog();
    if (os_log_type_enabled(v95, OS_LOG_TYPE_ERROR))
    {
      uint64_t v171 = objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v96, v97, v98, v99, v100, v101, v102);
      uint64_t v154 = (objc_class *)MEMORY[0x263EFF980];
      id v155 = *(id *)(a1 + 48);
      id v156 = objc_alloc_init(v154);
      *(void *)long long buf = MEMORY[0x263EF8330];
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_2360FCDF8;
      uint64_t v178 = &unk_264CA1ED0;
      id v179 = v156;
      id v157 = v156;
      objc_msgSend_enumerateObjectsUsingBlock_(v155, v158, (uint64_t)buf, v159, v160, v161, v162, v163);
      uint64_t v170 = objc_msgSend_componentsJoinedByString_(v157, v164, @",", v165, v166, v167, v168, v169);

      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v171;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v170;
      *(_WORD *)&buf[22] = 2114;
      uint64_t v178 = v26;
      _os_log_error_impl(&dword_2360BC000, v95, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@", buf, 0x20u);
    }
    uint64_t v110 = objc_msgSend_domain(v26, v103, v104, v105, v106, v107, v108, v109);
    int isEqualToString = objc_msgSend_isEqualToString_(v110, v111, v28, v112, v113, v114, v115, v116);

    if (isEqualToString)
    {
      unint64_t v125 = objc_msgSend_code(v26, v118, v119, v120, v121, v122, v123, v124);
      if (v125 <= 0x17 && ((1 << v125) & 0x8000C0) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v143 = objc_msgSend_domain(v26, v118, v119, v120, v121, v122, v123, v124);
      int v150 = objc_msgSend_isEqualToString_(v143, v144, *MEMORY[0x263F07F70], v145, v146, v147, v148, v149);

      if (v150)
      {
LABEL_16:
        uint64_t v126 = BDSCloudKitLog();
        if (os_log_type_enabled(v126, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v134 = objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v127, v128, v129, v130, v131, v132, v133);
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v134;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v26;
          _os_log_impl(&dword_2360BC000, v126, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@", buf, 0x16u);
        }
        uint64_t v142 = objc_msgSend_accessQueue(WeakRetained, v135, v136, v137, v138, v139, v140, v141);
        block[0] = MEMORY[0x263EF8330];
        block[1] = 3221225472;
        block[2] = sub_2360F92D0;
        block[3] = &unk_264CA1D40;
        void block[4] = WeakRetained;
        id v173 = v26;
        objc_copyWeak(&v175, v2);
        uint64_t v174 = *(void *)(a1 + 40);
        dispatch_async(v142, block);

        objc_destroyWeak(&v175);
        goto LABEL_23;
      }
    }
    uint64_t v151 = BDSCloudKitLog();
    if (os_log_type_enabled(v151, OS_LOG_TYPE_ERROR)) {
      sub_2361FA4F4();
    }
  }
  else
  {
    objc_msgSend_setBackOffInterval_(WeakRetained, v19, v20, v21, v22, v23, v24, v25, 0.0);
    uint64_t v50 = BDSCloudKitLog();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v58 = objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v51, v52, v53, v54, v55, v56, v57);
      uint64_t v59 = (objc_class *)MEMORY[0x263EFF980];
      id v60 = *(id *)(a1 + 48);
      id v61 = objc_alloc_init(v59);
      *(void *)long long buf = MEMORY[0x263EF8330];
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_2360FCDF8;
      uint64_t v178 = &unk_264CA1ED0;
      id v179 = v61;
      id v62 = v61;
      objc_msgSend_enumerateObjectsUsingBlock_(v60, v63, (uint64_t)buf, v64, v65, v66, v67, v68);
      uint64_t v75 = objc_msgSend_componentsJoinedByString_(v62, v69, @",", v70, v71, v72, v73, v74);

      *(_DWORD *)long long buf = 138543618;
      *(void *)&uint8_t buf[4] = v58;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v75;
      _os_log_impl(&dword_2360BC000, v50, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).", buf, 0x16u);
    }
    objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 40), v76, *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v77, v78, v79, v80, v81);
    objc_msgSend_removeAllObjects(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v82, v83, v84, v85, v86, v87, v88);
    objc_msgSend_setFetchRecordZoneChangesSuccess_(*(void **)(a1 + 40), v89, 1, v90, v91, v92, v93, v94);
  }
LABEL_23:
  uint64_t v152 = _Block_copy(*(const void **)(a1 + 56));
  uint64_t v153 = v152;
  if (v152) {
    (*((void (**)(void *, void *))v152 + 2))(v152, v26);
  }
}

void sub_2360F91F8(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v2 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    int v12 = 138543618;
    uint64_t v13 = v10;
    __int16 v14 = 2114;
    uint64_t v15 = v11;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - fetchRecordZoneChangesCompletionBlock - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v12, 0x16u);
  }
}

void sub_2360F92D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((objc_msgSend_serverFetchPostponed(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8) & 1) == 0)
  {
    objc_msgSend_setServerFetchPostponed_(*(void **)(a1 + 32), v9, 1, v10, v11, v12, v13, v14);
    objc_msgSend_p_updateRetryParametersFromFetchZoneChangesOperationError_(*(void **)(a1 + 32), v15, *(void *)(a1 + 40), v16, v17, v18, v19, v20);
    objc_msgSend_backOffInterval(*(void **)(a1 + 32), v21, v22, v23, v24, v25, v26, v27);
    dispatch_time_t v29 = dispatch_time(0, (uint64_t)(v28 * 1000000000.0));
    uint64_t v37 = objc_msgSend_accessQueue(*(void **)(a1 + 32), v30, v31, v32, v33, v34, v35, v36);
    v38[0] = MEMORY[0x263EF8330];
    v38[1] = 3221225472;
    v38[2] = sub_2360F93CC;
    v38[3] = &unk_264CA1598;
    objc_copyWeak(&v39, (id *)(a1 + 56));
    v38[4] = *(void *)(a1 + 48);
    dispatch_after(v29, v37, v38);

    objc_destroyWeak(&v39);
  }
}

void sub_2360F93CC(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v9 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_setServerFetchPostponed_(WeakRetained, v3, 0, v4, v5, v6, v7, v8);
    uint64_t v10 = BDSCloudKitLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
      int v33 = 138543362;
      uint64_t v34 = v18;
      _os_log_impl(&dword_2360BC000, v10, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch", (uint8_t *)&v33, 0xCu);
    }
    uint64_t v26 = objc_msgSend_coalescedZoneFetch(v9, v19, v20, v21, v22, v23, v24, v25);
    objc_msgSend_signalWithCompletion_(v26, v27, (uint64_t)&unk_26E971D70, v28, v29, v30, v31, v32);
  }
}

void sub_2360F9558(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v89 = *MEMORY[0x263EF8340];
  int isOffline = objc_msgSend_isOffline(BDSReachability, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v10 = BDSCloudKitLog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v18 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v11, v12, v13, v14, v15, v16, v17);
    uint64_t v19 = (void *)v18;
    uint64_t v20 = @"YES";
    if (isOffline) {
      uint64_t v20 = @"NO";
    }
    *(_DWORD *)long long buf = 138543618;
    uint64_t v86 = v18;
    __int16 v87 = 2112;
    uint64_t v88 = v20;
    _os_log_impl(&dword_2360BC000, v10, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@", buf, 0x16u);
  }
  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  objc_msgSend_observers(*(void **)(a1 + 32), v21, v22, v23, v24, v25, v26, v27);
  obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v28, (uint64_t)&v79, (uint64_t)v84, 16, v29, v30, v31);
  if (v32)
  {
    uint64_t v40 = v32;
    uint64_t v41 = isOffline ^ 1u;
    uint64_t v42 = *(void *)v80;
    do
    {
      uint64_t v43 = 0;
      do
      {
        if (*(void *)v80 != v42) {
          objc_enumerationMutation(obj);
        }
        uint64_t v44 = *(void *)(*((void *)&v79 + 1) + 8 * v43);
        uint64_t v45 = objc_msgSend_observers(*(void **)(a1 + 32), v33, v34, v35, v36, v37, v38, v39);
        uint64_t v52 = objc_msgSend_objectForKeyedSubscript_(v45, v46, v44, v47, v48, v49, v50, v51);

        if (objc_msgSend_count(v52, v53, v54, v55, v56, v57, v58, v59))
        {
          long long v77 = 0u;
          long long v78 = 0u;
          long long v75 = 0u;
          long long v76 = 0u;
          id v60 = v52;
          uint64_t v65 = objc_msgSend_countByEnumeratingWithState_objects_count_(v60, v61, (uint64_t)&v75, (uint64_t)v83, 16, v62, v63, v64);
          if (v65)
          {
            uint64_t v71 = v65;
            uint64_t v72 = *(void *)v76;
            do
            {
              uint64_t v73 = 0;
              do
              {
                if (*(void *)v76 != v72) {
                  objc_enumerationMutation(v60);
                }
                objc_msgSend_databaseController_reachabilityChanged_(*(void **)(*((void *)&v75 + 1) + 8 * v73++), v66, *(void *)(a1 + 32), v41, v67, v68, v69, v70);
              }
              while (v71 != v73);
              uint64_t v71 = objc_msgSend_countByEnumeratingWithState_objects_count_(v60, v66, (uint64_t)&v75, (uint64_t)v83, 16, v68, v69, v70);
            }
            while (v71);
          }
        }
        ++v43;
      }
      while (v43 != v40);
      uint64_t v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v33, (uint64_t)&v79, (uint64_t)v84, 16, v37, v38, v39);
    }
    while (v40);
  }
}

void sub_2360F9B84(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = BDSCloudKitLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v20 = 134218242;
    uint64_t v21 = objc_msgSend_count(v6, v8, v9, v10, v11, v12, v13, v14);
    __int16 v22 = 2114;
    id v23 = v5;
    _os_log_impl(&dword_2360BC000, v7, OS_LOG_TYPE_DEFAULT, "p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@", (uint8_t *)&v20, 0x16u);
  }

  objc_msgSend_p_informObserversOfRecordsChanged_forRecordType_(*(void **)(a1 + 32), v15, (uint64_t)v6, (uint64_t)v5, v16, v17, v18, v19);
}

void sub_2360F9D6C(void **a1)
{
  v120[3] = *(id *)MEMORY[0x263EF8340];
  id v2 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_containerIdentifier(a1[4], v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = a1[5];
    uint64_t v19 = objc_msgSend_allObjects(a1[6], v12, v13, v14, v15, v16, v17, v18);
    id v20 = objc_alloc_init(MEMORY[0x263EFF980]);
    *(void *)long long buf = MEMORY[0x263EF8330];
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_2360FCDF8;
    uint64_t v119 = &unk_264CA1ED0;
    v120[0] = v20;
    id v21 = v20;
    objc_msgSend_enumerateObjectsUsingBlock_(v19, v22, (uint64_t)buf, v23, v24, v25, v26, v27);
    uint64_t v34 = objc_msgSend_componentsJoinedByString_(v21, v28, @",", v29, v30, v31, v32, v33);

    uint64_t v42 = objc_msgSend_zoneObservers(a1[4], v35, v36, v37, v38, v39, v40, v41);
    *(_DWORD *)long long buf = 138544130;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v11;
    *(_WORD *)&buf[22] = 2114;
    uint64_t v119 = v34;
    LOWORD(v120[0]) = 2112;
    *(id *)((char *)v120 + 2) = v42;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@", buf, 0x2Au);
  }
  if (objc_msgSend_length(a1[5], v43, v44, v45, v46, v47, v48, v49))
  {
    uint64_t v50 = dispatch_group_create();
    long long v113 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    long long v116 = 0u;
    id v51 = a1[6];
    uint64_t v56 = objc_msgSend_countByEnumeratingWithState_objects_count_(v51, v52, (uint64_t)&v113, (uint64_t)v117, 16, v53, v54, v55);
    if (v56)
    {
      uint64_t v64 = v56;
      uint64_t v65 = *(void *)v114;
      uint64_t v106 = v110;
      do
      {
        for (uint64_t i = 0; i != v64; ++i)
        {
          if (*(void *)v114 != v65) {
            objc_enumerationMutation(v51);
          }
          uint64_t v67 = *(void **)(*((void *)&v113 + 1) + 8 * i);
          uint64_t v68 = objc_msgSend_zoneName(v67, v57, v58, v59, v60, v61, v62, v63, v106);
          uint64_t v76 = objc_msgSend_length(v68, v69, v70, v71, v72, v73, v74, v75);

          if (v76)
          {
            long long v77 = objc_msgSend_zoneObservers(a1[4], v57, v58, v59, v60, v61, v62, v63);
            uint64_t v85 = objc_msgSend_zoneName(v67, v78, v79, v80, v81, v82, v83, v84);
            uint64_t v92 = objc_msgSend_objectForKey_(v77, v86, (uint64_t)v85, v87, v88, v89, v90, v91);

            if (v92)
            {
              dispatch_group_enter(v50);
              uint64_t v94 = (uint64_t)a1[4];
              uint64_t v93 = a1[5];
              v109[0] = MEMORY[0x263EF8330];
              v109[1] = 3221225472;
              v110[0] = sub_2360FA194;
              v110[1] = &unk_264CA1DE0;
              v110[2] = v94;
              v110[3] = v67;
              id v95 = v93;
              id v111 = v95;
              uint64_t v112 = v50;
              objc_msgSend_databaseController_saltVersionIdentifierChanged_completion_(v92, v96, v94, (uint64_t)v95, (uint64_t)v109, v97, v98, v99);
            }
          }
        }
        uint64_t v64 = objc_msgSend_countByEnumeratingWithState_objects_count_(v51, v57, (uint64_t)&v113, (uint64_t)v117, 16, v61, v62, v63);
      }
      while (v64);
    }

    uint64_t v100 = dispatch_get_global_queue(0, 0);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_2360FA2A0;
    block[3] = &unk_264CA1700;
    id v108 = a1[7];
    dispatch_group_notify(v50, v100, block);

    uint64_t v101 = v108;
    goto LABEL_18;
  }
  uint64_t v50 = _Block_copy(a1[7]);
  if (v50)
  {
    uint64_t v101 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v102, @"BDSErrorDomain", 1005, 0, v103, v104, v105);
    ((void (*)(NSObject *, void *))v50[2].isa)(v50, v101);
LABEL_18:
  }
}

void sub_2360FA194(uint64_t a1, int a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v4 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8, v9, v10, v11);
    id v20 = objc_msgSend_zoneName(*(void **)(a1 + 40), v13, v14, v15, v16, v17, v18, v19);
    uint64_t v21 = *(void *)(a1 + 48);
    int v22 = 138413058;
    uint64_t v23 = v12;
    __int16 v24 = 2112;
    uint64_t v25 = v20;
    __int16 v26 = 2112;
    uint64_t v27 = v21;
    __int16 v28 = 1024;
    int v29 = a2;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP", (uint8_t *)&v22, 0x26u);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_2360FA2A0(uint64_t a1)
{
  id v2 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "p_informObserversOfSaltVersionIdentifierChanged DONE", v5, 2u);
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void))v3 + 2))(v3, 0);
  }
}

void sub_2360FB050(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    uint64_t v10 = BDSCloudKitLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_2361FA5C4(a1, (uint64_t)v9, v10);
    }
  }
  uint64_t v11 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v12 = v11;
  if (v11) {
    (*((void (**)(void *, id))v11 + 2))(v11, v9);
  }
}

void sub_2360FB210(void **a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = objc_msgSend_desiredRecordZoneIDs(a1[4], a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_valueForKey_(v9, v10, @"zoneName", v11, v12, v13, v14, v15);

  uint64_t v21 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v17, @"BDSCloudKitClientError", 2003, 0, v18, v19, v20);
  int v22 = a1[4];
  v29[0] = MEMORY[0x263EF8330];
  v29[1] = 3221225472;
  v29[2] = sub_2360FB32C;
  v29[3] = &unk_264CA1100;
  void v29[4] = v22;
  id v30 = a1[5];
  id v31 = v16;
  id v32 = a1[6];
  id v23 = v16;
  objc_msgSend_detachWithError_completion_(v22, v24, (uint64_t)v21, (uint64_t)v29, v25, v26, v27, v28);
}

void sub_2360FB32C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = sub_2360FB3E4;
  v8[3] = &unk_264CA1840;
  v8[4] = v2;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  objc_msgSend__deleteRecordZonesWithIDs_qualityOfService_completion_(v2, v4, v3, 17, (uint64_t)v8, v5, v6, v7);
}

void sub_2360FB3E4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = sub_2360FB474;
  v8[3] = &unk_264CA1700;
  id v9 = *(id *)(a1 + 48);
  objc_msgSend_attachToZones_completion_(v1, v3, v2, (uint64_t)v8, v4, v5, v6, v7);
}

void sub_2360FB474(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_2360FB5C8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = sub_2360FB658;
  v8[3] = &unk_264CA1700;
  id v9 = *(id *)(a1 + 48);
  objc_msgSend_detachWithError_completion_(v1, v3, v2, (uint64_t)v8, v4, v5, v6, v7);
}

void sub_2360FB658(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_2360FB80C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_invalidateSalt(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 3221225472;
  v15[2] = sub_2360FB8A4;
  v15[3] = &unk_264CA1700;
  id v9 = *(void **)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  objc_msgSend_detachWithError_completion_(v9, v10, 0, (uint64_t)v15, v11, v12, v13, v14);
}

void sub_2360FB8A4(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_2360FBA08(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  id v59 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v21 = objc_msgSend_objectForKeyedSubscript_(v59, v9, *(void *)(a1 + 40), v10, v11, v12, v13, v14);
  if (!v21)
  {
    uint64_t v21 = objc_opt_new();
    objc_msgSend_setObject_forKeyedSubscript_(v59, v22, (uint64_t)v21, *(void *)(a1 + 40), v23, v24, v25, v26);
  }
  objc_msgSend_addObject_(v21, v15, *(void *)(a1 + 48), v16, v17, v18, v19, v20);
  uint64_t v34 = objc_msgSend_container(*(void **)(a1 + 32), v27, v28, v29, v30, v31, v32, v33);
  if (v34)
  {
    uint64_t v42 = (void *)v34;
    int v43 = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), v35, v36, v37, v38, v39, v40, v41);

    if (v43)
    {
      id v51 = *(void **)(a1 + 48);
      uint64_t v52 = *(void **)(a1 + 32);
      uint64_t v53 = objc_msgSend_container(v52, v44, v45, v46, v47, v48, v49, v50);
      objc_msgSend_databaseController_attachmentChanged_(v51, v54, (uint64_t)v52, v53 != 0, v55, v56, v57, v58);
    }
  }
}

void sub_2360FBC10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_objectForKeyedSubscript_(v9, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);

  if (v16)
  {
    v39[0] = MEMORY[0x263EF8330];
    v39[1] = 3221225472;
    v39[2] = sub_2360FBD5C;
    v39[3] = &unk_264CA1E30;
    uint64_t v40 = *(id *)(a1 + 48);
    uint64_t v23 = objc_msgSend_indexesOfObjectsPassingTest_(v16, v17, (uint64_t)v39, v18, v19, v20, v21, v22);
    if (objc_msgSend_count(v23, v24, v25, v26, v27, v28, v29, v30))
    {
      objc_msgSend_removeObjectsAtIndexes_(v16, v31, (uint64_t)v23, v32, v33, v34, v35, v36);
    }
    else
    {
      uint64_t v38 = BDSCloudKitLog();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
        sub_2361FA838();
      }
    }
    uint64_t v37 = v40;
  }
  else
  {
    uint64_t v37 = BDSCloudKitLog();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      sub_2361FA7C8();
    }
  }
}

BOOL sub_2360FBD5C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 32) == a2;
}

void sub_2360FBE50(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 3221225472;
  v16[2] = sub_2360FBEF0;
  v16[3] = &unk_264CA1E58;
  id v17 = *(id *)(a1 + 40);
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v9, v10, (uint64_t)v16, v11, v12, v13, v14, v15);
}

void sub_2360FBEF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v25[0] = MEMORY[0x263EF8330];
  v25[1] = 3221225472;
  v25[2] = sub_2360FBFA8;
  v25[3] = &unk_264CA1E30;
  id v26 = *(id *)(a1 + 32);
  uint64_t v11 = objc_msgSend_indexesOfObjectsPassingTest_(v4, v5, (uint64_t)v25, v6, v7, v8, v9, v10);
  if (objc_msgSend_count(v11, v12, v13, v14, v15, v16, v17, v18)) {
    objc_msgSend_removeObjectsAtIndexes_(v4, v19, (uint64_t)v11, v20, v21, v22, v23, v24);
  }
}

BOOL sub_2360FBFA8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 32) == a2;
}

void sub_2360FC08C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 32) && objc_msgSend_length(*(void **)(a1 + 40), a2, a3, a4, a5, a6, a7, a8))
  {
    uint64_t v16 = objc_msgSend_zoneObservers(*(void **)(a1 + 48), v9, v10, v11, v12, v13, v14, v15);
    objc_msgSend_setObject_forKey_(v16, v17, *(void *)(a1 + 32), *(void *)(a1 + 40), v18, v19, v20, v21);

    uint64_t v22 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      int v25 = 134218242;
      uint64_t v26 = v23;
      __int16 v27 = 2114;
      uint64_t v28 = v24;
      _os_log_impl(&dword_2360BC000, v22, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@", (uint8_t *)&v25, 0x16u);
    }
  }
  else
  {
    uint64_t v22 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_2361FA918();
    }
  }
}

void sub_2360FC2EC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_2360FC300(uint64_t a1)
{
  uint64_t v107 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = BDSCloudKitLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v104 = v4;
      _os_log_impl(&dword_2360BC000, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - Registering store for record zone %{public}@", buf, 0xCu);
    }

    uint64_t v12 = objc_msgSend_tokenStores(WeakRetained, v5, v6, v7, v8, v9, v10, v11);
    uint64_t v13 = (uint64_t *)(a1 + 32);
    uint64_t v20 = objc_msgSend_objectForKeyedSubscript_(v12, v14, *(void *)(a1 + 32), v15, v16, v17, v18, v19);

    if (v20)
    {
      uint64_t v28 = BDSCloudKitLog();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
        sub_2361FA9F0((uint64_t)v13, v28, v29, v30, v31, v32, v33, v34);
      }
    }
    else
    {
      uint64_t v35 = *(void *)(a1 + 40);
      uint64_t v36 = objc_msgSend_tokenStores(WeakRetained, v21, v22, v23, v24, v25, v26, v27);
      objc_msgSend_setObject_forKeyedSubscript_(v36, v37, v35, *(void *)(a1 + 32), v38, v39, v40, v41);

      if (objc_msgSend_attachedToContainer(*(void **)(a1 + 48), v42, v43, v44, v45, v46, v47, v48))
      {
        uint64_t v56 = objc_msgSend_changedRecordZoneIDs(WeakRetained, v49, v50, v51, v52, v53, v54, v55);
        int v63 = objc_msgSend_containsObject_(v56, v57, *v13, v58, v59, v60, v61, v62);

        if (v63)
        {
          uint64_t v71 = BDSCloudKitLog();
          if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
          {
            uint64_t v79 = objc_msgSend_containerIdentifier(WeakRetained, v72, v73, v74, v75, v76, v77, v78);
            uint64_t v80 = *v13;
            *(_DWORD *)long long buf = 138543618;
            uint64_t v104 = v79;
            __int16 v105 = 2114;
            uint64_t v106 = v80;
            _os_log_impl(&dword_2360BC000, v71, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@", buf, 0x16u);
          }
          uint64_t v88 = objc_msgSend_coalescedZoneFetch(WeakRetained, v81, v82, v83, v84, v85, v86, v87);
          v101[0] = MEMORY[0x263EF8330];
          v101[1] = 3221225472;
          v101[2] = sub_2360FC5CC;
          v101[3] = &unk_264CA1428;
          uint64_t v102 = (id)*v13;
          objc_msgSend_signalWithCompletion_(v88, v89, (uint64_t)v101, v90, v91, v92, v93, v94);

          uint64_t v28 = v102;
        }
        else
        {
          uint64_t v28 = objc_msgSend_zoneName((void *)*v13, v64, v65, v66, v67, v68, v69, v70);
          objc_msgSend_p_informObserversOfCompletedFetchOfZone_(WeakRetained, v95, (uint64_t)v28, v96, v97, v98, v99, v100);
        }
      }
      else
      {
        uint64_t v28 = BDSCloudKitLog();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl(&dword_2360BC000, v28, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:", buf, 2u);
        }
      }
    }
  }
}

void sub_2360FC5CC(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_2360FC780(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2360FC794(uint64_t a1)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v11 = objc_msgSend_tokenStores(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
    uint64_t v19 = objc_msgSend_copy(v11, v12, v13, v14, v15, v16, v17, v18);

    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    uint64_t v20 = v19;
    uint64_t v25 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v21, (uint64_t)&v53, (uint64_t)v57, 16, v22, v23, v24);
    if (v25)
    {
      uint64_t v32 = v25;
      uint64_t v33 = *(void *)v54;
      while (2)
      {
        for (uint64_t i = 0; i != v32; ++i)
        {
          if (*(void *)v54 != v33) {
            objc_enumerationMutation(v20);
          }
          uint64_t v35 = *(void *)(*((void *)&v53 + 1) + 8 * i);
          uint64_t v36 = objc_msgSend_objectForKeyedSubscript_(v20, v26, v35, v27, v28, v29, v30, v31, (void)v53);
          uint64_t v44 = v36;
          if (*(void **)(a1 + 32) == v36)
          {
            uint64_t v46 = objc_msgSend_tokenStores(v10, v37, v38, v39, v40, v41, v42, v43);
            objc_msgSend_removeObjectForKey_(v46, v47, v35, v48, v49, v50, v51, v52);

            uint64_t v45 = v20;
            goto LABEL_13;
          }
        }
        uint64_t v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v26, (uint64_t)&v53, (uint64_t)v57, 16, v29, v30, v31);
        if (v32) {
          continue;
        }
        break;
      }
    }

    uint64_t v45 = BDSCloudKitLog();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      sub_2361FAAA4(v45);
    }
LABEL_13:
  }
}

void sub_2360FCACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2360FCAF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_container(*(void **)(a1 + 32), v9, v10, v11, v12, v13, v14, v15);
  uint64_t v24 = objc_msgSend_description(v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v26 = *(void **)(v25 + 40);
  *(void *)(v25 + 40) = v24;

  uint64_t v27 = *(NSObject **)(a1 + 40);
  dispatch_group_leave(v27);
}

void sub_2360FCDF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void **)(a1 + 32);
  objc_msgSend_zoneName(a2, (const char *)a2, a3, a4, a5, a6, a7, a8);
  id v15 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v8, v9, (uint64_t)v15, v10, v11, v12, v13, v14);
}

void sub_2360FCE50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void **)(a1 + 32);
  objc_msgSend_zoneID(a2, (const char *)a2, a3, a4, a5, a6, a7, a8);
  id v23 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v16 = objc_msgSend_zoneName(v23, v9, v10, v11, v12, v13, v14, v15);
  objc_msgSend_addObject_(v8, v17, (uint64_t)v16, v18, v19, v20, v21, v22);
}

void sub_2360FCEE8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_2360FCF74()
{
  qword_26AD77630 = objc_alloc_init(BDSBookWidgetDataFile);
  return MEMORY[0x270F9A758]();
}

void sub_2360FD414(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = objc_msgSend_books(MEMORY[0x263F2BA40], a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = objc_msgSend_containerURL(v8, v9, v10, v11, v12, v13, v14, v15);

  id v23 = objc_msgSend_URLByAppendingPathComponent_(v16, v17, @"Library/Application Support/bookdatastored/", v18, v19, v20, v21, v22);
  uint64_t v30 = objc_msgSend_URLByAppendingPathComponent_(v23, v24, @"/currentWidgetData.plist", v25, v26, v27, v28, v29);
  uint64_t v31 = (void *)qword_268854B50;
  qword_268854B50 = v30;

  uint64_t v39 = objc_msgSend_defaultManager(MEMORY[0x263F08850], v32, v33, v34, v35, v36, v37, v38);
  id v46 = 0;
  char DirectoryAtURL_withIntermediateDirectories_attributes_error = objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(v39, v40, (uint64_t)v23, 1, 0, (uint64_t)&v46, v41, v42);
  id v44 = v46;

  if ((DirectoryAtURL_withIntermediateDirectories_attributes_error & 1) == 0)
  {
    uint64_t v45 = BDSWidgetLog();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR)) {
      sub_2361FAC88();
    }
  }
}

__CFString *BDSLibraryContentAssetTypeFromExtension(void *a1)
{
  id v1 = a1;
  if (objc_msgSend_caseInsensitiveCompare_(@"pdf", v2, (uint64_t)v1, v3, v4, v5, v6, v7))
  {
    if (objc_msgSend_caseInsensitiveCompare_(@"epub", v8, (uint64_t)v1, v9, v10, v11, v12, v13)
      && objc_msgSend_caseInsensitiveCompare_(@"ibooks", v14, (uint64_t)v1, v15, v16, v17, v18, v19))
    {
      if (objc_msgSend_caseInsensitiveCompare_(@"m4a", v20, (uint64_t)v1, v21, v22, v23, v24, v25)
        && objc_msgSend_caseInsensitiveCompare_(@"m4b", v26, (uint64_t)v1, v27, v28, v29, v30, v31)
        && objc_msgSend_caseInsensitiveCompare_(@"m4p", v32, (uint64_t)v1, v33, v34, v35, v36, v37)
        && objc_msgSend_caseInsensitiveCompare_(@"aa", v38, (uint64_t)v1, v39, v40, v41, v42, v43)
        && objc_msgSend_caseInsensitiveCompare_(@"aax", v44, (uint64_t)v1, v45, v46, v47, v48, v49)
        && objc_msgSend_caseInsensitiveCompare_(@"mp3", v50, (uint64_t)v1, v51, v52, v53, v54, v55)
        && objc_msgSend_caseInsensitiveCompare_(@"mp4", v56, (uint64_t)v1, v57, v58, v59, v60, v61)
        && objc_msgSend_caseInsensitiveCompare_(@"aac", v62, (uint64_t)v1, v63, v64, v65, v66, v67)
        && objc_msgSend_caseInsensitiveCompare_(@"adts", v68, (uint64_t)v1, v69, v70, v71, v72, v73)
        && objc_msgSend_caseInsensitiveCompare_(@"ac3", v74, (uint64_t)v1, v75, v76, v77, v78, v79)
        && objc_msgSend_caseInsensitiveCompare_(@"aif", v80, (uint64_t)v1, v81, v82, v83, v84, v85)
        && objc_msgSend_caseInsensitiveCompare_(@"aiff", v86, (uint64_t)v1, v87, v88, v89, v90, v91)
        && objc_msgSend_caseInsensitiveCompare_(@"aifc", v92, (uint64_t)v1, v93, v94, v95, v96, v97)
        && objc_msgSend_caseInsensitiveCompare_(@"caf", v98, (uint64_t)v1, v99, v100, v101, v102, v103)
        && objc_msgSend_caseInsensitiveCompare_(@"snd", v104, (uint64_t)v1, v105, v106, v107, v108, v109)
        && objc_msgSend_caseInsensitiveCompare_(@"au", v110, (uint64_t)v1, v111, v112, v113, v114, v115)
        && objc_msgSend_caseInsensitiveCompare_(@"sd2", v116, (uint64_t)v1, v117, v118, v119, v120, v121)
        && objc_msgSend_caseInsensitiveCompare_(@"wav", v122, (uint64_t)v1, v123, v124, v125, v126, v127))
      {
        uint64_t v128 = @"LibraryContentAssetTypeUnknown";
      }
      else
      {
        uint64_t v128 = @"AssetTypeAudiobook";
      }
    }
    else
    {
      uint64_t v128 = @"AssetTypeEbook";
    }
  }
  else
  {
    uint64_t v128 = @"AssetTypePDF";
  }

  return v128;
}

void sub_2360FD8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360FD914(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360FD924(uint64_t a1)
{
}

uint64_t sub_2360FD92C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = objc_msgSend_dataWithContentsOfURL_(MEMORY[0x263EFF8F8], a2, (uint64_t)a2, a4, a5, a6, a7, a8);
  return MEMORY[0x270F9A758]();
}

void sub_2360FDB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2360FDB44(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (void *)a1[4];
  uint64_t v10 = *(void *)(a1[6] + 8);
  obuint64_t j = *(id *)(v10 + 40);
  char v11 = objc_msgSend_writeToURL_options_error_(v9, a2, (uint64_t)a2, 1073741825, (uint64_t)&obj, a6, a7, a8);
  objc_storeStrong((id *)(v10 + 40), obj);
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = v11;
}

void sub_2360FDD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_2360FDD50(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)MEMORY[0x263F08850];
  id v4 = a2;
  uint64_t v12 = objc_msgSend_defaultManager(v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
  obuint64_t j = *(id *)(v13 + 40);
  char v19 = objc_msgSend_removeItemAtURL_error_(v12, v14, (uint64_t)v4, (uint64_t)&obj, v15, v16, v17, v18);

  objc_storeStrong((id *)(v13 + 40), obj);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v19;
}

void sub_2360FE74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_2360FE774(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
}

void sub_2360FE77C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_iCloudIdentityDidChange_(WeakRetained, v1, 0, v2, v3, v4, v5, v6);
}

uint64_t sub_2360FE9D0(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if (*(unsigned char *)(a1 + 40)) {
      uint64_t v3 = @"YES";
    }
    else {
      uint64_t v3 = @"NO";
    }
    int v12 = 138543362;
    uint64_t v13 = v3;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "iCloud identity changed. {Refreshing with optedIn: %{public}@}", (uint8_t *)&v12, 0xCu);
  }

  return objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
}

void sub_2360FEC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360FEC34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_2360FEC44(uint64_t a1)
{
}

uint64_t sub_2360FEC4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  return MEMORY[0x270F9A758]();
}

void sub_2360FEE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2360FEEAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = objc_msgSend_dq_isCloudKitEnabled(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_2360FEFB4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  int v16 = objc_msgSend_containsObject_(v9, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);

  if (v16) {
    BDSReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/AlderServices_Support/frameworks/BookDataStore/Utilities/BDSLiverpoolStatusMonitor.m", 195, (uint64_t)"-[BDSLiverpoolStatusMonitor addObserver:]_block_invoke", (uint64_t)"[self.observers containsObject:observer] == NO", @"%p is already an observer", v21, v22, v23, *(void *)(a1 + 40));
  }
  objc_msgSend_observers(*(void **)(a1 + 32), v17, v18, v19, v20, v21, v22, v23);
  id v30 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v30, v24, *(void *)(a1 + 40), v25, v26, v27, v28, v29);
}

void sub_2360FF120(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  int v16 = objc_msgSend_containsObject_(v9, v10, *(void *)(a1 + 40), v11, v12, v13, v14, v15);

  if (v16)
  {
    objc_msgSend_observers(*(void **)(a1 + 32), v17, v18, v19, v20, v21, v22, v23);
    id v30 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeObject_(v30, v24, *(void *)(a1 + 40), v25, v26, v27, v28, v29);
  }
}

uint64_t sub_2360FF26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_setCoordinatingObserver_, *(void *)(a1 + 40), a4, a5, a6, a7, a8);
}

void sub_2360FF2FC(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: restartObserving was called", buf, 2u);
  }

  objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
  uint64_t v17 = objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
  uint64_t v25 = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v18, v19, v20, v21, v22, v23, v24);
  if (v17 == (void *)v25)
  {
  }
  else
  {
    uint64_t v33 = (void *)v25;
    uint64_t v34 = objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v26, v27, v28, v29, v30, v31, v32);
    uint64_t v42 = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v35, v36, v37, v38, v39, v40, v41);
    char isEqual = objc_msgSend_isEqual_(v34, v43, (uint64_t)v42, v44, v45, v46, v47, v48);

    if ((isEqual & 1) == 0)
    {
      objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v50, v51, v52, v53, v54, v55, v56);
      uint64_t v64 = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v57, v58, v59, v60, v61, v62, v63);
      uint64_t v72 = objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v65, v66, v67, v68, v69, v70, v71);
      uint64_t v73 = BDSCloudKitLog();
      if (os_log_type_enabled(v73, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v80 = 0;
        _os_log_impl(&dword_2360BC000, v73, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: notifying observers of a token change", v80, 2u);
      }

      objc_msgSend__notifyObserversWithCurrentToken_lastToken_(*(void **)(a1 + 32), v74, (uint64_t)v64, (uint64_t)v72, v75, v76, v77, v78);
      goto LABEL_11;
    }
  }
  uint64_t v64 = BDSCloudKitLog();
  if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v79 = 0;
    _os_log_impl(&dword_2360BC000, v64, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: tokens match ... so we are not notifying anyone", v79, 2u);
  }
LABEL_11:
}

void sub_2360FF668(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
  uint64_t v24 = objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v17, v18, v19, v20, v21, v22, v23);
  objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v25, v26, v27, v28, v29, v30, v31);
  if (v9 != v24 && (objc_msgSend_isEqual_(v9, v32, (uint64_t)v24, v33, v34, v35, v36, v37) & 1) == 0)
  {
    uint64_t v38 = BDSCloudKitLog();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
    {
      uint64_t v39 = @"YES";
      if (!v24) {
        uint64_t v39 = @"NO";
      }
      int v45 = 138412290;
      uint64_t v46 = v39;
      _os_log_impl(&dword_2360BC000, v38, OS_LOG_TYPE_INFO, "iCloud identity changed. {iCloudEnabled: %@}", (uint8_t *)&v45, 0xCu);
    }

    objc_msgSend__notifyObserversWithCurrentToken_lastToken_(*(void **)(a1 + 32), v40, (uint64_t)v24, (uint64_t)v9, v41, v42, v43, v44);
  }
}

uint64_t sub_2360FFA20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](a1[4], sel_liverpoolStatusChangedToAvailableWithNewIdentity_oldIdentity_, a1[5], a1[6], a5, a6, a7, a8);
}

uint64_t sub_2360FFA30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](a1[4], sel_liverpoolStatusChangedToAvailableWithNewIdentity_oldIdentity_, a1[5], a1[6], a5, a6, a7, a8);
}

uint64_t sub_2360FFDD8()
{
  qword_26AD775C8 = objc_opt_new();
  return MEMORY[0x270F9A758]();
}

void sub_2360FFEC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v10 = a5;
  id v11 = a6;
  if (objc_msgSend_count(a1, v12, v13, v14, v15, v16, v17, v18) && !v10 && (a4 & 1) != 0)
  {
    uint64_t v25 = objc_msgSend_pointerAtIndex_(a1, v19, 0, v20, v21, v22, v23, v24);
    uint64_t v32 = v25;
    if (v25)
    {
      uint64_t v33 = (void (*)(void *, uint64_t, void *))objc_msgSend_methodForSelector_(v25, v26, a3, v27, v28, v29, v30, v31);
      v42[0] = MEMORY[0x263EF8330];
      v42[1] = 3221225472;
      v42[2] = sub_236100054;
      v42[3] = &unk_264CA1FE0;
      v42[4] = a1;
      uint64_t v44 = a3;
      id v43 = v11;
      v33(v32, a3, v42);
    }
    else
    {
      uint64_t v40 = (void (**)(void *, void, void *))_Block_copy(v11);
      if (v40)
      {
        uint64_t v41 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v36, @"BDSArrayAdditionsErrorDomain", 1000, 0, v37, v38, v39);
        v40[2](v40, 0, v41);
      }
    }
  }
  else
  {
    uint64_t v34 = _Block_copy(v11);
    uint64_t v35 = v34;
    if (v34) {
      (*((void (**)(void *, uint64_t, id))v34 + 2))(v34, a4, v10);
    }
  }
}

void sub_236100054(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v15 = a3;
  objc_msgSend_removePointerAtIndex_(v5, v6, 0, v7, v8, v9, v10, v11);
  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(*(void **)(a1 + 32), v12, *(void *)(a1 + 48), a2, (uint64_t)v15, *(void *)(a1 + 40), v13, v14);
}

void sub_2361000C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v9 = a5;
  id v10 = a6;
  if (!objc_msgSend_count(a1, v11, v12, v13, v14, v15, v16, v17))
  {
    uint64_t v33 = (void (**)(void))_Block_copy(v10);
    uint64_t v34 = v33;
    if (v33)
    {
      uint64_t v35 = v33[2];
LABEL_9:
      v35();
    }
LABEL_10:

    goto LABEL_15;
  }
  if (!v9)
  {
    uint64_t v36 = (void (**)(void))_Block_copy(v10);
    uint64_t v34 = v36;
    if (v36)
    {
      uint64_t v35 = v36[2];
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  uint64_t v24 = objc_msgSend_pointerAtIndex_(a1, v18, 0, v19, v20, v21, v22, v23);
  uint64_t v31 = v24;
  if (v24)
  {
    uint64_t v32 = (void (*)(void *, uint64_t, void *))objc_msgSend_methodForSelector_(v24, v25, a3, v26, v27, v28, v29, v30);
    v43[0] = MEMORY[0x263EF8330];
    v43[1] = 3221225472;
    v43[2] = sub_23610027C;
    v43[3] = &unk_264CA1FE0;
    void v43[4] = a1;
    uint64_t v45 = a3;
    id v44 = v10;
    v32(v31, a3, v43);
  }
  else
  {
    uint64_t v41 = (void (**)(void *, void, void *))_Block_copy(v10);
    if (v41)
    {
      uint64_t v42 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v37, @"BDSArrayAdditionsErrorDomain", 1000, 0, v38, v39, v40);
      v41[2](v41, 0, v42);
    }
  }

LABEL_15:
}

void sub_23610027C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v15 = a3;
  objc_msgSend_removePointerAtIndex_(v5, v6, 0, v7, v8, v9, v10, v11);
  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(*(void **)(a1 + 32), v12, *(void *)(a1 + 48), a2, (uint64_t)v15, *(void *)(a1 + 40), v13, v14);
}

id sub_2361002F0(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  id v6 = a3;
  uint64_t v7 = a4;
  uint64_t v8 = objc_opt_new();
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  obuint64_t j = a1;
  uint64_t v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v9, (uint64_t)&v57, (uint64_t)v61, 16, v10, v11, v12);
  if (v13)
  {
    uint64_t v20 = v13;
    uint64_t v21 = *(void *)v58;
    do
    {
      for (uint64_t i = 0; i != v20; ++i)
      {
        if (*(void *)v58 != v21) {
          objc_enumerationMutation(obj);
        }
        uint64_t v23 = *(void **)(*((void *)&v57 + 1) + 8 * i);
        uint64_t v24 = objc_msgSend_valueForKey_(v23, v14, (uint64_t)v6, v15, v16, v17, v18, v19, v55);
        objc_opt_class();
        uint64_t v55 = &unk_26E9900F8;
        uint64_t v31 = BUClassAndProtocolCast();
        if (v31)
        {
          uint64_t v32 = objc_msgSend_objectForKeyedSubscript_(v8, v25, (uint64_t)v31, v26, v27, v28, v29, v30, &unk_26E9900F8);

          if (v32)
          {
            uint64_t v39 = objc_msgSend_objectForKeyedSubscript_(v8, v33, (uint64_t)v31, v34, v35, v36, v37, v38);
            uint64_t v40 = v7[2](v7, v39, v23);
            objc_msgSend_setObject_forKeyedSubscript_(v8, v41, (uint64_t)v40, (uint64_t)v31, v42, v43, v44, v45);
          }
          else
          {
            objc_msgSend_setObject_forKeyedSubscript_(v8, v33, (uint64_t)v23, (uint64_t)v31, v35, v36, v37, v38);
          }
        }
      }
      uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v14, (uint64_t)&v57, (uint64_t)v61, 16, v17, v18, v19);
    }
    while (v20);
  }

  uint64_t v53 = objc_msgSend_copy(v8, v46, v47, v48, v49, v50, v51, v52);
  return v53;
}

id sub_23610050C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = objc_opt_new();
  uint64_t v13 = objc_msgSend_count(a1, v6, v7, v8, v9, v10, v11, v12);
  if (v13)
  {
    uint64_t v21 = v13;
    for (uint64_t i = 0; i != v21; ++i)
    {
      uint64_t v23 = objc_msgSend_objectAtIndex_(a1, v14, i, v16, v17, v18, v19, v20);
      uint64_t v31 = objc_msgSend_null(MEMORY[0x263EFF9D0], v24, v25, v26, v27, v28, v29, v30);

      if (v23 == v31)
      {
        uint64_t v38 = _Block_copy(v4);
        uint64_t v39 = v38;
        if (v38) {
          (*((void (**)(void *, uint64_t))v38 + 2))(v38, i);
        }
      }
      else
      {
        objc_msgSend_addObject_(v5, v32, (uint64_t)v23, v33, v34, v35, v36, v37);
      }
    }
  }
  uint64_t v40 = objc_msgSend_copy(v5, v14, v15, v16, v17, v18, v19, v20);

  return v40;
}

uint64_t sub_236100614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](a1, sel_bds_arrayByRemovingNSNullsInvokingBlockForNulls_, 0, a4, a5, a6, a7, a8);
}

void sub_23610061C(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v28 = a4;
  if (v28)
  {
    unint64_t v18 = objc_msgSend_count(a1, v6, v7, v8, v9, v10, v11, v12);
    if (v18)
    {
      uint64_t v19 = 0;
      unint64_t v20 = v18 + a3;
      uint64_t v21 = -(uint64_t)a3;
      unint64_t v22 = v18;
      do
      {
        unint64_t v23 = v22 - a3;
        if (v22 >= a3)
        {
          unint64_t v24 = a3;
          objc_msgSend_subarrayWithRange_(a1, v13, v19, a3, v14, v15, v16, v17);
        }
        else
        {
          unint64_t v24 = v22;
          objc_msgSend_subarrayWithRange_(a1, v13, v19, v22, v14, v15, v16, v17);
        uint64_t v25 = };
        v28[2](v28, v25, v19, v24);

        v20 -= a3;
        if (a3 >= v20) {
          unint64_t v26 = v20;
        }
        else {
          unint64_t v26 = a3;
        }
        v21 += a3;
        unint64_t v27 = v26 + v21;
        v19 += a3;
        unint64_t v22 = v23;
      }
      while (v27 < v18);
    }
    else
    {
      ((void (*)(void))v28[2])();
    }
  }
}

void sub_23610072C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v6 = a4;
  id v7 = objc_alloc(MEMORY[0x263F08A88]);
  uint64_t v14 = objc_msgSend_initWithOptions_(v7, v8, 5, v9, v10, v11, v12, v13);
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v15 = a1;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v33, (uint64_t)v37, 16, v17, v18, v19);
  if (v20)
  {
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)v34;
    do
    {
      uint64_t v29 = 0;
      do
      {
        if (*(void *)v34 != v28) {
          objc_enumerationMutation(v15);
        }
        objc_msgSend_addPointer_(v14, v21, *(void *)(*((void *)&v33 + 1) + 8 * v29++), v22, v23, v24, v25, v26, (void)v33);
      }
      while (v27 != v29);
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v21, (uint64_t)&v33, (uint64_t)v37, 16, v24, v25, v26);
    }
    while (v27);
  }

  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(v14, v30, a3, 1, 0, (uint64_t)v6, v31, v32);
}

void sub_236100868(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v6 = a4;
  id v7 = objc_alloc(MEMORY[0x263F08A88]);
  uint64_t v14 = objc_msgSend_initWithOptions_(v7, v8, 5, v9, v10, v11, v12, v13);
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v15 = a1;
  uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v38, (uint64_t)v42, 16, v17, v18, v19);
  if (v20)
  {
    uint64_t v27 = v20;
    uint64_t v28 = *(void *)v39;
    do
    {
      uint64_t v29 = 0;
      do
      {
        if (*(void *)v39 != v28) {
          objc_enumerationMutation(v15);
        }
        objc_msgSend_addPointer_(v14, v21, *(void *)(*((void *)&v38 + 1) + 8 * v29++), v22, v23, v24, v25, v26, (void)v38);
      }
      while (v27 != v29);
      uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v21, (uint64_t)&v38, (uint64_t)v42, 16, v24, v25, v26);
    }
    while (v27);
  }

  long long v34 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v30, @"BDSArrayAdditionsErrorDomain", 0, 0, v31, v32, v33);
  objc_msgSend_bds_chainUntilNoErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(v14, v35, a3, 1, (uint64_t)v34, (uint64_t)v6, v36, v37);
}

__CFString *sub_2361009CC()
{
  CFUUIDRef v0 = CFUUIDCreate(0);
  id v1 = (__CFString *)CFUUIDCreateString(0, v0);
  CFRelease(v0);
  return v1;
}

void sub_236100B50(uint64_t a1, int a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = a3;
  if (v5)
  {
    id v6 = BDSCloudKitLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_2361FACF0((uint64_t)v5, v6);
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_5;
    }
    id v6 = BDSCloudKitLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = objc_msgSend_zoneName(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
      int v15 = 138412290;
      uint64_t v16 = v14;
      _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@", (uint8_t *)&v15, 0xCu);
    }
  }

LABEL_5:
}

void sub_236100EDC(uint64_t a1)
{
  uint64_t v110 = *MEMORY[0x263EF8340];
  uint64_t v2 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_zoneName(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void **)(a1 + 40);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v103 = v10;
    __int16 v104 = 2112;
    uint64_t v105 = v11;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)", buf, 0x16u);
  }
  uint64_t v19 = objc_msgSend_fetchRequest(BCSaltVersionIdentifier, v12, v13, v14, v15, v16, v17, v18);
  objc_msgSend_setReturnsObjectsAsFaults_(v19, v20, 0, v21, v22, v23, v24, v25);
  uint64_t v26 = *(void **)(a1 + 48);
  id v101 = 0;
  uint64_t v32 = objc_msgSend_executeFetchRequest_error_(v26, v27, (uint64_t)v19, (uint64_t)&v101, v28, v29, v30, v31);
  id v33 = v101;
  if (objc_msgSend_count(v32, v34, v35, v36, v37, v38, v39, v40))
  {
    if (objc_msgSend_count(v32, v41, v42, v43, v44, v45, v46, v47) == 1)
    {
      objc_msgSend_firstObject(v32, v48, v49, v50, v51, v52, v53, v54);
      uint64_t v55 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();
      uint64_t v63 = objc_msgSend_localSaltVersionIdentifier(v55, v56, v57, v58, v59, v60, v61, v62);
      uint64_t v70 = objc_msgSend_isEqualToString_(v63, v64, *(void *)(a1 + 40), v65, v66, v67, v68, v69) ^ 1;
      uint64_t v71 = BDSCloudKitSyncLog();
      if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v79 = objc_msgSend_zoneName(*(void **)(a1 + 32), v72, v73, v74, v75, v76, v77, v78);
        uint64_t v80 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138413058;
        uint64_t v103 = v79;
        __int16 v104 = 2112;
        uint64_t v105 = v63;
        __int16 v106 = 2112;
        uint64_t v107 = v80;
        __int16 v108 = 1024;
        int v109 = v70;
        _os_log_impl(&dword_2360BC000, v71, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d", buf, 0x26u);
      }
      uint64_t v81 = _Block_copy(*(const void **)(a1 + 56));
      uint64_t v82 = v81;
      if (v81) {
        (*((void (**)(void *, uint64_t, void))v81 + 2))(v81, v70, 0);
      }

      goto LABEL_18;
    }
    uint64_t v96 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR)) {
      sub_2361FAD68();
    }

    uint64_t v55 = (void (**)(void, void, void))_Block_copy(*(const void **)(a1 + 56));
    if (v55)
    {
      uint64_t v63 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v97, @"BDSErrorDomain", 1006, 0, v98, v99, v100);
      ((void (**)(void, uint64_t, void *))v55)[2](v55, 1, v63);
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v83 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v91 = objc_msgSend_zoneName(*(void **)(a1 + 32), v84, v85, v86, v87, v88, v89, v90);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v103 = v91;
      _os_log_impl(&dword_2360BC000, v83, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved", buf, 0xCu);
    }
    uint64_t v55 = (void (**)(void, void, void))_Block_copy(*(const void **)(a1 + 56));
    if (v55)
    {
      uint64_t v63 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v92, @"BDSErrorDomain", 1003, 0, v93, v94, v95);
      ((void (**)(void, void, void *))v55)[2](v55, 0, v63);
LABEL_18:
    }
  }
}

void sub_236101330(uint64_t a1)
{
  uint64_t v152 = *MEMORY[0x263EF8340];
  uint64_t v2 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = objc_msgSend_zoneName(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v11 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v149 = v10;
    __int16 v150 = 2112;
    *(void *)uint64_t v151 = v11;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)", buf, 0x16u);
  }
  uint64_t v19 = objc_msgSend_fetchRequest(BCSaltVersionIdentifier, v12, v13, v14, v15, v16, v17, v18);
  objc_msgSend_setReturnsObjectsAsFaults_(v19, v20, 0, v21, v22, v23, v24, v25);
  uint64_t v26 = *(void **)(a1 + 48);
  id v147 = 0;
  uint64_t v32 = objc_msgSend_executeFetchRequest_error_(v26, v27, (uint64_t)v19, (uint64_t)&v147, v28, v29, v30, v31);
  id v40 = v147;
  if (v32)
  {
    if (objc_msgSend_count(v32, v33, v34, v35, v36, v37, v38, v39) == 1)
    {
      uint64_t inited = objc_msgSend_firstObject(v32, v41, v42, v43, v44, v45, v46, v47);
    }
    else
    {
      if ((unint64_t)objc_msgSend_count(v32, v41, v42, v43, v44, v45, v46, v47) >= 2)
      {
        uint64_t v62 = objc_msgSend_firstObject(v32, v55, v56, v57, v58, v59, v60, v61);
        if ((unint64_t)objc_msgSend_count(v32, v63, v64, v65, v66, v67, v68, v69) >= 2)
        {
          unint64_t v70 = 1;
          do
          {
            uint64_t v71 = *(void **)(a1 + 48);
            uint64_t v72 = objc_msgSend_objectAtIndexedSubscript_(v32, v49, v70, v50, v51, v52, v53, v54);
            objc_msgSend_deleteObject_(v71, v73, (uint64_t)v72, v74, v75, v76, v77, v78);

            ++v70;
          }
          while (objc_msgSend_count(v32, v79, v80, v81, v82, v83, v84, v85) > v70);
        }
LABEL_15:
        objc_msgSend_setLocalSaltVersionIdentifier_(v62, v49, *(void *)(a1 + 40), v50, v51, v52, v53, v54);
        objc_msgSend_setServerSaltVersionIdentifier_(v62, v103, *(void *)(a1 + 40), v104, v105, v106, v107, v108);
        if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v109, v110, v111, v112, v113, v114, v115))
        {
          uint64_t v122 = *(void **)(a1 + 48);
          id v146 = v40;
          int v123 = objc_msgSend_save_(v122, v116, (uint64_t)&v146, v117, v118, v119, v120, v121);
          id v124 = v146;

          uint64_t v125 = BDSCloudKitSyncLog();
          if (os_log_type_enabled(v125, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v133 = objc_msgSend_zoneName(*(void **)(a1 + 32), v126, v127, v128, v129, v130, v131, v132);
            *(_DWORD *)long long buf = 138412802;
            uint64_t v149 = v133;
            __int16 v150 = 1024;
            *(_DWORD *)uint64_t v151 = v123;
            *(_WORD *)&v151[4] = 2112;
            *(void *)&v151[6] = v124;
            _os_log_impl(&dword_2360BC000, v125, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)", buf, 0x1Cu);
          }
          if (v123) {
            goto LABEL_25;
          }
          uint64_t v134 = BDSCloudKitSyncLog();
          if (os_log_type_enabled(v134, OS_LOG_TYPE_ERROR))
          {
            uint64_t v142 = objc_msgSend_zoneName(*(void **)(a1 + 32), v135, v136, v137, v138, v139, v140, v141);
            uint64_t v143 = *(void *)(a1 + 40);
            *(_DWORD *)long long buf = 138412802;
            uint64_t v149 = v142;
            __int16 v150 = 2112;
            *(void *)uint64_t v151 = v143;
            *(_WORD *)&v151[8] = 2114;
            *(void *)&v151[10] = v124;
            _os_log_error_impl(&dword_2360BC000, v134, OS_LOG_TYPE_ERROR, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@", buf, 0x20u);
          }
        }
        else
        {
          uint64_t v134 = BDSCloudKitSyncLog();
          if (os_log_type_enabled(v134, OS_LOG_TYPE_ERROR)) {
            sub_2361FAE10();
          }
          id v124 = v40;
        }

LABEL_25:
        id v40 = v124;
        goto LABEL_26;
      }
      uint64_t v86 = BDSCloudKitSyncLog();
      if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v94 = objc_msgSend_zoneName(*(void **)(a1 + 32), v87, v88, v89, v90, v91, v92, v93);
        uint64_t v95 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138412546;
        uint64_t v149 = v94;
        __int16 v150 = 2112;
        *(void *)uint64_t v151 = v95;
        _os_log_impl(&dword_2360BC000, v86, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@", buf, 0x16u);
      }
      uint64_t v96 = [BCSaltVersionIdentifier alloc];
      uint64_t inited = objc_msgSend_initIntoManagedObjectContext_(v96, v97, *(void *)(a1 + 48), v98, v99, v100, v101, v102);
    }
    uint64_t v62 = (void *)inited;
    goto LABEL_15;
  }
LABEL_26:
  uint64_t v144 = _Block_copy(*(const void **)(a1 + 56));
  uint64_t v145 = v144;
  if (v144) {
    (*((void (**)(void *, BOOL, id))v144 + 2))(v144, v40 == 0, v40);
  }
}

void sub_236101800(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v89[3] = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_fetchRequestWithEntityName_(MEMORY[0x263EFF260], a2, @"BCServerChangeToken", a4, a5, a6, a7, a8);
  id v10 = objc_alloc(MEMORY[0x263EFF1D0]);
  Request = objc_msgSend_initWithFetchRequest_(v10, v11, (uint64_t)v9, v12, v13, v14, v15, v16);
  objc_msgSend_setResultType_(Request, v18, 1, v19, v20, v21, v22, v23);
  uint64_t v24 = *(void **)(a1 + 32);
  id v87 = 0;
  uint64_t v30 = objc_msgSend_executeRequest_error_(v24, v25, (uint64_t)Request, (uint64_t)&v87, v26, v27, v28, v29);
  id v38 = v87;
  if (v38)
  {
    uint64_t v39 = BDSCloudKitLog();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
      sub_2361FAEB4();
    }
  }
  if (v30)
  {
    id v40 = objc_msgSend_defaultCenter(MEMORY[0x263F08A00], v31, v32, v33, v34, v35, v36, v37);
    uint64_t v84 = *(void *)(a1 + 32);
    uint64_t v85 = *MEMORY[0x263EFF040];
    v88[0] = *MEMORY[0x263EFF018];
    uint64_t v86 = v9;
    uint64_t v48 = objc_msgSend_set(MEMORY[0x263EFFA08], v41, v42, v43, v44, v45, v46, v47);
    v89[0] = v48;
    v88[1] = *MEMORY[0x263EFF180];
    uint64_t v56 = objc_msgSend_set(MEMORY[0x263EFFA08], v49, v50, v51, v52, v53, v54, v55);
    v89[1] = v56;
    v88[2] = *MEMORY[0x263EFEFE0];
    uint64_t v57 = (void *)MEMORY[0x263EFFA08];
    uint64_t v65 = objc_msgSend_result(v30, v58, v59, v60, v61, v62, v63, v64);
    uint64_t v72 = objc_msgSend_setWithArray_(v57, v66, (uint64_t)v65, v67, v68, v69, v70, v71);
    v89[2] = v72;
    uint64_t v77 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v73, (uint64_t)v89, (uint64_t)v88, 3, v74, v75, v76);
    objc_msgSend_postNotificationName_object_userInfo_(v40, v78, v85, v84, (uint64_t)v77, v79, v80, v81);

    uint64_t v9 = v86;
  }
  uint64_t v82 = _Block_copy(*(const void **)(a1 + 48));
  uint64_t v83 = v82;
  if (v82) {
    (*((void (**)(void *, BOOL, id))v82 + 2))(v82, v30 != 0, v38);
  }
}

void sub_236101C80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_shared(MEMORY[0x263F2BA58], a2, a3, a4, a5, a6, a7, a8);
  int v17 = objc_msgSend_verboseLoggingEnabled(v9, v10, v11, v12, v13, v14, v15, v16);

  if (v17)
  {
    uint64_t v18 = BDSCloudKitDevelopmentLog();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = objc_msgSend_zoneName(*(void **)(a1 + 32), v19, v20, v21, v22, v23, v24, v25);
      uint64_t v27 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v90 = v26;
      __int16 v91 = 2112;
      uint64_t v92 = v27;
      _os_log_impl(&dword_2360BC000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudChangeTokenController - #recordChange zone: %@ storing server change token: %@\\\"\"", buf, 0x16u);
    }
  }
  id v28 = objc_alloc(MEMORY[0x263EFF260]);
  uint64_t v35 = objc_msgSend_initWithEntityName_(v28, v29, @"BCServerChangeToken", v30, v31, v32, v33, v34);
  objc_msgSend_setReturnsObjectsAsFaults_(v35, v36, 0, v37, v38, v39, v40, v41);
  uint64_t v42 = *(void **)(a1 + 48);
  id v88 = 0;
  uint64_t v48 = objc_msgSend_executeFetchRequest_error_(v42, v43, (uint64_t)v35, (uint64_t)&v88, v44, v45, v46, v47);
  id v49 = v88;
  if (objc_msgSend_count(v48, v50, v51, v52, v53, v54, v55, v56)) {
    objc_msgSend_objectAtIndexedSubscript_(v48, v57, 0, v58, v59, v60, v61, v62);
  }
  else {
  uint64_t v63 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v57, @"BCServerChangeToken", *(void *)(a1 + 48), v59, v60, v61, v62);
  }
  objc_msgSend_setValue_forKey_(v63, v64, *(void *)(a1 + 56), @"serverChangeToken", v65, v66, v67, v68);

  if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v69, v70, v71, v72, v73, v74, v75))
  {
    uint64_t v82 = *(void **)(a1 + 48);
    id v87 = v49;
    objc_msgSend_save_(v82, v76, (uint64_t)&v87, v77, v78, v79, v80, v81);
    id v83 = v87;

    if (v83)
    {
      uint64_t v84 = BDSCloudKitLog();
      if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
        sub_2361FAF44();
      }
    }
  }
  else
  {
    id v83 = v49;
  }
  uint64_t v85 = _Block_copy(*(const void **)(a1 + 64));
  uint64_t v86 = v85;
  if (v85) {
    (*((void (**)(void *))v85 + 2))(v85);
  }
}

void sub_236102010(uint64_t a1)
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  id v2 = objc_alloc(MEMORY[0x263EFF260]);
  uint64_t v9 = objc_msgSend_initWithEntityName_(v2, v3, @"BCServerChangeToken", v4, v5, v6, v7, v8);
  objc_msgSend_setReturnsObjectsAsFaults_(v9, v10, 0, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void **)(a1 + 32);
  id v82 = 0;
  uint64_t v22 = objc_msgSend_executeFetchRequest_error_(v16, v17, (uint64_t)v9, (uint64_t)&v82, v18, v19, v20, v21);
  id v30 = v82;
  if (v30)
  {
    uint64_t v31 = BDSCloudKitLog();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
      sub_2361FB04C();
    }
  }
  if (objc_msgSend_count(v22, v23, v24, v25, v26, v27, v28, v29))
  {
    id v32 = objc_alloc(MEMORY[0x263F08928]);
    uint64_t v39 = objc_msgSend_objectAtIndexedSubscript_(v22, v33, 0, v34, v35, v36, v37, v38);
    uint64_t v46 = objc_msgSend_valueForKey_(v39, v40, @"serverChangeToken", v41, v42, v43, v44, v45);
    id v81 = 0;
    uint64_t v52 = objc_msgSend_initForReadingFromData_error_(v32, v47, (uint64_t)v46, (uint64_t)&v81, v48, v49, v50, v51);
    id v53 = v81;

    if (v53)
    {
      uint64_t v54 = BDSCloudKitLog();
      if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR)) {
        sub_2361FAFD4((uint64_t)v53, v54);
      }

      uint64_t v55 = 0;
    }
    else
    {
      id v56 = objc_alloc(MEMORY[0x263EFD838]);
      uint64_t v55 = objc_msgSend_initWithCoder_(v56, v57, (uint64_t)v52, v58, v59, v60, v61, v62);
      objc_msgSend_finishDecoding(v52, v63, v64, v65, v66, v67, v68, v69);
    }
  }
  else
  {
    uint64_t v55 = 0;
  }
  uint64_t v70 = BDSCloudKitLog();
  if (os_log_type_enabled(v70, OS_LOG_TYPE_INFO))
  {
    uint64_t v78 = objc_msgSend_zoneName(*(void **)(a1 + 40), v71, v72, v73, v74, v75, v76, v77);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v84 = v78;
    __int16 v85 = 2112;
    uint64_t v86 = v55;
    _os_log_impl(&dword_2360BC000, v70, OS_LOG_TYPE_INFO, "BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@", buf, 0x16u);
  }
  uint64_t v79 = _Block_copy(*(const void **)(a1 + 48));
  uint64_t v80 = v79;
  if (v79) {
    (*((void (**)(void *, void *))v79 + 2))(v79, v55);
  }
}

uint64_t sub_236103234()
{
  CFUUIDRef v0 = [BCCloudCollectionsManager alloc];
  qword_26AD775F8 = objc_msgSend_initClientXPCProxy(v0, v1, v2, v3, v4, v5, v6, v7);
  return MEMORY[0x270F9A758]();
}

void sub_236104690(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)MEMORY[0x237DFE9C0]();
  id v5 = a3;
  objc_msgSend_sharedReachabilityForInternetConnection(BDSReachability, v6, v7, v8, v9, v10, v11, v12);
  id v13 = (id)objc_claimAutoreleasedReturnValue();

  if (v13 == v5) {
    objc_msgSend__updateIsOffline(BDSReachability, v14, v15, v16, v17, v18, v19, v20);
  }
  uint64_t v21 = objc_msgSend_defaultCenter(MEMORY[0x263F08A00], v14, v15, v16, v17, v18, v19, v20);
  objc_msgSend_postNotificationName_object_(v21, v22, @"kNetworkReachabilityChangedNotification", (uint64_t)v5, v23, v24, v25, v26);
}

uint64_t sub_236104B90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = objc_msgSend_reachabilityForInternetConnection(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = (void *)qword_26AD77660;
  qword_26AD77660 = v8;

  uint64_t result = objc_msgSend_currentReachabilityStatus((void *)qword_26AD77660, v10, v11, v12, v13, v14, v15, v16);
  byte_26AD760E0 = result == 0;
  return result;
}

uint64_t sub_236105A0C()
{
  CFUUIDRef v0 = [BCCloudAssetManager alloc];
  qword_26AD77600 = objc_msgSend_initClientXPCProxy(v0, v1, v2, v3, v4, v5, v6, v7);
  return MEMORY[0x270F9A758]();
}

void sub_236106384(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_2361063AC(void **a1, int a2, int a3)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v6 = BDSCloudKitLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = objc_msgSend_delegate(a1[4], v7, v8, v9, v10, v11, v12, v13);
    uint64_t v22 = objc_msgSend_entityName(v14, v15, v16, v17, v18, v19, v20, v21);
    uint64_t v23 = (void *)v22;
    uint64_t v24 = @"NO";
    if (a2) {
      uint64_t v25 = @"YES";
    }
    else {
      uint64_t v25 = @"NO";
    }
    *(_DWORD *)long long buf = 138412802;
    uint64_t v41 = v22;
    uint64_t v43 = v25;
    __int16 v42 = 2112;
    if (a3) {
      uint64_t v24 = @"YES";
    }
    __int16 v44 = 2112;
    uint64_t v45 = v24;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_INFO, "BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@", buf, 0x20u);
  }
  if (a2 && a3)
  {
    uint64_t v33 = objc_msgSend_syncQueue(a1[4], v26, v27, v28, v29, v30, v31, v32);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_236106594;
    block[3] = &unk_264CA1688;
    objc_copyWeak(&v39, a1 + 7);
    id v37 = a1[5];
    id v38 = a1[6];
    dispatch_async(v33, block);

    objc_destroyWeak(&v39);
  }
  else
  {
    uint64_t v34 = _Block_copy(a1[6]);
    uint64_t v35 = v34;
    if (v34) {
      (*((void (**)(void *))v34 + 2))(v34);
    }
  }
}

void sub_236106594(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend__syncQueueSyncForCloudData_completion_(WeakRetained, v2, *(void *)(a1 + 32), *(void *)(a1 + 40), v3, v4, v5, v6);
}

void sub_236106888(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = (int)a2;
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v10 = objc_msgSend_shared(MEMORY[0x263F2BA58], a2, a3, a4, a5, a6, a7, a8);
  int v18 = objc_msgSend_verboseLoggingEnabled(v10, v11, v12, v13, v14, v15, v16, v17);

  if (v18)
  {
    uint64_t v19 = BDSCloudKitDevelopmentLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = objc_msgSend_delegate(*(void **)(a1 + 32), v20, v21, v22, v23, v24, v25, v26);
      uint64_t v35 = objc_msgSend_entityName(v27, v28, v29, v30, v31, v32, v33, v34);
      uint64_t v36 = (void *)v35;
      id v37 = @"NO";
      if (v8) {
        id v37 = @"YES";
      }
      int v38 = 138412546;
      uint64_t v39 = v35;
      __int16 v40 = 2112;
      uint64_t v41 = v37;
      _os_log_impl(&dword_2360BC000, v19, OS_LOG_TYPE_DEFAULT, "\"\\\"#zonefetch BCCloudDataSyncManager: databaseController:recordsChanged: entityName: %@, success: %@\\\"\"", (uint8_t *)&v38, 0x16u);
    }
  }
}

void sub_236106BF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (objc_msgSend_serverPushPostponed(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8))
  {
    uint64_t v16 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    if (v16)
    {
      uint64_t v33 = v16;
      v16[2]();
      uint64_t v16 = v33;
    }
  }
  else
  {
    uint64_t v17 = objc_msgSend_cloudKitController(*(void **)(a1 + 32), v9, v10, v11, v12, v13, v14, v15);
    uint64_t v25 = objc_msgSend_privateCloudDatabaseController(v17, v18, v19, v20, v21, v22, v23, v24);

    v34[0] = MEMORY[0x263EF8330];
    v34[1] = 3221225472;
    v34[2] = sub_236106D00;
    v34[3] = &unk_264CA20C8;
    uint64_t v26 = *(void **)(a1 + 40);
    void v34[4] = *(void *)(a1 + 32);
    id v35 = v26;
    objc_msgSend_getAttached_(v25, v27, (uint64_t)v34, v28, v29, v30, v31, v32);
  }
}

void sub_236106D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v6 = BDSCloudKitLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = objc_msgSend_delegate(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
    uint64_t v22 = objc_msgSend_entityName(v14, v15, v16, v17, v18, v19, v20, v21);
    uint64_t v29 = objc_msgSend_numberWithBool_(NSNumber, v23, a2, v24, v25, v26, v27, v28);
    uint64_t v36 = objc_msgSend_numberWithBool_(NSNumber, v30, a3, v31, v32, v33, v34, v35);
    int v59 = 138543874;
    uint64_t v60 = v22;
    __int16 v61 = 2114;
    uint64_t v62 = v29;
    __int16 v63 = 2114;
    uint64_t v64 = v36;
    _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@", (uint8_t *)&v59, 0x20u);
  }
  if (a2
    && a3
    && (objc_msgSend_delegate(*(void **)(a1 + 32), v37, v38, v39, v40, v41, v42, v43),
        __int16 v44 = objc_claimAutoreleasedReturnValue(),
        v44,
        v44))
  {
    uint64_t v52 = objc_msgSend_delegate(*(void **)(a1 + 32), v45, v46, v47, v48, v49, v50, v51);
    objc_msgSend_syncManager_startSyncToCKWithCompletion_(v52, v53, *(void *)(a1 + 32), *(void *)(a1 + 40), v54, v55, v56, v57);
  }
  else
  {
    uint64_t v58 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v52 = v58;
    if (v58) {
      (*((void (**)(void *))v58 + 2))(v58);
    }
  }
}

void sub_2361076E4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v598 = *MEMORY[0x263EF8340];
  id v534 = a2;
  id v537 = a3;
  id v538 = a4;
  uint64_t v545 = a1;
  frouint64_t m = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v536 = objc_msgSend_delegate(WeakRetained, v7, v8, v9, v10, v11, v12, v13);
  if (!WeakRetained)
  {
    unint64_t v51 = 0;
    int v52 = 0;
    int v53 = 0;
    uint64_t v54 = v545;
    unint64_t v55 = *(void *)(v545 + 72);
LABEL_47:
    objc_msgSend__leaveDispatchGroup_times_(WeakRetained, v14, *(void *)(v54 + 32), v55 - v51, v17, v18, v19, v20);
    goto LABEL_48;
  }
  if (!v538)
  {
LABEL_5:
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    uint64_t v50 = objc_msgSend_syncQueue(WeakRetained, v43, v44, v45, v46, v47, v48, v49);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_236108A5C;
    block[3] = &unk_264CA1450;
    void block[4] = WeakRetained;
    id v587 = *(id *)(a1 + 32);
    dispatch_async(v50, block);

    goto LABEL_8;
  }
  uint64_t v21 = objc_msgSend_domain(v538, v14, v15, v16, v17, v18, v19, v20);
  if (objc_msgSend_isEqualToString_(v21, v22, *MEMORY[0x263EFD498], v23, v24, v25, v26, v27))
  {
    uint64_t v35 = objc_msgSend_code(v538, v28, v29, v30, v31, v32, v33, v34);

    if (v35 != 2) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }

LABEL_8:
  v544 = objc_msgSend_array(MEMORY[0x263EFF980], v36, v37, v38, v39, v40, v41, v42);
  long long v584 = 0u;
  long long v585 = 0u;
  long long v582 = 0u;
  long long v583 = 0u;
  id v56 = v534;
  uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v57, (uint64_t)&v582, (uint64_t)v597, 16, v58, v59, v60);
  if (v61)
  {
    uint64_t v62 = *(void *)v583;
    do
    {
      for (uint64_t i = 0; i != v61; ++i)
      {
        if (*(void *)v583 != v62) {
          objc_enumerationMutation(v56);
        }
        uint64_t v64 = *(void **)(*((void *)&v582 + 1) + 8 * i);
        uint64_t v65 = BDSCloudKitLog();
        if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v73 = objc_msgSend_encryptedValuesByKey(v64, v66, v67, v68, v69, v70, v71, v72);
          uint64_t v80 = objc_msgSend_objectForKeyedSubscript_(v73, v74, @"localRecordIDEncrypted", v75, v76, v77, v78, v79);
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v80;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v64;
          _os_log_impl(&dword_2360BC000, v65, OS_LOG_TYPE_DEFAULT, "Successful save of CKRecord id=%@ %@", buf, 0x16u);
        }
        id v81 = *(void **)(a1 + 40);
        uint64_t v89 = objc_msgSend_recordID(v64, v82, v83, v84, v85, v86, v87, v88);
        uint64_t v96 = objc_msgSend_objectForKeyedSubscript_(v81, v90, (uint64_t)v89, v91, v92, v93, v94, v95);

        objc_msgSend_setSystemFields_(v96, v97, (uint64_t)v64, v98, v99, v100, v101, v102);
        objc_msgSend_addObject_(v544, v103, (uint64_t)v96, v104, v105, v106, v107, v108);
      }
      uint64_t v61 = objc_msgSend_countByEnumeratingWithState_objects_count_(v56, v109, (uint64_t)&v582, (uint64_t)v597, 16, v110, v111, v112);
    }
    while (v61);
  }

  uint64_t v127 = objc_msgSend_count(v544, v113, v114, v115, v116, v117, v118, v119);
  uint64_t v128 = 0;
  if (v127)
  {
    uint64_t v129 = v536;
    if (!v536) {
      goto LABEL_21;
    }
    v579[0] = MEMORY[0x263EF8330];
    v579[1] = 3221225472;
    v579[2] = sub_236108A9C;
    v579[3] = &unk_264CA20F0;
    v579[4] = WeakRetained;
    id v580 = *(id *)(a1 + 32);
    uint64_t v581 = v127;
    objc_msgSend_syncManager_updateSyncGenerationFromCloudData_completion_(v536, v130, (uint64_t)WeakRetained, (uint64_t)v544, (uint64_t)v579, v131, v132, v133);

    uint64_t v128 = v127;
  }
  uint64_t v129 = v536;
LABEL_21:
  unint64_t v533 = v128;
  uint64_t v134 = objc_msgSend_count(v537, v120, v121, v122, v123, v124, v125, v126);
  if (objc_msgSend_count(v537, v135, v136, v137, v138, v139, v140, v141)) {
    BOOL v149 = v129 != 0;
  }
  else {
    BOOL v149 = 0;
  }
  if (v149)
  {
    __int16 v150 = BDSCloudKitLog();
    if (os_log_type_enabled(v150, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      *(void *)&uint8_t buf[4] = v537;
      _os_log_impl(&dword_2360BC000, v150, OS_LOG_TYPE_DEFAULT, "Successful removal of CKRecord ids=%@", buf, 0xCu);
    }

    v576[0] = MEMORY[0x263EF8330];
    v576[1] = 3221225472;
    v576[2] = sub_236108AAC;
    v576[3] = &unk_264CA20F0;
    v576[4] = WeakRetained;
    id v577 = *(id *)(v545 + 32);
    uint64_t v578 = v134;
    objc_msgSend_syncManager_removeCloudDataForIDs_completion_(v536, v151, (uint64_t)WeakRetained, (uint64_t)v537, (uint64_t)v576, v152, v153, v154);

    v533 += v134;
  }
  uint64_t v155 = objc_msgSend_code(v538, v142, v143, v144, v145, v146, v147, v148);
  if (!v538)
  {
    uint64_t v189 = BDSCloudKitLog();
    if (os_log_type_enabled(v189, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_operationID(*(void **)(v545 + 48), v190, v191, v192, v193, v194, v195, v196);
      uint64_t v197 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
      *(_DWORD *)long long buf = 134218498;
      *(void *)&uint8_t buf[4] = v127;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v134;
      *(_WORD *)&buf[22] = 2114;
      v591 = v197;
      _os_log_impl(&dword_2360BC000, v189, OS_LOG_TYPE_DEFAULT, "Total success saving %lu records and deleting %lu records OperationID: %{public}@", buf, 0x20u);
    }
    goto LABEL_42;
  }
  uint64_t v163 = v155;
  uint64_t v164 = objc_msgSend_domain(v538, v156, v157, v158, v159, v160, v161, v162);
  uint64_t v165 = *MEMORY[0x263EFD498];
  char isEqualToString = objc_msgSend_isEqualToString_(v164, v166, *MEMORY[0x263EFD498], v167, v168, v169, v170, v171);

  if ((isEqualToString & 1) == 0)
  {
    uint64_t v198 = BDSCloudKitLog();
    if (os_log_type_enabled(v198, OS_LOG_TYPE_ERROR)) {
      sub_2361FB304();
    }
    goto LABEL_41;
  }
  if (v163 > 110)
  {
    switch(v163)
    {
      case 111:
        goto LABEL_61;
      case 112:
        int v53 = 0;
        LOBYTE(v531) = 1;
        goto LABEL_43;
      case 5008:
LABEL_61:
        LOBYTE(v531) = 0;
        int v53 = 1;
        goto LABEL_43;
    }
    goto LABEL_96;
  }
  if ((unint64_t)v163 > 0x1B) {
    goto LABEL_96;
  }
  if (((1 << v163) & 0x88000C0) != 0)
  {
    uint64_t v180 = BDSCloudKitLog();
    if (os_log_type_enabled(v180, OS_LOG_TYPE_ERROR)) {
      sub_2361FB304();
    }

    uint64_t v188 = objc_msgSend_syncQueue(WeakRetained, v181, v182, v183, v184, v185, v186, v187);
    v547[0] = MEMORY[0x263EF8330];
    v547[1] = 3221225472;
    v547[2] = sub_236108D34;
    v547[3] = &unk_264CA2140;
    v547[4] = WeakRetained;
    id v548 = v538;
    id v549 = *(id *)(v545 + 40);
    objc_copyWeak(&v551, from);
    uint64_t v550 = *(void *)(v545 + 56);
    dispatch_async(v188, v547);

    objc_destroyWeak(&v551);
    goto LABEL_42;
  }
  if (v163 != 2)
  {
LABEL_96:
    uint64_t v198 = BDSCloudKitLog();
    if (os_log_type_enabled(v198, OS_LOG_TYPE_ERROR)) {
      sub_2361FB304();
    }
LABEL_41:

LABEL_42:
    int v53 = 0;
    LOBYTE(v531) = 0;
    goto LABEL_43;
  }
  v254 = objc_msgSend_userInfo(v538, v173, v174, v175, v176, v177, v178, v179);
  v528 = objc_msgSend_objectForKeyedSubscript_(v254, v255, *MEMORY[0x263EFD4C8], v256, v257, v258, v259, v260);

  v261 = BDSCloudKitLog();
  if (os_log_type_enabled(v261, OS_LOG_TYPE_INFO))
  {
    uint64_t v269 = objc_msgSend_count(v528, v262, v263, v264, v265, v266, v267, v268);
    *(_DWORD *)long long buf = 134218496;
    *(void *)&uint8_t buf[4] = v127;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v134;
    *(_WORD *)&buf[22] = 2048;
    v591 = (uint64_t (*)(uint64_t, uint64_t))v269;
    _os_log_impl(&dword_2360BC000, v261, OS_LOG_TYPE_INFO, "Partial failure saving %lu records and deleting %lu records.  Failed %lu.", buf, 0x20u);
  }

  if (v536)
  {
    v530 = objc_opt_new();
    v529 = objc_opt_new();
    long long v574 = 0u;
    long long v575 = 0u;
    long long v572 = 0u;
    long long v573 = 0u;
    id v270 = v528;
    uint64_t v282 = objc_msgSend_countByEnumeratingWithState_objects_count_(v270, v271, (uint64_t)&v572, (uint64_t)v596, 16, v272, v273, v274);
    if (v282)
    {
      int v531 = 0;
      uint64_t v283 = *(void *)v573;
      uint64_t v542 = *MEMORY[0x263EFD4F8];
      do
      {
        for (uint64_t j = 0; j != v282; ++j)
        {
          if (*(void *)v573 != v283) {
            objc_enumerationMutation(v270);
          }
          uint64_t v285 = *(void *)(*((void *)&v572 + 1) + 8 * j);
          v286 = objc_msgSend_null(MEMORY[0x263EFF9D0], v275, v276, v277, v278, v279, v280, v281);
          BOOL v287 = v285 == (void)v286;

          if (!v287)
          {
            v288 = objc_msgSend_objectForKeyedSubscript_(v270, v275, v285, v277, v278, v279, v280, v281);
            v296 = objc_msgSend_domain(v288, v289, v290, v291, v292, v293, v294, v295);
            int isEqual = objc_msgSend_isEqual_(v296, v297, v165, v298, v299, v300, v301, v302);

            if (isEqual)
            {
              v311 = objc_msgSend_userInfo(v288, v304, v305, v306, v307, v308, v309, v310);
              v318 = objc_msgSend_objectForKey_(v311, v312, v542, v313, v314, v315, v316, v317);

              if (v318)
              {
                BOOL v326 = objc_msgSend_code(v288, v319, v320, v321, v322, v323, v324, v325) == 14;
                v327 = BDSCloudKitLog();
                v328 = v327;
                if (v326)
                {
                  if (os_log_type_enabled(v327, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)long long buf = 138543618;
                    *(void *)&uint8_t buf[4] = v285;
                    *(_WORD *)&buf[12] = 2114;
                    *(void *)&buf[14] = v288;
                    _os_log_impl(&dword_2360BC000, v328, OS_LOG_TYPE_INFO, "CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@", buf, 0x16u);
                  }

                  objc_msgSend_setObject_forKeyedSubscript_(v530, v329, (uint64_t)v318, v285, v330, v331, v332, v333);
                }
                else
                {
                  if (os_log_type_enabled(v327, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)long long buf = 138543874;
                    *(void *)&uint8_t buf[4] = v318;
                    *(_WORD *)&buf[12] = 2114;
                    *(void *)&buf[14] = v538;
                    *(_WORD *)&buf[22] = 2114;
                    v591 = (uint64_t (*)(uint64_t, uint64_t))v288;
                    _os_log_error_impl(&dword_2360BC000, v328, OS_LOG_TYPE_ERROR, "Error for record %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                  }
                }
              }
              else
              {
                v334 = BDSCloudKitLog();
                if (os_log_type_enabled(v334, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)long long buf = 138543874;
                  *(void *)&uint8_t buf[4] = v285;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v538;
                  *(_WORD *)&buf[22] = 2114;
                  v591 = (uint64_t (*)(uint64_t, uint64_t))v288;
                  _os_log_error_impl(&dword_2360BC000, v334, OS_LOG_TYPE_ERROR, "Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                }

                if (objc_msgSend_code(v288, v335, v336, v337, v338, v339, v340, v341) == 21
                  || objc_msgSend_code(v288, v342, v343, v344, v345, v346, v347, v348) == 14)
                {
                  objc_msgSend_addObject_(v529, v342, v285, v344, v345, v346, v347, v348);
                }
                else
                {
                  uint64_t v350 = objc_msgSend_code(v288, v342, v349, v344, v345, v346, v347, v348);
                  int v351 = v531;
                  if (v350 == 112) {
                    int v351 = 1;
                  }
                  int v531 = v351;
                }
              }
            }
            else
            {
              v318 = BDSCloudKitLog();
              if (os_log_type_enabled(v318, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)long long buf = 138412546;
                *(void *)&uint8_t buf[4] = v285;
                *(_WORD *)&buf[12] = 2114;
                *(void *)&buf[14] = v288;
                _os_log_error_impl(&dword_2360BC000, v318, OS_LOG_TYPE_ERROR, "Error modifying record:%@ error=%{public}@", buf, 0x16u);
              }
            }
          }
        }
        uint64_t v282 = objc_msgSend_countByEnumeratingWithState_objects_count_(v270, v275, (uint64_t)&v572, (uint64_t)v596, 16, v279, v280, v281);
      }
      while (v282);
    }
    else
    {
      LOBYTE(v531) = 0;
    }

    uint64_t v527 = objc_msgSend_count(v530, v354, v355, v356, v357, v358, v359, v360);
    if (v527)
    {
      v532 = objc_msgSend_set(MEMORY[0x263EFF9C0], v361, v362, v363, v364, v365, v366, v367);
      long long v570 = 0u;
      long long v571 = 0u;
      long long v568 = 0u;
      long long v569 = 0u;
      obuint64_t j = objc_msgSend_allValues(v530, v368, v369, v370, v371, v372, v373, v374);
      uint64_t v543 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v375, (uint64_t)&v568, (uint64_t)v595, 16, v376, v377, v378);
      if (v543)
      {
        uint64_t froma = *(void *)v569;
        do
        {
          for (uint64_t k = 0; k != v543; ++k)
          {
            if (*(void *)v569 != froma) {
              objc_enumerationMutation(obj);
            }
            v387 = *(void **)(*((void *)&v568 + 1) + 8 * k);
            long long v564 = 0u;
            long long v565 = 0u;
            long long v566 = 0u;
            long long v567 = 0u;
            v388 = objc_msgSend_allKeys(v387, v379, v380, v381, v382, v383, v384, v385, v527);
            uint64_t v393 = objc_msgSend_countByEnumeratingWithState_objects_count_(v388, v389, (uint64_t)&v564, (uint64_t)v594, 16, v390, v391, v392);
            if (v393)
            {
              uint64_t v394 = *(void *)v565;
              while (2)
              {
                for (uint64_t m = 0; m != v393; ++m)
                {
                  if (*(void *)v565 != v394) {
                    objc_enumerationMutation(v388);
                  }
                  uint64_t v396 = *(void *)(*((void *)&v564 + 1) + 8 * m);
                  objc_opt_class();
                  v403 = objc_msgSend_objectForKeyedSubscript_(v387, v397, v396, v398, v399, v400, v401, v402);
                  v404 = BUDynamicCast();

                  if (v404)
                  {
                    v412 = objc_msgSend_recordID(v387, v405, v406, v407, v408, v409, v410, v411);

                    if (v412)
                    {
                      v420 = objc_msgSend_recordID(v387, v413, v414, v415, v416, v417, v418, v419);
                      objc_msgSend_addObject_(v532, v421, (uint64_t)v420, v422, v423, v424, v425, v426);
                    }
                    else
                    {
                      v420 = BDSCloudKitLog();
                      if (os_log_type_enabled(v420, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)long long buf = 138412290;
                        *(void *)&uint8_t buf[4] = v387;
                        _os_log_error_impl(&dword_2360BC000, v420, OS_LOG_TYPE_ERROR, "Record ID is nil for record to fetch: %@", buf, 0xCu);
                      }
                    }

                    goto LABEL_122;
                  }
                }
                uint64_t v393 = objc_msgSend_countByEnumeratingWithState_objects_count_(v388, v405, (uint64_t)&v564, (uint64_t)v594, 16, v409, v410, v411);
                if (v393) {
                  continue;
                }
                break;
              }
            }
LABEL_122:
          }
          uint64_t v543 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v379, (uint64_t)&v568, (uint64_t)v595, 16, v383, v384, v385);
        }
        while (v543);
      }

      if (objc_msgSend_count(v532, v427, v428, v429, v430, v431, v432, v433))
      {
        v441 = BDSCloudKitLog();
        if (os_log_type_enabled(v441, OS_LOG_TYPE_INFO))
        {
          uint64_t v449 = objc_msgSend_count(v532, v442, v443, v444, v445, v446, v447, v448);
          *(_DWORD *)long long buf = 134217984;
          *(void *)&uint8_t buf[4] = v449;
          _os_log_impl(&dword_2360BC000, v441, OS_LOG_TYPE_INFO, "Fetching %lu records that had assets on conflict", buf, 0xCu);
        }

        id v450 = objc_alloc(MEMORY[0x263EFD6D8]);
        v458 = objc_msgSend_allObjects(v532, v451, v452, v453, v454, v455, v456, v457);
        v465 = objc_msgSend_initWithRecordIDs_(v450, v459, (uint64_t)v458, v460, v461, v462, v463, v464);

        v473 = objc_msgSend_bds_defaultConfiguration(MEMORY[0x263EFD778], v466, v467, v468, v469, v470, v471, v472);
        objc_msgSend_setConfiguration_(v465, v474, (uint64_t)v473, v475, v476, v477, v478, v479);

        v558[0] = MEMORY[0x263EF8330];
        v558[1] = 3221225472;
        v558[2] = sub_236108ABC;
        v558[3] = &unk_264CA2118;
        v559 = v530;
        id v560 = v536;
        id v561 = WeakRetained;
        id v562 = *(id *)(v545 + 32);
        uint64_t v563 = v527;
        objc_msgSend_setFetchRecordsCompletionBlock_(v465, v480, (uint64_t)v558, v481, v482, v483, v484, v485);
        v493 = objc_msgSend_cloudKitController(WeakRetained, v486, v487, v488, v489, v490, v491, v492);
        v501 = objc_msgSend_privateCloudDatabaseController(v493, v494, v495, v496, v497, v498, v499, v500);

        v509 = objc_msgSend_database(v501, v502, v503, v504, v505, v506, v507, v508);
        objc_msgSend_addOperation_(v509, v510, (uint64_t)v465, v511, v512, v513, v514, v515);
      }
      else
      {
        v516 = objc_msgSend_allValues(v530, v434, v435, v436, v437, v438, v439, v440);
        v555[0] = MEMORY[0x263EF8330];
        v555[1] = 3221225472;
        v555[2] = sub_236108D14;
        v555[3] = &unk_264CA20F0;
        v555[4] = WeakRetained;
        id v556 = *(id *)(v545 + 32);
        uint64_t v557 = v527;
        objc_msgSend_syncManager_resolveConflictsForRecords_completion_(v536, v517, (uint64_t)WeakRetained, (uint64_t)v516, (uint64_t)v555, v518, v519, v520);
      }
      v533 += v527;
    }
    uint64_t v521 = objc_msgSend_count(v529, v361, v362, v363, v364, v365, v366, v367, v527);
    if (v521)
    {
      uint64_t v522 = *(void *)(v545 + 56);
      v552[0] = MEMORY[0x263EF8330];
      v552[1] = 3221225472;
      v552[2] = sub_236108D24;
      v552[3] = &unk_264CA20F0;
      v552[4] = WeakRetained;
      id v553 = *(id *)(v545 + 32);
      uint64_t v554 = v521;
      objc_msgSend_syncManager_failedRecordIDs_completion_(v536, v523, v522, (uint64_t)v529, (uint64_t)v552, v524, v525, v526);

      v533 += v521;
    }

    v353 = v530;
  }
  else
  {
    v352 = BDSCloudKitLog();
    v353 = v352;
    if (os_log_type_enabled(v352, OS_LOG_TYPE_ERROR))
    {
      sub_2361FB36C(v352);
      LOBYTE(v531) = 0;
      v353 = v352;
    }
    else
    {
      LOBYTE(v531) = 0;
    }
  }

  int v53 = 0;
LABEL_43:

  int v52 = v531 & 1;
  uint64_t v54 = v545;
  unint64_t v55 = *(void *)(v545 + 72);
  unint64_t v51 = v533;
  if (v55 >= v533) {
    goto LABEL_47;
  }
  uint64_t v199 = BDSCloudKitLog();
  if (os_log_type_enabled(v199, OS_LOG_TYPE_ERROR)) {
    sub_2361FB2C0(v199);
  }

LABEL_48:
  if ((v52 & 1) != 0 || v53)
  {
    *(void *)long long buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    v591 = sub_236108F00;
    v592 = sub_236108F10;
    objc_msgSend_array(MEMORY[0x263EFF980], v200, v201, v202, v203, v204, v205, v206);
    id v593 = (id)objc_claimAutoreleasedReturnValue();
    __int16 v207 = *(void **)(v545 + 40);
    v546[0] = MEMORY[0x263EF8330];
    v546[1] = 3221225472;
    v546[2] = sub_236108F18;
    v546[3] = &unk_264CA2168;
    v546[4] = buf;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v207, v208, (uint64_t)v546, v209, v210, v211, v212, v213);
    if (objc_msgSend_count(*(void **)(*(void *)&buf[8] + 40), v214, v215, v216, v217, v218, v219, v220))
    {
      uint64_t v228 = objc_msgSend_cloudKitController(*(void **)(v545 + 56), v221, v222, v223, v224, v225, v226, v227);
      v236 = objc_msgSend_privateCloudDatabaseController(v228, v229, v230, v231, v232, v233, v234, v235);

      if (v52)
      {
        objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(v236, v237, *(void *)(*(void *)&buf[8] + 40), 0, v238, v239, v240, v241);
      }
      else if (v53)
      {
        v242 = (void *)MEMORY[0x263F087E8];
        uint64_t v588 = *MEMORY[0x263F08320];
        v589 = @"Unsynced keychain - cannot modify records";
        v243 = objc_msgSend_dictionaryWithObjects_forKeys_count_(NSDictionary, v237, (uint64_t)&v589, (uint64_t)&v588, 1, v239, v240, v241);
        v248 = objc_msgSend_errorWithDomain_code_userInfo_(v242, v244, @"BDSCloudKitClientError", 2006, (uint64_t)v243, v245, v246, v247);

        objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(v236, v249, (uint64_t)v248, 0, v250, v251, v252, v253);
      }
    }
    _Block_object_dispose(buf, 8);
  }
}

void sub_236108A34(_Unwind_Exception *a1)
{
}

void sub_236108A5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setBackOffInterval_(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8, 0.0);
  uint64_t v9 = *(NSObject **)(a1 + 40);
  dispatch_group_leave(v9);
}

uint64_t sub_236108A9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), a5, a6, a7, a8);
}

uint64_t sub_236108AAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), a5, a6, a7, a8);
}

void sub_236108ABC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = BDSCloudKitLog();
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_2361FB3B0();
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      uint64_t v72 = objc_msgSend_count(v5, v9, v10, v11, v12, v13, v14, v15);
      _os_log_impl(&dword_2360BC000, v8, OS_LOG_TYPE_INFO, "Successfully fetched %lu records that had assets on conflict", buf, 0xCu);
    }

    long long v68 = 0u;
    long long v69 = 0u;
    long long v66 = 0u;
    long long v67 = 0u;
    uint64_t v8 = objc_msgSend_allValues(v5, v16, v17, v18, v19, v20, v21, v22);
    uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v23, (uint64_t)&v66, (uint64_t)v70, 16, v24, v25, v26);
    if (v27)
    {
      uint64_t v35 = v27;
      uint64_t v36 = *(void *)v67;
      do
      {
        for (uint64_t i = 0; i != v35; ++i)
        {
          if (*(void *)v67 != v36) {
            objc_enumerationMutation(v8);
          }
          uint64_t v38 = *(void **)(*((void *)&v66 + 1) + 8 * i);
          uint64_t v39 = *(void **)(a1 + 32);
          uint64_t v40 = objc_msgSend_recordID(v38, v28, v29, v30, v31, v32, v33, v34);
          objc_msgSend_setObject_forKeyedSubscript_(v39, v41, (uint64_t)v38, (uint64_t)v40, v42, v43, v44, v45);
        }
        uint64_t v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v28, (uint64_t)&v66, (uint64_t)v70, 16, v32, v33, v34);
      }
      while (v35);
    }
  }

  uint64_t v47 = *(void **)(a1 + 40);
  uint64_t v46 = *(void *)(a1 + 48);
  unint64_t v55 = objc_msgSend_allValues(*(void **)(a1 + 32), v48, v49, v50, v51, v52, v53, v54);
  v63[0] = MEMORY[0x263EF8330];
  v63[1] = 3221225472;
  v63[2] = sub_236108D04;
  v63[3] = &unk_264CA20F0;
  id v56 = *(void **)(a1 + 56);
  v63[4] = *(void *)(a1 + 48);
  id v57 = v56;
  uint64_t v58 = *(void *)(a1 + 64);
  id v64 = v57;
  uint64_t v65 = v58;
  objc_msgSend_syncManager_resolveConflictsForRecords_completion_(v47, v59, v46, (uint64_t)v55, (uint64_t)v63, v60, v61, v62);
}

uint64_t sub_236108D04(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), a5, a6, a7, a8);
}

uint64_t sub_236108D14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), a5, a6, a7, a8);
}

uint64_t sub_236108D24(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(void *)(a1 + 40), *(void *)(a1 + 48), a5, a6, a7, a8);
}

void sub_236108D34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((objc_msgSend_serverPushPostponed(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8) & 1) == 0)
  {
    objc_msgSend_setServerPushPostponed_(*(void **)(a1 + 32), v9, 1, v10, v11, v12, v13, v14);
    uint64_t v15 = *(void **)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 40);
    uint64_t v24 = objc_msgSend_count(*(void **)(a1 + 48), v17, v18, v19, v20, v21, v22, v23);
    objc_msgSend__updateRetryParametersFromModifyRecordsOperationError_batchSize_(v15, v25, v16, v24, v26, v27, v28, v29);
    objc_msgSend_backOffInterval(*(void **)(a1 + 32), v30, v31, v32, v33, v34, v35, v36);
    dispatch_time_t v38 = dispatch_time(0, (uint64_t)(v37 * 1000000000.0));
    uint64_t v46 = objc_msgSend_syncQueue(*(void **)(a1 + 32), v39, v40, v41, v42, v43, v44, v45);
    v47[0] = MEMORY[0x263EF8330];
    v47[1] = 3221225472;
    v47[2] = sub_236108E44;
    v47[3] = &unk_264CA1598;
    objc_copyWeak(&v48, (id *)(a1 + 64));
    void v47[4] = *(void *)(a1 + 56);
    dispatch_after(v38, v46, v47);

    objc_destroyWeak(&v48);
  }
}

void sub_236108E44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v46 = WeakRetained;
    objc_msgSend_setServerPushPostponed_(WeakRetained, v3, 0, v4, v5, v6, v7, v8);
    uint64_t v16 = objc_msgSend_cloudKitController(*(void **)(a1 + 32), v9, v10, v11, v12, v13, v14, v15);
    uint64_t v24 = objc_msgSend_transactionManager(v16, v17, v18, v19, v20, v21, v22, v23);
    uint64_t v32 = objc_msgSend_delegate(*(void **)(a1 + 32), v25, v26, v27, v28, v29, v30, v31);
    uint64_t v40 = objc_msgSend_entityName(v32, v33, v34, v35, v36, v37, v38, v39);
    objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(v24, v41, (uint64_t)v40, *(void *)(a1 + 32), v42, v43, v44, v45);

    id WeakRetained = v46;
  }
}

uint64_t sub_236108F00(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_236108F10(uint64_t a1)
{
}

void sub_236108F18(uint64_t a1, void *a2)
{
  id v26 = a2;
  uint64_t v10 = objc_msgSend_zoneID(v26, v3, v4, v5, v6, v7, v8, v9);

  if (v10)
  {
    uint64_t v18 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v19 = objc_msgSend_zoneID(v26, v11, v12, v13, v14, v15, v16, v17);
    objc_msgSend_addObject_(v18, v20, (uint64_t)v19, v21, v22, v23, v24, v25);
  }
}

void sub_2361093A0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 128));
  _Unwind_Resume(a1);
}

void sub_2361093BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_setProcessingCloudData_(WeakRetained, v2, 0, v3, v4, v5, v6, v7);
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v15 = objc_msgSend_cloudKitController(*(void **)(a1 + 32), v8, v9, v10, v11, v12, v13, v14);
    uint64_t v23 = objc_msgSend_transactionManager(v15, v16, v17, v18, v19, v20, v21, v22);
    uint64_t v31 = objc_msgSend_delegate(*(void **)(a1 + 32), v24, v25, v26, v27, v28, v29, v30);
    uint64_t v39 = objc_msgSend_entityName(v31, v32, v33, v34, v35, v36, v37, v38);
    objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(v23, v40, (uint64_t)v39, *(void *)(a1 + 32), v41, v42, v43, v44);
  }
  uint64_t v45 = _Block_copy(*(const void **)(a1 + 40));
  id v46 = v45;
  if (v45) {
    (*((void (**)(void *))v45 + 2))(v45);
  }
}

id sub_2361095AC()
{
  CFUUIDRef v0 = objc_opt_new();
  objc_msgSend_setQualityOfService_(v0, v1, 17, v2, v3, v4, v5, v6);
  objc_msgSend_setDiscretionaryNetworkBehavior_(v0, v7, 0, v8, v9, v10, v11, v12);
  objc_msgSend_setAutomaticallyRetryNetworkFailures_(v0, v13, 0, v14, v15, v16, v17, v18);
  return v0;
}

void sub_236109924(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_configuration(BCCloudKitConfiguration, a2, a3, a4, a5, a6, a7, a8);
  id v31 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v8 = [BCCloudKitController alloc];
  uint64_t v15 = objc_msgSend_initWithConfiguration_(v8, v9, (uint64_t)v31, v10, v11, v12, v13, v14);
  uint64_t v16 = (void *)qword_26AD77638;
  qword_26AD77638 = v15;

  uint64_t v17 = [BCCloudKitTransactionManager alloc];
  uint64_t v24 = objc_msgSend_initWithCloudKitController_(v17, v18, qword_26AD77638, v19, v20, v21, v22, v23);
  objc_msgSend_setTransactionManager_((void *)qword_26AD77638, v25, (uint64_t)v24, v26, v27, v28, v29, v30);
}

void sub_236109A10()
{
  CFUUIDRef v0 = [BCCloudKitController alloc];
  uint64_t v8 = objc_msgSend_configuration(BCCloudKitSecureConfiguration, v1, v2, v3, v4, v5, v6, v7);
  uint64_t v15 = objc_msgSend_initWithConfiguration_(v0, v9, (uint64_t)v8, v10, v11, v12, v13, v14);
  uint64_t v16 = (void *)qword_268854B60;
  qword_268854B60 = v15;

  uint64_t v17 = [BCCloudKitTransactionManager alloc];
  id v30 = (id)objc_msgSend_initWithCloudKitController_(v17, v18, qword_268854B60, v19, v20, v21, v22, v23);
  objc_msgSend_setTransactionManager_((void *)qword_268854B60, v24, (uint64_t)v30, v25, v26, v27, v28, v29);
}

void sub_236109C5C(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - registerForSecureNotifications", buf, 2u);
  }

  uint64_t v3 = (void *)MEMORY[0x263EFD610];
  uint64_t v11 = objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v4, v5, v6, v7, v8, v9, v10);
  uint64_t v18 = objc_msgSend_containerWithIdentifier_(v3, v12, (uint64_t)v11, v13, v14, v15, v16, v17);

  uint64_t v26 = objc_msgSend_appBundleIdentifier(*(void **)(a1 + 32), v19, v20, v21, v22, v23, v24, v25);
  objc_msgSend_setSourceApplicationBundleIdentifier_(v18, v27, (uint64_t)v26, v28, v29, v30, v31, v32);

  if (v18)
  {
    v42[0] = MEMORY[0x263EF8330];
    v42[1] = 3221225472;
    v42[2] = sub_236109DB0;
    v42[3] = &unk_264CA2218;
    id v33 = *(id *)(a1 + 40);
    uint64_t v35 = *(void **)(a1 + 48);
    uint64_t v34 = *(void *)(a1 + 56);
    id v43 = v33;
    uint64_t v46 = v34;
    id v44 = v35;
    id v45 = v18;
    objc_msgSend_accountStatusWithCompletionHandler_(v45, v36, (uint64_t)v42, v37, v38, v39, v40, v41);
  }
}

void sub_236109DB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_236109E84;
  block[3] = &unk_264CA21F0;
  id v10 = v5;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v13 = a2;
  uint64_t v14 = v6;
  uint64_t v7 = *(NSObject **)(a1 + 32);
  id v11 = *(id *)(a1 + 40);
  id v12 = *(id *)(a1 + 48);
  id v8 = v5;
  dispatch_async(v7, block);
}

void sub_236109E84(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  switch(*(void *)(a1 + 56))
  {
    case 0:
      uint64_t v2 = BDSCloudKitLog();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        uint64_t v3 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v51 = v3;
        _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %@", buf, 0xCu);
      }

      id v11 = *(void **)(a1 + 32);
      if (v11)
      {
        id v12 = objc_msgSend_userInfo(v11, v4, v5, v6, v7, v8, v9, v10);
        uint64_t v19 = objc_msgSend_objectForKeyedSubscript_(v12, v13, *MEMORY[0x263EFD4A0], v14, v15, v16, v17, v18);

        if (v19)
        {
          objc_msgSend_doubleValue(v19, v20, v21, v22, v23, v24, v25, v26);
          dispatch_time_t v28 = dispatch_time(0, (uint64_t)(v27 * 1000000000.0));
          block[0] = MEMORY[0x263EF8330];
          block[1] = 3221225472;
          block[2] = sub_23610A1F8;
          block[3] = &unk_264CA15B8;
          void block[4] = *(void *)(a1 + 64);
          dispatch_after(v28, MEMORY[0x263EF83A0], block);
          goto LABEL_19;
        }
      }
      uint64_t v19 = BDSCloudKitLog();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      uint64_t v46 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v51 = v46;
      uint64_t v42 = "BCCloudKitController - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@";
      id v43 = v19;
      os_log_type_t v44 = OS_LOG_TYPE_INFO;
      uint32_t v45 = 12;
      goto LABEL_18;
    case 1:
      uint64_t v29 = BDSCloudKitLog();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl(&dword_2360BC000, v29, OS_LOG_TYPE_INFO, "BCCloudKitController - Account Available", buf, 2u);
      }

      uint64_t v30 = *(void **)(a1 + 40);
      uint64_t v38 = objc_msgSend_privateCloudDatabase(*(void **)(a1 + 48), v31, v32, v33, v34, v35, v36, v37);
      v47[0] = MEMORY[0x263EF8330];
      v47[1] = 3221225472;
      v47[2] = sub_23610A258;
      v47[3] = &unk_264CA1428;
      uint64_t v39 = *(void *)(a1 + 48);
      id v48 = *(id *)(a1 + 40);
      objc_msgSend_connectUserTo_container_updateSubscription_completion_subscriptionCompletion_(v30, v40, (uint64_t)v38, v39, 1, (uint64_t)&unk_26E971E90, (uint64_t)v47, v41);

      uint64_t v19 = v48;
      goto LABEL_19;
    case 2:
      uint64_t v19 = BDSCloudKitLog();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v42 = "BCCloudKitController - CKAccountStatusRestricted";
      goto LABEL_14;
    case 3:
      uint64_t v19 = BDSCloudKitLog();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v42 = "BCCloudKitController - CKAccountStatusNoAccount";
LABEL_14:
      id v43 = v19;
      os_log_type_t v44 = OS_LOG_TYPE_INFO;
      break;
    case 4:
      uint64_t v19 = BDSCloudKitLog();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v42 = "BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable";
      id v43 = v19;
      os_log_type_t v44 = OS_LOG_TYPE_DEFAULT;
      break;
    default:
      return;
  }
  uint32_t v45 = 2;
LABEL_18:
  _os_log_impl(&dword_2360BC000, v43, v44, v42, buf, v45);
LABEL_19:
}

uint64_t sub_23610A1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_registerForSecureNotifications, a3, a4, a5, a6, a7, a8);
}

void sub_23610A200(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  if (v3)
  {
    uint64_t v4 = BDSCloudKitLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_2361FB418();
    }
  }
}

uint64_t sub_23610A258(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserTo:container: subscription completed.", v11, 2u);
  }

  return objc_msgSend_detach(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
}

void sub_23610A798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_23610A7D4(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(result + 32) + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  return result;
}

void sub_23610A7E0(uint64_t a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = objc_msgSend_configuration(WeakRetained, v7, v8, v9, v10, v11, v12, v13);
      uint64_t v22 = objc_msgSend_containerIdentifier(v14, v15, v16, v17, v18, v19, v20, v21);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v37 = v22;
      _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedAttachment", buf, 0xCu);
    }
    uint64_t v30 = objc_msgSend_accessQueue(WeakRetained, v23, v24, v25, v26, v27, v28, v29);
    v33[0] = MEMORY[0x263EF8330];
    v33[1] = 3221225472;
    v33[2] = sub_23610A990;
    v33[3] = &unk_264CA0AD0;
    objc_copyWeak(&v35, v4);
    id v34 = v3;
    dispatch_async(v30, v33);

    objc_destroyWeak(&v35);
  }
  else
  {
    uint64_t v31 = _Block_copy(v3);
    uint64_t v32 = v31;
    if (v31) {
      (*((void (**)(void *))v31 + 2))(v31);
    }
  }
}

void sub_23610A990(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_p_updateAttachment(WeakRetained, v3, v4, v5, v6, v7, v8, v9);

  uint64_t v10 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v10)
  {
    uint64_t v11 = v10;
    v10[2]();
    uint64_t v10 = v11;
  }
}

void sub_23610A9FC(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = BDSCloudKitLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_2361FB484();
  }
}

void sub_23610AA50(uint64_t a1, void *a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v5 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = objc_msgSend_configuration(WeakRetained, v6, v7, v8, v9, v10, v11, v12);
      uint64_t v21 = objc_msgSend_containerIdentifier(v13, v14, v15, v16, v17, v18, v19, v20);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v36 = v21;
      _os_log_impl(&dword_2360BC000, v5, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment", buf, 0xCu);
    }
    uint64_t v29 = objc_msgSend_accessQueue(WeakRetained, v22, v23, v24, v25, v26, v27, v28);
    v32[0] = MEMORY[0x263EF8330];
    v32[1] = 3221225472;
    v32[2] = sub_23610ABF4;
    v32[3] = &unk_264CA17F0;
    id v33 = WeakRetained;
    id v34 = v3;
    dispatch_async(v29, v32);
  }
  else
  {
    uint64_t v30 = _Block_copy(v3);
    uint64_t v31 = v30;
    if (v30) {
      (*((void (**)(void *))v30 + 2))(v30);
    }
  }
}

void sub_23610ABF4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = sub_23610AC98;
  v9[3] = &unk_264CA11A8;
  id v10 = v2;
  id v11 = *(id *)(a1 + 40);
  objc_msgSend__updateAccountCacheWithCompletionBlock_(v10, v3, (uint64_t)v9, v4, v5, v6, v7, v8);
}

void sub_23610AC98(uint64_t a1, int a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v4 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = objc_msgSend_configuration(*(void **)(a1 + 32), v5, v6, v7, v8, v9, v10, v11);
    uint64_t v20 = objc_msgSend_containerIdentifier(v12, v13, v14, v15, v16, v17, v18, v19);
    int v29 = 138543618;
    uint64_t v30 = v20;
    __int16 v31 = 1024;
    int v32 = a2;
    _os_log_impl(&dword_2360BC000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment hasChanged:%{BOOL}d", (uint8_t *)&v29, 0x12u);
  }
  if (a2)
  {
    objc_msgSend_p_accountReallyChangedWithCompletion_(*(void **)(a1 + 32), v21, *(void *)(a1 + 40), v22, v23, v24, v25, v26);
  }
  else
  {
    uint64_t v27 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v28 = v27;
    if (v27) {
      (*((void (**)(void *))v27 + 2))(v27);
    }
  }
}

void sub_23610ADB4(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_2361FB4F0();
  }
}

uint64_t sub_23610AF88(uint64_t result, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(result + 32) + 11) = *(unsigned char *)(result + 40);
  uint64_t v8 = *(void *)(result + 32);
  int v9 = *(unsigned __int8 *)(result + 41);
  if (*(unsigned __int8 *)(v8 + 10) != v9)
  {
    uint64_t v10 = result;
    *(unsigned char *)(v8 + 10) = v9;
    objc_msgSend__reestablishSyncEngineSalt(*(void **)(result + 32), a2, a3, a4, a5, a6, a7, a8);
    uint64_t v18 = *(void **)(v10 + 32);
    return objc_msgSend_aq_requestUpdateAttachment(v18, v11, v12, v13, v14, v15, v16, v17);
  }
  return result;
}

uint64_t sub_23610B0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_aq_requestUpdateAttachmentWithCompletion_, *(void *)(a1 + 40), a4, a5, a6, a7, a8);
}

void sub_23610B2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23610B2F0(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v15 = objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11, v12, v13, v14);

  if (v15)
  {
    uint64_t v23 = objc_msgSend_accessQueue(WeakRetained, v16, v17, v18, v19, v20, v21, v22);
    v31[0] = MEMORY[0x263EF8330];
    v31[1] = 3221225472;
    v31[2] = sub_23610B40C;
    v31[3] = &unk_264CA22B8;
    objc_copyWeak(&v32, v6);
    char v33 = a2;
    char v34 = a3;
    dispatch_async(v23, v31);

    objc_destroyWeak(&v32);
  }
  else
  {
    BDSCloudKitLog();
    uint64_t v24 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR)) {
      sub_2361FB55C(a1, v24, v25, v26, v27, v28, v29, v30);
    }
  }
}

void sub_23610B40C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v2, *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41), v3, v4, v5, v6);
}

void sub_23610B864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23610B898(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v15 = objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11, v12, v13, v14);

  if (v15)
  {
    uint64_t v23 = objc_msgSend_accessQueue(WeakRetained, v16, v17, v18, v19, v20, v21, v22);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_23610B9C4;
    block[3] = &unk_264CA2330;
    objc_copyWeak(&v32, v6);
    void block[4] = *(void *)(a1 + 32);
    char v33 = a2;
    char v34 = a3;
    dispatch_async(v23, block);

    objc_destroyWeak(&v32);
  }
  else
  {
    BDSCloudKitLog();
    uint64_t v24 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR)) {
      sub_2361FB5FC(a1, v24, v25, v26, v27, v28, v29, v30);
    }
  }
}

void sub_23610B9C4(uint64_t a1)
{
  uint64_t v243 = *MEMORY[0x263EF8340];
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (objc_msgSend_gettingAccountInfo(WeakRetained, v4, v5, v6, v7, v8, v9, v10)) {
    goto LABEL_25;
  }
  uint64_t v11 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    uint64_t v19 = objc_msgSend_configuration(*(void **)(a1 + 32), v12, v13, v14, v15, v16, v17, v18);
    char v34 = objc_msgSend_containerIdentifier(v19, v20, v21, v22, v23, v24, v25, v26);
    if (*(unsigned char *)(a1 + 48)) {
      id v35 = @"YES";
    }
    else {
      id v35 = @"NO";
    }
    *(_DWORD *)long long buf = 138543874;
    uint64_t v238 = v34;
    __int16 v239 = 2114;
    uint64_t v240 = v35;
    __int16 v241 = 1024;
    int v242 = objc_msgSend_enableCloudSync(WeakRetained, v27, v28, v29, v30, v31, v32, v33);
    _os_log_impl(&dword_2360BC000, v11, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@ enableCloudSync:%{BOOL}d", buf, 0x1Cu);
  }
  if (!*(unsigned char *)(a1 + 48))
  {
    if (objc_msgSend_enableCloudSync(WeakRetained, v36, v37, v38, v39, v40, v41, v42))
    {
      uint64_t v169 = BDSCloudKitSyncLog();
      if (os_log_type_enabled(v169, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v177 = objc_msgSend_configuration(*(void **)(a1 + 32), v170, v171, v172, v173, v174, v175, v176);
        uint64_t v185 = objc_msgSend_containerIdentifier(v177, v178, v179, v180, v181, v182, v183, v184);
        *(_DWORD *)long long buf = 138543362;
        uint64_t v238 = v185;
        _os_log_impl(&dword_2360BC000, v169, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: getting account info", buf, 0xCu);
      }
      v235[0] = MEMORY[0x263EF8330];
      v235[1] = 3221225472;
      v235[2] = sub_23610BEC0;
      v235[3] = &unk_264CA2308;
      v235[4] = *(void *)(a1 + 32);
      objc_copyWeak(&v236, v2);
      objc_msgSend_p_getAccountInfoWithCompletion_(WeakRetained, v186, (uint64_t)v235, v187, v188, v189, v190, v191);
      objc_destroyWeak(&v236);
      goto LABEL_25;
    }
    if (!*(unsigned char *)(a1 + 48)) {
      goto LABEL_9;
    }
  }
  if (objc_msgSend_enableCloudSync(WeakRetained, v36, v37, v38, v39, v40, v41, v42))
  {
LABEL_9:
    id v43 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_INFO))
    {
      uint64_t v51 = objc_msgSend_configuration(*(void **)(a1 + 32), v44, v45, v46, v47, v48, v49, v50);
      uint64_t v59 = objc_msgSend_containerIdentifier(v51, v52, v53, v54, v55, v56, v57, v58);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v238 = v59;
      _os_log_impl(&dword_2360BC000, v43, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.", buf, 0xCu);
    }
    if (objc_msgSend_enableCloudSync(WeakRetained, v60, v61, v62, v63, v64, v65, v66))
    {
      uint64_t v74 = objc_msgSend_container(WeakRetained, v67, v68, v69, v70, v71, v72, v73);
      if (v74)
      {
        BOOL v75 = *(unsigned char *)(a1 + 48) == 0;

        if (!v75)
        {
          uint64_t v76 = BDSCloudKitSyncLog();
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v84 = objc_msgSend_configuration(*(void **)(a1 + 32), v77, v78, v79, v80, v81, v82, v83);
            uint64_t v92 = objc_msgSend_containerIdentifier(v84, v85, v86, v87, v88, v89, v90, v91);
            uint64_t v100 = objc_msgSend_configuration(*(void **)(a1 + 32), v93, v94, v95, v96, v97, v98, v99);
            objc_msgSend_dbSubscriptionID(v100, v101, v102, v103, v104, v105, v106, v107);
            uint64_t v108 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v238 = v92;
            __int16 v239 = 2114;
            uint64_t v240 = v108;
            _os_log_impl(&dword_2360BC000, v76, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@", buf, 0x16u);
          }
          uint64_t v116 = objc_msgSend_transactionManager(WeakRetained, v109, v110, v111, v112, v113, v114, v115);
          uint64_t v124 = objc_msgSend_configuration(*(void **)(a1 + 32), v117, v118, v119, v120, v121, v122, v123);
          uint64_t v132 = objc_msgSend_dbSubscriptionID(v124, v125, v126, v127, v128, v129, v130, v131);
          objc_msgSend_signalFetchChangesTransaction_(v116, v133, (uint64_t)v132, v134, v135, v136, v137, v138);

          uint64_t v146 = objc_msgSend_transactionManager(WeakRetained, v139, v140, v141, v142, v143, v144, v145);
          uint64_t v154 = objc_msgSend_configuration(*(void **)(a1 + 32), v147, v148, v149, v150, v151, v152, v153);
          uint64_t v162 = objc_msgSend_dbSubscriptionID(v154, v155, v156, v157, v158, v159, v160, v161);
          objc_msgSend_signalFetchChangesTransactionInService_(v146, v163, (uint64_t)v162, v164, v165, v166, v167, v168);
        }
      }
    }
    objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v67, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), v70, v71, v72, v73);
    goto LABEL_25;
  }
  uint64_t v192 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v192, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v200 = objc_msgSend_configuration(*(void **)(a1 + 32), v193, v194, v195, v196, v197, v198, v199);
    uint64_t v208 = objc_msgSend_containerIdentifier(v200, v201, v202, v203, v204, v205, v206, v207);
    *(_DWORD *)long long buf = 138543362;
    uint64_t v238 = v208;
    _os_log_impl(&dword_2360BC000, v192, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller", buf, 0xCu);
  }
  objc_msgSend_setContainer_(*(void **)(a1 + 32), v209, 0, v210, v211, v212, v213, v214);
  uint64_t v222 = objc_msgSend_privateCloudDatabaseController(WeakRetained, v215, v216, v217, v218, v219, v220, v221);
  objc_msgSend_detach(v222, v223, v224, v225, v226, v227, v228, v229);

  objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v230, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), v231, v232, v233, v234);
LABEL_25:
}

void sub_23610BEA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23610BEC0(uint64_t a1, int a2)
{
  if (a2)
  {
    BDSCloudKitSyncLog();
    uint64_t v3 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_DEBUG)) {
      sub_2361FB69C(a1, v3, v4, v5, v6, v7, v8, v9);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocks(WeakRetained, v10, v11, v12, v13, v14, v15, v16);
  }
}

void sub_23610C3A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (*(unsigned char *)(a1 + 48))
  {
    v15[0] = MEMORY[0x263EF8330];
    v15[1] = 3221225472;
    v15[2] = sub_23610C494;
    v15[3] = &unk_264CA2358;
    uint64_t v6 = *(void **)(a1 + 32);
    id v17 = *(id *)(a1 + 40);
    uint64_t v18 = a2;
    id v16 = v5;
    objc_msgSend_accountInfoWithCompletionHandler_(v6, v7, (uint64_t)v15, v8, v9, v10, v11, v12);
  }
  else
  {
    uint64_t v13 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v14 = v13;
    if (v13) {
      (*((void (**)(void *, uint64_t, id, void, void))v13 + 2))(v13, a2, v5, 0, 0);
    }
  }
}

void sub_23610C494(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  uint64_t v6 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(void *, void, void, id, id))v6 + 2))(v6, *(void *)(a1 + 48), *(void *)(a1 + 32), v8, v5);
  }
}

void sub_23610C80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23610C830(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v17 = objc_msgSend_accessQueue(WeakRetained, v10, v11, v12, v13, v14, v15, v16);

  if (v17)
  {
    uint64_t v25 = objc_msgSend_accessQueue(WeakRetained, v18, v19, v20, v21, v22, v23, v24);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_23610C96C;
    block[3] = &unk_264CA23D0;
    objc_copyWeak(v30, (id *)(a1 + 40));
    v30[1] = a2;
    id v27 = v7;
    id v28 = v8;
    id v29 = *(id *)(a1 + 32);
    dispatch_async(v25, block);

    objc_destroyWeak(v30);
  }
}

void sub_23610C96C(uint64_t a1)
{
  uint64_t v216 = *MEMORY[0x263EF8340];
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v11 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v12 = objc_msgSend_container(WeakRetained, v4, v5, v6, v7, v8, v9, v10);

    if (v12)
    {
      uint64_t v20 = objc_msgSend_privateCloudDatabaseController(v11, v13, v14, v15, v16, v17, v18, v19);
      uint64_t v28 = objc_msgSend_serviceMode(v11, v21, v22, v23, v24, v25, v26, v27);
      uint64_t v36 = objc_msgSend_configuration(v11, v29, v30, v31, v32, v33, v34, v35);
      os_log_type_t v44 = v36;
      if (v28) {
        objc_msgSend_serviceZones(v36, v37, v38, v39, v40, v41, v42, v43);
      }
      else {
      uint64_t v45 = objc_msgSend_appZones(v36, v37, v38, v39, v40, v41, v42, v43);
      }

      objc_msgSend_setCurrentStatus_(v11, v46, *(void *)(a1 + 64), v47, v48, v49, v50, v51);
      uint64_t v52 = BDSCloudKitSyncLog();
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG)) {
        sub_2361FB7C0((uint64_t *)(a1 + 64), v52);
      }

      switch(*(void *)(a1 + 64))
      {
        case 0:
          uint64_t v53 = BDSCloudKitLog();
          if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v54 = *(void **)(a1 + 32);
            *(_DWORD *)long long buf = 138543362;
            uint64_t v215 = v54;
            _os_log_impl(&dword_2360BC000, v53, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@", buf, 0xCu);
          }

          objc_msgSend_detach(v20, v55, v56, v57, v58, v59, v60, v61);
          objc_msgSend_setGettingAccountInfo_(v11, v62, 0, v63, v64, v65, v66, v67);
          uint64_t v77 = *(void **)(a1 + 32);
          uint64_t v76 = (uint64_t *)(a1 + 32);
          BOOL v75 = v77;
          if (v77
            && (objc_msgSend_userInfo(v75, v68, v69, v70, v71, v72, v73, v74),
                uint64_t v78 = objc_claimAutoreleasedReturnValue(),
                objc_msgSend_objectForKeyedSubscript_(v78, v79, *MEMORY[0x263EFD4A0], v80, v81, v82, v83, v84),
                uint64_t v85 = objc_claimAutoreleasedReturnValue(),
                v78,
                v85))
          {
            objc_msgSend_doubleValue(v85, v86, v87, v88, v89, v90, v91, v92);
            dispatch_time_t v94 = dispatch_time(0, (uint64_t)(v93 * 1000000000.0));
            uint64_t v102 = objc_msgSend_accessQueue(v11, v95, v96, v97, v98, v99, v100, v101);
            block[0] = MEMORY[0x263EF8330];
            block[1] = 3221225472;
            block[2] = sub_23610CF84;
            block[3] = &unk_264CA0B70;
            objc_copyWeak(&v213, v2);
            dispatch_after(v94, v102, block);

            objc_destroyWeak(&v213);
          }
          else
          {
            uint64_t v185 = BDSCloudKitLog();
            if (os_log_type_enabled(v185, OS_LOG_TYPE_ERROR)) {
              sub_2361FB74C(v76, v185, v186);
            }
          }
          goto LABEL_30;
        case 1:
          uint64_t v103 = BDSCloudKitLog();
          if (os_log_type_enabled(v103, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v111 = objc_msgSend_configuration(v11, v104, v105, v106, v107, v108, v109, v110);
            uint64_t v119 = objc_msgSend_containerIdentifier(v111, v112, v113, v114, v115, v116, v117, v118);
            *(_DWORD *)long long buf = 138543362;
            uint64_t v215 = v119;
            _os_log_impl(&dword_2360BC000, v103, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - Account Available for %{public}@", buf, 0xCu);
          }
          uint64_t v127 = objc_msgSend_configuration(v11, v120, v121, v122, v123, v124, v125, v126);
          if (objc_msgSend_requiresDeviceToDeviceEncryption(v127, v128, v129, v130, v131, v132, v133, v134))
          {
            char v142 = objc_msgSend_supportsDeviceToDeviceEncryption(*(void **)(a1 + 40), v135, v136, v137, v138, v139, v140, v141);

            if ((v142 & 1) == 0)
            {
              uint64_t v150 = BDSCloudKitLog();
              if (os_log_type_enabled(v150, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v158 = objc_msgSend_configuration(v11, v151, v152, v153, v154, v155, v156, v157);
                uint64_t v166 = objc_msgSend_containerIdentifier(v158, v159, v160, v161, v162, v163, v164, v165);
                *(_DWORD *)long long buf = 138543362;
                uint64_t v215 = v166;
                _os_log_impl(&dword_2360BC000, v150, OS_LOG_TYPE_DEFAULT, "Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.", buf, 0xCu);
              }
              goto LABEL_29;
            }
          }
          else
          {
          }
          uint64_t v187 = objc_msgSend_configuration(v11, v143, v144, v145, v146, v147, v148, v149);
          uint64_t shouldPerformDatabaseSubscriptionForServiceMode = objc_msgSend_shouldPerformDatabaseSubscriptionForServiceMode_(v187, v188, v28, v189, v190, v191, v192, v193);

          uint64_t v202 = objc_msgSend_privateCloudDatabase(*(void **)(a1 + 48), v195, v196, v197, v198, v199, v200, v201);
          uint64_t v203 = *(void *)(a1 + 48);
          v208[0] = MEMORY[0x263EF8330];
          v208[1] = 3221225472;
          v208[2] = sub_23610CFC4;
          v208[3] = &unk_264CA23A8;
          id v209 = v20;
          id v210 = v45;
          id v211 = v11;
          v206[0] = MEMORY[0x263EF8330];
          v206[1] = 3221225472;
          v206[2] = sub_23610D0C4;
          v206[3] = &unk_264CA1428;
          id v207 = v211;
          objc_msgSend_connectUserTo_container_updateSubscription_completion_subscriptionCompletion_(v209, v204, (uint64_t)v202, v203, shouldPerformDatabaseSubscriptionForServiceMode, (uint64_t)v208, (uint64_t)v206, v205);

          goto LABEL_30;
        case 2:
          uint64_t v174 = BDSCloudKitLog();
          if (!os_log_type_enabled(v174, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          uint64_t v175 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          uint64_t v215 = v175;
          uint64_t v176 = "Account Restricted.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 3:
          uint64_t v174 = BDSCloudKitLog();
          if (!os_log_type_enabled(v174, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          uint64_t v177 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          uint64_t v215 = v177;
          uint64_t v176 = "Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 4:
          uint64_t v174 = BDSCloudKitLog();
          if (!os_log_type_enabled(v174, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          uint64_t v178 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          uint64_t v215 = v178;
          uint64_t v176 = "Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@";
          break;
        default:
          goto LABEL_30;
      }
      _os_log_impl(&dword_2360BC000, v174, OS_LOG_TYPE_DEFAULT, v176, buf, 0xCu);
LABEL_28:

LABEL_29:
      objc_msgSend_detach(v20, v167, v168, v169, v170, v171, v172, v173);
      objc_msgSend_setGettingAccountInfo_(v11, v179, 0, v180, v181, v182, v183, v184);
LABEL_30:
    }
  }
}

void sub_23610CF84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_getAccountInfo(WeakRetained, v1, v2, v3, v4, v5, v6, v7);
}

void sub_23610CFC4(uint64_t a1, int a2, void *a3)
{
  id v11 = a3;
  if (a2)
  {
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 40);
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    void v20[2] = sub_23610D0B8;
    v20[3] = &unk_264CA1428;
    id v21 = *(id *)(a1 + 48);
    objc_msgSend_attachToZones_completion_(v12, v14, v13, (uint64_t)v20, v15, v16, v17, v18);

    if (!v11) {
      goto LABEL_8;
    }
  }
  else
  {
    objc_msgSend_setGettingAccountInfo_(*(void **)(a1 + 48), v5, 0, v6, v7, v8, v9, v10);
    if (!v11) {
      goto LABEL_8;
    }
  }
  uint64_t v19 = BDSCloudKitLog();
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
    sub_2361FB83C();
  }

LABEL_8:
}

uint64_t sub_23610D0B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return objc_msgSend_setGettingAccountInfo_(*(void **)(a1 + 32), a2, 0, a4, a5, a6, a7, a8);
}

void sub_23610D0C4(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = objc_msgSend_configuration(*(void **)(a1 + 32), v3, v4, v5, v6, v7, v8, v9);
    uint64_t v18 = objc_msgSend_containerIdentifier(v10, v11, v12, v13, v14, v15, v16, v17);
    int v19 = 138543362;
    uint64_t v20 = v18;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserToContainer subscription completed for %{public}@", (uint8_t *)&v19, 0xCu);
  }
}

uint64_t sub_23610D224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F9A6D0](*(void *)(a1 + 32), sel_aq_flushPendingGetAccountInfoCompletionBlocksWithWillRetryUpdateAttachment_, 0, a4, a5, a6, a7, a8);
}

uint64_t sub_23610D5E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = objc_msgSend_enableCloudSync(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  if (result)
  {
    objc_msgSend__reestablishSyncEngineSaltIfNeeded(*(void **)(a1 + 32), v10, v11, v12, v13, v14, v15, v16);
    uint64_t v24 = *(void **)(a1 + 32);
    return objc_msgSend_aq_requestUpdateAttachment(v24, v17, v18, v19, v20, v21, v22, v23);
  }
  return result;
}

void sub_23610D934(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_23610D95C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v12 = WeakRetained;
  if (a2)
  {
    uint64_t v13 = objc_msgSend_transactionManager(WeakRetained, v5, v6, v7, v8, v9, v10, v11);
    objc_msgSend_signalFetchChangesTransaction_(v13, v14, *(void *)(a1 + 32), v15, v16, v17, v18, v19);
  }
  else
  {
    uint64_t v20 = objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8, v9, v10, v11);
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = sub_23610DA38;
    v21[3] = &unk_264CA1450;
    void v21[4] = v12;
    id v22 = *(id *)(a1 + 40);
    dispatch_async(v20, v21);
  }
}

void sub_23610DA38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v9 = (void **)(a1 + 32);
  int v10 = objc_msgSend_enableCloudSync(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v11 = BDSCloudKitSyncLog();
  uint64_t v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = objc_msgSend_configuration(*(void **)(a1 + 32), v13, v14, v15, v16, v17, v18, v19);
      uint64_t v28 = objc_msgSend_containerIdentifier(v20, v21, v22, v23, v24, v25, v26, v27);
      uint64_t v29 = *(void *)(a1 + 40);
      int v42 = 138543618;
      uint64_t v43 = v28;
      __int16 v44 = 2114;
      uint64_t v45 = v29;
      _os_log_impl(&dword_2360BC000, v12, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Asked to fetch changes for %{public}@ while detached - attempt attachment.", (uint8_t *)&v42, 0x16u);
    }
    objc_msgSend_aq_requestUpdateAttachment(*v9, v30, v31, v32, v33, v34, v35, v36);
  }
  else
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_2361FB8A8(v9, (const char *)a1, v12, v37, v38, v39, v40, v41);
    }
  }
}

void sub_23610DB64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend_enableCloudSync(WeakRetained, v1, v2, v3, v4, v5, v6, v7)) {
    objc_msgSend__reestablishSyncEngineSaltIfNeeded(WeakRetained, v8, v9, v10, v11, v12, v13, v14);
  }
}

void sub_23610DD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
}

void sub_23610DDB4(uint64_t a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v11 = objc_msgSend_container(WeakRetained, v4, v5, v6, v7, v8, v9, v10);

  BOOL v12 = v11 == 0;
  uint64_t v13 = BDSCloudKitSyncLog();
  uint64_t v14 = v13;
  if (v12)
  {
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
      sub_2361FBA1C(v14);
    }

    uint64_t v45 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v46 = v45;
    if (v45) {
      (*((void (**)(void *, uint64_t))v45 + 2))(v45, 1);
    }
  }
  else
  {
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v22 = objc_msgSend_currentUserIDName(*(void **)(a1 + 32), v15, v16, v17, v18, v19, v20, v21);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v52 = v22;
      __int16 v53 = 2048;
      uint64_t v54 = objc_msgSend_currentStatus(WeakRetained, v23, v24, v25, v26, v27, v28, v29);
      _os_log_impl(&dword_2360BC000, v14, OS_LOG_TYPE_DEFAULT, "_updateAccountCacheWithTimeout fetchUserRecordIDWithCompletionHandler currentUserIDName:%@ status:%ld ", buf, 0x16u);
    }
    uint64_t v37 = objc_msgSend_container(WeakRetained, v30, v31, v32, v33, v34, v35, v36);
    v48[0] = MEMORY[0x263EF8330];
    v48[1] = 3221225472;
    v48[2] = sub_23610DFC4;
    v48[3] = &unk_264CA24C0;
    objc_copyWeak(&v50, v2);
    v48[4] = *(void *)(a1 + 32);
    long long v47 = *(_OWORD *)(a1 + 40);
    id v38 = (id)v47;
    long long v49 = v47;
    objc_msgSend_fetchUserRecordIDWithCompletionHandler_(v37, v39, (uint64_t)v48, v40, v41, v42, v43, v44);

    objc_destroyWeak(&v50);
  }
}

void sub_23610DFA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23610DFC4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v15 = objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11, v12, v13, v14);

  if (v15)
  {
    uint64_t v23 = objc_msgSend_accessQueue(WeakRetained, v16, v17, v18, v19, v20, v21, v22);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_23610E164;
    block[3] = &unk_264CA2498;
    id v30 = v5;
    id v24 = WeakRetained;
    uint64_t v25 = *(void *)(a1 + 32);
    id v31 = v24;
    uint64_t v32 = v25;
    uint64_t v35 = *(void *)(a1 + 48);
    id v33 = v6;
    objc_copyWeak(&v36, (id *)(a1 + 56));
    id v34 = *(id *)(a1 + 40);
    dispatch_async(v23, block);

    objc_destroyWeak(&v36);
    uint64_t v26 = v30;
  }
  else
  {
    uint64_t v27 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_2361FBA60(v27);
    }

    uint64_t v28 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v26 = v28;
    if (v28) {
      (*((void (**)(void *, void))v28 + 2))(v28, 0);
    }
  }
}

void sub_23610E164(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v178 = *MEMORY[0x263EF8340];
  uint64_t v9 = objc_msgSend_recordName(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v17 = objc_msgSend_currentUserIDName(*(void **)(a1 + 40), v10, v11, v12, v13, v14, v15, v16);
  char isEqualToString = objc_msgSend_isEqualToString_(v9, v18, (uint64_t)v17, v19, v20, v21, v22, v23);

  if ((isEqualToString & 1) == 0)
  {
    uint64_t v76 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v84 = objc_msgSend_configuration(*(void **)(a1 + 48), v77, v78, v79, v80, v81, v82, v83);
      uint64_t v92 = objc_msgSend_containerIdentifier(v84, v85, v86, v87, v88, v89, v90, v91);
      uint64_t v100 = objc_msgSend_currentUserIDName(*(void **)(a1 + 48), v93, v94, v95, v96, v97, v98, v99);
      uint64_t v108 = objc_msgSend_recordName(*(void **)(a1 + 32), v101, v102, v103, v104, v105, v106, v107);
      *(_DWORD *)long long buf = 138543874;
      uint64_t v173 = v92;
      __int16 v174 = 2112;
      uint64_t v175 = v100;
      __int16 v176 = 2112;
      uint64_t v177 = v108;
      _os_log_impl(&dword_2360BC000, v76, OS_LOG_TYPE_DEFAULT, "(%{public}@) currentUserIDName from:%@ to:%@ has changed! ", buf, 0x20u);
    }
    uint64_t v116 = objc_msgSend_recordName(*(void **)(a1 + 32), v109, v110, v111, v112, v113, v114, v115);
    objc_msgSend_setCurrentUserIDName_(*(void **)(a1 + 40), v117, (uint64_t)v116, v118, v119, v120, v121, v122);

    goto LABEL_13;
  }
  uint64_t v32 = objc_msgSend_domain(*(void **)(a1 + 56), v25, v26, v27, v28, v29, v30, v31);
  int v39 = objc_msgSend_isEqualToString_(v32, v33, *MEMORY[0x263EFD498], v34, v35, v36, v37, v38);

  if (!v39) {
    goto LABEL_14;
  }
  if (objc_msgSend_code(*(void **)(a1 + 56), v40, v41, v42, v43, v44, v45, v46) != 9)
  {
    uint64_t v123 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v123, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v131 = objc_msgSend_configuration(*(void **)(a1 + 48), v124, v125, v126, v127, v128, v129, v130);
      uint64_t v139 = objc_msgSend_containerIdentifier(v131, v132, v133, v134, v135, v136, v137, v138);
      uint64_t v147 = objc_msgSend_currentUserIDName(*(void **)(a1 + 48), v140, v141, v142, v143, v144, v145, v146);
      *(_DWORD *)long long buf = 138543618;
      uint64_t v173 = v139;
      __int16 v174 = 2112;
      uint64_t v175 = v147;
      _os_log_impl(&dword_2360BC000, v123, OS_LOG_TYPE_DEFAULT, "(%{public}@) Unknown error while fetching account. Assuming we had a change with currentUserIDName:%@ ", buf, 0x16u);
    }
LABEL_13:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
    goto LABEL_14;
  }
  objc_msgSend_setCurrentUserIDName_(*(void **)(a1 + 40), v47, 0, v48, v49, v50, v51, v52);
  objc_msgSend_setCurrentStatus_(*(void **)(a1 + 40), v53, 0, v54, v55, v56, v57, v58);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
  uint64_t v59 = BDSCloudKitSyncLog();
  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v67 = objc_msgSend_configuration(*(void **)(a1 + 48), v60, v61, v62, v63, v64, v65, v66);
    BOOL v75 = objc_msgSend_containerIdentifier(v67, v68, v69, v70, v71, v72, v73, v74);
    *(_DWORD *)long long buf = 138543362;
    uint64_t v173 = v75;
    _os_log_impl(&dword_2360BC000, v59, OS_LOG_TYPE_DEFAULT, "(%{public}@) CKErrorNotAuthenticated  resetting current account values ", buf, 0xCu);
  }
LABEL_14:
  uint64_t v148 = a1 + 72;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    uint64_t v149 = BDSCloudKitSyncLog();
    if (os_log_type_enabled(v149, OS_LOG_TYPE_DEBUG)) {
      sub_2361FBAA4(a1, (const char *)(a1 + 72), v149, v150, v151, v152, v153, v154);
    }

    uint64_t v155 = _Block_copy(*(const void **)(a1 + 64));
    uint64_t v156 = v155;
    if (v155) {
      (*((void (**)(void *, void))v155 + 2))(v155, *(unsigned __int8 *)(*(void *)(*(void *)v148 + 8) + 24));
    }
  }
  else
  {
    uint64_t v157 = objc_msgSend_container(*(void **)(a1 + 40), v40, v41, v42, v43, v44, v45, v46);
    v168[0] = MEMORY[0x263EF8330];
    v168[1] = 3221225472;
    v168[2] = sub_23610E5BC;
    v168[3] = &unk_264CA2470;
    objc_copyWeak(&v171, (id *)(a1 + 80));
    int8x16_t v166 = *(int8x16_t *)(a1 + 40);
    id v158 = (id)v166.i64[0];
    int8x16_t v169 = vextq_s8(v166, v166, 8uLL);
    long long v167 = *(_OWORD *)(a1 + 64);
    id v159 = (id)v167;
    long long v170 = v167;
    objc_msgSend_accountStatusWithCompletionHandler_(v157, v160, (uint64_t)v168, v161, v162, v163, v164, v165);

    objc_destroyWeak(&v171);
  }
}

void sub_23610E5A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23610E5BC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v12 = objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8, v9, v10, v11);

  if (v12)
  {
    uint64_t v20 = objc_msgSend_accessQueue(WeakRetained, v13, v14, v15, v16, v17, v18, v19);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_23610E6F4;
    block[3] = &unk_264CA2448;
    uint64_t v33 = a2;
    id v21 = WeakRetained;
    uint64_t v22 = *(void *)(a1 + 32);
    uint64_t v23 = *(void **)(a1 + 40);
    id v29 = v21;
    uint64_t v30 = v22;
    id v31 = v23;
    long long v27 = *(_OWORD *)(a1 + 48);
    id v24 = (id)v27;
    long long v32 = v27;
    dispatch_async(v20, block);
  }
  else
  {
    uint64_t v25 = _Block_copy(*(const void **)(a1 + 48));
    uint64_t v26 = v25;
    if (v25) {
      (*((void (**)(void *, void))v25 + 2))(v25, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24));
    }
  }
}

void sub_23610E6F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (const char *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = objc_msgSend_currentStatus(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  uint64_t v12 = BDSCloudKitSyncLog();
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG);
  if (v10 == v11)
  {
    if (v13) {
      sub_2361FBB74(a1, (const char *)v12, v14, v15, v16, v17, v18, v19);
    }
  }
  else
  {
    if (v13) {
      sub_2361FBC30(a1, v9, v12, v15, v16, v17, v18, v19);
    }

    objc_msgSend_setCurrentStatus_(*(void **)(a1 + 32), v20, *(void *)(a1 + 72), v21, v22, v23, v24, v25);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  }
  uint64_t v26 = _Block_copy(*(const void **)(a1 + 56));
  long long v27 = v26;
  if (v26) {
    (*((void (**)(void *, void))v26 + 2))(v26, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8) + 24));
  }
}

void sub_23610EBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23610EC00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = objc_msgSend_accessQueue(WeakRetained, v3, v4, v5, v6, v7, v8, v9);

  if (v10)
  {
    uint64_t v18 = objc_msgSend_accessQueue(WeakRetained, v11, v12, v13, v14, v15, v16, v17);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = sub_23610ED14;
    block[3] = &unk_264CA1428;
    uint64_t v23 = WeakRetained;
    dispatch_async(v18, block);

    uint64_t v19 = v23;
  }
  else
  {
    uint64_t v19 = BDSCloudKitLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_2361FBF94(v19);
    }
  }

  uint64_t v20 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v21 = v20;
  if (v20) {
    (*((void (**)(void *))v20 + 2))(v20);
  }
}

uint64_t sub_23610ED14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setContainer_(*(void **)(a1 + 32), a2, 0, a4, a5, a6, a7, a8);
  objc_msgSend_aq_setGettingAccountInfo_willRetryUpdateAttachment_(*(void **)(a1 + 32), v9, 0, 1, v10, v11, v12, v13);
  uint64_t v21 = *(void **)(a1 + 32);
  return objc_msgSend_aq_requestUpdateAttachment(v21, v14, v15, v16, v17, v18, v19, v20);
}

void sub_23610EF0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23610EF38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = objc_msgSend_accessQueue(WeakRetained, v3, v4, v5, v6, v7, v8, v9);

  if (v10)
  {
    uint64_t v18 = objc_msgSend_accessQueue(WeakRetained, v11, v12, v13, v14, v15, v16, v17);
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = sub_23610F004;
    v21[3] = &unk_264CA1450;
    id v19 = WeakRetained;
    uint64_t v20 = *(void *)(a1 + 32);
    id v22 = v19;
    uint64_t v23 = v20;
    dispatch_async(v18, v21);
  }
}

uint64_t sub_23610F004(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_msgSend_setContainer_(*(void **)(a1 + 32), a2, 0, a4, a5, a6, a7, a8);
  objc_msgSend_aq_setGettingAccountInfo_willRetryUpdateAttachment_(*(void **)(a1 + 32), v9, 0, 1, v10, v11, v12, v13);
  objc_msgSend__reestablishSyncEngineSalt(*(void **)(a1 + 40), v14, v15, v16, v17, v18, v19, v20);
  uint64_t v28 = *(void **)(a1 + 32);
  return objc_msgSend_aq_requestUpdateAttachment(v28, v21, v22, v23, v24, v25, v26, v27);
}

void sub_23610F284(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

id sub_236110708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t, void, void))(a3 + 16))(a3, a2, *(void *)(a1 + 32), 0);
}

void sub_236111834(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

BOOL BCAnnotationsProtoBookReadFrom(char *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  uint64_t v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_24;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
        goto LABEL_24;
      case 3u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
LABEL_24:
        uint64_t v19 = *(BCProtoAnnotation **)&a1[v18];
        *(void *)&a1[v18] = v17;
        goto LABEL_28;
      case 4u:
        uint64_t v19 = objc_alloc_init(BCProtoAnnotation);
        objc_msgSend_addAnnotation_(a1, v20, (uint64_t)v19, v21, v22, v23, v24, v25);
        if PBReaderPlaceMark() && (BCProtoAnnotationReadFrom((uint64_t)v19, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

id sub_236114614(void *a1, uint64_t a2, void *a3)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  id v4 = a3;
  id v5 = objc_alloc(MEMORY[0x263EFF9A0]);
  uint64_t v13 = objc_msgSend_count(v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v20 = objc_msgSend_initWithCapacity_(v5, v14, v13, v15, v16, v17, v18, v19);
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  id v21 = v4;
  uint64_t v26 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v22, (uint64_t)&v52, (uint64_t)v56, 16, v23, v24, v25);
  if (v26)
  {
    uint64_t v33 = v26;
    uint64_t v34 = *(void *)v53;
    do
    {
      for (uint64_t i = 0; i != v33; ++i)
      {
        if (*(void *)v53 != v34) {
          objc_enumerationMutation(v21);
        }
        uint64_t v36 = *(void *)(*((void *)&v52 + 1) + 8 * i);
        uint64_t v37 = objc_msgSend_objectForKeyedSubscript_(a1, v27, v36, v28, v29, v30, v31, v32, (void)v52);
        objc_msgSend_setObject_forKeyedSubscript_(v20, v38, (uint64_t)v37, v36, v39, v40, v41, v42);
      }
      uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v21, v27, (uint64_t)&v52, (uint64_t)v56, 16, v30, v31, v32);
    }
    while (v33);
  }

  uint64_t v50 = objc_msgSend_copy(v20, v43, v44, v45, v46, v47, v48, v49);
  return v50;
}

id BookDataStoreBundle()
{
  if (qword_268854B78 != -1) {
    dispatch_once(&qword_268854B78, &unk_26E971F50);
  }
  CFUUIDRef v0 = (void *)qword_268854B70;
  return v0;
}

uint64_t sub_2361147E0()
{
  CFUUIDRef v0 = (void *)MEMORY[0x263F086E0];
  uint64_t v1 = objc_opt_class();
  qword_268854B70 = objc_msgSend_bundleForClass_(v0, v2, v1, v3, v4, v5, v6, v7);
  return MEMORY[0x270F9A758]();
}

uint64_t BookDataStoreCFBundle()
{
  if (qword_268854B88 != -1) {
    dispatch_once(&qword_268854B88, &unk_26E971F70);
  }
  return qword_268854B80;
}

void sub_236114880()
{
  BookDataStoreBundle();
  id v16 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = objc_msgSend_bundleURL(v16, v0, v1, v2, v3, v4, v5, v6);

  if (v7)
  {
    objc_msgSend_bundleURL(v16, v8, v9, v10, v11, v12, v13, v14);
    CFURLRef v15 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
    qword_268854B80 = (uint64_t)CFBundleCreate(0, v15);
  }
}

id sub_236114900(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)MEMORY[0x263EFFA08];
  id v7 = a4;
  uint64_t v8 = objc_opt_class();
  CFURLRef v15 = objc_msgSend_setWithObjects_(v6, v9, v8, v10, v11, v12, v13, v14, a3, 0);
  id v21 = objc_msgSend_decodeObjectOfClasses_forKey_(a1, v16, (uint64_t)v15, (uint64_t)v7, v17, v18, v19, v20);

  objc_opt_class();
  uint64_t v22 = BUDynamicCast();

  return v22;
}

void sub_236114F44(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v10[5] = *MEMORY[0x263EF8340];
  v10[0] = @"BKLibrary.ReadingNow";
  v10[1] = @"BKAudioBookSkipForward";
  v10[2] = @"BKAudioBookSkipBackward";
  v10[3] = @"BCOverrideRecentBookAlgorithm";
  v10[4] = @"BCTimeThresholdPromotionOverride";
  uint64_t v8 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], a2, (uint64_t)v10, 5, a5, a6, a7, a8);
  uint64_t v9 = (void *)qword_26AD77670;
  qword_26AD77670 = v8;
}

void sub_23611B02C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = objc_msgSend_processInfo(MEMORY[0x263F08AB0], a2, a3, a4, a5, a6, a7, a8);
  objc_msgSend_environment(v8, v9, v10, v11, v12, v13, v14, v15);
  id v23 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v22 = objc_msgSend_objectForKeyedSubscript_(v23, v16, @"XCTestConfigurationFilePath", v17, v18, v19, v20, v21);
  byte_26AD760F0 = v22 != 0;
}

void sub_23611B140()
{
  CFUUIDRef v0 = NSTemporaryDirectory();
  objc_msgSend_stringByAppendingPathComponent_(v0, v1, @"BDSUnitTest", v2, v3, v4, v5, v6);
  id v28 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v14 = objc_msgSend_defaultManager(MEMORY[0x263F08850], v7, v8, v9, v10, v11, v12, v13);
  objc_msgSend_removeItemAtPath_error_(v14, v15, (uint64_t)v28, 0, v16, v17, v18, v19);

  uint64_t v26 = objc_msgSend_fileURLWithPath_(NSURL, v20, (uint64_t)v28, v21, v22, v23, v24, v25);
  uint64_t v27 = (void *)qword_268854BA0;
  qword_268854BA0 = v26;
}

BOOL sub_23611BA64(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, void *a5, objc_class *a6, void *a7, void *a8, void *a9)
{
  id v15 = a5;
  id v197 = a7;
  uint64_t v202 = objc_msgSend_changes(a1, v16, v17, v18, v19, v20, v21, v22);
  unint64_t v30 = objc_msgSend_count(v202, v23, v24, v25, v26, v27, v28, v29);
  objc_msgSend_array(MEMORY[0x263EFF980], v31, v32, v33, v34, v35, v36, v37);
  id v198 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_array(MEMORY[0x263EFF980], v38, v39, v40, v41, v42, v43, v44);
  id v196 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v200 = NSStringFromClass(a6);
  unint64_t v201 = v30;
  unint64_t v45 = *a3;
  uint64_t v195 = a8;
  if (*a3 < v30 && a4 >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v199 = a4;
    uint64_t v194 = a3;
    do
    {
      uint64_t v47 = (void *)MEMORY[0x237DFE9C0]();
      long long v54 = objc_msgSend_objectAtIndexedSubscript_(v202, v48, v45, v49, v50, v51, v52, v53);
      if (objc_msgSend_changeType(v54, v55, v56, v57, v58, v59, v60, v61)
        && objc_msgSend_changeType(v54, v62, v63, v64, v65, v66, v67, v68) != 1)
      {
        if (objc_msgSend_changeType(v54, v62, v63, v64, v65, v66, v67, v68) != 2) {
          goto LABEL_22;
        }
        uint64_t v147 = objc_msgSend_changedObjectID(v54, v140, v141, v142, v143, v144, v145, v146);
        uint64_t v155 = objc_msgSend_entity(v147, v148, v149, v150, v151, v152, v153, v154);
        uint64_t v163 = objc_msgSend_name(v155, v156, v157, v158, v159, v160, v161, v162);
        int isEqualToString = objc_msgSend_isEqualToString_(v163, v164, (uint64_t)v200, v165, v166, v167, v168, v169);

        if (!isEqualToString)
        {
          a4 = v199;
          goto LABEL_22;
        }
        uint64_t v69 = objc_msgSend_tombstone(v54, v171, v172, v173, v174, v175, v176, v177);
        if (v69)
        {
          objc_msgSend_addObject_(v198, v178, (uint64_t)v69, v179, v180, v181, v182, v183);
          ++v46;
        }
      }
      else
      {
        uint64_t v69 = objc_msgSend_changedObjectID(v54, v62, v63, v64, v65, v66, v67, v68);
        uint64_t v77 = objc_msgSend_entity(v69, v70, v71, v72, v73, v74, v75, v76);
        uint64_t v85 = objc_msgSend_name(v77, v78, v79, v80, v81, v82, v83, v84);
        int v92 = objc_msgSend_isEqualToString_(v85, v86, (uint64_t)v200, v87, v88, v89, v90, v91);

        if (!v92)
        {

          a4 = v199;
          goto LABEL_23;
        }
        uint64_t v98 = objc_msgSend_existingObjectWithID_error_(v15, v93, (uint64_t)v69, 0, v94, v95, v96, v97);
        if ((objc_opt_isKindOfClass() & 1) != 0
          && (objc_msgSend_isDeleted(v98, v99, v100, v101, v102, v103, v104, v105) & 1) == 0)
        {
          id v106 = v98;
          if ((objc_msgSend_deletedFlag(v106, v107, v108, v109, v110, v111, v112, v113) & 1) == 0)
          {
            objc_msgSend_setPrivacyDelegate_(v106, v114, (uint64_t)v197, v115, v116, v117, v118, v119);
            uint64_t v127 = objc_msgSend_mutableCopy(v106, v120, v121, v122, v123, v124, v125, v126);
            objc_msgSend_setPrivacyDelegate_(v127, v128, (uint64_t)v197, v129, v130, v131, v132, v133);
            if (v127)
            {
              objc_msgSend_addObject_(v196, v134, (uint64_t)v127, v135, v136, v137, v138, v139);
              ++v46;
            }
            a3 = v194;
          }
        }
        objc_msgSend_refreshObject_mergeChanges_(v15, v99, (uint64_t)v98, 0, v102, v103, v104, v105);
      }
      a4 = v199;

LABEL_22:
      objc_msgSend_processPendingChanges(v15, v184, v185, v186, v187, v188, v189, v190);
LABEL_23:
      ++v45;
    }
    while (v45 < v201 && v46 < a4);
  }
  id v191 = v196;
  *uint64_t v195 = v191;
  id v192 = v198;
  *a9 = v192;
  *a3 = v45;

  return v45 == v201;
}

void sub_23611C0C0(uint64_t a1, int a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = BDSCloudKitLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_2361FCC98();
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_5;
    }
    uint64_t v6 = BDSCloudKitLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = objc_msgSend_entityName(*(void **)(a1 + 32), v7, v8, v9, v10, v11, v12, v13);
      int v15 = 138412290;
      uint64_t v16 = v14;
      _os_log_impl(&dword_2360BC000, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@", (uint8_t *)&v15, 0xCu);
    }
  }

LABEL_5:
}

void sub_23611C3C4(uint64_t a1, void *a2, char a3)
{
  id v5 = a2;
  if (objc_msgSend_count(v5, v6, v7, v8, v9, v10, v11, v12))
  {
    uint64_t v13 = *(void **)(a1 + 32);
    v21[0] = MEMORY[0x263EF8330];
    v21[1] = 3221225472;
    v21[2] = sub_23611C4B8;
    v21[3] = &unk_264CA2698;
    char v24 = a3;
    id v22 = v13;
    id v23 = *(id *)(a1 + 40);
    objc_msgSend_syncCloudData_completion_(v22, v14, (uint64_t)v5, (uint64_t)v21, v15, v16, v17, v18);
  }
  else
  {
    uint64_t v19 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v20 = v19;
    if (v19) {
      (*((void (**)(void *))v19 + 2))(v19);
    }
  }
}

void sub_23611C4B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(unsigned char *)(a1 + 48)) {
    objc_msgSend_signalSyncToCK(*(void **)(a1 + 32), a2, a3, a4, a5, a6, a7, a8);
  }
  uint64_t v9 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
  if (v9)
  {
    uint64_t v10 = v9;
    v9[2]();
    uint64_t v9 = v10;
  }
}

void sub_23611C6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611C6E8(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_23611C75C(uint64_t a1)
{
  uint64_t v213 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v10)
  {
    id v11 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v19 = objc_msgSend_entityName(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    uint64_t v26 = objc_msgSend_initWithEntityName_(v11, v20, (uint64_t)v19, v21, v22, v23, v24, v25);

    if (*(void *)(a1 + 48) >= 0x40uLL)
    {
      uint64_t v33 = 64;
      objc_msgSend_setFetchLimit_(v26, v27, 64, v28, v29, v30, v31, v32);
    }
    else
    {
      uint64_t v33 = *(void *)(a1 + 48);
      objc_msgSend_setFetchLimit_(v26, v27, v33, v28, v29, v30, v31, v32);
    }
    uint64_t v40 = objc_msgSend_predicateWithFormat_(MEMORY[0x263F08A98], v34, @"editGeneration > syncGeneration", v35, v36, v37, v38, v39);
    objc_msgSend_setPredicate_(v26, v41, (uint64_t)v40, v42, v43, v44, v45, v46);

    id v207 = 0;
    uint64_t v52 = objc_msgSend_executeFetchRequest_error_(v10, v47, (uint64_t)v26, (uint64_t)&v207, v48, v49, v50, v51);
    id v53 = v207;
    objc_msgSend__logError_at_(WeakRetained, v54, (uint64_t)v53, @"_dirtyMutableCloudDataWithFetchLimit - fetch", v55, v56, v57, v58);
    if (objc_msgSend_count(v52, v59, v60, v61, v62, v63, v64, v65))
    {
      uint64_t v197 = v33;
      uint64_t v198 = a1;
      uint64_t v199 = v53;
      unint64_t v201 = v26;
      uint64_t v196 = objc_msgSend_count(v52, v66, v67, v68, v69, v70, v71, v72);
      uint64_t v73 = BDSCloudKitLog();
      if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v81 = objc_msgSend_entityName(WeakRetained, v74, v75, v76, v77, v78, v79, v80);
        uint64_t v89 = objc_msgSend_count(v52, v82, v83, v84, v85, v86, v87, v88);
        *(_DWORD *)long long buf = 138543618;
        id v210 = v81;
        __int16 v211 = 2048;
        uint64_t v212 = v89;
        _os_log_impl(&dword_2360BC000, v73, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records", buf, 0x16u);
      }
      id v90 = objc_alloc(MEMORY[0x263EFF980]);
      uint64_t v98 = objc_msgSend_count(v52, v91, v92, v93, v94, v95, v96, v97);
      uint64_t v105 = objc_msgSend_initWithCapacity_(v90, v99, v98, v100, v101, v102, v103, v104);
      uint64_t v113 = objc_msgSend_privacyDelegate(WeakRetained, v106, v107, v108, v109, v110, v111, v112);
      long long v203 = 0u;
      long long v204 = 0u;
      long long v205 = 0u;
      long long v206 = 0u;
      uint64_t v200 = v52;
      id v114 = v52;
      uint64_t v119 = objc_msgSend_countByEnumeratingWithState_objects_count_(v114, v115, (uint64_t)&v203, (uint64_t)v208, 16, v116, v117, v118);
      if (v119)
      {
        uint64_t v126 = v119;
        uint64_t v127 = *(void *)v204;
        do
        {
          for (uint64_t i = 0; i != v126; ++i)
          {
            if (*(void *)v204 != v127) {
              objc_enumerationMutation(v114);
            }
            uint64_t v129 = *(void **)(*((void *)&v203 + 1) + 8 * i);
            objc_msgSend_setPrivacyDelegate_(v129, v120, (uint64_t)v113, v121, v122, v123, v124, v125);
            uint64_t v137 = objc_msgSend_mutableCopy(v129, v130, v131, v132, v133, v134, v135, v136);
            objc_msgSend_refreshObject_mergeChanges_(v10, v138, (uint64_t)v129, 1, v139, v140, v141, v142);
            if (v137)
            {
              uint64_t v150 = objc_msgSend_privacyDelegate(WeakRetained, v143, v144, v145, v146, v147, v148, v149);
              objc_msgSend_setPrivacyDelegate_(v137, v151, (uint64_t)v150, v152, v153, v154, v155, v156);

              objc_msgSend_addObject_(v105, v157, (uint64_t)v137, v158, v159, v160, v161, v162);
            }
          }
          uint64_t v126 = objc_msgSend_countByEnumeratingWithState_objects_count_(v114, v120, (uint64_t)&v203, (uint64_t)v208, 16, v123, v124, v125);
        }
        while (v126);
      }

      uint64_t v163 = _Block_copy(*(const void **)(v198 + 32));
      uint64_t v164 = v163;
      if (v163) {
        (*((void (**)(void *, void *, BOOL))v163 + 2))(v163, v105, v196 == v197);
      }

      id v53 = v199;
      if (objc_msgSend_hasChanges(v10, v165, v166, v167, v168, v169, v170, v171))
      {
        id v202 = v199;
        objc_msgSend_save_(v10, v172, (uint64_t)&v202, v173, v174, v175, v176, v177);
        id v178 = v202;

        objc_msgSend__logError_at_(WeakRetained, v179, (uint64_t)v178, @"_dirtyMutableCloudDataWithFetchLimit - fetch", v180, v181, v182, v183);
        id v53 = v178;
      }
      uint64_t v52 = v200;
      uint64_t v26 = v201;
    }
    else
    {
      uint64_t v186 = BDSCloudKitLog();
      if (os_log_type_enabled(v186, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v194 = objc_msgSend_entityName(WeakRetained, v187, v188, v189, v190, v191, v192, v193);
        *(_DWORD *)long long buf = 138412290;
        id v210 = v194;
        _os_log_impl(&dword_2360BC000, v186, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating", buf, 0xCu);
      }
      uint64_t v195 = _Block_copy(*(const void **)(a1 + 32));
      uint64_t v105 = v195;
      if (v195) {
        (*((void (**)(void *, void, void))v195 + 2))(v195, 0, 0);
      }
    }
  }
  else
  {
    uint64_t v184 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v185 = v184;
    if (v184) {
      (*((void (**)(void *, void, void))v184 + 2))(v184, 0, 0);
    }
  }
}

void sub_23611CC68(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, id))v3 + 2))(v3, v5);
  }
}

void sub_23611D1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611D1E8(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void))v3 + 2))(v3, 0);
  }
}

void sub_23611D258(uint64_t a1)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v34 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v42 = objc_msgSend_entityName(WeakRetained, v35, v36, v37, v38, v39, v40, v41);
        int v56 = 138412290;
        uint64_t v57 = v42;
        _os_log_impl(&dword_2360BC000, v34, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager requesting currentCloudSyncVersions for %@\\\"\"", (uint8_t *)&v56, 0xCu);
      }
    }
    uint64_t v43 = objc_msgSend_mq_cloudSyncVersions(WeakRetained, v27, v28, v29, v30, v31, v32, v33);
    uint64_t v51 = objc_msgSend_mutableCopy(v43, v44, v45, v46, v47, v48, v49, v50);

    uint64_t v52 = _Block_copy(*(const void **)(a1 + 32));
    id v53 = v52;
    if (v52) {
      (*((void (**)(void *, void *))v52 + 2))(v52, v51);
    }
  }
  else
  {
    long long v54 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v55 = v54;
    if (v54) {
      (*((void (**)(void *, void))v54 + 2))(v54, 0);
    }
  }
}

void sub_23611D5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611D60C(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_23611D684(uint64_t a1)
{
  uint64_t v242 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
        uint64_t v43 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v36, v37, v38, v39, v40, v41, v42);
        *(_DWORD *)long long buf = 138412546;
        uint64_t v233 = v35;
        __int16 v234 = 2112;
        uint64_t v235 = (uint64_t)v43;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudData %@\\\"\"", buf, 0x16u);
      }
    }
    id v44 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v52 = objc_msgSend_entityName(WeakRetained, v45, v46, v47, v48, v49, v50, v51);
    uint64_t v59 = objc_msgSend_initWithEntityName_(v44, v53, (uint64_t)v52, v54, v55, v56, v57, v58);

    objc_msgSend_setReturnsObjectsAsFaults_(v59, v60, 0, v61, v62, v63, v64, v65);
    objc_msgSend_setFetchLimit_(v59, v66, 1, v67, v68, v69, v70, v71);
    objc_msgSend_setPredicate_(v59, v72, *(void *)(a1 + 40), v73, v74, v75, v76, v77);
    id v230 = 0;
    uint64_t v83 = objc_msgSend_executeFetchRequest_error_(v17, v78, (uint64_t)v59, (uint64_t)&v230, v79, v80, v81, v82);
    id v84 = v230;
    objc_msgSend__logError_at_(WeakRetained, v85, (uint64_t)v84, @"setCloudData - fetch", v86, v87, v88, v89);
    uint64_t v228 = v83;
    uint64_t v104 = objc_msgSend_firstObject(v83, v90, v91, v92, v93, v94, v95, v96);
    uint64_t v105 = (void *)v104;
    if (!v104)
    {
      id v106 = (void *)MEMORY[0x263EFF240];
      uint64_t v107 = objc_msgSend_entityName(WeakRetained, v97, v98, v99, v100, v101, v102, v103);
      uint64_t v105 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v106, v108, (uint64_t)v107, (uint64_t)v17, v109, v110, v111, v112);
    }
    uint64_t v113 = objc_msgSend_privacyDelegate(WeakRetained, v97, v98, v99, v100, v101, v102, v103);
    objc_msgSend_setPrivacyDelegate_(v105, v114, (uint64_t)v113, v115, v116, v117, v118, v119);

    uint64_t v127 = objc_msgSend_privacyDelegate(WeakRetained, v120, v121, v122, v123, v124, v125, v126);
    objc_msgSend_setPrivacyDelegate_(*(void **)(a1 + 32), v128, (uint64_t)v127, v129, v130, v131, v132, v133);

    if ((objc_msgSend_isEqualExceptForDate_ignoringEmptySalt_(v105, v134, *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 80), v135, v136, v137, v138) & 1) != 0|| (objc_msgSend_configureFromCloudData_withMergers_(v105, v139, *(void *)(a1 + 32), *(void *)(a1 + 48), v142, v143, v144, v145), !objc_msgSend_hasChanges(v105, v146, v147, v148, v149, v150, v151, v152)))
    {
      uint64_t v177 = 0;
    }
    else
    {
      uint64_t v153 = BDSCloudKitLog();
      if (os_log_type_enabled(v153, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v161 = objc_msgSend_entityName(WeakRetained, v154, v155, v156, v157, v158, v159, v160);
        uint64_t v169 = objc_msgSend_identifier(v105, v162, v163, v164, v165, v166, v167, v168);
        *(_DWORD *)long long buf = 138544386;
        uint64_t v233 = v161;
        __int16 v234 = 2160;
        uint64_t v235 = 1752392040;
        __int16 v236 = 2112;
        __int16 v237 = v169;
        __int16 v238 = 1024;
        BOOL v239 = v104 == 0;
        __int16 v240 = 2112;
        __int16 v241 = v105;
        _os_log_impl(&dword_2360BC000, v153, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);
      }
      objc_msgSend_incrementEditGeneration(v105, v170, v171, v172, v173, v174, v175, v176);
      uint64_t v177 = 1;
    }
    if (objc_msgSend_hasChanges(v17, v139, v140, v141, v142, v143, v144, v145))
    {
      objc_msgSend_mq_incrementCloudVersion(WeakRetained, v178, v179, v180, v181, v182, v183, v184);
      id v229 = v84;
      int v191 = objc_msgSend_save_(v17, v185, (uint64_t)&v229, v186, v187, v188, v189, v190);
      id v192 = v229;

      if (!v104)
      {
        if (v191)
        {
          uint64_t v200 = objc_msgSend_monitor(*(void **)(a1 + 56), v193, v194, v195, v196, v197, v198, v199);

          if (v200)
          {
            if (v105)
            {
              long long v203 = objc_msgSend_monitor(*(void **)(a1 + 56), v193, v201, v202, v196, v197, v198, v199);
              uint64_t v204 = *(void *)(a1 + 56);
              uint64_t v231 = v105;
              id v210 = objc_msgSend_arrayWithObjects_count_(MEMORY[0x263EFF8C0], v205, (uint64_t)&v231, 1, v206, v207, v208, v209);
              objc_msgSend_dataManager_didInsertNewRecords_(v203, v211, v204, (uint64_t)v210, v212, v213, v214, v215);
            }
          }
        }
      }
      objc_msgSend__logError_at_(WeakRetained, v193, (uint64_t)v192, @"setCloudData - save", v196, v197, v198, v199);
      objc_msgSend_mq_signalTransactions(WeakRetained, v216, v217, v218, v219, v220, v221, v222);
    }
    else
    {
      id v192 = v84;
    }
    uint64_t v225 = objc_msgSend_mq_sanitizeError_(WeakRetained, v178, (uint64_t)v192, v180, v181, v182, v183, v184);

    uint64_t v226 = _Block_copy(*(const void **)(a1 + 64));
    uint64_t v227 = v226;
    if (v226) {
      (*((void (**)(void *, BOOL, uint64_t, void *))v226 + 2))(v226, v105 != 0, v177, v225);
    }
  }
  else
  {
    uint64_t v223 = _Block_copy(*(const void **)(a1 + 64));
    uint64_t v224 = v223;
    if (v223) {
      (*((void (**)(void *, void, void, void))v223 + 2))(v223, 0, 0, 0);
    }
  }
}

void sub_23611DD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611DDA0(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_23611DE18(uint64_t a1)
{
  uint64_t v241 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  uint64_t v202 = objc_msgSend_moc(WeakRetained, v2, v3, v4, v5, v6, v7, v8);
  if (v202)
  {
    uint64_t v16 = objc_msgSend_shared(MEMORY[0x263F2BA58], v9, v10, v11, v12, v13, v14, v15);
    int v24 = objc_msgSend_verboseLoggingEnabled(v16, v17, v18, v19, v20, v21, v22, v23);

    if (v24)
    {
      uint64_t v25 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = objc_msgSend_entityName(WeakRetained, v26, v27, v28, v29, v30, v31, v32);
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v33;
        _os_log_impl(&dword_2360BC000, v25, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudDatas\\\"\"", (uint8_t *)&buf, 0xCu);
      }
    }
    id v34 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v42 = objc_msgSend_entityName(WeakRetained, v35, v36, v37, v38, v39, v40, v41);
    id v201 = (id)objc_msgSend_initWithEntityName_(v34, v43, (uint64_t)v42, v44, v45, v46, v47, v48);

    objc_msgSend_setReturnsObjectsAsFaults_(v201, v49, 0, v50, v51, v52, v53, v54);
    objc_msgSend_setPredicate_(v201, v55, *(void *)(a1 + 32), v56, v57, v58, v59, v60);
    id v228 = 0;
    uint64_t v66 = objc_msgSend_executeFetchRequest_error_(v202, v61, (uint64_t)v201, (uint64_t)&v228, v62, v63, v64, v65);
    id v67 = v228;
    objc_msgSend__logError_at_(WeakRetained, v68, (uint64_t)v67, @"setCloudData(propertyIDKey) - fetch", v69, v70, v71, v72);
    uint64_t v73 = (void *)MEMORY[0x263EFF9A0];
    uint64_t v81 = objc_msgSend_count(v66, v74, v75, v76, v77, v78, v79, v80);
    uint64_t v88 = objc_msgSend_dictionaryWithCapacity_(v73, v82, v81, v83, v84, v85, v86, v87);
    long long v226 = 0u;
    long long v227 = 0u;
    long long v224 = 0u;
    long long v225 = 0u;
    id v89 = v66;
    uint64_t v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v89, v90, (uint64_t)&v224, (uint64_t)v240, 16, v91, v92, v93);
    if (v100)
    {
      uint64_t v101 = *(void *)v225;
      do
      {
        for (uint64_t i = 0; i != v100; ++i)
        {
          if (*(void *)v225 != v101) {
            objc_enumerationMutation(v89);
          }
          uint64_t v103 = *(void **)(*((void *)&v224 + 1) + 8 * i);
          uint64_t v104 = objc_msgSend_valueForKey_(v103, v94, *(void *)(a1 + 40), v95, v96, v97, v98, v99);
          objc_msgSend_setObject_forKey_(v88, v105, (uint64_t)v103, (uint64_t)v104, v106, v107, v108, v109);
        }
        uint64_t v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v89, v94, (uint64_t)&v224, (uint64_t)v240, 16, v97, v98, v99);
      }
      while (v100);
    }

    uint64_t v220 = 0;
    uint64_t v221 = &v220;
    uint64_t v222 = 0x2020000000;
    char v223 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = &v216;
    uint64_t v218 = 0x2020000000;
    char v219 = 0;
    v215[0] = 0;
    v215[1] = v215;
    v215[2] = 0x2020000000;
    v215[3] = 0;
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v236 = 0x3032000000;
    __int16 v237 = sub_23611E47C;
    __int16 v238 = sub_23611E48C;
    id v239 = objc_alloc_init(MEMORY[0x263EFF980]);
    uint64_t v110 = *(void **)(a1 + 48);
    v205[0] = MEMORY[0x263EF8330];
    v205[1] = 3221225472;
    v205[2] = sub_23611E494;
    v205[3] = &unk_264CA2760;
    id v111 = v88;
    id v206 = v111;
    id v207 = WeakRetained;
    id v112 = v202;
    id v208 = v112;
    p_long long buf = &buf;
    __int16 v211 = &v216;
    char v214 = *(unsigned char *)(a1 + 88);
    id v209 = *(id *)(a1 + 56);
    uint64_t v212 = &v220;
    uint64_t v213 = v215;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v110, v113, (uint64_t)v205, v114, v115, v116, v117, v118);
    if ((objc_msgSend_hasChanges(v112, v119, v120, v121, v122, v123, v124, v125) & 1) != 0 || *((unsigned char *)v221 + 24))
    {
      objc_msgSend_mq_incrementCloudVersion(WeakRetained, v126, v127, v128, v129, v130, v131, v132);
      id v204 = v67;
      int v139 = objc_msgSend_save_(v112, v133, (uint64_t)&v204, v134, v135, v136, v137, v138);
      id v140 = v204;

      objc_msgSend__logError_at_(WeakRetained, v141, (uint64_t)v140, @"setCloudData(propertyIDKey) - save remaining", v142, v143, v144, v145);
      objc_msgSend_mq_signalTransactions(WeakRetained, v146, v147, v148, v149, v150, v151, v152);
      uint64_t v153 = BDSCloudKitLog();
      if (os_log_type_enabled(v153, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v184 = objc_msgSend_entityName(WeakRetained, v154, v155, v156, v157, v158, v159, v160);
        id v192 = objc_msgSend_persistentStoreCoordinator(v112, v185, v186, v187, v188, v189, v190, v191);
        uint64_t v200 = objc_msgSend_persistentStores(v192, v193, v194, v195, v196, v197, v198, v199);
        *(_DWORD *)id v229 = 138412802;
        id v230 = v184;
        __int16 v231 = 2112;
        uint64_t v232 = v200;
        __int16 v233 = 2112;
        id v234 = v140;
        _os_log_debug_impl(&dword_2360BC000, v153, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Save to storeID:%@ error:%@", v229, 0x20u);
      }
      if (v139)
      {
        uint64_t v163 = objc_msgSend_monitor(*(void **)(a1 + 64), v126, v161, v128, v129, v130, v131, v132);
        if (v163)
        {
          BOOL v164 = objc_msgSend_count(*(void **)(*((void *)&buf + 1) + 40), v126, v162, v128, v129, v130, v131, v132) == 0;

          if (!v164)
          {
            uint64_t v166 = objc_msgSend_monitor(*(void **)(a1 + 64), v126, v165, v128, v129, v130, v131, v132);
            objc_msgSend_dataManager_didInsertNewRecords_(v166, v167, *(void *)(a1 + 64), *(void *)(*((void *)&buf + 1) + 40), v168, v169, v170, v171);
          }
        }
      }
    }
    else
    {
      id v140 = v67;
    }
    uint64_t v181 = objc_msgSend_mq_sanitizeError_(WeakRetained, v126, (uint64_t)v140, v128, v129, v130, v131, v132);

    uint64_t v182 = _Block_copy(*(const void **)(a1 + 72));
    uint64_t v183 = v182;
    if (v182) {
      (*((void (**)(void *, void, void, void *))v182 + 2))(v182, *((unsigned __int8 *)v217 + 24), *((unsigned __int8 *)v221 + 24), v181);
    }

    _Block_object_dispose(&buf, 8);
    _Block_object_dispose(v215, 8);
    _Block_object_dispose(&v216, 8);
    _Block_object_dispose(&v220, 8);

    uint64_t v179 = v201;
  }
  else
  {
    BDSCloudKitLog();
    uint64_t v172 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v172, OS_LOG_TYPE_ERROR)) {
      sub_2361FCDBC(WeakRetained, v172, v173, v174, v175, v176, v177, v178);
    }

    uint64_t v179 = _Block_copy(*(const void **)(a1 + 72));
    uint64_t v180 = v179;
    if (v179)
    {
      (*((void (**)(void *, void, void, void))v179 + 2))(v179, 0, 0, 0);
      uint64_t v179 = v180;
    }
  }
}

void sub_23611E420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t sub_23611E47C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_23611E48C(uint64_t a1)
{
}

void sub_23611E494(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v163 = *MEMORY[0x263EF8340];
  id v5 = a3;
  uint64_t v12 = objc_msgSend_objectForKey_(*(void **)(a1 + 32), v6, a2, v7, v8, v9, v10, v11);
  if (v12)
  {
    uint64_t v20 = (void *)v12;
    int v21 = 0;
  }
  else
  {
    uint64_t v22 = (void *)MEMORY[0x263EFF240];
    uint64_t v23 = objc_msgSend_entityName(*(void **)(a1 + 40), v13, v14, v15, v16, v17, v18, v19);
    uint64_t v20 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v22, v24, (uint64_t)v23, *(void *)(a1 + 48), v25, v26, v27, v28);

    objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v29, (uint64_t)v20, v30, v31, v32, v33, v34);
    int v21 = 1;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) |= v20 != 0;
  uint64_t v35 = objc_msgSend_privacyDelegate(*(void **)(a1 + 40), v13, v14, v15, v16, v17, v18, v19);
  objc_msgSend_setPrivacyDelegate_(v20, v36, (uint64_t)v35, v37, v38, v39, v40, v41);

  uint64_t v49 = objc_msgSend_privacyDelegate(*(void **)(a1 + 40), v42, v43, v44, v45, v46, v47, v48);
  objc_msgSend_setPrivacyDelegate_(v5, v50, (uint64_t)v49, v51, v52, v53, v54, v55);

  uint64_t isEqualExceptForDate_ignoringEmptySalt = objc_msgSend_isEqualExceptForDate_ignoringEmptySalt_(v20, v56, (uint64_t)v5, *(unsigned __int8 *)(a1 + 96), v57, v58, v59, v60);
  uint64_t v62 = BDSCloudKitLog();
  if (os_log_type_enabled(v62, OS_LOG_TYPE_DEBUG)) {
    sub_2361FCEE0(v20, (const char *)isEqualExceptForDate_ignoringEmptySalt, (uint64_t)v62, v63, v64, v65, v66, v67);
  }

  if ((isEqualExceptForDate_ignoringEmptySalt & 1) == 0)
  {
    objc_msgSend_configureFromCloudData_withMergers_(v20, v68, (uint64_t)v5, *(void *)(a1 + 56), v71, v72, v73, v74);
    hasChanges = (const char *)objc_msgSend_hasChanges(v20, v75, v76, v77, v78, v79, v80, v81);
    uint64_t v83 = BDSCloudKitLog();
    if (os_log_type_enabled(v83, OS_LOG_TYPE_DEBUG)) {
      sub_2361FCE4C(v20, hasChanges, (uint64_t)v83, v84, v85, v86, v87, v88);
    }

    if (hasChanges)
    {
      id v89 = BDSCloudKitLog();
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v97 = objc_msgSend_entityName(*(void **)(a1 + 40), v90, v91, v92, v93, v94, v95, v96);
        uint64_t v105 = objc_msgSend_identifier(v20, v98, v99, v100, v101, v102, v103, v104);
        *(_DWORD *)long long buf = 138544386;
        uint64_t v154 = v97;
        __int16 v155 = 2160;
        uint64_t v156 = 1752392040;
        __int16 v157 = 2112;
        id v158 = v105;
        __int16 v159 = 1024;
        int v160 = v21;
        __int16 v161 = 2112;
        uint64_t v162 = v20;
        _os_log_impl(&dword_2360BC000, v89, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);
      }
      objc_msgSend_incrementEditGeneration(v20, v106, v107, v108, v109, v110, v111, v112);
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
      ++*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    }
  }
  uint64_t v113 = *(void *)(*(void *)(a1 + 88) + 8);
  if (*(void *)(v113 + 24) >= 0x21uLL)
  {
    *(void *)(v113 + 24) = 0;
    if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v68, v69, v70, v71, v72, v73, v74))
    {
      uint64_t v120 = *(void **)(a1 + 48);
      id v152 = 0;
      objc_msgSend_save_(v120, v114, (uint64_t)&v152, v115, v116, v117, v118, v119);
      id v121 = v152;
      objc_msgSend__logError_at_(*(void **)(a1 + 40), v122, (uint64_t)v121, @"setCloudData(propertyIDKey) - save batch", v123, v124, v125, v126);
      uint64_t v127 = BDSCloudKitLog();
      if (os_log_type_enabled(v127, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v135 = objc_msgSend_entityName(*(void **)(a1 + 40), v128, v129, v130, v131, v132, v133, v134);
        uint64_t v143 = objc_msgSend_persistentStoreCoordinator(*(void **)(a1 + 48), v136, v137, v138, v139, v140, v141, v142);
        uint64_t v151 = objc_msgSend_persistentStores(v143, v144, v145, v146, v147, v148, v149, v150);
        *(_DWORD *)long long buf = 138412802;
        uint64_t v154 = v135;
        __int16 v155 = 2112;
        uint64_t v156 = (uint64_t)v151;
        __int16 v157 = 2112;
        id v158 = v121;
        _os_log_debug_impl(&dword_2360BC000, v127, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Batch save to storeID:%@ with error:%@", buf, 0x20u);
      }
    }
  }
}

void sub_23611E9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611E9F4(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_23611EA68(uint64_t a1)
{
  uint64_t v164 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
        uint64_t v43 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v36, v37, v38, v39, v40, v41, v42);
        *(_DWORD *)long long buf = 138543618;
        __int16 v161 = v35;
        __int16 v162 = 2114;
        uint64_t v163 = v43;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ removeCloudDataForPredicate:%{public}@\\\"\"", buf, 0x16u);
      }
    }
    id v44 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v52 = objc_msgSend_entityName(WeakRetained, v45, v46, v47, v48, v49, v50, v51);
    uint64_t v59 = objc_msgSend_initWithEntityName_(v44, v53, (uint64_t)v52, v54, v55, v56, v57, v58);

    objc_msgSend_setFetchBatchSize_(v59, v60, 64, v61, v62, v63, v64, v65);
    objc_msgSend_setPredicate_(v59, v66, *(void *)(a1 + 32), v67, v68, v69, v70, v71);
    id v158 = 0;
    uint64_t v77 = objc_msgSend_executeFetchRequest_error_(v17, v72, (uint64_t)v59, (uint64_t)&v158, v73, v74, v75, v76);
    id v78 = v158;
    objc_msgSend__logError_at_(WeakRetained, v79, (uint64_t)v78, @"removeCloudData - fetch", v80, v81, v82, v83);
    uint64_t v91 = objc_msgSend_count(v77, v84, v85, v86, v87, v88, v89, v90);
    uint64_t v92 = v91;
    if (v91)
    {
      uint64_t v152 = v91;
      long long v156 = 0u;
      long long v157 = 0u;
      long long v154 = 0u;
      long long v155 = 0u;
      id v93 = v77;
      uint64_t v98 = objc_msgSend_countByEnumeratingWithState_objects_count_(v93, v94, (uint64_t)&v154, (uint64_t)v159, 16, v95, v96, v97);
      if (v98)
      {
        uint64_t v105 = v98;
        uint64_t v106 = *(void *)v155;
        do
        {
          for (uint64_t i = 0; i != v105; ++i)
          {
            if (*(void *)v155 != v106) {
              objc_enumerationMutation(v93);
            }
            objc_msgSend_deleteObject_(v17, v99, *(void *)(*((void *)&v154 + 1) + 8 * i), v100, v101, v102, v103, v104, v152);
          }
          uint64_t v105 = objc_msgSend_countByEnumeratingWithState_objects_count_(v93, v99, (uint64_t)&v154, (uint64_t)v159, 16, v102, v103, v104);
        }
        while (v105);
      }

      if (objc_msgSend_hasChanges(v17, v108, v109, v110, v111, v112, v113, v114))
      {
        objc_msgSend_mq_incrementCloudVersion(WeakRetained, v115, v116, v117, v118, v119, v120, v121);
        id v153 = v78;
        objc_msgSend_save_(v17, v122, (uint64_t)&v153, v123, v124, v125, v126, v127);
        id v128 = v153;

        objc_msgSend__logError_at_(WeakRetained, v129, (uint64_t)v128, @"removeCloudData - save", v130, v131, v132, v133);
        objc_msgSend_mq_signalTransactions(WeakRetained, v134, v135, v136, v137, v138, v139, v140);
        id v78 = v128;
      }
      uint64_t v92 = v152;
    }
    else
    {
      uint64_t v143 = BDSCloudKitLog();
      if (os_log_type_enabled(v143, OS_LOG_TYPE_ERROR)) {
        sub_2361FCF74(WeakRetained, (const char *)(a1 + 32), v143, v144, v145, v146, v147, v148);
      }
    }
    uint64_t v149 = objc_msgSend_mq_sanitizeError_(WeakRetained, v115, (uint64_t)v78, v117, v118, v119, v120, v121, v152);

    uint64_t v150 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v151 = v150;
    if (v150) {
      (*((void (**)(void *, BOOL, void *))v150 + 2))(v150, v92 != 0, v149);
    }
  }
  else
  {
    uint64_t v141 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v142 = v141;
    if (v141) {
      (*((void (**)(void *, void, void))v141 + 2))(v141, 0, 0);
    }
  }
}

void sub_23611EFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611EFE0(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_23611F054(uint64_t a1)
{
  uint64_t v139 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v10)
  {
    id v11 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v19 = objc_msgSend_entityName(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    int v26 = objc_msgSend_initWithEntityName_(v11, v20, (uint64_t)v19, v21, v22, v23, v24, v25);

    objc_msgSend_setFetchBatchSize_(v26, v27, 64, v28, v29, v30, v31, v32);
    objc_msgSend_setPredicate_(v26, v33, *(void *)(a1 + 32), v34, v35, v36, v37, v38);
    id v136 = 0;
    id v44 = objc_msgSend_executeFetchRequest_error_(v10, v39, (uint64_t)v26, (uint64_t)&v136, v40, v41, v42, v43);
    id v45 = v136;
    objc_msgSend__logError_at_(WeakRetained, v46, (uint64_t)v45, @"updateSyncGeneration - fetch", v47, v48, v49, v50);
    uint64_t v65 = objc_msgSend_count(v44, v51, v52, v53, v54, v55, v56, v57);
    if (v65)
    {
      uint64_t v66 = objc_msgSend_count(v44, v58, v59, v60, v61, v62, v63, v64);
      if (v66 != objc_msgSend_count(*(void **)(a1 + 40), v67, v68, v69, v70, v71, v72, v73))
      {
        uint64_t v74 = BDSCloudKitLog();
        if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR)) {
          sub_2361FD038();
        }
      }
      *(void *)long long buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000;
      uint64_t v138 = 0;
      v130[0] = MEMORY[0x263EF8330];
      v130[1] = 3221225472;
      v130[2] = sub_23611F3E4;
      v130[3] = &unk_264CA27B0;
      id v131 = *(id *)(a1 + 48);
      id v132 = *(id *)(a1 + 40);
      id v133 = WeakRetained;
      uint64_t v135 = buf;
      id v75 = v10;
      id v134 = v75;
      objc_msgSend_enumerateObjectsUsingBlock_(v44, v76, (uint64_t)v130, v77, v78, v79, v80, v81);
      id v129 = v45;
      objc_msgSend_save_(v75, v82, (uint64_t)&v129, v83, v84, v85, v86, v87);
      id v88 = v129;

      objc_msgSend__logError_at_(WeakRetained, v89, (uint64_t)v88, @"updateSyncGeneration - save remaining", v90, v91, v92, v93);
      objc_msgSend_mq_signalTransactions(WeakRetained, v94, v95, v96, v97, v98, v99, v100);

      _Block_object_dispose(buf, 8);
    }
    else
    {
      uint64_t v109 = BDSCloudKitLog();
      if (os_log_type_enabled(v109, OS_LOG_TYPE_INFO))
      {
        uint64_t v117 = objc_msgSend_entityName(WeakRetained, v110, v111, v112, v113, v114, v115, v116);
        uint64_t v125 = objc_msgSend_debugDescription(*(void **)(a1 + 40), v118, v119, v120, v121, v122, v123, v124);
        *(_DWORD *)long long buf = 138543618;
        *(void *)&uint8_t buf[4] = v117;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v125;
        _os_log_impl(&dword_2360BC000, v109, OS_LOG_TYPE_INFO, "Did not find %{public}@ to update sync gen from cloudData:%@", buf, 0x16u);
      }
      id v88 = v45;
    }
    uint64_t v126 = objc_msgSend_mq_sanitizeError_(WeakRetained, v101, (uint64_t)v88, v102, v103, v104, v105, v106);

    uint64_t v127 = _Block_copy(*(const void **)(a1 + 56));
    id v128 = v127;
    if (v127) {
      (*((void (**)(void *, BOOL, void *))v127 + 2))(v127, v65 != 0, v126);
    }
  }
  else
  {
    uint64_t v107 = _Block_copy(*(const void **)(a1 + 56));
    uint64_t v108 = v107;
    if (v107) {
      (*((void (**)(void *, void, void))v107 + 2))(v107, 0, 0);
    }
  }
}

void sub_23611F3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23611F3E4(uint64_t a1, void *a2)
{
  uint64_t v126 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v10 = objc_msgSend_valueForKey_(v3, v4, *(void *)(a1 + 32), v5, v6, v7, v8, v9);
  uint64_t v17 = objc_msgSend_objectForKey_(*(void **)(a1 + 40), v11, (uint64_t)v10, v12, v13, v14, v15, v16);
  uint64_t v25 = objc_msgSend_privacyDelegate(*(void **)(a1 + 48), v18, v19, v20, v21, v22, v23, v24);
  objc_msgSend_setPrivacyDelegate_(v3, v26, (uint64_t)v25, v27, v28, v29, v30, v31);

  uint64_t v39 = objc_msgSend_editGeneration(v17, v32, v33, v34, v35, v36, v37, v38);
  objc_msgSend_setSyncGeneration_(v3, v40, v39, v41, v42, v43, v44, v45);
  uint64_t v53 = objc_msgSend_systemFields(v17, v46, v47, v48, v49, v50, v51, v52);
  objc_msgSend_setSystemFields_(v3, v54, (uint64_t)v53, v55, v56, v57, v58, v59);

  uint64_t v67 = objc_msgSend_systemFields(v17, v60, v61, v62, v63, v64, v65, v66);
  id v75 = objc_msgSend_modificationDate(v67, v68, v69, v70, v71, v72, v73, v74);
  objc_msgSend_setModificationDate_(v3, v76, (uint64_t)v75, v77, v78, v79, v80, v81);

  uint64_t v82 = BDSCloudKitLog();
  if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v90 = objc_msgSend_entityName(*(void **)(a1 + 48), v83, v84, v85, v86, v87, v88, v89);
    uint64_t v98 = objc_msgSend_debugDescription(v3, v91, v92, v93, v94, v95, v96, v97);
    *(_DWORD *)long long buf = 138543618;
    uint64_t v123 = v90;
    __int16 v124 = 2112;
    uint64_t v125 = v98;
    _os_log_impl(&dword_2360BC000, v82, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@", buf, 0x16u);
  }
  uint64_t v106 = *(void *)(*(void *)(a1 + 64) + 8);
  unint64_t v107 = *(void *)(v106 + 24) + 1;
  *(void *)(v106 + 24) = v107;
  if (v107 >= 0x21)
  {
    *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
    if (objc_msgSend_hasChanges(*(void **)(a1 + 56), v99, v100, v101, v102, v103, v104, v105))
    {
      uint64_t v114 = *(void **)(a1 + 56);
      id v121 = 0;
      objc_msgSend_save_(v114, v108, (uint64_t)&v121, v109, v110, v111, v112, v113);
      id v115 = v121;
      objc_msgSend__logError_at_(*(void **)(a1 + 48), v116, (uint64_t)v115, @"updateSyncGeneration - save batch", v117, v118, v119, v120);
    }
  }
}

void sub_23611F784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611F7A8(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_23611F81C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v221 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
        uint64_t v43 = objc_msgSend_debugDescription(*(void **)(v1 + 32), v36, v37, v38, v39, v40, v41, v42);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v218 = v35;
        __int16 v219 = 2112;
        uint64_t v220 = v43;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ deleteCloudDataForPredicate %@\\\"\"", buf, 0x16u);
      }
    }
    id v44 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v52 = objc_msgSend_entityName(WeakRetained, v45, v46, v47, v48, v49, v50, v51);
    uint64_t v59 = objc_msgSend_initWithEntityName_(v44, v53, (uint64_t)v52, v54, v55, v56, v57, v58);

    objc_msgSend_setFetchBatchSize_(v59, v60, 64, v61, v62, v63, v64, v65);
    objc_msgSend_setPredicate_(v59, v66, *(void *)(v1 + 32), v67, v68, v69, v70, v71);
    id v215 = 0;
    uint64_t v77 = objc_msgSend_executeFetchRequest_error_(v17, v72, (uint64_t)v59, (uint64_t)&v215, v73, v74, v75, v76);
    id v78 = v215;
    objc_msgSend__logError_at_(WeakRetained, v79, (uint64_t)v78, @"deleteCloudData - fetch", v80, v81, v82, v83);
    uint64_t v91 = objc_msgSend_count(v77, v84, v85, v86, v87, v88, v89, v90);
    uint64_t v96 = v91;
    if (v91)
    {
      id v204 = v78;
      uint64_t v205 = v91;
      id v207 = v59;
      uint64_t v208 = v1;
      id v209 = v17;
      long long v213 = 0u;
      long long v214 = 0u;
      long long v211 = 0u;
      long long v212 = 0u;
      id v206 = v77;
      id v97 = v77;
      uint64_t v102 = objc_msgSend_countByEnumeratingWithState_objects_count_(v97, v98, (uint64_t)&v211, (uint64_t)v216, 16, v99, v100, v101);
      if (v102)
      {
        uint64_t v110 = v102;
        uint64_t v111 = *(void *)v212;
        uint64_t v112 = MEMORY[0x263EFFA88];
        do
        {
          for (uint64_t i = 0; i != v110; ++i)
          {
            if (*(void *)v212 != v111) {
              objc_enumerationMutation(v97);
            }
            uint64_t v114 = *(void **)(*((void *)&v211 + 1) + 8 * i);
            id v115 = objc_msgSend_privacyDelegate(WeakRetained, v103, v104, v105, v106, v107, v108, v109, v204);
            objc_msgSend_setPrivacyDelegate_(v114, v116, (uint64_t)v115, v117, v118, v119, v120, v121);

            objc_msgSend_setDifferentNumber_forKey_(v114, v122, v112, @"deletedFlag", v123, v124, v125, v126);
            if (objc_msgSend_hasChanges(v114, v127, v128, v129, v130, v131, v132, v133))
            {
              id v134 = BDSCloudKitLog();
              if (os_log_type_enabled(v134, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v142 = objc_msgSend_entityName(WeakRetained, v135, v136, v137, v138, v139, v140, v141);
                *(_DWORD *)long long buf = 138543618;
                uint64_t v218 = v142;
                __int16 v219 = 2112;
                uint64_t v220 = v114;
                _os_log_impl(&dword_2360BC000, v134, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@", buf, 0x16u);
              }
              objc_msgSend_incrementEditGeneration(v114, v143, v144, v145, v146, v147, v148, v149);
            }
          }
          uint64_t v110 = objc_msgSend_countByEnumeratingWithState_objects_count_(v97, v103, (uint64_t)&v211, (uint64_t)v216, 16, v107, v108, v109);
        }
        while (v110);
      }

      uint64_t v17 = v209;
      if (objc_msgSend_hasChanges(v209, v150, v151, v152, v153, v154, v155, v156))
      {
        objc_msgSend_mq_incrementCloudVersion(WeakRetained, v157, v158, v159, v160, v161, v162, v163);
        id v210 = v204;
        objc_msgSend_save_(v209, v164, (uint64_t)&v210, v165, v166, v167, v168, v169);
        id v78 = v210;

        objc_msgSend__logError_at_(WeakRetained, v170, (uint64_t)v78, @"deleteCloudData - save", v171, v172, v173, v174);
        objc_msgSend_mq_signalTransactions(WeakRetained, v175, v176, v177, v178, v179, v180, v181);
        uint64_t v59 = v207;
        uint64_t v1 = v208;
        uint64_t v96 = v205;
        uint64_t v77 = v206;
      }
      else
      {
        uint64_t v59 = v207;
        uint64_t v1 = v208;
        uint64_t v96 = v205;
        uint64_t v77 = v206;
        id v78 = v204;
      }
    }
    else
    {
      if (!v78)
      {
        objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v92, *MEMORY[0x263F07F70], 4, 0, v93, v94, v95);
        id v78 = (id)objc_claimAutoreleasedReturnValue();
      }
      uint64_t v184 = BDSCloudKitLog();
      if (os_log_type_enabled(v184, OS_LOG_TYPE_INFO))
      {
        id v192 = objc_msgSend_entityName(WeakRetained, v185, v186, v187, v188, v189, v190, v191);
        uint64_t v200 = objc_msgSend_debugDescription(*(void **)(v1 + 32), v193, v194, v195, v196, v197, v198, v199);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v218 = v192;
        __int16 v219 = 2114;
        uint64_t v220 = v200;
        _os_log_impl(&dword_2360BC000, v184, OS_LOG_TYPE_INFO, "Did not find %{public}@ to delete for predicate %{public}@", buf, 0x16u);
      }
    }
    id v201 = objc_msgSend_mq_sanitizeError_(WeakRetained, v157, (uint64_t)v78, v159, v160, v161, v162, v163, v204);

    uint64_t v202 = _Block_copy(*(const void **)(v1 + 40));
    long long v203 = v202;
    if (v202) {
      (*((void (**)(void *, BOOL, void *))v202 + 2))(v202, v96 != 0, v201);
    }
  }
  else
  {
    uint64_t v182 = _Block_copy(*(const void **)(v1 + 40));
    uint64_t v183 = v182;
    if (v182) {
      (*((void (**)(void *, void, void))v182 + 2))(v182, 0, 0);
    }
  }
}

void sub_23611FE98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23611FEBC(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_23611FF30(uint64_t a1)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v28, v29, v30, v31, v32, v33, v34);
        *(_DWORD *)long long buf = 138543362;
        id v78 = v35;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager countWithPredicate:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v36 = objc_alloc(MEMORY[0x263EFF260]);
    id v44 = objc_msgSend_entityName(WeakRetained, v37, v38, v39, v40, v41, v42, v43);
    uint64_t v51 = objc_msgSend_initWithEntityName_(v36, v45, (uint64_t)v44, v46, v47, v48, v49, v50);

    objc_msgSend_setPredicate_(v51, v52, *(void *)(a1 + 32), v53, v54, v55, v56, v57);
    id v76 = 0;
    objc_msgSend_countForFetchRequest_error_(v17, v58, (uint64_t)v51, (uint64_t)&v76, v59, v60, v61, v62);
    id v63 = v76;
    objc_msgSend__logError_at_(WeakRetained, v64, (uint64_t)v63, @"count", v65, v66, v67, v68);
    uint64_t v75 = objc_msgSend_mq_sanitizeError_(WeakRetained, v69, (uint64_t)v63, v70, v71, v72, v73, v74);

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_236120240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_236120258(uint64_t a1, void *a2)
{
}

void sub_236120458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_236120474(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_2361204E8(uint64_t a1)
{
  uint64_t v154 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v28, v29, v30, v31, v32, v33, v34);
        *(_DWORD *)long long buf = 138543362;
        uint64_t v153 = v35;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v36 = objc_alloc(MEMORY[0x263EFF260]);
    id v44 = objc_msgSend_entityName(WeakRetained, v37, v38, v39, v40, v41, v42, v43);
    uint64_t v51 = objc_msgSend_initWithEntityName_(v36, v45, (uint64_t)v44, v46, v47, v48, v49, v50);

    objc_msgSend_setReturnsObjectsAsFaults_(v51, v52, 0, v53, v54, v55, v56, v57);
    objc_msgSend_setFetchLimit_(v51, v58, 1, v59, v60, v61, v62, v63);
    objc_msgSend_setPredicate_(v51, v64, *(void *)(a1 + 32), v65, v66, v67, v68, v69);
    objc_msgSend_setSortDescriptors_(v51, v70, *(void *)(a1 + 40), v71, v72, v73, v74, v75);
    id v151 = 0;
    uint64_t v81 = objc_msgSend_executeFetchRequest_error_(v17, v76, (uint64_t)v51, (uint64_t)&v151, v77, v78, v79, v80);
    id v82 = v151;
    objc_msgSend__logError_at_(WeakRetained, v83, (uint64_t)v82, @"mutableCloudData - fetch", v84, v85, v86, v87);
    uint64_t v95 = objc_msgSend_privacyDelegate(WeakRetained, v88, v89, v90, v91, v92, v93, v94);
    uint64_t v103 = objc_msgSend_firstObject(v81, v96, v97, v98, v99, v100, v101, v102);
    objc_msgSend_setPrivacyDelegate_(v103, v104, (uint64_t)v95, v105, v106, v107, v108, v109);
    uint64_t v117 = objc_msgSend_mutableCopy(v103, v110, v111, v112, v113, v114, v115, v116);
    objc_msgSend_setPrivacyDelegate_(v117, v118, (uint64_t)v95, v119, v120, v121, v122, v123);
    uint64_t v130 = objc_msgSend_mq_sanitizeError_(WeakRetained, v124, (uint64_t)v82, v125, v126, v127, v128, v129);

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    if (objc_msgSend_hasChanges(v17, v131, v132, v133, v134, v135, v136, v137))
    {
      id v150 = v130;
      objc_msgSend_save_(v17, v138, (uint64_t)&v150, v139, v140, v141, v142, v143);
      id v144 = v150;

      objc_msgSend__logError_at_(WeakRetained, v145, (uint64_t)v144, @"mutableCloudData - save", v146, v147, v148, v149);
      uint64_t v130 = v144;
    }
    objc_msgSend_refreshObject_mergeChanges_(v17, v138, (uint64_t)v103, 0, v140, v141, v142, v143);
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_2361209A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2361209C8(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_236120A40(uint64_t a1)
{
  uint64_t v212 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
        uint64_t v43 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v36, v37, v38, v39, v40, v41, v42);
        id v44 = (void *)v43;
        uint64_t v45 = *(void *)(a1 + 40);
        uint64_t v46 = @"YES";
        uint64_t v47 = *(void *)(a1 + 72);
        if (!*(void *)(a1 + 48)) {
          uint64_t v46 = @"NO";
        }
        *(_DWORD *)long long buf = 138544386;
        long long v203 = v35;
        __int16 v204 = 2114;
        uint64_t v205 = v43;
        __int16 v206 = 2114;
        uint64_t v207 = v45;
        __int16 v208 = 2114;
        id v209 = v46;
        __int16 v210 = 2048;
        uint64_t v211 = v47;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@ sortDescriptors: %{public}@, has a filter: %{public}@, maximumResultCount: %lu\\\"\"", buf, 0x34u);
      }
    }
    id v48 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v56 = objc_msgSend_entityName(WeakRetained, v49, v50, v51, v52, v53, v54, v55);
    uint64_t v63 = objc_msgSend_initWithEntityName_(v48, v57, (uint64_t)v56, v58, v59, v60, v61, v62);

    objc_msgSend_setFetchBatchSize_(v63, v64, 64, v65, v66, v67, v68, v69);
    objc_msgSend_setPredicate_(v63, v70, *(void *)(a1 + 32), v71, v72, v73, v74, v75);
    uint64_t v82 = *(void *)(a1 + 40);
    if (v82) {
      objc_msgSend_setSortDescriptors_(v63, v76, v82, v77, v78, v79, v80, v81);
    }
    id v200 = 0;
    id v192 = v63;
    uint64_t v193 = v17;
    uint64_t v83 = objc_msgSend_executeFetchRequest_error_(v17, v76, (uint64_t)v63, (uint64_t)&v200, v78, v79, v80, v81);
    id v191 = v200;
    objc_msgSend__logError_at_(WeakRetained, v84, (uint64_t)v191, @"cloudDatas(maximumResultCount) - fetch", v85, v86, v87, v88);
    uint64_t v89 = (void *)MEMORY[0x263EFF980];
    uint64_t v97 = objc_msgSend_count(v83, v90, v91, v92, v93, v94, v95, v96);
    uint64_t v104 = objc_msgSend_arrayWithCapacity_(v89, v98, v97, v99, v100, v101, v102, v103);
    uint64_t v194 = WeakRetained;
    uint64_t v112 = objc_msgSend_privacyDelegate(WeakRetained, v105, v106, v107, v108, v109, v110, v111);
    long long v196 = 0u;
    long long v197 = 0u;
    long long v198 = 0u;
    long long v199 = 0u;
    id v113 = v83;
    uint64_t v118 = objc_msgSend_countByEnumeratingWithState_objects_count_(v113, v114, (uint64_t)&v196, (uint64_t)v201, 16, v115, v116, v117);
    if (v118)
    {
      uint64_t v125 = v118;
      uint64_t v126 = *(void *)v197;
LABEL_12:
      uint64_t v127 = 0;
      while (1)
      {
        if (*(void *)v197 != v126) {
          objc_enumerationMutation(v113);
        }
        uint64_t v128 = *(void **)(*((void *)&v196 + 1) + 8 * v127);
        uint64_t v129 = *(void *)(a1 + 48);
        if (!v129
          || (*(unsigned int (**)(uint64_t, void))(v129 + 16))(v129, *(void *)(*((void *)&v196 + 1) + 8 * v127)))
        {
          objc_msgSend_setPrivacyDelegate_(v128, v119, (uint64_t)v112, v120, v121, v122, v123, v124);
          uint64_t v137 = objc_msgSend_mutableCopy(v128, v130, v131, v132, v133, v134, v135, v136);
          objc_msgSend_setPrivacyDelegate_(v137, v138, (uint64_t)v112, v139, v140, v141, v142, v143);
          if (v137) {
            objc_msgSend_addObject_(v104, v144, (uint64_t)v137, v146, v147, v148, v149, v150);
          }
          unint64_t v151 = objc_msgSend_count(v104, v144, v145, v146, v147, v148, v149, v150);
          unint64_t v152 = *(void *)(a1 + 72);

          if (v151 >= v152) {
            break;
          }
        }
        if (v125 == ++v127)
        {
          uint64_t v125 = objc_msgSend_countByEnumeratingWithState_objects_count_(v113, v119, (uint64_t)&v196, (uint64_t)v201, 16, v122, v123, v124);
          if (v125) {
            goto LABEL_12;
          }
          break;
        }
      }
    }

    uint64_t v17 = v193;
    if (objc_msgSend_hasChanges(v193, v153, v154, v155, v156, v157, v158, v159))
    {
      id v195 = v191;
      objc_msgSend_save_(v193, v160, (uint64_t)&v195, v161, v162, v163, v164, v165);
      id v166 = v195;

      id WeakRetained = v194;
      objc_msgSend__logError_at_(v194, v167, (uint64_t)v166, @"cloudDatas(maximumResultCount) - save", v168, v169, v170, v171);
    }
    else
    {
      id WeakRetained = v194;
      id v166 = v191;
    }
    uint64_t v173 = objc_msgSend_mq_sanitizeError_(WeakRetained, v160, (uint64_t)v166, v161, v162, v163, v164, v165);

    uint64_t v174 = *(void *)(a1 + 56);
    uint64_t v182 = objc_msgSend_mq_cloudSyncVersions(WeakRetained, v175, v176, v177, v178, v179, v180, v181);
    uint64_t v190 = objc_msgSend_mutableCopy(v182, v183, v184, v185, v186, v187, v188, v189);
    (*(void (**)(uint64_t, void *, void *, void *))(v174 + 16))(v174, v104, v190, v173);
  }
  else
  {
    uint64_t v172 = BDSCloudKitLog();
    if (os_log_type_enabled(v172, OS_LOG_TYPE_ERROR)) {
      sub_2361FD06C();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_236121028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23612104C(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_2361210C4(uint64_t a1)
{
  uint64_t v194 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v11, v12, v13, v14, v15, v16, v17);
  int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

  if (v26)
  {
    uint64_t v27 = BDSCloudKitDevelopmentLog();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
      uint64_t v43 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v36, v37, v38, v39, v40, v41, v42);
      *(_DWORD *)long long buf = 138543618;
      id v191 = v35;
      __int16 v192 = 2114;
      uint64_t v193 = v43;
      _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);
    }
  }
  id v44 = objc_alloc(MEMORY[0x263EFF260]);
  uint64_t v52 = objc_msgSend_entityName(WeakRetained, v45, v46, v47, v48, v49, v50, v51);
  uint64_t v59 = objc_msgSend_initWithEntityName_(v44, v53, (uint64_t)v52, v54, v55, v56, v57, v58);

  objc_msgSend_setFetchBatchSize_(v59, v60, 64, v61, v62, v63, v64, v65);
  uint64_t v181 = a1;
  objc_msgSend_setPredicate_(v59, v66, *(void *)(a1 + 32), v67, v68, v69, v70, v71);
  id v188 = 0;
  uint64_t v182 = v10;
  uint64_t v77 = objc_msgSend_executeFetchRequest_error_(v10, v72, (uint64_t)v59, (uint64_t)&v188, v73, v74, v75, v76);
  id v78 = v188;
  objc_msgSend__logError_at_(WeakRetained, v79, (uint64_t)v78, @"cloudDatas - fetch", v80, v81, v82, v83);
  uint64_t v84 = (void *)MEMORY[0x263EFF980];
  uint64_t v92 = objc_msgSend_count(v77, v85, v86, v87, v88, v89, v90, v91);
  uint64_t v99 = objc_msgSend_arrayWithCapacity_(v84, v93, v92, v94, v95, v96, v97, v98);
  uint64_t v107 = objc_msgSend_privacyDelegate(WeakRetained, v100, v101, v102, v103, v104, v105, v106);
  long long v184 = 0u;
  long long v185 = 0u;
  long long v186 = 0u;
  long long v187 = 0u;
  id v108 = v77;
  uint64_t v113 = objc_msgSend_countByEnumeratingWithState_objects_count_(v108, v109, (uint64_t)&v184, (uint64_t)v189, 16, v110, v111, v112);
  if (v113)
  {
    uint64_t v120 = v113;
    uint64_t v121 = *(void *)v185;
    do
    {
      for (uint64_t i = 0; i != v120; ++i)
      {
        if (*(void *)v185 != v121) {
          objc_enumerationMutation(v108);
        }
        uint64_t v123 = *(void **)(*((void *)&v184 + 1) + 8 * i);
        objc_msgSend_setPrivacyDelegate_(v123, v114, (uint64_t)v107, v115, v116, v117, v118, v119);
        uint64_t v131 = objc_msgSend_mutableCopy(v123, v124, v125, v126, v127, v128, v129, v130);
        objc_msgSend_setPrivacyDelegate_(v131, v132, (uint64_t)v107, v133, v134, v135, v136, v137);
        if (v131) {
          objc_msgSend_addObject_(v99, v138, (uint64_t)v131, v139, v140, v141, v142, v143);
        }
      }
      uint64_t v120 = objc_msgSend_countByEnumeratingWithState_objects_count_(v108, v114, (uint64_t)&v184, (uint64_t)v189, 16, v117, v118, v119);
    }
    while (v120);
  }

  if (objc_msgSend_hasChanges(v182, v144, v145, v146, v147, v148, v149, v150))
  {
    id v183 = v78;
    objc_msgSend_save_(v182, v151, (uint64_t)&v183, v152, v153, v154, v155, v156);
    id v157 = v183;

    objc_msgSend__logError_at_(WeakRetained, v158, (uint64_t)v157, @"cloudDatas - save", v159, v160, v161, v162);
    id v78 = v157;
  }
  uint64_t v163 = objc_msgSend_mq_sanitizeError_(WeakRetained, v151, (uint64_t)v78, v152, v153, v154, v155, v156);

  uint64_t v164 = *(void *)(v181 + 40);
  uint64_t v172 = objc_msgSend_mq_cloudSyncVersions(WeakRetained, v165, v166, v167, v168, v169, v170, v171);
  uint64_t v180 = objc_msgSend_mutableCopy(v172, v173, v174, v175, v176, v177, v178, v179);
  (*(void (**)(uint64_t, void *, void *, void *))(v164 + 16))(v164, v99, v180, v163);
}

void sub_2361215F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23612161C(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_236121690(uint64_t a1)
{
  uint64_t v138 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v26 = objc_msgSend_verboseLoggingEnabled(v18, v19, v20, v21, v22, v23, v24, v25);

    if (v26)
    {
      uint64_t v27 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v35 = objc_msgSend_entityName(WeakRetained, v28, v29, v30, v31, v32, v33, v34);
        uint64_t v43 = objc_msgSend_debugDescription(*(void **)(a1 + 32), v36, v37, v38, v39, v40, v41, v42);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v135 = v35;
        __int16 v136 = 2114;
        uint64_t v137 = v43;
        _os_log_impl(&dword_2360BC000, v27, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);
      }
    }
    id v44 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v52 = objc_msgSend_entityName(WeakRetained, v45, v46, v47, v48, v49, v50, v51);
    uint64_t v59 = objc_msgSend_initWithEntityName_(v44, v53, (uint64_t)v52, v54, v55, v56, v57, v58);

    objc_msgSend_setFetchBatchSize_(v59, v60, 64, v61, v62, v63, v64, v65);
    objc_msgSend_setPredicate_(v59, v66, *(void *)(a1 + 32), v67, v68, v69, v70, v71);
    id v132 = 0;
    uint64_t v127 = v17;
    uint64_t v77 = objc_msgSend_executeFetchRequest_error_(v17, v72, (uint64_t)v59, (uint64_t)&v132, v73, v74, v75, v76);
    id v78 = v132;
    objc_msgSend__logError_at_(WeakRetained, v79, (uint64_t)v78, @"transformedCloudDatas", v80, v81, v82, v83);
    uint64_t v84 = (void *)MEMORY[0x263EFF980];
    uint64_t v92 = objc_msgSend_count(v77, v85, v86, v87, v88, v89, v90, v91);
    uint64_t v99 = objc_msgSend_arrayWithCapacity_(v84, v93, v92, v94, v95, v96, v97, v98);
    long long v128 = 0u;
    long long v129 = 0u;
    long long v130 = 0u;
    long long v131 = 0u;
    id v100 = v77;
    uint64_t v105 = objc_msgSend_countByEnumeratingWithState_objects_count_(v100, v101, (uint64_t)&v128, (uint64_t)v133, 16, v102, v103, v104);
    if (v105)
    {
      uint64_t v106 = v105;
      uint64_t v107 = *(void *)v129;
      do
      {
        for (uint64_t i = 0; i != v106; ++i)
        {
          if (*(void *)v129 != v107) {
            objc_enumerationMutation(v100);
          }
          uint64_t v115 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
          if (v115) {
            objc_msgSend_addObject_(v99, v109, (uint64_t)v115, v110, v111, v112, v113, v114);
          }
        }
        uint64_t v106 = objc_msgSend_countByEnumeratingWithState_objects_count_(v100, v116, (uint64_t)&v128, (uint64_t)v133, 16, v117, v118, v119);
      }
      while (v106);
    }

    uint64_t v126 = objc_msgSend_mq_sanitizeError_(WeakRetained, v120, (uint64_t)v78, v121, v122, v123, v124, v125);

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    uint64_t v17 = v127;
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_236121C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_236121C48(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_236121CBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v12 = objc_msgSend_moc(WeakRetained, v5, v6, v7, v8, v9, v10, v11);

  if (v12)
  {
    uint64_t v20 = objc_msgSend_moc(WeakRetained, v13, v14, v15, v16, v17, v18, v19);
    v32[0] = MEMORY[0x263EF8330];
    v32[1] = 3221225472;
    v32[2] = sub_236121E48;
    v32[3] = &unk_264CA28A0;
    objc_copyWeak(&v39, (id *)(a1 + 72));
    id v33 = v3;
    id v34 = *(id *)(a1 + 32);
    id v21 = *(id *)(a1 + 40);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = *(void **)(a1 + 56);
    id v35 = v21;
    uint64_t v36 = v22;
    id v37 = v23;
    id v38 = *(id *)(a1 + 64);
    objc_msgSend_performBlock_(v20, v24, (uint64_t)v32, v25, v26, v27, v28, v29);

    objc_destroyWeak(&v39);
  }
  else
  {
    uint64_t v30 = _Block_copy(*(const void **)(a1 + 64));
    uint64_t v31 = v30;
    if (v30) {
      (*((void (**)(void *, void, void))v30 + 2))(v30, 0, 0);
    }
  }
}

void sub_236121E34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_236121E48(uint64_t a1)
{
  uint64_t v339 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = objc_msgSend_shared(MEMORY[0x263F2BA58], v10, v11, v12, v13, v14, v15, v16);
    int v27 = objc_msgSend_verboseLoggingEnabled(v19, v20, v21, v22, v23, v24, v25, v26);

    if (!v18)
    {
      if (v27)
      {
        uint64_t v121 = BDSCloudKitDevelopmentLog();
        if (os_log_type_enabled(v121, OS_LOG_TYPE_DEFAULT))
        {
          long long v129 = objc_msgSend_debugDescription(*(void **)(a1 + 40), v122, v123, v124, v125, v126, v127, v128);
          *(_DWORD *)long long buf = 138543362;
          uint64_t v336 = v129;
          _os_log_impl(&dword_2360BC000, v121, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);
        }
      }
      id v130 = objc_alloc(MEMORY[0x263EFF260]);
      uint64_t v138 = objc_msgSend_entityName(WeakRetained, v131, v132, v133, v134, v135, v136, v137);
      uint64_t v52 = objc_msgSend_initWithEntityName_(v130, v139, (uint64_t)v138, v140, v141, v142, v143, v144);

      objc_msgSend_setReturnsObjectsAsFaults_(v52, v145, 0, v146, v147, v148, v149, v150);
      objc_msgSend_setFetchLimit_(v52, v151, 1, v152, v153, v154, v155, v156);
      objc_msgSend_setPredicate_(v52, v157, *(void *)(a1 + 40), v158, v159, v160, v161, v162);
      id v332 = 0;
      uint64_t v168 = objc_msgSend_executeFetchRequest_error_(v17, v163, (uint64_t)v52, (uint64_t)&v332, v164, v165, v166, v167);
      id v169 = v332;
      objc_msgSend__logError_at_(WeakRetained, v170, (uint64_t)v169, @"resolvedCloudData - fetch (new)", v171, v172, v173, v174);
      uint64_t v182 = objc_msgSend_firstObject(v168, v175, v176, v177, v178, v179, v180, v181);
      uint64_t v190 = objc_msgSend_privacyDelegate(WeakRetained, v183, v184, v185, v186, v187, v188, v189);
      objc_msgSend_setPrivacyDelegate_(v182, v191, (uint64_t)v190, v192, v193, v194, v195, v196);

      long long v203 = objc_msgSend_mq_sanitizeError_(WeakRetained, v197, (uint64_t)v169, v198, v199, v200, v201, v202);

      uint64_t v211 = objc_msgSend_mutableCopy(v182, v204, v205, v206, v207, v208, v209, v210);
      uint64_t v212 = _Block_copy(*(const void **)(a1 + 72));
      long long v213 = v212;
      if (v212) {
        (*((void (**)(void *, void *, void *))v212 + 2))(v212, v211, v203);
      }

      goto LABEL_36;
    }
    if (v27)
    {
      uint64_t v28 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v36 = objc_msgSend_debugDescription(*(void **)(a1 + 40), v29, v30, v31, v32, v33, v34, v35);
        *(_DWORD *)long long buf = 138543362;
        uint64_t v336 = v36;
        _os_log_impl(&dword_2360BC000, v28, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v37 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v45 = objc_msgSend_entityName(WeakRetained, v38, v39, v40, v41, v42, v43, v44);
    uint64_t v52 = objc_msgSend_initWithEntityName_(v37, v46, (uint64_t)v45, v47, v48, v49, v50, v51);

    objc_msgSend_setReturnsObjectsAsFaults_(v52, v53, 0, v54, v55, v56, v57, v58);
    objc_msgSend_setFetchLimit_(v52, v59, 1, v60, v61, v62, v63, v64);
    objc_msgSend_setPredicate_(v52, v65, *(void *)(a1 + 40), v66, v67, v68, v69, v70);
    id v334 = 0;
    uint64_t v76 = objc_msgSend_executeFetchRequest_error_(v17, v71, (uint64_t)v52, (uint64_t)&v334, v72, v73, v74, v75);
    id v77 = v334;
    objc_msgSend__logError_at_(WeakRetained, v78, (uint64_t)v77, @"resolvedCloudData - fetch (existing)", v79, v80, v81, v82);
    uint64_t v90 = objc_msgSend_privacyDelegate(WeakRetained, v83, v84, v85, v86, v87, v88, v89);
    uint64_t v98 = objc_msgSend_firstObject(v76, v91, v92, v93, v94, v95, v96, v97);
    if (v98)
    {
      uint64_t v106 = v98;
      objc_msgSend_setPrivacyDelegate_(v98, v99, (uint64_t)v90, v101, v102, v103, v104, v105);
      objc_msgSend_resolveConflictsFromRecord_withResolvers_(v106, v107, *(void *)(a1 + 32), *(void *)(a1 + 48), v108, v109, v110, v111);
      if (!v77)
      {
LABEL_30:
        if (objc_msgSend_hasChanges(v106, v112, v113, v114, v115, v116, v117, v118))
        {
          objc_msgSend_mq_incrementCloudVersion(WeakRetained, v112, v302, v114, v115, v116, v117, v118);
          id v333 = 0;
          objc_msgSend_save_(v17, v303, (uint64_t)&v333, v304, v305, v306, v307, v308);
          id v77 = v333;
          objc_msgSend__logError_at_(WeakRetained, v309, (uint64_t)v77, @"resolvedCloudData - save", v310, v311, v312, v313);
          objc_msgSend_mq_signalTransactions(WeakRetained, v314, v315, v316, v317, v318, v319, v320);
        }
        else
        {
          id v77 = 0;
        }
      }
LABEL_33:
      uint64_t v321 = objc_msgSend_mq_sanitizeError_(WeakRetained, v112, (uint64_t)v77, v114, v115, v116, v117, v118);

      v329 = objc_msgSend_mutableCopy(v106, v322, v323, v324, v325, v326, v327, v328);
      uint64_t v330 = _Block_copy(*(const void **)(a1 + 72));
      uint64_t v331 = v330;
      if (v330) {
        (*((void (**)(void *, void *, void *))v330 + 2))(v330, v329, v321);
      }

LABEL_36:
      goto LABEL_37;
    }
    long long v214 = objc_msgSend_shared(MEMORY[0x263F2BA58], v99, v100, v101, v102, v103, v104, v105);
    int v222 = objc_msgSend_verboseLoggingEnabled(v214, v215, v216, v217, v218, v219, v220, v221);

    if (v222)
    {
      id v230 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v230, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v238 = objc_msgSend_recordID(*(void **)(a1 + 32), v231, v232, v233, v234, v235, v236, v237);
        uint64_t v246 = objc_msgSend_recordName(v238, v239, v240, v241, v242, v243, v244, v245);
        uint64_t v247 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v336 = v246;
        __int16 v337 = 2112;
        uint64_t v338 = v247;
        _os_log_impl(&dword_2360BC000, v230, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@ did not find existing record.  Creating new from %@\\\"\"", buf, 0x16u);
      }
    }
    v248 = objc_msgSend_dataMapper(*(void **)(a1 + 56), v223, v224, v225, v226, v227, v228, v229);

    if (v248)
    {
      uint64_t v256 = objc_msgSend_dataMapper(*(void **)(a1 + 56), v249, v250, v251, v252, v253, v254, v255);
      uint64_t v263 = objc_msgSend_cloudDataFromRecord_(v256, v257, *(void *)(a1 + 32), v258, v259, v260, v261, v262);

      if (v263)
      {
LABEL_26:
        v271 = (void *)MEMORY[0x263EFF240];
        uint64_t v272 = objc_msgSend_entityName(WeakRetained, v264, v265, v266, v267, v268, v269, v270);
        uint64_t v106 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v271, v273, (uint64_t)v272, (uint64_t)v17, v274, v275, v276, v277);

        objc_msgSend_setPrivacyDelegate_(v106, v278, (uint64_t)v90, v279, v280, v281, v282, v283);
        objc_msgSend_setPrivacyDelegate_(v263, v284, (uint64_t)v90, v285, v286, v287, v288, v289);
        objc_msgSend_configureFromCloudData_withMergers_(v106, v290, (uint64_t)v263, *(void *)(a1 + 64), v291, v292, v293, v294);
        goto LABEL_29;
      }
    }
    else
    {
      id v295 = objc_alloc((Class)objc_msgSend_mutableClass(WeakRetained, v249, v250, v251, v252, v253, v254, v255));
      uint64_t v263 = objc_msgSend_initWithRecord_(v295, v296, *(void *)(a1 + 32), v297, v298, v299, v300, v301);
      if (v263) {
        goto LABEL_26;
      }
    }
    uint64_t v106 = 0;
LABEL_29:

    if (!v77) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
  uint64_t v119 = _Block_copy(*(const void **)(a1 + 72));
  uint64_t v120 = v119;
  if (v119) {
    (*((void (**)(void *, void, void))v119 + 2))(v119, 0, 0);
  }

LABEL_37:
}

void sub_236122628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23612264C(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  id v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_2361226C4(uint64_t a1)
{
  uint64_t v464 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v15 = objc_msgSend_moc(WeakRetained, v1, v2, v3, v4, v5, v6, v7);
  if (!v15)
  {
    uint64_t v411 = _Block_copy(*(const void **)(a1 + 64));
    v412 = v411;
    if (v411) {
      (*((void (**)(void *, void, void, void))v411 + 2))(v411, 0, 0, 0);
    }

    goto LABEL_81;
  }
  uint64_t v425 = objc_msgSend_privacyDelegate(WeakRetained, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v426 = objc_msgSend_array(MEMORY[0x263EFF980], v16, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = BDSCloudKitLog();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v24 = (objc_class *)MEMORY[0x263EFF980];
    id v25 = *(id *)(a1 + 32);
    id v26 = objc_alloc_init(v24);
    *(void *)long long buf = MEMORY[0x263EF8330];
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_236125D08;
    v459 = &unk_264CA29B8;
    *(void *)uint64_t v460 = v26;
    id v27 = v26;
    objc_msgSend_enumerateObjectsUsingBlock_(v25, v28, (uint64_t)buf, v29, v30, v31, v32, v33);
    uint64_t v40 = objc_msgSend_componentsJoinedByString_(v27, v34, @",", v35, v36, v37, v38, v39);

    *(_DWORD *)long long buf = 138543362;
    *(void *)&uint8_t buf[4] = v40;
    _os_log_impl(&dword_2360BC000, v23, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@", buf, 0xCu);
  }
  uint64_t v433 = objc_msgSend_count(*(void **)(a1 + 32), v41, v42, v43, v44, v45, v46, v47);
  uint64_t v429 = objc_opt_new();
  id v428 = objc_alloc_init(MEMORY[0x263EFF9A0]);
  uint64_t v438 = objc_opt_new();
  long long v455 = 0u;
  long long v456 = 0u;
  long long v453 = 0u;
  long long v454 = 0u;
  id v48 = *(id *)(a1 + 32);
  uint64_t v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v48, v49, (uint64_t)&v453, (uint64_t)v463, 16, v50, v51, v52);
  if (v60)
  {
    uint64_t v61 = *(void *)v454;
    do
    {
      for (uint64_t i = 0; i != v60; ++i)
      {
        if (*(void *)v454 != v61) {
          objc_enumerationMutation(v48);
        }
        uint64_t v63 = *(void **)(*((void *)&v453 + 1) + 8 * i);
        uint64_t v64 = objc_msgSend_encryptedValuesByKey(v63, v53, v54, v55, v56, v57, v58, v59);
        objc_msgSend_objectForKeyedSubscript_(v64, v65, @"localRecordIDEncrypted", v66, v67, v68, v69, v70);
        uint64_t v71 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (!v71)
        {
          objc_msgSend_valueForKey_(v63, v72, @"localRecordID", v73, v74, v75, v76, v77);
          uint64_t v71 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (!v71)
          {
            id v78 = BDSCloudKitLog();
            if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 138543362;
              *(void *)&uint8_t buf[4] = v63;
              _os_log_error_impl(&dword_2360BC000, v78, OS_LOG_TYPE_ERROR, "CKRecord unexpected with no local identifier: %{public}@", buf, 0xCu);
            }

            uint64_t v71 = @"keyFromMyKitchenDrawer";
          }
        }
        objc_msgSend_addObject_(v438, v72, (uint64_t)v71, v73, v74, v75, v76, v77);
      }
      uint64_t v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v48, v53, (uint64_t)&v453, (uint64_t)v463, 16, v57, v58, v59);
    }
    while (v60);
  }

  uint64_t v86 = objc_msgSend_immutableClass(WeakRetained, v79, v80, v81, v82, v83, v84, v85);
  v427 = objc_msgSend_propertyIDKey(v86, v87, v88, v89, v90, v91, v92, v93);
  uint64_t v424 = objc_msgSend_entityName(WeakRetained, v94, v95, v96, v97, v98, v99, v100);
  uint64_t v449 = 0;
  id v450 = &v449;
  uint64_t v451 = 0x2020000000;
  int v452 = 0;
  if (!v433)
  {
    uint64_t v436 = 0;
    goto LABEL_73;
  }
  char v423 = 0;
  uint64_t v434 = 0;
  uint64_t v436 = 0;
  uint64_t v108 = 0;
  uint64_t v431 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v432 = 0;
  do
  {
    context = (void *)MEMORY[0x237DFE9C0]();
    uint64_t v121 = objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v109, v108, v110, v111, v112, v113, v114);
    if ((v108 & 0xF) != 0)
    {
      uint64_t v122 = v436;
LABEL_20:
      uint64_t v123 = objc_msgSend_localIdentifierFromRecord_(BCCloudData, v115, (uint64_t)v121, v116, v117, v118, v119, v120);
      uint64_t v136 = objc_msgSend_objectForKeyedSubscript_(v122, v124, (uint64_t)v123, v125, v126, v127, v128, v129);
      if (v136) {
        goto LABEL_21;
      }
      uint64_t v243 = objc_msgSend_objectForKeyedSubscript_(v428, v130, (uint64_t)v123, v131, v132, v133, v134, v135);
      BOOL v244 = v243 == 0;

      if (v244) {
        goto LABEL_36;
      }
      uint64_t v136 = objc_msgSend_objectForKeyedSubscript_(v428, v130, (uint64_t)v123, v131, v132, v133, v134, v135);
      uint64_t v246 = BDSCloudKitLog();
      if (os_log_type_enabled(v246, OS_LOG_TYPE_ERROR))
      {
        uint64_t v380 = objc_msgSend_recordID(v121, v247, v248, v249, v250, v251, v252, v253);
        v388 = objc_msgSend_recordName(v380, v381, v382, v383, v384, v385, v386, v387);
        *(_DWORD *)long long buf = 138544386;
        *(void *)&uint8_t buf[4] = v388;
        *(_WORD *)&buf[12] = 2160;
        *(void *)&buf[14] = 1752392040;
        *(_WORD *)&buf[22] = 2112;
        v459 = v123;
        *(_WORD *)uint64_t v460 = 2112;
        *(void *)&v460[2] = v136;
        __int16 v461 = 2112;
        uint64_t v462 = v121;
        _os_log_error_impl(&dword_2360BC000, v246, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ Already seen (localId: %{mask.hash}@) %@. Updating from %@", buf, 0x34u);
      }
      if (v136)
      {
LABEL_21:
        objc_msgSend_setPrivacyDelegate_(v136, v130, (uint64_t)v425, v131, v132, v133, v134, v135);
        objc_msgSend_resolveConflictsFromRecord_withResolvers_(v136, v137, (uint64_t)v121, *(void *)(a1 + 40), v138, v139, v140, v141);
      }
      else
      {
LABEL_36:
        uint64_t v254 = objc_msgSend_dataMapper(*(void **)(a1 + 48), v130, v245, v131, v132, v133, v134, v135);
        BOOL v255 = v254 == 0;

        if (v255)
        {
          id v278 = objc_alloc((Class)objc_msgSend_mutableClass(WeakRetained, v256, v257, v258, v259, v260, v261, v262));
          uint64_t v270 = objc_msgSend_initWithRecord_(v278, v279, (uint64_t)v121, v280, v281, v282, v283, v284);
          if (!v270)
          {
LABEL_52:

            uint64_t v136 = 0;
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v263 = objc_msgSend_dataMapper(*(void **)(a1 + 48), v256, v257, v258, v259, v260, v261, v262);
          uint64_t v270 = objc_msgSend_cloudDataFromRecord_(v263, v264, (uint64_t)v121, v265, v266, v267, v268, v269);

          if (!v270) {
            goto LABEL_52;
          }
        }
        uint64_t v285 = objc_msgSend_cloudKitController(*(void **)(a1 + 48), v271, v272, v273, v274, v275, v276, v277);
        uint64_t v293 = objc_msgSend_configuration(v285, v286, v287, v288, v289, v290, v291, v292);
        int shouldArchiveData = objc_msgSend_shouldArchiveData_(v293, v294, (uint64_t)v270, v295, v296, v297, v298, v299);

        if (!shouldArchiveData)
        {
          uint64_t v345 = BDSCloudKitLog();
          if (os_log_type_enabled(v345, OS_LOG_TYPE_ERROR))
          {
            v389 = objc_msgSend_recordID(v121, v346, v347, v348, v349, v350, v351, v352);
            v397 = objc_msgSend_recordName(v389, v390, v391, v392, v393, v394, v395, v396);
            *(_DWORD *)long long buf = 138543618;
            *(void *)&uint8_t buf[4] = v397;
            *(_WORD *)&buf[12] = 2112;
            *(void *)&buf[14] = v121;
            _os_log_error_impl(&dword_2360BC000, v345, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@", buf, 0x16u);
          }
          goto LABEL_52;
        }
        uint64_t v301 = BDSCloudKitLog();
        if (os_log_type_enabled(v301, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v309 = objc_msgSend_recordID(v121, v302, v303, v304, v305, v306, v307, v308);
          uint64_t v317 = objc_msgSend_recordName(v309, v310, v311, v312, v313, v314, v315, v316);
          *(_DWORD *)long long buf = 138544130;
          *(void *)&uint8_t buf[4] = v317;
          *(_WORD *)&buf[12] = 2160;
          *(void *)&buf[14] = 1752392040;
          *(_WORD *)&buf[22] = 2112;
          v459 = v123;
          *(_WORD *)uint64_t v460 = 2112;
          *(void *)&v460[2] = v121;
          _os_log_impl(&dword_2360BC000, v301, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager resolveConflictsForRecords:%{public}@ (localId: %{mask.hash}@) did not find existing record. Creating new from %@", buf, 0x2Au);
        }
        uint64_t v136 = objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(MEMORY[0x263EFF240], v318, (uint64_t)v424, (uint64_t)v15, v319, v320, v321, v322);
        objc_msgSend_setObject_forKeyedSubscript_(v428, v323, (uint64_t)v136, (uint64_t)v123, v324, v325, v326, v327);
        objc_msgSend_setPrivacyDelegate_(v136, v328, (uint64_t)v425, v329, v330, v331, v332, v333);
        objc_msgSend_setPrivacyDelegate_(v270, v334, (uint64_t)v425, v335, v336, v337, v338, v339);
        objc_msgSend_configureFromCloudData_withMergers_(v136, v340, (uint64_t)v270, *(void *)(a1 + 56), v341, v342, v343, v344);

        if (!v136)
        {
LABEL_23:
          if (v108 == v434 + v431 - 1)
          {
            if (!v432 && objc_msgSend_hasChanges(v15, v142, v154, v143, v144, v145, v146, v147))
            {
              id v444 = 0;
              objc_msgSend_save_(v15, v155, (uint64_t)&v444, v156, v157, v158, v159, v160);
              id v161 = v444;
              if (v161)
              {
                id v167 = v161;
                objc_msgSend__logError_at_(WeakRetained, v162, (uint64_t)v161, @"resolveConflicts - save batch", v163, v164, v165, v166);
                objc_msgSend_removeObjectsInArray_(v426, v168, (uint64_t)v429, v169, v170, v171, v172, v173);
                char v423 = 1;
                int v174 = 4;
                uint64_t v432 = v167;
LABEL_63:

                uint64_t v436 = v122;
                goto LABEL_64;
              }
              char v423 = 1;
            }
            long long v442 = 0u;
            long long v443 = 0u;
            long long v440 = 0u;
            long long v441 = 0u;
            id v353 = v429;
            uint64_t v363 = objc_msgSend_countByEnumeratingWithState_objects_count_(v353, v354, (uint64_t)&v440, (uint64_t)v457, 16, v355, v356, v357);
            if (v363)
            {
              uint64_t v364 = *(void *)v441;
              do
              {
                for (uint64_t j = 0; j != v363; ++j)
                {
                  if (*(void *)v441 != v364) {
                    objc_enumerationMutation(v353);
                  }
                  objc_msgSend_refreshObject_mergeChanges_(v15, v358, *(void *)(*((void *)&v440 + 1) + 8 * j), 0, v359, v360, v361, v362);
                }
                uint64_t v363 = objc_msgSend_countByEnumeratingWithState_objects_count_(v353, v358, (uint64_t)&v440, (uint64_t)v457, 16, v360, v361, v362);
              }
              while (v363);
            }

            objc_msgSend_removeAllObjects(v353, v366, v367, v368, v369, v370, v371, v372);
            objc_msgSend_removeAllObjects(v428, v373, v374, v375, v376, v377, v378, v379);
          }
          int v174 = 0;
          goto LABEL_63;
        }
      }
      objc_msgSend_addObject_(v426, v142, (uint64_t)v136, v143, v144, v145, v146, v147);
      objc_msgSend_addObject_(v429, v148, (uint64_t)v136, v149, v150, v151, v152, v153);
      goto LABEL_23;
    }
    uint64_t v175 = (void *)MEMORY[0x237DFE9C0]();
    uint64_t v176 = v433 - v108;
    if ((unint64_t)(v433 - v108) >= 0x10) {
      uint64_t v176 = 16;
    }
    uint64_t v434 = v176;
    id v177 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v185 = objc_msgSend_entityName(WeakRetained, v178, v179, v180, v181, v182, v183, v184);
    uint64_t v192 = objc_msgSend_initWithEntityName_(v177, v186, (uint64_t)v185, v187, v188, v189, v190, v191);

    uint64_t v198 = objc_msgSend_subarrayWithRange_(v438, v193, v108, v434, v194, v195, v196, v197);
    uint64_t v206 = objc_msgSend_mutableCopy(v198, v199, v200, v201, v202, v203, v204, v205);

    objc_msgSend_removeObject_(v206, v207, @"keyFromMyKitchenDrawer", v208, v209, v210, v211, v212);
    uint64_t v219 = objc_msgSend_predicateWithFormat_(MEMORY[0x263F08A98], v213, @"%K IN %@", v214, v215, v216, v217, v218, v427, v206);
    objc_msgSend_setPredicate_(v192, v220, (uint64_t)v219, v221, v222, v223, v224, v225);

    id v448 = v432;
    __int16 v231 = objc_msgSend_executeFetchRequest_error_(v15, v226, (uint64_t)v192, (uint64_t)&v448, v227, v228, v229, v230);
    id v232 = v448;

    v445[0] = MEMORY[0x263EF8330];
    v445[1] = 3221225472;
    v445[2] = sub_23612335C;
    v445[3] = &unk_264CA28F0;
    id v446 = v427;
    uint64_t v447 = &v449;
    uint64_t v122 = objc_msgSend_bds_dictionaryUsingPropertyAsKey_uniquingKeysWith_(v231, v233, (uint64_t)v446, (uint64_t)v445, v234, v235, v236, v237);

    if (v232)
    {
      objc_msgSend__logError_at_(WeakRetained, v238, (uint64_t)v232, @"resolveConflicts - fetch", v239, v240, v241, v242);
      int v174 = 4;
    }
    else
    {
      int v174 = 0;
    }

    if (!v232)
    {
      uint64_t v431 = v108;
      uint64_t v432 = 0;
      goto LABEL_20;
    }
    uint64_t v436 = v122;
    uint64_t v431 = v108;
    uint64_t v432 = v232;
LABEL_64:

    if (v174) {
      break;
    }
    ++v108;
  }
  while (v108 != v433);
  id v398 = v432;
  if ((v423 & (v432 == 0)) != 1) {
    goto LABEL_74;
  }
  objc_msgSend_mq_incrementCloudVersion(WeakRetained, v101, v102, v103, v104, v105, v106, v107);
  if (objc_msgSend_hasChanges(v15, v399, v400, v401, v402, v403, v404, v405))
  {
    id v439 = 0;
    objc_msgSend_save_(v15, v101, (uint64_t)&v439, v103, v104, v105, v106, v107);
    id v398 = v439;
    objc_msgSend__logError_at_(WeakRetained, v406, (uint64_t)v398, @"resolveConflicts - save remaining", v407, v408, v409, v410);
    goto LABEL_74;
  }
LABEL_73:
  id v398 = 0;
LABEL_74:
  if (*((_DWORD *)v450 + 6))
  {
    v413 = BDSCloudKitLog();
    if (os_log_type_enabled(v413, OS_LOG_TYPE_FAULT)) {
      sub_2361FD0A0();
    }
  }
  objc_msgSend_mq_signalTransactions(WeakRetained, v101, v102, v103, v104, v105, v106, v107);
  v420 = objc_msgSend_mq_sanitizeError_(WeakRetained, v414, (uint64_t)v398, v415, v416, v417, v418, v419);

  v421 = _Block_copy(*(const void **)(a1 + 64));
  uint64_t v422 = v421;
  if (v421) {
    (*((void (**)(void *, uint64_t, void *, void *))v421 + 2))(v421, 1, v426, v420);
  }

  _Block_object_dispose(&v449, 8);
LABEL_81:
}

void sub_2361232F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

id sub_23612335C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = objc_msgSend_valueForKey_(v5, v7, *(void *)(a1 + 32), v8, v9, v10, v11, v12);
  uint64_t v14 = BDSCloudKitLog();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    int v16 = 141558786;
    uint64_t v17 = 1752392040;
    __int16 v18 = 2112;
    uint64_t v19 = v13;
    __int16 v20 = 2112;
    id v21 = v6;
    __int16 v22 = 2112;
    id v23 = v5;
    _os_log_error_impl(&dword_2360BC000, v14, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords: Encountered duplicates for %{mask.hash}@, entry=%@, existing=%@", (uint8_t *)&v16, 0x2Au);
  }

  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return v5;
}

void sub_23612361C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_236123640(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_2361236B4(uint64_t a1)
{
  uint64_t v122 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v10)
  {
    uint64_t v11 = BDSCloudKitLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_2361FD120(a1, v11, v12);
    }

    id v13 = objc_alloc(MEMORY[0x263EFF260]);
    id v21 = objc_msgSend_entityName(WeakRetained, v14, v15, v16, v17, v18, v19, v20);
    uint64_t v28 = objc_msgSend_initWithEntityName_(v13, v22, (uint64_t)v21, v23, v24, v25, v26, v27);

    uint64_t v35 = objc_msgSend_valueForKey_(*(void **)(a1 + 32), v29, @"recordName", v30, v31, v32, v33, v34);
    uint64_t v42 = objc_msgSend_predicateWithFormat_(MEMORY[0x263F08A98], v36, @"saltedHashedID IN %@", v37, v38, v39, v40, v41, v35);
    objc_msgSend_setPredicate_(v28, v43, (uint64_t)v42, v44, v45, v46, v47, v48);

    id v120 = 0;
    uint64_t v54 = objc_msgSend_executeFetchRequest_error_(v10, v49, (uint64_t)v28, (uint64_t)&v120, v50, v51, v52, v53);
    id v55 = v120;
    objc_msgSend__logError_at_(WeakRetained, v56, (uint64_t)v55, @"resolveConflicts - failedRecordIDs - fetch", v57, v58, v59, v60);
    long long v118 = 0u;
    long long v119 = 0u;
    long long v116 = 0u;
    long long v117 = 0u;
    id v61 = v54;
    uint64_t v66 = objc_msgSend_countByEnumeratingWithState_objects_count_(v61, v62, (uint64_t)&v116, (uint64_t)v121, 16, v63, v64, v65);
    if (v66)
    {
      uint64_t v73 = v66;
      uint64_t v74 = *(void *)v117;
      do
      {
        for (uint64_t i = 0; i != v73; ++i)
        {
          if (*(void *)v117 != v74) {
            objc_enumerationMutation(v61);
          }
          objc_msgSend_setSystemFields_(*(void **)(*((void *)&v116 + 1) + 8 * i), v67, 0, v68, v69, v70, v71, v72);
        }
        uint64_t v73 = objc_msgSend_countByEnumeratingWithState_objects_count_(v61, v67, (uint64_t)&v116, (uint64_t)v121, 16, v70, v71, v72);
      }
      while (v73);
    }

    if (objc_msgSend_hasChanges(v10, v76, v77, v78, v79, v80, v81, v82))
    {
      id v115 = v55;
      objc_msgSend_save_(v10, v83, (uint64_t)&v115, v84, v85, v86, v87, v88);
      id v89 = v115;

      objc_msgSend__logError_at_(WeakRetained, v90, (uint64_t)v89, @"resolveConflicts - failedRecordIDs - save", v91, v92, v93, v94);
      uint64_t v102 = objc_msgSend_syncManager(WeakRetained, v95, v96, v97, v98, v99, v100, v101);
      objc_msgSend_signalSyncToCK(v102, v103, v104, v105, v106, v107, v108, v109);

      id v55 = v89;
    }
    uint64_t v110 = objc_msgSend_mq_sanitizeError_(WeakRetained, v83, (uint64_t)v55, v84, v85, v86, v87, v88);

    uint64_t v111 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v112 = v111;
    if (v111) {
      (*((void (**)(void *, uint64_t, void *))v111 + 2))(v111, 1, v110);
    }
  }
  else
  {
    uint64_t v113 = _Block_copy(*(const void **)(a1 + 40));
    uint64_t v114 = v113;
    if (v113) {
      (*((void (**)(void *, void, void))v113 + 2))(v113, 0, 0);
    }
  }
}

void sub_236123EA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_236123ED0(uint64_t a1)
{
  BDSCloudKitLog();
  uint64_t v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_FAULT)) {
    sub_2361FD194(a1, v2, v3, v4, v5, v6, v7, v8);
  }

  uint64_t v9 = _Block_copy(*(const void **)(a1 + 40));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(void *, void, void, void, void, void))v9 + 2))(v9, 0, 0, 0, 0, 0);
  }
}

void sub_236123F54(uint64_t a1)
{
  uint64_t v353 = *MEMORY[0x263EF8340];
  kdebug_trace();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v17 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v17)
  {
    uint64_t v18 = objc_msgSend_mq_cloudSyncVersions(WeakRetained, v10, v11, v12, v13, v14, v15, v16);
    uint64_t v341 = 0;
    uint64_t v26 = objc_msgSend_cloudVersion(*(void **)(a1 + 32), v19, v20, v21, v22, v23, v24, v25);
    uint64_t v324 = v18;
    if (v26 <= objc_msgSend_cloudVersion(v18, v27, v28, v29, v30, v31, v32, v33))
    {
      uint64_t v63 = objc_msgSend_historyToken(*(void **)(a1 + 32), v34, v35, v36, v37, v38, v39, v40);
      uint64_t v341 = objc_msgSend_historyTokenOffset(*(void **)(a1 + 32), v73, v74, v75, v76, v77, v78, v79);
    }
    else
    {
      uint64_t v41 = BDSCloudKitLog();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v49 = objc_msgSend_entityName(*(void **)(a1 + 40), v42, v43, v44, v45, v46, v47, v48);
        uint64_t v50 = *(void *)(a1 + 32);
        uint64_t v58 = objc_msgSend_mutableCopy(v18, v51, v52, v53, v54, v55, v56, v57);
        *(_DWORD *)long long buf = 138543874;
        uint64_t v343 = v49;
        __int16 v344 = 2114;
        uint64_t v345 = v50;
        __int16 v346 = 2114;
        uint64_t v347 = v58;
        _os_log_impl(&dword_2360BC000, v41, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince -- About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x20u);
      }
      uint64_t v63 = 0;
    }
    uint64_t v81 = (void **)(a1 + 40);
    uint64_t v80 = *(void **)(a1 + 40);
    id v340 = 0;
    uint64_t v82 = objc_msgSend__fetchHistoryAfterToken_inMoc_error_(v80, v59, (uint64_t)v63, (uint64_t)v17, (uint64_t)&v340, v60, v61, v62);
    id v83 = v340;
    if (!v83) {
      goto LABEL_21;
    }
    id v91 = v83;
    if (!objc_msgSend__isTokenInvalidError_(*v81, v84, (uint64_t)v83, v86, v87, v88, v89, v90)) {
      goto LABEL_16;
    }
    uint64_t v92 = BDSCloudKitLog();
    if (os_log_type_enabled(v92, OS_LOG_TYPE_FAULT))
    {
      uint64_t v310 = objc_msgSend_entityName(*(void **)(a1 + 40), v93, v94, v95, v96, v97, v98, v99);
      uint64_t v323 = v82;
      uint64_t v311 = *(void **)(a1 + 32);
      uint64_t v319 = objc_msgSend_mutableCopy(v324, v312, v313, v314, v315, v316, v317, v318);
      *(_DWORD *)long long buf = 138544130;
      uint64_t v343 = v310;
      __int16 v344 = 2114;
      uint64_t v345 = (uint64_t)v91;
      __int16 v346 = 2114;
      uint64_t v347 = v311;
      uint64_t v82 = v323;
      __int16 v348 = 2114;
      uint64_t v349 = v319;
      _os_log_fault_impl(&dword_2360BC000, v92, OS_LOG_TYPE_FAULT, "BCCloudDataManager %{public}@ getChangesSince -- fetchHistoryAfterToken encountered error: %{public}@. About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x2Au);
    }
    uint64_t v341 = 0;

    uint64_t v100 = *v81;
    id v339 = 0;
    uint64_t v105 = objc_msgSend__fetchHistoryAfterToken_inMoc_error_(v100, v101, 0, (uint64_t)v17, (uint64_t)&v339, v102, v103, v104);
    id v91 = v339;

    uint64_t v63 = 0;
    uint64_t v82 = (void *)v105;
    if (v91)
    {
LABEL_16:
      BDSCloudKitLog();
      uint64_t v106 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v106, OS_LOG_TYPE_ERROR)) {
        sub_2361FD2A4((void **)(a1 + 40), v106, v107, v108, v109, v110, v111, v112);
      }

      objc_msgSend__logError_at_(WeakRetained, v113, (uint64_t)v91, @"getChangesSince - fetchHistory error", v114, v115, v116, v117);
      uint64_t v124 = objc_msgSend_mq_sanitizeError_(WeakRetained, v118, (uint64_t)v91, v119, v120, v121, v122, v123);

      uint64_t v125 = _Block_copy(*(const void **)(a1 + 48));
      uint64_t v126 = v125;
      if (v125) {
        (*((void (**)(void *, void, void, void, void *, void))v125 + 2))(v125, 0, 0, 0, v124, 0);
      }
      uint64_t v127 = 0;
      uint64_t v72 = v324;
    }
    else
    {
LABEL_21:
      uint64_t v321 = v63;
      uint64_t v327 = (uint64_t)v17;
      uint64_t v329 = objc_msgSend_set(MEMORY[0x263EFF9C0], v84, v85, v86, v87, v88, v89, v90);
      uint64_t v328 = objc_msgSend_set(MEMORY[0x263EFF9C0], v128, v129, v130, v131, v132, v133, v134);
      objc_opt_class();
      uint64_t v322 = v82;
      if (objc_opt_isKindOfClass())
      {
        id v142 = v82;
        long long v335 = 0u;
        long long v336 = 0u;
        long long v337 = 0u;
        long long v338 = 0u;
        objc_msgSend_result(v142, v143, v144, v145, v146, v147, v148, v149);
        obuint64_t j = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v154 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v150, (uint64_t)&v335, (uint64_t)v352, 16, v151, v152, v153);
        if (v154)
        {
          uint64_t v155 = v154;
          id v320 = v142;
          unint64_t v156 = 0;
          uint64_t v330 = 0;
          uint64_t v157 = *(void *)v336;
          while (2)
          {
            uint64_t v158 = 0;
            uint64_t v325 = v155;
            do
            {
              if (*(void *)v336 != v157) {
                objc_enumerationMutation(obj);
              }
              uint64_t v159 = *(void **)(*((void *)&v335 + 1) + 8 * v158);
              uint64_t v160 = (void *)MEMORY[0x237DFE9C0]();
              if (objc_msgSend_signalDataChangedTransaction(WeakRetained, v161, v162, v163, v164, v165, v166, v167)&& v156 > 0x1F)
              {
                uint64_t v216 = 1;
                goto LABEL_38;
              }
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                id v168 = v159;
                uint64_t v169 = a1;
                uint64_t v170 = *(void *)(a1 + 64);
                uint64_t v178 = objc_msgSend_privacyDelegate(WeakRetained, v171, v172, v173, v174, v175, v176, v177);
                id v333 = 0;
                id v334 = 0;
                int v180 = objc_msgSend_bds_atOffset_getAtMost_moc_entityClass_privacyDelegate_updated_tombstones_(v168, v179, (uint64_t)&v341, 32 - v156, v327, v170, (uint64_t)v178, (uint64_t)&v334, &v333);
                id v181 = v334;
                id v182 = v333;

                if (v180)
                {
                  uint64_t v190 = objc_msgSend_token(v168, v183, v184, v185, v186, v187, v188, v189);

                  uint64_t v341 = 0;
                  uint64_t v330 = (void *)v190;
                }
                objc_msgSend_addObjectsFromArray_(v328, v183, (uint64_t)v181, v185, v186, v187, v188, v189);
                objc_msgSend_addObjectsFromArray_(v329, v191, (uint64_t)v182, v192, v193, v194, v195, v196);
                uint64_t v204 = objc_msgSend_count(v328, v197, v198, v199, v200, v201, v202, v203);
                unint64_t v156 = objc_msgSend_count(v329, v205, v206, v207, v208, v209, v210, v211) + v204;

                a1 = v169;
                uint64_t v155 = v325;
              }
              ++v158;
            }
            while (v155 != v158);
            uint64_t v155 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v212, (uint64_t)&v335, (uint64_t)v352, 16, v213, v214, v215);
            if (v155) {
              continue;
            }
            break;
          }
          uint64_t v216 = 0;
LABEL_38:
          uint64_t v217 = (uint64_t)v330;
          id v142 = v320;
        }
        else
        {
          uint64_t v216 = 0;
          uint64_t v217 = 0;
        }
      }
      else
      {
        uint64_t v216 = 0;
        uint64_t v217 = 0;
      }
      uint64_t v72 = v324;
      uint64_t v218 = objc_msgSend_syncVersion(v324, v135, v136, v137, v138, v139, v140, v141);
      if (v218 != objc_msgSend_cloudVersion(v324, v219, v220, v221, v222, v223, v224, v225))
      {
        uint64_t v233 = objc_msgSend_cloudVersion(v324, v226, v227, v228, v229, v230, v231, v232);
        objc_msgSend_setSyncVersion_(v324, v234, v233, v235, v236, v237, v238, v239);
      }
      if (v217) {
        objc_msgSend_setHistoryToken_(v324, v226, v217, v228, v229, v230, v231, v232);
      }
      uint64_t v331 = (void *)v217;
      objc_msgSend_setHistoryTokenOffset_(v324, v226, v341, v228, v229, v230, v231, v232);
      if (objc_msgSend_hasChanges(v324, v240, v241, v242, v243, v244, v245, v246))
      {
        uint64_t v254 = objc_msgSend_moc(WeakRetained, v247, v248, v249, v250, v251, v252, v253);
        id v332 = 0;
        objc_msgSend_save_(v254, v255, (uint64_t)&v332, v256, v257, v258, v259, v260);
        id v261 = v332;

        objc_msgSend__logError_at_(WeakRetained, v262, (uint64_t)v261, @"getChangesSince - save", v263, v264, v265, v266);
      }
      uint64_t v267 = objc_msgSend_mutableCopy(v324, v247, v248, v249, v250, v251, v252, v253);
      uint64_t v268 = BDSCloudKitLog();
      if (os_log_type_enabled(v268, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v276 = objc_msgSend_entityName(WeakRetained, v269, v270, v271, v272, v273, v274, v275);
        uint64_t v284 = objc_msgSend_count(v328, v277, v278, v279, v280, v281, v282, v283);
        *(_DWORD *)long long buf = 138544386;
        uint64_t v343 = v276;
        __int16 v344 = 2048;
        uint64_t v345 = v284;
        __int16 v346 = 2112;
        uint64_t v347 = v328;
        __int16 v348 = 2114;
        uint64_t v349 = v267;
        __int16 v350 = 1024;
        int v351 = v216;
        _os_log_impl(&dword_2360BC000, v268, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);
      }
      uint64_t v285 = BDSCloudKitLog();
      if (os_log_type_enabled(v285, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v293 = objc_msgSend_entityName(WeakRetained, v286, v287, v288, v289, v290, v291, v292);
        uint64_t v301 = objc_msgSend_count(v329, v294, v295, v296, v297, v298, v299, v300);
        *(_DWORD *)long long buf = 138544386;
        uint64_t v343 = v293;
        __int16 v344 = 2048;
        uint64_t v345 = v301;
        __int16 v346 = 2112;
        uint64_t v347 = v329;
        __int16 v348 = 2114;
        uint64_t v349 = v267;
        __int16 v350 = 1024;
        int v351 = v216;
        _os_log_impl(&dword_2360BC000, v285, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);
      }
      uint64_t v124 = objc_msgSend_mq_sanitizeError_(WeakRetained, v302, 0, v303, v304, v305, v306, v307);
      uint64_t v308 = _Block_copy(*(const void **)(a1 + 48));
      uint64_t v309 = v308;
      uint64_t v126 = v329;
      if (v308) {
        (*((void (**)(void *, void *, void *, void *, void *, uint64_t))v308 + 2))(v308, v328, v329, v267, v124, v216);
      }

      uint64_t v17 = (void *)v327;
      uint64_t v63 = v321;
      uint64_t v82 = v322;
      uint64_t v127 = v331;
    }
  }
  else
  {
    BDSCloudKitLog();
    uint64_t v64 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v64, OS_LOG_TYPE_FAULT)) {
      sub_2361FD21C(a1, v64, v65, v66, v67, v68, v69, v70);
    }

    uint64_t v71 = _Block_copy(*(const void **)(a1 + 48));
    uint64_t v72 = v71;
    if (v71) {
      (*((void (**)(void *, void, void, void, void, void))v71 + 2))(v71, 0, 0, 0, 0, 0);
    }
  }

  kdebug_trace();
}

void sub_23612496C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_236124990(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_2361FCD88();
  }

  uint64_t v3 = _Block_copy(*(const void **)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(void *, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_236124A04(uint64_t a1)
{
  uint64_t v119 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v10)
  {
    uint64_t v11 = BDSCloudKitLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = objc_msgSend_entityName(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v19;
      _os_log_impl(&dword_2360BC000, v11, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ #dissociateCloudData", (uint8_t *)&buf, 0xCu);
    }
    uint64_t v20 = (void *)MEMORY[0x263EFF260];
    uint64_t v28 = objc_msgSend_entityName(WeakRetained, v21, v22, v23, v24, v25, v26, v27);
    uint64_t v35 = objc_msgSend_fetchRequestWithEntityName_(v20, v29, (uint64_t)v28, v30, v31, v32, v33, v34);

    objc_msgSend_setFetchBatchSize_(v35, v36, 20, v37, v38, v39, v40, v41);
    id v115 = 0;
    uint64_t v47 = objc_msgSend_executeFetchRequest_error_(v10, v42, (uint64_t)v35, (uint64_t)&v115, v43, v44, v45, v46);
    id v48 = v115;
    objc_msgSend__logError_at_(WeakRetained, v49, (uint64_t)v48, @"dissociateCloudData - fetch", v50, v51, v52, v53);
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v117 = 0x2020000000;
    BOOL v118 = v48 == 0;
    uint64_t v108 = MEMORY[0x263EF8330];
    uint64_t v109 = 3221225472;
    uint64_t v110 = sub_236124D1C;
    uint64_t v111 = &unk_264CA2968;
    id v113 = WeakRetained;
    p_long long buf = &buf;
    id v112 = v10;
    objc_msgSend_bds_traverseBatchesOfSize_block_(v47, v54, 20, (uint64_t)&v108, v55, v56, v57, v58);
    if (objc_msgSend_signalDataChangedTransaction(WeakRetained, v59, v60, v61, v62, v63, v64, v65, v108, v109, v110, v111))
    {
      uint64_t v73 = objc_msgSend_cloudKitController(WeakRetained, v66, v67, v68, v69, v70, v71, v72);
      uint64_t v81 = objc_msgSend_transactionManager(v73, v74, v75, v76, v77, v78, v79, v80);
      uint64_t v89 = objc_msgSend_entityName(WeakRetained, v82, v83, v84, v85, v86, v87, v88);
      uint64_t v97 = objc_msgSend_notificationName(WeakRetained, v90, v91, v92, v93, v94, v95, v96);
      objc_msgSend_signalDataChangeTransactionForEntityName_notificationName_(v81, v98, (uint64_t)v89, (uint64_t)v97, v99, v100, v101, v102);
    }
    uint64_t v103 = objc_msgSend_mq_sanitizeError_(WeakRetained, v66, (uint64_t)v48, v68, v69, v70, v71, v72);

    uint64_t v104 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v105 = v104;
    if (v104) {
      (*((void (**)(void *, void, void *))v104 + 2))(v104, *(unsigned __int8 *)(*((void *)&buf + 1) + 24), v103);
    }

    _Block_object_dispose(&buf, 8);
  }
  else
  {
    uint64_t v106 = _Block_copy(*(const void **)(a1 + 32));
    uint64_t v107 = v106;
    if (v106) {
      (*((void (**)(void *, void, void))v106 + 2))(v106, 0, 0);
    }
  }
}

void sub_236124CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_236124D1C(uint64_t a1, void *a2)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  id v3 = a2;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  uint64_t v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v4, (uint64_t)&v73, (uint64_t)v78, 16, v5, v6, v7);
  if (v8)
  {
    uint64_t v16 = v8;
    uint64_t v17 = *(void *)v74;
    do
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        if (*(void *)v74 != v17) {
          objc_enumerationMutation(v3);
        }
        uint64_t v19 = *(void **)(*((void *)&v73 + 1) + 8 * i);
        objc_msgSend_setSyncGeneration_(v19, v9, 0, v11, v12, v13, v14, v15);
        objc_msgSend_setValue_forKey_(v19, v20, 0, @"saltedHashedID", v21, v22, v23, v24);
        objc_msgSend_setSystemFields_(v19, v25, 0, v26, v27, v28, v29, v30);
        objc_msgSend_setCkSystemFields_(v19, v31, 0, v32, v33, v34, v35, v36);
      }
      uint64_t v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v9, (uint64_t)&v73, (uint64_t)v78, 16, v13, v14, v15);
    }
    while (v16);
  }
  if (objc_msgSend_hasChanges(*(void **)(a1 + 32), v9, v10, v11, v12, v13, v14, v15))
  {
    uint64_t v43 = *(void **)(a1 + 32);
    id v72 = 0;
    objc_msgSend_save_(v43, v37, (uint64_t)&v72, v38, v39, v40, v41, v42);
    id v44 = v72;
    uint64_t v50 = v44;
    uint64_t v51 = *(void *)(*(void *)(a1 + 48) + 8);
    if (*(unsigned char *)(v51 + 24)) {
      BOOL v52 = v44 == 0;
    }
    else {
      BOOL v52 = 0;
    }
    char v53 = v52;
    *(unsigned char *)(v51 + 24) = v53;
    objc_msgSend__logError_at_(*(void **)(a1 + 40), v45, (uint64_t)v44, @"dissociateCloudData - save", v46, v47, v48, v49);
  }
  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  id v54 = v3;
  uint64_t v59 = objc_msgSend_countByEnumeratingWithState_objects_count_(v54, v55, (uint64_t)&v68, (uint64_t)v77, 16, v56, v57, v58);
  if (v59)
  {
    uint64_t v65 = v59;
    uint64_t v66 = *(void *)v69;
    do
    {
      for (uint64_t j = 0; j != v65; ++j)
      {
        if (*(void *)v69 != v66) {
          objc_enumerationMutation(v54);
        }
        objc_msgSend_refreshObject_mergeChanges_(*(void **)(a1 + 32), v60, *(void *)(*((void *)&v68 + 1) + 8 * j), 0, v61, v62, v63, v64, (void)v68);
      }
      uint64_t v65 = objc_msgSend_countByEnumeratingWithState_objects_count_(v54, v60, (uint64_t)&v68, (uint64_t)v77, 16, v62, v63, v64);
    }
    while (v65);
  }
}

void sub_23612513C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_236125168(uint64_t a1)
{
  uint64_t v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_2360BC000, v2, OS_LOG_TYPE_ERROR, "No managed object context! #hasSaltChangedWithCompletion", v9, 2u);
  }

  uint64_t v7 = (void (**)(void *, void, void *))_Block_copy(*(const void **)(a1 + 32));
  if (v7)
  {
    uint64_t v8 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v3, @"BDSErrorDomain", 1002, 0, v4, v5, v6);
    v7[2](v7, 0, v8);
  }
}

void sub_23612522C(uint64_t a1)
{
  uint64_t v154 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = objc_msgSend_moc(WeakRetained, v3, v4, v5, v6, v7, v8, v9);
  if (v10)
  {
    id v11 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v19 = objc_msgSend_entityName(WeakRetained, v12, v13, v14, v15, v16, v17, v18);
    uint64_t v26 = (void (**)(void, void, void))objc_msgSend_initWithEntityName_(v11, v20, (uint64_t)v19, v21, v22, v23, v24, v25);

    objc_msgSend_setReturnsObjectsAsFaults_(v26, v27, 0, v28, v29, v30, v31, v32);
    objc_msgSend_setFetchLimit_(v26, v33, 1, v34, v35, v36, v37, v38);
    uint64_t v45 = objc_msgSend_predicateWithFormat_(MEMORY[0x263F08A98], v39, @"syncGeneration >= 1", v40, v41, v42, v43, v44);
    objc_msgSend_setPredicate_(v26, v46, (uint64_t)v45, v47, v48, v49, v50, v51);

    uint64_t v59 = objc_msgSend_shared(MEMORY[0x263F2BA58], v52, v53, v54, v55, v56, v57, v58);
    int v67 = objc_msgSend_verboseLoggingEnabled(v59, v60, v61, v62, v63, v64, v65, v66);

    if (v67)
    {
      long long v73 = BDSCloudKitDevelopmentLog();
      if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138543362;
        uint64_t v151 = v26;
        _os_log_impl(&dword_2360BC000, v73, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager hasSaltChangedWithCompletion:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v149 = 0;
    long long v74 = objc_msgSend_executeFetchRequest_error_(v10, v68, (uint64_t)v26, (uint64_t)&v149, v69, v70, v71, v72);
    id v75 = v149;
    if (objc_msgSend_count(v74, v76, v77, v78, v79, v80, v81, v82))
    {
      objc_msgSend_firstObject(v74, v83, v84, v85, v86, v87, v88, v89);
      uint64_t v90 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue();
      uint64_t v98 = objc_msgSend_privacyDelegate(WeakRetained, v91, v92, v93, v94, v95, v96, v97);
      objc_msgSend_setPrivacyDelegate_(v90, v99, (uint64_t)v98, v100, v101, v102, v103, v104);

      uint64_t v112 = objc_msgSend_hasValidSalt(v90, v105, v106, v107, v108, v109, v110, v111) ^ 1;
      uint64_t v120 = objc_msgSend_shared(MEMORY[0x263F2BA58], v113, v114, v115, v116, v117, v118, v119);
      int v128 = objc_msgSend_verboseLoggingEnabled(v120, v121, v122, v123, v124, v125, v126, v127);

      if (v128)
      {
        uint64_t v129 = BDSCloudKitDevelopmentLog();
        if (os_log_type_enabled(v129, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412546;
          uint64_t v151 = v90;
          __int16 v152 = 1024;
          int v153 = v112;
          _os_log_impl(&dword_2360BC000, v129, OS_LOG_TYPE_DEFAULT, "\"\\\"Testing with %@  %{BOOL}d\\\"\"", buf, 0x12u);
        }
      }
      uint64_t v130 = _Block_copy(*(const void **)(a1 + 32));
      uint64_t v131 = v130;
      if (v130) {
        (*((void (**)(void *, uint64_t, void))v130 + 2))(v130, v112, 0);
      }
    }
    else
    {
      uint64_t v90 = (void (**)(void, void, void))_Block_copy(*(const void **)(a1 + 32));
      if (!v90)
      {
LABEL_20:

        goto LABEL_21;
      }
      uint64_t v131 = objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v145, @"BDSErrorDomain", 1003, 0, v146, v147, v148);
      ((void (**)(void, void, void *))v90)[2](v90, 0, v131);
    }

    goto LABEL_20;
  }
  uint64_t v132 = BDSCloudKitLog();
  if (os_log_type_enabled(v132, OS_LOG_TYPE_ERROR))
  {
    uint64_t v140 = objc_msgSend_entityName(WeakRetained, v133, v134, v135, v136, v137, v138, v139);
    *(_DWORD *)long long buf = 138412290;
    uint64_t v151 = v140;
    _os_log_impl(&dword_2360BC000, v132, OS_LOG_TYPE_ERROR, "BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc", buf, 0xCu);
  }
  uint64_t v26 = (void (**)(void, void, void))_Block_copy(*(const void **)(a1 + 32));
  if (v26)
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x263F087E8], v141, @"BDSErrorDomain", 1002, 0, v142, v143, v144);
    id v75 = (id)objc_claimAutoreleasedReturnValue();
    ((void (**)(void, void, id))v26)[2](v26, 0, v75);
LABEL_21:
  }
}

void sub_236125770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_2361257A0(uint64_t a1)
{
  uint64_t v141 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v9 = objc_msgSend_moc(WeakRetained, v2, v3, v4, v5, v6, v7, v8);
  if (v9)
  {
    BDSCloudKitLog();
    uint64_t v10 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_DEBUG)) {
      sub_2361FD334(WeakRetained, v10, v11, v12, v13, v14, v15, v16);
    }

    id v17 = objc_alloc(MEMORY[0x263EFF260]);
    uint64_t v25 = objc_msgSend_entityName(WeakRetained, v18, v19, v20, v21, v22, v23, v24);
    uint64_t v32 = objc_msgSend_initWithEntityName_(v17, v26, (uint64_t)v25, v27, v28, v29, v30, v31);

    objc_msgSend_setFetchBatchSize_(v32, v33, 64, v34, v35, v36, v37, v38);
    uint64_t v45 = objc_msgSend_predicateWithFormat_(MEMORY[0x263F08A98], v39, @"editGeneration > syncGeneration", v40, v41, v42, v43, v44);
    objc_msgSend_setPredicate_(v32, v46, (uint64_t)v45, v47, v48, v49, v50, v51);

    id v135 = 0;
    uint64_t v57 = objc_msgSend_executeFetchRequest_error_(v9, v52, (uint64_t)v32, (uint64_t)&v135, v53, v54, v55, v56);
    id v58 = v135;
    objc_msgSend__logError_at_(WeakRetained, v59, (uint64_t)v58, @"diagnosticDirtyCloudDataInfos", v60, v61, v62, v63);
    if (objc_msgSend_count(v57, v64, v65, v66, v67, v68, v69, v70))
    {
      id v127 = v58;
      int v128 = v32;
      uint64_t v71 = BDSCloudKitLog();
      if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v79 = objc_msgSend_entityName(WeakRetained, v72, v73, v74, v75, v76, v77, v78);
        uint64_t v87 = objc_msgSend_count(v57, v80, v81, v82, v83, v84, v85, v86);
        *(_DWORD *)long long buf = 138412546;
        uint64_t v138 = v79;
        __int16 v139 = 2048;
        uint64_t v140 = v87;
        _os_log_impl(&dword_2360BC000, v71, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager diagnosticDirtyCloudDataInfos %@, returning %lu results", buf, 0x16u);
      }
      id v129 = WeakRetained;

      long long v133 = 0u;
      long long v134 = 0u;
      long long v131 = 0u;
      long long v132 = 0u;
      id v88 = v57;
      uint64_t v93 = objc_msgSend_countByEnumeratingWithState_objects_count_(v88, v89, (uint64_t)&v131, (uint64_t)v136, 16, v90, v91, v92);
      if (v93)
      {
        uint64_t v101 = v93;
        uint64_t v102 = *(void *)v132;
        do
        {
          for (uint64_t i = 0; i != v101; ++i)
          {
            if (*(void *)v132 != v102) {
              objc_enumerationMutation(v88);
            }
            uint64_t v104 = *(void **)(*((void *)&v131 + 1) + 8 * i);
            uint64_t v105 = objc_msgSend_identifier(v104, v94, v95, v96, v97, v98, v99, v100, v127);
            objc_opt_class();
            uint64_t v112 = objc_msgSend_valueForKey_(v104, v106, @"saltedHashedID", v107, v108, v109, v110, v111);
            id v113 = BUDynamicCast();

            uint64_t v114 = [BDSCloudSyncDiagnosticCloudDataInfo alloc];
            uint64_t v120 = objc_msgSend_initWithIdentifier_saltedHashedID_(v114, v115, (uint64_t)v105, (uint64_t)v113, v116, v117, v118, v119);
            objc_msgSend_addObject_(*(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40), v121, (uint64_t)v120, v122, v123, v124, v125, v126);
          }
          uint64_t v101 = objc_msgSend_countByEnumeratingWithState_objects_count_(v88, v94, (uint64_t)&v131, (uint64_t)v136, 16, v98, v99, v100);
        }
        while (v101);
      }

      id WeakRetained = v129;
      uint64_t v32 = v128;
      id v58 = v127;
    }
  }
}

void sub_236125D08(uint64_t a1, void *a2)
{
  uint64_t v3 = NSString;
  id v4 = a2;
  uint64_t v12 = objc_msgSend_recordID(v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v20 = objc_msgSend_recordName(v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v28 = objc_msgSend_recordChangeTag(v4, v21, v22, v23, v24, v25, v26, v27);

  objc_msgSend_stringWithFormat_(v3, v29, @"%@-%@", v30, v31, v32, v33, v34, v20, v28);
  id v41 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_addObject_(*(void **)(a1 + 32), v35, (uint64_t)v41, v36, v37, v38, v39, v40);
}

void sub_236125DDC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_236125DFC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

uint64_t _ReadingHistoryUpdateProperties.daysData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _ReadingHistoryUpdateProperties.editGeneration.getter()
{
  return *(void *)(v0 + 8);
}

BOOL sub_236125E2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_236125E44()
{
  return sub_2361FF318();
}

uint64_t sub_236125E8C()
{
  return sub_2361FF308();
}

uint64_t sub_236125EB8()
{
  return sub_2361FF318();
}

uint64_t sub_236125EFC()
{
  if (*v0) {
    return 0x656E654774696465;
  }
  else {
    return 0x6174614473796164;
  }
}

uint64_t sub_236125F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23612E920(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236125F6C()
{
  return 0;
}

void sub_236125F78(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_236125F84(uint64_t a1)
{
  unint64_t v2 = sub_236126210();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236125FC0(uint64_t a1)
{
  unint64_t v2 = sub_236126210();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t _ReadingHistoryUpdateProperties.encode(to:)(void *a1)
{
  uint64_t v4 = sub_236126188(&qword_268852EC8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  sub_2361261CC(a1, a1[3]);
  sub_236126210();
  sub_2361FF338();
  uint64_t v13 = v8;
  char v12 = 0;
  sub_236126188(&qword_268852ED8);
  sub_236126264();
  sub_2361FF1F8();
  if (!v2)
  {
    char v11 = 1;
    sub_2361FF1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_236126188(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_2361261CC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_236126210()
{
  unint64_t result = qword_268852ED0;
  if (!qword_268852ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852ED0);
  }
  return result;
}

unint64_t sub_236126264()
{
  unint64_t result = qword_268852EE0;
  if (!qword_268852EE0)
  {
    sub_236126310(&qword_268852ED8);
    sub_236126640(&qword_268852EE8, MEMORY[0x263F07490]);
    sub_236126358();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852EE0);
  }
  return result;
}

uint64_t sub_236126310(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_236126358()
{
  unint64_t result = qword_268852EF0;
  if (!qword_268852EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852EF0);
  }
  return result;
}

uint64_t _ReadingHistoryUpdateProperties.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_236126188(&qword_268852EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361261CC(a1, a1[3]);
  sub_236126210();
  sub_2361FF328();
  if (v2) {
    return sub_23612EF9C((uint64_t)a1);
  }
  sub_236126188(&qword_268852ED8);
  v12[15] = 0;
  sub_236126594();
  sub_2361FF188();
  uint64_t v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2361FF178();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  sub_23612EF9C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_236126594()
{
  unint64_t result = qword_268852F00;
  if (!qword_268852F00)
  {
    sub_236126310(&qword_268852ED8);
    sub_236126640(&qword_268852F08, MEMORY[0x263F07490]);
    sub_236126688();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852F00);
  }
  return result;
}

uint64_t sub_236126640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236126688()
{
  unint64_t result = qword_268852F10;
  if (!qword_268852F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852F10);
  }
  return result;
}

uint64_t sub_2361266DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return _ReadingHistoryUpdateProperties.init(from:)(a1, a2);
}

uint64_t sub_2361266F4(void *a1)
{
  return _ReadingHistoryUpdateProperties.encode(to:)(a1);
}

uint64_t ReadingHistoryUpdate.value.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value + 8);
  *a1 = *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id ReadingHistoryUpdate.__allocating_init(value:)(uint64_t *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *(void *)&v3[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v6 = &v3[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v6 = v4;
  *((void *)v6 + 1) = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id ReadingHistoryUpdate.init(value:)(uint64_t *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *(void *)&v1[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v6 = &v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v6 = v4;
  *((void *)v6 + 1) = v5;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t ReadingHistoryUpdate.__allocating_init(days:crdtContext:editGeneration:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v83 = a3;
  id v103 = a2;
  uint64_t v110 = sub_2361FE548();
  uint64_t v4 = *(void *)(v110 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v109 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v91 = *(void *)(v105 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  objc_super v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v80 - v9;
  uint64_t v11 = sub_2361FD748();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v96 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v85 = (char *)&v80 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = sub_236126188(&qword_268852F28);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v102 = (char *)&v80 - v23;
  sub_236126640((unint64_t *)&qword_268852F30, MEMORY[0x263F07490]);
  uint64_t v86 = sub_2361FE828();
  unint64_t v25 = 0;
  uint64_t v93 = a1;
  uint64_t v26 = a1;
  uint64_t v27 = (uint64_t)v10;
  uint64_t v30 = *(void *)(v26 + 64);
  uint64_t v29 = v26 + 64;
  uint64_t v28 = v30;
  uint64_t v31 = 1 << *(unsigned char *)(v29 - 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v28;
  unint64_t v34 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v106 = (void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  unsigned int v99 = *MEMORY[0x263F32EB8];
  uint64_t v98 = (void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v101 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v92 = v12;
  uint64_t v97 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  unint64_t v80 = v34 - 1;
  int64_t v88 = v34;
  unint64_t v81 = v34 - 5;
  uint64_t v87 = v29;
  uint64_t v82 = v29 + 40;
  *(void *)&long long v24 = 136315394;
  long long v90 = v24;
  uint64_t v89 = MEMORY[0x263F8EE58] + 8;
  uint64_t v104 = v10;
  uint64_t v111 = v11;
  uint64_t v95 = v22;
  if ((v32 & v28) == 0) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v35 = __clz(__rbit64(v33));
  uint64_t v36 = (v33 - 1) & v33;
  unint64_t v108 = v25;
  unint64_t v37 = v35 | (v25 << 6);
  uint64_t v38 = (uint64_t)v102;
LABEL_5:
  uint64_t v39 = v93;
  (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v22, *(void *)(v93 + 48) + *(void *)(v92 + 72) * v37, v11);
  uint64_t v40 = *(void *)(v39 + 56) + *(void *)(v91 + 72) * v37;
  uint64_t v41 = sub_236126188(&qword_268852F38);
  sub_2361274C0(v40, (uint64_t)&v22[*(int *)(v41 + 48)]);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 0, 1, v41);
  uint64_t v27 = (uint64_t)v104;
  while (1)
  {
    sub_23612D5D0((uint64_t)v22, v38, &qword_268852F28);
    uint64_t v45 = sub_236126188(&qword_268852F38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v38, 1, v45) == 1)
    {
      swift_release();
      uint64_t v74 = v84;
      uint64_t v75 = (char *)objc_allocWithZone(v84);
      *(void *)&v75[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      uint64_t v76 = (uint64_t *)&v75[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      uint64_t v77 = v83;
      uint64_t *v76 = v86;
      v76[1] = v77;
      v113.receiver = v75;
      v113.super_class = v74;
      id v78 = objc_msgSendSuper2(&v113, sel_init);

      return (uint64_t)v78;
    }
    unint64_t v107 = v36;
    uint64_t v46 = v38 + *(int *)(v45 + 48);
    (*v100)(v18, v38, v11);
    sub_236127524(v46, v27);
    (*v98)(v109, v99, v110);
    sub_236126640(&qword_268852F40, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v47 = sub_2361FE5B8();
    unint64_t v49 = v48;
    uint64_t v94 = v8;
    (*v101)(v109, v110);
    uint64_t v50 = *v106;
    uint64_t v51 = (uint64_t)v85;
    (*v106)((uint64_t)v85, v18, v111);
    sub_23612AFCC(v47, v49);
    uint64_t v52 = v86;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v112 = (void *)v52;
    unint64_t v54 = sub_23612B024(v51);
    uint64_t v56 = v52;
    unint64_t v57 = v54;
    uint64_t v58 = *(void *)(v56 + 16);
    BOOL v59 = (v55 & 1) == 0;
    uint64_t v60 = v58 + v59;
    if (__OFADD__(v58, v59)) {
      goto LABEL_43;
    }
    char v61 = v55;
    if (*(void *)(v56 + 24) >= v60)
    {
      char v64 = isUniquelyReferenced_nonNull_native;
      unint64_t v33 = v107;
      if ((v64 & 1) == 0) {
        sub_23612D29C();
      }
    }
    else
    {
      sub_23612B25C(v60, isUniquelyReferenced_nonNull_native);
      unint64_t v62 = sub_23612B024((uint64_t)v85);
      unint64_t v33 = v107;
      if ((v61 & 1) != (v63 & 1)) {
        goto LABEL_45;
      }
      unint64_t v57 = v62;
    }
    uint64_t v65 = v112;
    uint64_t v86 = (uint64_t)v112;
    if (v61)
    {
      uint64_t v66 = v112[7] + 16 * v57;
      sub_23612D578(*(void *)v66, *(void *)(v66 + 8));
      *(void *)uint64_t v66 = v47;
      *(void *)(v66 + _Block_object_dispose(&STACK[0x3B0], 8) = v49;
    }
    else
    {
      v112[(v57 >> 6) + 8] |= 1 << v57;
      v50(v65[6] + *(void *)(v92 + 72) * v57, v85, v111);
      uint64_t v67 = (uint64_t *)(v65[7] + 16 * v57);
      uint64_t *v67 = v47;
      v67[1] = v49;
      uint64_t v68 = v65[2];
      BOOL v69 = __OFADD__(v68, 1);
      uint64_t v70 = v68 + 1;
      if (v69) {
        goto LABEL_44;
      }
      v65[2] = v70;
    }
    swift_bridgeObjectRelease();
    uint64_t v71 = *v97;
    uint64_t v72 = v111;
    (*v97)((uint64_t)v85, v111);
    uint64_t v73 = v47;
    uint64_t v11 = v72;
    sub_23612D578(v73, v49);
    uint64_t v27 = (uint64_t)v104;
    sub_23612A480((uint64_t)v104);
    v71((uint64_t)v18, v11);
    objc_super v8 = v94;
    unint64_t v25 = v108;
    if (v33) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v42 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v42 >= v88)
    {
      unint64_t v108 = v25;
      uint64_t v38 = (uint64_t)v102;
    }
    else
    {
      unint64_t v43 = *(void *)(v87 + 8 * v42);
      uint64_t v38 = (uint64_t)v102;
      if (v43) {
        goto LABEL_9;
      }
      if ((uint64_t)(v25 + 2) >= v88)
      {
        unint64_t v108 = v25 + 1;
      }
      else
      {
        unint64_t v43 = *(void *)(v87 + 8 * (v25 + 2));
        if (v43)
        {
          int64_t v42 = v25 + 2;
LABEL_9:
          uint64_t v36 = (v43 - 1) & v43;
          unint64_t v37 = __clz(__rbit64(v43)) + (v42 << 6);
          unint64_t v108 = v42;
          goto LABEL_5;
        }
        if ((uint64_t)(v25 + 3) >= v88)
        {
          unint64_t v108 = v25 + 2;
        }
        else
        {
          unint64_t v43 = *(void *)(v87 + 8 * (v25 + 3));
          if (v43)
          {
            int64_t v42 = v25 + 3;
            goto LABEL_9;
          }
          int64_t v42 = v25 + 4;
          if ((uint64_t)(v25 + 4) >= v88)
          {
            unint64_t v108 = v25 + 3;
          }
          else
          {
            unint64_t v43 = *(void *)(v87 + 8 * v42);
            if (v43) {
              goto LABEL_9;
            }
            while (v81 != v25)
            {
              unint64_t v43 = *(void *)(v82 + 8 * v25++);
              if (v43)
              {
                int64_t v42 = v25 + 4;
                goto LABEL_9;
              }
            }
            unint64_t v108 = v80;
          }
        }
      }
    }
    uint64_t v44 = sub_236126188(&qword_268852F38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v22, 1, 1, v44);
    uint64_t v36 = 0;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_2361FF268();
  __break(1u);
  return result;
}

uint64_t sub_2361274C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236127524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ReadingHistoryUpdate.days.getter()
{
  uint64_t v1 = OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days;
  if (*(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days);
  }
  else
  {
    uint64_t v2 = sub_236127680(v0);
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2361275F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReadingHistoryUpdate.days.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23612761C(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryUpdate.days.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_236127680(uint64_t a1)
{
  uint64_t v109 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v2 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v92 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_236126188(&qword_26AD74F40);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v90 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v94 = (uint64_t)&v86 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v86 - v9;
  uint64_t v11 = sub_2361FD748();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v95 = (char *)&v86 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v18 = sub_236126188(&qword_268852F58);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v110 = (char *)&v86 - v22;
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  sub_236126640((unint64_t *)&qword_268852F30, MEMORY[0x263F07490]);
  uint64_t v96 = sub_2361FE828();
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v97 = v23 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  unint64_t v28 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v111 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  unint64_t v107 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  unint64_t v108 = (void (**)(char *, void, uint64_t, uint64_t))(v2 + 56);
  uint64_t v101 = v12;
  uint64_t v104 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v91 = v2;
  uint64_t v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  unint64_t v87 = v28 - 1;
  swift_bridgeObjectRetain();
  unint64_t v29 = 0;
  int64_t v98 = v28;
  unint64_t v30 = v28 - 5;
  unint64_t v31 = v27;
  unint64_t v88 = v30;
  uint64_t v102 = v23;
  uint64_t v89 = v23 + 104;
  *(void *)&long long v32 = 136315138;
  long long v100 = v32;
  uint64_t v99 = MEMORY[0x263F8EE58] + 8;
  uint64_t v105 = v10;
  uint64_t v106 = v11;
  id v103 = v21;
  uint64_t v116 = v17;
  if (!v27) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v114 = (v31 - 1) & v31;
  unint64_t v115 = v29;
  unint64_t v33 = __clz(__rbit64(v31)) | (v29 << 6);
LABEL_5:
  uint64_t v34 = v102;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v21, *(void *)(v102 + 48) + *(void *)(v101 + 72) * v33, v11);
  unint64_t v35 = (uint64_t *)(*(void *)(v34 + 56) + 16 * v33);
  uint64_t v36 = sub_236126188((uint64_t *)&unk_268852F60);
  unint64_t v37 = (uint64_t *)&v21[*(int *)(v36 + 48)];
  uint64_t v38 = *v35;
  unint64_t v39 = v35[1];
  *unint64_t v37 = v38;
  v37[1] = v39;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v21, 0, 1, v36);
  sub_23612AFCC(v38, v39);
  uint64_t v40 = (uint64_t)v110;
  while (1)
  {
    sub_23612D5D0((uint64_t)v21, v40, &qword_268852F58);
    uint64_t v44 = sub_236126188((uint64_t *)&unk_268852F60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v40, 1, v44) == 1)
    {
      swift_release();
      return v96;
    }
    uint64_t v45 = (uint64_t *)(v40 + *(int *)(v44 + 48));
    uint64_t v47 = *v45;
    unint64_t v46 = v45[1];
    (*v107)(v17, v40, v11);
    sub_23612AFCC(v47, v46);
    sub_236126640(&qword_268852F40, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v112 = v47;
    unint64_t v113 = v46;
    uint64_t v48 = v109;
    sub_2361FE5C8();
    uint64_t v49 = v48;
    uint64_t v50 = v11;
    uint64_t v51 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v108;
    (*v108)(v10, 0, 1, v49);
    uint64_t v52 = *v111;
    uint64_t v53 = (uint64_t)v95;
    (*v111)(v95, v116, v50);
    uint64_t v54 = v94;
    sub_23612D634((uint64_t)v10, v94);
    int v55 = (*v93)(v54, 1, v49);
    if (v55 != 1)
    {
      sub_236127524(v54, v92);
      uint64_t v66 = v96;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v117 = (void *)v66;
      unint64_t v69 = sub_23612B024(v53);
      uint64_t v70 = *(void *)(v66 + 16);
      BOOL v71 = (v68 & 1) == 0;
      uint64_t v72 = v70 + v71;
      if (__OFADD__(v70, v71)) {
        goto LABEL_52;
      }
      uint64_t v73 = (void (*)(unint64_t, char *, uint64_t))v52;
      if (*(void *)(v66 + 24) < v72)
      {
        char v74 = v68;
        sub_23612B6A4(v72, isUniquelyReferenced_nonNull_native);
        unint64_t v75 = sub_23612B024(v53);
        int v77 = v76 & 1;
        char v78 = v74;
        int v79 = v74 & 1;
        uint64_t v11 = v106;
        if (v79 != v77) {
          goto LABEL_54;
        }
        unint64_t v69 = v75;
        uint64_t v17 = v116;
        unint64_t v80 = v117;
        if ((v78 & 1) == 0) {
          goto LABEL_45;
        }
LABEL_35:
        uint64_t v96 = (uint64_t)v80;
        sub_23612EF38(v92, v80[7] + *(void *)(v91 + 72) * v69);
LABEL_47:
        unint64_t v31 = v114;
        swift_bridgeObjectRelease();
        char v61 = *v104;
        (*v104)(v95, v11);
        goto LABEL_48;
      }
      uint64_t v17 = v116;
      uint64_t v11 = v106;
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v80 = v117;
        if (v68) {
          goto LABEL_35;
        }
      }
      else
      {
        char v81 = v68;
        sub_23612DB8C();
        unint64_t v80 = v117;
        if (v81) {
          goto LABEL_35;
        }
      }
LABEL_45:
      v80[(v69 >> 6) + 8] |= 1 << v69;
      v73(v80[6] + *(void *)(v101 + 72) * v69, v95, v11);
      sub_236127524(v92, v80[7] + *(void *)(v91 + 72) * v69);
      uint64_t v82 = v80[2];
      BOOL v83 = __OFADD__(v82, 1);
      uint64_t v84 = v82 + 1;
      if (v83) {
        goto LABEL_53;
      }
      v80[2] = v84;
      uint64_t v96 = (uint64_t)v117;
      goto LABEL_47;
    }
    sub_23612D69C(v54);
    uint64_t v56 = v96;
    swift_bridgeObjectRetain();
    unint64_t v57 = sub_23612B024(v53);
    char v59 = v58;
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v86 = v51;
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v117 = (void *)v56;
      uint64_t v17 = v116;
      if ((v60 & 1) == 0)
      {
        sub_23612DB8C();
        uint64_t v56 = (uint64_t)v117;
      }
      char v61 = *(void (**)(char *, uint64_t))(v101 + 8);
      uint64_t v62 = v106;
      v61((char *)(*(void *)(v56 + 48) + *(void *)(v101 + 72) * v57), v106);
      int64_t v63 = v57;
      uint64_t v64 = (uint64_t)v117;
      uint64_t v65 = v90;
      sub_236127524(v117[7] + *(void *)(v91 + 72) * v63, v90);
      uint64_t v96 = v64;
      sub_2361F27E8(v63, v64);
      swift_bridgeObjectRelease();
      v86(v65, 0, 1, v109);
    }
    else
    {
      uint64_t v65 = v90;
      v51(v90, 1, 1, v109);
      char v61 = *v104;
      uint64_t v17 = v116;
      uint64_t v62 = v106;
    }
    v61(v95, v62);
    sub_23612D69C(v65);
    uint64_t v11 = v62;
    uint64_t v21 = v103;
    unint64_t v31 = v114;
LABEL_48:
    sub_23612D578(v112, v113);
    v61(v17, v11);
    uint64_t v10 = v105;
    sub_23612D69C((uint64_t)v105);
    unint64_t v29 = v115;
    if (v31) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v41 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v41 >= v98)
    {
      unint64_t v115 = v29;
      uint64_t v40 = (uint64_t)v110;
    }
    else
    {
      unint64_t v42 = *(void *)(v97 + 8 * v41);
      uint64_t v40 = (uint64_t)v110;
      if (v42) {
        goto LABEL_9;
      }
      if ((uint64_t)(v29 + 2) >= v98)
      {
        unint64_t v115 = v29 + 1;
      }
      else
      {
        unint64_t v42 = *(void *)(v97 + 8 * (v29 + 2));
        if (v42)
        {
          int64_t v41 = v29 + 2;
LABEL_9:
          uint64_t v114 = (v42 - 1) & v42;
          unint64_t v115 = v41;
          unint64_t v33 = __clz(__rbit64(v42)) + (v41 << 6);
          goto LABEL_5;
        }
        if ((uint64_t)(v29 + 3) >= v98)
        {
          unint64_t v115 = v29 + 2;
        }
        else
        {
          unint64_t v42 = *(void *)(v97 + 8 * (v29 + 3));
          if (v42)
          {
            int64_t v41 = v29 + 3;
            goto LABEL_9;
          }
          int64_t v41 = v29 + 4;
          if ((uint64_t)(v29 + 4) >= v98)
          {
            unint64_t v115 = v29 + 3;
          }
          else
          {
            unint64_t v42 = *(void *)(v97 + 8 * v41);
            if (v42) {
              goto LABEL_9;
            }
            while (v88 != v29)
            {
              unint64_t v42 = *(void *)(v89 + 8 * v29++);
              if (v42)
              {
                int64_t v41 = v29 + 4;
                goto LABEL_9;
              }
            }
            unint64_t v115 = v87;
          }
        }
      }
    }
    uint64_t v43 = sub_236126188((uint64_t *)&unk_268852F60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v21, 1, 1, v43);
    uint64_t v114 = 0;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_2361FF268();
  __break(1u);
  return result;
}

uint64_t (*ReadingHistoryUpdate.days.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = ReadingHistoryUpdate.days.getter();
  return sub_2361283DC;
}

uint64_t sub_2361283DC(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryUpdate.editGeneration.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate_value + 8);
}

uint64_t ReadingHistoryUpdate.description.getter()
{
  return 0x3A737961647BLL;
}

id ReadingHistoryUpdate.coalesce(newerUpdate:)(char *a1)
{
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v5 = sub_2361FD748();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v77 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236126188(&qword_268852F58);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v62 - v12;
  id v63 = v1;
  id v64 = a1;
  uint64_t v14 = &v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v15 = *(void **)&v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v65 = &a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v66 = v14;
  unint64_t v16 = *(void *)&a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v17 = *(void *)(*(void *)v65 + 64);
  uint64_t v68 = *(void *)v65 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v74 = v6 + 16;
  uint64_t v75 = v6;
  BOOL v71 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v72 = (void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  int64_t v69 = (unint64_t)(v18 + 63) >> 6;
  int64_t v62 = v69 - 1;
  swift_bridgeObjectRetain();
  unint64_t v70 = v16;
  swift_bridgeObjectRetain();
  int64_t v73 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      uint64_t v22 = (v20 - 1) & v20;
      unint64_t v23 = v21 | (v73 << 6);
LABEL_8:
      unint64_t v24 = v70;
      (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v11, *(void *)(v70 + 48) + *(void *)(v75 + 72) * v23, v5);
      uint64_t v25 = (uint64_t *)(*(void *)(v24 + 56) + 16 * v23);
      uint64_t v26 = sub_236126188((uint64_t *)&unk_268852F60);
      unint64_t v27 = (uint64_t *)&v11[*(int *)(v26 + 48)];
      uint64_t v28 = *v25;
      unint64_t v29 = v25[1];
      uint64_t *v27 = v28;
      v27[1] = v29;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
      sub_23612AFCC(v28, v29);
      goto LABEL_27;
    }
    int64_t v30 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_44;
    }
    if (v30 < v69)
    {
      unint64_t v31 = *(void *)(v68 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v73 + 2;
      ++v73;
      if (v30 + 1 < v69)
      {
        unint64_t v31 = *(void *)(v68 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v73 = v30 + 1;
        if (v30 + 2 < v69)
        {
          unint64_t v31 = *(void *)(v68 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v73 = v30 + 2;
          if (v30 + 3 < v69) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v33 = sub_236126188((uint64_t *)&unk_268852F60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
    uint64_t v22 = 0;
LABEL_27:
    sub_23612D5D0((uint64_t)v11, (uint64_t)v13, &qword_268852F58);
    uint64_t v34 = sub_236126188((uint64_t *)&unk_268852F60);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v13, 1, v34) == 1)
    {
      swift_release();
      uint64_t v2 = (char *)*((void *)v66 + 1);
      int64_t v3 = *((void *)v65 + 1);
      if (v3 < (uint64_t)v2)
      {
        LOBYTE(v16) = sub_2361FEC68();
        if (qword_26AD74FA8 != -1) {
          goto LABEL_45;
        }
        goto LABEL_39;
      }
LABEL_41:
      char v58 = ObjectType;
      char v59 = (char *)objc_allocWithZone(ObjectType);
      *(void *)&v59[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      char v60 = &v59[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      *(void *)char v60 = v15;
      *((void *)v60 + 1) = v3;
      v79.receiver = v59;
      v79.super_class = v58;
      return objc_msgSendSuper2(&v79, sel_init);
    }
    unint64_t v76 = v22;
    uint64_t v2 = v11;
    unint64_t v35 = (uint64_t *)&v13[*(int *)(v34 + 48)];
    uint64_t v36 = *v35;
    int64_t v3 = v35[1];
    uint64_t v37 = v77;
    uint64_t v38 = v13;
    unint64_t v39 = v13;
    uint64_t v40 = v5;
    (*v72)(v77, v39, v5);
    sub_23612AFCC(v36, v3);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v78 = v15;
    unint64_t v16 = sub_23612B024(v37);
    uint64_t v43 = v15[2];
    BOOL v44 = (v42 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      swift_once();
LABEL_39:
      uint64_t v53 = (void *)qword_26AD74FA0;
      if (os_log_type_enabled((os_log_t)qword_26AD74FA0, (os_log_type_t)v16))
      {
        id v54 = v63;
        id v55 = v64;
        uint64_t v56 = v53;
        uint64_t v57 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 134218240;
        char v78 = v2;
        sub_2361FEE68();

        *(_WORD *)(v57 + 12) = 2048;
        char v78 = (void *)v3;
        sub_2361FEE68();

        _os_log_impl(&dword_2360BC000, v56, (os_log_type_t)v16, "ReadingHistoryUpdate: coalesce - unexpected editGeneration=%ld, newerUpdate.editGeneration=%ld", (uint8_t *)v57, 0x16u);
        MEMORY[0x237DFF240](v57, -1, -1);
      }
      goto LABEL_41;
    }
    char v46 = v42;
    if (v15[3] >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_23612D29C();
      }
    }
    else
    {
      sub_23612B25C(v45, isUniquelyReferenced_nonNull_native);
      unint64_t v47 = sub_23612B024(v77);
      if ((v46 & 1) != (v48 & 1)) {
        goto LABEL_47;
      }
      unint64_t v16 = v47;
    }
    uint64_t v5 = v40;
    uint64_t v15 = v78;
    uint64_t v13 = v38;
    if (v46)
    {
      unint64_t v16 = v78[7] + 16 * v16;
      sub_23612D578(*(void *)v16, *(void *)(v16 + 8));
      *(void *)unint64_t v16 = v36;
      *(void *)(v16 + _Block_object_dispose(&STACK[0x3B0], 8) = v3;
    }
    else
    {
      v78[(v16 >> 6) + 8] |= 1 << v16;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 16))(v15[6] + *(void *)(v75 + 72) * v16, v77, v5);
      uint64_t v49 = (uint64_t *)(v15[7] + 16 * v16);
      *uint64_t v49 = v36;
      v49[1] = v3;
      uint64_t v50 = v15[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51) {
        goto LABEL_43;
      }
      v15[2] = v52;
    }
    swift_bridgeObjectRelease();
    (*v71)(v77, v5);
    sub_23612D578(v36, v3);
    uint64_t v11 = v2;
    unint64_t v20 = v76;
  }
  unint64_t v31 = *(void *)(v68 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    uint64_t v22 = (v31 - 1) & v31;
    unint64_t v23 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v73 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v69)
    {
      int64_t v73 = v62;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v68 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_47:
  id result = (id)sub_2361FF268();
  __break(1u);
  return result;
}

uint64_t ReadingHistoryUpdate.hasDelta(from:)(uint64_t a1)
{
  uint64_t v109 = a1;
  uint64_t v2 = sub_236126188(&qword_26AD74F40);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  unint64_t v108 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v115 = (uint64_t)&v93 - v5;
  uint64_t v107 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v6 = *(void *)(v107 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v107);
  uint64_t v96 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v93 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v93 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v110 = (uint64_t)&v93 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v112 = (uint64_t)&v93 - v17;
  uint64_t v18 = sub_2361FD748();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v95 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v93 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = sub_236126188(&qword_268852F28);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  int64_t v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v111 = (void (*)(char *, uint64_t))((char *)&v93 - v31);
  uint64_t result = ReadingHistoryUpdate.days.getter();
  os_log_t v113 = 0;
  uint64_t v33 = *(void *)(result + 64);
  uint64_t v97 = result + 64;
  uint64_t v34 = 1 << *(unsigned char *)(result + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v102 = result;
  uint64_t v99 = v19;
  uint64_t v100 = v6;
  uint64_t v105 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v106 = (void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  id v103 = (void (**)(char *, uint64_t))(v19 + 8);
  int64_t v98 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v94 = (v98 - 1);
  uint64_t v104 = v18;
  if (!v36) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v114 = (v36 - 1) & v36;
  unint64_t v37 = __clz(__rbit64(v36)) | ((void)v113 << 6);
  uint64_t v38 = (uint64_t)v111;
LABEL_5:
  uint64_t v39 = v102;
  (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))(v30, *(void *)(v102 + 48) + *(void *)(v99 + 72) * v37, v18);
  uint64_t v40 = *(void *)(v39 + 56) + *(void *)(v100 + 72) * v37;
  uint64_t v41 = sub_236126188(&qword_268852F38);
  sub_2361274C0(v40, (uint64_t)&v30[*(int *)(v41 + 48)]);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v30, 0, 1, v41);
  while (1)
  {
    sub_23612D5D0((uint64_t)v30, v38, &qword_268852F28);
    uint64_t v46 = sub_236126188(&qword_268852F38);
    LODWORD(v1) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v38, 1, v46);
    if (v1 == 1)
    {
      swift_release();
      sub_2361FEC88();
      if (qword_26AD74FA8 != -1) {
        goto LABEL_44;
      }
      goto LABEL_30;
    }
    uint64_t v47 = v38 + *(int *)(v46 + 48);
    (*v106)(v26, v38, v18);
    uint64_t v48 = v47;
    uint64_t v49 = v26;
    uint64_t v50 = v112;
    sub_236127524(v48, v112);
    uint64_t v51 = v115;
    uint64_t v52 = v49;
    ReadingHistoryModel.readingHistoryDay(for:)(v115);
    uint64_t v53 = v108;
    sub_23612D634(v51, (uint64_t)v108);
    if ((*v105)(v53, 1, v107) == 1)
    {
      sub_23612D69C((uint64_t)v53);
      os_log_type_t v57 = sub_2361FEC88();
      if (qword_26AD74FA8 != -1) {
        swift_once();
      }
      char v58 = qword_26AD74FA0;
      char v59 = v95;
      uint64_t v60 = (uint64_t)v52;
      char v61 = v52;
      uint64_t v62 = v104;
      (*v101)(v95, v61, v104);
      uint64_t v63 = v112;
      uint64_t v64 = v96;
      sub_2361274C0(v112, v96);
      if (os_log_type_enabled(v58, v57))
      {
        os_log_t v113 = v58;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v114 = v60;
        uint64_t v67 = v66;
        v117[0] = v66;
        *(_DWORD *)uint64_t v65 = 136315394;
        sub_236126640((unint64_t *)&qword_268852F48, MEMORY[0x263F07490]);
        uint64_t v68 = sub_2361FF218();
        uint64_t v116 = sub_23612A974(v68, v69, v117);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        uint64_t v111 = *v103;
        v111(v59, v62);
        *(_WORD *)(v65 + 12) = 2080;
        uint64_t v70 = v96;
        uint64_t v71 = ReadingHistoryDay.description.getter();
        uint64_t v116 = sub_23612A974(v71, v72, v117);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        sub_23612A480(v70);
        os_log_t v73 = v113;
        _os_log_impl(&dword_2360BC000, v113, v57, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=nil", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v67, -1, -1);
        MEMORY[0x237DFF240](v65, -1, -1);

        sub_23612D69C(v115);
        sub_23612A480(v112);
        v111((char *)v114, v62);
      }
      else
      {
        sub_23612A480(v64);
        uint64_t v91 = (char *)*v103;
        (*v103)(v59, v62);
        sub_23612D69C(v115);
        sub_23612A480(v63);
        ((void (*)(uint64_t, uint64_t))v91)(v60, v62);
      }
      goto LABEL_41;
    }
    int v54 = v1;
    uint64_t v1 = v110;
    sub_236127524((uint64_t)v53, v110);
    sub_236126640(&qword_268852F70, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v55 = v50;
    if (sub_2361FE2E8())
    {
      os_log_type_t v74 = sub_2361FEC88();
      uint64_t v75 = v104;
      if (qword_26AD74FA8 != -1) {
        swift_once();
      }
      unint64_t v76 = qword_26AD74FA0;
      uint64_t v77 = v24;
      (*v101)(v24, v52, v75);
      uint64_t v114 = (uint64_t)v52;
      uint64_t v78 = (uint64_t)v14;
      sub_2361274C0(v55, (uint64_t)v14);
      uint64_t v79 = v110;
      sub_2361274C0(v110, (uint64_t)v11);
      int v80 = v74;
      BOOL v81 = os_log_type_enabled(v76, v74);
      LODWORD(v1) = v54;
      if (v81)
      {
        os_log_t v113 = v76;
        uint64_t v82 = swift_slowAlloc();
        uint64_t v111 = (void (*)(char *, uint64_t))swift_slowAlloc();
        v117[0] = (uint64_t)v111;
        *(_DWORD *)uint64_t v82 = 136315650;
        LODWORD(v109) = v80;
        sub_236126640((unint64_t *)&qword_268852F48, MEMORY[0x263F07490]);
        uint64_t v83 = sub_2361FF218();
        uint64_t v116 = sub_23612A974(v83, v84, v117);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        unint64_t v108 = (char *)*v103;
        ((void (*)(char *, uint64_t))v108)(v77, v75);
        *(_WORD *)(v82 + 12) = 2080;
        uint64_t v85 = ReadingHistoryDay.description.getter();
        uint64_t v116 = sub_23612A974(v85, v86, v117);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        sub_23612A480(v78);
        *(_WORD *)(v82 + 22) = 2080;
        uint64_t v87 = ReadingHistoryDay.description.getter();
        uint64_t v116 = sub_23612A974(v87, v88, v117);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        sub_23612A480((uint64_t)v11);
        os_log_t v89 = v113;
        _os_log_impl(&dword_2360BC000, v113, (os_log_type_t)v109, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=%s", (uint8_t *)v82, 0x20u);
        uint64_t v90 = v111;
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v90, -1, -1);
        MEMORY[0x237DFF240](v82, -1, -1);

        sub_23612A480(v110);
        sub_23612D69C(v115);
        sub_23612A480(v112);
        ((void (*)(uint64_t, uint64_t))v108)(v114, v75);
      }
      else
      {
        sub_23612A480((uint64_t)v11);
        sub_23612A480(v78);
        uint64_t v92 = (char *)*v103;
        (*v103)(v77, v75);
        sub_23612A480(v79);
        sub_23612D69C(v115);
        sub_23612A480(v55);
        ((void (*)(uint64_t, uint64_t))v92)(v114, v75);
      }
LABEL_41:
      swift_release();
      return v1 != 1;
    }
    sub_23612A480(v1);
    sub_23612D69C(v115);
    sub_23612A480(v50);
    uint64_t v18 = v104;
    uint64_t v26 = v52;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v103)(v52, v104);
    unint64_t v36 = v114;
    if (v114) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v42 = (int64_t)&v113->isa + 1;
    uint64_t v38 = (uint64_t)v111;
    if (__OFADD__(v113, 1)) {
      break;
    }
    if (v42 < v98)
    {
      unint64_t v43 = *(void *)(v97 + 8 * v42);
      if (v43) {
        goto LABEL_9;
      }
      int64_t v44 = (int64_t)&v113->isa + 2;
      os_log_t v113 = (os_log_t)((char *)v113 + 1);
      if (v42 + 1 < v98)
      {
        unint64_t v43 = *(void *)(v97 + 8 * v44);
        if (v43) {
          goto LABEL_12;
        }
        os_log_t v113 = (os_log_t)(v42 + 1);
        if (v42 + 2 < v98)
        {
          unint64_t v43 = *(void *)(v97 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_9;
          }
          int64_t v44 = v42 + 3;
          os_log_t v113 = (os_log_t)(v42 + 2);
          if (v42 + 3 < v98)
          {
            unint64_t v43 = *(void *)(v97 + 8 * v44);
            if (!v43)
            {
              while (1)
              {
                int64_t v42 = v44 + 1;
                if (__OFADD__(v44, 1)) {
                  break;
                }
                if (v42 >= v98)
                {
                  os_log_t v113 = v94;
                  goto LABEL_23;
                }
                unint64_t v43 = *(void *)(v97 + 8 * v42);
                ++v44;
                if (v43) {
                  goto LABEL_9;
                }
              }
              __break(1u);
              return result;
            }
LABEL_12:
            int64_t v42 = v44;
LABEL_9:
            os_log_t v113 = (os_log_t)v42;
            uint64_t v114 = (v43 - 1) & v43;
            unint64_t v37 = __clz(__rbit64(v43)) + (v42 << 6);
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v45 = sub_236126188(&qword_268852F38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v30, 1, 1, v45);
    uint64_t v114 = 0;
  }
  __break(1u);
LABEL_44:
  swift_once();
LABEL_30:
  id v56 = (id)qword_26AD74FA0;
  sub_2361FDB28();

  return v1 != 1;
}

id ReadingHistoryUpdate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ReadingHistoryUpdate.init()()
{
}

id ReadingHistoryUpdate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_236129B38@<X0>(void *a1@<X8>)
{
  objc_super v2 = (uint64_t *)(*v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_236129B54@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(void *)&v5[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v8 = &v5[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v8 = v6;
  *((void *)v8 + 1) = v7;
  v10.receiver = v5;
  v10.super_class = v2;
  id result = objc_msgSendSuper2(&v10, sel_init);
  *a2 = result;
  return result;
}

id BDSReadingHistoryUpdateInfo.update.getter()
{
  return *(id *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update);
}

uint64_t static BDSReadingHistoryUpdateInfo.supportsSecureCoding.getter()
{
  return 1;
}

void __swiftcall BDSReadingHistoryUpdateInfo.init(coder:)(BDSReadingHistoryUpdateInfo_optional *__return_ptr retstr, NSCoder coder)
{
}

id BDSReadingHistoryUpdateInfo.init(coder:)(void *a1)
{
  uint64_t v3 = v1;
  id v4 = a1;
  id result = sub_236129CBC(v4);
  if (result)
  {
    *(void *)&v3[OBJC_IVAR___BDSReadingHistoryUpdateInfo_update] = result;

    v7.receiver = v3;
    v7.super_class = (Class)BDSReadingHistoryUpdateInfo;
    id v6 = objc_msgSendSuper2(&v7, sel_init);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_236129CBC(void *a1)
{
  sub_23612EDA4(0, &qword_268853098);
  uint64_t v2 = sub_2361FED88();
  if (!v2)
  {

    return 0;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = sub_2361FD678();
  unint64_t v6 = v5;
  id v7 = objc_allocWithZone(MEMORY[0x263F08928]);
  id v8 = sub_23612EB08();
  sub_23612D578(v4, v6);
  if (!v8)
  {
LABEL_8:

    return 0;
  }
  sub_23612EEE4();
  sub_2361FECC8();
  uint64_t v9 = v17;
  if (!v17)
  {
    objc_msgSend(v8, sel_finishDecoding);

    goto LABEL_8;
  }
  uint64_t v10 = v18;
  uint64_t v11 = (objc_class *)type metadata accessor for ReadingHistoryUpdate();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v13 = &v12[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v13 = v9;
  *((void *)v13 + 1) = v10;
  v16.receiver = v12;
  v16.super_class = v11;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v8, sel_finishDecoding);

  return v14;
}

Swift::Void __swiftcall BDSReadingHistoryUpdateInfo.encode(with:)(NSCoder with)
{
  id v3 = objc_msgSend(v1, sel_update);
  sub_236129F34(with.super.isa);
}

void sub_236129F34(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  sub_23612EE90();
  swift_bridgeObjectRetain();
  sub_2361FECB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_finishEncoding);
  id v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    uint64_t v4 = v3;
    unint64_t v5 = (void *)sub_2361FE8C8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s13BookDataStore27ReadingHistoryServiceStatusC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08910]), sel_initRequiringSecureCoding_, 1);
  sub_23612EAB4();
  sub_2361FECB8();
  objc_msgSend(v2, sel_finishEncoding);
  id v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    uint64_t v4 = v3;
    unint64_t v5 = (void *)sub_2361FE8C8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

id BDSReadingHistoryUpdateInfo.init(update:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUpdate_, a1);

  return v2;
}

id BDSReadingHistoryUpdateInfo.init(update:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update) = a1;
  v3.super_class = (Class)BDSReadingHistoryUpdateInfo;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t BDSReadingHistoryUpdateInfo.description.getter()
{
  id v1 = objc_msgSend(v0, sel_update);
  uint64_t v2 = ReadingHistoryUpdate.description.getter();

  return v2;
}

void __swiftcall BDSReadingHistoryUpdateInfo.init()(BDSReadingHistoryUpdateInfo *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  objc_msgSend(v1, sel_init);
}

void BDSReadingHistoryUpdateInfo.init()()
{
}

uint64_t sub_23612A480(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23612A4DC(uint64_t a1)
{
  uint64_t v2 = sub_236126640(&qword_268853120, type metadata accessor for CKError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_23612A548(uint64_t a1)
{
  uint64_t v2 = sub_236126640(&qword_268853120, type metadata accessor for CKError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_23612A5B8(uint64_t a1)
{
  uint64_t v2 = sub_236126640(&qword_268853118, type metadata accessor for CKError);
  return MEMORY[0x270EEF788](a1, v2);
}

id sub_23612A624()
{
  return *v0;
}

uint64_t sub_23612A62C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23612A634()
{
  return sub_2361FE8D8();
}

uint64_t sub_23612A644()
{
  sub_236126640(&qword_268853118, type metadata accessor for CKError);
  return sub_2361FD588();
}

uint64_t sub_23612A6B0(uint64_t a1)
{
  uint64_t v2 = sub_236126640(&qword_268853118, type metadata accessor for CKError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_23612A71C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_236126640(&qword_268853118, type metadata accessor for CKError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_23612A7AC()
{
  id v1 = *v0;
  uint64_t v2 = sub_2361FEDF8();

  return v2;
}

uint64_t sub_23612A7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126640(&qword_268853118, type metadata accessor for CKError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_23612A860()
{
  return sub_2361FF318();
}

void *sub_23612A8C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
  return result;
}

void sub_23612A8D0(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_23612A8DC(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23612A8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236126640(&qword_268853118, type metadata accessor for CKError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

uint64_t sub_23612A974(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_23612AA48(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_23612EFEC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_23612EFEC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_23612EF9C((uint64_t)v12);
  return v7;
}

uint64_t sub_23612AA48(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2361FEE78();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_23612AC04(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2361FEFE8();
  if (!v8)
  {
    sub_2361FF098();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2361FF108();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_23612AC04(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_23612AC9C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_23612AE7C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_23612AE7C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23612AC9C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_23612AE14(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2361FEFA8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2361FF098();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2361FE9C8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2361FF108();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2361FF098();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_23612AE14(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_236126188(&qword_26AD76038);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23612AE7C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_236126188(&qword_26AD76038);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23612AFCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_23612B024(uint64_t a1)
{
  sub_2361FD748();
  sub_236126640((unint64_t *)&qword_268852F30, MEMORY[0x263F07490]);
  uint64_t v2 = sub_2361FE878();
  return sub_23612CD80(a1, v2);
}

unint64_t sub_23612B0BC(uint64_t a1)
{
  uint64_t v2 = sub_2361FEF28();
  return sub_23612CF40(a1, v2);
}

unint64_t sub_23612B100(uint64_t a1, uint64_t a2)
{
  sub_2361FF2F8();
  sub_2361FE988();
  uint64_t v4 = sub_2361FF318();
  return sub_23612D008(a1, a2, v4);
}

unint64_t sub_23612B178(uint64_t a1)
{
  uint64_t v2 = sub_2361FF2E8();
  return sub_23612D0EC(a1, v2);
}

unint64_t sub_23612B1BC(uint64_t a1)
{
  uint64_t v2 = sub_2361FEDD8();
  return sub_23612D188(a1, v2, &qword_268853070);
}

unint64_t sub_23612B20C(uint64_t a1)
{
  uint64_t v2 = sub_2361FEDD8();
  return sub_23612D188(a1, v2, &qword_2688530B0);
}

uint64_t sub_23612B25C(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = sub_2361FD748();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_236126188(&qword_2688530E8);
  int v47 = a2;
  uint64_t v10 = sub_2361FF0D8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v41 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  unint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  int64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v49 = v8;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v50 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v29;
      unint64_t v31 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      int64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v32;
      unint64_t v31 = v32[1];
      sub_23612AFCC(*v32, v31);
    }
    sub_236126640((unint64_t *)&qword_268852F30, MEMORY[0x263F07490]);
    uint64_t result = sub_2361FE878();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    uint64_t v20 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v19);
    *uint64_t v20 = v30;
    v20[1] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  unint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v11;
  return result;
}

uint64_t sub_23612B6A4(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FD748();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_236126188(&qword_2688530E0);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_2361FF0D8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  int v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    int64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_236127524(v32 + v33 * v24, v54);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_2361274C0(v34 + v33 * v24, v54);
    }
    sub_236126640((unint64_t *)&qword_268852F30, MEMORY[0x263F07490]);
    uint64_t result = sub_2361FE878();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_236127524(v54, *(void *)(v13 + 56) + v33 * v22);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  unint64_t v3 = v44;
  int64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v13;
  return result;
}

uint64_t sub_23612BB80(uint64_t a1, char a2)
{
  return sub_23612C790(a1, a2, &qword_2688530C8);
}

uint64_t sub_23612BB8C(uint64_t a1, char a2)
{
  return sub_23612BBA4(a1, a2, &qword_26AD76028);
}

uint64_t sub_23612BB98(uint64_t a1, char a2)
{
  return sub_23612BBA4(a1, a2, &qword_26AD76020);
}

uint64_t sub_23612BBA4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_236126188(a3);
  uint64_t result = sub_2361FF0D8();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v30 = -1 << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = v4;
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v14) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v14)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v32;
                goto LABEL_40;
              }
              if (v31 >= 64) {
                bzero((void *)(v6 + 64), 8 * v14);
              }
              else {
                *uint64_t v10 = v30;
              }
              uint64_t v4 = v32;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v14) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = *(void *)(*(void *)(v6 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v21);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_2361FF2E8();
      uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v15 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v8 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v8 + 56) + 16 * v19) = v33;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_23612BE54(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_236126188((uint64_t *)&unk_268853080);
  char v40 = a2;
  uint64_t v6 = sub_2361FF0D8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              unint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 40 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      long long v41 = *(_OWORD *)(v32 + 16);
      char v35 = *(unsigned char *)(v32 + 32);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2361FF2F8();
      sub_2361FE988();
      uint64_t result = sub_2361FF318();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 40 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + _Block_object_dispose(&STACK[0x3B0], 8) = v34;
      *(_OWORD *)(v19 + 16) = v41;
      *(unsigned char *)(v19 + 32) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_23612C18C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_236126188((uint64_t *)&unk_2688530B8);
  char v37 = a2;
  uint64_t v6 = sub_2361FF0D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2361FF2F8();
    sub_2361FE988();
    uint64_t result = sub_2361FF318();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_23612C498(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_236126188(&qword_268853068);
  uint64_t v6 = sub_2361FF0D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    int64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_23612EA9C(v23, (uint64_t)v34);
    }
    else
    {
      sub_23612EA38((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = sub_2361FEDD8();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_23612EA9C(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_23612C778(uint64_t a1, char a2)
{
  return sub_23612CAB0(a1, a2, (uint64_t *)&unk_268854150);
}

uint64_t sub_23612C784(uint64_t a1, char a2)
{
  return sub_23612C790(a1, a2, &qword_268853078);
}

uint64_t sub_23612C790(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_236126188(a3);
  char v37 = a2;
  uint64_t v7 = sub_2361FF0D8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_2361FF2F8();
    sub_2361FE988();
    uint64_t result = sub_2361FF318();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    void *v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v1_Block_object_dispose(&STACK[0x3B0], 8) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_23612CAA4(uint64_t a1, char a2)
{
  return sub_23612CAB0(a1, a2, &qword_268853060);
}

uint64_t sub_23612CAB0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_236126188(a3);
  uint64_t v7 = sub_2361FF0D8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  char v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_2361FEDD8();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_23612CD80(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    unint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_236126640((unint64_t *)&unk_26AD74170, MEMORY[0x263F07490]);
      char v15 = sub_2361FE8B8();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_23612CF40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_23612EDE0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x237DFDF70](v9, a1);
      sub_23612EE3C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_23612D008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2361FF248() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2361FF248() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23612D0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_23612D188(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_23612EDA4(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_2361FEDE8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_2361FEDE8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

char *sub_23612D29C()
{
  uint64_t v39 = sub_2361FD748();
  uint64_t v1 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236126188(&qword_2688530E8);
  uint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_2361FF0C8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v41 = v4;
  if (!v5)
  {
    unint64_t result = (char *)swift_release();
    uint64_t v31 = v41;
    uint64_t v30 = v33;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  unint64_t result = (char *)(v4 + 64);
  char v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    unint64_t result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v41;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v40 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  char v15 = v38;
  uint64_t v14 = v39;
  uint64_t v16 = v41;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v40;
      goto LABEL_9;
    }
    int64_t v27 = v10 + 1;
    uint64_t v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 16 * v18;
    int64_t v23 = (uint64_t *)(v21 + 16 * v18);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v16 + 48) + v20, v15, v14);
    int64_t v26 = (uint64_t *)(*(void *)(v16 + 56) + v22);
    uint64_t *v26 = v24;
    v26[1] = v25;
    unint64_t result = (char *)sub_23612AFCC(v24, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_23:
    unint64_t result = (char *)swift_release();
    uint64_t v30 = v33;
    uint64_t v31 = v41;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23612D578(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23612D5D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_236126188(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23612D634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23612D69C(uint64_t a1)
{
  uint64_t v2 = sub_236126188(&qword_26AD74F40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for _ReadingHistoryUpdateProperties()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

__n128 initializeWithTake for _ReadingHistoryUpdateProperties(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties()
{
  return &type metadata for _ReadingHistoryUpdateProperties;
}

uint64_t type metadata accessor for ReadingHistoryUpdate()
{
  return self;
}

uint64_t method lookup function for ReadingHistoryUpdate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReadingHistoryUpdate);
}

uint64_t dispatch thunk of ReadingHistoryUpdate.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for BDSReadingHistoryUpdateInfo(uint64_t a1)
{
  return sub_23612EDA4(a1, &qword_268853040);
}

unsigned char *initializeBufferWithCopyOfBuffer for _ReadingHistoryUpdateProperties.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryUpdateProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23612DA34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_23612DA5C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_23612DA68(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties.CodingKeys()
{
  return &type metadata for _ReadingHistoryUpdateProperties.CodingKeys;
}

unint64_t sub_23612DA88()
{
  unint64_t result = qword_268853048;
  if (!qword_268853048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853048);
  }
  return result;
}

unint64_t sub_23612DAE0()
{
  unint64_t result = qword_268853050;
  if (!qword_268853050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853050);
  }
  return result;
}

unint64_t sub_23612DB38()
{
  unint64_t result = qword_268853058;
  if (!qword_268853058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853058);
  }
  return result;
}

void *sub_23612DB8C()
{
  uint64_t v1 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  int v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236126188(&qword_2688530E0);
  uint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_2361FF0C8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *uint64_t v24 = v10;
    return result;
  }
  unint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    unint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_2361274C0(*(void *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    unint64_t result = (void *)sub_236127524((uint64_t)v3, *(void *)(v10 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_23612DEA4()
{
  return sub_23612DEBC(&qword_26AD76028);
}

void *sub_23612DEB0()
{
  return sub_23612DEBC(&qword_26AD76020);
}

void *sub_23612DEBC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_236126188(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2361FF0C8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 16 * v16;
    long long v20 = *(_OWORD *)(*(void *)(v3 + 56) + v19);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(_OWORD *)(*(void *)(v5 + 56) + v19) = v20;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23612E060()
{
  uint64_t v1 = v0;
  sub_236126188((uint64_t *)&unk_268853080);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2361FF0C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 32);
    uint64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    long long v26 = *(_OWORD *)(v21 + 16);
    *uint64_t v25 = v19;
    v25[1] = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + _Block_object_dispose(&STACK[0x3B0], 8) = v23;
    *(_OWORD *)(v27 + 16) = v26;
    *(unsigned char *)(v27 + 32) = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23612E234()
{
  uint64_t v1 = v0;
  sub_236126188((uint64_t *)&unk_2688530B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2361FF0C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23612E3E4()
{
  uint64_t v1 = v0;
  sub_236126188(&qword_268853068);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2361FF0C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_23612EA38(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_23612EA9C(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23612E5B0()
{
  return sub_23612E780((uint64_t *)&unk_268854150);
}

void *sub_23612E5BC()
{
  uint64_t v1 = v0;
  sub_236126188(&qword_268853078);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2361FF0C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23612E774()
{
  return sub_23612E780(&qword_268853060);
}

id sub_23612E780(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_236126188(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2361FF0C8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23612E920(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614473796164 && a2 == 0xE800000000000000;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E654774696465 && a2 == 0xEE006E6F69746172)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_23612EA38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23612EA9C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_23612EAB4()
{
  unint64_t result = qword_268853090;
  if (!qword_268853090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853090);
  }
  return result;
}

id sub_23612EB08()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_2361FD668();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_2361FD5A8();

    swift_willThrow();
  }
  return v2;
}

id sub_23612EBC8(void *a1)
{
  sub_23612EDA4(0, &qword_268853098);
  uint64_t v2 = sub_2361FED88();
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = sub_2361FD678();
    unint64_t v6 = v5;
    id v7 = objc_allocWithZone(MEMORY[0x263F08928]);
    id v8 = sub_23612EB08();
    sub_23612D578(v4, v6);
    if (v8)
    {
      sub_23612ED50();
      sub_2361FECC8();
      if (v14 != 2)
      {
        uint64_t v11 = (objc_class *)type metadata accessor for ReadingHistoryServiceStatus();
        uint64_t v12 = objc_allocWithZone(v11);
        v12[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = v14 & 1;
        v13.receiver = v12;
        v13.super_class = v11;
        id v9 = objc_msgSendSuper2(&v13, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        return v9;
      }
      objc_msgSend(v8, sel_finishDecoding);
    }
  }
  else
  {
  }
  return 0;
}

unint64_t sub_23612ED50()
{
  unint64_t result = qword_2688530A0;
  if (!qword_2688530A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688530A0);
  }
  return result;
}

uint64_t sub_23612EDA4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23612EDE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23612EE3C(uint64_t a1)
{
  return a1;
}

unint64_t sub_23612EE90()
{
  unint64_t result = qword_2688530D0;
  if (!qword_2688530D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688530D0);
  }
  return result;
}

unint64_t sub_23612EEE4()
{
  unint64_t result = qword_2688530D8;
  if (!qword_2688530D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688530D8);
  }
  return result;
}

uint64_t sub_23612EF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23612EF9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_23612EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for Code(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void sub_23612F074(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_23612F0BC()
{
  return sub_236126640(&qword_268853100, type metadata accessor for CKError);
}

uint64_t sub_23612F104()
{
  return sub_236126640(&qword_268853108, type metadata accessor for CKError);
}

uint64_t sub_23612F14C()
{
  return sub_236126640(&qword_268853110, type metadata accessor for Code);
}

uint64_t sub_23612F194()
{
  return sub_236126640(&qword_268853118, type metadata accessor for CKError);
}

uint64_t sub_23612F1DC()
{
  return sub_236126640(&qword_268853120, type metadata accessor for CKError);
}

uint64_t sub_23612F224()
{
  return sub_236126640(&qword_268853128, type metadata accessor for CKError);
}

uint64_t sub_23612F26C()
{
  return sub_236126640((unint64_t *)&unk_268853130, type metadata accessor for CKError);
}

uint64_t sub_23612F2B4()
{
  return sub_236126640(&qword_268854160, type metadata accessor for Code);
}

uint64_t sub_23612F2FC()
{
  return sub_236126640(&qword_268853140, type metadata accessor for Code);
}

unint64_t sub_23612F348()
{
  unint64_t result = qword_268853148;
  if (!qword_268853148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853148);
  }
  return result;
}

uint64_t sub_23612F3A0()
{
  swift_getMetatypeMetadata();
  uint64_t v0 = sub_2361FE928();
  unint64_t v2 = v1;
  sub_2361FEA08();
  uint64_t v3 = sub_2361FE938();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_2361368C8(15, v3, v5, v0, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

BOOL static CRDTModelSyncManager.SyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CRDTModelSyncManager.SyncError.hash(into:)()
{
  return sub_2361FF308();
}

uint64_t CRDTModelSyncManager.SyncError.hashValue.getter()
{
  return sub_2361FF318();
}

uint64_t sub_23612F4EC()
{
  return sub_2361FF318();
}

id static CRDTModelSyncManager.defaultDataSource.getter()
{
  return sub_2361D973C();
}

uint64_t sub_23612F568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x50);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CRDTModelSyncManager.observable.getter()
{
  type metadata accessor for ModelState();
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  sub_2361FED38();
  return v1;
}

uint64_t sub_23612F7C8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + qword_268853340);
  return swift_retain();
}

uint64_t CRDTModelSyncManager.model.getter()
{
  return sub_2361FED38();
}

uint64_t sub_23612F878@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x50);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a2, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23612F9F8@<X0>(uint64_t a1@<X8>)
{
  return sub_23612F878(*(void **)(v1 + 16), a1);
}

uint64_t CRDTModelSyncManager.enableCloudSync.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + qword_26885A4F0);
  swift_beginAccess();
  return *v1;
}

void CRDTModelSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t v3 = (char *)(v1 + qword_26885A4F0);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = a1;
  sub_23612FAB8(v4);
}

void sub_23612FAB8(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + qword_26885A4F0);
  swift_beginAccess();
  int v4 = *v3;
  if (v4 != v2) {
    sub_2361D99A8(v4);
  }
}

void (*CRDTModelSyncManager.enableCloudSync.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  int v4 = (unsigned char *)(v1 + qword_26885A4F0);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_23612FBA4;
}

void sub_23612FBA4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  CRDTModelSyncManager.enableCloudSync.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

char *CRDTModelSyncManager.__allocating_init(cloudKitController:crdtContext:dataSource:transactionProvider:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for CRDTModelCloudDataManager();
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  swift_unknownObjectRetain();
  objc_super v13 = sub_2361D97C4(v10, v11, v12, a4);
  id v14 = objc_allocWithZone(v5);
  unint64_t v15 = sub_23612FD20(v13, v11, a4);

  *(void *)&v13[qword_26885A520 + 8] = &off_26E972330;
  swift_unknownObjectWeakAssign();

  return v15;
}

char *sub_23612FCD4(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return sub_23612FD20(a1, a2, a3);
}

char *sub_23612FD20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v53 = a3;
  id v54 = a2;
  id v56 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v4 = (void *)(*MEMORY[0x263F8EED0] & *v3);
  uint64_t v5 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v55 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[12];
  uint64_t v50 = v4[11];
  uint64_t v61 = v8;
  uint64_t v9 = type metadata accessor for ModelState.Source();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v52 = (char *)&v48 - v10;
  uint64_t v49 = type metadata accessor for ModelState();
  uint64_t v58 = *(void *)(v49 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v49);
  uint64_t v59 = (uint64_t)&v48 - v12;
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v48 - v15;
  uint64_t v57 = sub_2361FED18();
  uint64_t v17 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2361FECF8();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v21 = sub_2361FE098();
  MEMORY[0x270FA5388](v21 - 8);
  v63[0] = 0;
  v63[1] = 0xE000000000000000;
  unint64_t v22 = v3;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  strcpy((char *)v63, "CRDTModelSync.");
  HIBYTE(v63[1]) = -18;
  sub_23612F3A0();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FDB48();
  uint64_t v23 = qword_268853330;
  sub_236134A78();
  sub_2361FE088();
  sub_2361FECE8();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F138], v57);
  uint64_t v24 = v53;
  *(void *)((char *)v22 + v23) = sub_2361FED58();
  uint64_t v26 = v49;
  uint64_t v25 = v50;
  *((unsigned char *)v22 + qword_26885A4F0) = 0;
  sub_2361FE4A8();
  id v27 = v54;
  *(void *)((char *)v22 + qword_26885333_Block_object_dispose(&STACK[0x3B0], 8) = v54;
  uint64_t v28 = v60;
  unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  int64_t v30 = v48;
  uint64_t v57 = (uint64_t)v16;
  v29(v48, v16, v7);
  LOBYTE(v63[0]) = 0;
  uint64_t v31 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v52, 1, 2, v7);
  uint64_t v32 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v33 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v55, 1, 1, v32);
  id v54 = v27;
  uint64_t v34 = v59;
  uint64_t v35 = (uint64_t)v30;
  uint64_t v36 = v25;
  ModelState.init(model:loaded:source:revisionInfo:)(v35, (char *)v63, v31, v33, v7, v59);
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  *(void *)((char *)v22 + qword_268853340) = sub_236142808(v34);
  uint64_t v37 = v56;
  *(void *)((char *)v22 + qword_268853350) = v56;
  *(void *)((char *)v22 + qword_26885335_Block_object_dispose(&STACK[0x3B0], 8) = v24;
  type metadata accessor for ObservableTransaction();
  uint64_t v38 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  id v39 = v37;
  *(void *)((char *)v22 + qword_26885334_Block_object_dispose(&STACK[0x3B0], 8) = sub_23614249C(0xD000000000000030, 0x800000023620A4C0, v24, v38);

  v62.receiver = v22;
  v62.super_class = ObjectType;
  uint64_t v40 = (char *)objc_msgSendSuper2(&v62, sel_init);
  sub_2361428D8(*(void *)&v40[qword_268853348], (uint64_t)&protocol witness table for ObservableTransaction);
  uint64_t v41 = v40;
  uint64_t v42 = sub_2361FDB38();
  os_log_type_t v43 = sub_2361FEC88();
  if (os_log_type_enabled(v42, v43))
  {
    int64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v44 = 0;
    _os_log_impl(&dword_2360BC000, v42, v43, "CRDTModelSyncManager Init: About to load cloudData", v44, 2u);
    MEMORY[0x237DFF240](v44, -1, -1);
  }

  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = v7;
  v46[3] = v36;
  v46[4] = v61;
  v46[5] = v45;
  swift_retain();
  sub_2361D9820((uint64_t)sub_236134B28, (uint64_t)v46);

  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v26);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v7);
  swift_release();
  return v41;
}

uint64_t sub_2361304F8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2361FE098();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FE058();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DFF340](a2 + 16);
  if (result)
  {
    uint64_t v13 = (void *)result;
    sub_2361FE048();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    void aBlock[4] = sub_236134B74;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2361E02F8;
    aBlock[3] = &unk_26E972580;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = a1;
    id v17 = v13;
    sub_2361FE078();
    MEMORY[0x237DFDD80](0, v7, v11, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_236130758(void *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *MEMORY[0x263F8EED0] & *a1;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = sub_2361FEE38();
  uint64_t v97 = *(char **)(v6 - 8);
  unint64_t v98 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v89 - v7;
  uint64_t v9 = sub_236126188(&qword_26AD754A0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v89 - v14;
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v95 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v94 = (char *)&v89 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v89 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v96 = (char *)&v89 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v89 - v25;
  sub_23612F568((uint64_t)&v89 - v25);
  uint64_t v27 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
  if (!a2)
  {
    uint64_t v46 = sub_2361FDB38();
    uint64_t v51 = sub_2361FEC88();
    if (os_log_type_enabled(v46, (os_log_type_t)v51))
    {
      uint64_t v52 = v5;
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_2360BC000, v46, (os_log_type_t)v51, "CRDTModelSyncManager Init: empty cloudData", v53, 2u);
      id v54 = v53;
      uint64_t v5 = v52;
      MEMORY[0x237DFF240](v54, -1, -1);
    }
    goto LABEL_11;
  }
  uint64_t v100 = a2;
  sub_23613127C(v12);
  sub_23613491C((uint64_t)v15, &qword_26AD754A0);
  sub_23612D5D0((uint64_t)v12, (uint64_t)v15, &qword_26AD754A0);
  uint64_t v99 = (void (*)(char *, uint64_t))((char *)v3 + qword_26885A4F8);
  uint64_t v28 = sub_2361FDB38();
  os_log_type_t v29 = sub_2361FEC88();
  if (os_log_type_enabled(v28, v29))
  {
    int64_t v30 = v15;
    uint64_t v31 = v26;
    uint64_t v32 = v3;
    uint64_t v33 = v4;
    uint64_t v34 = v5;
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_2360BC000, v28, v29, "CRDTModelSyncManager Init: About to deserialize existing data", v35, 2u);
    uint64_t v36 = v35;
    uint64_t v5 = v34;
    uint64_t v4 = v33;
    uint64_t v3 = v32;
    uint64_t v26 = v31;
    uint64_t v15 = v30;
    MEMORY[0x237DFF240](v36, -1, -1);
  }

  id v37 = v100;
  unint64_t v38 = *(void *)&v100[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
  if (v38 >> 60 == 15)
  {
    uint64_t v46 = sub_2361FDB38();
    os_log_type_t v47 = sub_2361FEC68();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = v5;
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_2360BC000, v46, v47, "CRDTModelSyncManager Init: couldn't deserialize existing data", v49, 2u);
      uint64_t v50 = v49;
      uint64_t v5 = v48;
      id v37 = v100;
      MEMORY[0x237DFF240](v50, -1, -1);
    }

LABEL_11:
    goto LABEL_12;
  }
  id v39 = v3;
  uint64_t v40 = v4;
  uint64_t v41 = *(void *)&v100[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  uint64_t v92 = v39;
  uint64_t v93 = v5;
  uint64_t v42 = *(void **)((char *)v39 + qword_268853338);
  sub_2361343E8(v41, v38);
  sub_2361343E8(v41, v38);
  uint64_t v43 = *(void *)(*(void *)(v40 + 88) + 8);
  id v44 = v42;
  uint64_t v45 = v93;
  uint64_t v91 = v43;
  sub_2361FE5E8();
  uint64_t v89 = v40;
  uint64_t v90 = v41;
  uint64_t v97 = v26;
  unint64_t v98 = v38;
  uint64_t v56 = v101;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v8, 0, 1, v45);
  uint64_t v57 = v96;
  (*(void (**)(void))(v56 + 32))();
  uint64_t v3 = v92;
  sub_23612F568((uint64_t)v22);
  uint64_t v58 = v45;
  char v59 = sub_2361FE5A8();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  v60(v22, v58);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  if (v59)
  {
    objc_super v62 = v94;
    v61(v94, v57, v58);
    uint64_t v63 = sub_2361FDB38();
    os_log_type_t v64 = sub_2361FEC88();
    int v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = v62;
      uint64_t v99 = v60;
      uint64_t v68 = v66;
      uint64_t v69 = swift_slowAlloc();
      v104[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315394;
      LODWORD(v95) = v65;
      uint64_t v70 = sub_2361FF218();
      uint64_t v103 = sub_23612A974(v70, v71, v104);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      v99(v67, v93);
      *(_WORD *)(v68 + 12) = 2080;
      unint64_t v72 = v97;
      swift_beginAccess();
      uint64_t v73 = sub_2361FF218();
      uint64_t v102 = sub_23612A974(v73, v74, v104);
      uint64_t v5 = v93;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2360BC000, v63, (os_log_type_t)v95, "CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v69, -1, -1);
      uint64_t v75 = v68;
      uint64_t v60 = v99;
      id v76 = v100;
      MEMORY[0x237DFF240](v75, -1, -1);

      uint64_t v77 = v96;
      uint64_t v78 = v90;
    }
    else
    {
      uint64_t v5 = v58;

      v60(v62, v58);
      uint64_t v77 = v96;
      unint64_t v72 = v97;
      uint64_t v78 = v90;
      id v76 = v100;
    }
    swift_beginAccess();
    sub_2361FE438();
    swift_endAccess();

    sub_2361343FC(v78, v98);
    v60(v77, v5);
    uint64_t v26 = v72;
  }
  else
  {
    uint64_t v79 = v95;
    v61(v95, v57, v58);
    int v80 = sub_2361FDB38();
    BOOL v81 = v57;
    os_log_type_t v82 = sub_2361FEC88();
    if (os_log_type_enabled(v80, v82))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v99 = v60;
      unint64_t v84 = (uint8_t *)v83;
      uint64_t v85 = swift_slowAlloc();
      v104[0] = v85;
      *(_DWORD *)unint64_t v84 = 136315138;
      uint64_t v94 = (char *)(v84 + 4);
      uint64_t v86 = sub_2361FF218();
      uint64_t v103 = sub_23612A974(v86, v87, v104);
      uint64_t v5 = v93;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      unint64_t v88 = v99;
      v99(v79, v5);
      _os_log_impl(&dword_2360BC000, v80, v82, "CRDTModelSyncManager Init: loaded stored model=%s, no delta", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v85, -1, -1);
      MEMORY[0x237DFF240](v84, -1, -1);

      sub_2361343FC(v90, v98);
      v88(v96, v5);
    }
    else
    {
      uint64_t v5 = v58;
      sub_2361343FC(v90, v98);

      v60(v79, v58);
      v60(v81, v58);
    }
    uint64_t v26 = v97;
  }
LABEL_12:
  sub_2361311C4(v3, (uint64_t)v26, (uint64_t)v15);
  sub_23613491C((uint64_t)v15, &qword_26AD754A0);
  return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v26, v5);
}

uint64_t sub_2361311C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *MEMORY[0x263F8EED0] & *a1;
  v5[1] = *(_OWORD *)(v3 + 0x50);
  uint64_t v6 = *(void *)(v3 + 96);
  uint64_t v7 = a2;
  uint64_t v8 = a3;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_236134B7C, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_23613127C@<X0>(uint64_t *a1@<X8>)
{
  int v2 = v1;
  uint64_t v4 = sub_236126188(&qword_26AD74180);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = (uint64_t *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  unint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
  if (v13 >> 60 == 15)
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = *v12;
    sub_23612AFCC(*v12, *(void *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8]);
    uint64_t v17 = (void *)sub_2361FD668();
    id v18 = objc_msgSend(v17, sel_bu_sha256);

    sub_2361FE8D8();
    uint64_t v35 = 0x2D363532616873;
    unint64_t v36 = 0xE700000000000000;
    sub_2361FE9B8();
    swift_bridgeObjectRelease();
    sub_2361343FC(v16, v13);
    uint64_t v14 = v35;
    unint64_t v15 = v36;
  }
  id v19 = objc_msgSend(v2, sel_systemFields);
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = objc_msgSend(v19, sel_recordChangeTag);

    if (v21)
    {
      uint64_t v20 = (void *)sub_2361FE8D8();
      uint64_t v23 = v22;

      goto LABEL_9;
    }
    uint64_t v20 = 0;
  }
  uint64_t v23 = 0;
LABEL_9:
  id v24 = objc_msgSend(v2, sel_modificationDate);
  if (v24)
  {
    uint64_t v25 = v24;
    sub_2361FD728();

    uint64_t v26 = sub_2361FD748();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = sub_2361FD748();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v9, 1, 1, v27);
  }
  sub_23612D5D0((uint64_t)v9, (uint64_t)v11, &qword_26AD74180);
  if (v15)
  {
    uint64_t v28 = v34;
    sub_2361348B8((uint64_t)v11, v34, &qword_26AD74180);
  }
  else
  {
    uint64_t v28 = v34;
    sub_2361348B8((uint64_t)v11, v34, &qword_26AD74180);
    if (!v23)
    {
      uint64_t v29 = sub_2361FD748();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
      {
        swift_bridgeObjectRelease_n();
        sub_23613491C(v28, &qword_26AD74180);
        sub_23613491C((uint64_t)v11, &qword_26AD74180);
        uint64_t v30 = type metadata accessor for CRDTModelRevisionInfo();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a1, 1, 1, v30);
      }
    }
  }
  sub_23613491C(v28, &qword_26AD74180);
  *a1 = v14;
  a1[1] = v15;
  a1[2] = (uint64_t)v20;
  a1[3] = v23;
  uint64_t v32 = type metadata accessor for CRDTModelRevisionInfo();
  sub_23612D5D0((uint64_t)v11, (uint64_t)a1 + *(int *)(v32 + 24), &qword_26AD74180);
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a1, 0, 1, v32);
}

id CRDTModelSyncManager.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_2361FDB38();
  os_log_type_t v4 = sub_2361FEC88();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2360BC000, v3, v4, "CRDTModelSyncManager deinit", v5, 2u);
    MEMORY[0x237DFF240](v5, -1, -1);
  }

  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

id sub_236131740(void *a1)
{
  id v1 = a1;
  return CRDTModelSyncManager.__deallocating_deinit();
}

uint64_t sub_236131768(uint64_t a1)
{
  uint64_t v2 = a1 + qword_26885A4F8;
  uint64_t v3 = sub_2361FDB58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t CRDTModelSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelSyncManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v5 = sub_2361FE058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361FE048();
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  char v13 = a2;
  sub_2361FED28();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_236131984(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v128 = a2;
  uint64_t v5 = *(void *)((*MEMORY[0x263F8EED0] & *(void *)v2) + 0x50);
  uint64_t v6 = *(void *)((*MEMORY[0x263F8EED0] & *(void *)v2) + 0x58);
  uint64_t v7 = *(void *)((*MEMORY[0x263F8EED0] & *(void *)v2) + 0x60);
  uint64_t v127 = type metadata accessor for ModelState.Source();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  long long v132 = (char *)v114 - v8;
  uint64_t v131 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v143 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v123 = (uint64_t)v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v144 = (void *)((char *)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = type metadata accessor for ModelState();
  uint64_t v125 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v141 = (char *)v114 - v12;
  uint64_t v13 = sub_2361FE548();
  uint64_t v138 = *(void *)(v13 - 8);
  unint64_t v139 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v137 = (char *)v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  long long v134 = (char *)v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v129 = (char *)v114 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v146 = (uint64_t)v114 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v135 = (char *)v114 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v114 - v25;
  id v27 = objc_msgSend(*(id *)&v2[qword_268853358], sel_createTransactionWithName_, "com.apple.ibooks.CRDTModelSyncManager.q_sync");
  sub_23612F568((uint64_t)v26);
  uint64_t v136 = *(void *)(v6 + 8);
  char v28 = sub_2361FE5A8();
  uint64_t v147 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v148 = v5;
  uint64_t v145 = v16 + 8;
  v147(v26, v5);
  if (v28)
  {
    uint64_t v122 = v6;
    uint64_t v130 = v7;
    uint64_t v29 = &v3[qword_26885A4F8];
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v31 = v135;
    uint64_t v32 = a1;
    uint64_t v120 = v16 + 16;
    uint64_t v124 = v30;
    v30(v135, a1, v148);
    uint64_t v33 = v3;
    uint64_t v121 = v29;
    uint64_t v34 = sub_2361FDB38();
    os_log_type_t v35 = sub_2361FEC88();
    int v36 = v35;
    BOOL v37 = os_log_type_enabled(v34, v35);
    id v119 = v27;
    long long v133 = v33;
    uint64_t v118 = v32;
    uint64_t v117 = v16;
    if (v37)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v116 = swift_slowAlloc();
      uint64_t v149 = v116;
      *(_DWORD *)uint64_t v38 = 136315394;
      os_log_t v115 = v34;
      uint64_t v39 = v148;
      uint64_t v40 = sub_2361FF218();
      uint64_t v151 = sub_23612A974(v40, v41, &v149);
      v114[2] = &v152;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      uint64_t v42 = v147;
      v147(v31, v39);
      *(_WORD *)(v38 + 12) = 2080;
      v114[1] = v38 + 14;
      sub_23612F568((uint64_t)v26);
      LODWORD(v135) = v36;
      uint64_t v43 = sub_2361FF218();
      unint64_t v45 = v44;
      v42(v26, v39);
      uint64_t v151 = sub_23612A974(v43, v45, &v149);
      uint64_t v46 = v42;
      os_log_type_t v47 = v133;
      uint64_t v48 = v146;
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      os_log_t v49 = v115;
      _os_log_impl(&dword_2360BC000, v115, (os_log_type_t)v135, "CRDTModelSyncManager q_sync: incoming=%s and existing=%s", (uint8_t *)v38, 0x16u);
      uint64_t v50 = v116;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v50, -1, -1);
      MEMORY[0x237DFF240](v38, -1, -1);
    }
    else
    {

      uint64_t v46 = v147;
      v147(v31, v148);

      uint64_t v48 = v146;
    }
    unint64_t v52 = v139;
    sub_23612F568((uint64_t)v26);
    uint64_t v53 = v148;
    sub_2361FE5D8();
    v46(v26, v53);
    uint64_t v54 = v138;
    uint64_t v55 = v137;
    (*(void (**)(char *, void, unint64_t))(v138 + 104))(v137, *MEMORY[0x263F32EA8], v52);
    uint64_t v56 = (void *)v140;
    uint64_t v57 = sub_2361FE418();
    unint64_t v59 = v52;
    uint64_t v60 = v143;
    if (v56)
    {

      (*(void (**)(char *, unint64_t))(v54 + 8))(v55, v52);
      uint64_t v61 = v134;
      v124(v134, v48, v148);
      objc_super v62 = sub_2361FDB38();
      os_log_type_t v63 = sub_2361FEC68();
      if (os_log_type_enabled(v62, v63))
      {
        os_log_type_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v149 = v65;
        *(_DWORD *)os_log_type_t v64 = 136315138;
        uint64_t v66 = v148;
        uint64_t v67 = sub_2361FF218();
        uint64_t v151 = sub_23612A974(v67, v68, &v149);
        uint64_t v69 = v147;
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        v69(v134, v66);
        _os_log_impl(&dword_2360BC000, v62, v63, "CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v65, -1, -1);
        uint64_t v48 = v146;
        MEMORY[0x237DFF240](v64, -1, -1);
      }
      else
      {

        uint64_t v69 = v147;
        v147(v61, v148);
      }
      uint64_t v106 = v148;
      type metadata accessor for CRDTModelSyncManager.SyncError();
      swift_getWitnessTable();
      swift_allocError();
      unsigned char *v107 = 1;
      swift_willThrow();

      v69((char *)v48, v106);
    }
    else
    {
      uint64_t v70 = v57;
      unint64_t v71 = v58;
      uint64_t v136 = 0;
      (*(void (**)(char *, unint64_t))(v54 + 8))(v55, v59);
      unint64_t v140 = v70;
      sub_23612AFCC(v70, v71);
      swift_retain();
      unint64_t v72 = v141;
      MutableObservableContainer.value.getter();
      swift_release();
      uint64_t v73 = (uint64_t)&v72[*(int *)(v142 + 52)];
      uint64_t v74 = 1;
      uint64_t v75 = v131;
      int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v73, 1, v131);
      unint64_t v139 = v71;
      if (!v76)
      {
        uint64_t v77 = v123;
        sub_2361347F8(v73, v123);
        uint64_t v78 = (void *)sub_2361FD668();
        id v79 = objc_msgSend(v78, sel_bu_sha256);

        sub_2361FE8D8();
        uint64_t v149 = 0x2D363532616873;
        unint64_t v150 = 0xE700000000000000;
        sub_2361FE9B8();
        swift_bridgeObjectRelease();
        uint64_t v80 = v149;
        unint64_t v81 = v150;
        uint64_t v83 = *(void *)(v77 + 16);
        uint64_t v82 = *(void *)(v77 + 24);
        uint64_t v84 = *(int *)(v75 + 24);
        uint64_t v85 = v144;
        sub_2361348B8(v77 + v84, (uint64_t)v144 + v84, &qword_26AD74180);
        *uint64_t v85 = v80;
        v85[1] = v81;
        v85[2] = v83;
        v85[3] = v82;
        uint64_t v60 = v143;
        uint64_t v75 = v131;
        swift_bridgeObjectRetain();
        sub_23613485C(v77);
        uint64_t v74 = 0;
      }
      uint64_t v86 = 1;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v144, v74, 1, v75);
      uint64_t v87 = (uint64_t)v132;
      if (v128)
      {
        v124(v132, v118, v148);
        uint64_t v86 = 0;
      }
      uint64_t v88 = v148;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v87, v86, 2, v148);
      uint64_t v89 = v146;
      uint64_t v90 = v141;
      uint64_t v91 = ModelState.updating(model:source:revisionInfo:)(v146, v87, (uint64_t)v144, v142);
      MEMORY[0x270FA5388](v91);
      uint64_t v92 = v122;
      v114[-4] = v88;
      v114[-3] = v92;
      v114[-2] = v130;
      v114[-1] = v90;
      swift_retain();
      MutableObservableContainer.mutate(_:)((uint64_t)sub_236134790, (uint64_t)&v114[-6]);
      swift_release();
      uint64_t v93 = v129;
      v124(v129, v89, v88);
      unint64_t v94 = v139;
      uint64_t v95 = v140;
      sub_23612AFCC(v140, v139);
      sub_23612AFCC(v95, v94);
      uint64_t v96 = sub_2361FDB38();
      os_log_type_t v97 = sub_2361FEC88();
      if (os_log_type_enabled(v96, v97))
      {
        unint64_t v98 = v93;
        uint64_t v99 = swift_slowAlloc();
        uint64_t v100 = swift_slowAlloc();
        uint64_t v149 = v100;
        *(_DWORD *)uint64_t v99 = 136315394;
        uint64_t v101 = v148;
        uint64_t v102 = sub_2361FF218();
        uint64_t v151 = sub_23612A974(v102, v103, &v149);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        v147(v98, v101);
        *(_WORD *)(v99 + 12) = 2048;
        uint64_t v104 = (void (*)(uint64_t, uint64_t))v147;
        uint64_t v87 = (uint64_t)v132;
        uint64_t v95 = v140;
        switch(v94 >> 62)
        {
          case 1uLL:
            unint64_t v108 = HIDWORD(v140);
            sub_23612D578(v140, v139);
            LODWORD(v105) = v108 - v95;
            if (__OFSUB__(v108, v95))
            {
              __break(1u);
LABEL_29:
              __break(1u);
              JUMPOUT(0x2361329B4);
            }
            uint64_t v105 = (int)v105;
            break;
          case 2uLL:
            uint64_t v110 = *(void *)(v140 + 16);
            uint64_t v109 = *(void *)(v140 + 24);
            sub_23612D578(v140, v139);
            uint64_t v105 = v109 - v110;
            if (__OFSUB__(v109, v110)) {
              goto LABEL_29;
            }
            uint64_t v87 = (uint64_t)v132;
            break;
          case 3uLL:
            unint64_t v94 = v139;
            sub_23612D578(v140, v139);
            uint64_t v105 = 0;
            goto LABEL_25;
          default:
            unint64_t v94 = v139;
            sub_23612D578(v140, v139);
            uint64_t v105 = BYTE6(v94);
            goto LABEL_25;
        }
        unint64_t v94 = v139;
LABEL_25:
        uint64_t v151 = v105;
        sub_2361FEE68();
        sub_23612D578(v95, v94);
        _os_log_impl(&dword_2360BC000, v96, v97, "CRDTModelSyncManager q_sync: sending merged=%s as %ld bytes to BCCloudDataManager", (uint8_t *)v99, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v100, -1, -1);
        MEMORY[0x237DFF240](v99, -1, -1);
      }
      else
      {
        sub_23612D578(v95, v94);

        uint64_t v104 = (void (*)(uint64_t, uint64_t))v147;
        v147(v93, v148);
        sub_23612D578(v95, v94);
      }
      uint64_t v111 = swift_allocObject();
      id v112 = v119;
      *(void *)(v111 + 16) = v119;
      id v113 = v112;
      sub_2361D99D0(v95, v94, (uint64_t)sub_236134A68, v111);

      swift_release();
      sub_23612D578(v95, v94);
      sub_23612D578(v95, v94);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v87, v127);
      sub_23613491C((uint64_t)v144, &qword_26AD754A0);
      v104(v146, v148);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v141, v142);
    }
  }
  else
  {
    type metadata accessor for CRDTModelSyncManager.SyncError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v51 = 0;
    swift_willThrow();
  }
}

id CRDTModelSyncManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CRDTModelSyncManager.init()()
{
}

void sub_236132A4C()
{
}

uint64_t sub_236132AA4(uint64_t a1)
{
  uint64_t v2 = v1;
  os_log_t v49 = (void *)(*MEMORY[0x263F8EED0] & *v2);
  uint64_t v4 = v49[10];
  uint64_t v5 = sub_2361FEE38();
  Class isa = v5[-1].isa;
  dispatch_queue_t v47 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v39 - v12;
  uint64_t v13 = sub_236126188(&qword_26AD754A0);
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v43 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v39 - v16;
  sub_23613127C((uint64_t *)((char *)&v39 - v16));
  unint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8);
  if (v18 >> 60 == 15)
  {
    uint64_t v22 = sub_2361FDB38();
    os_log_type_t v23 = sub_2361FEC68();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_2360BC000, v22, v23, "CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data", v24, 2u);
      MEMORY[0x237DFF240](v24, -1, -1);
    }

    sub_2361330B4((uint64_t)v17);
    return sub_23613491C((uint64_t)v17, &qword_26AD754A0);
  }
  else
  {
    unint64_t v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = v9;
    uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData);
    uint64_t v20 = *(void **)((char *)v2 + qword_268853338);
    sub_2361343E8(v19, v18);
    sub_2361343E8(v19, v18);
    uint64_t v40 = v49[11];
    id v21 = v20;
    uint64_t v42 = v19;
    sub_2361FE5E8();
    uint64_t v25 = v45;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v8, 0, 1, v4);
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    Class isa = (Class)(v25 + 32);
    uint64_t v26 = v48;
    v39(v48, v8, v4);
    dispatch_queue_t v47 = *(dispatch_queue_t *)((char *)v2 + qword_268853330);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v41, v26, v4);
    uint64_t v27 = v44;
    sub_2361348B8((uint64_t)v17, v44, &qword_26AD754A0);
    unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v29 = (v10 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v43 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v31 = (char *)swift_allocObject();
    uint64_t v33 = v40;
    uint64_t v32 = v41;
    *((void *)v31 + 2) = v4;
    *((void *)v31 + 3) = v33;
    *((void *)v31 + 4) = v49[12];
    v39(&v31[v28], v32, v4);
    *(void *)&v31[v29] = v2;
    sub_23612D5D0(v27, (uint64_t)&v31[v30], &qword_26AD754A0);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_23613461C;
    *(void *)(v34 + 24) = v31;
    void aBlock[4] = sub_236134708;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23613F9DC;
    aBlock[3] = &unk_26E9724B8;
    os_log_type_t v35 = _Block_copy(aBlock);
    int v36 = v2;
    swift_retain();
    swift_release();
    dispatch_sync(v47, v35);
    _Block_release(v35);
    sub_2361343FC(v42, v18);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v4);
    sub_23613491C((uint64_t)v17, &qword_26AD754A0);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2361330B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x50);
  uint64_t v5 = *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
  uint64_t v21 = *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x58);
  uint64_t v22 = v4;
  uint64_t v6 = type metadata accessor for ModelState();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361348B8(a1, (uint64_t)v11, &qword_26AD754A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_23613491C((uint64_t)v11, &qword_26AD754A0);
  }
  sub_236134794((uint64_t)v11, (uint64_t)v15);
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  uint64_t v17 = (uint64_t)&v8[*(int *)(v6 + 52)];
  sub_23613491C(v17, &qword_26AD754A0);
  sub_2361347F8((uint64_t)v15, v17);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = v21;
  *(&v20 - 4) = v22;
  *(&v20 - 3) = v19;
  *(&v20 - 2) = v5;
  *(&v20 - 1) = (uint64_t)v8;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_236134790, (uint64_t)(&v20 - 6));
  swift_release();
  sub_23613485C((uint64_t)v15);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v6);
}

uint64_t sub_2361333DC(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v98 = (uint8_t *)a3;
  uint64_t v5 = *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x50);
  uint64_t v6 = *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x58);
  uint64_t v97 = *(void *)((*MEMORY[0x263F8EED0] & *a2) + 0x60);
  uint64_t v96 = type metadata accessor for ModelState();
  uint64_t v94 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  os_log_t v95 = (os_log_t)((char *)&v78 - v7);
  uint64_t v93 = v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v90 = *(void *)(v8 + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v89 = sub_2361FEE38();
  uint64_t v9 = MEMORY[0x270FA5388](v89);
  uint64_t v88 = (char *)&v78 - v10;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v78 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v78 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v78 - v21;
  sub_23612F568((uint64_t)&v78 - v21);
  uint64_t v91 = v8;
  LOBYTE(v6) = sub_2361FE5A8();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v99 = v11 + 8;
  uint64_t v100 = v23;
  v23(v22, v5);
  uint64_t v24 = (char *)a2 + qword_26885A4F8;
  uint64_t v92 = v11;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  if (v6)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v25(v20, a1, v5);
    uint64_t v87 = a1;
    uint64_t v85 = v26;
    v26(v17, a1, v5);
    uint64_t v27 = a2;
    uint64_t v86 = v24;
    unint64_t v28 = sub_2361FDB38();
    os_log_type_t v29 = sub_2361FEC88();
    int v30 = v29;
    BOOL v31 = os_log_type_enabled(v28, v29);
    uint64_t v84 = v22;
    if (v31)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      v102[0] = v82;
      *(_DWORD *)uint64_t v32 = 136315650;
      int v81 = v30;
      os_log_t v80 = v28;
      uint64_t v33 = sub_2361FF218();
      uint64_t v101 = sub_23612A974(v33, v34, v102);
      uint64_t v83 = v102;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      os_log_type_t v35 = v100;
      v100(v20, v5);
      id v79 = v17;
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v78 = v32 + 14;
      sub_23612F568((uint64_t)v22);
      uint64_t v36 = sub_2361FF218();
      unint64_t v38 = v37;
      v35(v22, v5);
      uint64_t v101 = sub_23612A974(v36, v38, v102);
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      sub_23612F568((uint64_t)v22);
      uint64_t v39 = v79;
      sub_2361FE608();
      uint64_t v40 = v100;
      v100(v22, v5);
      uint64_t v41 = sub_2361FE948();
      uint64_t v101 = sub_23612A974(v41, v42, v102);
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      v40(v39, v5);

      os_log_t v43 = v80;
      _os_log_impl(&dword_2360BC000, v80, (os_log_type_t)v81, "CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s", (uint8_t *)v32, 0x20u);
      uint64_t v44 = v82;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v44, -1, -1);
      MEMORY[0x237DFF240](v32, -1, -1);
    }
    else
    {

      unint64_t v58 = v100;
      v100(v20, v5);

      v58(v17, v5);
    }
    swift_retain();
    os_log_t v59 = v95;
    MutableObservableContainer.value.getter();
    swift_release();
    uint64_t v60 = v87;
    sub_2361FE438();
    uint64_t v61 = v96;
    objc_super v62 = (char *)v59 + *(int *)(v96 + 48);
    uint64_t v63 = v93;
    os_log_type_t v64 = v27;
    uint64_t v65 = v97;
    uint64_t v66 = type metadata accessor for ModelState.Source();
    (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v62, v66);
    v85(v62, v60, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v62, 0, 2, v5);
    uint64_t v67 = sub_236134728((uint64_t)v98, (uint64_t)v59 + *(int *)(v61 + 52));
    MEMORY[0x270FA5388](v67);
    *(&v78 - 4) = v5;
    *(&v78 - 3) = v63;
    *(&v78 - 2) = v65;
    *(&v78 - 1) = (uint64_t)v59;
    swift_retain();
    MutableObservableContainer.mutate(_:)((uint64_t)sub_236134790, (uint64_t)(&v78 - 6));
    swift_release();
    id v68 = v64;
    uint64_t v69 = sub_2361FDB38();
    os_log_type_t v70 = sub_2361FEC88();
    if (os_log_type_enabled(v69, v70))
    {
      unint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v102[0] = v72;
      *(_DWORD *)unint64_t v71 = 136315138;
      unint64_t v98 = v71 + 4;
      uint64_t v73 = (uint64_t)v84;
      sub_23612F568((uint64_t)v84);
      uint64_t v74 = sub_2361FF218();
      unint64_t v76 = v75;
      v100((char *)v73, v5);
      uint64_t v101 = sub_23612A974(v74, v76, v102);
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2360BC000, v69, v70, "CRDTModelSyncManager resolveConflictsFor: resolved model=%s", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v72, -1, -1);
      MEMORY[0x237DFF240](v71, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(os_log_t, uint64_t))(v94 + 8))(v95, v96);
  }
  else
  {
    v25(v14, a1, v5);
    uint64_t v45 = a2;
    uint64_t v46 = sub_2361FDB38();
    os_log_type_t v47 = sub_2361FEC88();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      v102[0] = v96;
      *(_DWORD *)uint64_t v49 = 136315394;
      os_log_t v95 = v46;
      uint64_t v50 = sub_2361FF218();
      uint64_t v101 = sub_23612A974(v50, v51, v102);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      LODWORD(v94) = v48;
      unint64_t v52 = v100;
      v100(v14, v5);
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v93 = v49 + 14;
      sub_23612F568((uint64_t)v22);
      uint64_t v53 = sub_2361FF218();
      unint64_t v55 = v54;
      v52(v22, v5);
      uint64_t v101 = sub_23612A974(v53, v55, v102);
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      os_log_t v56 = v95;
      _os_log_impl(&dword_2360BC000, v95, (os_log_type_t)v94, "CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s", (uint8_t *)v49, 0x16u);
      uint64_t v57 = v96;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v57, -1, -1);
      MEMORY[0x237DFF240](v49, -1, -1);
    }
    else
    {

      v100(v14, v5);
    }
    return sub_2361330B4((uint64_t)v98);
  }
}

uint64_t sub_236133E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for ModelState.Source();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = &v20[-v13];
  uint64_t v15 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for ModelState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, a4);
  char v21 = 1;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 2, 2, a4);
  sub_2361348B8(a3, (uint64_t)v10, &qword_26AD754A0);
  return ModelState.init(model:loaded:source:revisionInfo:)((uint64_t)v17, &v21, (uint64_t)v14, (uint64_t)v10, a4, a1);
}

void sub_2361340C8()
{
  sub_236131984(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_2361340F4()
{
}

uint64_t sub_236134124()
{
  return swift_getWitnessTable();
}

uint64_t sub_236134140@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + qword_26885A4F0);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_236134194(char *a1)
{
}

uint64_t sub_2361341BC()
{
  return 24;
}

__n128 sub_2361341C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2361341E0()
{
  uint64_t result = sub_2361FDB58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager()
{
  return sub_236134B8C();
}

uint64_t method lookup function for CRDTModelSyncManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CRDTModelSyncManager);
}

uint64_t sub_2361342D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

unsigned char *sub_2361342DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2361343A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager.SyncError()
{
  return sub_236134B8C();
}

uint64_t sub_2361343E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_23612AFCC(a1, a2);
  }
  return a1;
}

uint64_t sub_2361343FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_23612D578(a1, a2);
  }
  return a1;
}

uint64_t sub_236134410()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_236126188(&qword_26AD754A0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v0 + v8, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v0 + v8 + *(int *)(v10 + 24);
    uint64_t v12 = sub_2361FD748();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_23613461C()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(sub_236126188(&qword_26AD754A0) - 8);
  uint64_t v4 = *(void **)(v0 + v2);
  uint64_t v5 = v0 + ((v2 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_2361333DC(v0 + v1, v4, v5);
}

uint64_t sub_2361346F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236134708()
{
  return sub_23613F9B4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_236134710(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_236134720()
{
  return swift_release();
}

uint64_t sub_236134728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD754A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_236134794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2361347F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23613485C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2361348B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_236126188(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23613491C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_236126188(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236134978(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_236134A30()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_236134A68()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_endTransaction);
}

unint64_t sub_236134A78()
{
  unint64_t result = qword_26AD75FF0;
  if (!qword_26AD75FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD75FF0);
  }
  return result;
}

uint64_t sub_236134AB8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236134AF0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_236134B28(void *a1)
{
  return sub_2361304F8(a1, *(void *)(v1 + 40));
}

uint64_t sub_236134B34()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236134B74()
{
  return sub_236130758(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_236134B7C(uint64_t a1)
{
  return sub_236133E94(a1, v1[5], v1[6], v1[2]);
}

uint64_t sub_236134B8C()
{
  return swift_getGenericMetadata();
}

uint64_t CRDTModelRevisionInfo.changeToken.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelRevisionInfo.description.getter()
{
  uint64_t v1 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  sub_236134E18(v0 + *(int *)(v4 + 24), (uint64_t)v3);
  uint64_t v5 = sub_2361FD748();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_23613491C((uint64_t)v3, &qword_26AD74180);
  }
  else
  {
    sub_2361FD6B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t type metadata accessor for CRDTModelRevisionInfo()
{
  uint64_t result = qword_26AD75460;
  if (!qword_26AD75460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_236134E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_236134E84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_236134E98()
{
  unint64_t v1 = 0x684364726F636572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697369766572;
  }
}

uint64_t sub_236134F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2361366F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_236134F34(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_236134F40(uint64_t a1)
{
  unint64_t v2 = sub_236135900();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_236134F7C(uint64_t a1)
{
  unint64_t v2 = sub_236135900();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CRDTModelRevisionInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_236126188(&qword_2688534C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361261CC(a1, a1[3]);
  sub_236135900();
  sub_2361FF338();
  v8[15] = 0;
  sub_2361FF198();
  if (!v1)
  {
    v8[14] = 1;
    sub_2361FF198();
    type metadata accessor for CRDTModelRevisionInfo();
    v8[13] = 2;
    sub_2361FD748();
    sub_236136884(&qword_268852EE8);
    sub_2361FF1A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CRDTModelRevisionInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188(&qword_2688534D0);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2361261CC(a1, a1[3]);
  sub_236135900();
  sub_2361FF328();
  if (v2) {
    return sub_23612EF9C((uint64_t)a1);
  }
  uint64_t v19 = v10;
  uint64_t v13 = v21;
  char v25 = 0;
  uint64_t v14 = (uint64_t)v12;
  uint64_t *v12 = sub_2361FF128();
  v12[1] = v15;
  char v24 = 1;
  v12[2] = sub_2361FF128();
  uint64_t v12[3] = v16;
  sub_2361FD748();
  char v23 = 2;
  sub_236136884(&qword_268852F08);
  uint64_t v17 = v22;
  sub_2361FF138();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v17);
  sub_236135954((uint64_t)v6, v14 + *(int *)(v19 + 24));
  sub_2361347F8(v14, v20);
  sub_23612EF9C((uint64_t)a1);
  return sub_23613485C(v14);
}

uint64_t sub_236135490@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CRDTModelRevisionInfo.init(from:)(a1, a2);
}

uint64_t sub_2361354A8(void *a1)
{
  return CRDTModelRevisionInfo.encode(to:)(a1);
}

BOOL _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236126188((uint64_t *)&unk_2688534F0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_236126188(&qword_26AD74180);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v38 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (char v22 = sub_2361FF248(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_2361FF248();
        BOOL result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v39 = v7;
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    sub_236134E18((uint64_t)a1 + *(int *)(v29 + 24), (uint64_t)v19);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v31 = v28;
    uint64_t v32 = v27;
    sub_236134E18((uint64_t)a2 + v30, (uint64_t)v17);
    uint64_t v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_236134E18((uint64_t)v19, (uint64_t)v10);
    sub_236134E18((uint64_t)v17, v33);
    unint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (v34((uint64_t)v10, 1, v27) == 1)
    {
      sub_23613491C((uint64_t)v17, &qword_26AD74180);
      sub_23613491C((uint64_t)v19, &qword_26AD74180);
      if (v34(v33, 1, v27) == 1)
      {
        sub_23613491C((uint64_t)v10, &qword_26AD74180);
        return 1;
      }
      goto LABEL_20;
    }
    sub_236134E18((uint64_t)v10, (uint64_t)v14);
    if (v34(v33, 1, v27) == 1)
    {
      sub_23613491C((uint64_t)v17, &qword_26AD74180);
      sub_23613491C((uint64_t)v19, &qword_26AD74180);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v27);
LABEL_20:
      sub_23613491C((uint64_t)v10, (uint64_t *)&unk_2688534F0);
      return 0;
    }
    os_log_type_t v35 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v33, v32);
    sub_236136884((unint64_t *)&unk_26AD74170);
    char v36 = sub_2361FE8B8();
    unint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
    v37(v35, v32);
    sub_23613491C((uint64_t)v17, &qword_26AD74180);
    sub_23613491C((uint64_t)v19, &qword_26AD74180);
    v37(v14, v32);
    sub_23613491C((uint64_t)v10, &qword_26AD74180);
    return (v36 & 1) != 0;
  }
  return result;
}

unint64_t sub_236135900()
{
  unint64_t result = qword_2688534C8;
  if (!qword_2688534C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688534C8);
  }
  return result;
}

uint64_t sub_236135954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRDTModelRevisionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_2361FD748();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_236126188(&qword_26AD74180);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2361FD748();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2361FD748();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_236126188(&qword_26AD74180);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2361FD748();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_236126188(&qword_26AD74180);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for CRDTModelRevisionInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2361FD748();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_236126188(&qword_26AD74180);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2361FD748();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_236126188(&qword_26AD74180);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2361361D4);
}

uint64_t sub_2361361D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_236126188(&qword_26AD74180);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2361362A8);
}

uint64_t sub_2361362A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_236126188(&qword_26AD74180);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_236136354()
{
  sub_2361363EC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2361363EC()
{
  if (!qword_26AD74188)
  {
    sub_2361FD748();
    unint64_t v0 = sub_2361FEE38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD74188);
    }
  }
}

uint64_t sub_236136444()
{
  return MEMORY[0x263F8D338];
}

uint64_t getEnumTagSinglePayload for CRDTModelRevisionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRDTModelRevisionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2361365ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_2361365D4(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelRevisionInfo.CodingKeys()
{
  return &type metadata for CRDTModelRevisionInfo.CodingKeys;
}

unint64_t sub_2361365F0()
{
  unint64_t result = qword_2688534D8;
  if (!qword_2688534D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688534D8);
  }
  return result;
}

unint64_t sub_236136648()
{
  unint64_t result = qword_2688534E0;
  if (!qword_2688534E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688534E0);
  }
  return result;
}

unint64_t sub_2361366A0()
{
  unint64_t result = qword_2688534E8;
  if (!qword_2688534E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688534E8);
  }
  return result;
}

uint64_t sub_2361366F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xEC000000746E6948;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x684364726F636572 && a2 == 0xEF67615465676E61 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023620A500)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_236136884(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2361FD748();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2361368C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v9 = sub_2361FE998();
  swift_bridgeObjectRetain();
  sub_2361FEE48();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_2361FEE48();
  uint64_t v13 = v12;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  unint64_t v15 = a4 & 0x800000000000000;
  char v16 = (a5 & 0x1000000000000000) == 0 || (a4 & 0x800000000000000) != 0;
  uint64_t v17 = a2;
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t result = sub_2361FE9E8();
    uint64_t v18 = result;
    if (v15) {
      uint64_t v19 = 7;
    }
    else {
      uint64_t v19 = 11;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 7;
  }
  uint64_t v20 = 4 << v16;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v21 = HIBYTE(a5) & 0xF;
  }
  else {
    unint64_t v21 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = 4 << (v15 >> 59);
  unint64_t v23 = v19 | (v21 << 16);
  if ((a5 & 0x1000000000000000) == 0) {
    uint64_t v22 = 8;
  }
  unint64_t v24 = v9;
  if ((v9 & 0xC) == v22)
  {
    uint64_t v28 = v18;
    uint64_t result = sub_23613B0C8(v9, a4, a5);
    uint64_t v18 = v28;
    unint64_t v24 = result;
  }
  if ((v19 & 0xC) == v20)
  {
    uint64_t v29 = v18;
    uint64_t result = sub_23613B0C8(v19 | (v21 << 16), a4, a5);
    uint64_t v18 = v29;
    unint64_t v23 = result;
    uint64_t v25 = v17;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v26 = (v23 >> 16) - (v24 >> 16);
      if ((a3 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v25 = v17;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_17;
    }
  }
  if (v21 < v24 >> 16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v21 >= v23 >> 16)
  {
    uint64_t v30 = v18;
    uint64_t v31 = sub_2361FE9E8();
    uint64_t v18 = v30;
    uint64_t v26 = v31;
    if ((a3 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a3 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a3) & 0xF;
        uint64_t v27 = v18 + result;
        if (!__OFADD__(v18, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v25 & 0xFFFFFFFFFFFFLL;
        uint64_t v27 = v18 + (v25 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v18, v25 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_35;
    }
LABEL_33:
    uint64_t v32 = v18;
    uint64_t result = sub_2361FE9C8();
    uint64_t v27 = v32 + result;
    if (!__OFADD__(v32, result))
    {
LABEL_23:
      uint64_t result = v27 + v26;
      if (!__OFADD__(v27, v26))
      {
        MEMORY[0x237DFD9B0](result);
LABEL_25:
        sub_2361FEA18();
        sub_23613BDA8();
        sub_2361FE9A8();
        swift_bridgeObjectRelease();
        sub_2361FE9A8();
        sub_23613B190(v9, a4, a5);
        sub_2361FE9A8();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_236136BC8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_type);
  uint64_t v4 = sub_2361FE8D8();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_236136C20(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_protoData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2361FD678();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_236136C88(uint64_t a1, void **a2)
{
  BOOL v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_2361FD668();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setProtoData_);
}

uint64_t sub_236136D00@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v4 = sub_236126188(&qword_268853550);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  unint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v15 - v8;
  uint64_t v10 = (uint64_t)v2 + OBJC_IVAR____TtC13BookDataStore19CRDTModelSyncEntity____lazy_storage___logger;
  swift_beginAccess();
  sub_23613BEB8(v10, (uint64_t)v9);
  uint64_t v11 = sub_2361FDB58();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v11);
  }
  sub_23613491C((uint64_t)v9, &qword_268853550);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "CRDTModelSync.");
  HIBYTE(v15[1]) = -18;
  id v13 = objc_msgSend(v2, sel_type, v15[0], v15[1]);
  sub_2361FE8D8();

  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FDB48();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  swift_beginAccess();
  sub_23613BF20((uint64_t)v7, v10);
  return swift_endAccess();
}

uint64_t sub_236136F78(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2361FDB58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = MEMORY[0x270FA5388]((char *)&v133 - v10);
  id v13 = (char *)&v133 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t result = MEMORY[0x270FA5388](v16);
  unint64_t v24 = (char *)&v133 - v23;
  if (!a2) {
    return result;
  }
  uint64_t v146 = v19;
  uint64_t v144 = v18;
  uint64_t v141 = result;
  uint64_t v142 = v22;
  uint64_t v143 = v21;
  os_log_t v147 = v20;
  id v25 = objc_msgSend(a1, sel_recordType);
  uint64_t v26 = sub_2361FE8D8();
  uint64_t v28 = v27;

  uint64_t v145 = v26;
  uint64_t v149 = v26;
  uint64_t v150 = v28;
  swift_bridgeObjectRetain();
  sub_2361FEF48();
  if (!*(void *)(a2 + 16) || (unint64_t v29 = sub_23612B0BC((uint64_t)v151), (v30 & 1) == 0))
  {
    sub_23612EE3C((uint64_t)v151);
    return swift_bridgeObjectRelease();
  }
  uint64_t v138 = *(const void **)(*(void *)(a2 + 56) + 8 * v29);
  _Block_copy(v138);
  sub_23612EE3C((uint64_t)v151);
  swift_getObjectType();
  uint64_t v31 = swift_conformsToProtocol2();
  if (v31) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = 0;
  }
  if (v31) {
    uint64_t v33 = a1;
  }
  else {
    uint64_t v33 = 0;
  }
  unint64_t v140 = v33;
  if (v33)
  {
    uint64_t v135 = v7;
    uint64_t v136 = v6;
    unint64_t v139 = a1;
    swift_unknownObjectRetain();
    id v34 = objc_msgSend(v3, sel_type);
    uint64_t v35 = sub_2361FE8D8();
    unint64_t v37 = v36;

    swift_bridgeObjectRelease();
    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v137 = v32;
    if (v38)
    {
      id v39 = objc_msgSend(v3, sel_type);
      uint64_t v40 = sub_2361FE8D8();
      uint64_t v42 = v41;

      uint64_t ObjectType = swift_getObjectType();
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
      uint64_t v133 = ObjectType;
      long long v134 = v44;
      uint64_t v45 = v44(ObjectType, v32);
      uint64_t v47 = v146;
      if (v40 == v45 && v42 == v46)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v53 = sub_2361FF248();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v53 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_236136D00((uint64_t)v24);
          swift_unknownObjectRetain_n();
          id v71 = v3;
          uint64_t v72 = sub_2361FDB38();
          os_log_type_t v73 = sub_2361FEC68();
          int v74 = v73;
          if (os_log_type_enabled(v72, v73))
          {
            uint64_t v75 = swift_slowAlloc();
            uint64_t v76 = swift_slowAlloc();
            v151[0] = v76;
            *(_DWORD *)uint64_t v75 = 136315394;
            os_log_t v147 = v72;
            LODWORD(v146) = v74;
            uint64_t v77 = v134(v133, v137);
            uint64_t v149 = sub_23612A974(v77, v78, v151);
            sub_2361FEE68();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v75 + 12) = 2080;
            id v79 = objc_msgSend(v71, sel_type);
            uint64_t v80 = sub_2361FE8D8();
            unint64_t v82 = v81;

            uint64_t v149 = sub_23612A974(v80, v82, v151);
            sub_2361FEE68();

            swift_bridgeObjectRelease();
            os_log_t v83 = v147;
            _os_log_impl(&dword_2360BC000, v147, (os_log_type_t)v146, "CRDTModelSyncEntity incompatible type %s passed in. Expecting %s", (uint8_t *)v75, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x237DFF240](v76, -1, -1);
            MEMORY[0x237DFF240](v75, -1, -1);
            _Block_release(v138);
            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease_n();
            _Block_release(v138);

            swift_unknownObjectRelease();
          }
          return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v24, v136);
        }
      }
      uint64_t v52 = v137;
      unint64_t v51 = (void (*)(uint64_t, uint64_t))v134;
    }
    else
    {
      unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      uint64_t v52 = v32;
      uint64_t v47 = v146;
    }
    unint64_t v54 = v140;
    uint64_t v146 = swift_getObjectType();
    v51(v146, v52);
    unint64_t v55 = (void *)sub_2361FE8C8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setType_, v55);

    swift_unknownObjectRetain();
    sub_236126188(&qword_268853500);
    os_log_t v56 = (void *)sub_2361FE7E8();
    uint64_t v57 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
    v148.receiver = v3;
    v148.super_class = v57;
    objc_msgSendSuper2(&v148, sel_configureFromCloudData_withMergers_, v54, v56);
    swift_unknownObjectRelease();

    sub_236136D00(v47);
    swift_unknownObjectRetain_n();
    unint64_t v58 = v3;
    os_log_t v59 = sub_2361FDB38();
    os_log_type_t v60 = sub_2361FEC88();
    BOOL v61 = os_log_type_enabled(v59, v60);
    long long v134 = v58;
    if (v61)
    {
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 134218240;
      id v63 = objc_msgSend(v58, sel_protoData);
      if (v63)
      {
        os_log_type_t v64 = v63;
        uint64_t v65 = sub_2361FD678();
        unint64_t v67 = v66;

        uint64_t v68 = v135;
        switch(v67 >> 62)
        {
          case 1uLL:
            sub_23612D578(v65, v67);

            LODWORD(v69) = HIDWORD(v65) - v65;
            if (__OFSUB__(HIDWORD(v65), v65))
            {
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
              JUMPOUT(0x236138670);
            }
            uint64_t v69 = (int)v69;
            break;
          case 2uLL:
            uint64_t v84 = v58;
            uint64_t v86 = *(void *)(v65 + 16);
            uint64_t v85 = *(void *)(v65 + 24);
            sub_23612D578(v65, v67);

            uint64_t v69 = v85 - v86;
            if (__OFSUB__(v85, v86)) {
              goto LABEL_70;
            }
            uint64_t v68 = v135;
            break;
          case 3uLL:
            sub_23612D578(v65, v67);

            uint64_t v69 = 0;
            goto LABEL_41;
          default:
            sub_23612D578(v65, v67);

            uint64_t v69 = BYTE6(v67);
            goto LABEL_41;
        }
        unint64_t v58 = v134;
      }
      else
      {

        uint64_t v69 = -1;
        uint64_t v68 = v135;
      }
LABEL_41:
      v151[0] = v69;
      sub_2361FEE68();

      *(_WORD *)(v62 + 12) = 2048;
      unint64_t v87 = (*(uint64_t (**)(uint64_t))(v137 + 16))(v146);
      if (v88 >> 60 == 15)
      {
        swift_unknownObjectRelease();
        uint64_t v89 = -1;
      }
      else
      {
        unsigned __int8 v90 = BYTE6(v88);
        int v91 = v87;
        switch(v88 >> 62)
        {
          case 1uLL:
            unint64_t v92 = HIDWORD(v87);
            sub_2361343FC(v87, v88);
            swift_unknownObjectRelease();
            LODWORD(v89) = v92 - v91;
            if (__OFSUB__(v92, v91)) {
              goto LABEL_73;
            }
            uint64_t v89 = (int)v89;
            break;
          case 2uLL:
            uint64_t v94 = *(void *)(v87 + 16);
            uint64_t v93 = *(void *)(v87 + 24);
            sub_2361343FC(v87, v88);
            swift_unknownObjectRelease();
            uint64_t v89 = v93 - v94;
            if (__OFSUB__(v93, v94)) {
              goto LABEL_74;
            }
            uint64_t v68 = v135;
            break;
          case 3uLL:
            sub_2361343FC(v87, v88);
            swift_unknownObjectRelease();
            uint64_t v89 = 0;
            goto LABEL_51;
          default:
            sub_2361343FC(v87, v88);
            swift_unknownObjectRelease();
            uint64_t v89 = v90;
            goto LABEL_51;
        }
        unint64_t v58 = v134;
      }
LABEL_51:
      v151[0] = v89;
      sub_2361FEE68();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_2360BC000, v59, v60, "CRDTModelSyncEntity Merging: existing data (%ld bytes) with incoming data (%ld bytes)", (uint8_t *)v62, 0x16u);
      MEMORY[0x237DFF240](v62, -1, -1);

      uint64_t v70 = v136;
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v70 = v136;
      uint64_t v68 = v135;
    }
    os_log_t v95 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v95(v47, v70);
    uint64_t v96 = (*(uint64_t (**)(uint64_t))(v137 + 16))(v146);
    unint64_t v98 = v97;
    swift_bridgeObjectRetain();
    uint64_t v99 = v138;
    _Block_copy(v138);
    sub_23613B844(v96, v98, v58, v99);
    swift_bridgeObjectRelease_n();
    sub_2361343FC(v96, v98);
    uint64_t v100 = v144;
    sub_236136D00(v144);
    uint64_t v101 = v139;
    swift_unknownObjectRetain_n();
    uint64_t v102 = v58;
    unint64_t v103 = sub_2361FDB38();
    os_log_type_t v104 = sub_2361FEC88();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      v151[0] = v145;
      *(_DWORD *)uint64_t v105 = 136315394;
      id v106 = objc_msgSend(v101, sel_recordType);
      uint64_t v107 = sub_2361FE8D8();
      uint64_t v146 = (uint64_t)v95;
      unint64_t v109 = v108;

      uint64_t v149 = sub_23612A974(v107, v109, v151);
      sub_2361FEE68();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      id v110 = objc_msgSend(v102, sel_debugDescription);
      uint64_t v111 = sub_2361FE8D8();
      unint64_t v113 = v112;

      uint64_t v114 = v111;
      os_log_t v95 = (void (*)(uint64_t, uint64_t))v146;
      uint64_t v115 = v136;
      uint64_t v149 = sub_23612A974(v114, v113, v151);
      uint64_t v70 = v115;
      sub_2361FEE68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2360BC000, v103, v104, "CRDTModelSyncEntity Merging: Adopted properties from cloudData: %s %s", (uint8_t *)v105, 0x16u);
      uint64_t v116 = v145;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v116, -1, -1);
      MEMORY[0x237DFF240](v105, -1, -1);

      uint64_t v117 = v144;
      uint64_t v118 = v115;
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v117 = v100;
      uint64_t v118 = v70;
    }
    v95(v117, v118);
    os_log_t v119 = v147;
    uint64_t v120 = v134;
    sub_236136D00((uint64_t)v147);
    uint64_t v121 = v120;
    uint64_t v122 = sub_2361FDB38();
    os_log_type_t v123 = sub_2361FEC88();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v124 = 134217984;
      id v125 = [v121 protoData];
      if (v125)
      {
        uint64_t v126 = v125;
        uint64_t v127 = sub_2361FD678();
        unint64_t v129 = v128;

        switch(v129 >> 62)
        {
          case 1uLL:
            sub_23612D578(v127, v129);

            LODWORD(v130) = HIDWORD(v127) - v127;
            if (__OFSUB__(HIDWORD(v127), v127)) {
              goto LABEL_71;
            }
            uint64_t v130 = (int)v130;
            goto LABEL_66;
          case 2uLL:
            uint64_t v132 = *(void *)(v127 + 16);
            uint64_t v131 = *(void *)(v127 + 24);
            sub_23612D578(v127, v129);

            uint64_t v130 = v131 - v132;
            if (__OFSUB__(v131, v132)) {
              goto LABEL_72;
            }
            os_log_t v119 = v147;
            uint64_t v70 = v136;
            goto LABEL_67;
          case 3uLL:
            sub_23612D578(v127, v129);

            uint64_t v130 = 0;
            goto LABEL_66;
          default:
            sub_23612D578(v127, v129);

            uint64_t v130 = BYTE6(v129);
            goto LABEL_66;
        }
      }

      uint64_t v130 = -1;
LABEL_66:
      os_log_t v119 = v147;
LABEL_67:
      v151[0] = v130;
      sub_2361FEE68();

      _os_log_impl(&dword_2360BC000, v122, v123, "CRDTModelSyncEntity Merging: merged data (%ld bytes)", v124, 0xCu);
      MEMORY[0x237DFF240](v124, -1, -1);
      _Block_release(v138);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();

      _Block_release(v138);
      uint64_t v122 = v121;
    }

    return ((uint64_t (*)(os_log_t, uint64_t))v95)(v119, v70);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_236136D00((uint64_t)v13);
    int v48 = sub_2361FDB38();
    os_log_type_t v49 = sub_2361FEC68();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_2360BC000, v48, v49, "CRDTModelSyncEntity configure(from:) wrong class passed in", v50, 2u);
      MEMORY[0x237DFF240](v50, -1, -1);
    }
    _Block_release(v138);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
}

uint64_t sub_23613873C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  uint64_t v6 = swift_conformsToProtocol2();
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = 0;
  }
  if (!v8) {
    goto LABEL_25;
  }
  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  swift_unknownObjectRetain();
  if (!objc_msgSendSuper2(&v27, sel_isEqualExceptForDate_ignoringEmptySalt_, a1, a2 & 1)) {
    goto LABEL_14;
  }
  id v9 = objc_msgSend(v3, sel_type, v27.receiver, v27.super_class);
  uint64_t v10 = sub_2361FE8D8();
  uint64_t v12 = v11;

  uint64_t ObjectType = swift_getObjectType();
  if (v10 == (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7) && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_2361FF248();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_14:
      swift_unknownObjectRelease();
LABEL_25:
      char v25 = 0;
      return v25 & 1;
    }
  }
  id v17 = objc_msgSend(v3, sel_protoData);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_2361FD678();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xF000000000000000;
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  unint64_t v24 = v22;
  if (v21 >> 60 != 15)
  {
    if (v22 >> 60 != 15)
    {
      sub_2361343E8(v19, v21);
      char v25 = sub_23613B558(v19, v21, v23, v24);
      swift_unknownObjectRelease();
      sub_2361343FC(v23, v24);
      sub_2361343FC(v19, v21);
      sub_2361343FC(v19, v21);
      return v25 & 1;
    }
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  swift_unknownObjectRelease();
  if (v24 >> 60 != 15)
  {
LABEL_24:
    sub_2361343FC(v19, v21);
    sub_2361343FC(v23, v24);
    goto LABEL_25;
  }
  char v25 = 1;
  return v25 & 1;
}

void sub_2361389FC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2361FDB58();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v87 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v87 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v98 = (uint64_t)v87 - v15;
  uint64_t v16 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v99 = (uint64_t)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2361FD638();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v20);
  if (!a2) {
    return;
  }
  uint64_t v94 = v14;
  uint64_t v93 = v11;
  os_log_t v95 = v8;
  uint64_t v96 = (char *)v87 - v21;
  id v97 = a1;
  uint64_t v102 = sub_2361FED98();
  uint64_t v103 = v22;
  swift_bridgeObjectRetain();
  uint64_t v23 = MEMORY[0x263F8D310];
  sub_2361FEF48();
  if (!*(void *)(a2 + 16) || (unint64_t v24 = sub_23612B0BC((uint64_t)v104), (v25 & 1) == 0))
  {
    sub_23612EE3C((uint64_t)v104);
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v88 = v4;
  uint64_t v90 = v18;
  uint64_t v89 = v5;
  uint64_t v91 = v19;
  unint64_t v92 = *(const void **)(*(void *)(a2 + 56) + 8 * v24);
  _Block_copy(v92);
  sub_23612EE3C((uint64_t)v104);
  uint64_t v26 = sub_2361FED98();
  uint64_t v28 = v27;
  id v29 = objc_msgSend(v100, sel_recordType);
  uint64_t v30 = sub_2361FE8D8();
  uint64_t v32 = v31;

  if (v26 == v30 && v28 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_2361FF248();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
LABEL_16:
      _Block_release(v92);
      goto LABEL_8;
    }
  }
  uint64_t v34 = v23;
  id v35 = v97;
  uint64_t v36 = sub_2361FEDA8();
  if (!v36) {
    goto LABEL_16;
  }
  uint64_t v37 = v36;
  self;
  uint64_t v38 = (void *)swift_dynamicCastObjCClass();
  if (!v38)
  {
    _Block_release(v92);
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  v87[1] = v37;
  id v39 = objc_msgSend(v38, sel_fileURL);
  if (v39)
  {
    uint64_t v40 = v39;
    sub_2361FD618();

    uint64_t v41 = v91;
    uint64_t v42 = *(void (**)(void))(v91 + 32);
    uint64_t v43 = v99;
    uint64_t v44 = v90;
    v42();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v44) != 1)
    {
      uint64_t v45 = v43;
      id v46 = v35;
      ((void (*)(char *, uint64_t, uint64_t))v42)(v96, v45, v44);
      sub_236126188(&qword_268853500);
      uint64_t v47 = (void *)sub_2361FE7E8();
      int v48 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
      id v49 = v100;
      v101.receiver = v100;
      v101.super_class = v48;
      objc_msgSendSuper2(&v101, sel_resolveConflictsFromRecord_withResolvers_, v46, v47);

      uint64_t v64 = sub_2361FD648();
      unint64_t v66 = v65;
      swift_bridgeObjectRetain();
      unint64_t v67 = v92;
      _Block_copy(v92);
      sub_23612AFCC(v64, (unint64_t)v66);
      sub_23613B844(v64, (unint64_t)v66, v49, v67);
      swift_bridgeObjectRelease_n();
      sub_23612D578(v64, (unint64_t)v66);
      uint64_t v68 = v98;
      sub_236136D00(v98);
      id v69 = v97;
      id v70 = v49;
      id v71 = v69;
      id v72 = v70;
      os_log_type_t v73 = sub_2361FDB38();
      os_log_type_t v74 = sub_2361FEC88();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        v104[0] = v76;
        *(_DWORD *)uint64_t v75 = 136315394;
        id v100 = v66;
        id v77 = objc_msgSend(v71, sel_recordID);
        uint64_t v99 = v64;
        id v78 = v77;
        id v79 = objc_msgSend(v77, sel_recordName);

        uint64_t v80 = sub_2361FE8D8();
        unint64_t v82 = v81;

        uint64_t v102 = sub_23612A974(v80, v82, v104);
        sub_2361FEE68();

        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 12) = 2080;
        id v83 = objc_msgSend(v72, sel_debugDescription);
        uint64_t v84 = sub_2361FE8D8();
        unint64_t v86 = v85;

        uint64_t v102 = sub_23612A974(v84, v86, v104);
        sub_2361FEE68();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2360BC000, v73, v74, "CRDTModelSyncEntity Resolving: Adopted properties from record: %s %s", (uint8_t *)v75, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v76, -1, -1);
        MEMORY[0x237DFF240](v75, -1, -1);
        _Block_release(v92);

        swift_unknownObjectRelease();
        sub_23612D578(v99, (unint64_t)v100);
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v98, v88);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v96, v90);
      }
      else
      {
        _Block_release(v92);

        swift_unknownObjectRelease();
        sub_23612D578(v64, (unint64_t)v66);
        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v68, v88);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v96, v44);
      }
      return;
    }
  }
  else
  {
    uint64_t v43 = v99;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v99, 1, 1, v90);
  }
  swift_bridgeObjectRelease();
  sub_23613491C(v43, &qword_26AD74150);
  sub_2361FEC68();
  if (qword_26AD74EE0 != -1) {
    swift_once();
  }
  uint64_t v50 = (void *)qword_26AD74ED8;
  sub_236126188(&qword_26AD76040);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_23620DFC0;
  id v52 = v50;
  id v53 = objc_msgSend(v100, sel_type);
  uint64_t v54 = sub_2361FE8D8();
  uint64_t v56 = v55;

  uint64_t v57 = v34;
  *(void *)(v51 + 56) = v34;
  unint64_t v58 = sub_23613B7F0();
  *(void *)(v51 + 64) = v58;
  *(void *)(v51 + 32) = v54;
  *(void *)(v51 + 40) = v56;
  id v59 = objc_msgSend(v35, sel_recordID);
  id v60 = objc_msgSend(v59, sel_recordName);

  uint64_t v61 = sub_2361FE8D8();
  uint64_t v63 = v62;

  *(void *)(v51 + 96) = v57;
  *(void *)(v51 + 104) = v58;
  *(void *)(v51 + 72) = v61;
  *(void *)(v51 + 80) = v63;
  sub_2361FDB28();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  _Block_release(v92);
}

uint64_t sub_236139C14(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_2361FE8C8();
  if (a2 >> 60 == 15) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = sub_2361FD668();
  }
  if (a4 >> 60 == 15) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = sub_2361FD668();
  }
  id v11 = (id)(*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(a5 + 16))(a5, v8, v9, v10);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_2361FEE98();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_23613BE50((uint64_t)v14, (uint64_t)v15);
  if (v16)
  {
    if (swift_dynamicCast()) {
      return v13;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_23613491C((uint64_t)v15, qword_26AD76060);
    return 0;
  }
}

id CRDTModelSyncEntity.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CRDTModelSyncEntity.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CRDTModelSyncEntity.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23613A038()
{
  id v1 = objc_msgSend(v0, sel_type);
  uint64_t v2 = sub_2361FE8D8();

  return v2;
}

uint64_t sub_23613A090()
{
  id v1 = objc_msgSend(v0, sel_protoData);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_2361FD678();

  return v3;
}

id CRDTModelSyncEntity.mutableCopy()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (objc_class *)type metadata accessor for CRDTModelSync();
  id result = objc_msgSend(objc_allocWithZone(v4), sel_initWithCloudData_, v2);
  if (result)
  {
    a1[3] = v4;
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CRDTModelSyncEntity.debugDescription.getter()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  id v1 = objc_msgSendSuper2(&v4, sel_debugDescription);
  uint64_t v2 = sub_2361FE8D8();

  sub_23613B1DC(v0);
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String __swiftcall CRDTModelSyncEntity.recordType()()
{
  id v1 = objc_msgSend(v0, sel_type);
  uint64_t v2 = sub_2361FE8D8();
  unint64_t v4 = v3;

  sub_2361FEA08();
  uint64_t v5 = sub_2361FE938();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_2361368C8(15, v5, v7, v2, v4);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall CRDTModelSyncEntity.identifier()()
{
  uint64_t v1 = sub_23613B318(v0);
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t CRDTModelSyncEntity.zoneName()()
{
  id v1 = objc_msgSend(v0, sel_type);
  sub_2361FE8D8();

  uint64_t v2 = sub_2361FE8C8();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_23613A6B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  unint64_t v6 = &v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  *(_OWORD *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData] = xmmword_23620DFD0;
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9)
  {
    uint64_t v10 = swift_getObjectType();
    v24.receiver = v2;
    v24.super_class = ObjectType;
    swift_unknownObjectRetain_n();
    id v11 = objc_msgSendSuper2(&v24, sel_initWithCloudData_, v9);
    swift_unknownObjectRelease();
    if (v11)
    {

      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      uint64_t v13 = (char *)v11;
      uint64_t v14 = v12(v10, v8);
      uint64_t v15 = (uint64_t *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
      *uint64_t v15 = v14;
      v15[1] = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v10, v8);
      uint64_t v19 = v18;
      swift_unknownObjectRelease_n();
      uint64_t v20 = (uint64_t *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      uint64_t v21 = *(void *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      unint64_t v22 = *(void *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
      *uint64_t v20 = v17;
      v20[1] = v19;
      sub_2361343FC(v21, v22);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_2361343FC(*(void *)v6, *((void *)v6 + 1));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

id sub_23613A97C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23613AA08()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23613AA44()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData);
  sub_2361343E8(v1, *(void *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8));
  return v1;
}

uint64_t sub_23613AAEC()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v4, sel_debugDescription);
  uint64_t v2 = sub_2361FE8D8();

  sub_2361FE9B8();
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23613AD2C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23613AE54@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_23612AFCC(a2, a3);
      uint64_t v10 = (char *)sub_2361FD468();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2361FD488();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2361FD478();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x23613B0B8);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_23612D578(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2361FD468();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2361FD488();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2361FD478();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_23613B0C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2361FE9F8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x237DFDA10](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t type metadata accessor for CRDTModelSyncEntity()
{
  uint64_t result = qword_268853518;
  if (!qword_268853518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_23613B190(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_2361FEA18();
  }
  __break(1u);
  return result;
}

uint64_t sub_23613B1DC(void *a1)
{
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(a1, sel_type);
  sub_2361FE8D8();

  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  id v3 = objc_msgSend(a1, sel_protoData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2361FD678();
    unint64_t v7 = v6;

    sub_23612D578(v5, v7);
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return 0x203A65707974;
}

uint64_t sub_23613B318(void *a1)
{
  id v2 = objc_msgSend(a1, sel_type);
  uint64_t v3 = sub_2361FE8D8();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    return 0;
  }
  id v7 = objc_msgSend(a1, sel_type);
  uint64_t v8 = sub_2361FE8D8();

  return v8;
}

uint64_t sub_23613B3C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_23613AE54((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_23613B4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2361FD468();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2361FD488();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2361FD478();
  sub_23613AE54(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_23613B558(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v_Block_object_dispose(&STACK[0x3B0], 8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x23613B7C0);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_23612AFCC(a3, a4);
                  sub_23612AFCC(a1, a2);
                  char v17 = sub_23613B4A0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_23612D578(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_23612AFCC(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_23613B4A0(v21, v22, v20, a3, a4);
                  sub_23612D578(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_23612AFCC(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_23612AFCC(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_23613B3C8(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_23612D578(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_23613B7F0()
{
  unint64_t result = qword_26AD75F80;
  if (!qword_26AD75F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD75F80);
  }
  return result;
}

void sub_23613B844(uint64_t a1, unint64_t a2, id a3, const void *a4)
{
  id v8 = objc_msgSend(a3, sel_protoData);
  if (!v8)
  {
    unint64_t v12 = 0xF000000000000000;
    uint64_t v19 = sub_236139C14(0, 0xF000000000000000, a1, a2, (uint64_t)a4);
    uint64_t v10 = 0;
    if (v20 >> 60 != 15)
    {
      uint64_t v15 = v19;
      unint64_t v16 = v20;
      goto LABEL_10;
    }
LABEL_7:
    sub_23613BDFC();
    swift_allocError();
    *uint64_t v21 = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_2361FD678();
  unint64_t v12 = v11;

  uint64_t v13 = sub_236139C14(v10, v12, a1, a2, (uint64_t)a4);
  if (v14 >> 60 == 15) {
    goto LABEL_7;
  }
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  if (v12 >> 60 == 15)
  {
LABEL_10:
    sub_23612AFCC(v15, v16);
    sub_2361343FC(v15, v16);
    sub_2361343FC(v10, v12);
    goto LABEL_11;
  }
  sub_23612AFCC(v10, v12);
  char v17 = sub_23613B558(v15, v16, v10, v12);
  sub_2361343FC(v10, v12);
  if (v17)
  {
    sub_23613BDFC();
    swift_allocError();
    *uint64_t v18 = 1;
    swift_willThrow();
    sub_2361343FC(v15, v16);
LABEL_8:
    sub_2361343FC(v10, v12);
    _Block_release(a4);
    return;
  }
LABEL_11:
  uint64_t v22 = (void *)sub_2361FD668();
  objc_msgSend(a3, sel_setProtoData_, v22);

  sub_2361343FC(v15, v16);
  sub_2361343FC(v10, v12);
  _Block_release(a4);
}

uint64_t type metadata accessor for CRDTModelSync()
{
  return self;
}

char *sub_23613BA94()
{
  return sel_type;
}

void sub_23613BAA4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_2361FE8C8();
  objc_msgSend(v2, sel_setType_, v3);
}

char *sub_23613BB08()
{
  return sel_protoData;
}

uint64_t dispatch thunk of CRDTModelSyncProtocol.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelSyncProtocol.protoData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23613BB44()
{
  return type metadata accessor for CRDTModelSyncEntity();
}

void sub_23613BB4C()
{
  sub_23613BBF4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CRDTModelSyncEntity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CRDTModelSyncEntity);
}

void sub_23613BBF4()
{
  if (!qword_268853528)
  {
    sub_2361FDB58();
    unint64_t v0 = sub_2361FEE38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268853528);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRDTModelSyncEntity.MergerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23613BD18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelSyncEntity.MergerError()
{
  return &type metadata for CRDTModelSyncEntity.MergerError;
}

unint64_t sub_23613BD54()
{
  unint64_t result = qword_268853548;
  if (!qword_268853548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853548);
  }
  return result;
}

unint64_t sub_23613BDA8()
{
  unint64_t result = qword_268853558;
  if (!qword_268853558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853558);
  }
  return result;
}

unint64_t sub_23613BDFC()
{
  unint64_t result = qword_268853560;
  if (!qword_268853560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853560);
  }
  return result;
}

uint64_t sub_23613BE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(qword_26AD76060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23613BEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_268853550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23613BF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_268853550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23613BF88()
{
  uint64_t v0 = sub_2361FD8A8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2361FD8C8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_2361FD848();
  sub_23613DE0C(v5, qword_268853570);
  sub_23613DDD4(v5, (uint64_t)qword_268853570);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F2BA18], v0);
  id v6 = objc_msgSend(self, sel_sharedProvider);
  id v7 = objc_msgSend(v6, sel_activeStoreAccount);

  sub_2361FD8B8();
  return sub_2361FD838();
}

uint64_t BDSBookWidgetInfoManager.fetch(adamIDs:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_268853590 + dword_268853590);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_23613DE78;
  return v5(a1);
}

void sub_23613C1C8(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE80];
  uint64_t v3 = a1 + 64;
  uint64_t v37 = MEMORY[0x263F8EE80];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v36 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v35 = v3;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v13 = *(void **)(*(void *)(a1 + 56) + 8 * v9);
    uint64_t v14 = swift_dynamicCastObjCProtocolConditional();
    if (v14)
    {
      uint64_t v19 = v14;
      unint64_t v20 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v20)
      {
        uint64_t v22 = v20 + 1;
        id v23 = v13;
        swift_bridgeObjectRetain();
        sub_23612BB80(v22, 1);
        uint64_t v2 = v37;
      }
      else
      {
        id v21 = v13;
        swift_bridgeObjectRetain();
      }
      sub_2361FF2F8();
      sub_2361FE988();
      uint64_t v24 = sub_2361FF318();
      uint64_t v25 = v2 + 64;
      uint64_t v26 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v27 = v24 & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v2 + 64 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        uint64_t v3 = v35;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v25 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v2 + 64 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v3 = v35;
LABEL_37:
      *(void *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t v34 = (void *)(*(void *)(v2 + 48) + 16 * v29);
      void *v34 = v12;
      v34[1] = v11;
      *(void *)(*(void *)(v2 + 56) + 8 * v29) = v19;
      ++*(void *)(v2 + 16);

      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v36) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v15);
    int64_t v17 = v7 + 1;
    if (!v16)
    {
      int64_t v17 = v7 + 2;
      if (v7 + 2 >= v36) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v3 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v7 + 3;
        if (v7 + 3 >= v36) {
          goto LABEL_39;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v7 + 4;
          if (v7 + 4 >= v36) {
            goto LABEL_39;
          }
          unint64_t v16 = *(void *)(v3 + 8 * v17);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v9 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v7 = v17;
  }
  int64_t v18 = v7 + 5;
  if (v7 + 5 >= v36)
  {
LABEL_39:
    sub_23613DE70();
    return;
  }
  unint64_t v16 = *(void *)(v3 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_23613C67C(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2361FEA78();
  v3[4] = v5;
  unint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_268853590 + dword_268853590);
  id v6 = a3;
  int64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *int64_t v7 = v3;
  v7[1] = sub_23613C760;
  return v9(v5);
}

uint64_t sub_23613C760()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_2361FD598();

    uint64_t v7 = 0;
    unint64_t v8 = (void *)v6;
  }
  else
  {
    sub_236126188(&qword_268853630);
    uint64_t v7 = sub_2361FE7E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    unint64_t v8 = (void *)v7;
  }
  unint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t BDSBookWidgetInfoManager.fetch(bookAssets:audiobookAssets:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2688535A0 + dword_2688535A0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_23613C9DC;
  return v7(a1, a2);
}

uint64_t sub_23613C9DC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_23613CC60(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_2361FEA78();
  v4[4] = v6;
  uint64_t v7 = sub_2361FEA78();
  v4[5] = v7;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2688535A0 + dword_2688535A0);
  id v8 = a4;
  unint64_t v9 = (void *)swift_task_alloc();
  v4[6] = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_23613CD68;
  return v11(v6, v7);
}

uint64_t sub_23613CD68()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_2361FD598();

    uint64_t v7 = 0;
    id v8 = (void *)v6;
  }
  else
  {
    sub_236126188(&qword_268853630);
    uint64_t v7 = sub_2361FE7E8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    id v8 = (void *)v7;
  }
  unint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t sub_23613CF4C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_2361FD858();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23613D00C, 0, 0);
}

uint64_t sub_23613D00C()
{
  sub_2361FD868();
  if (qword_268852E00 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2361FD848();
  sub_23613DDD4(v1, (uint64_t)qword_268853570);
  unint64_t v2 = sub_2361CFAEC((uint64_t)&unk_26E971FF0);
  v0[6] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_23613D138;
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[2];
  return MEMORY[0x270F12750](v5, 0, 0, v2, 150, v4);
}

uint64_t sub_23613D138(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_23613D334;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = sub_23613D284;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_23613D284()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_23613C1C8(v0[9]);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_23613D334()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_23613D3B4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_2361FD858();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23613D474, 0, 0);
}

uint64_t sub_23613D474()
{
  sub_2361FD868();
  if (qword_268852E00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_2361FD848();
  sub_23613DDD4(v3, (uint64_t)qword_268853570);
  unint64_t v4 = sub_2361CFAEC((uint64_t)&unk_26E972030);
  v0[7] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_23613D5B0;
  uint64_t v6 = v0[6];
  return MEMORY[0x270F12748](v1, v2, 0, 0, v4, 150, v6);
}

uint64_t sub_23613D5B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_23613D7AC;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_23613D6FC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_23613D6FC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  unint64_t v4 = sub_23619EACC(v0[10]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(unint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_23613D7AC()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_23613D82C()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23613D87C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  unint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_23613DE7C;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_2688535B0 + dword_2688535B0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_23613D940()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_23613DE7C;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_268854A30 + dword_268854A30);
  return v6(v2, v3, v4);
}

uint64_t sub_23613DA04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_23613DE7C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_268854A40 + dword_268854A40);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_23613DAD0()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23613DB18()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_23613DE7C;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_268853638 + dword_268853638);
  return v6(v2, v3, v4);
}

uint64_t sub_23613DBD4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23613DC14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_23613DCE0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_268854A40 + dword_268854A40);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_23613DCE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_23613DDD4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_23613DE0C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23613DE70()
{
  return swift_release();
}

uint64_t sub_23613DE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_defaultManager);
  id v6 = objc_msgSend(v5, sel_URLsForDirectory_inDomains_, 14, 1);

  uint64_t v7 = sub_2361FD638();
  uint64_t v8 = sub_2361FEA78();

  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v4, v8 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v7);
  }
  __break(1u);
  return result;
}

uint64_t static CRDTModelFileSyncContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v2 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2361FD638();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v21 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v21 = (uint64_t)&v21 - v13;
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_23613DE80((uint64_t)v12);
  sub_2361FD608();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v12, v5);
  id v15 = objc_msgSend(self, sel_books);
  id v16 = objc_msgSend(v15, sel_containerURL);

  sub_2361FD618();
  sub_2361FD608();
  v14(v9, v5);
  long long v17 = *(_OWORD *)(v22 + 96);
  long long v25 = *(_OWORD *)(v22 + 80);
  long long v26 = v17;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v18 = v21;
  uint64_t v19 = sub_23613E35C(v21, (uint64_t)v4, v23, v24);
  sub_23613491C((uint64_t)v4, &qword_26AD74150);
  v14(v12, v5);
  v14((char *)v18, v5);
  return v19;
}

uint64_t type metadata accessor for _CRDTModelContextStoreUtils()
{
  return self;
}

uint64_t type metadata accessor for _CRDTModelContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23613E35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a2;
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_2361FD508();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_236126188(&qword_26AD74150);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v58 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = sub_2361FD638();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v57 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v55 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v64 = (char *)&v55 - v25;
  uint64_t v56 = v24;
  uint64_t v55 = v15 + 16;
  ((void (*)(char *))v24)((char *)&v55 - v25);
  *(void *)&long long v66 = a3;
  *((void *)&v66 + 1) = a4;
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  sub_23613F030();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  uint64_t v65 = v23;
  sub_2361FD608();
  sub_23613F6C0(v60, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23613491C((uint64_t)v13, &qword_26AD74150);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    sub_23613F0AC(a1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  sub_2361FEC88();
  if (qword_26AD74EE0 != -1) {
    swift_once();
  }
  long long v26 = (void *)qword_26AD74ED8;
  sub_236126188(&qword_26AD76040);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23620E120;
  id v28 = v26;
  uint64_t v29 = sub_2361FD5B8();
  uint64_t v31 = v30;
  *(void *)(v27 + 56) = MEMORY[0x263F8D310];
  unint64_t v32 = sub_23613B7F0();
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 40) = v31;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  uint64_t v33 = v61;
  sub_2361FD4F8();
  sub_2361FD4E8();
  id v34 = objc_msgSend(self, sel_defaultManager);
  uint64_t v35 = (void *)sub_2361FD5E8();
  *(void *)&long long v66 = 0;
  LODWORD(v27) = objc_msgSend(v34, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v35, 1, 0, &v66);

  uint64_t v59 = v14;
  if (v27)
  {
    id v36 = (id)v66;
    sub_2361FD5D8();
    sub_2361FE738();
    uint64_t v37 = v65;
    v56(v57, v65, v14);
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v58, 1, 1, v14);
    uint64_t v51 = sub_2361FE728();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
    id v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v37, v14);
    id v53 = v64;
    uint64_t v54 = v14;
  }
  else
  {
    id v38 = (id)v66;
    id v39 = (void *)sub_2361FD5A8();

    swift_willThrow();
    sub_2361FEC68();
    uint64_t v40 = (void *)qword_26AD74ED8;
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_23620DFC0;
    id v42 = v40;
    uint64_t v43 = v65;
    uint64_t v44 = sub_2361FD5B8();
    uint64_t v45 = MEMORY[0x263F8D310];
    *(void *)(v41 + 56) = MEMORY[0x263F8D310];
    *(void *)(v41 + 64) = v32;
    *(void *)(v41 + 32) = v44;
    *(void *)(v41 + 40) = v46;
    swift_getErrorValue();
    uint64_t v47 = sub_2361FF298();
    *(void *)(v41 + 96) = v45;
    *(void *)(v41 + 104) = v32;
    *(void *)(v41 + 72) = v47;
    *(void *)(v41 + 80) = v48;
    sub_2361FDB28();

    swift_bridgeObjectRelease();
    sub_2361FE738();
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
    uint64_t v51 = MEMORY[0x237DFD750](0, &v66);

    sub_23613491C((uint64_t)&v66, (uint64_t *)&unk_268853660);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
    id v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v49 = v59;
    v52(v43, v59);
    id v53 = v64;
    uint64_t v54 = v49;
  }
  v52(v53, v54);
  return v51;
}

uint64_t static CRDTModelFileSyncContextStore.groupPersistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2361FD638();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v22 - v14;
  id v16 = objc_msgSend(self, sel_books);
  id v17 = objc_msgSend(v16, sel_containerURL);

  sub_2361FD618();
  sub_2361FD608();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  long long v19 = *(_OWORD *)(v3 + 96);
  v22[0] = *(_OWORD *)(v3 + 80);
  v22[1] = v19;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v20 = sub_23613E35C((uint64_t)v15, (uint64_t)v8, a1, a2);
  sub_23613491C((uint64_t)v8, &qword_26AD74150);
  v18(v15, v9);
  return v20;
}

uint64_t CRDTModelFileSyncContextStore.deinit()
{
  return v0;
}

uint64_t CRDTModelFileSyncContextStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t static CRDTModelLocalFileContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v2 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2361FD638();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v21 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v21 = (uint64_t)&v21 - v13;
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_23613DE80((uint64_t)v12);
  sub_2361FD608();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v12, v5);
  id v15 = objc_msgSend(self, sel_books);
  id v16 = objc_msgSend(v15, sel_containerURL);

  sub_2361FD618();
  sub_2361FD608();
  v14(v9, v5);
  long long v17 = *(_OWORD *)(v22 + 96);
  long long v25 = *(_OWORD *)(v22 + 80);
  long long v26 = v17;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v18 = v21;
  uint64_t v19 = sub_23613E35C(v21, (uint64_t)v4, v23, v24);
  sub_23613491C((uint64_t)v4, &qword_26AD74150);
  v14(v12, v5);
  v14((char *)v18, v5);
  return v19;
}

uint64_t CRDTModelLocalFileContextStore.deinit()
{
  return v0;
}

uint64_t type metadata accessor for CRDTModelFileSyncContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for CRDTModelFileSyncContextStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CRDTModelFileSyncContextStore);
}

uint64_t type metadata accessor for CRDTModelLocalFileContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for CRDTModelLocalFileContextStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CRDTModelLocalFileContextStore);
}

uint64_t sub_23613EFF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23613F030()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(v0 + 88) + 8))();
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_23613F0AC(uint64_t a1)
{
  v63[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_2361FD638();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v62 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v56 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v56 - v9;
  sub_2361FD608();
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_2361FD628();
  uint64_t v12 = (void *)sub_2361FE8C8();
  swift_bridgeObjectRelease();
  unsigned int v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);

    return;
  }
  uint64_t v57 = a1;
  uint64_t v58 = v2;
  uint64_t v60 = v8;
  uint64_t v61 = v3;
  id v59 = v11;
  sub_2361FEC88();
  if (qword_26AD74EE0 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_26AD74ED8;
  uint64_t v15 = sub_236126188(&qword_26AD76040);
  uint64_t v16 = swift_allocObject();
  long long v56 = xmmword_23620E120;
  *(_OWORD *)(v16 + 16) = xmmword_23620E120;
  id v17 = v14;
  uint64_t v18 = sub_2361FD5B8();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = MEMORY[0x263F8D310];
  unint64_t v21 = sub_23613B7F0();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  uint64_t v22 = v60;
  uint64_t v23 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v57, v58);
  uint64_t v24 = v62;
  sub_2361FD608();
  sub_2361FD628();
  long long v25 = (void *)sub_2361FE8C8();
  swift_bridgeObjectRelease();
  id v26 = v59;
  LODWORD(v20) = objc_msgSend(v59, sel_fileExistsAtPath_, v25);

  if (!v20)
  {
    uint64_t v57 = v15;
    uint64_t v33 = (void *)sub_2361FD5E8();
    v63[0] = 0;
    unsigned int v34 = objc_msgSend(v26, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v33, 1, 0, v63);

    id v35 = v63[0];
    if (v34)
    {
      id v36 = v63[0];
      uint64_t v37 = (void *)sub_2361FD5E8();
      id v38 = (void *)sub_2361FD5E8();
      v63[0] = 0;
      unsigned int v39 = objc_msgSend(v26, sel_moveItemAtURL_toURL_error_, v37, v38, v63);

      id v35 = v63[0];
      uint64_t v32 = v61;
      if (v39)
      {
        id v40 = v63[0];
        sub_2361FEC88();
        uint64_t v41 = (void *)qword_26AD74ED8;
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = v56;
        id v43 = v41;
        uint64_t v44 = sub_2361FD5B8();
        *(void *)(v42 + 56) = MEMORY[0x263F8D310];
        *(void *)(v42 + 64) = v21;
        *(void *)(v42 + 32) = v44;
        *(void *)(v42 + 40) = v45;
        sub_2361FDB28();

        uint64_t v22 = v60;
        swift_bridgeObjectRelease();

        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v32 = v61;
    }
    id v46 = v35;
    uint64_t v47 = (void *)sub_2361FD5A8();

    swift_willThrow();
    LODWORD(v61) = sub_2361FEC68();
    uint64_t v48 = (void *)qword_26AD74ED8;
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_23620DFC0;
    id v50 = v48;
    uint64_t v51 = sub_2361FD5B8();
    *(void *)(v49 + 56) = MEMORY[0x263F8D310];
    *(void *)(v49 + 64) = v21;
    *(void *)(v49 + 32) = v51;
    *(void *)(v49 + 40) = v52;
    swift_getErrorValue();
    uint64_t v53 = sub_2361FF298();
    *(void *)(v49 + 96) = MEMORY[0x263F8D310];
    *(void *)(v49 + 104) = v21;
    *(void *)(v49 + 72) = v53;
    *(void *)(v49 + 80) = v54;
    sub_2361FDB28();

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_2361FEC68();
  uint64_t v27 = (void *)qword_26AD74ED8;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v56;
  id v29 = v27;
  uint64_t v30 = sub_2361FD5B8();
  *(void *)(v28 + 56) = MEMORY[0x263F8D310];
  *(void *)(v28 + 64) = v21;
  *(void *)(v28 + 32) = v30;
  *(void *)(v28 + 40) = v31;
  sub_2361FDB28();

  uint64_t v22 = v60;
  swift_bridgeObjectRelease();
  uint64_t v32 = v61;
LABEL_12:
  uint64_t v55 = *(void (**)(char *, uint64_t))(v32 + 8);
  v55(v24, v23);
  v55(v22, v23);
  v55(v10, v23);
}

uint64_t sub_23613F6B0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23613F6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MutableObservableContainer.value.getter()
{
  return sub_2361FED38();
}

uint64_t MutableObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v3 = sub_236142808(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 264) - 8) + 8))(a1);
  return v3;
}

void *ObservableTransaction.__allocating_init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_236142430(a1, a2, a3);
}

uint64_t MutableObservableContainer.mutate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_23614287C;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_236142898;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23613F9DC;
  v11[3] = &unk_26E972A60;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23613F9B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23613F9DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_23613FA04()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0);
}

uint64_t ObservationToken.deinit()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return v0;
}

uint64_t ObservationToken.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ObservableContainer.Event.currentValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 16);
  if (EnumCaseMultiPayload != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v5, v8);
  }
  uint64_t v9 = &v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v8);
}

uint64_t sub_23613FC4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v18 = type metadata accessor for ObservableContainer.Event();
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v18);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v18 - v10;
  uint64_t v12 = (uint64_t)v2 + *(void *)(v4 + 120);
  swift_beginAccess();
  unsigned int v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, v12, v5);
  uint64_t v19 = a1;
  char v14 = sub_2361FE8B8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v5);
  if ((v14 & 1) == 0)
  {
    uint64_t v16 = &v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    v13(v8, v19, v5);
    v13(v16, v12, v5);
    uint64_t v17 = v18;
    swift_storeEnumTagMultiPayload();
    sub_23614051C((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v8, v17);
  }
  return result;
}

uint64_t sub_23613FEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_23613FF64()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_beginAccess();
  return MEMORY[0x237DFF340](v1);
}

uint64_t sub_23613FFC0(uint64_t a1, uint64_t a2)
{
  sub_2361428D8(a1, a2);
  return swift_unknownObjectRelease();
}

void (*sub_23613FFF8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x237DFF340](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_236140090;
}

void sub_236140090(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t ObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ObservableContainer.init(value:)(a1);
  return v2;
}

char *ObservableContainer.init(value:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v14 = *(void *)v1;
  uint64_t v15 = a1;
  uint64_t v13 = sub_2361FED18();
  uint64_t v3 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2361FECF8();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2361FE098();
  MEMORY[0x270FA5388](v7 - 8);
  sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  sub_2361FE078();
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_236144A24((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_236144A6C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  uint64_t v8 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v9 = v13;
  v8(v5, *MEMORY[0x263F8F130], v13);
  *((void *)v1 + 2) = sub_2361FED58();
  sub_2361FE088();
  sub_2361FECE8();
  v8(v5, *MEMORY[0x263F8F138], v9);
  *((void *)v1 + 3) = sub_2361FED58();
  uint64_t v10 = *(void *)(v14 + 80);
  type metadata accessor for ObservableContainer.Event();
  swift_getFunctionTypeMetadata1();
  *((void *)v2 + 4) = sub_2361FE7C8();
  id v11 = &v2[*(void *)(*(void *)v2 + 128)];
  *((void *)v11 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((void *)v11 + 1) = 0;
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(&v2[*(void *)(*(void *)v2 + 120)], v15, v10);
  return v2;
}

uint64_t sub_23614051C(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_2361FE098();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FE058();
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_23613FF64())
  {
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 8))(v1, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  uint64_t v26 = v1[3];
  sub_2361FE048();
  uint64_t v33 = nullsub_60;
  unsigned int v34 = 0;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_2361E02F8;
  uint64_t v32 = &unk_26E972D48;
  uint64_t v13 = _Block_copy(&aBlock);
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v9, v13);
  _Block_release(v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v23 = v4 + 8;
  long long v25 = v14;
  v14(v6, v3);
  uint64_t v28 = *(void *)(v28 + 8);
  ((void (*)(char *, uint64_t))v28)(v9, v7);
  swift_beginAccess();
  uint64_t v15 = v1[4];
  uint64_t v17 = *(void *)(v2 + 80);
  uint64_t v16 = *(void *)(v2 + 88);
  type metadata accessor for ObservableContainer.Event();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  uint64_t v24 = v7;
  aBlocuint64_t k = v15;
  MEMORY[0x270FA5388](FunctionTypeMetadata1);
  *(&v23 - 4) = v17;
  *(&v23 - 3) = v16;
  *(&v23 - 2) = v27;
  sub_2361FE848();
  uint64_t v27 = v3;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_2361FEA48();
  swift_bridgeObjectRelease();
  sub_2361FE048();
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v17;
  v20[3] = v16;
  void v20[4] = v19;
  uint64_t v33 = sub_2361444CC;
  unsigned int v34 = v20;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_2361E02F8;
  uint64_t v32 = &unk_26E972D98;
  unint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v9, v21);
  _Block_release(v21);
  v25(v6, v27);
  ((void (*)(char *, uint64_t))v28)(v9, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_2361409B8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (sub_23613FF64())
    {
      uint64_t v2 = v1;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      uint64_t v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_236140A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_2361445B0;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_236144ABC;
  v13[5] = v10;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_23613F9DC;
  v13[3] = &unk_26E972F00;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236140BF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v48 = a3;
  uint64_t v51 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = sub_2361FE098();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FE058();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v5 + 80);
  uint64_t v49 = *(void *)(v5 + 88);
  uint64_t v50 = v11;
  uint64_t v12 = type metadata accessor for ObservableContainer.Event();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v40 - v17;
  sub_23613FEBC((uint64_t)&v40 - v17);
  swift_storeEnumTagMultiPayload();
  if (sub_23613FF64())
  {
    uint64_t v20 = v19;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 8))(a1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v41 = v18;
  unint64_t v24 = (v14 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v25 = (void *)swift_allocObject();
  uint64_t v26 = v49;
  v25[2] = v50;
  v25[3] = v26;
  uint64_t v27 = v12;
  uint64_t v28 = v48;
  void v25[4] = v51;
  v25[5] = v28;
  id v29 = (char *)v25 + v23;
  uint64_t v30 = v27;
  (*(void (**)(char *, char *))(v13 + 32))(v29, v16);
  *(void *)((char *)v25 + v24) = v22;
  void aBlock[4] = sub_23614472C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  aBlock[3] = &unk_26E972F50;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v32 = v44;
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v32, v10, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
  swift_release();
  swift_release();
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v47;
  swift_unknownObjectWeakInit();
  id v36 = (void *)swift_allocObject();
  uint64_t v37 = v49;
  v36[2] = v50;
  v36[3] = v37;
  void v36[4] = v33;
  v36[5] = v34;
  uint64_t v38 = v51;
  v36[6] = v35;
  v36[7] = v38;
  v36[8] = v28;
  uint64_t v53 = sub_236144860;
  uint64_t v54 = v36;
  uint64_t v52 = v35;
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_2361FE858();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2361FE868();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v41, v30);
  swift_release();
  return swift_release();
}

uint64_t sub_236141130(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  a1(a3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (sub_23613FF64())
    {
      uint64_t v5 = v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      uint64_t v8 = swift_retain();
      v7(v8, ObjectType, v5);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_236141200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a1;
  uint64_t v11 = sub_2361FE058();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2361FE098();
  uint64_t v40 = *(void *)(v14 - 8);
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ObservableContainer.Event();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v36 - v19;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    swift_beginAccess();
    uint64_t v23 = MEMORY[0x237DFF340](a3 + 16);
    swift_unknownObjectRelease();
    if (v23)
    {
      uint64_t v36 = *(void *)(v22 + 24);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v37, v17);
      uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
      uint64_t v37 = v22;
      uint64_t v25 = (v24 + 48) & ~v24;
      uint64_t v26 = (char *)swift_allocObject();
      *((void *)v26 + 2) = a7;
      *((void *)v26 + 3) = a8;
      uint64_t v27 = v39;
      *((void *)v26 + 4) = v38;
      *((void *)v26 + 5) = v27;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v26[v25], v20, v17);
      void aBlock[4] = sub_2361449B8;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2361E02F8;
      aBlock[3] = &unk_26E972FF0;
      uint64_t v28 = _Block_copy(aBlock);
      swift_retain();
      sub_2361FE078();
      uint64_t v45 = MEMORY[0x263F8EE78];
      sub_236144A24((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
      sub_236126188((uint64_t *)&unk_26AD75F90);
      sub_236144A6C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
      uint64_t v29 = v43;
      sub_2361FEEA8();
      MEMORY[0x237DFDD80](0, v16, v13, v28);
      _Block_release(v28);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v29);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_2361FEC88();
      sub_236126188(&qword_26AD76040);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_23620E120;
      uint64_t v31 = v36;
      aBlock[0] = v36;
      uint64_t v32 = sub_2361FE928();
      uint64_t v34 = v33;
      *(void *)(v30 + 56) = MEMORY[0x263F8D310];
      *(void *)(v30 + 64) = sub_23613B7F0();
      *(void *)(v30 + 32) = v32;
      *(void *)(v30 + 40) = v34;
      sub_23612EDA4(0, (unint64_t *)&qword_26AD76010);
      uint64_t v35 = (void *)sub_2361FEE18();
      sub_2361FDB28();
      swift_bridgeObjectRelease();

      void aBlock[6] = v31;
      swift_beginAccess();
      swift_getFunctionTypeMetadata1();
      sub_2361FE858();
      sub_2361FE818();
      swift_endAccess();
      swift_release();
      uint64_t result = v45;
      if (v45) {
        return sub_236144558(v45);
      }
    }
  }
  return result;
}

uint64_t sub_236141760(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = *(void *)(v5 + 80);
  v7[3] = *(void *)(v5 + 88);
  v7[4] = v6;
  type metadata accessor for ObservationToken();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_236142998;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = swift_retain();
  sub_236140A74(v9, a1, a2);
  swift_release();
  return v8;
}

uint64_t sub_236141848()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    type metadata accessor for ObservableContainer.Event();
    swift_getFunctionTypeMetadata1();
    sub_2361FE858();
    sub_2361FE818();
    swift_endAccess();
    swift_release();
    uint64_t result = v1;
    if (v1) {
      return sub_236144558(v1);
    }
  }
  return result;
}

uint64_t sub_236141944(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_236142A08;
  *(void *)(v5 + 24) = v4;
  void v8[4] = sub_236144ABC;
  void v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_23613F9DC;
  v8[3] = &unk_26E972B28;
  uint64_t v6 = _Block_copy(v8);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236141AAC()
{
  swift_beginAccess();
  type metadata accessor for ObservableContainer.Event();
  swift_getFunctionTypeMetadata1();
  sub_2361FE858();
  sub_2361FE818();
  swift_endAccess();
  uint64_t result = v1;
  if (v1) {
    return sub_236144558(v1);
  }
  return result;
}

id *ObservableContainer.deinit()
{
  uint64_t v1 = *v0;

  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 15));
  sub_236142A20((uint64_t)v0 + *((void *)*v0 + 16));
  return v0;
}

uint64_t ObservableContainer.__deallocating_deinit()
{
  ObservableContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_236141C90@<X0>(uint64_t a1@<X8>)
{
  return sub_23613FEBC(a1);
}

uint64_t sub_236141CB8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a3 + 264);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v10 = v9 + *(void *)(v8 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  sub_236142BB8((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MutableObservableContainer.init(value:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_236142748(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 264) - 8) + 8))(a1);
  return v4;
}

uint64_t MutableObservableContainer.__deallocating_deinit()
{
  ObservableContainer.deinit();
  return swift_deallocClassInstance();
}

void *ObservableTransaction.init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_23614249C(a1, a2, a3, v3);
}

void sub_236141F30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!*(void *)(a1 + 32))
  {
    id v6 = objc_msgSend(*(id *)(a1 + 48), sel_createTransactionWithName_, sub_2361FE958() + 32);
    swift_release();
    uint64_t v7 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v6;

    swift_bridgeObjectRetain_n();
    oslog = sub_2361FDB38();
    os_log_type_t v8 = sub_2361FEC48();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_23612A974(a2, a3, &v12);
      sub_2361FEE68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2360BC000, oslog, v8, "[Transaction]: Created transaction %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v10, -1, -1);
      MEMORY[0x237DFF240](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_236142120(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = 0;

  swift_bridgeObjectRetain_n();
  oslog = sub_2361FDB38();
  os_log_type_t v6 = sub_2361FEC48();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_23612A974(a2, a3, &v10);
    sub_2361FEE68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2360BC000, oslog, v6, "[Transaction]: Ended transaction %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v8, -1, -1);
    MEMORY[0x237DFF240](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t ObservableTransaction.deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13BookDataStore21ObservableTransaction_logger;
  uint64_t v2 = sub_2361FDB58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ObservableTransaction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13BookDataStore21ObservableTransaction_logger;
  uint64_t v2 = sub_2361FDB58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23614240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236162760(a1, a2, a3);
}

void *sub_236142430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ObservableTransaction();
  os_log_type_t v6 = (void *)swift_allocObject();
  return sub_23614249C(a1, a2, a3, v6);
}

void *sub_23614249C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v6 = sub_2361FECF8();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_2361FE098();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_2361FED18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[4] = 0;
  sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F138], v8);
  sub_2361FE078();
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_236144A24((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_236144A6C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  a4[5] = sub_2361FED58();
  sub_2361FDB48();
  uint64_t v12 = v15;
  a4[2] = a1;
  a4[3] = v12;
  a4[6] = v16;
  return a4;
}

uint64_t sub_236142748(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = (char *)&v6 - v2;
  (*(void (**)(char *))(v4 + 16))((char *)&v6 - v2);
  ObservableContainer.init(value:)((uint64_t)v3);
  return v1;
}

uint64_t sub_236142808(uint64_t a1)
{
  return sub_236142748(a1);
}

uint64_t sub_236142844()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23614287C()
{
  return sub_236141CB8(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_236142888()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236142898()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2361428C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2361428D0()
{
  return swift_release();
}

uint64_t sub_2361428D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(void *)(*(void *)v2 + 128);
  swift_beginAccess();
  *(void *)(v4 + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for ObservableContainer.Event()
{
  return sub_236134B8C();
}

uint64_t sub_236142960()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236142998()
{
  return sub_236141848();
}

uint64_t type metadata accessor for ObservationToken()
{
  return self;
}

uint64_t sub_2361429C8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236142A08()
{
  return sub_236141AAC();
}

uint64_t sub_236142A10()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236142A20(uint64_t a1)
{
  return a1;
}

uint64_t sub_236142A48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(NSObject **)(v1 + 40);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_23614453C;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_236144ABC;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_23613F9DC;
  v9[3] = &unk_26E972E88;
  uint64_t v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236142BB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = &v10[-v5];
  uint64_t v8 = v1 + *(void *)(v7 + 120);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v8, a1, v3);
  swift_endAccess();
  sub_23613FC4C((uint64_t)v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_236142D18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(NSObject **)(v1 + 40);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_2361444DC;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_236144ABC;
  v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_23613F9DC;
  v9[3] = &unk_26E972E10;
  uint64_t v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236142E88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23613FF64();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_236142EB4(uint64_t *a1)
{
  return sub_2361428D8(*a1, a1[1]);
}

uint64_t sub_236142EE4()
{
  return 16;
}

__n128 sub_236142EF0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for ObservationToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObservationToken);
}

uint64_t dispatch thunk of ObservationToken.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ObservableDelegate.observableCallbacksWillRun(target:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ObservableDelegate.observableCallbacksDidRun(target:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_236142F60()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ObservableContainer()
{
  return sub_236134B8C();
}

uint64_t method lookup function for ObservableContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObservableContainer);
}

uint64_t dispatch thunk of ObservableContainer.value.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ObservableContainer.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ObservableContainer.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ObservableContainer.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ObservableContainer.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of ObservableContainer.observe(callback:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ObservableContainer.addObserver(_:callback:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ObservableContainer.removeObserver(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_236143164()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_236143204(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  uint64_t v11 = v7 + v8;
  if (((v7 + v9) & ~v9) + v7 <= v7) {
    uint64_t v12 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  }
  int v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    unsigned int v17 = a2[v12];
    if (v17 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v18 = v12;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_22;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_22:
          int v20 = (v19 | ((v17 - 2) << (8 * v12))) + 2;
          unsigned int v21 = v19 + 2;
          if (v12 >= 4) {
            unsigned int v17 = v21;
          }
          else {
            unsigned int v17 = v20;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16);
    v22(a1, a2, v5);
    if (v17 == 1)
    {
      v22((void *)(((unint64_t)v4 + v11) & v10), (unsigned __int8 *)((unint64_t)&a2[v11] & v10), v5);
      *((unsigned char *)v4 + v12) = 1;
    }
    else
    {
      *((unsigned char *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_2361433C8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5) {
    v5 += (v5 + v6) & ~v6;
  }
  unsigned int v8 = a1[v5];
  if (v8 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        int v11 = (v10 | ((v8 - 2) << (8 * v5))) + 2;
        unsigned int v12 = v10 + 2;
        if (v5 >= 4) {
          unsigned int v8 = v12;
        }
        else {
          unsigned int v8 = v11;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v4 + 8);
  uint64_t result = v14(a1, v3);
  if (v8 == 1)
  {
    return v14((unsigned __int8 *)((unint64_t)&a1[v7] & ~v6), v3);
  }
  return result;
}

uint64_t sub_236143554(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7) {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v10 = ((v7 + v8) & ~v8) + v7;
  }
  unsigned int v11 = a2[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
        unsigned int v15 = v13 + 2;
        if (v10 >= 4) {
          unsigned int v11 = v15;
        }
        else {
          unsigned int v11 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16);
  v16(a1, a2, v5);
  if (v11 == 1)
  {
    v16((v9 + a1) & ~v8, (unsigned __int8 *)((unint64_t)&a2[v9] & ~v8), v5);
    char v17 = 1;
  }
  else
  {
    char v17 = 0;
  }
  *(unsigned char *)(a1 + v10) = v17;
  return a1;
}

unsigned __int8 *sub_2361436E0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7) {
      uint64_t v10 = *(void *)(v6 + 64);
    }
    else {
      uint64_t v10 = ((v7 + v8) & ~v8) + v7;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    char v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    v17(a1, v5);
    if (v11 == 1) {
      v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
    }
    unsigned int v18 = a2[v10];
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_28;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_28:
          int v21 = (v20 | ((v18 - 2) << (8 * v10))) + 2;
          unsigned int v22 = v20 + 2;
          if (v10 >= 4) {
            unsigned int v18 = v22;
          }
          else {
            unsigned int v18 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
    v23(a1, a2, v5);
    if (v18 == 1)
    {
      v23((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v24 = 1;
    }
    else
    {
      char v24 = 0;
    }
    a1[v10] = v24;
  }
  return a1;
}

uint64_t sub_23614393C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7) {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v10 = ((v7 + v8) & ~v8) + v7;
  }
  unsigned int v11 = a2[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
        unsigned int v15 = v13 + 2;
        if (v10 >= 4) {
          unsigned int v11 = v15;
        }
        else {
          unsigned int v11 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 32);
  v16(a1, a2, v5);
  if (v11 == 1)
  {
    v16((v9 + a1) & ~v8, (unsigned __int8 *)((unint64_t)&a2[v9] & ~v8), v5);
    char v17 = 1;
  }
  else
  {
    char v17 = 0;
  }
  *(unsigned char *)(a1 + v10) = v17;
  return a1;
}

unsigned __int8 *sub_236143AC8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7) {
      uint64_t v10 = *(void *)(v6 + 64);
    }
    else {
      uint64_t v10 = ((v7 + v8) & ~v8) + v7;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    char v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    v17(a1, v5);
    if (v11 == 1) {
      v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
    }
    unsigned int v18 = a2[v10];
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_28;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_28:
          int v21 = (v20 | ((v18 - 2) << (8 * v10))) + 2;
          unsigned int v22 = v20 + 2;
          if (v10 >= 4) {
            unsigned int v18 = v22;
          }
          else {
            unsigned int v18 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
    v23(a1, a2, v5);
    if (v18 == 1)
    {
      v23((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v24 = 1;
    }
    else
    {
      char v24 = 0;
    }
    a1[v10] = v24;
  }
  return a1;
}

uint64_t sub_236143D24(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 2) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 255;
}

void sub_236143E90(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 > v6) {
    unint64_t v6 = v7;
  }
  size_t v8 = v6 + 1;
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x236144090);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2361440B8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 2;
        LODWORD(v5) = v8 + 2;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_2361441A8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  size_t v5 = *(void *)(v4 + 64);
  size_t v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 1)
  {
    if (v6 <= v5) {
      size_t v7 = v5;
    }
    else {
      size_t v7 = v6;
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5) {
      size_t v5 = v6;
    }
    a1[v5] = a2;
  }
}

uint64_t sub_2361442C0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MutableObservableContainer()
{
  return sub_236134B8C();
}

uint64_t sub_236144310()
{
  return type metadata accessor for ObservableTransaction();
}

uint64_t type metadata accessor for ObservableTransaction()
{
  uint64_t result = qword_26AD75518;
  if (!qword_26AD75518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_236144364()
{
  uint64_t result = sub_2361FDB58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ObservableTransaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObservableTransaction);
}

uint64_t dispatch thunk of ObservableTransaction.__allocating_init(name:transactionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ObservableTransaction.observableCallbacksWillRun(target:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ObservableTransaction.observableCallbacksDidRun(target:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_236144494(uint64_t (**a1)(void))
{
  return (*a1)(*(void *)(v1 + 32));
}

uint64_t sub_2361444CC()
{
  return sub_2361409B8();
}

void sub_2361444DC()
{
  sub_236142120(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2361444E8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2361444FC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_23614453C()
{
  sub_236141F30(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_236144548()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236144558(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_236144568()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2361445B0()
{
  return sub_236140BF0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_2361445BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2361445CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  size_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v7(v0 + v4, v1);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v7(v0 + v4 + *(int *)(TupleTypeMetadata2 + 48), v1);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_23614472C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_236141130(v2, v3, v4);
}

uint64_t sub_2361447E0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236144818()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_236144860(uint64_t a1)
{
  return sub_236141200(a1, v1[4], v1[5], v1[6], v1[7], v1[8], v1[2], v1[3]);
}

uint64_t sub_236144874()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  size_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v7(v0 + v4, v1);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v7(v0 + v4 + *(int *)(TupleTypeMetadata2 + 48), v1);
  }
  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t sub_2361449B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 32))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_236144A24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236144A6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_236126310(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CRDTModelFileSyncInfo.additionalFields.getter(uint64_t a1)
{
  sub_23614A134(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelFileSyncInfo.additionalFields.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*CRDTModelFileSyncInfo.additionalFields.modify())()
{
  return nullsub_60;
}

uint64_t static CRDTModelFileSyncInfo.fields.getter()
{
  return 0x6C65646F6DLL;
}

uint64_t CRDTModelFileSyncInfo.init()@<X0>(uint64_t a1@<X8>)
{
  sub_2361FE4A8();
  uint64_t result = type metadata accessor for CRDTModelFileSyncInfo();
  *(void *)(a1 + *(int *)(result + 52)) = MEMORY[0x263F8EE80];
  return result;
}

uint64_t CRDTModelFileSyncInfo.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + *(int *)(type metadata accessor for CRDTModelFileSyncInfo() + 52)) = MEMORY[0x263F8EE80];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 40))(a3, a1, a2);
}

uint64_t sub_236144CF8()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_236144D2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16FC8](a1, WitnessTable);
}

uint64_t sub_236144D80(uint64_t a1)
{
  sub_23614A134(a1);
  return swift_bridgeObjectRetain();
}

void (*sub_236144DAC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CRDTModelFileSyncInfo.additionalFields.modify();
  return sub_236144E0C;
}

void sub_236144E0C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_236144E54@<X0>(uint64_t a1@<X8>)
{
  return CRDTModelFileSyncInfo.init()(a1);
}

uint64_t sub_236144E6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F17CC8](a1, WitnessTable);
}

uint64_t sub_236144EC0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F68](a1, a2, WitnessTable);
}

uint64_t sub_236144F28(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F90](a1, a2, WitnessTable);
}

uint64_t sub_236144F88()
{
  swift_getWitnessTable();
  return sub_2361FE1D8();
}

uint64_t sub_236144FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F98](a1, a2, a3, WitnessTable);
}

uint64_t sub_236145064(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16FB8](a1, a2, WitnessTable);
}

uint64_t sub_2361450C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16FA0](a1, a2, WitnessTable);
}

uint64_t sub_236145124(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F80](a1, a2, WitnessTable);
}

uint64_t sub_23614518C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F78](a1, a2, WitnessTable);
}

uint64_t sub_2361451F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F60](a1, a2, a3, WitnessTable);
}

uint64_t sub_236145270(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F48](a1, a2, WitnessTable);
}

uint64_t sub_2361452D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F70](a1, WitnessTable);
}

uint64_t sub_236145324(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F50](a1, a2, WitnessTable);
}

uint64_t sub_236145388()
{
  swift_getWitnessTable();
  return sub_2361FE1A8();
}

uint64_t sub_2361453E8()
{
  return sub_2361FE5B8();
}

uint64_t sub_236145450()
{
  return sub_2361FE5C8();
}

uint64_t sub_2361454C8()
{
  return sub_2361FE168();
}

uint64_t sub_23614552C()
{
  return sub_2361FE1B8();
}

uint64_t sub_23614558C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F16F58](a1, WitnessTable);
}

uint64_t CRDTModelFileSyncInfo.description.getter()
{
  return sub_2361FF218();
}

uint64_t static CRDTModelFileSyncInfo.modelName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a2 + 8))();
  sub_2361FE9B8();
  return v3;
}

uint64_t sub_23614566C(uint64_t a1)
{
  return static CRDTModelFileSyncInfo.modelName.getter(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

id CRDTModelFileSyncManager.DefaultConfig.crdtContext.getter()
{
  uint64_t v0 = (void *)sub_23614A158();
  return v0;
}

void CRDTModelFileSyncManager.DefaultConfig.crdtContext.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*CRDTModelFileSyncManager.DefaultConfig.crdtContext.modify())()
{
  return nullsub_60;
}

uint64_t CRDTModelFileSyncManager.DefaultConfig.storeDirectory.getter()
{
  uint64_t v0 = sub_2361FD638();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_books);
  id v5 = objc_msgSend(v4, sel_containerURL);

  sub_2361FD618();
  sub_2361FD608();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t CRDTModelFileSyncManager.DefaultConfig.init(crdtContext:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_23614583C()
{
  uint64_t v0 = (void *)sub_23614A158();
  return v0;
}

uint64_t sub_236145868()
{
  return CRDTModelFileSyncManager.DefaultConfig.storeDirectory.getter();
}

BOOL static CRDTModelFileSyncManager.SyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CRDTModelFileSyncManager.SyncError.hash(into:)()
{
  return sub_2361FF308();
}

uint64_t CRDTModelFileSyncManager.SyncError.hashValue.getter()
{
  return sub_2361FF318();
}

uint64_t sub_236145918()
{
  return sub_2361FF318();
}

uint64_t CRDTModelFileSyncManager.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x237DFF340](v0 + 16);
}

uint64_t CRDTModelFileSyncManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CRDTModelFileSyncManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x237DFF340](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_236145A80;
}

void sub_236145A80(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_236145B04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

BOOL sub_236145C58()
{
  uint64_t v0 = type metadata accessor for ModelState();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - v2;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  unsigned __int8 v4 = v3[*(int *)(v0 + 44)];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  unsigned __int8 v8 = v4;
  unsigned __int8 v7 = 1;
  return static ModelState.LoadedState.== infix(_:_:)(&v8, &v7);
}

uint64_t CRDTModelFileSyncManager.observable.getter()
{
  type metadata accessor for ModelState();
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  sub_2361FED38();
  return v1;
}

uint64_t CRDTModelFileSyncManager.model.getter()
{
  return sub_2361FED38();
}

uint64_t sub_236145EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned __int8 v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a2, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CRDTModelFileSyncManager.modelSyncVersion.getter()
{
  return sub_2361FED38();
}

uint64_t sub_2361460C4()
{
  return swift_release();
}

uint64_t CRDTModelFileSyncManager.modelSyncVersionObservable.getter()
{
  sub_236126188(&qword_26AD75C00);
  sub_2361FED38();
  return v1;
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.getter()
{
  return sub_23617C48C() & 1;
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.setter(char a1)
{
  return sub_23617C500(a1);
}

uint64_t (*CRDTModelFileSyncManager.disableReadingInBackground.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = sub_23617C48C() & 1;
  return sub_23614624C;
}

uint64_t sub_23614624C(uint64_t a1)
{
  return sub_23617C500(*(unsigned char *)(a1 + 8));
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 80) = a1;
  return result;
}

uint64_t (*CRDTModelFileSyncManager.enableCloudSync.modify())()
{
  return j__swift_endAccess;
}

id CRDTModelFileSyncManager.crdtContext.getter()
{
  return *(id *)(v0 + 96);
}

void *CRDTModelFileSyncManager.__allocating_init(clientName:groupContext:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, char a3, char *a4, char *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v7 = v6;
  int v11 = *(_UNKNOWN ***)(v7 + 88);
  uint64_t v12 = *(void *)(v7 + 96);
  if (a3)
  {
    uint64_t v19 = type metadata accessor for CRDTModelFileSyncInfo();
    int v20 = &protocol witness table for CRDTModelFileSyncInfo<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v22 = swift_getWitnessTable();
    type metadata accessor for CRDTModelFileSyncContextStore();
    uint64_t v13 = static CRDTModelFileSyncContextStore.groupPersistentContext(_:)(a1, a2);
  }
  else
  {
    uint64_t v19 = type metadata accessor for CRDTModelFileSyncInfo();
    int v20 = &protocol witness table for CRDTModelFileSyncInfo<A>;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v22 = swift_getWitnessTable();
    type metadata accessor for CRDTModelFileSyncContextStore();
    uint64_t v13 = static CRDTModelFileSyncContextStore.persistentContext(_:)(a1, a2);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  int v20 = v11;
  uint64_t WitnessTable = v12;
  uint64_t v22 = type metadata accessor for CRDTModelFileSyncManager.DefaultConfig();
  uint64_t v23 = &protocol witness table for CRDTModelFileSyncManager<A>.DefaultConfig;
  uint64_t v19 = v14;
  swift_allocObject();
  unsigned int v15 = sub_23614A1F0(&v19, a4, a5, a6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v15;
}

uint64_t CRDTModelFileSyncManager.__allocating_init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23614655C(a1, a2, a3, a4, (uint64_t (*)(void))sub_23614B49C);
}

uint64_t CRDTModelFileSyncManager.init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23614655C(a1, a2, a3, a4, (uint64_t (*)(void))sub_23614A1F0);
}

uint64_t sub_23614655C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a5();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_2361465A8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_236146608(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_236146608(uint64_t a1)
{
  uint64_t v3 = sub_2361FE058();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361FE048();
  uint64_t v9 = v1;
  uint64_t v10 = a1;
  sub_2361FED28();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_236146714(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v136 = a1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v126 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[10];
  uint64_t v7 = v3[12];
  uint64_t v8 = v3[13];
  uint64_t v9 = type metadata accessor for ModelState();
  uint64_t v128 = *(void *)(v9 - 8);
  uint64_t v129 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v127 = (uint64_t)&v105 - v10;
  uint64_t v120 = type metadata accessor for ModelState.Source();
  os_log_t v119 = *(os_log_t *)(v120 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v120);
  os_log_type_t v123 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v118 = (char *)&v105 - v14;
  uint64_t v134 = *(void *)(v6 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v122 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v131 = (char *)&v105 - v17;
  uint64_t v18 = v3[11];
  uint64_t v135 = v6;
  uint64_t v141 = v6;
  uint64_t v142 = v18;
  uint64_t v125 = v7;
  uint64_t v143 = v7;
  uint64_t v144 = v8;
  uint64_t v124 = v8;
  uint64_t v19 = type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v20 = sub_2361FE6A8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v105 - v23;
  uint64_t v25 = *(void *)(v19 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v22);
  uint64_t v130 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v109 = (char *)&v105 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v115 = (char *)&v105 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  id v110 = (char *)&v105 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v108 = (char *)&v105 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v105 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v105 - v39;
  uint64_t v41 = (uint64_t)v2 + v3[24];
  swift_beginAccess();
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v114 = v21 + 16;
  unint64_t v113 = v42;
  v42(v24, v41, v20);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2361FE688();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v116 = v24;
  uint64_t v117 = v21 + 8;
  uint64_t v111 = v44;
  v44(v24, v20);
  uint64_t v107 = v20;
  uint64_t v112 = WitnessTable;
  sub_2361FE688();
  BOOL v132 = sub_236145C58();
  swift_getWitnessTable();
  char v45 = sub_2361FE1D8();
  uint64_t v137 = v2;
  uint64_t v138 = v25;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  if (v45)
  {
    uint64_t v136 = v41;
    uint64_t v47 = v108;
    uint64_t v133 = v38;
    v46(v108, v38, v19);
    uint64_t v48 = v110;
    uint64_t v121 = v40;
    v46(v110, v40, v19);
    uint64_t v49 = sub_2361FDB38();
    os_log_type_t v50 = sub_2361FEC88();
    int v51 = v50;
    BOOL v52 = os_log_type_enabled(v49, v50);
    uint64_t v106 = v19;
    if (v52)
    {
      uint64_t v53 = swift_slowAlloc();
      unint64_t v109 = (char *)swift_slowAlloc();
      unint64_t v139 = v109;
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v105 = *(void *)(v19 + 40);
      LODWORD(v130) = v51;
      uint64_t v54 = sub_2361FF218();
      uint64_t v140 = sub_23612A974(v54, v55, (uint64_t *)&v139);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      long long v56 = *(void (**)(char *, uint64_t))(v138 + 8);
      v56(v47, v19);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v57 = sub_2361FF218();
      uint64_t v140 = sub_23612A974(v57, v58, (uint64_t *)&v139);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      v56(v48, v19);
      _os_log_impl(&dword_2360BC000, v49, (os_log_type_t)v130, "CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s", (uint8_t *)v53, 0x16u);
      id v59 = v109;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v59, -1, -1);
      MEMORY[0x237DFF240](v53, -1, -1);
    }
    else
    {

      long long v56 = *(void (**)(char *, uint64_t))(v138 + 8);
      v56(v47, v19);
      uint64_t v60 = ((uint64_t (*)(char *, uint64_t))v56)(v48, v19);
    }
    os_log_type_t v74 = v131;
    MEMORY[0x270FA5388](v60);
    uint64_t v75 = v133;
    *(&v105 - 2) = (uint64_t)v133;
    uint64_t v76 = v136;
    swift_beginAccess();
    uint64_t v77 = v107;
    sub_2361FE658();
    swift_endAccess();
    uint64_t v78 = v134;
    id v79 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
    uint64_t v80 = v75;
    uint64_t v81 = v135;
    v79(v74, v80, v135);
    if (sub_236145C58())
    {
      unint64_t v82 = v118;
      v79(v118, v74, v81);
      uint64_t v83 = 0;
    }
    else
    {
      uint64_t v83 = 2;
      unint64_t v82 = v118;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v82, v83, 2, v81);
    uint64_t v93 = v116;
    v113(v116, v76, v77);
    uint64_t v94 = v115;
    sub_2361FE688();
    v111(v93, v77);
    uint64_t v95 = (uint64_t)v122;
    v79(v122, v94, v81);
    uint64_t v19 = v106;
    uint64_t v130 = (char *)v56;
    v56(v94, v106);
    LOBYTE(v139) = 1;
    os_log_t v96 = v119;
    uint64_t v97 = (uint64_t)v123;
    uint64_t v98 = v120;
    ((void (*)(char *, char *, uint64_t))v119[2].isa)(v123, v82, v120);
    uint64_t v99 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v100 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v126, 1, 1, v99);
    uint64_t v101 = v127;
    ModelState.init(model:loaded:source:revisionInfo:)(v95, (char *)&v139, v97, v100, v81, v127);
    sub_2361475FC(v101, 0x656C646E61685F71, 0xE800000000000000);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v101, v129);
    sub_236147A84();
    ((void (*)(char *, uint64_t))v96[1].isa)(v82, v98);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v131, v81);
    if (v132)
    {
      uint64_t v38 = v133;
      uint64_t v40 = v121;
      goto LABEL_20;
    }
    BOOL v102 = sub_236145C58();
    uint64_t v38 = v133;
    uint64_t v40 = v121;
    if (!v102) {
      goto LABEL_20;
    }
LABEL_19:
    sub_23614981C();
    goto LABEL_20;
  }
  uint64_t v61 = v109;
  v46(v109, v38, v19);
  v46(v130, v40, v19);
  uint64_t v62 = sub_2361FDB38();
  os_log_type_t v63 = sub_2361FEC88();
  int v64 = v63;
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v65 = swift_slowAlloc();
    uint64_t v131 = (char *)swift_slowAlloc();
    unint64_t v139 = v131;
    *(_DWORD *)uint64_t v65 = 136315394;
    uint64_t v121 = v40;
    uint64_t v133 = v38;
    LODWORD(v120) = v64;
    uint64_t v66 = sub_2361FF218();
    uint64_t v140 = sub_23612A974(v66, v67, (uint64_t *)&v139);
    sub_2361FEE68();
    swift_bridgeObjectRelease();
    os_log_t v119 = v62;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v138 + 8);
    v68(v61, v19);
    *(_WORD *)(v65 + 12) = 2080;
    uint64_t v69 = v130;
    uint64_t v38 = v133;
    uint64_t v70 = sub_2361FF218();
    uint64_t v140 = sub_23612A974(v70, v71, (uint64_t *)&v139);
    sub_2361FEE68();
    swift_bridgeObjectRelease();
    uint64_t v130 = (char *)v68;
    v68(v69, v19);
    os_log_t v72 = v119;
    _os_log_impl(&dword_2360BC000, v119, (os_log_type_t)v120, "CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s", (uint8_t *)v65, 0x16u);
    os_log_type_t v73 = v131;
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v73, -1, -1);
    uint64_t v40 = v121;
    MEMORY[0x237DFF240](v65, -1, -1);
  }
  else
  {

    uint64_t v84 = *(void (**)(char *, uint64_t))(v138 + 8);
    v84(v61, v19);
    unint64_t v85 = v130;
    uint64_t v130 = (char *)v84;
    v84(v85, v19);
  }
  uint64_t v87 = v134;
  uint64_t v86 = v135;
  if (!sub_236145C58())
  {
    uint64_t v88 = (uint64_t)v122;
    sub_236145B04((uint64_t)v122);
    LOBYTE(v139) = 1;
    uint64_t v89 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v123, 2, 2, v86);
    uint64_t v90 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v91 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v126, 1, 1, v90);
    uint64_t v92 = v127;
    ModelState.init(model:loaded:source:revisionInfo:)(v88, (char *)&v139, v89, v91, v86, v127);
    sub_2361475FC(v92, 0xD000000000000012, 0x800000023620AD50);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v92, v129);
  }
  sub_236147978(v136);
  if (!v132 && sub_236145C58()) {
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v103 = (uint64_t (*)(char *, uint64_t))v130;
  ((void (*)(char *, uint64_t))v130)(v40, v19);
  return v103(v38, v19);
}

uint64_t sub_2361475FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v27 = (void *)*v3;
  uint64_t v6 = v27[10];
  uint64_t v7 = v27[13];
  uint64_t v25 = v27[12];
  uint64_t v26 = v6;
  uint64_t v24 = v7;
  uint64_t v8 = type metadata accessor for ModelState();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - v10, a1, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_2361FDB38();
  os_log_type_t v13 = sub_2361FEC88();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = v22;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_23612A974(v23, a3, &v29);
    uint64_t v23 = a1;
    sub_2361FEE68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v15 = ModelState.description.getter(v8);
    uint64_t v28 = sub_23612A974(v15, v16, &v29);
    a1 = v23;
    sub_2361FEE68();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_2360BC000, v12, v13, "CRDTModelFileSyncManager q_updateState (%s) -- newState=%s", (uint8_t *)v14, 0x16u);
    uint64_t v17 = v22;
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v17, -1, -1);
    MEMORY[0x237DFF240](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = v27[11];
  *(&v22 - 6) = v26;
  *(&v22 - 5) = v19;
  uint64_t v20 = v24;
  *(&v22 - 4) = v25;
  *(&v22 - 3) = v20;
  *(&v22 - 2) = a1;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_23614C3D8, (uint64_t)(&v22 - 8));
  return swift_release();
}

uint64_t sub_236147978(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 192);
  swift_beginAccess();
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v4 = sub_2361FE6A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a1, v4);
  swift_endAccess();
  return sub_236147A84();
}

uint64_t sub_236147A84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  swift_beginAccess();
  long long v3 = *(_OWORD *)(v2 + 96);
  long long v10 = *(_OWORD *)(v2 + 80);
  long long v11 = v3;
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  sub_2361FE6A8();
  sub_2361FE638();
  swift_endAccess();
  uint64_t v4 = v0[5];
  uint64_t v5 = *(NSObject **)(v4 + 16);
  uint64_t v6 = (void *)swift_allocObject();
  id v6[2] = sub_23614C364;
  v6[3] = v1;
  v6[4] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_23614C3A4;
  *(void *)(v7 + 24) = v6;
  uint64_t v12 = sub_236134708;
  uint64_t v13 = v7;
  *(void *)&long long v10 = MEMORY[0x263EF8330];
  *((void *)&v10 + 1) = 1107296256;
  *(void *)&long long v11 = sub_23613F9DC;
  *((void *)&v11 + 1) = &unk_26E973238;
  uint64_t v8 = _Block_copy(&v10);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236147CB4(char *a1, void *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = sub_2361FE7B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v4 + 96);
  v19[0] = *(_OWORD *)(v4 + 80);
  v19[1] = v9;
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v10 = sub_2361FE6A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v19 - v12;
  sub_23614C308((uint64_t)a1);
  uint64_t v14 = (void *)a2[12];
  uint64_t v15 = (char *)a2 + *(void *)(*a2 + 192);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v15, v10);
  id v16 = v14;
  sub_2361FE668();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)a1 = v16;
  uint64_t v17 = type metadata accessor for CRDTModelSyncVersion();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(&a1[*(int *)(v17 + 20)], v8, v5);
}

uint64_t CRDTModelFileSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelFileSyncManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelFileSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v5 = sub_2361FE058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361FE048();
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  char v13 = a2;
  sub_2361FED28();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_236148048(uint64_t a1, int a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v150 = a4;
  objc_super v148 = a3;
  LODWORD(v144) = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = *((void *)*v4 + 10);
  uint64_t v9 = *((void *)*v4 + 12);
  uint64_t v10 = (char *)*((void *)*v4 + 13);
  uint64_t v136 = type metadata accessor for ModelState();
  uint64_t v132 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v118 - v11;
  uint64_t v131 = type metadata accessor for ModelState.Source();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v134 = (char *)&v118 - v12;
  uint64_t v141 = sub_2361FE548();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  unint64_t v139 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v7[11];
  uint64_t v159 = (void (*)(void, void))v8;
  uint64_t v160 = v14;
  uint64_t v154 = v14;
  uint64_t v161 = v9;
  uint64_t v162 = v10;
  unint64_t v156 = v10;
  uint64_t v15 = type metadata accessor for CRDTModelFileSyncInfo();
  uint64_t v137 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v133 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  os_log_t v149 = (os_log_t)((char *)&v118 - v18);
  swift_getWitnessTable();
  uint64_t v151 = sub_2361FE6A8();
  uint64_t v146 = *(void *)(v151 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v151);
  uint64_t v129 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v118 - v22;
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v21);
  uint64_t v143 = (char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t WitnessTable = (char *)&v118 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint8_t *)&v118 - v29;
  id v147 = objc_msgSend(v5[8], sel_createTransactionWithName_, "com.apple.ibooks.CRDTModelFileSyncManager.q_sync");
  sub_236145B04((uint64_t)v30);
  uint64_t v155 = v9;
  LOBYTE(v9) = sub_2361FE5A8();
  uint64_t v31 = *(void (**)(uint8_t *, uint64_t))(v24 + 8);
  uint64_t v145 = v30;
  uint64_t v152 = v31;
  uint64_t v153 = v24 + 8;
  v31(v30, v8);
  unint64_t v32 = (unint64_t)v5 + *((void *)*v5 + 25);
  uint64_t v33 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v24 + 16);
  if (v9)
  {
    uint64_t v122 = v24;
    uint64_t v127 = v23;
    uint64_t v143 = (char *)v15;
    uint64_t v34 = (uint8_t *)WitnessTable;
    uint64_t v124 = a1;
    uint64_t v126 = v24 + 16;
    uint64_t v128 = v33;
    v33((uint8_t *)WitnessTable, a1, v8);
    swift_retain_n();
    unint64_t v123 = v32;
    uint64_t v35 = sub_2361FDB38();
    os_log_type_t v36 = sub_2361FEC88();
    int v37 = v36;
    BOOL v38 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v8;
    uint64_t v125 = v5;
    if (v38)
    {
      uint64_t v40 = swift_slowAlloc();
      LODWORD(v121) = v37;
      uint64_t v41 = v40;
      uint64_t v120 = swift_slowAlloc();
      uint64_t v159 = (void (*)(void, void))v120;
      *(_DWORD *)uint64_t v41 = 67109634;
      LODWORD(v157) = v144 & 1;
      sub_2361FEE68();
      *(_WORD *)(v41 + _Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      os_log_t v119 = v35;
      uint64_t v42 = sub_2361FF218();
      uint64_t v157 = sub_23612A974(v42, v43, (uint64_t *)&v159);
      uint64_t v118 = &v158;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      uint64_t v44 = v152;
      v152(v34, v8);
      *(_WORD *)(v41 + 1_Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      uint64_t WitnessTable = (char *)(v41 + 20);
      char v45 = v145;
      sub_236145B04((uint64_t)v145);
      uint64_t v46 = sub_2361FF218();
      unint64_t v48 = v47;
      v44(v45, v39);
      uint64_t v157 = sub_23612A974(v46, v48, (uint64_t *)&v159);
      sub_2361FEE68();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v49 = v119;
      _os_log_impl(&dword_2360BC000, v119, (os_log_type_t)v121, "CRDTModelFileSyncManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v41, 0x1Cu);
      uint64_t v50 = v120;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v50, -1, -1);
      MEMORY[0x237DFF240](v41, -1, -1);

      os_log_t v51 = v149;
      uint64_t v52 = v151;
    }
    else
    {

      v152(v34, v8);
      swift_release_n();
      os_log_t v51 = v149;
      uint64_t v52 = v151;
      char v45 = v145;
    }
    uint64_t v69 = (void *)v142;
    uint64_t v70 = (char *)v125 + *((void *)*v125 + 24);
    swift_beginAccess();
    uint64_t v71 = v146 + 16;
    os_log_t v72 = v127;
    uint64_t v121 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
    v121(v127, v70, v52);
    v128(v45, v124, v39);
    uint64_t v142 = v39;
    uint64_t v73 = CRDTModelFileSyncInfo.init(model:)((uint64_t)v45, v39, (uint64_t)v51);
    MEMORY[0x270FA5388](v73);
    *(&v118 - 2) = (char *)v51;
    os_log_type_t v74 = v69;
    sub_2361FE658();
    uint64_t v75 = v69;
    uint64_t v76 = v140;
    uint64_t v77 = v139;
    uint64_t v78 = v141;
    (*(void (**)(char *, void, uint64_t))(v140 + 104))(v139, *MEMORY[0x263F32EB8], v141);
    uint64_t v79 = (uint64_t)v72;
    uint64_t WitnessTable = (char *)swift_getWitnessTable();
    uint64_t v80 = sub_2361FE678();
    if (v75)
    {

      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
      unint64_t v82 = sub_2361FDB38();
      os_log_type_t v83 = sub_2361FEC68();
      int v84 = v83;
      if (os_log_type_enabled(v82, v83))
      {
        LODWORD(v153) = v84;
        unint64_t v85 = (uint8_t *)swift_slowAlloc();
        uint64_t v152 = (void (*)(uint8_t *, uint64_t))swift_slowAlloc();
        uint64_t v159 = (void (*)(void, void))v152;
        uint64_t v145 = v85;
        *(_DWORD *)unint64_t v85 = 136315138;
        uint64_t v144 = v85 + 4;
        swift_beginAccess();
        uint64_t v86 = v79;
        uint64_t v87 = v133;
        uint64_t v88 = v151;
        sub_2361FE688();
        uint64_t v89 = v143;
        uint64_t v90 = sub_2361FF218();
        unint64_t v92 = v91;
        uint64_t v93 = v137;
        uint64_t v94 = v87;
        uint64_t v79 = v86;
        (*(void (**)(char *, char *))(v137 + 8))(v94, v89);
        uint64_t v163 = sub_23612A974(v90, v92, (uint64_t *)&v159);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        uint64_t v95 = v145;
        _os_log_impl(&dword_2360BC000, v82, (os_log_type_t)v153, "CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s", v145, 0xCu);
        os_log_t v96 = v152;
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v96, -1, -1);
        MEMORY[0x237DFF240](v95, -1, -1);

        uint64_t v97 = v156;
      }
      else
      {

        uint64_t v88 = v151;
        uint64_t v97 = v156;
        uint64_t v89 = v143;
        uint64_t v93 = v137;
      }
      uint64_t v105 = v142;
      v148();
      uint64_t v159 = (void (*)(void, void))v105;
      uint64_t v160 = v154;
      uint64_t v161 = v155;
      uint64_t v162 = v97;
      type metadata accessor for CRDTModelFileSyncManager.SyncError();
      swift_getWitnessTable();
      swift_allocError();
      unsigned char *v106 = 1;
      swift_willThrow();

      (*(void (**)(os_log_t, char *))(v93 + 8))(v149, v89);
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v79, v88);
    }
    else
    {
      unint64_t v123 = v81;
      uint64_t v154 = v80;
      uint64_t v155 = v71;
      unint64_t v156 = v70;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
      uint64_t v99 = v142;
      uint64_t v100 = (uint64_t)v134;
      uint64_t v101 = v122;
      BOOL v102 = v125;
      if (v144)
      {
        uint64_t v103 = (void (*)(uint8_t *, char *, uint64_t))v128;
        v128((uint8_t *)v134, v124, v142);
        uint64_t v104 = 0;
      }
      else
      {
        uint64_t v104 = 1;
        uint64_t v103 = (void (*)(uint8_t *, char *, uint64_t))v128;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, v104, 2, v99);
      swift_retain();
      MutableObservableContainer.value.getter();
      swift_release();
      uint64_t v107 = v79;
      unint64_t v108 = v133;
      sub_2361FE688();
      unint64_t v109 = v145;
      v103(v145, v108, v99);
      uint64_t v144 = *(uint8_t **)(v137 + 8);
      ((void (*)(char *, char *))v144)(v108, v143);
      uint64_t v110 = (uint64_t)v135;
      ModelState.updating(model:source:)((uint64_t)v109, v100, v136);
      v152(v109, v99);
      sub_2361475FC(v110, 0x636E79735F71, 0xE600000000000000);
      sub_236147978(v107);
      uint64_t v111 = (uint64_t)v129;
      uint64_t v112 = v151;
      v121(v129, v156, v151);
      unint64_t v113 = (void *)swift_allocObject();
      id v115 = v147;
      uint64_t v114 = v148;
      v113[2] = v102;
      v113[3] = v114;
      v113[4] = v150;
      v113[5] = v115;
      swift_retain();
      swift_retain();
      id v116 = v115;
      sub_23617C548(v111, (uint64_t)sub_23614C2FC, (uint64_t)v113);
      swift_release();
      sub_23612D578(v154, v123);

      uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
      v117(v111, v112);
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v110, v136);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v131);
      ((void (*)(os_log_t, char *))v144)(v149, v143);
      v117((uint64_t)v127, v112);
    }
  }
  else
  {
    uint64_t v53 = (uint8_t *)v143;
    v33((uint8_t *)v143, a1, v8);
    swift_retain_n();
    uint64_t v54 = sub_2361FDB38();
    os_log_type_t v55 = sub_2361FEC88();
    int v56 = v55;
    uint64_t v57 = v8;
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      uint64_t v159 = (void (*)(void, void))v151;
      *(_DWORD *)uint64_t v58 = 67109634;
      LODWORD(v157) = v144 & 1;
      sub_2361FEE68();
      *(_WORD *)(v58 + _Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      os_log_t v149 = v54;
      id v59 = v156;
      uint64_t v60 = sub_2361FF218();
      uint64_t v157 = sub_23612A974(v60, v61, (uint64_t *)&v159);
      uint64_t v144 = (uint8_t *)&v158;
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      LODWORD(v146) = v56;
      uint64_t v62 = v152;
      v152(v53, v57);
      *(_WORD *)(v58 + 1_Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      uint64_t v143 = (char *)(v58 + 20);
      os_log_type_t v63 = v145;
      sub_236145B04((uint64_t)v145);
      uint64_t v64 = sub_2361FF218();
      unint64_t v66 = v65;
      v62(v63, v57);
      uint64_t v157 = sub_23612A974(v64, v66, (uint64_t *)&v159);
      sub_2361FEE68();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v67 = v149;
      _os_log_impl(&dword_2360BC000, v149, (os_log_type_t)v146, "CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v58, 0x1Cu);
      uint64_t v68 = v151;
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v68, -1, -1);
      MEMORY[0x237DFF240](v58, -1, -1);
    }
    else
    {

      v152(v53, v8);
      swift_release_n();
      id v59 = v156;
    }
    v148();
    uint64_t v159 = (void (*)(void, void))v57;
    uint64_t v160 = v154;
    uint64_t v161 = v155;
    uint64_t v162 = v59;
    type metadata accessor for CRDTModelFileSyncManager.SyncError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v98 = 0;
    swift_willThrow();
  }
}

uint64_t CRDTModelFileSyncManager.syncAfterLoaded(_:isRemote:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_2361FE058();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361FE048();
  uint64_t v15 = v4;
  uint64_t v16 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  sub_236126188(&qword_26AD76078);
  sub_2361FED28();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_236149380(uint64_t a1@<X1>, char a2@<W2>, void (*a3)(void)@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  BOOL v11 = sub_236145C58();
  int v12 = a2 & 1;
  if (!v11)
  {
    sub_236149428(a1, v12, (uint64_t)a3, a4);
    goto LABEL_5;
  }
  sub_236148048(a1, v12, a3, a4);
  if (!v5)
  {
LABEL_5:
    char v13 = 0;
    goto LABEL_6;
  }

  char v13 = 1;
LABEL_6:
  *a5 = v13;
}

uint64_t sub_236149428(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  HIDWORD(v27) = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](a1);
  int v12 = (char *)&v27 - v11;
  char v13 = sub_2361FDB38();
  os_log_type_t v14 = sub_2361FEC88();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_2360BC000, v13, v14, "CRDTModelFileSyncManager q_enqueuePendingSync", v15, 2u);
    MEMORY[0x237DFF240](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = ((v16 + v10) & 0xFFFFFFFFFFFFFFF8) + v17;
  *(void *)(v17 + 16) = v8;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v17 + 40) = *(void *)(v7 + 104);
  *(void *)(v17 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v12, v8);
  *(unsigned char *)(v17 + v16 + v10) = BYTE4(v27) & 1;
  uint64_t v19 = v29;
  *(void *)(v18 + _Block_object_dispose(&STACK[0x3B0], 8) = v28;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = v5 + 9;
  swift_beginAccess();
  uint64_t v21 = (void *)v5[9];
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5[9] = (uint64_t)v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_2361744D0(0, v21[2] + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_2361744D0((void *)(v23 > 1), v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  v21[2] = v24 + 1;
  uint64_t v25 = &v21[2 * v24];
  void v25[4] = sub_23614C574;
  v25[5] = v17;
  return swift_endAccess();
}

void sub_2361496F8(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9 = sub_2361FDB38();
  os_log_type_t v10 = sub_2361FEC88();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_2360BC000, v9, v10, "CRDTModelFileSyncManager q_enqueuePendingSync -- about to run", v11, 2u);
    MEMORY[0x237DFF240](v11, -1, -1);
  }

  sub_236148048(a2, a3 & 1, a4, a5);
}

uint64_t sub_23614981C()
{
  uint64_t v19 = sub_2361FE098();
  uint64_t v1 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2361FE058();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 72);
  *(void *)(v0 + 72) = MEMORY[0x263F8EE78];
  uint64_t v17 = v7;
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (long long *)(v17 + 32);
    os_log_type_t v10 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v12 = swift_allocObject();
      long long v13 = *v9++;
      *(_OWORD *)(v12 + 16) = v13;
      swift_retain();
      sub_2361FE048();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_23614C788;
      *(void *)(v14 + 24) = v12;
      void aBlock[4] = sub_236142898;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2361E02F8;
      aBlock[3] = &unk_26E973328;
      uint64_t v15 = _Block_copy(aBlock);
      swift_retain();
      sub_2361FE078();
      MEMORY[0x237DFDD80](0, v3, v6, v15);
      _Block_release(v15);
      swift_release();
      (*v10)(v3, v19);
      (*v11)(v6, v18);
      swift_release();
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_236149AD8()
{
  swift_getWitnessTable();
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))sub_2361FE648();
  swift_getWitnessTable();
  sub_2361FE1A8();
  return v0(&v2, 0);
}

uint64_t sub_236149BC4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  long long v3 = sub_2361FDB38();
  os_log_type_t v4 = sub_2361FEC88();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_2360BC000, v3, v4, "CRDTModelFileSyncManager q_sync: finished", v5, 2u);
    MEMORY[0x237DFF240](v5, -1, -1);
  }

  uint64_t v6 = sub_236149C94();
  return a2(v6);
}

uint64_t sub_236149C94()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for CRDTModelSyncVersion();
  MEMORY[0x270FA5388](v2);
  os_log_type_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2361FDB38();
  os_log_type_t v6 = sub_2361FEC88();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v15[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v14[0] = v4;
    uint64_t v9 = (*(uint64_t (**)(void))(*(void *)(v1 + 88) + 8))();
    v14[1] = sub_23612A974(v9, v10, v15);
    os_log_type_t v4 = (char *)v14[0];
    sub_2361FEE68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2360BC000, v5, v6, "CRDTModelFileSyncManager: Model did sync %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v8, -1, -1);
    MEMORY[0x237DFF240](v7, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = MEMORY[0x237DFF340](v0 + 2);
  if (result)
  {
    uint64_t v12 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    sub_2361FED38();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 8))(v4, ObjectType, v12);
    swift_unknownObjectRelease();
    return sub_23614C308((uint64_t)v4);
  }
  return result;
}

Swift::Void __swiftcall CRDTModelFileSyncManager.suspend()()
{
}

Swift::Void __swiftcall CRDTModelFileSyncManager.resume()()
{
}

id *CRDTModelFileSyncManager.deinit()
{
  sub_236142A20((uint64_t)(v0 + 2));
  swift_release();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v1 = (char *)v0 + *((void *)*v0 + 24);
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v2 = sub_2361FE6A8();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + *((void *)*v0 + 25);
  uint64_t v4 = sub_2361FDB58();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CRDTModelFileSyncManager.__deallocating_deinit()
{
  CRDTModelFileSyncManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23614A134(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 52));
}

uint64_t type metadata accessor for CRDTModelFileSyncInfo()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23614A158()
{
  return *(void *)v0;
}

uint64_t sub_23614A160@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t sub_23614A180@<X0>(uint64_t a1@<X8>)
{
  return sub_236145EF4(v1, a1);
}

uint64_t sub_23614A19C()
{
  return sub_2361460C4();
}

uint64_t sub_23614A1B8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t type metadata accessor for CRDTModelFileSyncManager.DefaultConfig()
{
  return swift_getGenericMetadata();
}

void *sub_23614A1F0(void *a1, char *a2, char *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v129 = a4;
  uint64_t v130 = a3;
  uint64_t v137 = a2;
  uint64_t v154 = a1;
  uint64_t v161 = *MEMORY[0x263EF8340];
  os_log_type_t v6 = (void *)*v4;
  uint64_t v141 = sub_2361FD638();
  uint64_t v151 = *(void *)(v141 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v141);
  uint64_t v140 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v136 = (char *)&v119 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v150 = (char *)&v119 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v155 = (char *)&v119 - v13;
  uint64_t v139 = sub_2361FE7B8();
  uint64_t v135 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v132 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for CRDTModelSyncVersion() - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v133);
  uint64_t v134 = (void (*)(void))((char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v131 = (char *)&v119 - v17;
  uint64_t v18 = (void *)v6[10];
  uint64_t v153 = v6[11];
  uint64_t v19 = v6[12];
  uint64_t v20 = v6[13];
  id v157 = v18;
  char v158 = (_UNKNOWN **)v153;
  uint64_t v159 = v19;
  uint64_t v160 = v20;
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  uint64_t v23 = type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  os_log_t v149 = (void *)v23;
  uint64_t v144 = sub_2361FE6A8();
  uint64_t v152 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v142 = (char *)&v119 - v24;
  uint64_t v25 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v128 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = v21;
  uint64_t v147 = v22;
  uint64_t v27 = type metadata accessor for ModelState.Source();
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  unint64_t v123 = (char *)&v119 - v29;
  uint64_t v122 = *((void *)v18 - 1);
  MEMORY[0x270FA5388](v28);
  uint64_t v121 = (char *)&v119 - v30;
  uint64_t v146 = type metadata accessor for ModelState();
  uint64_t v138 = *(void *)(v146 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v146);
  uint64_t v143 = (uint64_t)&v119 - v32;
  uint64_t v145 = *(void *)(v23 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v127 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  os_log_type_t v36 = (char *)&v119 - v35;
  uint64_t v37 = sub_2361FED18();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)&v119 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2361FECF8();
  MEMORY[0x270FA5388](v41 - 8);
  uint64_t v42 = sub_2361FE098();
  MEMORY[0x270FA5388](v42 - 8);
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_236134A78();
  sub_2361FE088();
  sub_2361FECE8();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v40, *MEMORY[0x263F8F138], v37);
  v5[6] = sub_2361FED58();
  *((unsigned char *)v5 + 80) = 0;
  uint64_t v126 = (char *)v5 + *(void *)(*v5 + 200);
  id v157 = 0;
  char v158 = (_UNKNOWN **)0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  id v157 = (id)0xD000000000000012;
  char v158 = (_UNKNOWN **)0x800000023620ACA0;
  unint64_t v43 = *(uint64_t (**)(void *, uint64_t))(v153 + 8);
  uint64_t v124 = v153 + 8;
  uint64_t v125 = v43;
  uint64_t v44 = (_UNKNOWN **)v153;
  ((void (*)(void *))v43)(v18);
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FDB48();
  uint64_t v45 = v148;
  sub_2361FE4A8();
  id v157 = v18;
  char v158 = v44;
  uint64_t v159 = v45;
  uint64_t v160 = v147;
  *(void *)&v36[*(int *)(type metadata accessor for CRDTModelFileSyncInfo() + 52)] = MEMORY[0x263F8EE80];
  uint64_t v46 = v154[3];
  uint64_t v47 = v154[4];
  sub_2361261CC(v154, v46);
  id v120 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
  v5[12] = v120;
  swift_beginAccess();
  v5[3] = v129;
  swift_unknownObjectWeakAssign();
  uint64_t v48 = (uint64_t)v137;
  v5[8] = v137;
  type metadata accessor for ObservableTransaction();
  os_log_t v49 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  v5[7] = sub_23614249C(0xD000000000000034, 0x800000023620ACC0, v48, v49);
  uint64_t v50 = v122;
  uint64_t v51 = (uint64_t)v121;
  (*(void (**)(char *, char *, void *))(v122 + 16))(v121, v36, v18);
  LOBYTE(v157) = 0;
  uint64_t v52 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, void *))(v50 + 56))(v123, 1, 2, v18);
  uint64_t v53 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v54 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v128, 1, 1, v53);
  uint64_t v55 = v143;
  ModelState.init(model:loaded:source:revisionInfo:)(v51, (char *)&v157, v52, v54, (uint64_t)v18, v143);
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  v5[4] = sub_236142808(v55);
  int v56 = *(void (**)(char *, char *, void *))(v145 + 16);
  uint64_t v137 = v36;
  v56(v127, v36, v149);
  swift_getWitnessTable();
  uint64_t v57 = v142;
  sub_2361FE698();
  uint64_t v58 = (char *)v5 + *(void *)(*v5 + 192);
  uint64_t v59 = v152;
  uint64_t v60 = v144;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v58, v57, v144);
  swift_beginAccess();
  id v61 = v120;
  uint64_t v62 = v141;
  id v63 = v61;
  sub_2361FE638();
  swift_endAccess();

  uint64_t v64 = (void *)v5[12];
  unint64_t v65 = *(char **)(v59 + 16);
  uint64_t v130 = v58;
  uint64_t v128 = (char *)(v59 + 16);
  uint64_t v127 = v65;
  ((void (*)(char *, char *, uint64_t))v65)(v57, v58, v60);
  id v66 = v64;
  os_log_t v67 = v132;
  sub_2361FE668();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  uint64_t v152 = v59 + 8;
  uint64_t v129 = v68;
  v68((uint64_t)v57, v60);
  uint64_t v69 = v131;
  *(void *)uint64_t v131 = v66;
  uint64_t v70 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(&v69[*(int *)(v133 + 28)], v67, v139);
  sub_236126188(&qword_26AD75C00);
  swift_allocObject();
  uint64_t v71 = v134;
  sub_23614C5E4(v70, (uint64_t)v134);
  os_log_t v72 = sub_236155464((uint64_t)v71);
  sub_23614C308(v70);
  v5[5] = v72;
  uint64_t v73 = v154[3];
  uint64_t v74 = v154[4];
  sub_2361261CC(v154, v73);
  (*(void (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
  uint64_t v139 = (uint64_t)v18;
  uint64_t v75 = (void *)v125(v18, v153);
  uint64_t v76 = v151;
  id v157 = v75;
  char v158 = v77;
  sub_2361FE9B8();
  sub_2361FD608();
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void (**)(void))(v76 + 16);
  uint64_t v79 = v136;
  uint64_t v135 = v76 + 16;
  uint64_t v134 = v78;
  v78();
  uint64_t v80 = sub_2361FDB38();
  os_log_type_t v81 = sub_2361FEC58();
  if (os_log_type_enabled(v80, v81))
  {
    unint64_t v82 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v83 = (void *)swift_slowAlloc();
    id v157 = v83;
    *(_DWORD *)unint64_t v82 = 136315138;
    sub_23614C6C8();
    uint64_t v84 = sub_2361FF218();
    uint64_t v156 = sub_23612A974(v84, v85, (uint64_t *)&v157);
    uint64_t v86 = v151;
    sub_2361FEE68();
    swift_bridgeObjectRelease();
    uint64_t v136 = *(char **)(v86 + 8);
    ((void (*)(char *, uint64_t))v136)(v79, v62);
    _os_log_impl(&dword_2360BC000, v80, v81, "CRDTModelFileSyncManager Init: modelFileURL: %s", v82, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v83, -1, -1);
    MEMORY[0x237DFF240](v82, -1, -1);
  }
  else
  {
    uint64_t v136 = *(char **)(v76 + 8);
    ((void (*)(char *, uint64_t))v136)(v79, v62);
  }

  id v87 = objc_msgSend(self, sel_defaultManager);
  uint64_t v88 = (void *)sub_2361FD5E8();
  id v157 = 0;
  unsigned int v89 = objc_msgSend(v87, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v88, 1, 0, &v157);

  if (v89)
  {
    id v90 = v157;
  }
  else
  {
    id v91 = v157;
    unint64_t v92 = (void *)sub_2361FD5A8();

    swift_willThrow();
    sub_2361FEC68();
    if (qword_26AD74EE0 != -1) {
      swift_once();
    }
    uint64_t v93 = (void *)qword_26AD74ED8;
    sub_236126188(&qword_26AD76040);
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = xmmword_23620DFC0;
    id v95 = v93;
    uint64_t v96 = sub_2361FD5B8();
    uint64_t v98 = v97;
    uint64_t v99 = MEMORY[0x263F8D310];
    *(void *)(v94 + 56) = MEMORY[0x263F8D310];
    unint64_t v100 = sub_23613B7F0();
    *(void *)(v94 + 64) = v100;
    *(void *)(v94 + 32) = v96;
    *(void *)(v94 + 40) = v98;
    swift_getErrorValue();
    uint64_t v101 = sub_2361FF298();
    *(void *)(v94 + 96) = v99;
    *(void *)(v94 + 104) = v100;
    *(void *)(v94 + 72) = v101;
    *(void *)(v94 + 80) = v102;
    sub_2361FDB28();

    swift_bridgeObjectRelease();
    uint64_t v62 = v141;
  }
  uint64_t v103 = v149;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v105 = swift_getWitnessTable();
  id v157 = v103;
  char v158 = &protocol witness table for CRDTModelFileSyncInfo<A>;
  uint64_t v159 = WitnessTable;
  uint64_t v160 = v105;
  type metadata accessor for CRDTModelFileSyncTransport();
  uint64_t v106 = (void *)v5[12];
  uint64_t v107 = (uint64_t)v142;
  uint64_t v108 = v144;
  ((void (*)(char *, char *, uint64_t))v127)(v142, v130, v144);
  uint64_t v109 = (uint64_t)v140;
  uint64_t v110 = v150;
  ((void (*)(char *, char *, uint64_t))v134)(v140, v150, v62);
  id v111 = v106;
  uint64_t v112 = sub_236180E88((uint64_t)v111, v107, v109);
  v129(v107, v108);

  v5[11] = v112;
  sub_2361428D8(v5[7], (uint64_t)&protocol witness table for ObservableTransaction);
  v5[9] = MEMORY[0x263F8EE78];
  uint64_t v113 = swift_allocObject();
  swift_weakInit();
  uint64_t v114 = (void *)swift_allocObject();
  uint64_t v115 = v153;
  v114[2] = v139;
  void v114[3] = v115;
  uint64_t v116 = v147;
  v114[4] = v148;
  v114[5] = v116;
  v114[6] = v113;
  sub_23617C524((uint64_t)sub_23614C6B8, (uint64_t)v114);
  swift_release();
  uint64_t v117 = (void (*)(char *, uint64_t))v136;
  ((void (*)(char *, uint64_t))v136)(v110, v62);
  v117(v155, v62);
  (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v143, v146);
  (*(void (**)(char *, void *))(v145 + 8))(v137, v103);
  sub_23612EF9C((uint64_t)v154);
  return v5;
}

void *sub_23614B49C(void *a1, char *a2, char *a3, void (*a4)(uint64_t, uint64_t))
{
  return sub_23614A1F0(a1, a2, a3, a4);
}

void sub_23614B500()
{
  sub_236148048(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (void (*)(void))nullsub_60, 0);
}

void sub_23614B544(char *a1@<X8>)
{
  sub_236149380(*(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_23614B568()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B584()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B5A0(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 32) + 8);
}

uint64_t sub_23614B5AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B5C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B5E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B600()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B61C()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B638()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614B654@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x237DFF340](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_23614B6B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23614B70C()
{
  return 32;
}

__n128 sub_23614B718(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23614B724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CRDTModelFileSyncManager.disableReadingInBackground.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23614B754(char *a1)
{
  return CRDTModelFileSyncManager.disableReadingInBackground.setter(*a1);
}

uint64_t sub_23614B77C()
{
  return 32;
}

__n128 sub_23614B788(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23614B794@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 80);
  return result;
}

uint64_t sub_23614B7DC(char *a1)
{
  return CRDTModelFileSyncManager.enableCloudSync.setter(*a1);
}

uint64_t sub_23614B804()
{
  return 32;
}

__n128 sub_23614B810(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of static CRDTModelNameSupport.modelName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerDelegate.modelDidSave(syncVersion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerConfig.crdtContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerConfig.storeDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23614B86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_23614B874()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23614B910(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23614BA0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23614BA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23614BAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23614BB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23614BC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23614BC88(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x23614BDD4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_23614BDE8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x23614BFC4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_23614BFEC()
{
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t result = sub_2361FE6A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2361FDB58();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelFileSyncManager()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for CRDTModelFileSyncManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CRDTModelFileSyncManager);
}

uint64_t dispatch thunk of CRDTModelFileSyncManager.__allocating_init(config:transactionProvider:delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_23614C184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *sub_23614C18C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23614C258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelFileSyncManager.SyncError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23614C298()
{
  return sub_236149AD8();
}

uint64_t sub_23614C2B4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23614C2FC()
{
  return sub_236149BC4(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23614C308(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23614C364(char *a1)
{
  return sub_236147CB4(a1, v1);
}

uint64_t sub_23614C36C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23614C3A4()
{
  return sub_236156D0C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_23614C3B0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23614C3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23614C3D0()
{
  return swift_release();
}

uint64_t sub_23614C3D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_23614C494()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_23614C574()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  sub_2361496F8(*(void *)(v0 + 48), v0 + v1, *(unsigned char *)(v0 + v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)), *(void (**)(void))(((v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8)+ v0+ 8), *(void *)(((v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

uint64_t sub_23614C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23614C648()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23614C680()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_23614C6B8(uint64_t a1)
{
  return sub_2361465A8(a1);
}

unint64_t sub_23614C6C8()
{
  unint64_t result = qword_268853670;
  if (!qword_268853670)
  {
    sub_2361FD638();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853670);
  }
  return result;
}

uint64_t sub_23614C720()
{
  return sub_236146714(*(void *)(v0 + 24));
}

uint64_t sub_23614C750()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23614C788()
{
  return sub_2361CFD5C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23614C790@<X0>(uint64_t a1@<X8>)
{
  return sub_236156C24(v1, a1);
}

uint64_t sub_23614C7B8()
{
  return sub_23614C298();
}

uint64_t sub_23614C7D0(void *a1)
{
  uint64_t v3 = sub_236126188(&qword_2688536C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361261CC(a1, a1[3]);
  sub_23614E130();
  sub_2361FF338();
  v8[15] = 0;
  sub_2361FF1B8();
  if (!v1)
  {
    type metadata accessor for BDSSyncEngineStateMetadata();
    v8[14] = 1;
    sub_2361FDFB8();
    sub_23614E2AC(&qword_2688536D0, MEMORY[0x263EFD390]);
    sub_2361FF1A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23614C988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_236126188((uint64_t *)&unk_268853E90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_236126188(&qword_2688536B0);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  unsigned int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BDSSyncEngineStateMetadata();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  int v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (uint64_t)v12 + *(int *)(v10 + 28);
  uint64_t v14 = sub_2361FDFB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_2361261CC(a1, a1[3]);
  sub_23614E130();
  uint64_t v15 = v22;
  sub_2361FF328();
  if (v15)
  {
    sub_23612EF9C((uint64_t)a1);
    return sub_23613491C(v13, (uint64_t *)&unk_268853E90);
  }
  else
  {
    char v24 = 0;
    uint64_t v16 = v21;
    uint64_t *v12 = sub_2361FF148();
    v12[1] = v17;
    char v23 = 1;
    sub_23614E2AC(&qword_2688536C0, MEMORY[0x263EFD390]);
    sub_2361FF138();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v16);
    sub_23614E184((uint64_t)v5, v13);
    sub_23614E1EC((uint64_t)v12, v19);
    sub_23612EF9C((uint64_t)a1);
    return sub_23614E250((uint64_t)v12);
  }
}

uint64_t sub_23614CC90()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_23614CCC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_23614E500(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23614CCE8(uint64_t a1)
{
  unint64_t v2 = sub_23614E130();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23614CD24(uint64_t a1)
{
  unint64_t v2 = sub_23614E130();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_23614CD60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23614C988(a1, a2);
}

uint64_t sub_23614CD78(void *a1)
{
  return sub_23614C7D0(a1);
}

uint64_t sub_23614CD90()
{
  uint64_t v0 = sub_2361FDB58();
  sub_23613DE0C(v0, qword_268853680);
  sub_23613DDD4(v0, (uint64_t)qword_268853680);
  return sub_2361FDB48();
}

uint64_t sub_23614CE10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_2361FD638();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unsigned int v8 = (char *)&v19 - v7;
  id v9 = objc_msgSend(self, sel_defaultManager);
  id v10 = objc_msgSend(self, sel_books);
  id v11 = objc_msgSend(v10, sel_containerURL);

  sub_2361FD618();
  sub_2361FD5F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  char v21 = 1;
  sub_2361FD628();
  int v12 = (void *)sub_2361FE8C8();
  swift_bridgeObjectRelease();
  LOBYTE(v6) = objc_msgSend(v9, sel_fileExistsAtPath_isDirectory_, v12, &v21);

  if ((v6 & 1) == 0)
  {
    uint64_t v13 = (void *)sub_2361FD5E8();
    id v20 = 0;
    unsigned int v14 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v13, 1, 0, &v20);

    if (!v14)
    {
      id v16 = v20;
      uint64_t v17 = (void *)sub_2361FD5A8();

      swift_willThrow();
      goto LABEL_6;
    }
    id v15 = v20;
  }

LABEL_6:
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v8, v2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
}

uint64_t sub_23614D0C8()
{
  v40[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = sub_236126188(&qword_26AD74150);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2361FD638();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  id v10 = (char *)v36 - v9;
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)v36 - v11;
  sub_23614CE10((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_23613491C((uint64_t)v2, &qword_26AD74150);
    if (qword_268852E08 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_2361FDB58();
    sub_23613DDD4(v13, (uint64_t)qword_268853680);
    unsigned int v14 = sub_2361FDB38();
    os_log_type_t v15 = sub_2361FEC68();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_2360BC000, v14, v15, "Could not get metadata. No BaseURL", v16, 2u);
      MEMORY[0x237DFF240](v16, -1, -1);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
    id v17 = objc_msgSend(self, sel_defaultManager);
    sub_2361FD608();
    sub_2361FD628();
    uint64_t v18 = (void *)sub_2361FE8C8();
    swift_bridgeObjectRelease();
    unsigned int v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

    if (v19)
    {
      if (qword_268852E08 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_2361FDB58();
      sub_23613DDD4(v20, (uint64_t)qword_268853680);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
      char v21 = sub_2361FDB38();
      os_log_type_t v22 = sub_2361FEC88();
      if (os_log_type_enabled(v21, v22))
      {
        char v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        v40[0] = v38;
        uint64_t v37 = v23;
        *(_DWORD *)char v23 = 136315138;
        v36[1] = v23 + 4;
        sub_23614E2AC((unint64_t *)&qword_268853670, MEMORY[0x263F06EA8]);
        uint64_t v24 = sub_2361FF218();
        uint64_t v39 = sub_23612A974(v24, v25, (uint64_t *)v40);
        sub_2361FEE68();
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
        v26(v7, v3);
        uint64_t v27 = v37;
        _os_log_impl(&dword_2360BC000, v21, v22, "Removing sync engine metadata at: %s", v37, 0xCu);
        uint64_t v28 = v38;
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v28, -1, -1);
        MEMORY[0x237DFF240](v27, -1, -1);
      }
      else
      {
        uint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
        v26(v7, v3);
      }

      uint64_t v30 = (void *)sub_2361FD5E8();
      v40[0] = 0;
      unsigned int v31 = objc_msgSend(v17, sel_removeItemAtURL_error_, v30, v40);

      if (!v31)
      {
        id v35 = v40[0];
        uint64_t v33 = sub_2361FD5A8();

        swift_willThrow();
        v26(v10, v3);
        v26(v12, v3);
        return v33;
      }
      id v32 = v40[0];

      v26(v10, v3);
      v26(v12, v3);
    }
    else
    {

      uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v10, v3);
      v29(v12, v3);
    }
  }
  return 0;
}

uint64_t type metadata accessor for BDSSyncEngineMetadataStore()
{
  return self;
}

uint64_t *sub_23614D6D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_2361FDFB8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_236126188((uint64_t *)&unk_268853E90);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_23614D844(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2361FDFB8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_23614D914(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2361FDFB8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_236126188((uint64_t *)&unk_268853E90);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_23614DA38(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2361FDFB8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_236126188((uint64_t *)&unk_268853E90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_23614DBD0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2361FDFB8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_236126188((uint64_t *)&unk_268853E90);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_23614DCE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2361FDFB8();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_236126188((uint64_t *)&unk_268853E90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23614DE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23614DE80);
}

uint64_t sub_23614DE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_236126188((uint64_t *)&unk_268853E90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_23614DF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23614DF48);
}

uint64_t sub_23614DF48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_236126188((uint64_t *)&unk_268853E90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for BDSSyncEngineStateMetadata()
{
  uint64_t result = qword_268853698;
  if (!qword_268853698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23614E040()
{
  sub_23614E0D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_23614E0D8()
{
  if (!qword_2688536A8)
  {
    sub_2361FDFB8();
    unint64_t v0 = sub_2361FEE38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2688536A8);
    }
  }
}

unint64_t sub_23614E130()
{
  unint64_t result = qword_2688536B8;
  if (!qword_2688536B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688536B8);
  }
  return result;
}

uint64_t sub_23614E184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188((uint64_t *)&unk_268853E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23614E1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23614E250(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23614E2AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BDSSyncEngineStateMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23614E3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BDSSyncEngineStateMetadata.CodingKeys()
{
  return &type metadata for BDSSyncEngineStateMetadata.CodingKeys;
}

unint64_t sub_23614E3FC()
{
  unint64_t result = qword_2688536D8;
  if (!qword_2688536D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688536D8);
  }
  return result;
}

unint64_t sub_23614E454()
{
  unint64_t result = qword_2688536E0;
  if (!qword_2688536E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688536E0);
  }
  return result;
}

unint64_t sub_23614E4AC()
{
  unint64_t result = qword_2688536E8;
  if (!qword_2688536E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688536E8);
  }
  return result;
}

uint64_t sub_23614E500(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t ModelState.init(model:loaded:source:revisionInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11 = *a2;
  int v12 = (int *)type metadata accessor for ModelState();
  uint64_t v13 = a6 + v12[13];
  uint64_t v14 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  *(unsigned char *)(a6 + v12[11]) = v11;
  uint64_t v15 = a6 + v12[12];
  uint64_t v16 = type metadata accessor for ModelState.Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  return sub_23614E76C(a4, v13);
}

uint64_t type metadata accessor for ModelState()
{
  return sub_236134B8C();
}

uint64_t type metadata accessor for ModelState.Source()
{
  return sub_236134B8C();
}

uint64_t sub_23614E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD754A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ModelState.updating(model:source:revisionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ModelState.updating(model:source:)(a1, a2, a4);
  uint64_t v7 = v4 + *(int *)(a4 + 52);
  return sub_236134728(a3, v7);
}

BOOL static ModelState.LoadedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ModelState.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_2361FEF98();
  uint64_t v7 = sub_2361FF218();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7;
  unint64_t v14 = v9;
  sub_2361FE9B8();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v10 = type metadata accessor for ModelState.Source();
  ModelState.Source.description.getter(v10);
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  sub_23614F320(v2 + *(int *)(a1 + 52), (uint64_t)v6);
  uint64_t v11 = type metadata accessor for CRDTModelRevisionInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v6, 1, v11) == 1)
  {
    sub_23613491C((uint64_t)v6, &qword_26AD754A0);
  }
  else
  {
    CRDTModelRevisionInfo.description.getter();
    sub_23613485C((uint64_t)v6);
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t ModelState.updating(model:source:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a3 + 16) - 8) + 24))(v3, a1, *(void *)(a3 + 16));
  uint64_t v6 = v3 + *(int *)(a3 + 48);
  uint64_t v7 = type metadata accessor for ModelState.Source();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24);
  return v8(v6, a2, v7);
}

uint64_t ModelState.LoadedState.description.getter()
{
  if (*v0) {
    return 0x7964616572;
  }
  else {
    return 0x676E6964616F6CLL;
  }
}

uint64_t type metadata accessor for ModelState.LoadedState()
{
  return sub_236134B8C();
}

uint64_t ModelState.LoadedState.hash(into:)()
{
  return sub_2361FF308();
}

uint64_t ModelState.LoadedState.hashValue.getter()
{
  return sub_2361FF318();
}

uint64_t sub_23614EC24()
{
  return sub_2361FF318();
}

uint64_t static ModelState.Source.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v46 = (char *)&v44 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_t v49 = (char *)&v44 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v44 - v13;
  uint64_t v45 = v14;
  uint64_t v15 = type metadata accessor for ModelState.Source();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v50 = (char *)&v44 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v53 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v21 = (char *)&v44 - v20;
  uint64_t v51 = v16;
  uint64_t v52 = v19;
  os_log_type_t v22 = (char *)&v44 + *(int *)(v19 + 48) - v20;
  char v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v44 - v20, a1, v15);
  v23(v22, a2, v15);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  unint64_t v25 = v21;
  uint64_t v26 = v21;
  uint64_t v27 = a3;
  int v28 = v24(v26, 2, a3);
  if (v28)
  {
    if (v28 == 1)
    {
      uint64_t v29 = v25;
      if (v24(v22, 2, a3) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v29 = v25;
    if (v24(v22, 2, a3) == 2)
    {
LABEL_8:
      char v31 = 1;
      uint64_t v32 = v51;
      goto LABEL_10;
    }
LABEL_9:
    char v31 = 0;
    uint64_t v15 = v52;
    uint64_t v32 = v53;
    goto LABEL_10;
  }
  uint64_t v44 = v6;
  uint64_t v30 = v50;
  uint64_t v29 = v25;
  v23(v50, (uint64_t)v25, v15);
  if (v24(v22, 2, v27))
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v27);
    goto LABEL_9;
  }
  uint64_t v34 = v44;
  id v35 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  os_log_type_t v36 = v30;
  uint64_t v37 = v48;
  v35(v48, v36, v27);
  uint64_t v38 = v49;
  v35(v49, v22, v27);
  uint64_t v53 = *(void *)(v45 + 8);
  char v39 = sub_2361FE5A8();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v41 = v46;
  v40(v46, v38, v27);
  uint64_t v42 = v47;
  v40(v47, v37, v27);
  if (v39) {
    char v31 = 0;
  }
  else {
    char v31 = sub_2361FE5A8() ^ 1;
  }
  unint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
  v43(v42, v27);
  v43(v41, v27);
  v43(v49, v27);
  v43(v48, v27);
  uint64_t v32 = v51;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v15);
  return v31 & 1;
}

uint64_t ModelState.Source.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1);
  if (v9)
  {
    if (v9 == 1) {
      return 0x6C61636F6CLL;
    }
    else {
      return 0x6465726F7473;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    v12[0] = 0x2865746F6D6572;
    v12[1] = 0xE700000000000000;
    sub_2361FF218();
    sub_2361FE9B8();
    swift_bridgeObjectRelease();
    sub_2361FE9B8();
    uint64_t v10 = v12[0];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v10;
}

uint64_t sub_23614F320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD754A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23614F388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ModelState.Source.== infix(_:_:)(a1, a2, *(void *)(a3 + 16));
}

uint64_t ModelState.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ModelState.model.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ModelState.model.modify())()
{
  return nullsub_60;
}

uint64_t ModelState.loaded.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 44));
  return result;
}

unsigned char *ModelState.loaded.setter(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 44)) = *result;
  return result;
}

uint64_t (*ModelState.loaded.modify())()
{
  return nullsub_60;
}

uint64_t ModelState.lastSource.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = type metadata accessor for ModelState.Source();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t ModelState.lastSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for ModelState.Source();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*ModelState.lastSource.modify())()
{
  return nullsub_60;
}

uint64_t ModelState.revisionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23614F320(v2 + *(int *)(a1 + 52), a2);
}

uint64_t ModelState.revisionInfo.setter(uint64_t a1, uint64_t a2)
{
  return sub_23614E76C(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*ModelState.revisionInfo.modify())()
{
  return nullsub_60;
}

BOOL static ModelState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v60 = (void **)((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v12 - 8);
  id v61 = (void **)((char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = sub_236126188(&qword_26AD754B0);
  MEMORY[0x270FA5388](v62);
  uint64_t v65 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a5;
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  uint64_t v15 = type metadata accessor for ModelState();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v74 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v71 = (char *)&v60 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v75 = (char *)&v60 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v68 = (char *)&v60 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v60 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  os_log_t v67 = (char *)&v60 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v60 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  id v35 = (char *)&v60 - v34;
  uint64_t v36 = *(int *)(v33 + 44);
  uint64_t v37 = a1;
  int v38 = *(unsigned __int8 *)(a1 + v36);
  LODWORD(a1) = *(unsigned __int8 *)(a2 + v36);
  char v39 = *(void (**)(char *))(v16 + 16);
  uint64_t v72 = v37;
  v39((char *)&v60 - v34);
  uint64_t v73 = a2;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v32, a2, v15);
  if (v38 == a1) {
    char v40 = static ModelState.Source.== infix(_:_:)((uint64_t)&v35[*(int *)(v15 + 48)], (uint64_t)&v32[*(int *)(v15 + 48)], v70);
  }
  else {
    char v40 = 0;
  }
  uint64_t v41 = v67;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  v42(v32, v15);
  v42(v35, v15);
  uint64_t v43 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v41, v72, v15);
  uint64_t v44 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v27, v73, v15);
  if ((v40 & 1) == 0)
  {
    v42(v27, v15);
    v42(v41, v15);
    uint64_t v45 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v68, v44, v15);
    uint64_t v46 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v75, v43, v15);
    goto LABEL_11;
  }
  os_log_t v67 = *(char **)(v69 + 8);
  LODWORD(v69) = sub_2361FE5A8();
  v42(v27, v15);
  v42(v41, v15);
  uint64_t v45 = v68;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v68, v44, v15);
  uint64_t v46 = v75;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v75, v43, v15);
  if (v69)
  {
LABEL_11:
    v42(v46, v15);
    v42(v45, v15);
    uint64_t v48 = v71;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v71, v43, v15);
    os_log_t v49 = v74;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v74, v44, v15);
    goto LABEL_12;
  }
  char v47 = sub_2361FE5A8();
  v42(v75, v15);
  v42(v45, v15);
  uint64_t v48 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v71, v43, v15);
  os_log_t v49 = v74;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v74, v44, v15);
  if (v47)
  {
LABEL_12:
    v42(v49, v15);
    v42(v48, v15);
    return 0;
  }
  uint64_t v50 = *(int *)(v15 + 52);
  uint64_t v51 = (uint64_t)&v49[v50];
  uint64_t v52 = v65;
  uint64_t v53 = v65 + *(int *)(v62 + 48);
  sub_23614F320((uint64_t)&v48[v50], v65);
  sub_23614F320(v51, v53);
  uint64_t v54 = v64;
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v55(v52, 1, v64) != 1)
  {
    uint64_t v58 = v61;
    sub_23614F320(v52, (uint64_t)v61);
    if (v55(v53, 1, v54) != 1)
    {
      uint64_t v59 = v60;
      sub_236134794(v53, (uint64_t)v60);
      BOOL v56 = _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(v58, v59);
      sub_23613485C((uint64_t)v59);
      v42(v74, v15);
      v42(v48, v15);
      sub_23613485C((uint64_t)v58);
      sub_23613491C(v52, &qword_26AD754A0);
      return v56;
    }
    v42(v74, v15);
    v42(v48, v15);
    sub_23613485C((uint64_t)v58);
    goto LABEL_17;
  }
  v42(v49, v15);
  v42(v48, v15);
  if (v55(v53, 1, v54) != 1)
  {
LABEL_17:
    sub_23613491C(v52, &qword_26AD754B0);
    return 0;
  }
  sub_23613491C(v52, &qword_26AD754A0);
  return 1;
}

BOOL sub_23614FD1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static ModelState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_23614FD2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_23614FD48()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for ModelState.Source();
    if (v2 <= 0x3F)
    {
      sub_2361530E0();
      uint64_t v0 = v3;
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

char *sub_23614FE74(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v62 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v62 - 8);
  size_t v5 = *(void *)(v4 + 64);
  int v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = *(unsigned int *)(v4 + 84);
  size_t v8 = v5;
  if (v7 <= 1)
  {
    if (v5 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    size_t v8 = v9 + v5;
  }
  uint64_t v13 = sub_2361FD748();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = v15 | 7;
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v17 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v14 + 64) + 1;
  }
  if ((v16 | v6) == 7
    && ((*(_DWORD *)(v14 + 80) | v6) & 0x100000) == 0
    && ((v8 + (v15 | 7) + ((v6 + v5 + 1) & ~(unint64_t)v6)) & ~(v15 | 7))
     + ((v15 + 32) & ~v15)
     + v17 <= 0x18)
  {
    uint64_t v58 = v13;
    uint64_t v59 = *(_DWORD *)(v14 + 80);
    int v60 = *(_DWORD *)(v14 + 84);
    size_t v55 = v17;
    uint64_t v61 = *(void *)(v13 - 8);
    unint64_t v22 = ~(unint64_t)v6;
    BOOL v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v4 + 16);
    size_t __n = ((v15 + 32) & ~v15) + v17;
    v56(a1, a2, v62);
    a1[v5] = a2[v5];
    uint64_t v23 = (char *)((unint64_t)&a1[v5 + 1 + v6] & v22);
    uint64_t v24 = (unsigned __int8 *)((unint64_t)&a2[v5 + 1 + v6] & v22);
    if (v7 > 1) {
      goto LABEL_42;
    }
    if (v5 <= 3)
    {
      unsigned int v26 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
      if (v26 > 0xFFFE)
      {
        int v25 = *(_DWORD *)&v24[v5];
        if (!v25) {
          goto LABEL_41;
        }
        goto LABEL_31;
      }
      if (v26 > 0xFE)
      {
        int v25 = *(unsigned __int16 *)&v24[v5];
        if (!*(_WORD *)&v24[v5]) {
          goto LABEL_41;
        }
        goto LABEL_31;
      }
      if (!v26)
      {
LABEL_41:
        if (v7)
        {
LABEL_42:
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v24, v7, v62))
          {
            if (v7 >= 2)
            {
              memcpy(v23, v24, v5);
LABEL_46:
              int v30 = v60;
              uint64_t v32 = v59;
              uint64_t v31 = ~v16;
              goto LABEL_74;
            }
LABEL_51:
            if (v5 <= 3)
            {
              unsigned int v34 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
              uint64_t v35 = v34 != 0;
              if (v34 >= 0xFF) {
                uint64_t v35 = 2;
              }
              if (v34 <= 0xFFFE) {
                uint64_t v33 = v35;
              }
              else {
                uint64_t v33 = 4;
              }
            }
            else
            {
              uint64_t v33 = 1;
            }
            memcpy(v23, v24, v33 + v5);
            int v30 = v60;
            uint64_t v32 = v59;
            uint64_t v31 = ~v16;
            if (v5 > 3) {
              goto LABEL_59;
            }
            goto LABEL_63;
          }
          v56(v23, v24, v62);
          if (v7 > 1) {
            goto LABEL_46;
          }
LABEL_61:
          int v30 = v60;
          uint64_t v32 = v59;
          uint64_t v31 = ~v16;
          if (v5 <= 3)
          {
            unsigned int v37 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
            if (v37 > 0xFFFE)
            {
              *(_DWORD *)&v23[v5] = 0;
              uint64_t v36 = 4;
              goto LABEL_73;
            }
            if (v37 > 0xFE)
            {
              *(_WORD *)&v23[v5] = 0;
              goto LABEL_71;
            }
            if (!v37)
            {
LABEL_71:
              BOOL v38 = v37 != 0;
              BOOL v12 = v37 >= 0xFF;
              uint64_t v36 = 2;
              if (!v12) {
                uint64_t v36 = v38;
              }
              goto LABEL_73;
            }
          }
          v23[v5] = 0;
          if (v5 > 3)
          {
LABEL_59:
            uint64_t v36 = 1;
LABEL_73:
            v5 += v36;
LABEL_74:
            uint64_t v39 = ~v32;
            char v40 = (void *)((unint64_t)&v23[v16 + v5] & v31);
            unint64_t v41 = (unint64_t)&v24[v16 + v5];
            uint64_t v42 = (void *)(v41 & v31);
            if (v30 < 0)
            {
              uint64_t v45 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v46 = v32 + 16;
              uint64_t v47 = ((unint64_t)v45 + v32 + 16) & v39;
              uint64_t v44 = v61;
              if ((*(unsigned int (**)(uint64_t))(v61 + 48))(v47) <= 1) {
                goto LABEL_80;
              }
            }
            else
            {
              unint64_t v43 = *(void *)((v41 & v31) + 8);
              if (v43 >= 0xFFFFFFFF) {
                LODWORD(v43) = -1;
              }
              uint64_t v44 = v61;
              if ((v43 + 1) <= 1)
              {
                uint64_t v45 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v46 = v32 + 16;
                uint64_t v47 = ((unint64_t)v45 + v32 + 16) & v39;
LABEL_80:
                *char v40 = *v42;
                v40[1] = v42[1];
                uint64_t v48 = (void *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v48 = *v45;
                v48[1] = v45[1];
                os_log_t v49 = (void *)(((unint64_t)v48 + v46) & v39);
                uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (!v50(v47, 1, v58))
                {
                  (*(void (**)(void *, uint64_t, uint64_t))(v44 + 16))(v49, v47, v58);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v49, 0, 1, v58);
                  return a1;
                }
                uint64_t v51 = v49;
                uint64_t v52 = (const void *)v47;
                size_t v53 = v55;
LABEL_83:
                memcpy(v51, v52, v53);
                return a1;
              }
            }
            uint64_t v51 = v40;
            uint64_t v52 = v42;
            size_t v53 = __n;
            goto LABEL_83;
          }
LABEL_63:
          unsigned int v37 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
          if (v37 > 0xFFFE)
          {
            uint64_t v36 = 4;
            goto LABEL_73;
          }
          goto LABEL_71;
        }
LABEL_60:
        v56(v23, v24, v62);
        goto LABEL_61;
      }
    }
    int v25 = v24[v5];
    if (!v24[v5]) {
      goto LABEL_41;
    }
LABEL_31:
    int v27 = (v25 - 1) << (8 * v5);
    if (v5 > 3) {
      int v27 = 0;
    }
    if (v5)
    {
      if (v5 <= 3) {
        int v28 = v5;
      }
      else {
        int v28 = 4;
      }
      switch(v28)
      {
        case 2:
          int v29 = *(unsigned __int16 *)v24;
          break;
        case 3:
          int v29 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          break;
        case 4:
          int v29 = *(_DWORD *)v24;
          break;
        default:
          int v29 = *v24;
          break;
      }
    }
    else
    {
      int v29 = 0;
    }
    if ((v29 | v27) + v7 != -1) {
      goto LABEL_51;
    }
    goto LABEL_60;
  }
  uint64_t v20 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v21 = v20 + (((v16 | v6) + 16) & ~(v16 | v6));
  swift_retain();
  return (char *)v21;
}

unint64_t sub_2361504AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  size_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = (unsigned __int16 *)((a1 + v6 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = *(unsigned int *)(v4 + 84);
  if (v8 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(v7, v8, v3)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v6 <= 3)
  {
    unsigned int v10 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v9 = *(_DWORD *)((char *)v7 + v6);
      if (!v9) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v10 > 0xFE)
    {
      int v9 = *(unsigned __int16 *)((char *)v7 + v6);
      if (!*(unsigned __int16 *)((char *)v7 + v6)) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v10)
    {
LABEL_20:
      if (v8) {
        goto LABEL_21;
      }
LABEL_22:
      v5((uint64_t)v7, v3);
      goto LABEL_23;
    }
  }
  int v9 = *((unsigned __int8 *)v7 + v6);
  if (!*((unsigned char *)v7 + v6)) {
    goto LABEL_20;
  }
LABEL_10:
  int v11 = (v9 - 1) << (8 * v6);
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 <= 3) {
      int v12 = *(void *)(v4 + 64);
    }
    else {
      int v12 = 4;
    }
    switch(v12)
    {
      case 2:
        int v13 = *v7;
        break;
      case 3:
        int v13 = *v7 | (*((unsigned __int8 *)v7 + 2) << 16);
        break;
      case 4:
        int v13 = *(_DWORD *)v7;
        break;
      default:
        int v13 = *(unsigned __int8 *)v7;
        break;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 + (v13 | v11) == -1) {
    goto LABEL_22;
  }
LABEL_23:
  if (v8 <= 1)
  {
    if (v6 <= 3)
    {
      unsigned int v15 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
      if (v15 > 0xFFFE)
      {
        uint64_t v14 = 4;
      }
      else
      {
        BOOL v16 = v15 != 0;
        BOOL v17 = v15 >= 0xFF;
        uint64_t v14 = 2;
        if (!v17) {
          uint64_t v14 = v16;
        }
      }
    }
    else
    {
      uint64_t v14 = 1;
    }
    v6 += v14;
  }
  uint64_t v18 = sub_2361FD748();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v7 + v6 + (v20 | 7);
  uint64_t v22 = v21 & ~(v20 | 7);
  uint64_t v23 = ~v20;
  uint64_t v27 = v19;
  if ((*(_DWORD *)(v19 + 84) & 0x80000000) != 0)
  {
    unint64_t v25 = (v20 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v23;
    unint64_t result = (*(uint64_t (**)(unint64_t))(v19 + 48))(v25);
    if (result > 1) {
      return result;
    }
    goto LABEL_38;
  }
  unint64_t result = *(void *)((v21 & ~(v20 | 7)) + 8);
  LODWORD(v21) = -1;
  if (result < 0xFFFFFFFF) {
    unint64_t v21 = *(void *)(v22 + 8);
  }
  if ((v21 + 1) <= 1)
  {
    unint64_t v25 = (v20 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v23;
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v18);
    if (!result)
    {
      unsigned int v26 = *(uint64_t (**)(unint64_t, uint64_t))(v27 + 8);
      return v26(v25, v18);
    }
  }
  return result;
}

uint64_t sub_236150844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8 + a2;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  int v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  int v12 = (unsigned __int8 *)((v10 + 1 + v9) & ~v10);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  uint64_t v48 = a1;
  if (v13 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_51;
      }
      goto LABEL_31;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1) {
      goto LABEL_51;
    }
    if (v8 > 3)
    {
LABEL_42:
      v11[v8] = 0;
      goto LABEL_43;
    }
LABEL_39:
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      uint64_t v23 = 4;
      goto LABEL_50;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_48;
    }
    if (!v22) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
  if (v8 <= 3)
  {
    unsigned int v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      int v14 = *(_DWORD *)&v12[v8];
      if (!v14) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      int v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8]) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_20:
      if (v13) {
        goto LABEL_21;
      }
LABEL_38:
      v7((uint64_t)v11, (uint64_t)v12, v5);
      if (v8 > 3) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  int v14 = v12[v8];
  if (!v12[v8]) {
    goto LABEL_20;
  }
LABEL_10:
  int v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3) {
    int v16 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v17 = v8;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *(unsigned __int16 *)v12;
        break;
      case 3:
        int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)v12;
        break;
      default:
        int v18 = *v12;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  if ((v18 | v16) + v13 == -1) {
    goto LABEL_38;
  }
LABEL_31:
  uint64_t v19 = 1;
  if (v8 <= 3)
  {
    unsigned int v20 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    uint64_t v21 = v20 != 0;
    if (v20 >= 0xFF) {
      uint64_t v21 = 2;
    }
    if (v20 <= 0xFFFE) {
      uint64_t v19 = v21;
    }
    else {
      uint64_t v19 = 4;
    }
  }
  memcpy(v11, v12, v19 + v8);
LABEL_43:
  uint64_t v23 = 1;
  if (v8 <= 3)
  {
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      uint64_t v23 = 4;
      goto LABEL_50;
    }
LABEL_48:
    BOOL v24 = v22 != 0;
    BOOL v25 = v22 >= 0xFF;
    uint64_t v23 = 2;
    if (!v25) {
      uint64_t v23 = v24;
    }
  }
LABEL_50:
  v8 += v23;
LABEL_51:
  uint64_t v26 = sub_2361FD748();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v29 = (v28 | 7) + v8;
  int v30 = (void *)((unint64_t)&v11[v29] & ~(v28 | 7));
  uint64_t v31 = (void *)((unint64_t)&v12[v29] & ~(v28 | 7));
  int v32 = *(_DWORD *)(v27 + 84);
  uint64_t v33 = ~v28;
  size_t v34 = *(void *)(v27 + 64);
  if (v32 < 0)
  {
    uint64_t v36 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = v28 + 16;
    BOOL v38 = (const void *)(((unint64_t)v36 + v28 + 16) & v33);
    size_t v47 = *(void *)(v27 + 64);
    unsigned int v39 = (*(uint64_t (**)(const void *, void, uint64_t))(v27 + 48))(v38, *(unsigned int *)(v27 + 84), v26);
    size_t v34 = v47;
    if (v39 <= 1)
    {
LABEL_57:
      uint64_t v40 = v48;
      *int v30 = *v31;
      v30[1] = v31[1];
      unint64_t v41 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v41 = *v36;
      v41[1] = v36[1];
      uint64_t v42 = (void *)(((unint64_t)v41 + v37) & v33);
      unint64_t v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43(v38, 1, v26))
      {
        if (v32) {
          size_t v44 = v47;
        }
        else {
          size_t v44 = v47 + 1;
        }
        memcpy(v42, v38, v44);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v42, v38, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v42, 0, 1, v26);
      }
      return v40;
    }
  }
  else
  {
    unint64_t v35 = v31[1];
    if (v35 >= 0xFFFFFFFF) {
      LODWORD(v35) = -1;
    }
    if ((v35 + 1) <= 1)
    {
      size_t v47 = *(void *)(v27 + 64);
      uint64_t v36 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v37 = v28 + 16;
      BOOL v38 = (const void *)(((unint64_t)v36 + v28 + 16) & v33);
      goto LABEL_57;
    }
  }
  if (v32) {
    size_t v45 = v34;
  }
  else {
    size_t v45 = v34 + 1;
  }
  memcpy(v30, v31, v45 + ((v28 + 32) & ~v28));
  return v48;
}

uint64_t sub_236150D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v82 = a1;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (unsigned __int16 *)((v9 + 1 + v8 + a1) & ~v9);
  int v11 = (unsigned __int16 *)((v9 + 1 + v8 + a2) & ~v9);
  uint64_t v12 = *(unsigned int *)(v6 + 84);
  if (v12 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        int v13 = *(_DWORD *)((char *)v10 + v8);
        if (!v13) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v14 > 0xFE)
      {
        int v13 = *(unsigned __int16 *)((char *)v10 + v8);
        if (!*(unsigned __int16 *)((char *)v10 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v14)
      {
LABEL_20:
        if (!v12) {
          goto LABEL_33;
        }
        goto LABEL_21;
      }
    }
    int v13 = *((unsigned __int8 *)v10 + v8);
    if (!*((unsigned char *)v10 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v15 = (v13 - 1) << (8 * v8);
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v16 = v8;
      }
      else {
        int v16 = 4;
      }
      switch(v16)
      {
        case 2:
          int v17 = *v10;
          break;
        case 3:
          int v17 = *v10 | (*((unsigned __int8 *)v10 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)v10;
          break;
        default:
          int v17 = *(unsigned __int8 *)v10;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) + v12 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_21:
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  if (v18(v10, *(unsigned int *)(v6 + 84), v5))
  {
    if (v12 > 1)
    {
LABEL_67:
      if (v18(v11, v12, v5))
      {
LABEL_68:
        size_t v29 = v8;
        if (v12 > 1) {
          goto LABEL_87;
        }
        uint64_t v30 = 1;
        if (v8 <= 3)
        {
          unsigned int v31 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
          if (v31 > 0xFFFE)
          {
            uint64_t v30 = 4;
          }
          else
          {
            BOOL v32 = v31 != 0;
            BOOL v33 = v31 >= 0xFF;
            uint64_t v30 = 2;
            if (!v33) {
              uint64_t v30 = v32;
            }
          }
        }
        goto LABEL_86;
      }
LABEL_93:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(v10, v11, v5);
      if (v12 > 1)
      {
        uint64_t v36 = v11;
        goto LABEL_114;
      }
      if (v8 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
        if (v37 > 0xFFFE)
        {
          uint64_t v36 = v11;
          *(_DWORD *)((char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
          goto LABEL_112;
        }
        if (v37 > 0xFE)
        {
          uint64_t v36 = v11;
          *(unsigned __int16 *)((char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
LABEL_109:
          BOOL v39 = v37 != 0;
          BOOL v33 = v37 >= 0xFF;
          uint64_t v38 = 2;
          if (!v33) {
            uint64_t v38 = v39;
          }
          goto LABEL_113;
        }
        if (!v37)
        {
          uint64_t v36 = v11;
          goto LABEL_109;
        }
      }
      uint64_t v36 = v11;
      *((unsigned char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
LABEL_107:
      uint64_t v38 = 1;
      if (v8 > 3)
      {
LABEL_113:
        v8 += v38;
        goto LABEL_114;
      }
      unsigned int v37 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v37 <= 0xFFFE) {
        goto LABEL_109;
      }
LABEL_112:
      uint64_t v38 = 4;
      goto LABEL_113;
    }
LABEL_30:
    if (v8 > 3) {
      goto LABEL_31;
    }
    unsigned int v21 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v21 > 0xFFFE)
    {
      int v19 = *(_DWORD *)((char *)v11 + v8);
      if (v19) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v21 <= 0xFE)
      {
        if (!v21) {
          goto LABEL_65;
        }
LABEL_31:
        int v19 = *((unsigned __int8 *)v11 + v8);
        if (!*((unsigned char *)v11 + v8)) {
          goto LABEL_65;
        }
LABEL_45:
        int v23 = (v19 - 1) << (8 * v8);
        if (v8 > 3) {
          int v23 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v24 = v8;
          }
          else {
            int v24 = 4;
          }
          switch(v24)
          {
            case 2:
              int v25 = *v11;
              break;
            case 3:
              int v25 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
              break;
            case 4:
              int v25 = *(_DWORD *)v11;
              break;
            default:
              int v25 = *(unsigned __int8 *)v11;
              break;
          }
        }
        else
        {
          int v25 = 0;
        }
        if (v12 + (v25 | v23) != -1) {
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      int v19 = *(unsigned __int16 *)((char *)v11 + v8);
      if (*(unsigned __int16 *)((char *)v11 + v8)) {
        goto LABEL_45;
      }
    }
LABEL_65:
    if (!v12) {
      goto LABEL_93;
    }
    int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (v12 > 1) {
    goto LABEL_78;
  }
LABEL_33:
  if (v8 > 3) {
    goto LABEL_34;
  }
  unsigned int v22 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
  if (v22 > 0xFFFE)
  {
    int v20 = *(_DWORD *)((char *)v11 + v8);
    if (v20) {
      goto LABEL_55;
    }
  }
  else
  {
    if (v22 <= 0xFE)
    {
      if (!v22) {
        goto LABEL_76;
      }
LABEL_34:
      int v20 = *((unsigned __int8 *)v11 + v8);
      if (!*((unsigned char *)v11 + v8)) {
        goto LABEL_76;
      }
LABEL_55:
      int v26 = (v20 - 1) << (8 * v8);
      if (v8 > 3) {
        int v26 = 0;
      }
      if (v8)
      {
        if (v8 <= 3) {
          int v27 = v8;
        }
        else {
          int v27 = 4;
        }
        switch(v27)
        {
          case 2:
            int v28 = *v11;
            break;
          case 3:
            int v28 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)v11;
            break;
          default:
            int v28 = *(unsigned __int8 *)v11;
            break;
        }
      }
      else
      {
        int v28 = 0;
      }
      if (v12 + (v28 | v26) != -1) {
        goto LABEL_79;
      }
LABEL_106:
      uint64_t v36 = v11;
      v7((uint64_t)v10, (uint64_t)v11, v5);
      if (v12 > 1) {
        goto LABEL_114;
      }
      goto LABEL_107;
    }
    int v20 = *(unsigned __int16 *)((char *)v11 + v8);
    if (*(unsigned __int16 *)((char *)v11 + v8)) {
      goto LABEL_55;
    }
  }
LABEL_76:
  if (!v12) {
    goto LABEL_106;
  }
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_78:
  if (!v18(v11, v12, v5)) {
    goto LABEL_106;
  }
LABEL_79:
  (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(v10, v5);
  size_t v29 = v8;
  if (v12 > 1) {
    goto LABEL_87;
  }
  uint64_t v30 = 1;
  if (v8 <= 3)
  {
    unsigned int v34 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    uint64_t v35 = v34 != 0;
    if (v34 >= 0xFF) {
      uint64_t v35 = 2;
    }
    if (v34 <= 0xFFFE) {
      uint64_t v30 = v35;
    }
    else {
      uint64_t v30 = 4;
    }
  }
LABEL_86:
  size_t v29 = v30 + v8;
LABEL_87:
  uint64_t v36 = v11;
  memcpy(v10, v11, v29);
  if (v12 <= 1) {
    goto LABEL_107;
  }
LABEL_114:
  uint64_t v40 = sub_2361FD748();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  size_t v43 = (v42 | 7) + v8;
  size_t v44 = (void *)(((unint64_t)v10 + v43) & ~(v42 | 7));
  size_t v45 = (void *)(((unint64_t)v36 + v43) & ~(v42 | 7));
  uint64_t v46 = *(unsigned int *)(v41 + 84);
  uint64_t v47 = ~v42;
  uint64_t v48 = (v42 + 32) & ~v42;
  size_t v49 = *(void *)(v41 + 64);
  if ((v46 & 0x80000000) == 0)
  {
    unint64_t v50 = v44[1];
    if (v50 >= 0xFFFFFFFF) {
      LODWORD(v50) = -1;
    }
    unsigned int v51 = v50 + 1;
    unint64_t v52 = v45[1];
    if (v52 >= 0xFFFFFFFF) {
      LODWORD(v52) = -1;
    }
    unsigned int v53 = v52 + 1;
    if (v51 < 2)
    {
      if (v53 <= 1)
      {
        uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v55 = v42 + 16;
        uint64_t v56 = ((unint64_t)v54 + v42 + 16) & v47;
        goto LABEL_124;
      }
      uint64_t v81 = (v42 + 32) & ~v42;
      uint64_t v55 = v42 + 16;
LABEL_137:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v73 = (v55 + (((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8)) & v47;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48))(v73, 1, v40)) {
        (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v73, v40);
      }
      if (v46) {
        size_t v74 = v49;
      }
      else {
        size_t v74 = v49 + 1;
      }
      size_t v72 = v74 + v81;
      goto LABEL_143;
    }
    if (v53 <= 1)
    {
      uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v55 = v42 + 16;
      uint64_t v56 = ((unint64_t)v54 + v42 + 16) & v47;
      goto LABEL_130;
    }
LABEL_132:
    if (v46) {
      size_t v71 = v49;
    }
    else {
      size_t v71 = v49 + 1;
    }
    size_t v72 = v71 + v48;
LABEL_143:
    uint64_t v75 = v44;
    uint64_t v76 = v45;
LABEL_150:
    memcpy(v75, v76, v72);
    return v82;
  }
  size_t v80 = *(void *)(v41 + 64);
  uint64_t v81 = (v42 + 32) & ~v42;
  uint64_t v55 = v42 + 16;
  unint64_t v57 = (v42 + 16 + (((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8)) & v47;
  uint64_t v58 = ~v42;
  uint64_t v59 = *(uint64_t (**)(void))(v41 + 48);
  unsigned int v60 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v59)(v57, v46, v40);
  int v61 = v46;
  unsigned int v62 = v60;
  uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = v58;
  unint64_t v79 = ((unint64_t)v54 + v55) & v58;
  int v63 = v61;
  unsigned int v64 = v59();
  if (v62 < 2)
  {
    LODWORD(v46) = v63;
    uint64_t v56 = v79;
    size_t v49 = v80;
    uint64_t v47 = v78;
    if (v64 <= 1)
    {
LABEL_124:
      *size_t v44 = *v45;
      v44[1] = v45[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v65 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v65 = *v54;
      v65[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v66 = (void *)(((unint64_t)v65 + v55) & v47);
      os_log_t v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
      LODWORD(v65) = v67(v66, 1, v40);
      int v68 = v67((void *)v56, 1, v40);
      if (v65)
      {
        if (!v68) {
          goto LABEL_131;
        }
      }
      else
      {
        if (!v68)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v41 + 24))(v66, v56, v40);
          return v82;
        }
        (*(void (**)(void *, uint64_t))(v41 + 8))(v66, v40);
      }
      goto LABEL_146;
    }
    goto LABEL_137;
  }
  LODWORD(v46) = v63;
  uint64_t v56 = v79;
  size_t v49 = v80;
  uint64_t v47 = v78;
  uint64_t v48 = v81;
  if (v64 > 1) {
    goto LABEL_132;
  }
LABEL_130:
  *size_t v44 = *v45;
  v44[1] = v45[1];
  uint64_t v69 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v69 = *v54;
  v69[1] = v54[1];
  uint64_t v66 = (void *)(((unint64_t)v69 + v55) & v47);
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v70(v56, 1, v40))
  {
LABEL_146:
    if (v46) {
      size_t v72 = v49;
    }
    else {
      size_t v72 = v49 + 1;
    }
    uint64_t v75 = v66;
    uint64_t v76 = (const void *)v56;
    goto LABEL_150;
  }
LABEL_131:
  (*(void (**)(void *, uint64_t, uint64_t))(v41 + 16))(v66, v56, v40);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v66, 0, 1, v40);
  return v82;
}

uint64_t sub_236151748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8 + a2;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  int v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  uint64_t v12 = (unsigned __int8 *)((v10 + 1 + v9) & ~v10);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  if (v13 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_51;
      }
      goto LABEL_31;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1) {
      goto LABEL_51;
    }
    if (v8 > 3)
    {
LABEL_42:
      v11[v8] = 0;
      goto LABEL_43;
    }
LABEL_39:
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      uint64_t v23 = 4;
      goto LABEL_50;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_48;
    }
    if (!v22) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
  if (v8 <= 3)
  {
    unsigned int v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      int v14 = *(_DWORD *)&v12[v8];
      if (!v14) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      int v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8]) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_20:
      if (v13) {
        goto LABEL_21;
      }
LABEL_38:
      v7((uint64_t)v11, (uint64_t)v12, v5);
      if (v8 > 3) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  int v14 = v12[v8];
  if (!v12[v8]) {
    goto LABEL_20;
  }
LABEL_10:
  int v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3) {
    int v16 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v17 = v8;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *(unsigned __int16 *)v12;
        break;
      case 3:
        int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)v12;
        break;
      default:
        int v18 = *v12;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  if ((v18 | v16) + v13 == -1) {
    goto LABEL_38;
  }
LABEL_31:
  uint64_t v19 = 1;
  if (v8 <= 3)
  {
    unsigned int v20 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    uint64_t v21 = v20 != 0;
    if (v20 >= 0xFF) {
      uint64_t v21 = 2;
    }
    if (v20 <= 0xFFFE) {
      uint64_t v19 = v21;
    }
    else {
      uint64_t v19 = 4;
    }
  }
  memcpy(v11, v12, v19 + v8);
LABEL_43:
  uint64_t v23 = 1;
  if (v8 <= 3)
  {
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      uint64_t v23 = 4;
      goto LABEL_50;
    }
LABEL_48:
    BOOL v24 = v22 != 0;
    BOOL v25 = v22 >= 0xFF;
    uint64_t v23 = 2;
    if (!v25) {
      uint64_t v23 = v24;
    }
  }
LABEL_50:
  v8 += v23;
LABEL_51:
  uint64_t v26 = sub_2361FD748();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v29 = (v28 | 7) + v8;
  uint64_t v30 = (_OWORD *)((unint64_t)&v11[v29] & ~(v28 | 7));
  uint64_t v31 = (unint64_t)&v12[v29] & ~(v28 | 7);
  int v32 = *(_DWORD *)(v27 + 84);
  uint64_t v33 = ~v28;
  size_t v34 = *(void *)(v27 + 64);
  if (v32 < 0)
  {
    unsigned int v37 = (_OWORD *)((v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = v28 + 16;
    uint64_t v49 = ((unint64_t)v37 + v28 + 16) & v33;
    size_t v50 = *(void *)(*(void *)(v26 - 8) + 64);
    uint64_t v48 = *(uint64_t (**)(void))(v27 + 48);
    unsigned int v40 = v48();
    size_t v34 = v50;
    if (v40 <= 1)
    {
      uint64_t v33 = ~v28;
      uint64_t v36 = v48;
      uint64_t v39 = v49;
      goto LABEL_58;
    }
LABEL_63:
    if (v32) {
      size_t v46 = v34;
    }
    else {
      size_t v46 = v34 + 1;
    }
    size_t v43 = v46 + ((v28 + 32) & ~v28);
    size_t v44 = v30;
    size_t v45 = (const void *)v31;
    goto LABEL_67;
  }
  unint64_t v35 = *(void *)(v31 + 8);
  if (v35 >= 0xFFFFFFFF) {
    LODWORD(v35) = -1;
  }
  if ((v35 + 1) > 1) {
    goto LABEL_63;
  }
  size_t v50 = *(void *)(*(void *)(v26 - 8) + 64);
  uint64_t v36 = *(uint64_t (**)(void))(v27 + 48);
  unsigned int v37 = (_OWORD *)((v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = v28 + 16;
  uint64_t v39 = ((unint64_t)v37 + v28 + 16) & v33;
LABEL_58:
  *uint64_t v30 = *(_OWORD *)v31;
  uint64_t v41 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v41 = *v37;
  uint64_t v42 = (void *)(((unint64_t)v41 + v38) & v33);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v36)(v39, 1, v26))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v27 + 32))(v42, v39, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v42, 0, 1, v26);
    return a1;
  }
  if (v32) {
    size_t v43 = v50;
  }
  else {
    size_t v43 = v50 + 1;
  }
  size_t v44 = v42;
  size_t v45 = (const void *)v39;
LABEL_67:
  memcpy(v44, v45, v43);
  return a1;
}

uint64_t sub_236151C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v79 = a1;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (unsigned __int16 *)((v9 + 1 + v8 + a1) & ~v9);
  int v11 = (unsigned __int16 *)((v9 + 1 + v8 + a2) & ~v9);
  uint64_t v12 = *(unsigned int *)(v6 + 84);
  if (v12 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        int v13 = *(_DWORD *)((char *)v10 + v8);
        if (!v13) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v14 > 0xFE)
      {
        int v13 = *(unsigned __int16 *)((char *)v10 + v8);
        if (!*(unsigned __int16 *)((char *)v10 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v14)
      {
LABEL_20:
        if (!v12) {
          goto LABEL_33;
        }
        goto LABEL_21;
      }
    }
    int v13 = *((unsigned __int8 *)v10 + v8);
    if (!*((unsigned char *)v10 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v15 = (v13 - 1) << (8 * v8);
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v16 = v8;
      }
      else {
        int v16 = 4;
      }
      switch(v16)
      {
        case 2:
          int v17 = *v10;
          break;
        case 3:
          int v17 = *v10 | (*((unsigned __int8 *)v10 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)v10;
          break;
        default:
          int v17 = *(unsigned __int8 *)v10;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) + v12 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_21:
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  if (v18(v10, *(unsigned int *)(v6 + 84), v5))
  {
    if (v12 > 1)
    {
LABEL_67:
      if (v18(v11, v12, v5))
      {
LABEL_68:
        size_t v29 = v8;
        if (v12 > 1) {
          goto LABEL_87;
        }
        uint64_t v30 = 1;
        if (v8 <= 3)
        {
          unsigned int v31 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
          if (v31 > 0xFFFE)
          {
            uint64_t v30 = 4;
          }
          else
          {
            BOOL v32 = v31 != 0;
            BOOL v33 = v31 >= 0xFF;
            uint64_t v30 = 2;
            if (!v33) {
              uint64_t v30 = v32;
            }
          }
        }
        goto LABEL_86;
      }
LABEL_93:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(v10, v11, v5);
      if (v12 > 1) {
        goto LABEL_113;
      }
      if (v8 > 3) {
        goto LABEL_95;
      }
      unsigned int v36 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v36 > 0xFFFE)
      {
        *(_DWORD *)((char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        goto LABEL_111;
      }
      if (v36 > 0xFE)
      {
        *(unsigned __int16 *)((char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
      }
      else if (v36)
      {
LABEL_95:
        *((unsigned char *)v10 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        goto LABEL_106;
      }
LABEL_108:
      BOOL v38 = v36 != 0;
      BOOL v33 = v36 >= 0xFF;
      uint64_t v37 = 2;
      if (!v33) {
        uint64_t v37 = v38;
      }
      goto LABEL_112;
    }
LABEL_30:
    if (v8 > 3) {
      goto LABEL_31;
    }
    unsigned int v21 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v21 > 0xFFFE)
    {
      int v19 = *(_DWORD *)((char *)v11 + v8);
      if (v19) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v21 <= 0xFE)
      {
        if (!v21) {
          goto LABEL_65;
        }
LABEL_31:
        int v19 = *((unsigned __int8 *)v11 + v8);
        if (!*((unsigned char *)v11 + v8)) {
          goto LABEL_65;
        }
LABEL_45:
        int v23 = (v19 - 1) << (8 * v8);
        if (v8 > 3) {
          int v23 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v24 = v8;
          }
          else {
            int v24 = 4;
          }
          switch(v24)
          {
            case 2:
              int v25 = *v11;
              break;
            case 3:
              int v25 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
              break;
            case 4:
              int v25 = *(_DWORD *)v11;
              break;
            default:
              int v25 = *(unsigned __int8 *)v11;
              break;
          }
        }
        else
        {
          int v25 = 0;
        }
        if (v12 + (v25 | v23) != -1) {
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      int v19 = *(unsigned __int16 *)((char *)v11 + v8);
      if (*(unsigned __int16 *)((char *)v11 + v8)) {
        goto LABEL_45;
      }
    }
LABEL_65:
    if (!v12) {
      goto LABEL_93;
    }
    int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (v12 > 1) {
    goto LABEL_78;
  }
LABEL_33:
  if (v8 > 3) {
    goto LABEL_34;
  }
  unsigned int v22 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
  if (v22 > 0xFFFE)
  {
    int v20 = *(_DWORD *)((char *)v11 + v8);
    if (v20) {
      goto LABEL_55;
    }
  }
  else
  {
    if (v22 <= 0xFE)
    {
      if (!v22) {
        goto LABEL_76;
      }
LABEL_34:
      int v20 = *((unsigned __int8 *)v11 + v8);
      if (!*((unsigned char *)v11 + v8)) {
        goto LABEL_76;
      }
LABEL_55:
      int v26 = (v20 - 1) << (8 * v8);
      if (v8 > 3) {
        int v26 = 0;
      }
      if (v8)
      {
        if (v8 <= 3) {
          int v27 = v8;
        }
        else {
          int v27 = 4;
        }
        switch(v27)
        {
          case 2:
            int v28 = *v11;
            break;
          case 3:
            int v28 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)v11;
            break;
          default:
            int v28 = *(unsigned __int8 *)v11;
            break;
        }
      }
      else
      {
        int v28 = 0;
      }
      if (v12 + (v28 | v26) != -1) {
        goto LABEL_79;
      }
LABEL_105:
      v7((uint64_t)v10, (uint64_t)v11, v5);
      if (v12 > 1) {
        goto LABEL_113;
      }
      goto LABEL_106;
    }
    int v20 = *(unsigned __int16 *)((char *)v11 + v8);
    if (*(unsigned __int16 *)((char *)v11 + v8)) {
      goto LABEL_55;
    }
  }
LABEL_76:
  if (!v12) {
    goto LABEL_105;
  }
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_78:
  if (!v18(v11, v12, v5)) {
    goto LABEL_105;
  }
LABEL_79:
  (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(v10, v5);
  size_t v29 = v8;
  if (v12 > 1) {
    goto LABEL_87;
  }
  uint64_t v30 = 1;
  if (v8 <= 3)
  {
    unsigned int v34 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    uint64_t v35 = v34 != 0;
    if (v34 >= 0xFF) {
      uint64_t v35 = 2;
    }
    if (v34 <= 0xFFFE) {
      uint64_t v30 = v35;
    }
    else {
      uint64_t v30 = 4;
    }
  }
LABEL_86:
  size_t v29 = v30 + v8;
LABEL_87:
  memcpy(v10, v11, v29);
  if (v12 <= 1)
  {
LABEL_106:
    uint64_t v37 = 1;
    if (v8 > 3)
    {
LABEL_112:
      v8 += v37;
      goto LABEL_113;
    }
    unsigned int v36 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v36 <= 0xFFFE) {
      goto LABEL_108;
    }
LABEL_111:
    uint64_t v37 = 4;
    goto LABEL_112;
  }
LABEL_113:
  uint64_t v39 = sub_2361FD748();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  size_t v42 = (v41 | 7) + v8;
  size_t v43 = (void *)(((unint64_t)v10 + v42) & ~(v41 | 7));
  size_t v44 = (void *)(((unint64_t)v11 + v42) & ~(v41 | 7));
  uint64_t v45 = *(unsigned int *)(v40 + 84);
  uint64_t v46 = ~v41;
  uint64_t v47 = (v41 + 32) & ~v41;
  size_t v78 = *(void *)(v40 + 64);
  if ((v45 & 0x80000000) != 0)
  {
    uint64_t v76 = (v41 + 32) & ~v41;
    uint64_t v53 = v41 + 16;
    uint64_t v55 = *(uint64_t (**)(void))(v40 + 48);
    uint64_t v56 = ~v41;
    unsigned int v57 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v55)((v41 + 16 + (((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & v46, v45, v39);
    int v58 = v45;
    unsigned int v59 = v57;
    unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v77 = v56;
    unint64_t v75 = ((unint64_t)v52 + v53) & v56;
    int v60 = v58;
    unsigned int v61 = v55();
    if (v59 < 2)
    {
      LODWORD(v45) = v60;
      uint64_t v54 = v75;
      uint64_t v47 = v76;
      if (v61 <= 1) {
        goto LABEL_123;
      }
LABEL_136:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v72 = (v53 + (((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & v77;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))(v72, 1, v39)) {
        (*(void (**)(unint64_t, uint64_t))(v40 + 8))(v72, v39);
      }
      goto LABEL_138;
    }
    LODWORD(v45) = v60;
    uint64_t v47 = v76;
    uint64_t v46 = v77;
    if (v61 <= 1)
    {
      uint64_t v67 = v75;
      goto LABEL_130;
    }
LABEL_138:
    size_t v73 = v78;
    if (!v45) {
      size_t v73 = v78 + 1;
    }
    size_t v69 = v73 + v47;
    uint64_t v70 = v43;
    size_t v71 = v44;
    goto LABEL_147;
  }
  unint64_t v48 = *(void *)((((unint64_t)v10 + v42) & ~(v41 | 7)) + 8);
  if (v48 >= 0xFFFFFFFF) {
    LODWORD(v4_Block_object_dispose(&STACK[0x3B0], 8) = -1;
  }
  unsigned int v49 = v48 + 1;
  unint64_t v50 = v44[1];
  if (v50 >= 0xFFFFFFFF) {
    LODWORD(v50) = -1;
  }
  unsigned int v51 = v50 + 1;
  if (v49 < 2)
  {
    uint64_t v77 = ~v41;
    if (v51 <= 1)
    {
      unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v53 = v41 + 16;
      uint64_t v54 = ((unint64_t)v52 + v41 + 16) & v46;
LABEL_123:
      *size_t v43 = *v44;
      v43[1] = v44[1];
      swift_bridgeObjectRelease();
      unsigned int v62 = (void *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v62 = *v52;
      v62[1] = v52[1];
      swift_bridgeObjectRelease();
      int v63 = (void *)(((unint64_t)v62 + v53) & v77);
      unsigned int v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
      int v65 = v64(v63, 1, v39);
      int v66 = v64((void *)v54, 1, v39);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v40 + 32))(v63, v54, v39);
LABEL_150:
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v63, 0, 1, v39);
          return v79;
        }
      }
      else
      {
        if (!v66)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v40 + 40))(v63, v54, v39);
          return v79;
        }
        (*(void (**)(void *, uint64_t))(v40 + 8))(v63, v39);
      }
      if (v45) {
        size_t v69 = v78;
      }
      else {
        size_t v69 = v78 + 1;
      }
      uint64_t v70 = v63;
      size_t v71 = (const void *)v54;
      goto LABEL_147;
    }
    uint64_t v53 = v41 + 16;
    goto LABEL_136;
  }
  if (v51 > 1) {
    goto LABEL_138;
  }
  uint64_t v55 = *(uint64_t (**)(void))(v40 + 48);
  unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v53 = v41 + 16;
  uint64_t v67 = ((unint64_t)v52 + v41 + 16) & v46;
LABEL_130:
  *(_OWORD *)size_t v43 = *(_OWORD *)v44;
  int v68 = (_OWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v68 = *(_OWORD *)v52;
  int v63 = (void *)(((unint64_t)v68 + v53) & v46);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v55)(v67, 1, v39))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v40 + 32))(v63, v67, v39);
    goto LABEL_150;
  }
  if (v45) {
    size_t v69 = v78;
  }
  else {
    size_t v69 = v78 + 1;
  }
  uint64_t v70 = v63;
  size_t v71 = (const void *)v67;
LABEL_147:
  memcpy(v70, v71, v69);
  return v79;
}

uint64_t sub_23615260C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 1) {
    unsigned int v8 = 0;
  }
  else {
    unsigned int v8 = v7 - 2;
  }
  if (v7 <= v8) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v10 = *(void *)(sub_2361FD748() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= 0x7FFFFFFE) {
    int v13 = 2147483646;
  }
  else {
    int v13 = v12;
  }
  unsigned int v14 = v13 - 1;
  if (v9 <= v14) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = v9;
  }
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = v16;
  if (v7 <= 1)
  {
    if (v16 <= 3)
    {
      unsigned int v19 = (~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16);
      if (v19 > 0xFFFE)
      {
        uint64_t v18 = 4;
      }
      else
      {
        BOOL v20 = v19 != 0;
        BOOL v21 = v19 >= 0xFF;
        uint64_t v18 = 2;
        if (!v21) {
          uint64_t v18 = v20;
        }
      }
    }
    else
    {
      uint64_t v18 = 1;
    }
    uint64_t v17 = v18 + v16;
  }
  if (v11) {
    uint64_t v22 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v10 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = v24 | 7;
  if (a2 > v15)
  {
    uint64_t v26 = v22 + ((v24 + 32) & ~v24) + ((v17 + v25 + ((v16 + v23 + 1) & ~v23)) & ~v25);
    char v27 = 8 * v26;
    if (v26 > 3) {
      goto LABEL_30;
    }
    unsigned int v29 = ((a2 - v15 + ~(-1 << v27)) >> v27) + 1;
    if (HIWORD(v29))
    {
      int v28 = *(_DWORD *)((char *)a1 + v26);
      if (v28) {
        goto LABEL_37;
      }
    }
    else
    {
      if (v29 <= 0xFF)
      {
        if (v29 < 2) {
          goto LABEL_47;
        }
LABEL_30:
        int v28 = *((unsigned __int8 *)a1 + v26);
        if (!*((unsigned char *)a1 + v26)) {
          goto LABEL_47;
        }
LABEL_37:
        int v30 = (v28 - 1) << v27;
        if (v26 > 3) {
          int v30 = 0;
        }
        if (v26)
        {
          if (v26 <= 3) {
            int v31 = v26;
          }
          else {
            int v31 = 4;
          }
          switch(v31)
          {
            case 2:
              int v32 = *a1;
              break;
            case 3:
              int v32 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v32 = *(_DWORD *)a1;
              break;
            default:
              int v32 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v32 = 0;
        }
        return v15 + (v32 | v30) + 1;
      }
      int v28 = *(unsigned __int16 *)((char *)a1 + v26);
      if (*(unsigned __int16 *)((char *)a1 + v26)) {
        goto LABEL_37;
      }
    }
  }
LABEL_47:
  if (v7 == v15)
  {
    BOOL v33 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    return v33(a1, v7, v5);
  }
  uint64_t v35 = ((unint64_t)a1 + v16 + v23 + 1) & ~v23;
  if (v8 == v15)
  {
    if (v7)
    {
      unsigned int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v35, v7, v5);
      BOOL v21 = v36 >= 2;
      uint64_t result = v36 - 2;
      if (result != 0 && v21) {
        return result;
      }
    }
    return 0;
  }
  if (v7 <= 1)
  {
    if (v16 <= 3)
    {
      unsigned int v38 = ((~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16)) + 1;
      if (HIWORD(v38))
      {
        uint64_t v37 = 4;
      }
      else
      {
        BOOL v39 = v38 > 1;
        BOOL v21 = v38 >= 0x100;
        uint64_t v37 = 2;
        if (!v21) {
          uint64_t v37 = v39;
        }
      }
    }
    else
    {
      uint64_t v37 = 1;
    }
    v16 += v37;
  }
  uint64_t v40 = (v25 + v35 + v16) & ~v25;
  if (v12 > 0x7FFFFFFE)
  {
    unsigned int v42 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v24 + ((v40 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
    LODWORD(v41) = v42 - 1;
  }
  else
  {
    unint64_t v41 = *(void *)(v40 + 8);
    if (v41 >= 0xFFFFFFFF) {
      LODWORD(v41) = -1;
    }
    unsigned int v42 = v41 + 1;
  }
  if (v42 < 2) {
    LODWORD(v41) = 0;
  }
  if (v41 >= 2) {
    return (v41 - 1);
  }
  else {
    return 0;
  }
}

void sub_236152A14(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 1) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = v9 - 2;
  }
  if (v9 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = *(void *)(sub_2361FD748() - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  if (v13) {
    unsigned int v14 = v13 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  size_t v15 = *(void *)(v8 + 64);
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v14;
  }
  if (v11 <= v16 - 1) {
    unsigned int v17 = v16 - 1;
  }
  else {
    unsigned int v17 = v11;
  }
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  size_t v19 = *(void *)(v8 + 64);
  if (v9 <= 1)
  {
    if (v15 <= 3)
    {
      unsigned int v21 = (~(-1 << (8 * v15)) - v9 + 2) >> (8 * v15);
      if (v21 > 0xFFFE)
      {
        uint64_t v20 = 4;
      }
      else
      {
        BOOL v22 = v21 != 0;
        BOOL v23 = v21 >= 0xFF;
        uint64_t v20 = 2;
        if (!v23) {
          uint64_t v20 = v22;
        }
      }
    }
    else
    {
      uint64_t v20 = 1;
    }
    size_t v19 = v20 + v15;
  }
  uint64_t v24 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = (v19 + (v24 | 7) + ((v15 + v18 + 1) & ~v18)) & ~(v24 | 7);
  size_t v26 = *(void *)(v12 + 64);
  if (!v13) {
    ++v26;
  }
  size_t v27 = ((v24 + 32) & ~v24) + v26;
  size_t v28 = v25 + v27;
  if (a3 <= v17)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v32 = ((a3 - v17 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v32))
    {
      int v29 = 4;
    }
    else if (v32 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v32 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v17 < a2)
  {
    unsigned int v30 = ~v17 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v33 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v33;
          a1[2] = BYTE2(v33);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v33;
        }
        else
        {
          *a1 = v33;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_122;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_47;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_47;
    case 3:
LABEL_122:
      __break(1u);
      JUMPOUT(0x236153078);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_46;
    default:
LABEL_46:
      if (!a2) {
        return;
      }
LABEL_47:
      if (v9 == v17)
      {
        unsigned int v34 = *(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
        uint64_t v35 = a1;
        uint64_t v36 = a2;
LABEL_49:
        v34(v35, v36, v9, v7);
        return;
      }
      uint64_t v37 = (_WORD *)((unint64_t)&a1[v15 + 1 + v18] & ~v18);
      if (v10 == v17)
      {
        if ((int)a2 + 2 <= v9)
        {
          if (a2 == -2) {
            return;
          }
          unsigned int v34 = *(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
          uint64_t v35 = v37;
          uint64_t v36 = (a2 + 2);
          goto LABEL_49;
        }
        if (v15 <= 3) {
          int v38 = ~(-1 << (8 * v15));
        }
        else {
          int v38 = -1;
        }
        if (v15)
        {
          int v39 = v38 & (a2 - v9 + 1);
          if (v15 <= 3) {
            int v40 = v15;
          }
          else {
            int v40 = 4;
          }
          bzero(v37, v15);
          switch(v40)
          {
            case 2:
              goto LABEL_115;
            case 3:
              goto LABEL_116;
            case 4:
              goto LABEL_117;
            default:
              goto LABEL_101;
          }
        }
      }
      else
      {
        if (v9 <= 1)
        {
          if (v15 <= 3)
          {
            unsigned int v42 = ((~(-1 << (8 * v15)) - v9 + 2) >> (8 * v15)) + 1;
            if (HIWORD(v42))
            {
              uint64_t v41 = 4;
            }
            else
            {
              BOOL v43 = v42 > 1;
              BOOL v23 = v42 >= 0x100;
              uint64_t v41 = 2;
              if (!v23) {
                uint64_t v41 = v43;
              }
            }
          }
          else
          {
            uint64_t v41 = 1;
          }
          v15 += v41;
        }
        uint64_t v37 = (_WORD *)(((unint64_t)v37 + (v24 | 7) + v15) & ~(v24 | 7));
        if (v16 - 1 >= a2)
        {
          uint64_t v46 = (a2 + 1);
          if (v46 <= v16)
          {
            if (a2 != -1)
            {
              if (v14 > 0x7FFFFFFE)
              {
                uint64_t v37 = (_WORD *)((v24 + (((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
                if (v46 <= v14)
                {
                  unsigned int v51 = *(void (**)(_WORD *, void))(v12 + 56);
                  v51(v37, (a2 + 2));
                }
                else
                {
                  if (v26 <= 3) {
                    int v49 = ~(-1 << (8 * v26));
                  }
                  else {
                    int v49 = -1;
                  }
                  if (v26)
                  {
                    int v39 = v49 & (a2 - v14);
                    if (v26 <= 3) {
                      int v50 = v26;
                    }
                    else {
                      int v50 = 4;
                    }
                    bzero(v37, v26);
                    switch(v50)
                    {
                      case 2:
LABEL_115:
                        *uint64_t v37 = v39;
                        break;
                      case 3:
LABEL_116:
                        *uint64_t v37 = v39;
                        *((unsigned char *)v37 + 2) = BYTE2(v39);
                        break;
                      case 4:
LABEL_117:
                        *(_DWORD *)uint64_t v37 = v39;
                        break;
                      default:
LABEL_101:
                        *(unsigned char *)uint64_t v37 = v39;
                        break;
                    }
                  }
                }
              }
              else if (v46 > 0x7FFFFFFE)
              {
                *(void *)uint64_t v37 = 0;
                *((void *)v37 + 1) = 0;
                *(_DWORD *)uint64_t v37 = a2 - 2147483646;
              }
              else
              {
                *((void *)v37 + 1) = v46;
              }
            }
          }
          else
          {
            if (v27 <= 3) {
              int v47 = ~(-1 << (8 * v27));
            }
            else {
              int v47 = -1;
            }
            if (v27)
            {
              int v39 = v47 & (a2 - v16);
              if (v27 <= 3) {
                int v48 = v27;
              }
              else {
                int v48 = 4;
              }
              bzero(v37, v27);
              switch(v48)
              {
                case 2:
                  goto LABEL_115;
                case 3:
                  goto LABEL_116;
                case 4:
                  goto LABEL_117;
                default:
                  goto LABEL_101;
              }
            }
          }
        }
        else
        {
          if (v27 <= 3) {
            int v44 = ~(-1 << (8 * v27));
          }
          else {
            int v44 = -1;
          }
          if (v27)
          {
            int v39 = v44 & (a2 - v16);
            if (v27 <= 3) {
              int v45 = v27;
            }
            else {
              int v45 = 4;
            }
            bzero(v37, v27);
            switch(v45)
            {
              case 2:
                goto LABEL_115;
              case 3:
                goto LABEL_116;
              case 4:
                goto LABEL_117;
              default:
                goto LABEL_101;
            }
          }
        }
      }
      return;
  }
}

void sub_2361530E0()
{
  if (!qword_26AD754A8)
  {
    type metadata accessor for CRDTModelRevisionInfo();
    unint64_t v0 = sub_2361FEE38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD754A8);
    }
  }
}

unsigned char *sub_236153138(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236153204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_23615322C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_2361532A8(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 > 7 || v9 > 0x18 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
    return a1;
  }
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v19 > 0xFFFE)
      {
        int v18 = *(_DWORD *)((char *)a2 + v8);
        if (!v18) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (v19 > 0xFE)
      {
        int v18 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (!v19)
      {
LABEL_37:
        if (!v7) {
          goto LABEL_53;
        }
        goto LABEL_38;
      }
    }
    int v18 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_37;
    }
LABEL_27:
    int v20 = (v18 - 1) << (8 * v8);
    if (v8 > 3) {
      int v20 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v21 = v8;
      }
      else {
        int v21 = 4;
      }
      switch(v21)
      {
        case 2:
          int v22 = *a2;
          break;
        case 3:
          int v22 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v22 = *(_DWORD *)a2;
          break;
        default:
          int v22 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v22 = 0;
    }
    if (v7 + (v22 | v20) != -1) {
      goto LABEL_39;
    }
    goto LABEL_53;
  }
LABEL_38:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_39:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v24 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v24 > 0xFFFE)
        {
          uint64_t v23 = 4;
        }
        else
        {
          BOOL v25 = v24 != 0;
          BOOL v13 = v24 >= 0xFF;
          uint64_t v23 = 2;
          if (!v13) {
            uint64_t v23 = v25;
          }
        }
      }
      else
      {
        uint64_t v23 = 1;
      }
      v8 += v23;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_53:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (v26 > 0xFE)
      {
        *(_WORD *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (!v26) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  }
  return a1;
}

uint64_t sub_2361535D4(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 > 1)
  {
LABEL_19:
    uint64_t v14 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *))(v4 + 48))(a1);
    uint64_t v4 = v14;
    if (result) {
      return result;
    }
    goto LABEL_25;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = (~(-1 << v7) - v5 + 2) >> v7;
    if (v9 > 0xFFFE)
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (v9 > 0xFE)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (!v9)
    {
LABEL_18:
      if (v5) {
        goto LABEL_19;
      }
LABEL_25:
      BOOL v13 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 8);
      return v13(a1, v3);
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_18;
  }
LABEL_10:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v12 = v5 + (v6 | v10);
  uint64_t result = (v12 + 1);
  if (v12 == -1) {
    goto LABEL_25;
  }
  return result;
}

char *sub_236153794(char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        int v9 = *(_DWORD *)((char *)a2 + v8);
        if (!v9) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v10 > 0xFE)
      {
        int v9 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v10)
      {
LABEL_20:
        if (!v7) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v9 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a2;
          break;
        case 3:
          int v13 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a2;
          break;
        default:
          int v13 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if (v7 + (v13 | v11) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_22:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v15 > 0xFFFE)
        {
          uint64_t v14 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v14 = 2;
          if (!v17) {
            uint64_t v14 = v16;
          }
        }
      }
      else
      {
        uint64_t v14 = 1;
      }
      v8 += v14;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v18 > 0xFFFE)
      {
        *(_DWORD *)&a1[v8] = 0;
        return a1;
      }
      if (v18 > 0xFE)
      {
        *(_WORD *)&a1[v8] = 0;
        return a1;
      }
      if (!v18) {
        return a1;
      }
    }
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int16 *sub_236153A24(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 > 1) {
    goto LABEL_21;
  }
  if (v8 > 3) {
    goto LABEL_3;
  }
  unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    int v9 = *(_DWORD *)((char *)a1 + v8);
    if (!v9) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    int v9 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    int v9 = *((unsigned __int8 *)a1 + v8);
    if (!*((unsigned char *)a1 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a1;
          break;
        case 3:
          int v13 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a1;
          break;
        default:
          int v13 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if ((v13 | v11) + v7 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v7) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (!v14((unsigned __int8 *)a1, v7, v5))
  {
    if (v7 > 1)
    {
LABEL_74:
      if (v14(a2, v7, v5)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v8 > 3) {
      goto LABEL_34;
    }
    unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      int v16 = *(_DWORD *)&a2[v8];
      if (v16) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18) {
          goto LABEL_72;
        }
LABEL_34:
        int v16 = a2[v8];
        if (!a2[v8]) {
          goto LABEL_72;
        }
LABEL_55:
        int v22 = (v16 - 1) << (8 * v8);
        if (v8 > 3) {
          int v22 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v23 = v8;
          }
          else {
            int v23 = 4;
          }
          switch(v23)
          {
            case 2:
              int v24 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v24 = *(_DWORD *)a2;
              break;
            default:
              int v24 = *a2;
              break;
          }
        }
        else
        {
          int v24 = 0;
        }
        if (v7 + (v24 | v22) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
          if (v7 <= 1)
          {
            if (v8 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v8);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      int v16 = *(unsigned __int16 *)&a2[v8];
      if (*(_WORD *)&a2[v8]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v7) {
      goto LABEL_100;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_74;
  }
  if (v7 > 1)
  {
LABEL_67:
    if (v14(a2, v7, v5)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v8 > 3) {
    goto LABEL_31;
  }
  unsigned int v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    int v15 = *(_DWORD *)&a2[v8];
    if (v15) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v17 > 0xFE)
  {
    int v15 = *(unsigned __int16 *)&a2[v8];
    if (*(_WORD *)&a2[v8]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v7) {
      goto LABEL_88;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (!v17) {
    goto LABEL_65;
  }
LABEL_31:
  int v15 = a2[v8];
  if (!a2[v8]) {
    goto LABEL_65;
  }
LABEL_45:
  int v19 = (v15 - 1) << (8 * v8);
  if (v8 > 3) {
    int v19 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v20 = v8;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a2;
        break;
      default:
        int v21 = *a2;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v7 + (v21 | v19) != -1)
  {
LABEL_68:
    if (v7 <= 1)
    {
      if (v8 > 3)
      {
LABEL_70:
        uint64_t v25 = 1;
LABEL_82:
        v8 += v25;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        uint64_t v25 = 4;
      }
      else
      {
        BOOL v27 = v26 != 0;
        BOOL v28 = v26 >= 0xFF;
        uint64_t v25 = 2;
        if (!v28) {
          uint64_t v25 = v27;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v29 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v29 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (v29 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (!v29) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  }
  return a1;
}

char *sub_236153F48(char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        int v9 = *(_DWORD *)((char *)a2 + v8);
        if (!v9) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v10 > 0xFE)
      {
        int v9 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v10)
      {
LABEL_20:
        if (!v7) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v9 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a2;
          break;
        case 3:
          int v13 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a2;
          break;
        default:
          int v13 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if (v7 + (v13 | v11) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_22:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v15 > 0xFFFE)
        {
          uint64_t v14 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v14 = 2;
          if (!v17) {
            uint64_t v14 = v16;
          }
        }
      }
      else
      {
        uint64_t v14 = 1;
      }
      v8 += v14;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v18 > 0xFFFE)
      {
        *(_DWORD *)&a1[v8] = 0;
        return a1;
      }
      if (v18 > 0xFE)
      {
        *(_WORD *)&a1[v8] = 0;
        return a1;
      }
      if (!v18) {
        return a1;
      }
    }
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int16 *sub_2361541D8(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 > 1) {
    goto LABEL_21;
  }
  if (v8 > 3) {
    goto LABEL_3;
  }
  unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    int v9 = *(_DWORD *)((char *)a1 + v8);
    if (!v9) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    int v9 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    int v9 = *((unsigned __int8 *)a1 + v8);
    if (!*((unsigned char *)a1 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a1;
          break;
        case 3:
          int v13 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a1;
          break;
        default:
          int v13 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if ((v13 | v11) + v7 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v7) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (!v14((unsigned __int8 *)a1, v7, v5))
  {
    if (v7 > 1)
    {
LABEL_74:
      if (v14(a2, v7, v5)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v8 > 3) {
      goto LABEL_34;
    }
    unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      int v16 = *(_DWORD *)&a2[v8];
      if (v16) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18) {
          goto LABEL_72;
        }
LABEL_34:
        int v16 = a2[v8];
        if (!a2[v8]) {
          goto LABEL_72;
        }
LABEL_55:
        int v22 = (v16 - 1) << (8 * v8);
        if (v8 > 3) {
          int v22 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v23 = v8;
          }
          else {
            int v23 = 4;
          }
          switch(v23)
          {
            case 2:
              int v24 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v24 = *(_DWORD *)a2;
              break;
            default:
              int v24 = *a2;
              break;
          }
        }
        else
        {
          int v24 = 0;
        }
        if (v7 + (v24 | v22) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
          if (v7 <= 1)
          {
            if (v8 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v8);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      int v16 = *(unsigned __int16 *)&a2[v8];
      if (*(_WORD *)&a2[v8]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v7) {
      goto LABEL_100;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_74;
  }
  if (v7 > 1)
  {
LABEL_67:
    if (v14(a2, v7, v5)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v8 > 3) {
    goto LABEL_31;
  }
  unsigned int v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    int v15 = *(_DWORD *)&a2[v8];
    if (v15) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v17 > 0xFE)
  {
    int v15 = *(unsigned __int16 *)&a2[v8];
    if (*(_WORD *)&a2[v8]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v7) {
      goto LABEL_88;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (!v17) {
    goto LABEL_65;
  }
LABEL_31:
  int v15 = a2[v8];
  if (!a2[v8]) {
    goto LABEL_65;
  }
LABEL_45:
  int v19 = (v15 - 1) << (8 * v8);
  if (v8 > 3) {
    int v19 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v20 = v8;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a2;
        break;
      default:
        int v21 = *a2;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v7 + (v21 | v19) != -1)
  {
LABEL_68:
    if (v7 <= 1)
    {
      if (v8 > 3)
      {
LABEL_70:
        uint64_t v25 = 1;
LABEL_82:
        v8 += v25;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        uint64_t v25 = 4;
      }
      else
      {
        BOOL v27 = v26 != 0;
        BOOL v28 = v26 >= 0xFF;
        uint64_t v25 = 2;
        if (!v28) {
          uint64_t v25 = v27;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v29 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v29 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (v29 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
        return a1;
      }
      if (!v29) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  }
  return a1;
}

uint64_t sub_2361546FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_13;
  }
  unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    int v14 = *(_DWORD *)((char *)a1 + v7);
    if (v14) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2) {
        goto LABEL_30;
      }
LABEL_13:
      int v14 = *((unsigned __int8 *)a1 + v7);
      if (!*((unsigned char *)a1 + v7)) {
        goto LABEL_30;
      }
LABEL_20:
      int v16 = (v14 - 1) << v13;
      if (v7 > 3) {
        int v16 = 0;
      }
      if (v7)
      {
        if (v7 <= 3) {
          int v17 = v7;
        }
        else {
          int v17 = 4;
        }
        switch(v17)
        {
          case 2:
            int v18 = *a1;
            break;
          case 3:
            int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v18 = *(_DWORD *)a1;
            break;
          default:
            int v18 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v18 = 0;
      }
      return v6 + (v18 | v16) + 1;
    }
    int v14 = *(unsigned __int16 *)((char *)a1 + v7);
    if (*(unsigned __int16 *)((char *)a1 + v7)) {
      goto LABEL_20;
    }
  }
LABEL_30:
  if (!v6) {
    return 0;
  }
  if (!v5) {
    return 0;
  }
  unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
  BOOL v11 = v19 >= 2;
  uint64_t result = v19 - 2;
  if (result == 0 || !v11) {
    return 0;
  }
  return result;
}

void sub_2361548E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8;
  if (v7 <= 1) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = v7 - 2;
  }
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v12 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v12 > 0xFFFE)
      {
        uint64_t v11 = 4;
      }
      else
      {
        BOOL v13 = v12 != 0;
        BOOL v14 = v12 >= 0xFF;
        uint64_t v11 = 2;
        if (!v14) {
          uint64_t v11 = v13;
        }
      }
    }
    else
    {
      uint64_t v11 = 1;
    }
    size_t v9 = v11 + v8;
  }
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 != 0 && v14)
  {
    if (v9 <= 3)
    {
      unsigned int v19 = ((v15 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v19))
      {
        int v16 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v16 = 2;
      }
      else
      {
        int v16 = v19 > 1;
      }
    }
    else
    {
      int v16 = 1;
    }
  }
  else
  {
    int v16 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v9 < 4)
    {
      int v18 = (v17 >> (8 * v9)) + 1;
      if (v9)
      {
        int v20 = v17 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v9] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v18;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v9] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x236154C08);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (a2 + 2 <= v7)
        {
          if (a2 != -2)
          {
            int v24 = *(void (**)(void))(v6 + 56);
            v24();
          }
        }
        else
        {
          if (v8 <= 3) {
            int v21 = ~(-1 << (8 * v8));
          }
          else {
            int v21 = -1;
          }
          if (v8)
          {
            int v22 = v21 & (a2 - v7 + 1);
            if (v8 <= 3) {
              int v23 = v8;
            }
            else {
              int v23 = 4;
            }
            bzero(a1, v8);
            switch(v23)
            {
              case 2:
                *(_WORD *)a1 = v22;
                break;
              case 3:
                *(_WORD *)a1 = v22;
                a1[2] = BYTE2(v22);
                break;
              case 4:
                *(_DWORD *)a1 = v22;
                break;
              default:
                *a1 = v22;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_236154C40(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v3 > 1) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_3;
  }
  unsigned int v7 = (~(-1 << v5) - v3 + 2) >> v5;
  if (v7 > 0xFFFE)
  {
    int v6 = *(_DWORD *)((char *)a1 + v4);
    if (v6) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 <= 0xFE)
    {
      if (!v7) {
        goto LABEL_18;
      }
LABEL_3:
      int v6 = *((unsigned __int8 *)a1 + v4);
      if (!*((unsigned char *)a1 + v4)) {
        goto LABEL_18;
      }
LABEL_10:
      int v8 = (v6 - 1) << v5;
      if (v4 > 3) {
        int v8 = 0;
      }
      if (v4)
      {
        if (v4 > 3) {
          LODWORD(v4) = 4;
        }
        switch((int)v4)
        {
          case 2:
            LODWORD(v4) = *a1;
            break;
          case 3:
            LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v4) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v4) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v3 + (v4 | v8) + 1;
    }
    int v6 = *(unsigned __int16 *)((char *)a1 + v4);
    if (*(unsigned __int16 *)((char *)a1 + v4)) {
      goto LABEL_10;
    }
  }
LABEL_18:
  if (v3) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  return 0;
}

void sub_236154D94(char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 > 1)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = (~(-1 << (8 * v6)) - v5 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v7 = 4;
    }
    else if (v10 >= 0xFF)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 != 0;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (v5 < a2)
  {
    unsigned int v8 = ~v5 + a2;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v6)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        return;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        return;
      default:
        return;
    }
  }
  switch(v7)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x236154FACLL);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v12 = *(void (**)(void))(v4 + 56);
        v12();
      }
      return;
  }
}

uint64_t sub_236154FD4(uint64_t a1)
{
  uint64_t v3 = sub_236126188(qword_26AD75040);
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  int v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  int v11 = &v15[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_23614C5E4(v12, (uint64_t)v11);
  swift_beginAccess();
  sub_236159444(a1, v12);
  swift_endAccess();
  sub_23614C5E4(v12, (uint64_t)v9);
  sub_23612EDA4(0, (unint64_t *)&qword_26AD76000);
  if (sub_2361FEDE8() & 1) != 0 && (sub_2361FE798())
  {
    sub_2361594A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  }
  else
  {
    sub_2361594A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
    uint64_t v13 = (uint64_t)&v5[*(int *)(sub_236126188(&qword_26AD75348) + 48)];
    sub_23614C5E4((uint64_t)v11, (uint64_t)v5);
    sub_23614C5E4(v12, v13);
    swift_storeEnumTagMultiPayload();
    sub_236155B34((uint64_t)v5);
    sub_23613491C((uint64_t)v5, qword_26AD75040);
  }
  sub_2361594A8(a1, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  return sub_2361594A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_236155248(uint64_t a1)
{
  uint64_t v3 = sub_236126188(&qword_26AD75030);
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_236126188(&qword_26AD74880);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  int v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  int v11 = &v16[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_2361348B8(v12, (uint64_t)v11, &qword_26AD74880);
  swift_beginAccess();
  sub_236159268(a1, v12);
  swift_endAccess();
  sub_2361348B8(v12, (uint64_t)v9, &qword_26AD74880);
  BOOL v13 = sub_236156FB0((uint64_t)v11, (uint64_t)v9);
  sub_23613491C((uint64_t)v9, &qword_26AD74880);
  if (!v13)
  {
    uint64_t v14 = (uint64_t)&v5[*(int *)(sub_236126188(&qword_268853710) + 48)];
    sub_2361348B8((uint64_t)v11, (uint64_t)v5, &qword_26AD74880);
    sub_2361348B8(v12, v14, &qword_26AD74880);
    swift_storeEnumTagMultiPayload();
    sub_236156340((uint64_t)v5);
    sub_23613491C((uint64_t)v5, &qword_26AD75030);
  }
  sub_23613491C(a1, &qword_26AD74880);
  return sub_23613491C((uint64_t)v11, &qword_26AD74880);
}

char *sub_236155464(uint64_t a1)
{
  return sub_2361557E4(a1, (uint64_t)type metadata accessor for CRDTModelSyncVersion, (void (*)(uint64_t, char *, uint64_t))sub_236159508);
}

uint64_t sub_236155490(uint64_t a1, int a2, double a3)
{
  int v17 = a2;
  uint64_t v16 = a1;
  uint64_t v15 = sub_2361FED18();
  uint64_t v5 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FECF8();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2361FE098();
  MEMORY[0x270FA5388](v9 - 8);
  sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  sub_2361FE078();
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_236159324((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_23615936C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v11 = v15;
  v10(v7, *MEMORY[0x263F8F130], v15);
  *(void *)(v3 + 16) = sub_2361FED58();
  sub_2361FE088();
  sub_2361FECE8();
  v10(v7, *MEMORY[0x263F8F138], v11);
  uint64_t v12 = sub_2361FED58();
  uint64_t v13 = MEMORY[0x263F8EE80];
  *(void *)(v3 + 24) = v12;
  *(void *)(v3 + 32) = v13;
  *(void *)(v3 + 72) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(void *)(v3 + 72) = 0;
  swift_unknownObjectWeakAssign();
  *(void *)(v3 + 40) = v16;
  *(double *)(v3 + 4_Block_object_dispose(&STACK[0x3B0], 8) = a3;
  *(unsigned char *)(v3 + 56) = v17;
  return v3;
}

char *sub_2361557C4(uint64_t a1)
{
  return sub_2361557E4(a1, (uint64_t)&unk_26AD74880, (void (*)(uint64_t, char *, uint64_t))sub_23612D5D0);
}

char *sub_2361557E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t))
{
  uint64_t v19 = a2;
  int v20 = a3;
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v17 = sub_2361FED18();
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FECF8();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2361FE098();
  MEMORY[0x270FA5388](v9 - 8);
  sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  sub_2361FE078();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_236159324((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_23615936C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v11 = v17;
  v10(v7, *MEMORY[0x263F8F130], v17);
  *((void *)v3 + 2) = sub_2361FED58();
  sub_2361FE088();
  sub_2361FECE8();
  v10(v7, *MEMORY[0x263F8F138], v11);
  uint64_t v12 = sub_2361FED58();
  uint64_t v13 = MEMORY[0x263F8EE80];
  *((void *)v3 + 3) = v12;
  *((void *)v3 + 4) = v13;
  uint64_t v14 = &v4[*(void *)(*(void *)v4 + 128)];
  *((void *)v14 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((void *)v14 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v20(v18, &v4[*(void *)(*(void *)v4 + 120)], v19);
  return v4;
}

uint64_t sub_236155B34(uint64_t a1)
{
  uint64_t v3 = sub_2361FE098();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FE058();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  if (MEMORY[0x237DFF340](v11))
  {
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 8))(v1, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  unsigned int v30 = nullsub_60;
  uint64_t v31 = 0;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  int v24 = &v28;
  BOOL v28 = sub_2361E02F8;
  unsigned int v29 = &unk_26E973B28;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v10, v14);
  _Block_release(v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21[1] = v4 + 8;
  uint64_t v25 = v15;
  v15(v6, v3);
  int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  uint64_t v16 = swift_beginAccess();
  uint64_t v22 = v3;
  uint64_t v17 = v1[4];
  MEMORY[0x270FA5388](v16);
  v21[-2] = a1;
  swift_bridgeObjectRetain();
  sub_236156738((void (*)(long long *))sub_2361595D8, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_2361FE048();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  unsigned int v30 = sub_236159308;
  uint64_t v31 = v18;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  BOOL v28 = sub_2361E02F8;
  unsigned int v29 = &unk_26E973B78;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v10, v19);
  _Block_release(v19);
  v25(v6, v22);
  v23(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_236155F2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2361FE098();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FE058();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23612D5D0(a1, (uint64_t)v30, &qword_26AD75038);
  swift_beginAccess();
  if (MEMORY[0x237DFF340](v2 + 64))
  {
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v2, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  BOOL v28 = nullsub_60;
  uint64_t v29 = 0;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v25 = 1107296256;
  unsigned int v26 = sub_2361E02F8;
  uint64_t v27 = &unk_26E973A38;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v7, v11, v14);
  _Block_release(v14);
  int v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  uint64_t v22 = v4;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21[1] = v9 + 8;
  v15(v11, v8);
  uint64_t v16 = swift_beginAccess();
  v21[0] = v8;
  uint64_t v17 = *(void *)(v2 + 32);
  MEMORY[0x270FA5388](v16);
  v21[-2] = v30;
  swift_bridgeObjectRetain();
  sub_236156738((void (*)(long long *))sub_2361593B0, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_2361FE048();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  BOOL v28 = sub_236159410;
  uint64_t v29 = v18;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v25 = 1107296256;
  unsigned int v26 = sub_2361E02F8;
  uint64_t v27 = &unk_26E973A88;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v7, v11, v19);
  _Block_release(v19);
  v23(v7, v22);
  v15(v11, v21[0]);
  swift_release();
  return swift_release();
}

uint64_t sub_236156340(uint64_t a1)
{
  uint64_t v3 = sub_2361FE098();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FE058();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  if (MEMORY[0x237DFF340](v11))
  {
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 8))(v1, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  unsigned int v30 = nullsub_60;
  uint64_t v31 = 0;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  int v24 = &v28;
  BOOL v28 = sub_2361E02F8;
  uint64_t v29 = &unk_26E9739C0;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v10, v14);
  _Block_release(v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21[1] = v4 + 8;
  uint64_t v25 = v15;
  v15(v6, v3);
  int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  uint64_t v16 = swift_beginAccess();
  uint64_t v22 = v3;
  uint64_t v17 = v1[4];
  MEMORY[0x270FA5388](v16);
  v21[-2] = a1;
  swift_bridgeObjectRetain();
  sub_236156738((void (*)(long long *))sub_2361592D0, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_2361FE048();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  unsigned int v30 = sub_236159308;
  uint64_t v31 = v18;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  BOOL v28 = sub_2361E02F8;
  uint64_t v29 = &unk_26E973A10;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v6, v10, v19);
  _Block_release(v19);
  v25(v6, v22);
  v23(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_236156738(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    long long v18 = *(_OWORD *)(*(void *)(a3 + 56) + 16 * i);
    swift_retain();
    a1(&v18);
    if (v3)
    {
      swift_release();
      return swift_release();
    }
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2361568E8(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_236156A68()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + 64;
    swift_beginAccess();
    if (MEMORY[0x237DFF340](v2))
    {
      uint64_t v3 = *(void *)(v1 + 72);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v6 = swift_retain();
      v5(v6, ObjectType, v3);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_236156B3C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + *(void *)(*(void *)result + 128);
    swift_beginAccess();
    if (MEMORY[0x237DFF340](v1))
    {
      uint64_t v2 = *(void *)(v1 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      uint64_t v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_236156C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  return sub_23614C5E4(v3, a2);
}

uint64_t sub_236156C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  return sub_2361348B8(v3, a2, &qword_26AD74880);
}

uint64_t sub_236156D0C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3 + *(void *)(*(void *)a3 + 120);
  swift_beginAccess();
  sub_23614C5E4(v8, (uint64_t)v7);
  a1(v7);
  return sub_236154FD4((uint64_t)v7);
}

uint64_t sub_236156DE0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  double v5 = *(double *)(a3 + 48);
  unsigned __int8 v6 = *(unsigned char *)(a3 + 56);
  uint64_t v14 = *(void *)(a3 + 40);
  double v15 = v5;
  unsigned __int8 v16 = v6;
  uint64_t result = a1(&v14);
  uint64_t v8 = v14;
  double v9 = v15;
  int v10 = v16;
  uint64_t v11 = *(void *)(a3 + 40);
  double v12 = *(double *)(a3 + 48);
  uint64_t v13 = *(unsigned __int8 *)(a3 + 56);
  *(void *)(a3 + 40) = v14;
  *(double *)(a3 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v9;
  *(unsigned char *)(a3 + 56) = v10;
  if (v11 != v8 || v12 != v9) {
    goto LABEL_8;
  }
  if (v13 == 3)
  {
    if (v10 == 3) {
      return result;
    }
LABEL_8:
    v17[0] = v11;
    *(double *)&v17[1] = v12;
    v17[2] = v13;
    v17[3] = v8;
    *(double *)&v17[4] = v9;
    char v18 = v10;
    char v19 = 1;
    return sub_236155F2C((uint64_t)v17);
  }
  if (v10 == 3 || v13 != v10) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_236156ED0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3 + *(void *)(*(void *)a3 + 120);
  swift_beginAccess();
  sub_2361348B8(v8, (uint64_t)v7, &qword_26AD74880);
  a1(v7);
  return sub_236155248((uint64_t)v7);
}

BOOL sub_236156FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (uint64_t *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_236126188(&qword_26AD754A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = sub_236126188(&qword_26AD754B0);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_236126188(&qword_26AD74880);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unsigned int v62 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)&v53 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v60 = (uint64_t)&v53 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v61 = (uint64_t)&v53 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  int v20 = (char *)&v53 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  int v23 = (char *)&v53 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unsigned int v26 = (char *)&v53 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v53 - v28;
  uint64_t v30 = *(int *)(v27 + 44);
  int v31 = *(unsigned __int8 *)(a1 + v30);
  int v32 = *(unsigned __int8 *)(a2 + v30);
  sub_2361348B8(a1, (uint64_t)&v53 - v28, &qword_26AD74880);
  uint64_t v64 = a2;
  sub_2361348B8(a2, (uint64_t)v26, &qword_26AD74880);
  if (v31 != v32)
  {
    sub_23613491C((uint64_t)v26, &qword_26AD74880);
    sub_23613491C((uint64_t)v29, &qword_26AD74880);
    sub_2361348B8(a1, (uint64_t)v23, &qword_26AD74880);
    sub_2361348B8(v64, (uint64_t)v20, &qword_26AD74880);
LABEL_9:
    sub_23613491C((uint64_t)v20, &qword_26AD74880);
    sub_23613491C((uint64_t)v23, &qword_26AD74880);
    uint64_t v35 = v61;
    sub_2361348B8(v64, v61, &qword_26AD74880);
    uint64_t v36 = v60;
    sub_2361348B8(a1, v60, &qword_26AD74880);
    uint64_t v37 = (uint64_t)v62;
    goto LABEL_10;
  }
  char v33 = sub_2361D3B80((uint64_t)&v29[*(int *)(v9 + 48)], (uint64_t)&v26[*(int *)(v9 + 48)]);
  sub_23613491C((uint64_t)v26, &qword_26AD74880);
  sub_23613491C((uint64_t)v29, &qword_26AD74880);
  sub_2361348B8(a1, (uint64_t)v23, &qword_26AD74880);
  sub_2361348B8(v64, (uint64_t)v20, &qword_26AD74880);
  if ((v33 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v53 = v9;
  type metadata accessor for ReadingHistoryModel(0);
  sub_236159324(&qword_26AD751E0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v34 = sub_2361FE5A8();
  sub_23613491C((uint64_t)v20, &qword_26AD74880);
  sub_23613491C((uint64_t)v23, &qword_26AD74880);
  uint64_t v35 = v61;
  sub_2361348B8(v64, v61, &qword_26AD74880);
  uint64_t v36 = v60;
  sub_2361348B8(a1, v60, &qword_26AD74880);
  uint64_t v37 = (uint64_t)v62;
  if (v34)
  {
LABEL_10:
    sub_23613491C(v36, &qword_26AD74880);
    sub_23613491C(v35, &qword_26AD74880);
    uint64_t v39 = v63;
    sub_2361348B8(a1, v63, &qword_26AD74880);
    sub_2361348B8(v64, v37, &qword_26AD74880);
    goto LABEL_11;
  }
  char v38 = sub_2361FE5A8();
  sub_23613491C(v36, &qword_26AD74880);
  sub_23613491C(v35, &qword_26AD74880);
  uint64_t v39 = v63;
  sub_2361348B8(a1, v63, &qword_26AD74880);
  sub_2361348B8(v64, v37, &qword_26AD74880);
  if (v38)
  {
LABEL_11:
    sub_23613491C(v37, &qword_26AD74880);
    uint64_t v47 = v39;
    int v48 = &qword_26AD74880;
LABEL_12:
    sub_23613491C(v47, v48);
    return 0;
  }
  uint64_t v40 = *(int *)(v53 + 52);
  uint64_t v41 = v37 + v40;
  uint64_t v42 = v59;
  uint64_t v43 = v59 + *(int *)(v56 + 48);
  sub_2361348B8(v39 + v40, v59, &qword_26AD754A0);
  sub_2361348B8(v41, v43, &qword_26AD754A0);
  uint64_t v44 = v58;
  int v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v45(v42, 1, v58) != 1)
  {
    int v50 = v55;
    sub_2361348B8(v42, (uint64_t)v55, &qword_26AD754A0);
    if (v45(v43, 1, v44) != 1)
    {
      uint64_t v51 = v43;
      uint64_t v52 = v54;
      sub_236159508(v51, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      BOOL v46 = _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(v50, v52);
      sub_2361594A8((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      sub_23613491C(v37, &qword_26AD74880);
      sub_23613491C(v39, &qword_26AD74880);
      sub_2361594A8((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      sub_23613491C(v42, &qword_26AD754A0);
      return v46;
    }
    sub_23613491C(v37, &qword_26AD74880);
    sub_23613491C(v39, &qword_26AD74880);
    sub_2361594A8((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    goto LABEL_16;
  }
  sub_23613491C(v37, &qword_26AD74880);
  sub_23613491C(v39, &qword_26AD74880);
  if (v45(v43, 1, v44) != 1)
  {
LABEL_16:
    int v48 = &qword_26AD754B0;
    uint64_t v47 = v42;
    goto LABEL_12;
  }
  sub_23613491C(v42, &qword_26AD754A0);
  return 1;
}

uint64_t ReadingGoals.State.booksFinishedGoal.getter()
{
  return *(void *)v0;
}

uint64_t ReadingGoals.State.booksFinishedGoal.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ReadingGoals.State.booksFinishedGoal.modify())()
{
  return nullsub_60;
}

double ReadingGoals.State.streakDayGoal.getter()
{
  return *(double *)(v0 + 8);
}

void ReadingGoals.State.streakDayGoal.setter(double a1)
{
  *(double *)(v1 + _Block_object_dispose(&STACK[0x3B0], 8) = a1;
}

uint64_t (*ReadingGoals.State.streakDayGoal.modify())()
{
  return nullsub_60;
}

BookDataStore::ReadingGoals::State __swiftcall ReadingGoals.State.init(booksFinishedGoal:streakDayGoal:)(Swift::Int booksFinishedGoal, Swift::Double streakDayGoal)
{
  *(void *)uint64_t v2 = booksFinishedGoal;
  *(Swift::Double *)(v2 + _Block_object_dispose(&STACK[0x3B0], 8) = streakDayGoal;
  result.streakDayGoal = streakDayGoal;
  result.booksFinishedGoal = booksFinishedGoal;
  return result;
}

void static ReadingGoals.State.default.getter(void *a1@<X8>)
{
  *a1 = 3;
  a1[1] = 0x4072C00000000000;
}

void static ReadingGoals.State.initial.getter(void *a1@<X8>)
{
  *a1 = 3;
  a1[1] = 0x4072C00000000000;
}

BOOL ReadingGoals.State.isDefaultDailyReadingGoal.getter()
{
  return *(double *)(v0 + 8) == 300.0;
}

BOOL ReadingGoals.State.isDefaultYearlyReadingGoal.getter()
{
  return *v0 == 3;
}

BOOL static ReadingGoals.State.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BOOL sub_2361577A8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BookDataStore::ReadingGoals::Goal_optional __swiftcall ReadingGoals.Goal.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = BookDataStore_ReadingGoals_Goal_dailyReading;
  }
  else {
    v1.value = BookDataStore_ReadingGoals_Goal_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

void *static ReadingGoals.Goal.allCases.getter()
{
  return &unk_26E972070;
}

uint64_t ReadingGoals.Goal.rawValue.getter(char a1)
{
  return a1 & 1;
}

void *sub_236157800@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_236157820(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_23615782C(void *a1@<X8>)
{
  *a1 = &unk_26E972098;
}

BOOL static ReadingGoals.StateChange.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3) {
    return v3 == 3;
  }
  if (v3 == 3) {
    return 0;
  }
  return v2 == v3;
}

BOOL static ReadingGoals.StateChange.ChangeOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_23615788C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 3;
  BOOL v6 = v3 != 3 && v2 == v3;
  if (v2 == 3) {
    return v4;
  }
  else {
    return v6;
  }
}

uint64_t ReadingGoals.StateChange.ChangeOrigin.hash(into:)()
{
  return sub_2361FF308();
}

uint64_t ReadingGoals.StateChange.ChangeOrigin.hashValue.getter()
{
  return sub_2361FF318();
}

double ReadingGoals.StateChange.state.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(double *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  return result;
}

void ReadingGoals.StateChange.source.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

double ReadingGoals.StateChange.init(state:source:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  double result = *(double *)(a1 + 8);
  char v4 = *a2;
  *(void *)a3 = *(void *)a1;
  *(double *)(a3 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  *(unsigned char *)(a3 + 16) = v4;
  return result;
}

uint64_t ReadingGoalsController.observable.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  a1[3] = sub_236126188((uint64_t *)&unk_26AD75BF0);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

double ReadingGoalsController.state.getter@<D0>(double *a1@<X8>)
{
  sub_2361FED38();
  double result = v4;
  *(void *)a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t ReadingGoalsController.__allocating_init(dataSource:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ReadingGoalsController.init(dataSource:)(a1);
  return v2;
}

void *ReadingGoalsController.init(dataSource:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)(v1 + 2);
  sub_23612EA38((uint64_t)a1, (uint64_t)(v1 + 2));
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_2361261CC(a1, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v21, v5, v6);
  uint64_t v7 = v21;
  double v8 = v22;
  sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
    swift_once();
  }
  id v9 = (id)qword_26AD74FA0;
  sub_2361FDB28();

  sub_236126188((uint64_t *)&unk_26AD75BF0);
  swift_allocObject();
  v2[7] = sub_236155490(v7, 2, v8);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v11 = v2[5];
  uint64_t v12 = v2[6];
  sub_23615899C(v4, v11);
  uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 24);
  swift_retain();
  v13(sub_236158994, v10, v11, v12);
  swift_endAccess();
  swift_release();
  sub_2361FED38();
  uint64_t v14 = v21;
  double v15 = v22;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_2361261CC(a1, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v20, v16, v17);
  if (v14 != v20[0] || v15 != *(double *)&v20[1])
  {
    sub_2361FEC88();
    id v18 = (id)qword_26AD74FA0;
    sub_2361FDB28();

    sub_236157E00();
  }
  sub_23612EF9C((uint64_t)a1);
  return v2;
}

uint64_t sub_236157D28()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2361FEC88();
    if (qword_26AD74FA8 != -1) {
      swift_once();
    }
    id v1 = (id)qword_26AD74FA0;
    sub_2361FDB28();

    sub_236157E00();
    return swift_release();
  }
  return result;
}

uint64_t sub_236157E00()
{
  id v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = sub_2361261CC(v0 + 2, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v5 + 16))(v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&aBlock, v2, v3);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v2);
  uint64_t v8 = v1[7];
  uint64_t v15 = aBlock;
  uint64_t v16 = v18;
  id v9 = *(NSObject **)(v8 + 16);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_236159418;
  v10[3] = v14;
  v10[4] = v8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_2361595F0;
  *(void *)(v11 + 24) = v10;
  uint64_t v21 = sub_236159570;
  uint64_t v22 = v11;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_23613F9DC;
  int v20 = &unk_26E973B00;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9) {
    __break(1u);
  }
  return result;
}

uint64_t ReadingGoalsController.deinit()
{
  sub_23612EF9C(v0 + 16);
  swift_release();
  return v0;
}

uint64_t ReadingGoalsController.__deallocating_deinit()
{
  sub_23612EF9C(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

double sub_2361580D4@<D0>(double *a1@<X8>)
{
  sub_2361FED38();
  double result = v4;
  *(void *)a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_236158148@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  a1[3] = sub_236126188((uint64_t *)&unk_26AD75BF0);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

Swift::Void __swiftcall ReadingGoalsController.changeBooksFinishedGoal(to:)(Swift::Int to)
{
  swift_beginAccess();
  sub_23612EA38(v1 + 16, (uint64_t)&aBlock);
  uint64_t v3 = v14;
  double v4 = v15;
  sub_2361261CC(&aBlock, (uint64_t)v14);
  (*((void (**)(Swift::Int, void *, uint64_t (*)()))v4 + 5))(to, v3, v4);
  sub_23612EF9C((uint64_t)&aBlock);
  uint64_t v5 = *(void *)(v1 + 56);
  sub_2361FED38();
  v17[1] = v12;
  v17[0] = to;
  v10[2] = v17;
  uint64_t v6 = *(NSObject **)(v5 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_2361595A4;
  v7[3] = v10;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_2361589EC;
  *(void *)(v8 + 24) = v7;
  uint64_t v15 = sub_236134708;
  uint64_t v16 = v8;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_23613F9DC;
  uint64_t v14 = &unk_26E973590;
  id v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

Swift::Void __swiftcall ReadingGoalsController.changeDailyGoal(to:)(Swift::Double to)
{
  swift_beginAccess();
  sub_23612EA38(v1 + 16, (uint64_t)aBlock);
  uint64_t v3 = v12;
  double v4 = v13;
  sub_2361261CC(aBlock, (uint64_t)v12);
  (*((void (**)(void *, uint64_t (*)(), Swift::Double))v4 + 6))(v3, v4, to);
  sub_23612EF9C((uint64_t)aBlock);
  uint64_t v5 = *(void *)(v1 + 56);
  sub_2361FED38();
  v15[0] = aBlock[0];
  *(Swift::Double *)&v15[1] = to;
  v10[2] = v15;
  uint64_t v6 = *(NSObject **)(v5 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_236158A20;
  v7[3] = v10;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_2361595F0;
  *(void *)(v8 + 24) = v7;
  uint64_t v13 = sub_236159570;
  uint64_t v14 = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  uint64_t v12 = &unk_26E973608;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

Swift::Void __swiftcall ReadingGoalsController.clearData()()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_23612EA38((uint64_t)(v0 + 2), (uint64_t)&aBlock);
  uint64_t v2 = v21;
  uint64_t v3 = v22;
  sub_2361261CC(&aBlock, (uint64_t)v21);
  (*((void (**)(void *, uint64_t (*)()))v3 + 7))(v2, v3);
  sub_23612EF9C((uint64_t)&aBlock);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = sub_2361261CC(v0 + 2, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v7 + 16))(v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&aBlock, v4, v5);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v4);
  uint64_t v10 = v1[7];
  uint64_t v16 = aBlock;
  uint64_t v17 = v19;
  uint64_t v11 = *(NSObject **)(v10 + 16);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = sub_236158A88;
  uint64_t v12[3] = v15;
  void v12[4] = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_2361595F0;
  *(void *)(v13 + 24) = v12;
  uint64_t v22 = sub_236159570;
  uint64_t v23 = v13;
  aBlocuint64_t k = MEMORY[0x263EF8330];
  uint64_t v19 = 1107296256;
  int v20 = sub_23613F9DC;
  uint64_t v21 = &unk_26E973680;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v11) {
    __break(1u);
  }
}

void sub_236158888(Swift::Int a1)
{
}

void sub_2361588AC(Swift::Double a1)
{
}

void sub_2361588D0()
{
}

uint64_t _s13BookDataStore12ReadingGoalsO11StateChangeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 3)
  {
    if (v4 != 3) {
      return 0;
    }
  }
  else if (v4 == 3 || v3 != v4)
  {
    return 0;
  }
  return 1;
}

double sub_236158944@<D0>(uint64_t a1@<X8>)
{
  return sub_23615920C(a1);
}

uint64_t sub_23615895C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236158994()
{
  return sub_236157D28();
}

uint64_t sub_23615899C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2361589EC()
{
  return sub_236156DE0(*(uint64_t (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2361589F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236158A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_236158A18()
{
  return swift_release();
}

double sub_236158A20(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_236158A40()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_236158A78()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

double sub_236158A88(uint64_t a1)
{
  double result = *(double *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(double *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_236158AA0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_236158AB4()
{
  unint64_t result = qword_2688536F0;
  if (!qword_2688536F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688536F0);
  }
  return result;
}

uint64_t sub_236158B08()
{
  return sub_23615936C(&qword_2688536F8, &qword_268853700);
}

unint64_t sub_236158B48()
{
  unint64_t result = qword_268853708;
  if (!qword_268853708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853708);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals()
{
  return &type metadata for ReadingGoals;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.State()
{
  return &type metadata for ReadingGoals.State;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.Goal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236158CD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.Goal()
{
  return &type metadata for ReadingGoals.Goal;
}

__n128 initializeBufferWithCopyOfBuffer for ReadingGoals.StateChange(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 16);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange()
{
  return &type metadata for ReadingGoals.StateChange;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x236158E70);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.StateChange.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x236158F58);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_236158F80(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_236158F94(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.Source()
{
  return &type metadata for ReadingGoals.StateChange.Source;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.StateChange.ChangeOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236159080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.ChangeOrigin()
{
  return &type metadata for ReadingGoals.StateChange.ChangeOrigin;
}

uint64_t dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsStateProvider.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsStateProvider.observable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.changeBooksFinishedGoal(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.changeDailyGoal(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.changeBooksFinishedGoal(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.changeDailyGoal(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for ReadingGoalsController()
{
  return self;
}

uint64_t method lookup function for ReadingGoalsController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReadingGoalsController);
}

uint64_t dispatch thunk of ReadingGoalsController.__allocating_init(dataSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

double sub_23615920C@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  double result = *(double *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 40);
  *(double *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_236159268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2361592D0(uint64_t (**a1)(void))
{
  return (*a1)(*(void *)(v1 + 16));
}

uint64_t sub_236159308()
{
  return sub_236156B3C();
}

uint64_t sub_236159324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23615936C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_236126310(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2361593B0(uint64_t (**a1)(_OWORD *))
{
  uint64_t v2 = *(void *)(v1 + 16);
  int v3 = *a1;
  uint64_t v4 = *(void *)(v2 + 32);
  char v5 = *(unsigned char *)(v2 + 40);
  char v6 = *(unsigned char *)(v2 + 41);
  long long v7 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v7;
  uint64_t v10 = v4;
  char v11 = v5;
  char v12 = v6;
  return v3(v9);
}

uint64_t sub_236159410()
{
  return sub_236156A68();
}

double sub_236159418(uint64_t a1)
{
  double result = *(double *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(double *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  *(unsigned char *)(a1 + 16) = 3;
  return result;
}

uint64_t sub_236159434()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236159444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2361594A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236159508(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2361595D8(uint64_t (**a1)(void))
{
  return sub_2361592D0(a1);
}

unint64_t sub_2361595F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PBPropertyBookImpressionParam(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v44 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for PBPropertySingleFloatParam(0);
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
  MEMORY[0x270FA5388](Params - 8);
  int v45 = (unsigned __int8 *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236126188(&qword_268853720);
  MEMORY[0x270FA5388](v8 - 8);
  *(void *)&long long v48 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2361FD748();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_236126188(&qword_268853728);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2361FD8F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  uint64_t v20 = type metadata accessor for PBPropertyValue(0);
  swift_bridgeObjectRetain();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v49 = *v0;
  sub_2361FF218();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  sub_2361348B8((uint64_t)v0 + *(int *)(v20 + 28), (uint64_t)v15, &qword_268853728);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_2361FD8E8();
    sub_23613491C((uint64_t)v15, &qword_268853728);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  sub_2361FD8D8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_23615A26C();
  uint64_t v21 = v47;
  sub_2361FF218();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v21);
  unint64_t v22 = v50;
  unint64_t v23 = v51;
  uint64_t v24 = v48;
  sub_2361348B8((uint64_t)v1 + *(int *)(v20 + 20), v48, &qword_268853720);
  uint64_t v25 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v26 = v41;
        sub_23615A2C4(v24, v41, type metadata accessor for PBPropertySingleFloatParam);
        unint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_2361FE9B8();
        sub_2361FF048();
        uint64_t v27 = type metadata accessor for PBPropertySingleFloatParam;
        goto LABEL_17;
      case 2u:
        uint64_t v28 = v45;
        sub_23615A2C4(v24, (uint64_t)v45, type metadata accessor for PBPropertyBookReadParams);
        unint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_2361FEF98();
        swift_bridgeObjectRelease();
        unint64_t v50 = 0x736572676F727020;
        unint64_t v51 = 0xEA00000000003D73;
        sub_236126188(&qword_26AD76040);
        uint64_t v29 = swift_allocObject();
        long long v48 = xmmword_23620E120;
        *(_OWORD *)(v29 + 16) = xmmword_23620E120;
        int v30 = *((_DWORD *)v28 + 1);
        uint64_t v31 = MEMORY[0x263F8D648];
        *(void *)(v29 + 56) = MEMORY[0x263F8D5C8];
        *(void *)(v29 + 64) = v31;
        *(_DWORD *)(v29 + 32) = v30;
        sub_2361FE8F8();
        sub_2361FE9B8();
        swift_bridgeObjectRelease();
        sub_2361FE9B8();
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v48;
        int v33 = *v28;
        unint64_t v34 = sub_23613B7F0();
        uint64_t v35 = 20302;
        if (v33) {
          uint64_t v35 = 5457241;
        }
        *(void *)(v32 + 56) = MEMORY[0x263F8D310];
        *(void *)(v32 + 64) = v34;
        if (v33) {
          unint64_t v36 = 0xE300000000000000;
        }
        else {
          unint64_t v36 = 0xE200000000000000;
        }
        *(void *)(v32 + 32) = v35;
        *(void *)(v32 + 40) = v36;
        sub_2361FE8F8();
        sub_2361FE9B8();
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for PBPropertyBookReadParams;
        uint64_t v38 = (uint64_t)v28;
        goto LABEL_18;
      case 3u:
        uint64_t v26 = v43;
        sub_23615A2C4(v24, v43, type metadata accessor for PBPropertyMarkedAsFinishedParam);
        unint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_2361FE9B8();
        sub_2361FF048();
        uint64_t v27 = type metadata accessor for PBPropertyMarkedAsFinishedParam;
        goto LABEL_17;
      case 4u:
        uint64_t v26 = v44;
        sub_23615A2C4(v24, v44, type metadata accessor for PBPropertyBookImpressionParam);
        unint64_t v50 = 0;
        unint64_t v51 = 0xE000000000000000;
        sub_2361FEF98();
        swift_bridgeObjectRelease();
        unint64_t v50 = 0xD000000000000026;
        unint64_t v51 = 0x800000023620AF00;
        sub_2361FE9B8();
        swift_bridgeObjectRelease();
        uint64_t v27 = type metadata accessor for PBPropertyBookImpressionParam;
LABEL_17:
        uint64_t v37 = v27;
        uint64_t v38 = v26;
LABEL_18:
        sub_23615A32C(v38, v37);
        break;
      default:
        sub_23615A32C(v24, type metadata accessor for PBPropertyValue.OneOf_Params);
        break;
    }
  }
  unint64_t v50 = v22;
  unint64_t v51 = v23;
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_236159E94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PBPropertyValue(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_236126188(&qword_268853718);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  uint64_t v13 = type metadata accessor for PBPropertyBundle(0);
  sub_2361348B8(v1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_268853718);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    void *v12 = 0;
    v12[1] = 0;
    void v12[2] = 0;
    uint64_t v12[3] = 0xE000000000000000;
    void v12[4] = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    sub_23613491C((uint64_t)v8, &qword_268853718);
  }
  else
  {
    sub_23615A2C4((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBPropertyConfiguration);
  }
  swift_bridgeObjectRetain();
  sub_23615A32C((uint64_t)v12, type metadata accessor for PBPropertyConfiguration);
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v14 = *(void *)(*(void *)v1 + 16);
  if (v14)
  {
    uint64_t v15 = *(void *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v16 = *(void *)(v3 + 72);
    v20[1] = *(void *)v1;
    swift_bridgeObjectRetain_n();
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    do
    {
      sub_23615A208(v15, (uint64_t)v5);
      uint64_t v21 = v17;
      unint64_t v22 = v18;
      swift_bridgeObjectRetain();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      sub_2361595F4();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      uint64_t v17 = v21;
      unint64_t v18 = v22;
      sub_23615A32C((uint64_t)v5, type metadata accessor for PBPropertyValue);
      swift_bridgeObjectRelease();
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_23615A208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBPropertyValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23615A26C()
{
  unint64_t result = qword_268852F48;
  if (!qword_268852F48)
  {
    sub_2361FD748();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268852F48);
  }
  return result;
}

uint64_t sub_23615A2C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23615A32C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ReadingHistory.Day.readingTime.getter()
{
  return *(void *)v0;
}

uint64_t ReadingHistory.Day.readingTime.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ReadingHistory.Day.readingTime.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.Day.goal.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ReadingHistory.Day.goal.setter(uint64_t result)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  return result;
}

uint64_t (*ReadingHistory.Day.goal.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.Day.isStreakDay.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ReadingHistory.Day.isStreakDay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReadingHistory.Day.isStreakDay.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.Day.description.getter()
{
  return 0x3A656D69747BLL;
}

BookDataStore::ReadingHistory::Day __swiftcall ReadingHistory.Day.init(readingTime:goal:isStreakDay:)(Swift::Int readingTime, Swift::Int goal, Swift::Bool isStreakDay)
{
  *(void *)uint64_t v3 = readingTime;
  *(void *)(v3 + _Block_object_dispose(&STACK[0x3B0], 8) = goal;
  *(unsigned char *)(v3 + 16) = isStreakDay;
  result.goal = goal;
  result.readingTime = readingTime;
  result.isStreakDay = isStreakDay;
  return result;
}

uint64_t static ReadingHistory.Day.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_23615A5BC()
{
  uint64_t v1 = 1818324839;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B61657274537369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x54676E6964616572;
  }
}

uint64_t sub_23615A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236161850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23615A648(uint64_t a1)
{
  unint64_t v2 = sub_23615A860();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615A684(uint64_t a1)
{
  unint64_t v2 = sub_23615A860();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.Day.encode(to:)(void *a1)
{
  uint64_t v4 = sub_236126188(&qword_268853730);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  int v10 = *(unsigned __int8 *)(v1 + 16);
  sub_2361261CC(a1, a1[3]);
  sub_23615A860();
  sub_2361FF338();
  char v13 = 0;
  sub_2361FF1E8();
  if (!v2)
  {
    char v12 = 1;
    sub_2361FF1E8();
    char v11 = 2;
    sub_2361FF1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23615A860()
{
  unint64_t result = qword_268853738;
  if (!qword_268853738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853738);
  }
  return result;
}

uint64_t ReadingHistory.Day.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_236126188(&qword_268853740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  sub_23615A860();
  sub_2361FF328();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_2361FF178();
    char v15 = 1;
    uint64_t v11 = sub_2361FF178();
    char v14 = 2;
    char v12 = sub_2361FF158();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v11;
    *(unsigned char *)(a2 + 16) = v12 & 1;
  }
  return sub_23612EF9C((uint64_t)a1);
}

uint64_t sub_23615AA80(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_23615AAB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Day.init(from:)(a1, a2);
}

uint64_t sub_23615AACC(void *a1)
{
  return ReadingHistory.Day.encode(to:)(a1);
}

uint64_t ReadingHistory.DayEntry.date.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadingHistory.DayEntry.date.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReadingHistory.DayEntry.date.modify())()
{
  return nullsub_60;
}

__n128 ReadingHistory.DayEntry.day.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[2].n128_u8[0];
  __n128 result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 ReadingHistory.DayEntry.day.setter(__n128 *a1)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  v1[1] = *a1;
  v1[2].n128_u8[0] = v2;
  return result;
}

uint64_t (*ReadingHistory.DayEntry.day.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.DayEntry.description.getter()
{
  return 123;
}

void __swiftcall ReadingHistory.DayEntry.init(date:day:)(BookDataStore::ReadingHistory::DayEntry *__return_ptr retstr, Swift::String date, BookDataStore::ReadingHistory::Day day)
{
  char v3 = *(unsigned char *)(day.readingTime + 16);
  retstr->date = date;
  *(_OWORD *)&retstr->day.readingTime = *(_OWORD *)day.readingTime;
  retstr->day.isStreakDay = v3;
}

uint64_t sub_23615AC84()
{
  if (*v0) {
    return 7954788;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_23615ACB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2361619C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23615ACD8(uint64_t a1)
{
  unint64_t v2 = sub_23615EFA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615AD14(uint64_t a1)
{
  unint64_t v2 = sub_23615EFA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.DayEntry.encode(to:)(void *a1)
{
  uint64_t v4 = sub_236126188(&qword_268853748);
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v7;
  int v15 = *(unsigned __int8 *)(v1 + 32);
  sub_2361261CC(a1, a1[3]);
  sub_23615EFA4();
  sub_2361FF338();
  LOBYTE(v12) = 0;
  sub_2361FF1B8();
  if (!v2)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v9;
    char v14 = v15;
    char v16 = 1;
    sub_23615EFF8();
    sub_2361FF1F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v4);
}

uint64_t ReadingHistory.DayEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_236126188(&qword_268853760);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  sub_23615EFA4();
  sub_2361FF328();
  if (v2) {
    return sub_23612EF9C((uint64_t)a1);
  }
  LOBYTE(v15) = 0;
  uint64_t v9 = sub_2361FF148();
  uint64_t v11 = v10;
  char v17 = 1;
  sub_23615F04C();
  swift_bridgeObjectRetain();
  sub_2361FF188();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v12 = v16;
  long long v13 = v15;
  *(void *)a2 = v9;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v11;
  *(_OWORD *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 32) = v12;
  sub_23612EF9C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23615B104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.DayEntry.init(from:)(a1, a2);
}

uint64_t sub_23615B11C(void *a1)
{
  return ReadingHistory.DayEntry.encode(to:)(a1);
}

uint64_t ReadingHistory.Streak.length.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
}

uint64_t ReadingHistory.Streak.description.getter()
{
  return 0x65746144646E657BLL;
}

uint64_t ReadingHistory.Streak.init(endDate:length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

BOOL static ReadingHistory.Streak.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_2361FD718() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  return *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_23615B368()
{
  if (*v0) {
    return 0x6874676E656CLL;
  }
  else {
    return 0x65746144646E65;
  }
}

uint64_t sub_23615B3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236161A9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23615B3C8(uint64_t a1)
{
  unint64_t v2 = sub_23615F0C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615B404(uint64_t a1)
{
  unint64_t v2 = sub_23615F0C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.Streak.encode(to:)(void *a1)
{
  uint64_t v3 = sub_236126188(&qword_268853770);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361261CC(a1, a1[3]);
  sub_23615F0C0();
  sub_2361FF338();
  v8[15] = 0;
  sub_2361FD748();
  sub_23615F114(&qword_268852EE8, MEMORY[0x263F07490]);
  sub_2361FF1F8();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Streak(0);
    v8[14] = 1;
    sub_2361FF1E8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingHistory.Streak.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_2361FD748();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_236126188(&qword_268853780);
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  sub_23615F0C0();
  sub_2361FF328();
  if (v2) {
    return sub_23612EF9C((uint64_t)a1);
  }
  uint64_t v19 = v11;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  char v26 = 0;
  sub_23615F114(&qword_268852F08, MEMORY[0x263F07490]);
  uint64_t v14 = v23;
  sub_2361FF188();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v6, v14);
  char v25 = 1;
  uint64_t v15 = sub_2361FF178();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  uint64_t v17 = (uint64_t)v19;
  uint64_t v16 = v20;
  *(void *)&v19[*(int *)(v9 + 20)] = v15;
  sub_23615F468(v17, v16, type metadata accessor for ReadingHistory.Streak);
  sub_23612EF9C((uint64_t)a1);
  return sub_23615F4D0(v17, type metadata accessor for ReadingHistory.Streak);
}

BOOL sub_23615B934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_2361FD718() & 1) != 0 && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_23615B988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Streak.init(from:)(a1, a2);
}

uint64_t sub_23615B9A0(void *a1)
{
  return ReadingHistory.Streak.encode(to:)(a1);
}

uint64_t ReadingHistory.State.currentStreak.getter()
{
  return *(void *)v0;
}

uint64_t ReadingHistory.State.currentStreak.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ReadingHistory.State.currentStreak.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.State.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_23615F17C(v3, a1);
}

uint64_t ReadingHistory.State.longestStreak.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_23615F1E4(a1, v3);
}

uint64_t (*ReadingHistory.State.longestStreak.modify())()
{
  return nullsub_60;
}

__n128 ReadingHistory.State.today.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 24));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t ReadingHistory.State.today.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = type metadata accessor for ReadingHistory.State(0);
  uint64_t v6 = v1 + *(int *)(result + 24);
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + _Block_object_dispose(&STACK[0x3B0], 8) = v3;
  *(unsigned char *)(v6 + 16) = v4;
  return result;
}

uint64_t (*ReadingHistory.State.today.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.State.readingHistory.getter()
{
  type metadata accessor for ReadingHistory.State(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistory.State.readingHistory.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ReadingHistory.State(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ReadingHistory.State.readingHistory.modify())()
{
  return nullsub_60;
}

uint64_t ReadingHistory.State.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236126188(&qword_26AD76040);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23620EF20;
  *(void *)&long long v41 = *v0;
  sub_23615F24C();
  uint64_t v6 = sub_2361FEE88();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_23613B7F0();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  uint64_t v11 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_23615F17C((uint64_t)v1 + v11[5], (uint64_t)v4);
  uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v4, 1, v12) == 1)
  {
    sub_23613491C((uint64_t)v4, (uint64_t *)&unk_26AD74BD0);
    uint64_t v13 = (uint64_t *)(v5 + 72);
    *(void *)(v5 + 96) = v9;
    *(void *)(v5 + 104) = v10;
  }
  else
  {
    uint64_t v14 = ReadingHistory.Streak.description.getter();
    unint64_t v16 = v15;
    sub_23615F4D0((uint64_t)v4, type metadata accessor for ReadingHistory.Streak);
    uint64_t v13 = (uint64_t *)(v5 + 72);
    *(void *)(v5 + 96) = v9;
    *(void *)(v5 + 104) = v10;
    if (v16)
    {
      *uint64_t v13 = v14;
      goto LABEL_6;
    }
  }
  *uint64_t v13 = 7104878;
  unint64_t v16 = 0xE300000000000000;
LABEL_6:
  *(void *)(v5 + 80) = v16;
  uint64_t v17 = (char *)v1 + v11[6];
  char v18 = v17[16];
  long long v41 = *(_OWORD *)v17;
  char v42 = v18;
  uint64_t v19 = ReadingHistory.Day.description.getter();
  *(void *)(v5 + 136) = v9;
  *(void *)(v5 + 144) = v10;
  *(void *)(v5 + 112) = v19;
  *(void *)(v5 + 120) = v20;
  uint64_t v21 = *(void *)((char *)v1 + v11[7]);
  int64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (v22)
  {
    unint64_t v35 = v10;
    uint64_t v36 = v5;
    uint64_t v40 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_23615E144(0, v22, 0);
    uint64_t v23 = v40;
    v34[1] = v21;
    uint64_t v24 = v21 + 64;
    do
    {
      uint64_t v26 = *(void *)(v24 - 16);
      uint64_t v25 = *(void *)(v24 - 8);
      *(void *)&long long v41 = 123;
      *((void *)&v41 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain_n();
      sub_2361FE9B8();
      sub_2361FE9B8();
      uint64_t v38 = 0;
      unint64_t v39 = 0xE000000000000000;
      sub_2361FEF98();
      swift_bridgeObjectRelease();
      uint64_t v37 = v26;
      uint64_t v38 = 0x3A656D69747BLL;
      unint64_t v39 = 0xE600000000000000;
      sub_2361FF218();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      sub_2361FE9B8();
      uint64_t v37 = v25;
      sub_2361FF218();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      sub_2361FE9B8();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      sub_2361FE9B8();
      sub_2361FE9B8();
      swift_bridgeObjectRelease();
      sub_2361FE9B8();
      swift_bridgeObjectRelease_n();
      long long v27 = v41;
      uint64_t v40 = v23;
      unint64_t v29 = *(void *)(v23 + 16);
      unint64_t v28 = *(void *)(v23 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_23615E144(v28 > 1, v29 + 1, 1);
        uint64_t v23 = v40;
      }
      *(void *)(v23 + 16) = v29 + 1;
      *(_OWORD *)(v23 + 16 * v29 + 32) = v27;
      v24 += 40;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    unint64_t v10 = v35;
    uint64_t v5 = v36;
    uint64_t v9 = MEMORY[0x263F8D310];
  }
  *(void *)&long long v41 = v23;
  sub_236126188(&qword_268853790);
  sub_23615F2A0();
  uint64_t v30 = sub_2361FE898();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 176) = v9;
  *(void *)(v5 + 184) = v10;
  *(void *)(v5 + 152) = v30;
  *(void *)(v5 + 160) = v32;
  return sub_2361FE8F8();
}

uint64_t ReadingHistory.State.init(currentStreak:longestStreak:today:readingHistory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  char v11 = *((unsigned char *)a3 + 16);
  uint64_t v12 = (int *)type metadata accessor for ReadingHistory.State(0);
  uint64_t v13 = (uint64_t)a5 + v12[5];
  uint64_t v14 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a5 = a1;
  uint64_t result = sub_23615F1E4(a2, v13);
  unint64_t v16 = (char *)a5 + v12[6];
  *(void *)unint64_t v16 = v9;
  *((void *)v16 + 1) = v10;
  v16[16] = v11;
  *(void *)((char *)a5 + v12[7]) = a4;
  return result;
}

uint64_t sub_23615C1A4()
{
  uint64_t result = 0x53746E6572727563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x53747365676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x7961646F74;
      break;
    case 3:
      uint64_t result = 0x48676E6964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23615C244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236161B88(a1, a2);
  *a3 = result;
  return result;
}

void sub_23615C26C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23615C278(uint64_t a1)
{
  unint64_t v2 = sub_23615F2FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615C2B4(uint64_t a1)
{
  unint64_t v2 = sub_23615F2FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.State.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_236126188(&qword_268853798);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  sub_23615F2FC();
  sub_2361FF338();
  LOBYTE(v15) = 0;
  sub_2361FF1E8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ReadingHistory.State(0);
    LOBYTE(v15) = 1;
    type metadata accessor for ReadingHistory.Streak(0);
    sub_23615F114(&qword_2688537A8, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
    sub_2361FF1A8();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 24));
    char v11 = *((unsigned char *)v10 + 16);
    long long v15 = *v10;
    char v16 = v11;
    char v14 = 2;
    sub_23615EFF8();
    sub_2361FF1F8();
    *(void *)&long long v15 = *(void *)(v3 + *(int *)(v9 + 28));
    char v14 = 3;
    sub_236126188(&qword_2688537B0);
    sub_23615F3A4(&qword_2688537B8, (void (*)(void))sub_23615F350);
    sub_2361FF1F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ReadingHistory.State.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v3 - 8);
  long long v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_236126188(&qword_2688537C8);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistory.State(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_2361261CC(a1, a1[3]);
  sub_23615F2FC();
  unint64_t v28 = v6;
  uint64_t v13 = (uint64_t)v30;
  sub_2361FF328();
  if (v13)
  {
    sub_23612EF9C((uint64_t)a1);
    return sub_23613491C(v11, (uint64_t *)&unk_26AD74BD0);
  }
  else
  {
    uint64_t v30 = a1;
    uint64_t v14 = (uint64_t)v10;
    uint64_t v24 = v7;
    uint64_t v16 = v26;
    uint64_t v15 = (uint64_t)v27;
    LOBYTE(v31) = 0;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    *uint64_t v10 = sub_2361FF178();
    LOBYTE(v31) = 1;
    sub_23615F114(&qword_2688537D0, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
    sub_2361FF138();
    sub_23615F1E4(v15, v11);
    char v33 = 2;
    sub_23615F04C();
    sub_2361FF188();
    char v19 = v32;
    uint64_t v20 = v24;
    uint64_t v21 = v14 + *(int *)(v24 + 24);
    *(_OWORD *)uint64_t v21 = v31;
    *(unsigned char *)(v21 + 16) = v19;
    sub_236126188(&qword_2688537B0);
    char v33 = 3;
    sub_23615F3A4(&qword_2688537D8, (void (*)(void))sub_23615F414);
    sub_2361FF188();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    *(void *)(v14 + *(int *)(v20 + 28)) = v31;
    sub_23615F468(v14, v25, type metadata accessor for ReadingHistory.State);
    sub_23612EF9C((uint64_t)v30);
    return sub_23615F4D0(v14, type metadata accessor for ReadingHistory.State);
  }
}

uint64_t sub_23615C97C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.State.init(from:)(a1, a2);
}

uint64_t sub_23615C994(void *a1)
{
  return ReadingHistory.State.encode(to:)(a1);
}

unint64_t static ReadingHistory.UserDefaults.sessionStartOffset.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_23615C9CC()
{
  return 0;
}

void sub_23615C9D8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23615C9E4(uint64_t a1)
{
  unint64_t v2 = sub_23615F530();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615CA20(uint64_t a1)
{
  unint64_t v2 = sub_23615F530();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.encode(to:)(void *a1)
{
  return sub_23615D324(a1, &qword_2688537E8, (void (*)(void))sub_23615F530);
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.init(from:)(uint64_t a1)
{
  return sub_23612EF9C(a1);
}

uint64_t sub_23615CACC(uint64_t a1)
{
  return sub_23612EF9C(a1);
}

uint64_t sub_23615CAF4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23615D4A8(a1, a2, a3, &qword_2688537E8, (void (*)(void))sub_23615F530);
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakV7endDate10Foundation0H0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2361FD748();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

double ReadingHistory.Notification.AddFakeSession.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Notification.AddFakeSession(0) + 20));
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(date:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  *(double *)(a2 + *(int *)(result + 20)) = a3;
  return result;
}

uint64_t sub_23615CC3C()
{
  if (*v0) {
    return 0x6E6F697461727564;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_23615CC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_236161DA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23615CC98(uint64_t a1)
{
  unint64_t v2 = sub_23615F5DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615CCD4(uint64_t a1)
{
  unint64_t v2 = sub_23615F5DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.Notification.AddFakeSession.encode(to:)(void *a1)
{
  uint64_t v3 = sub_236126188(&qword_2688537F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2361261CC(a1, a1[3]);
  sub_23615F5DC();
  sub_2361FF338();
  v8[15] = 0;
  sub_2361FD748();
  sub_23615F114(&qword_268852EE8, MEMORY[0x263F07490]);
  sub_2361FF1F8();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
    v8[14] = 1;
    sub_2361FF1D8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_2361FD748();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_236126188(&qword_268853808);
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  sub_23615F5DC();
  sub_2361FF328();
  if (v2) {
    return sub_23612EF9C((uint64_t)a1);
  }
  uint64_t v21 = v11;
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  char v28 = 0;
  sub_23615F114(&qword_268852F08, MEMORY[0x263F07490]);
  uint64_t v14 = v25;
  sub_2361FF188();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v6, v14);
  char v27 = 1;
  sub_2361FF168();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v26);
  uint64_t v18 = (uint64_t)v21;
  uint64_t v17 = v22;
  *(void *)&v21[*(int *)(v9 + 20)] = v16;
  sub_23615F468(v18, v17, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
  sub_23612EF9C((uint64_t)a1);
  return sub_23615F4D0(v18, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_23615D20C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Notification.AddFakeSession.init(from:)(a1, a2);
}

uint64_t sub_23615D224(void *a1)
{
  return ReadingHistory.Notification.AddFakeSession.encode(to:)(a1);
}

uint64_t sub_23615D240@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23615D270(uint64_t a1)
{
  unint64_t v2 = sub_23615F630();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23615D2AC(uint64_t a1)
{
  unint64_t v2 = sub_23615F630();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReadingHistory.Notification.ClearToday.encode(to:)(void *a1)
{
  return sub_23615D324(a1, &qword_268853810, (void (*)(void))sub_23615F630);
}

uint64_t sub_23615D324(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = sub_236126188(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  a3();
  sub_2361FF338();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ReadingHistory.Notification.ClearToday.init(from:)(uint64_t a1)
{
  return sub_23612EF9C(a1);
}

uint64_t sub_23615D46C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23615D4A8(a1, a2, a3, &qword_268853810, (void (*)(void))sub_23615F630);
}

uint64_t sub_23615D4A8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_236126188(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361261CC(a1, a1[3]);
  a5();
  sub_2361FF338();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BDSReadingHistoryDayInfo __swiftcall ReadingHistory.Day.toInfo()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = *((unsigned __int8 *)v0 + 16);
  id v4 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
  uint64_t v5 = (objc_class *)objc_msgSend(v4, sel_initWithReadingTime_goal_isStreakDay_, v1, v2, v3);
  result._goal = v8;
  result._readingTime = v7;
  result.super.Class isa = v5;
  result._isStreakDay = v6;
  return result;
}

id static ReadingHistory.Day.from(info:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_readingTime);
  id v5 = objc_msgSend(a1, sel_goal);
  id result = objc_msgSend(a1, sel_isStreakDay);
  *(void *)a2 = v4;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v5;
  *(unsigned char *)(a2 + 16) = (_BYTE)result;
  return result;
}

BDSReadingHistoryDayEntryInfo __swiftcall ReadingHistory.DayEntry.toInfo()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 32);
  id v4 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(v4, sel_initWithReadingTime_goal_isStreakDay_, v1, v2, v3);
  id v6 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
  int64_t v7 = (void *)sub_2361FE8C8();
  swift_bridgeObjectRelease();
  int64_t v8 = (objc_class *)objc_msgSend(v6, sel_initWithDate_day_, v7, v5);

  uint64_t v11 = v8;
  result._day = v10;
  result._date = v9;
  result.super.Class isa = v11;
  return result;
}

void static ReadingHistory.DayEntry.from(info:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_date);
  uint64_t v5 = sub_2361FE8D8();
  uint64_t v7 = v6;

  id v8 = [a1 day];
  id v9 = objc_msgSend(v8, sel_readingTime);
  id v10 = objc_msgSend(v8, sel_goal);
  unsigned __int8 v11 = objc_msgSend(v8, sel_isStreakDay);

  *(void *)a2 = v5;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v7;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
}

BDSReadingHistoryStreakInfo __swiftcall ReadingHistory.Streak.toInfo()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
  id v2 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
  uint64_t v3 = (void *)sub_2361FD6E8();
  id v4 = (objc_class *)objc_msgSend(v2, sel_initWithEndDate_length_, v3, v1);

  uint64_t v7 = v4;
  result._length = v6;
  result._endDate = v5;
  result.super.Class isa = v7;
  return result;
}

uint64_t static ReadingHistory.Streak.from(info:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_endDate);
  sub_2361FD728();

  id v5 = objc_msgSend(a1, sel_length);
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a2 + *(int *)(result + 20)) = v5;
  return result;
}

void __swiftcall ReadingHistory.State.toInfo()(BDSReadingHistoryStateInfo *__return_ptr retstr)
{
  id v2 = v1;
  uint64_t v3 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v2;
  uint64_t v7 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_23615F17C((uint64_t)v2 + v7[5], (uint64_t)v5);
  uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1)
  {
    sub_23613491C((uint64_t)v5, (uint64_t *)&unk_26AD74BD0);
    id v9 = 0;
  }
  else
  {
    uint64_t v10 = *(void *)&v5[*(int *)(v8 + 20)];
    id v11 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
    uint64_t v12 = (void *)sub_2361FD6E8();
    id v9 = objc_msgSend(v11, sel_initWithEndDate_length_, v12, v10);

    sub_23615F4D0((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
  }
  uint64_t v13 = (char *)v2 + v7[6];
  id v14 = objc_msgSend(objc_allocWithZone((Class)BDSReadingHistoryDayInfo), sel_initWithReadingTime_goal_isStreakDay_, *(void *)v13, *((void *)v13 + 1), v13[16]);
  uint64_t v15 = v14;
  uint64_t v16 = *(uint64_t *)((char *)v2 + v7[7]);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    id v29 = v14;
    id v30 = v9;
    uint64_t v31 = v6;
    uint64_t v32 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2361FF018();
    v28[1] = v16;
    uint64_t v18 = (unsigned __int8 *)(v16 + 64);
    do
    {
      uint64_t v19 = *((void *)v18 - 2);
      uint64_t v20 = *((void *)v18 - 1);
      unsigned int v21 = *v18;
      v18 += 40;
      id v22 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
      swift_bridgeObjectRetain();
      id v23 = objc_msgSend(v22, (SEL)0x264CA6D8FLL, v19, v20, v21);
      id v24 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
      uint64_t v25 = (void *)sub_2361FE8C8();
      objc_msgSend(v24, sel_initWithDate_day_, v25, v23);
      swift_bridgeObjectRelease();

      sub_2361FEFF8();
      sub_2361FF028();
      sub_2361FF038();
      sub_2361FF008();
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    id v9 = v30;
    uint64_t v6 = v31;
    uint64_t v15 = v29;
  }
  id v26 = objc_allocWithZone((Class)BDSReadingHistoryStateInfo);
  sub_23615F684();
  char v27 = (void *)sub_2361FEA68();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_initWithCurrentStreak_longestStreak_today_readingHistory_, v6, v9, v15, v27);
}

uint64_t static ReadingHistory.State.from(info:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_currentStreak);
  id v8 = objc_msgSend(a1, sel_longestStreak);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_endDate);
    sub_2361FD728();

    id v11 = objc_msgSend(v9, sel_length);
    uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
    *(void *)&v6[*(int *)(v12 + 20)] = v11;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  id v14 = objc_msgSend(a1, sel_today);
  id v15 = objc_msgSend(v14, sel_readingTime);
  id v16 = objc_msgSend(v14, sel_goal);
  unsigned int v17 = objc_msgSend(v14, sel_isStreakDay);

  id v18 = objc_msgSend(a1, sel_readingHistory);
  sub_23615F684();
  unint64_t v19 = sub_2361FEA78();

  unint64_t v20 = v19;
  unint64_t v50 = v19;
  if (!(v19 >> 62))
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x263F8EE78];
LABEL_17:
    uint64_t v38 = (int *)type metadata accessor for ReadingHistory.State(0);
    uint64_t v39 = (uint64_t)a2 + v38[5];
    uint64_t v40 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    *a2 = v7;
    uint64_t result = sub_23615F1E4((uint64_t)v6, v39);
    long long v41 = (char *)a2 + v38[6];
    *(void *)long long v41 = v15;
    *((void *)v41 + 1) = v16;
    v41[16] = v17;
    *(void *)((char *)a2 + v38[7]) = v24;
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = v50;
  uint64_t v21 = sub_2361FF0B8();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v51 = MEMORY[0x263F8EE78];
  uint64_t result = sub_23615E164(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v21;
    HIDWORD(v42) = v17;
    id v43 = v16;
    id v44 = v15;
    id v45 = v7;
    uint64_t v46 = v6;
    uint64_t v23 = 0;
    uint64_t v24 = v51;
    uint64_t v47 = a2;
    unint64_t v48 = v20 & 0xC000000000000001;
    do
    {
      if (v48) {
        id v25 = (id)MEMORY[0x237DFE000](v23, v20);
      }
      else {
        id v25 = *(id *)(v20 + 8 * v23 + 32);
      }
      id v26 = v25;
      id v27 = objc_msgSend(v25, sel_date);
      uint64_t v28 = sub_2361FE8D8();
      uint64_t v30 = v29;

      id v31 = [v26 day];
      id v32 = objc_msgSend(v31, sel_readingTime);
      id v33 = objc_msgSend(v31, sel_goal);
      unsigned __int8 v34 = objc_msgSend(v31, sel_isStreakDay);

      uint64_t v51 = v24;
      unint64_t v36 = *(void *)(v24 + 16);
      unint64_t v35 = *(void *)(v24 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_23615E164(v35 > 1, v36 + 1, 1);
        uint64_t v24 = v51;
      }
      ++v23;
      *(void *)(v24 + 16) = v36 + 1;
      uint64_t v37 = v24 + 40 * v36;
      *(void *)(v37 + 32) = v28;
      *(void *)(v37 + 40) = v30;
      *(void *)(v37 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v32;
      *(void *)(v37 + 56) = v33;
      *(unsigned char *)(v37 + 64) = v34;
      unint64_t v20 = v50;
    }
    while (v49 != v23);
    swift_bridgeObjectRelease();
    uint64_t v6 = v46;
    a2 = v47;
    id v15 = v44;
    id v7 = v45;
    id v16 = v43;
    LOBYTE(v17) = BYTE4(v42);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t BDSReadingHistoryStreakInfo.toStreak()@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_endDate);
  sub_2361FD728();

  id v4 = objc_msgSend(v1, sel_length);
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a1 + *(int *)(result + 20)) = v4;
  return result;
}

BookDataStore::ReadingHistory::Day __swiftcall BDSReadingHistoryDayInfo.toDay()()
{
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_readingTime);
  id v4 = objc_msgSend(v1, sel_goal);
  id v5 = objc_msgSend(v1, sel_isStreakDay);
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + _Block_object_dispose(&STACK[0x3B0], 8) = v4;
  *(unsigned char *)(v2 + 16) = (_BYTE)v5;
  result.goal = v6;
  result.readingTime = (Swift::Int)v5;
  result.isStreakDay = v7;
  return result;
}

uint64_t sub_23615E144(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23615E1C0(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_23615E164(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23615E340(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_23615E184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_23615E8A0(a1, a2, a3, (void *)*v3, &qword_2688538C0, MEMORY[0x263EFD2B0]);
  *id v3 = result;
  return result;
}

uint64_t sub_23615E1C0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_236126188((uint64_t *)&unk_268853960);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23615E32C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_23615E660(a1, a2, a3, a4, &qword_2688538F8, (uint64_t *)&unk_268853900);
}

uint64_t sub_23615E340(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_236126188(&qword_26AD76030);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23615E4B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_236126188(&qword_2688538E8);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23615E618(char a1, int64_t a2, char a3, void *a4)
{
  return sub_23615E8A0(a1, a2, a3, a4, &qword_2688538F0, MEMORY[0x263F07490]);
}

uint64_t sub_23615E638(char a1, int64_t a2, char a3, void *a4)
{
  return sub_23615E660(a1, a2, a3, a4, &qword_2688538C8, &qword_2688538D0);
}

uint64_t sub_23615E64C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_23615E660(a1, a2, a3, a4, &qword_2688538D8, &qword_26AD75FC8);
}

uint64_t sub_23615E660(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_236126188(a5);
  uint64_t v13 = *(void *)(sub_236126188(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_236126188(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  id v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23615E8A0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_236126188(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  id v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t _s13BookDataStore14ReadingHistoryO5StateV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236126188(&qword_26AD74BE8);
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  size_t v17 = (char *)&v37 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  if (*a1 != *a2) {
    goto LABEL_13;
  }
  uint64_t v20 = type metadata accessor for ReadingHistory.State(0);
  uint64_t v21 = a1;
  uint64_t v22 = v20;
  uint64_t v23 = *(int *)(v20 + 20);
  uint64_t v38 = v21;
  sub_23615F17C((uint64_t)v21 + v23, (uint64_t)v19);
  uint64_t v39 = v22;
  uint64_t v40 = a2;
  sub_23615F17C((uint64_t)a2 + *(int *)(v22 + 20), (uint64_t)v17);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23615F17C((uint64_t)v19, (uint64_t)v10);
  sub_23615F17C((uint64_t)v17, v24);
  unint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_23615F17C((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      sub_236161E84(v24, (uint64_t)v7);
      if (sub_2361FD718())
      {
        uint64_t v34 = *(int *)(v4 + 20);
        uint64_t v35 = *(void *)&v14[v34];
        uint64_t v36 = *(void *)&v7[v34];
        sub_23615F4D0((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
        sub_23613491C((uint64_t)v17, (uint64_t *)&unk_26AD74BD0);
        sub_23613491C((uint64_t)v19, (uint64_t *)&unk_26AD74BD0);
        sub_23615F4D0((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
        sub_23613491C((uint64_t)v10, (uint64_t *)&unk_26AD74BD0);
        if (v35 == v36) {
          goto LABEL_5;
        }
LABEL_13:
        char v26 = 0;
        return v26 & 1;
      }
      sub_23615F4D0((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
      sub_23613491C((uint64_t)v17, (uint64_t *)&unk_26AD74BD0);
      sub_23613491C((uint64_t)v19, (uint64_t *)&unk_26AD74BD0);
      sub_23615F4D0((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
      uint64_t v32 = (uint64_t)v10;
      id v31 = (uint64_t *)&unk_26AD74BD0;
LABEL_12:
      sub_23613491C(v32, v31);
      goto LABEL_13;
    }
    sub_23613491C((uint64_t)v17, (uint64_t *)&unk_26AD74BD0);
    sub_23613491C((uint64_t)v19, (uint64_t *)&unk_26AD74BD0);
    sub_23615F4D0((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
LABEL_11:
    id v31 = &qword_26AD74BE8;
    uint64_t v32 = (uint64_t)v10;
    goto LABEL_12;
  }
  sub_23613491C((uint64_t)v17, (uint64_t *)&unk_26AD74BD0);
  sub_23613491C((uint64_t)v19, (uint64_t *)&unk_26AD74BD0);
  if (v25(v24, 1, v4) != 1) {
    goto LABEL_11;
  }
  sub_23613491C((uint64_t)v10, (uint64_t *)&unk_26AD74BD0);
LABEL_5:
  char v26 = 0;
  uint64_t v27 = *(int *)(v39 + 24);
  uint64_t v28 = (uint64_t)v38 + v27;
  uint64_t v29 = *(void *)((char *)v38 + v27);
  uint64_t v30 = (char *)v40 + v27;
  if (v29 == *(void *)v30
    && *(void *)(v28 + 8) == *((void *)v30 + 1)
    && ((*(unsigned __int8 *)(v28 + 16) ^ v30[16]) & 1) == 0)
  {
    char v26 = sub_2361B9DA0(*(void *)((char *)v38 + *(int *)(v39 + 28)), *(void *)((char *)v40 + *(int *)(v39 + 28)));
  }
  return v26 & 1;
}

uint64_t _s13BookDataStore14ReadingHistoryO8DayEntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_2361FF248(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 ^ v7 ^ 1u;
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_23615EFA4()
{
  unint64_t result = qword_268853750;
  if (!qword_268853750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853750);
  }
  return result;
}

unint64_t sub_23615EFF8()
{
  unint64_t result = qword_268853758;
  if (!qword_268853758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853758);
  }
  return result;
}

unint64_t sub_23615F04C()
{
  unint64_t result = qword_268853768;
  if (!qword_268853768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853768);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistory.Streak(uint64_t a1)
{
  return sub_23615F5A4(a1, qword_26AD74B90);
}

unint64_t sub_23615F0C0()
{
  unint64_t result = qword_268853778;
  if (!qword_268853778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853778);
  }
  return result;
}

uint64_t sub_23615F114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistory.State(uint64_t a1)
{
  return sub_23615F5A4(a1, qword_26AD74AF8);
}

uint64_t sub_23615F17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23615F1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23615F24C()
{
  unint64_t result = qword_268853788;
  if (!qword_268853788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853788);
  }
  return result;
}

unint64_t sub_23615F2A0()
{
  unint64_t result = qword_268853970;
  if (!qword_268853970)
  {
    sub_236126310(&qword_268853790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853970);
  }
  return result;
}

unint64_t sub_23615F2FC()
{
  unint64_t result = qword_2688537A0;
  if (!qword_2688537A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688537A0);
  }
  return result;
}

unint64_t sub_23615F350()
{
  unint64_t result = qword_2688537C0;
  if (!qword_2688537C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688537C0);
  }
  return result;
}

uint64_t sub_23615F3A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_236126310(&qword_2688537B0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23615F414()
{
  unint64_t result = qword_2688537E0;
  if (!qword_2688537E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688537E0);
  }
  return result;
}

uint64_t sub_23615F468(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23615F4D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23615F530()
{
  unint64_t result = qword_2688537F0;
  if (!qword_2688537F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688537F0);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistory.Notification.AddFakeSession(uint64_t a1)
{
  return sub_23615F5A4(a1, qword_26AD74920);
}

uint64_t sub_23615F5A4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_23615F5DC()
{
  unint64_t result = qword_268853800;
  if (!qword_268853800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853800);
  }
  return result;
}

unint64_t sub_23615F630()
{
  unint64_t result = qword_268853818;
  if (!qword_268853818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853818);
  }
  return result;
}

unint64_t sub_23615F684()
{
  unint64_t result = qword_268853820;
  if (!qword_268853820)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268853820);
  }
  return result;
}

unint64_t sub_23615F6C8()
{
  unint64_t result = qword_26AD749B8;
  if (!qword_26AD749B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD749B8);
  }
  return result;
}

unint64_t sub_23615F720()
{
  unint64_t result = qword_26AD749B0;
  if (!qword_26AD749B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD749B0);
  }
  return result;
}

uint64_t sub_23615F774()
{
  return sub_23615F114(&qword_26AD74918, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_23615F7BC()
{
  return sub_23615F114(&qword_26AD74910, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

unint64_t sub_23615F808()
{
  unint64_t result = qword_26AD74908;
  if (!qword_26AD74908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD74908);
  }
  return result;
}

unint64_t sub_23615F860()
{
  unint64_t result = qword_26AD74900;
  if (!qword_26AD74900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD74900);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory()
{
  return &type metadata for ReadingHistory;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Day(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Day(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Day()
{
  return &type metadata for ReadingHistory.Day;
}

uint64_t initializeBufferWithCopyOfBuffer for ReadingHistory.DayEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ReadingHistory.DayEntry()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry()
{
  return &type metadata for ReadingHistory.DayEntry;
}

uint64_t assignWithCopy for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23615FC64);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23615FC7C);
}

uint64_t sub_23615FC80()
{
  return sub_236160D44();
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistory.State(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    BOOL v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_236126188((uint64_t *)&unk_26AD74BD0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    size_t v17 = (char *)v4 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_OWORD *)size_t v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ReadingHistory.State(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for ReadingHistory.Streak(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = sub_2361FD748();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  BOOL v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_2361FD748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  unsigned char v15[16] = v16[16];
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  BOOL v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v20 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v7, v8, v20);
      *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_23615F4D0((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_2361FD748();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[6];
  size_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)size_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  v17[16] = v18[16];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  BOOL v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_2361FD748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  unsigned char v15[16] = v16[16];
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  BOOL v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v21 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v7, v8, v21);
      *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_23615F4D0((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_2361FD748();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  uint8_t v18[16] = v19[16];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23616063C);
}

uint64_t sub_23616063C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236160718);
}

uint64_t sub_236160718(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_2361607DC()
{
  sub_236160890();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_236160890()
{
  if (!qword_26AD74BE0)
  {
    type metadata accessor for ReadingHistory.Streak(255);
    unint64_t v0 = sub_2361FEE38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD74BE0);
    }
  }
}

ValueMetadata *type metadata accessor for ReadingHistory.UserDefaults()
{
  return &type metadata for ReadingHistory.UserDefaults;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification()
{
  return &type metadata for ReadingHistory.Notification;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate;
}

uint64_t *_s13BookDataStore14ReadingHistoryO6StreakVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2361FD748();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_2361FD748();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2361FD748();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236160C4C);
}

uint64_t sub_236160C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2361FD748();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236160CD0);
}

uint64_t sub_236160CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2361FD748();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_236160D44()
{
  uint64_t result = sub_2361FD748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday()
{
  return &type metadata for ReadingHistory.Notification.ClearToday;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.AddFakeSession.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadingHistory.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236160F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.State.CodingKeys()
{
  return &type metadata for ReadingHistory.State.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Streak.CodingKeys()
{
  return &type metadata for ReadingHistory.Streak.CodingKeys;
}

unsigned char *_s13BookDataStore14ReadingHistoryO12NotificationO14AddFakeSessionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23616108CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry.CodingKeys()
{
  return &type metadata for ReadingHistory.DayEntry.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ReadingHistory.Day.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x236161190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Day.CodingKeys()
{
  return &type metadata for ReadingHistory.Day.CodingKeys;
}

unint64_t sub_2361611CC()
{
  unint64_t result = qword_268853828;
  if (!qword_268853828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853828);
  }
  return result;
}

unint64_t sub_236161224()
{
  unint64_t result = qword_268853830;
  if (!qword_268853830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853830);
  }
  return result;
}

unint64_t sub_23616127C()
{
  unint64_t result = qword_268853838;
  if (!qword_268853838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853838);
  }
  return result;
}

unint64_t sub_2361612D4()
{
  unint64_t result = qword_268853840;
  if (!qword_268853840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853840);
  }
  return result;
}

unint64_t sub_23616132C()
{
  unint64_t result = qword_268853848;
  if (!qword_268853848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853848);
  }
  return result;
}

unint64_t sub_236161384()
{
  unint64_t result = qword_268853850;
  if (!qword_268853850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853850);
  }
  return result;
}

unint64_t sub_2361613DC()
{
  unint64_t result = qword_268853858;
  if (!qword_268853858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853858);
  }
  return result;
}

unint64_t sub_236161434()
{
  unint64_t result = qword_268853860;
  if (!qword_268853860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853860);
  }
  return result;
}

unint64_t sub_23616148C()
{
  unint64_t result = qword_268853868;
  if (!qword_268853868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853868);
  }
  return result;
}

unint64_t sub_2361614E4()
{
  unint64_t result = qword_268853870;
  if (!qword_268853870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853870);
  }
  return result;
}

unint64_t sub_23616153C()
{
  unint64_t result = qword_268853878;
  if (!qword_268853878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853878);
  }
  return result;
}

unint64_t sub_236161594()
{
  unint64_t result = qword_268853880;
  if (!qword_268853880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853880);
  }
  return result;
}

unint64_t sub_2361615EC()
{
  unint64_t result = qword_268853888;
  if (!qword_268853888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853888);
  }
  return result;
}

unint64_t sub_236161644()
{
  unint64_t result = qword_268853890;
  if (!qword_268853890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853890);
  }
  return result;
}

unint64_t sub_23616169C()
{
  unint64_t result = qword_268853898;
  if (!qword_268853898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268853898);
  }
  return result;
}

unint64_t sub_2361616F4()
{
  unint64_t result = qword_2688538A0;
  if (!qword_2688538A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688538A0);
  }
  return result;
}

unint64_t sub_23616174C()
{
  unint64_t result = qword_2688538A8;
  if (!qword_2688538A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688538A8);
  }
  return result;
}

unint64_t sub_2361617A4()
{
  unint64_t result = qword_2688538B0;
  if (!qword_2688538B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688538B0);
  }
  return result;
}

unint64_t sub_2361617FC()
{
  unint64_t result = qword_2688538B8;
  if (!qword_2688538B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688538B8);
  }
  return result;
}

uint64_t sub_236161850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x54676E6964616572 && a2 == 0xEB00000000656D69;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B61657274537369 && a2 == 0xEB00000000796144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2361619C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236161A9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236161B88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F74 && a2 == 0xE500000000000000 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x48676E6964616572 && a2 == 0xEE0079726F747369)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_236161DA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_2361FF248() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2361FF248();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_236161E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236161F04(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v2 = sub_236126188((uint64_t *)&unk_26AD75F70);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_236126188(&qword_26AD75FC8);
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  char v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188((uint64_t *)&unk_26AD75FD0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD75F18);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_236126188(&qword_26AD75EC8);
  uint64_t v29 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33, v10);
  uint64_t v17 = (uint64_t *)v6;
  sub_23615936C(&qword_26AD75F10, &qword_26AD75F18);
  uint64_t v31 = v10;
  sub_2361FEA28();
  sub_23615936C((unint64_t *)&unk_26AD75EB8, &qword_26AD75EC8);
  uint64_t v33 = v14;
  sub_2361FEE58();
  uint64_t v18 = v28;
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v20 = v4 + 48;
  uint64_t v19 = v21;
  if (v21(v9, 1, v28) != 1)
  {
    do
    {
      sub_23612D5D0((uint64_t)v9, (uint64_t)v17, &qword_26AD75FC8);
      uint64_t v22 = v20;
      uint64_t v23 = v18;
      uint64_t v24 = *v17;
      uint64_t v25 = sub_236126188((uint64_t *)&unk_26AD75F60);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
      uint64_t v34 = v24;
      sub_2361FE528();
      sub_23613491C((uint64_t)v17, &qword_26AD75FC8);
      sub_2361FEE58();
      uint64_t v18 = v23;
      uint64_t v20 = v22;
    }
    while (v19(v9, 1, v18) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v33);
}

uint64_t sub_23616232C(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v2 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_236126188(&qword_2688538D0);
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  char v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188(&qword_268853980);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD75EE0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_236126188(&qword_268853988);
  uint64_t v29 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33, v10);
  uint64_t v17 = (uint64_t *)v6;
  sub_23615936C(&qword_268853990, &qword_26AD75EE0);
  uint64_t v31 = v10;
  sub_2361FEA28();
  sub_23615936C((unint64_t *)&unk_268853998, &qword_268853988);
  uint64_t v33 = v14;
  sub_2361FEE58();
  uint64_t v18 = v28;
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v20 = v4 + 48;
  uint64_t v19 = v21;
  if (v21(v9, 1, v28) != 1)
  {
    do
    {
      sub_23612D5D0((uint64_t)v9, (uint64_t)v17, &qword_2688538D0);
      uint64_t v22 = v20;
      uint64_t v23 = v18;
      uint64_t v24 = *v17;
      uint64_t v25 = sub_2361FD748();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
      uint64_t v34 = v24;
      type metadata accessor for ReadingHistoryModel(0);
      sub_2361FE528();
      sub_23613491C((uint64_t)v17, &qword_2688538D0);
      sub_2361FEE58();
      uint64_t v18 = v23;
      uint64_t v20 = v22;
    }
    while (v19(v9, 1, v18) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v33);
}

uint64_t sub_236162760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_23617A6B0;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_236159570;
  v13[5] = v10;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_23613F9DC;
  v13[3] = &unk_26E974528;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_2361628DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_23617AEBC;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_236159570;
  v13[5] = v10;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_23613F9DC;
  v13[3] = &unk_26E974820;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236162A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v29 = a2;
  uint64_t v28 = sub_2361FE098();
  uint64_t v5 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2361FE058();
  uint64_t v8 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 56);
  swift_beginAccess();
  if (MEMORY[0x237DFF340](a1 + 64))
  {
    uint64_t v14 = *(void *)(a1 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  v33[0] = v12;
  v33[1] = v11;
  v33[3] = 0;
  void v33[4] = 0;
  v33[2] = v13;
  __int16 v34 = 0;
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v19 = v29;
  uint64_t v18 = v30;
  void v17[2] = v29;
  v17[3] = v18;
  sub_23612D5D0((uint64_t)v33, (uint64_t)(v17 + 4), &qword_26AD75038);
  v17[10] = v16;
  void aBlock[4] = sub_23617A70C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = &unk_26E9745A0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v7, v10, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  swift_release();
  swift_release();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v31;
  swift_unknownObjectWeakInit();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v21;
  v24[3] = v22;
  void v24[4] = v23;
  v24[5] = v19;
  v24[6] = v18;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0x8000000000000000;
  sub_2361AD5AC((uint64_t)sub_23617A7A4, (uint64_t)v24, v23, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 32) = v33[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_236162E74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v6 = sub_2361FE098();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2361FE058();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_236126188(&qword_26AD75030);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)a1 + *(void *)(*a1 + 120);
  swift_beginAccess();
  sub_2361348B8(v18, (uint64_t)v17, &qword_26AD74880);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)a1 + *(void *)(*a1 + 128);
  swift_beginAccess();
  if (MEMORY[0x237DFF340](v19))
  {
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v20 + 8))(a1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  sub_2361FE048();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_2361348B8((uint64_t)v17, (uint64_t)v15, &qword_26AD75030);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v38 = v17;
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  uint64_t v37 = a2;
  uint64_t v26 = v44;
  *(void *)(v25 + 24) = v44;
  sub_23612D5D0((uint64_t)v15, v25 + v23, &qword_26AD75030);
  *(void *)(v25 + v24) = v22;
  void aBlock[4] = sub_23617B448;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = &unk_26E974898;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v28 = v39;
  sub_2361FE078();
  MEMORY[0x237DFDD80](0, v28, v10, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
  swift_release();
  swift_release();
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v45;
  swift_unknownObjectWeakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v29;
  v32[3] = v30;
  uint64_t v33 = v37;
  void v32[4] = v31;
  v32[5] = v33;
  v32[6] = v26;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = a1[4];
  a1[4] = 0x8000000000000000;
  sub_2361AD5D8((uint64_t)sub_23617B528, (uint64_t)v32, v31, isUniquelyReferenced_nonNull_native);
  a1[4] = v46;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_23613491C((uint64_t)v38, &qword_26AD75030);
  swift_release();
  return swift_release();
}

uint64_t sub_2361633A4(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  sub_23612D5D0(a3, (uint64_t)v11, &qword_26AD75038);
  a1(v11);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = result + 64;
    swift_beginAccess();
    if (MEMORY[0x237DFF340](v6))
    {
      uint64_t v7 = *(void *)(v5 + 72);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      uint64_t v10 = swift_retain();
      v9(v10, ObjectType, v7);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2361634A8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  a1(a3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result + *(void *)(*(void *)result + 128);
    swift_beginAccess();
    if (MEMORY[0x237DFF340](v4))
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      uint64_t v8 = swift_retain();
      v7(v8, ObjectType, v5);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2361635A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a4;
  uint64_t v10 = sub_2361FE058();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2361FE098();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x237DFF340](a3 + 16);
    swift_unknownObjectRelease();
    if (v19)
    {
      uint64_t v29 = *(void *)(v18 + 24);
      sub_23612D5D0(a1, (uint64_t)v33, &qword_26AD75038);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a5;
      *(void *)(v20 + 24) = a6;
      sub_23612D5D0((uint64_t)v33, v20 + 32, &qword_26AD75038);
      void aBlock[4] = sub_23617A850;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2361E02F8;
      void aBlock[3] = &unk_26E974640;
      uint64_t v21 = _Block_copy(aBlock);
      swift_retain();
      sub_2361FE078();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_23617C108((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
      sub_236126188((uint64_t *)&unk_26AD75F90);
      sub_23615936C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
      sub_2361FEEA8();
      MEMORY[0x237DFDD80](0, v16, v12, v21);
      _Block_release(v21);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_2361FEC88();
      sub_236126188(&qword_26AD76040);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_23620E120;
      uint64_t v23 = v29;
      aBlock[0] = v29;
      uint64_t v24 = sub_2361FE928();
      uint64_t v26 = v25;
      *(void *)(v22 + 56) = MEMORY[0x263F8D310];
      *(void *)(v22 + 64) = sub_23613B7F0();
      *(void *)(v22 + 32) = v24;
      *(void *)(v22 + 40) = v26;
      sub_23612EDA4(0, (unint64_t *)&qword_26AD76010);
      uint64_t v27 = (void *)sub_2361FEE18();
      sub_2361FDB28();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      uint64_t v28 = sub_2361F24B4(v23);
      swift_endAccess();
      uint64_t result = swift_release();
      if (v28) {
        return sub_236144558(v28);
      }
    }
  }
  return result;
}

uint64_t sub_236163A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v32 = a4;
  uint64_t v8 = sub_2361FE058();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2361FE098();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_236126188(&qword_26AD75030);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    swift_beginAccess();
    uint64_t v20 = MEMORY[0x237DFF340](a3 + 16);
    swift_unknownObjectRelease();
    if (v20)
    {
      uint64_t v32 = *(void *)(v19 + 24);
      sub_2361348B8(a1, (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26AD75030);
      unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = v34;
      *(void *)(v22 + 16) = v33;
      *(void *)(v22 + 24) = v23;
      sub_23612D5D0((uint64_t)v17, v22 + v21, &qword_26AD75030);
      void aBlock[4] = sub_23617BA8C;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2361E02F8;
      void aBlock[3] = &unk_26E974910;
      uint64_t v24 = _Block_copy(aBlock);
      swift_retain();
      sub_2361FE078();
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_23617C108((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
      sub_236126188((uint64_t *)&unk_26AD75F90);
      sub_23615936C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
      sub_2361FEEA8();
      MEMORY[0x237DFDD80](0, v13, v10, v24);
      _Block_release(v24);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_2361FEC88();
      sub_236126188(&qword_26AD76040);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_23620E120;
      uint64_t v26 = v32;
      aBlock[0] = v32;
      uint64_t v27 = sub_2361FE928();
      uint64_t v29 = v28;
      *(void *)(v25 + 56) = MEMORY[0x263F8D310];
      *(void *)(v25 + 64) = sub_23613B7F0();
      *(void *)(v25 + 32) = v27;
      *(void *)(v25 + 40) = v29;
      sub_23612EDA4(0, (unint64_t *)&qword_26AD76010);
      uint64_t v30 = (void *)sub_2361FEE18();
      sub_2361FDB28();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      uint64_t v31 = sub_2361F24CC(v26);
      swift_endAccess();
      uint64_t result = swift_release();
      if (v31) {
        return sub_236144558(v31);
      }
    }
  }
  return result;
}

uint64_t sub_236163F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + 32);
  swift_beginAccess();
  unint64_t v4 = sub_23612B178(a1);
  if ((v5 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v6 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23612DEB0();
    uint64_t v8 = v10;
  }
  sub_2361F2B30(v6, v8);
  *uint64_t v3 = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_release();
}

BookDataStore::ReadingHistoryDataStore::Config __swiftcall ReadingHistoryDataStore.Config.init(dataPruningEnabled:historicalMonthsToKeep:)(Swift::Bool dataPruningEnabled, Swift::Int historicalMonthsToKeep)
{
  *(unsigned char *)uint64_t v2 = dataPruningEnabled;
  *(void *)(v2 + _Block_object_dispose(&STACK[0x3B0], 8) = historicalMonthsToKeep;
  result.historicalMonthsToKeep = historicalMonthsToKeep;
  result.dataPruningEnabled = dataPruningEnabled;
  return result;
}

uint64_t ReadingHistoryDataStore.updateCollector.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_2361348B8(v1 + 16, a1, &qword_26AD75E08);
}

uint64_t ReadingHistoryDataStore.updateCollector.setter(uint64_t a1)
{
  swift_beginAccess();
  sub_23617A910(a1, v1 + 16, &qword_26AD75E08);
  return swift_endAccess();
}

uint64_t (*ReadingHistoryDataStore.updateCollector.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_2361640DC()
{
  uint64_t v1 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  unint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v19 - v5;
  sub_236126188((uint64_t *)&unk_268853960);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23620EF20;
  v21[0] = 0x3D6C65646F6DLL;
  v21[1] = 0xE600000000000000;
  ReadingHistoryModel.description.getter();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  uint64_t v8 = v21[1];
  *(void *)(v7 + 32) = v21[0];
  *(void *)(v7 + 40) = v8;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "currentStreak=");
  HIBYTE(v21[1]) = -18;
  uint64_t v9 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v20 = v0;
  sub_2361348B8(v0 + v10, (uint64_t)v6, (uint64_t *)&unk_26AD74BD0);
  uint64_t v11 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v6, 1, v11) == 1)
  {
    sub_23613491C((uint64_t)v6, (uint64_t *)&unk_26AD74BD0);
  }
  else
  {
    ReadingHistory.Streak.description.getter();
    sub_236178248((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  uint64_t v13 = v21[1];
  *(void *)(v7 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v21[0];
  *(void *)(v7 + 56) = v13;
  v21[0] = 0x3D7961646F74;
  v21[1] = 0xE600000000000000;
  uint64_t v14 = v20;
  sub_2361FD6B8();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  uint64_t v15 = v21[1];
  *(void *)(v7 + 64) = v21[0];
  *(void *)(v7 + 72) = v15;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "longestStreak=");
  HIBYTE(v21[1]) = -18;
  sub_2361348B8(v14 + *(int *)(v9 + 28), (uint64_t)v4, (uint64_t *)&unk_26AD74BD0);
  if (v12(v4, 1, v11) == 1)
  {
    sub_23613491C((uint64_t)v4, (uint64_t *)&unk_26AD74BD0);
  }
  else
  {
    ReadingHistory.Streak.description.getter();
    sub_236178248((uint64_t)v4, type metadata accessor for ReadingHistory.Streak);
  }
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  uint64_t v16 = v21[1];
  *(void *)(v7 + 80) = v21[0];
  *(void *)(v7 + 8_Block_object_dispose(&STACK[0x3B0], 8) = v16;
  v21[0] = v7;
  sub_236126188(&qword_268853790);
  sub_23615936C((unint64_t *)&qword_268853970, &qword_268853790);
  uint64_t v17 = sub_2361FE898();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_236164490()
{
  uint64_t v1 = v0;
  uint64_t v57 = sub_2361FE058();
  uint64_t v62 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v60 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_2361FE098();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2361FE068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_236126188(&qword_26AD74180);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v52 = v15;
  uint64_t v53 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A8A8(v22, (uint64_t)v21, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v23 = *(int *)(v19 + 28);
  uint64_t v55 = v21;
  uint64_t v24 = (uint64_t)&v21[v23];
  sub_2361348B8((uint64_t)&v21[v23], (uint64_t)v12, (uint64_t *)&unk_26AD74BD0);
  uint64_t v25 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  int v27 = v26(v12, 1, v25);
  uint64_t v56 = v17;
  if (v27 == 1)
  {
    sub_23613491C((uint64_t)v12, (uint64_t *)&unk_26AD74BD0);
    uint64_t v28 = sub_2361FD748();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
  }
  else
  {
    uint64_t v29 = sub_2361FD748();
    uint64_t v50 = v4;
    uint64_t v30 = v17;
    uint64_t v49 = v5;
    uint64_t v31 = v29;
    uint64_t v32 = *(void *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, v12, v29);
    sub_236178248((uint64_t)v12, type metadata accessor for ReadingHistory.Streak);
    uint64_t v4 = v50;
    uint64_t v33 = v31;
    uint64_t v5 = v49;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v33);
  }
  sub_2361348B8(v24, (uint64_t)v10, (uint64_t *)&unk_26AD74BD0);
  if (v26(v10, 1, v25) == 1)
  {
    sub_23613491C((uint64_t)v10, (uint64_t *)&unk_26AD74BD0);
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = *(void *)&v10[*(int *)(v25 + 20)];
    sub_236178248((uint64_t)v10, type metadata accessor for ReadingHistory.Streak);
  }
  sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  uint64_t v35 = v54;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v54, *MEMORY[0x263F8F040], v4);
  uint64_t v36 = (void *)sub_2361FED68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = (uint64_t)v56;
  uint64_t v39 = v53;
  sub_2361348B8((uint64_t)v56, v53, &qword_26AD74180);
  unint64_t v40 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v41 = (v52 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v37;
  sub_23612D5D0(v39, v42 + v40, &qword_26AD74180);
  *(void *)(v42 + v41) = v34;
  void aBlock[4] = sub_23617ABE8;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = &unk_26E974730;
  uint64_t v43 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v44 = v58;
  sub_2361FE078();
  uint64_t v63 = MEMORY[0x263F8EE78];
  sub_23617C108((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
  sub_236126188((uint64_t *)&unk_26AD75F90);
  sub_23615936C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
  uint64_t v45 = v60;
  uint64_t v46 = v57;
  sub_2361FEEA8();
  MEMORY[0x237DFDD80](0, v44, v45, v43);
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v61);
  sub_23613491C(v38, &qword_26AD74180);
  sub_236178248((uint64_t)v55, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  return swift_release();
}

void sub_236164C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v53 = a2;
  uint64_t v3 = sub_2361FD7D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FD7F8();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2361FD748();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v51 = (char *)&v43 - v18;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    uint64_t v49 = v7;
    uint64_t v21 = v4;
    uint64_t v22 = *(void **)(Strong + 112);
    sub_2361348B8(v53, (uint64_t)v12, &qword_26AD74180);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      id v23 = v22;
      sub_23613491C((uint64_t)v12, &qword_26AD74180);
      uint64_t v24 = (void *)sub_2361FE8C8();
      objc_msgSend(v23, sel_removeObjectForKey_, v24);

      uint64_t v25 = &selRef_setTrackLiverpool_;
      uint64_t v26 = v52;
LABEL_9:
      uint64_t v42 = (void *)sub_2361FE8C8();
      objc_msgSend(v22, v25[159], v26, v42);
      swift_release();

      return;
    }
    uint64_t v46 = v20;
    int v27 = v51;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v51, v12, v13);
    uint64_t v48 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v27, v13);
    uint64_t v45 = v22;
    id v44 = v22;
    sub_2361FD758();
    uint64_t v28 = *(void (**)(char *, void, uint64_t))(v21 + 104);
    v28(v6, *MEMORY[0x263F078A0], v3);
    uint64_t v29 = sub_2361FD7E8();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v21 + 8);
    v30(v6, v3);
    uint64_t v31 = *MEMORY[0x263F078A8];
    uint64_t v47 = v28;
    v28(v6, v31, v3);
    uint64_t v32 = sub_2361FD7E8();
    uint64_t v53 = v21 + 8;
    v30(v6, v3);
    uint64_t v33 = 100 * v29;
    if ((unsigned __int128)(v29 * (__int128)100) >> 64 == (100 * v29) >> 63)
    {
      uint64_t v34 = v33 + v32;
      if (!__OFADD__(v33, v32))
      {
        uint64_t v35 = v30;
        v47(v6, *MEMORY[0x263F07870], v3);
        uint64_t v36 = sub_2361FD7E8();
        uint64_t v37 = *(void (**)(char *, uint64_t))(v48 + 8);
        v37(v17, v13);
        v35(v6, v3);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v49);
        uint64_t v38 = 100 * v34;
        if ((unsigned __int128)(v34 * (__int128)100) >> 64 == (100 * v34) >> 63)
        {
          BOOL v39 = __OFADD__(v38, v36);
          uint64_t v40 = v38 + v36;
          if (!v39)
          {
            unint64_t v41 = (void *)sub_2361FE8C8();
            uint64_t v25 = &selRef_setTrackLiverpool_;
            objc_msgSend(v44, sel_setInteger_forKey_, v40, v41);

            v37(v51, v13);
            uint64_t v26 = v52;
            uint64_t v22 = v45;
            goto LABEL_9;
          }
LABEL_14:
          __break(1u);
          return;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t static ReadingHistoryDataStore.recalculationCount.getter()
{
  return qword_268853910;
}

uint64_t static ReadingHistoryDataStore.recalculationCount.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  qword_268853910 = a1;
  return result;
}

uint64_t (*static ReadingHistoryDataStore.recalculationCount.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ReadingHistoryDataStore.__allocating_init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  swift_allocObject();
  uint64_t v14 = sub_236177324(a1, a2, a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();

  swift_release();
  return v14;
}

uint64_t ReadingHistoryDataStore.init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v8 = sub_236177324(a1, a2, a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();

  swift_release();
  return v8;
}

uint64_t sub_2361653BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  char v6 = *((unsigned char *)a1 + 40);
  char v7 = *((unsigned char *)a1 + 41);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v9[0] = v1;
    v9[1] = v2;
    void v9[2] = v3;
    v9[3] = v4;
    void v9[4] = v5;
    char v10 = v6;
    char v11 = v7;
    sub_236165460((uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_236165460(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74140);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FD458();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23612D5D0(a1, (uint64_t)v23, &qword_26AD75038);
  char v22 = 0;
  char v11 = *(NSObject **)(v2 + 144);
  uint64_t v12 = swift_allocObject();
  sub_23612D5D0((uint64_t)v23, v12 + 16, &qword_26AD75038);
  *(void *)(v12 + 64) = v2;
  *(void *)(v12 + 72) = &v22;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_23617C254;
  *(void *)(v13 + 24) = v12;
  uint64_t v20 = sub_236159570;
  uint64_t v21 = v13;
  *(void *)&aBlocuint64_t k = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v19 = sub_23613F9DC;
  *((void *)&v19 + 1) = &unk_26E974A78;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    if (v22 == 1)
    {
      sub_23617C270();
      aBlocuint64_t k = 0u;
      long long v19 = 0u;
      sub_2361FD888();
      sub_23613491C((uint64_t)&aBlock, qword_26AD76060);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_23613491C((uint64_t)v6, (uint64_t *)&unk_26AD74140);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        id v16 = objc_msgSend(self, sel_defaultCenter);
        uint64_t v17 = (void *)sub_2361FD428();
        objc_msgSend(v16, sel_postNotification_, v17);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2361657B4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_236165814(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_236165814(uint64_t a1)
{
  uint64_t v3 = sub_236126188(&qword_26AD75030);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  char v6 = *(NSObject **)(v1 + 144);
  sub_2361348B8(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26AD75030);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_23612D5D0((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, &qword_26AD75030);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_23617C068;
  *(void *)(v9 + 24) = v8;
  void aBlock[4] = sub_236159570;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  void aBlock[3] = &unk_26E974988;
  char v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ReadingHistoryDataStore.observeSignificantDateChange(_:)(NSNotificationName a1)
{
  id v3 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v1, sel__handleSignificantDateChange_, a1, 0);
}

uint64_t sub_236165AA0@<X0>(void (*a1)(char *, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_2361FD7F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FD748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v31 - v12);
  sub_2361FD758();
  sub_2361FD698();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  BOOL v14 = sub_2361885A8(a1, 1);
  if (!sub_2361885A8(v13, 1))
  {
    sub_2361FEC88();
    if (qword_26AD74FA8 == -1)
    {
LABEL_6:
      id v16 = (id)qword_26AD74FA0;
      sub_2361FDB28();

      (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 8))(v13, v7);
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  if (__OFADD__(qword_268853910, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  ++qword_268853910;
  if (v14) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = v13;
  }
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 16))(v11, v15, v7);
  uint64_t v17 = sub_2361888F0((uint64_t)v11, 1);
  sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26AD74FA0;
  sub_236126188(&qword_26AD76040);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23620DFC0;
  id v20 = v18;
  uint64_t v21 = sub_2361FD6B8();
  uint64_t v23 = v22;
  *(void *)(v19 + 56) = MEMORY[0x263F8D310];
  unint64_t v24 = sub_23613B7F0();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  uint64_t v25 = MEMORY[0x263F8D750];
  *(void *)(v19 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v19 + 104) = v25;
  *(void *)(v19 + 64) = v24;
  *(void *)(v19 + 72) = v17;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 8);
  v26(v13, v7);
  if (v17 >= 2)
  {
    uint64_t v27 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v31, v11, v7);
    uint64_t v28 = type metadata accessor for ReadingHistory.Streak(0);
    *(void *)(v27 + *(int *)(v28 + 20)) = v17;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
  v26((void (*)(char *, uint64_t, uint64_t, uint64_t))v11, v7);
LABEL_13:
  uint64_t v30 = type metadata accessor for ReadingHistory.Streak(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v31, 1, 1, v30);
}

uint64_t sub_236165F10@<X0>(uint64_t a1@<X0>, int64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v94 = a3;
  int64_t v80 = a2;
  uint64_t v75 = a4;
  uint64_t v76 = a1;
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  size_t v69 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v77 = (uint64_t)&v68 - v7;
  uint64_t v84 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v81 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v71 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2361FD7D8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2361FD7F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2361FD748();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v70 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v68 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v68 - v24);
  sub_2361FD758();
  uint64_t v93 = v25;
  uint64_t v26 = v94;
  sub_2361FD698();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v89 = v14 + 8;
  uint64_t v90 = v13;
  uint64_t v88 = v27;
  v27(v16, v13);
  uint64_t v95 = v18;
  uint64_t v28 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v18 + 16);
  uint64_t v92 = v17;
  uint64_t v82 = v28;
  uint64_t v83 = v18 + 16;
  v28(v23, v26, v17);
  sub_2361FD758();
  uint64_t v29 = *(void (**)(char *))(v10 + 104);
  unsigned int v79 = *MEMORY[0x263F078A0];
  v29(v12);
  uint64_t v30 = sub_2361FD7E8();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v32 = v10 + 8;
  uint64_t v31 = (uint64_t)v33;
  v33(v12, v9);
  unsigned int v78 = *MEMORY[0x263F078A8];
  uint64_t v86 = v29;
  v29(v12);
  uint64_t v34 = sub_2361FD7E8();
  uint64_t v91 = v32;
  id v87 = v33;
  v33(v12, v9);
  uint64_t v35 = 100 * v30;
  if ((unsigned __int128)(v30 * (__int128)100) >> 64 != (100 * v30) >> 63)
  {
    __break(1u);
    goto LABEL_35;
  }
  BOOL v36 = __OFADD__(v35, v34);
  uint64_t v37 = v35 + v34;
  if (v36)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v74 = v37;
  unsigned int v72 = *MEMORY[0x263F07870];
  uint64_t v30 = (uint64_t)v86;
  v86(v12);
  uint64_t v73 = sub_2361FD7E8();
  uint64_t v38 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v95 + 8);
  uint64_t v39 = v92;
  v95 += 8;
  unint64_t v85 = v38;
  v38(v23, v92);
  uint64_t v32 = v91;
  uint64_t v40 = v87;
  v87(v12, v9);
  v88(v16, v90);
  v82(v23, v93, v39);
  sub_2361FD758();
  ((void (*)(char *, void, uint64_t))v30)(v12, v79, v9);
  uint64_t v31 = sub_2361FD7E8();
  v40(v12, v9);
  ((void (*)(char *, void, uint64_t))v30)(v12, v78, v9);
  uint64_t v41 = sub_2361FD7E8();
  v40(v12, v9);
  uint64_t v42 = 100 * v31;
  if ((unsigned __int128)(v31 * (__int128)100) >> 64 != (100 * v31) >> 63)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v31 = v42 + v41;
  if (__OFADD__(v42, v41))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  ((void (*)(char *, void, uint64_t))v86)(v12, v72, v9);
  uint64_t v43 = sub_2361FD7E8();
  uint64_t v32 = v92;
  v85(v23, v92);
  v87(v12, v9);
  v88(v16, v90);
  uint64_t v44 = v76;
  uint64_t v45 = sub_236189060(v80);
  uint64_t v46 = *(void *)(sub_236174C70(v45, v74, v73, v31, v43) + 16);
  swift_release();
  uint64_t v47 = v44 + *(int *)(type metadata accessor for ReadingHistoryDataStore.State(0) + 20);
  uint64_t v48 = v77;
  sub_2361348B8(v47, v77, (uint64_t *)&unk_26AD74BD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v48, 1, v84) == 1)
  {
    sub_23613491C(v48, (uint64_t *)&unk_26AD74BD0);
    uint64_t v23 = v93;
    uint64_t v49 = v94;
LABEL_9:
    sub_236165AA0(v49, v75);
    return ((uint64_t (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v85)(v23, v32);
  }
  uint64_t v30 = v71;
  sub_23617AC7C(v48, v71, type metadata accessor for ReadingHistory.Streak);
  uint64_t v23 = v93;
  uint64_t v49 = v94;
  if (v46)
  {
    sub_236178248(v30, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_9;
  }
  uint64_t v31 = (uint64_t)v70;
  v82(v70, (void (*)(char *, uint64_t, uint64_t, uint64_t))v30, v32);
  uint64_t v51 = *(void *)(v30 + *(int *)(v84 + 20));
  BOOL v52 = sub_2361885A8(v49, 1);
  BOOL v53 = sub_2361885A8(v23, 1);
  if (sub_2361FD718())
  {
    id v16 = v69;
    if (v52)
    {
      sub_23617A8A8(v30, (uint64_t)v69, type metadata accessor for ReadingHistory.Streak);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v16, 0, 1, v84);
      sub_2361FEC58();
      if (qword_26AD74FA8 == -1) {
        goto LABEL_28;
      }
    }
    else if (v51 < 2)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v69, 1, 1, v84);
      sub_2361FEC58();
      if (qword_26AD74FA8 == -1)
      {
LABEL_28:
        id v65 = (id)qword_26AD74FA0;
        sub_2361FDB28();

LABEL_29:
        int v66 = v85;
        v85((void (*)(char *, uint64_t, uint64_t, uint64_t))v31, v32);
        sub_236178248(v30, type metadata accessor for ReadingHistory.Streak);
        v66(v23, v32);
        return sub_23612D5D0((uint64_t)v16, v75, (uint64_t *)&unk_26AD74BD0);
      }
    }
    else
    {
      v82((void (*)(char *, uint64_t, uint64_t, uint64_t))v69, v23, v32);
      *(void *)&v16[*(int *)(v84 + 20)] = v51 - 1;
      (*(void (**)(char *, void, uint64_t))(v81 + 56))(v16, 0, 1);
      sub_2361FEC58();
      if (qword_26AD74FA8 == -1) {
        goto LABEL_28;
      }
    }
LABEL_38:
    swift_once();
    goto LABEL_28;
  }
  char v54 = sub_2361FD718();
  id v16 = v69;
  if ((v54 & 1) == 0)
  {
    if ((sub_2361FD708() & 1) != 0 && !v53)
    {
      uint64_t v67 = v85;
      v85((void (*)(char *, uint64_t, uint64_t, uint64_t))v31, v32);
      sub_236178248(v30, type metadata accessor for ReadingHistory.Streak);
      v67(v23, v32);
      if (v52)
      {
        v82((void (*)(char *, uint64_t, uint64_t, uint64_t))v16, v49, v32);
        *(void *)&v16[*(int *)(v84 + 20)] = 1;
        (*(void (**)(char *, void, uint64_t))(v81 + 56))(v16, 0, 1);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v16, 1, 1, v84);
      }
      return sub_23612D5D0((uint64_t)v16, v75, (uint64_t *)&unk_26AD74BD0);
    }
    sub_236165AA0(v49, (uint64_t)v16);
    goto LABEL_29;
  }
  if (!v52)
  {
    v82((void (*)(char *, uint64_t, uint64_t, uint64_t))v69, v23, v32);
    *(void *)&v16[*(int *)(v84 + 20)] = v51;
    (*(void (**)(char *, void, uint64_t))(v81 + 56))(v16, 0, 1);
    sub_2361FEC58();
    if (qword_26AD74FA8 == -1) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
  v82((void (*)(char *, uint64_t, uint64_t, uint64_t))v69, v49, v32);
  uint64_t v55 = v51 + 1;
  if (__OFADD__(v51, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  *(void *)&v16[*(int *)(v84 + 20)] = v55;
  (*(void (**)(char *, void, uint64_t))(v81 + 56))(v16, 0, 1);
  sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
LABEL_40:
  }
    swift_once();
  uint64_t v56 = (void *)qword_26AD74FA0;
  sub_236126188(&qword_26AD76040);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_23620DFC0;
  id v58 = v56;
  uint64_t v59 = sub_2361FD6B8();
  uint64_t v61 = v60;
  *(void *)(v57 + 56) = MEMORY[0x263F8D310];
  unint64_t v62 = sub_23613B7F0();
  *(void *)(v57 + 32) = v59;
  *(void *)(v57 + 40) = v61;
  uint64_t v63 = MEMORY[0x263F8D750];
  *(void *)(v57 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v57 + 104) = v63;
  *(void *)(v57 + 64) = v62;
  *(void *)(v57 + 72) = v55;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  uint64_t v64 = v85;
  v85(v70, v32);
  sub_236178248(v30, type metadata accessor for ReadingHistory.Streak);
  v64(v93, v32);
  return sub_23612D5D0((uint64_t)v16, v75, (uint64_t *)&unk_26AD74BD0);
}

uint64_t sub_236166C70(uint64_t a1)
{
  uint64_t v136 = *v1;
  uint64_t v144 = sub_236126188(&qword_26AD75E90);
  uint64_t v137 = *(void (***)(char *, uint64_t))(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v143 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_236126188(&qword_26AD74F40);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v150 = (uint64_t)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v142 = (uint64_t)&v129 - v7;
  uint64_t v8 = sub_236126188(&qword_26AD741A0);
  MEMORY[0x270FA5388](v8 - 8);
  char v158 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD74198);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v139 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_2361FD4D8();
  uint64_t v146 = *(void (***)(uint64_t, uint64_t, void (*)(char *, uint64_t)))(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v159 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v166 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x270FA5388](v155);
  uint64_t v138 = (void (**)(char *, uint64_t, uint64_t))((char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v164 = sub_2361FD7D8();
  uint64_t v154 = *(void (***)(char *, uint64_t))(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v163 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_2361FD7F8();
  uint64_t v153 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v161 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_2361FD748();
  uint64_t v152 = *(void *)(v147 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v147);
  uint64_t v165 = (uint64_t)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v156 = (void (*)(char *, uint64_t))((char *)&v129 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v151 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v129 - v22);
  uint64_t v23 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v135 = (uint64_t)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v129 - v26;
  uint64_t v28 = sub_236126188(&qword_2688539A8);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_236126188(&qword_2688539B0);
  uint64_t v157 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  os_log_t v149 = (char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v129 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v129 - v39;
  uint64_t v41 = (uint64_t)v1;
  uint64_t v42 = (uint64_t)v1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A8A8(v42, (uint64_t)v40, type metadata accessor for ReadingHistoryModel);
  sub_23617C108(&qword_26AD751C0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v43 = sub_2361FE2E8();
  uint64_t v134 = v40;
  uint64_t result = sub_236178248((uint64_t)v40, type metadata accessor for ReadingHistoryModel);
  if (v43)
  {
    uint64_t v133 = v27;
    uint64_t v130 = v41;
    uint64_t v132 = v42;
    sub_23617A8A8(v42, (uint64_t)v38, type metadata accessor for ReadingHistoryModel);
    sub_23617C108(&qword_26AD751E0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    sub_2361FE5D8();
    sub_236126188(&qword_26AD75EE0);
    sub_23615936C((unint64_t *)&unk_2688539B8, &qword_26AD75EE0);
    sub_2361FE608();
    uint64_t v45 = v157;
    uint64_t v46 = v162;
    int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48))(v30, 1, v162);
    uint64_t v131 = a1;
    if (v47 == 1)
    {
      sub_23613491C((uint64_t)v30, &qword_2688539A8);
      uint64_t v129 = 0;
    }
    else
    {
      uint64_t v48 = v149;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v149, v30, v46);
      uint64_t v49 = sub_2361FE468();
      MEMORY[0x270FA5388](v49);
      uint64_t v127 = v38;
      uint64_t v128 = v35;
      sub_2361568E8(sub_23617C200, (uint64_t)&v125, v49);
      uint64_t v129 = 0;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v46);
    }
    uint64_t v50 = (uint64_t)v133;
    uint64_t v51 = (uint64_t)v38;
    uint64_t v52 = v155;
    uint64_t v53 = (uint64_t)v156;
    uint64_t v54 = v147;
    uint64_t v55 = v132;
    sub_2361348B8(v132 + *(int *)(v155 + 20), (uint64_t)v133, (uint64_t *)&unk_26AD74BD0);
    uint64_t v56 = v151;
    uint64_t v57 = v152;
    id v58 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v152 + 16);
    v58(v151, v55 + *(int *)(v52 + 24), v54);
    uint64_t v59 = sub_236189060((int64_t)v35);
    if (!*(void *)(v59 + 16))
    {
      swift_bridgeObjectRelease();
      sub_23616859C((uint64_t)v35, v50, (uint64_t)v56, v130, v131);
      (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v57 + 8))(v56, v54);
      goto LABEL_54;
    }
    uint64_t v162 = v59;
    uint64_t v141 = v35;
    v58((void (*)(char *, uint64_t, uint64_t, uint64_t))v53, (uint64_t)v56, v54);
    sub_2361FD758();
    uint64_t v60 = v154;
    uint64_t v61 = v154[13];
    uint64_t v63 = v163;
    int64_t v62 = v164;
    ((void (*)(char *, void, int64_t))v61)(v163, *MEMORY[0x263F078A0], v164);
    uint64_t v64 = sub_2361FD7E8();
    id v65 = v60[1];
    v65(v63, v62);
    ((void (*)(char *, void, int64_t))v61)(v63, *MEMORY[0x263F078A8], v62);
    uint64_t v66 = sub_2361FD7E8();
    v65(v63, v62);
    uint64_t v67 = 100 * v64;
    if ((unsigned __int128)(v64 * (__int128)100) >> 64 == (100 * v64) >> 63)
    {
      uint64_t v140 = v51;
      uint64_t v68 = v67 + v66;
      if (!__OFADD__(v67, v66))
      {
        size_t v69 = v163;
        int64_t v70 = v164;
        ((void (*)(char *, void, int64_t))v61)(v163, *MEMORY[0x263F07870], v164);
        uint64_t v71 = v161;
        uint64_t v72 = sub_2361FD7E8();
        uint64_t v73 = v152;
        uint64_t v74 = *(void (**)(void, void))(v152 + 8);
        uint64_t v61 = (void (*)(char *, uint64_t))v147;
        os_log_t v149 = (char *)(v152 + 8);
        uint64_t v148 = (void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), void))v74;
        v74(v53, v147);
        v65(v69, v70);
        uint64_t v75 = v153;
        uint64_t v156 = *(void (**)(char *, uint64_t))(v153 + 8);
        uint64_t v157 = v153 + 8;
        v156(v71, v160);
        uint64_t v76 = v162;
        if (*(void *)(v162 + 16) == 1 && (sub_2361E5BA8(v68, v72, v162) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_2361FEC58();
          uint64_t v77 = v131;
          if (qword_26AD74FA8 != -1) {
            swift_once();
          }
          unsigned int v78 = (void *)qword_26AD74FA0;
          sub_236126188(&qword_26AD76040);
          uint64_t v79 = swift_allocObject();
          *(_OWORD *)(v79 + 16) = xmmword_23620E120;
          id v80 = v78;
          uint64_t v81 = v151;
          uint64_t v82 = sub_2361FD6B8();
          uint64_t v84 = v83;
          *(void *)(v79 + 56) = MEMORY[0x263F8D310];
          *(void *)(v79 + 64) = sub_23613B7F0();
          *(void *)(v79 + 32) = v82;
          *(void *)(v79 + 40) = v84;
          sub_2361FDB28();

          swift_bridgeObjectRelease();
          unint64_t v85 = v138;
          sub_23617A8A8(v132, (uint64_t)v138, type metadata accessor for ReadingHistoryDataStore.State);
          uint64_t v86 = v135;
          uint64_t v35 = v141;
          sub_236165F10((uint64_t)v85, (int64_t)v141, v81, v135);
          sub_236178248((uint64_t)v85, type metadata accessor for ReadingHistoryDataStore.State);
          uint64_t v50 = (uint64_t)v133;
          sub_23613491C((uint64_t)v133, (uint64_t *)&unk_26AD74BD0);
          sub_23612D5D0(v86, v50, (uint64_t *)&unk_26AD74BD0);
          uint64_t v87 = (uint64_t)v134;
          sub_2361688C4((uint64_t)v35, v50, (uint64_t)v134);
LABEL_52:
          sub_23617C19C(v87, (uint64_t)v35);
          sub_23616859C((uint64_t)v35, v50, (uint64_t)v81, v130, v77);
          v148(v81, v61);
          uint64_t v51 = v140;
LABEL_54:
          sub_23613491C(v50, (uint64_t *)&unk_26AD74BD0);
          sub_236178248(v51, type metadata accessor for ReadingHistoryModel);
          return sub_236178248((uint64_t)v35, type metadata accessor for ReadingHistoryModel);
        }
        uint64_t v88 = *(void *)(v76 + 56);
        uint64_t v163 = (char *)(v76 + 56);
        uint64_t v89 = 1 << *(unsigned char *)(v76 + 32);
        uint64_t v90 = -1;
        if (v89 < 64) {
          uint64_t v90 = ~(-1 << v89);
        }
        unint64_t v91 = v90 & v88;
        int64_t v164 = (unint64_t)(v89 + 63) >> 6;
        uint64_t v155 = v75 + 56;
        uint64_t v153 = v73 + 48;
        uint64_t v154 = (void (**)(char *, uint64_t))(v146 + 1);
        uint64_t v146 = (void (**)(uint64_t, uint64_t, void (*)(char *, uint64_t)))(v73 + 32);
        uint64_t v138 = (void (**)(char *, uint64_t, uint64_t))(v137 + 2);
        ++v137;
        uint64_t v152 = v73 + 56;
        swift_bridgeObjectRetain();
        int64_t v92 = 0;
        uint64_t v93 = v139;
        uint64_t v94 = v145;
        uint64_t v95 = (uint64_t)v166;
        while (1)
        {
          if (v91)
          {
            unint64_t v96 = __clz(__rbit64(v91));
            v91 &= v91 - 1;
            unint64_t v97 = v96 | (v92 << 6);
          }
          else
          {
            if (__OFADD__(v92++, 1)) {
              goto LABEL_58;
            }
            if (v92 >= v164)
            {
LABEL_50:
              swift_release();
              sub_2361FEC88();
              uint64_t v53 = v76;
              if (qword_26AD74FA8 != -1) {
                goto LABEL_62;
              }
              goto LABEL_51;
            }
            unint64_t v99 = *(void *)&v163[8 * v92];
            if (!v99)
            {
              int64_t v100 = v92 + 1;
              if (v92 + 1 >= v164) {
                goto LABEL_50;
              }
              unint64_t v99 = *(void *)&v163[8 * v100];
              if (!v99)
              {
                int64_t v100 = v92 + 2;
                if (v92 + 2 >= v164) {
                  goto LABEL_50;
                }
                unint64_t v99 = *(void *)&v163[8 * v100];
                if (!v99)
                {
                  int64_t v100 = v92 + 3;
                  if (v92 + 3 >= v164) {
                    goto LABEL_50;
                  }
                  unint64_t v99 = *(void *)&v163[8 * v100];
                  if (!v99)
                  {
                    while (1)
                    {
                      int64_t v92 = v100 + 1;
                      if (__OFADD__(v100, 1)) {
                        goto LABEL_59;
                      }
                      if (v92 >= v164) {
                        goto LABEL_50;
                      }
                      unint64_t v99 = *(void *)&v163[8 * v92];
                      ++v100;
                      if (v99) {
                        goto LABEL_30;
                      }
                    }
                  }
                }
              }
              int64_t v92 = v100;
            }
LABEL_30:
            unint64_t v91 = (v99 - 1) & v99;
            unint64_t v97 = __clz(__rbit64(v99)) + (v92 << 6);
          }
          uint64_t v101 = *(void *)(v76 + 48);
          uint64_t v102 = *(void *)(v101 + 16 * v97);
          uint64_t v103 = 100 * v102;
          if ((unsigned __int128)(v102 * (__int128)100) >> 64 != (100 * v102) >> 63)
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          uint64_t v104 = *(void *)(v101 + 16 * v97 + 8);
          if (__OFADD__(v103, v104)) {
            goto LABEL_57;
          }
          if (v103 + v104 <= 9999) {
            break;
          }
          uint64_t v105 = v160;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v155)(v93, 1, 1, v160);
          uint64_t v106 = sub_2361FD808();
          uint64_t v53 = (uint64_t)v158;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v158, 1, 1, v106);
          LOBYTE(v12_Block_object_dispose(&STACK[0x3B0], 8) = 1;
          uint64_t v127 = 0;
          char v126 = 1;
          uint64_t v125 = 0;
          uint64_t v107 = v159;
          sub_2361FD4C8();
          uint64_t v108 = v161;
          sub_2361FD758();
          sub_2361FD798();
          uint64_t v109 = v108;
          uint64_t v110 = v105;
          uint64_t v76 = v162;
          uint64_t v111 = v165;
          v156(v109, v110);
          uint64_t v112 = v107;
          uint64_t v95 = (uint64_t)v166;
          (*v154)(v112, v94);
          if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(char *, uint64_t)))v153)(v95, 1, v61) == 1)
          {
LABEL_17:
            sub_23613491C(v95, &qword_26AD74180);
          }
          else
          {
            (*v146)(v111, v95, v61);
            if (sub_2361FD708())
            {
              uint64_t v53 = v142;
              ReadingHistoryModel.readingHistoryDay(for:)(v142);
              uint64_t v113 = type metadata accessor for ReadingHistoryDay(0);
              uint64_t v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48);
              if (v114(v53, 1, v113) == 1)
              {
                sub_23613491C(v53, &qword_26AD74F40);
                uint64_t v115 = 0;
              }
              else
              {
                uint64_t v116 = v143;
                uint64_t v117 = v144;
                (*v138)(v143, v53 + *(int *)(v113 + 20), v144);
                uint64_t v93 = v139;
                sub_236178248(v53, type metadata accessor for ReadingHistoryDay);
                sub_2361FE0A8();
                (*v137)(v116, v117);
                uint64_t v115 = v167;
              }
              ReadingHistoryModel.readingHistoryDay(for:)(v150);
              uint64_t v118 = v150;
              if (v114(v150, 1, v113) == 1)
              {
                sub_23613491C(v118, &qword_26AD74F40);
                uint64_t v61 = (void (*)(char *, uint64_t))v147;
                uint64_t v94 = v145;
                uint64_t v95 = (uint64_t)v166;
              }
              else
              {
                uint64_t v119 = v118 + *(int *)(v113 + 20);
                uint64_t v120 = v118;
                uint64_t v121 = v143;
                uint64_t v122 = v144;
                (*v138)(v143, v119, v144);
                sub_236178248(v120, type metadata accessor for ReadingHistoryDay);
                sub_2361FE0A8();
                (*v137)(v121, v122);
                uint64_t v61 = (void (*)(char *, uint64_t))v147;
                uint64_t v94 = v145;
                uint64_t v95 = (uint64_t)v166;
                if (v115 >= 1 && v115 < v167) {
                  ReadingHistoryModel.setGoal(_:date:)(v115, v165);
                }
              }
              v148((void (*)(char *, uint64_t, uint64_t, uint64_t))v165, v61);
              uint64_t v76 = v162;
            }
            else
            {
              v148((void (*)(char *, uint64_t, uint64_t, uint64_t))v111, v61);
            }
          }
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char *, uint64_t)))v152)(v95, 1, 1, v61);
        goto LABEL_17;
      }
    }
    else
    {
LABEL_60:
      __break(1u);
    }
    __break(1u);
LABEL_62:
    swift_once();
LABEL_51:
    id v123 = (id)qword_26AD74FA0;
    sub_2361FDB28();

    uint64_t v124 = v135;
    uint64_t v35 = v141;
    uint64_t v81 = v151;
    sub_236165AA0(v151, v135);
    uint64_t v50 = (uint64_t)v133;
    sub_23613491C((uint64_t)v133, (uint64_t *)&unk_26AD74BD0);
    sub_23612D5D0(v124, v50, (uint64_t *)&unk_26AD74BD0);
    sub_236168DD0((uint64_t)v35, v53, v124);
    swift_bridgeObjectRelease();
    uint64_t v87 = (uint64_t)v134;
    sub_2361688C4((uint64_t)v35, v124, (uint64_t)v134);
    sub_23613491C(v124, (uint64_t *)&unk_26AD74BD0);
    uint64_t v77 = v131;
    goto LABEL_52;
  }
  return result;
}

uint64_t sub_236168210(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v5 = sub_236126188(&qword_26AD74180);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v27 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_2361FD748();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v31 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v34 = (char *)&v27 - v16;
  uint64_t v17 = *a1;
  type metadata accessor for ReadingHistoryModel(0);
  uint64_t v35 = v17;
  sub_236126188(&qword_26AD75EE0);
  sub_2361FE518();
  uint64_t v18 = v13;
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1) {
    return sub_23613491C((uint64_t)v11, &qword_26AD74180);
  }
  uint64_t v29 = v3;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v28(v34, v11, v12);
  uint64_t v21 = (uint64_t)v33;
  uint64_t v35 = v17;
  sub_2361FE518();
  if (v19((char *)v21, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v12);
    return sub_23613491C(v21, &qword_26AD74180);
  }
  else
  {
    uint64_t v22 = v31;
    v28(v31, (char *)v21, v12);
    if (sub_2361FD708())
    {
      uint64_t v23 = v30;
      uint64_t v24 = v34;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v30, v34, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v12);
      uint64_t v35 = v17;
      sub_2361FE528();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v18 + 8);
      v25(v22, v12);
      return ((uint64_t (*)(char *, uint64_t))v25)(v24, v12);
    }
    else
    {
      uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
      v26(v22, v12);
      return ((uint64_t (*)(char *, uint64_t))v26)(v34, v12);
    }
  }
}

uint64_t sub_23616859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v34 = a3;
  uint64_t v32 = a2;
  uint64_t v33 = sub_2361FD748();
  uint64_t v6 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v8;
  uint64_t v9 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v31 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v21 = (int *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23617A8A8(a1, (uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  sub_2361348B8(v32, (uint64_t)v13, (uint64_t *)&unk_26AD74BD0);
  uint64_t v24 = v8;
  uint64_t v26 = v33;
  uint64_t v25 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v24, v34, v33);
  sub_23617A8A8(a1, (uint64_t)v17, type metadata accessor for ReadingHistoryModel);
  uint64_t v27 = v31;
  sub_2361880D4(v25, v31);
  sub_236178248((uint64_t)v17, type metadata accessor for ReadingHistoryModel);
  sub_23617AC7C((uint64_t)v19, (uint64_t)v23, type metadata accessor for ReadingHistoryModel);
  sub_23612D5D0((uint64_t)v13, (uint64_t)&v23[v21[7]], (uint64_t *)&unk_26AD74BD0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v21[8]], v30, v26);
  sub_23612D5D0((uint64_t)v27, (uint64_t)&v23[v21[9]], (uint64_t *)&unk_26AD74BD0);
  sub_23616A794((uint64_t)v23, v35, 0x656772656DLL, 0xE500000000000000);
  return sub_236178248((uint64_t)v23, type metadata accessor for ReadingHistoryDataStore.State);
}

uint64_t sub_2361688C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_236126188(&qword_26AD74180);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  char v43 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v40 - v9;
  uint64_t v11 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v40 - v15;
  uint64_t v17 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2361348B8(a2, (uint64_t)v16, (uint64_t *)&unk_26AD74BD0);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v21(v16, 1, v17) == 1)
  {
    sub_23613491C((uint64_t)v16, (uint64_t *)&unk_26AD74BD0);
    return sub_23617A8A8(a1, a3, type metadata accessor for ReadingHistoryModel);
  }
  uint64_t v42 = a3;
  sub_23617AC7C((uint64_t)v16, (uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
  uint64_t v22 = *(int *)(v17 + 20);
  uint64_t v23 = *(void *)&v20[v22];
  sub_2361880D4((uint64_t)v20, v14);
  if (v21(v14, 1, v17) == 1)
  {
    sub_23613491C((uint64_t)v14, (uint64_t *)&unk_26AD74BD0);
    if (v23 < 1) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v24 = *(void *)&v14[*(int *)(v17 + 20)];
    sub_236178248((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
    if (v24 >= v23)
    {
LABEL_11:
      sub_236178248((uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
      a3 = v42;
      return sub_23617A8A8(a1, a3, type metadata accessor for ReadingHistoryModel);
    }
  }
  type metadata accessor for ReadingHistoryModel(0);
  uint64_t v44 = *(void *)&v20[v22];
  uint64_t v25 = sub_236126188(&qword_26AD75EE0);
  sub_2361FE518();
  uint64_t v26 = sub_2361FD748();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26);
  sub_23613491C((uint64_t)v10, &qword_26AD74180);
  if (v28 != 1) {
    goto LABEL_11;
  }
  uint64_t v41 = v25;
  v40[3] = sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
    swift_once();
  }
  uint64_t v29 = (void *)qword_26AD74FA0;
  sub_236126188(&qword_26AD76040);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = *(void *)&v20[v22];
  uint64_t v32 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v30 + 16) = xmmword_23620DFC0;
  uint64_t v33 = MEMORY[0x263F8D750];
  *(void *)(v30 + 56) = v32;
  *(void *)(v30 + 64) = v33;
  *(void *)(v30 + 32) = v31;
  id v34 = v29;
  uint64_t v35 = sub_2361FD6B8();
  uint64_t v37 = v36;
  *(void *)(v30 + 96) = MEMORY[0x263F8D310];
  *(void *)(v30 + 104) = sub_23613B7F0();
  *(void *)(v30 + 72) = v35;
  *(void *)(v30 + 80) = v37;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  sub_23617A8A8(a1, v42, type metadata accessor for ReadingHistoryModel);
  uint64_t v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v43, v20, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v38, 0, 1, v26);
  uint64_t v44 = v31;
  sub_2361FE528();
  return sub_236178248((uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
}

uint64_t sub_236168DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v140 = a3;
  uint64_t v148 = sub_236126188(&qword_26AD75EF0);
  uint64_t v155 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t v147 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v146 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_236126188((uint64_t *)&unk_26AD75F70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v161 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD75F48);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_2361FD7D8();
  uint64_t v157 = *(void (***)(char *, uint64_t))(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v162 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_236126188(&qword_26AD74F40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v160 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v153 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v169 = (uint64_t)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v138 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v141 = (char *)&v131 - v21;
  uint64_t v185 = sub_2361FD7F8();
  uint64_t v180 = *(void *)(v185 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v185);
  uint64_t v176 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v183 = (char *)&v131 - v24;
  uint64_t v25 = sub_236126188(&qword_26AD741A0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v178 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_236126188(&qword_26AD74198);
  MEMORY[0x270FA5388](v27 - 8);
  id v182 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v181 = (void (**)(char *, char *, uint64_t))sub_2361FD4D8();
  uint64_t v29 = (uint64_t)*(v181 - 1);
  MEMORY[0x270FA5388](v181);
  uint64_t v179 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_236126188(&qword_26AD74180);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v139 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v131 - v34;
  uint64_t v36 = sub_2361FD748();
  uint64_t v184 = *(char **)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v165 = (char *)&v131 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  id v168 = (char *)&v131 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v167 = (char *)&v131 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v142 = (char *)&v131 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v177 = (char *)&v131 - v46;
  MEMORY[0x270FA5388](v45);
  int64_t v164 = (char *)&v131 - v47;
  uint64_t v166 = a1;
  uint64_t v188 = a1;
  swift_bridgeObjectRetain();
  sub_236174E1C((uint64_t)sub_23617AE50, (uint64_t)v187, a2);
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_23619D2C0(v48);
  swift_release();
  uint64_t v189 = v49;
  sub_2361743BC((uint64_t *)&v189);
  swift_release();
  uint64_t v50 = (uint64_t)v189;
  uint64_t v51 = v189[2];
  uint64_t v145 = v12;
  uint64_t v159 = v16;
  if (v51)
  {
    uint64_t v174 = (void (*)(void))(v180 + 8);
    uint64_t v175 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
    uint64_t v172 = (unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48);
    uint64_t v173 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v29 + 8);
    uint64_t v171 = (uint64_t)(v184 + 32);
    uint64_t v170 = (void (*)(char *, char *, uint64_t))(v184 + 56);
    swift_retain();
    char v158 = (void (**)(char *, void, uint64_t))v50;
    uint64_t v52 = (void *)(v50 + 40);
    unint64_t v186 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v53 = *(v52 - 1);
      uint64_t v54 = 100 * v53;
      if ((unsigned __int128)(v53 * (__int128)100) >> 64 != (100 * v53) >> 63)
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      if (__OFADD__(v54, *v52)) {
        goto LABEL_53;
      }
      if (v54 + *v52 <= 9999)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v170)(v35, 1, 1, v36);
      }
      else
      {
        uint64_t v55 = v185;
        (*v175)(v182, 1, 1, v185);
        uint64_t v56 = sub_2361FD808();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v178, 1, 1, v56);
        uint64_t v57 = v179;
        sub_2361FD4C8();
        id v58 = v183;
        sub_2361FD758();
        sub_2361FD798();
        (*(void (**)(char *, uint64_t))v174)(v58, v55);
        (*v173)(v57, v181);
        if ((*v172)(v35, 1, v36) != 1)
        {
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))v171;
          uint64_t v60 = v164;
          (*(void (**)(char *, char *, uint64_t))v171)(v164, v35, v36);
          v59(v177, v60, v36);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v61 = v186;
          }
          else {
            unint64_t v61 = sub_236174748(0, *(void *)(v186 + 16) + 1, 1, v186, &qword_2688538F0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
          }
          unint64_t v63 = *(void *)(v61 + 16);
          unint64_t v62 = *(void *)(v61 + 24);
          if (v63 >= v62 >> 1) {
            unint64_t v61 = sub_236174748(v62 > 1, v63 + 1, 1, v61, &qword_2688538F0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
          }
          *(void *)(v61 + 16) = v63 + 1;
          unint64_t v64 = (v184[80] + 32) & ~(unint64_t)v184[80];
          unint64_t v186 = v61;
          v59((char *)(v61 + v64 + *((void *)v184 + 9) * v63), v177, v36);
          goto LABEL_5;
        }
      }
      sub_23613491C((uint64_t)v35, &qword_26AD74180);
LABEL_5:
      v52 += 2;
      if (!--v51)
      {
        swift_release();
        unint64_t v65 = v186;
        goto LABEL_18;
      }
    }
  }
  unint64_t v65 = MEMORY[0x263F8EE78];
LABEL_18:
  swift_release();
  uint64_t v66 = v168;
  if (*(void *)(v65 + 16))
  {
    uint64_t v67 = v184;
    uint64_t v178 = *(char **)(v65 + 16);
    unint64_t v68 = (v67[80] + 32) & ~(unint64_t)v67[80];
    unint64_t v186 = v65;
    size_t v69 = (void (*)(void))*((void *)v184 + 2);
    uint64_t v177 = (char *)(v65 + v68);
    uint64_t v174 = v69;
    uint64_t v175 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v184 + 16);
    v69();
    int64_t v70 = v183;
    sub_2361FD758();
    uint64_t v71 = (uint64_t)v167;
    sub_2361FD698();
    uint64_t v171 = sub_2361888F0(v71, 1);
    uint64_t v72 = (void (*)(uint64_t, uint64_t))*((void *)v67 + 1);
    v67 += 8;
    v72(v71, v36);
    uint64_t v73 = v180 + 8;
    uint64_t v74 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v180 + 8);
    uint64_t v75 = v185;
    ((void (*)(char *, uint64_t))v74)(v70, v185);
    sub_2361FD758();
    sub_2361FD698();
    uint64_t v76 = v75;
    uint64_t v77 = (void (*)(char *, uint64_t))v72;
    uint64_t v180 = v73;
    uint64_t v172 = v74;
    ((void (*)(char *, uint64_t))v74)(v70, v76);
    uint64_t v78 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v79 = *(void *)(v78 - 8);
    id v80 = *(void (**)(char *, void, uint64_t))(v79 + 56);
    uint64_t v81 = v79 + 56;
    uint64_t v82 = (uint64_t)v141;
    uint64_t v137 = v78;
    uint64_t v134 = v80;
    v80(v141, 1, 1);
    uint64_t v83 = 0;
    uint64_t v179 = v67 + 48;
    uint64_t v173 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v67 + 40);
    id v181 = (void (**)(char *, char *, uint64_t))(v67 + 24);
    id v182 = v67;
    LODWORD(v164) = *MEMORY[0x263F078A0];
    char v158 = (void (**)(char *, void, uint64_t))(v157 + 13);
    ++v157;
    uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v155 + 16);
    unsigned int v156 = *MEMORY[0x263F078A8];
    uint64_t v143 = (void (**)(char *, uint64_t))(v155 + 8);
    uint64_t v154 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 7);
    LODWORD(v155) = *MEMORY[0x263F07870];
    v153 += 6;
    uint64_t v133 = v81;
    uint64_t v136 = (unsigned int (**)(char *, uint64_t, uint64_t))(v81 - 8);
    uint64_t v135 = v178 - 1;
    uint64_t v84 = v139;
    unint64_t v85 = v165;
    while (1)
    {
LABEL_20:
      if ((unint64_t)v83 >= *(void *)(v186 + 16)) {
        goto LABEL_54;
      }
      uint64_t v86 = v184;
      ((void (*)(char *, char *, uint64_t))v174)(v84, &v177[*((void *)v184 + 9) * (void)v83], v36);
      uint64_t v87 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v86 + 7);
      v87(v84, 0, 1, v36);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v86 + 6))(v84, 1, v36) == 1)
      {
        uint64_t v128 = v77;
LABEL_51:
        swift_bridgeObjectRelease();
        v128(v66, v36);
        v128(v142, v36);
        return sub_23612D5D0(v82, v140, (uint64_t *)&unk_26AD74BD0);
      }
      uint64_t v88 = *v181;
      (*v181)(v85, v84, v36);
      if (sub_2361FD6F8()) {
        break;
      }
      ++v83;
      v77(v85, v36);
      if (v178 == v83)
      {
LABEL_48:
        uint64_t v128 = v77;
        v87(v84, 1, 1, v36);
        goto LABEL_51;
      }
    }
    uint64_t v89 = v183;
    sub_2361FD758();
    uint64_t v170 = v88;
    uint64_t v90 = v167;
    sub_2361FD6A8();
    ((void (*)(char *, uint64_t))v172)(v89, v185);
    v77(v66, v36);
    v170(v66, v90, v36);
    if (!__OFADD__(v171, 1))
    {
      ++v171;
      os_log_t v149 = v87;
      uint64_t v152 = v77;
      uint64_t v151 = v36;
      uint64_t v150 = v83;
      uint64_t v132 = v83 + 1;
      while (1)
      {
        sub_2361FD758();
        unint64_t v91 = *v158;
        int64_t v92 = v162;
        uint64_t v93 = v163;
        (*v158)(v162, v164, v163);
        uint64_t v94 = sub_2361FD7E8();
        uint64_t v95 = *v157;
        (*v157)(v92, v93);
        v91(v92, v156, v93);
        uint64_t v96 = sub_2361FD7E8();
        v95(v92, v93);
        v91(v92, v155, v93);
        uint64_t v97 = sub_2361FD7E8();
        v95(v92, v93);
        uint64_t v98 = 100 * v94;
        if ((unsigned __int128)(v94 * (__int128)100) >> 64 != (100 * v94) >> 63) {
          goto LABEL_55;
        }
        BOOL v99 = __OFADD__(v98, v96);
        uint64_t v100 = v98 + v96;
        if (v99) {
          goto LABEL_56;
        }
        uint64_t v189 = (void *)v100;
        sub_236126188(&qword_26AD75F18);
        uint64_t v101 = (uint64_t)v161;
        sub_2361FE518();
        uint64_t v102 = sub_236126188((uint64_t *)&unk_26AD75F60);
        uint64_t v103 = *(void *)(v102 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102) == 1)
        {
          ((void (*)(char *, uint64_t))v172)(v176, v185);
          sub_23613491C(v101, (uint64_t *)&unk_26AD75F70);
          uint64_t v104 = 1;
          uint64_t v105 = (uint64_t)v160;
          uint64_t v66 = v168;
          uint64_t v36 = v151;
          uint64_t v106 = v150;
          uint64_t v87 = v149;
          uint64_t v107 = v170;
        }
        else
        {
          uint64_t v108 = v101;
          uint64_t v109 = (uint64_t)v146;
          MEMORY[0x237DFD6F0](v102);
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v108, v102);
          uint64_t v110 = v147;
          uint64_t v111 = v148;
          (*v144)(v147, v109, v148);
          sub_236178248(v109, type metadata accessor for ReadingHistoryMonth);
          uint64_t v189 = (void *)v97;
          uint64_t v112 = (uint64_t)v145;
          sub_2361FE518();
          (*v143)(v110, v111);
          uint64_t v113 = sub_236126188(&qword_26AD75F40);
          uint64_t v114 = *(void *)(v113 - 8);
          int v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113);
          uint64_t v36 = v151;
          uint64_t v106 = v150;
          uint64_t v87 = v149;
          uint64_t v107 = v170;
          if (v115 == 1)
          {
            ((void (*)(char *, uint64_t))v172)(v176, v185);
            sub_23613491C(v112, &qword_26AD75F48);
            uint64_t v104 = 1;
            uint64_t v105 = (uint64_t)v160;
          }
          else
          {
            uint64_t v105 = (uint64_t)v160;
            MEMORY[0x237DFD6F0](v113);
            ((void (*)(char *, uint64_t))v172)(v176, v185);
            (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v112, v113);
            uint64_t v104 = 0;
          }
          uint64_t v66 = v168;
        }
        uint64_t v116 = v159;
        (*v154)(v105, v104, 1, v159);
        int v117 = (*v153)(v105, 1, v116);
        unint64_t v85 = v165;
        if (v117 == 1)
        {
          sub_23613491C(v105, &qword_26AD74F40);
          goto LABEL_41;
        }
        sub_23617AC7C(v105, v169, type metadata accessor for ReadingHistoryDay);
        uint64_t v118 = sub_2361FE748();
        sub_236126188(&qword_26AD75E90);
        sub_2361FE0A8();
        if (v118 < (uint64_t)v189) {
          break;
        }
        if (__OFADD__(v171, 1)) {
          goto LABEL_57;
        }
        ++v171;
        uint64_t v119 = v183;
        sub_2361FD758();
        uint64_t v120 = v167;
        sub_2361FD6A8();
        ((void (*)(char *, uint64_t))v172)(v119, v185);
        sub_236178248(v169, type metadata accessor for ReadingHistoryDay);
        v152(v66, v36);
        v107(v66, v120, v36);
      }
      sub_236178248(v169, type metadata accessor for ReadingHistoryDay);
LABEL_41:
      uint64_t v82 = (uint64_t)v141;
      uint64_t v84 = v139;
      uint64_t v121 = v137;
      if ((*v136)(v141, 1, v137))
      {
        uint64_t v122 = v171;
        if (v171 >= 1) {
          goto LABEL_43;
        }
LABEL_45:
        uint64_t v77 = v152;
        v152(v85, v36);
      }
      else
      {
        uint64_t v122 = v171;
        if (*(void *)(v82 + *(int *)(v121 + 20)) >= v171) {
          goto LABEL_45;
        }
LABEL_43:
        uint64_t v171 = v122;
        id v123 = v183;
        sub_2361FD758();
        uint64_t v124 = v167;
        sub_2361FD698();
        uint64_t v82 = (uint64_t)v141;
        ((void (*)(char *, uint64_t))v172)(v123, v185);
        v152(v85, v36);
        uint64_t v125 = v138;
        v170(v138, v124, v36);
        *(void *)&v125[*(int *)(v137 + 20)] = v171;
        v134(v125, 0, 1);
        uint64_t v126 = (uint64_t)v125;
        uint64_t v77 = v152;
        sub_23617A910(v126, v82, (uint64_t *)&unk_26AD74BD0);
      }
      uint64_t v171 = 0;
      BOOL v127 = v135 == v106;
      uint64_t v83 = v132;
      if (v127) {
        goto LABEL_48;
      }
      goto LABEL_20;
    }
    goto LABEL_58;
  }
  uint64_t v129 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v140, 1, 1, v129);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23616A53C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23617A8A8(a1, (uint64_t)v7, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v8 = v2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A974((uint64_t)v7, v8, type metadata accessor for ReadingHistoryDataStore.State);
  swift_endAccess();
  sub_236164490();
  sub_236178248((uint64_t)v7, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange);
  uint64_t v16 = a2;
  uint64_t v10 = *(NSObject **)(v9 + 16);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_23617A9DC;
  v11[3] = v15;
  v11[4] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_23617AA60;
  *(void *)(v12 + 24) = v11;
  void aBlock[4] = sub_236159570;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  void aBlock[3] = &unk_26E9746B8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23616A794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_26AD74FA0;
  sub_236126188(&qword_26AD76040);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23620EF20;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_23613B7F0();
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  id v12 = v8;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2361640DC();
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 72) = v13;
  *(void *)(v9 + 80) = v14;
  uint64_t v15 = sub_236126188(&qword_26AD74880);
  uint64_t v16 = 0x676E6964616F6CLL;
  if (*(unsigned char *)(a2 + *(int *)(v15 + 44))) {
    uint64_t v16 = 0x7964616572;
  }
  unint64_t v17 = 0xE700000000000000;
  if (*(unsigned char *)(a2 + *(int *)(v15 + 44))) {
    unint64_t v17 = 0xE500000000000000;
  }
  *(void *)(v9 + 136) = v10;
  *(void *)(v9 + 144) = v11;
  *(void *)(v9 + 112) = v16;
  *(void *)(v9 + 120) = v17;
  uint64_t v18 = sub_2361D3F64();
  *(void *)(v9 + 176) = v10;
  *(void *)(v9 + 184) = v11;
  *(void *)(v9 + 152) = v18;
  *(void *)(v9 + 160) = v19;
  sub_2361FDB28();

  swift_bridgeObjectRelease();
  return sub_23616A53C(a1, a2);
}

uint64_t sub_23616A934(uint64_t a1, uint64_t a2, void (*a3)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))
{
  uint64_t v221 = a3;
  uint64_t v230 = a2;
  uint64_t v4 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v206 = (char *)&v187 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v205);
  uint64_t v207 = (char *)&v187 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188(&qword_26AD74180);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v198 = (char *)&v187 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v201 = (char *)&v187 - v10;
  uint64_t v212 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v214 = *(void *)(v212 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v212);
  uint64_t v204 = (char *)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v213 = (uint64_t)&v187 - v13;
  uint64_t v218 = sub_2361FD7D8();
  uint64_t v226 = *(void *)(v218 - 8);
  MEMORY[0x270FA5388](v218);
  uint64_t v219 = (char *)&v187 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_2361FD7F8();
  uint64_t v216 = *(char **)(v215 - 8);
  MEMORY[0x270FA5388](v215);
  uint64_t v217 = (char *)&v187 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v16 = MEMORY[0x270FA5388](v228);
  uint64_t v209 = (uint64_t)&v187 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v229 = (void (*)(char *, uint64_t))((char *)&v187 - v18);
  uint64_t v19 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v199 = (uint64_t)&v187 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v202 = (uint64_t)&v187 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v203 = (uint64_t)&v187 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v210 = (void (*)(char *, uint64_t))((char *)&v187 - v27);
  MEMORY[0x270FA5388](v26);
  uint64_t v222 = (uint64_t *)((char *)&v187 - v28);
  uint64_t v29 = sub_236126188(&qword_26AD74F40);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v225 = (uint64_t)&v187 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = (void (*)(uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))type metadata accessor for ReadingHistoryDay(0);
  uint64_t v223 = *((void *)v224 - 1);
  MEMORY[0x270FA5388](v224);
  uint64_t v220 = (uint64_t)&v187 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v32 = MEMORY[0x270FA5388](v200);
  uint64_t v208 = (uint64_t)&v187 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v211 = (uint64_t)&v187 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v187 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v187 - v39;
  uint64_t v41 = sub_2361FD748();
  uint64_t v227 = *(void *)(v41 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v187 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  uint64_t v47 = (char *)&v187 - v46;
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v187 - v49);
  MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v187 - v51;
  sub_23612D5D0(a1, (uint64_t)v234, &qword_26AD75038);
  uint64_t result = sub_23612D5D0(a1, (uint64_t)v239, &qword_26AD75038);
  if (v240) {
    uint64_t v54 = (double *)&v237;
  }
  else {
    uint64_t v54 = (double *)&v235;
  }
  double v55 = *v54;
  if (v240) {
    uint64_t v56 = v238;
  }
  else {
    uint64_t v56 = (unsigned __int8 *)&v236;
  }
  if (*(double *)(v230 + 136) != v55)
  {
    uint64_t v196 = v52;
    uint64_t v57 = (uint64_t)v229;
    uint64_t v193 = v47;
    uint64_t v192 = v44;
    uint64_t v194 = v50;
    uint64_t v195 = v38;
    uint64_t v197 = v41;
    unsigned __int8 v58 = *v56;
    if (*v56 == 3)
    {
      uint64_t v59 = v230;
      *(double *)(v230 + 136) = v55;
      uint64_t v60 = v59 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
      swift_beginAccess();
      uint64_t v61 = v227;
      unint64_t v62 = v196;
      uint64_t v63 = v197;
      (*(void (**)(char *, uint64_t, uint64_t))(v227 + 16))(v196, v60 + *(int *)(v228 + 24), v197);
      uint64_t v64 = (uint64_t)v40;
      sub_23617A8A8(v60, (uint64_t)v40, type metadata accessor for ReadingHistoryModel);
      uint64_t v65 = v225;
      ReadingHistoryModel.readingHistoryDay(for:)(v225);
      if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v223 + 48))(v65, 1, v224) == 1)
      {
        sub_23613491C(v65, &qword_26AD74F40);
        sub_236178248((uint64_t)v40, type metadata accessor for ReadingHistoryModel);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v63);
        *(unsigned char *)uint64_t v221 = 1;
      }
      else
      {
        uint64_t v100 = v220;
        sub_23617AC7C(v65, v220, type metadata accessor for ReadingHistoryDay);
        sub_2361FE748();
        sub_236126188(&qword_26AD75E90);
        sub_2361FE0A8();
        sub_2361FE748();
        sub_2361FE0A8();
        sub_236178248(v100, type metadata accessor for ReadingHistoryDay);
        sub_236178248(v64, type metadata accessor for ReadingHistoryModel);
        return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v63);
      }
      return result;
    }
    uint64_t result = sub_23612D5D0(a1, (uint64_t)v234, &qword_26AD75038);
    if ((v238[1] & 1) == 0 || (int v66 = v58) == 0)
    {
      *(double *)(v230 + 136) = v55;
      return result;
    }
    uint64_t v67 = v230;
    uint64_t v68 = v197;
    uint64_t v69 = v228;
    uint64_t v70 = (uint64_t)v195;
    uint64_t v71 = v194;
    uint64_t v72 = v227;
    if (v66 == 1)
    {
      uint64_t v73 = v230 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
      swift_beginAccess();
      uint64_t v74 = v72 + 16;
      uint64_t v75 = *(char **)(v72 + 16);
      ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v75)(v71, v73 + *(int *)(v69 + 24), v68);
      sub_23617A8A8(v73, v70, type metadata accessor for ReadingHistoryModel);
      if ((~*(void *)&v55 & 0x7FF0000000000000) != 0)
      {
        uint64_t v72 = v226;
        if (v55 > -9.22337204e18)
        {
          if (v55 < 9.22337204e18)
          {
            ReadingHistoryModel.setGoal(_:date:)((uint64_t)v55, (uint64_t)v71);
            type metadata accessor for ReadingHistoryDataStore(0);
            uint64_t v225 = v73;
            sub_23617A8A8(v73, v57, type metadata accessor for ReadingHistoryDataStore.State);
            uint64_t v76 = (uint64_t)v222;
            sub_236165F10(v57, v70, v71, (uint64_t)v222);
            sub_236178248(v57, type metadata accessor for ReadingHistoryDataStore.State);
            uint64_t v77 = v211;
            sub_2361688C4(v70, v76, v211);
            sub_236178248(v70, type metadata accessor for ReadingHistoryModel);
            sub_23617AC7C(v77, v70, type metadata accessor for ReadingHistoryModel);
            uint64_t v220 = v74;
            uint64_t v224 = (void (*)(uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v75;
            ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v75)((void (*)(char *, uint64_t, uint64_t, uint64_t))v193, v71, v68);
            sub_2361FD758();
            uint64_t v72 = *(void *)(v72 + 104);
            uint64_t v67 = (uint64_t)v219;
            LODWORD(v211) = *MEMORY[0x263F078A0];
            uint64_t v78 = v218;
            ((void (*)(char *))v72)(v219);
            uint64_t v79 = sub_2361FD7E8();
            id v80 = *(void (**)(uint64_t, uint64_t))(v226 + 8);
            v226 += 8;
            v80(v67, v78);
            LODWORD(v196) = *MEMORY[0x263F078A8];
            ((void (*)(uint64_t))v72)(v67);
            uint64_t v81 = sub_2361FD7E8();
            uint64_t v82 = v78;
            uint64_t v75 = (char *)v226;
            uint64_t v229 = (void (*)(char *, uint64_t))v80;
            v80(v67, v82);
            uint64_t v83 = 100 * v79;
            if ((unsigned __int128)(v79 * (__int128)100) >> 64 == (100 * v79) >> 63)
            {
              uint64_t v189 = v83 + v81;
              uint64_t v67 = v215;
              if (!__OFADD__(v83, v81))
              {
                uint64_t v84 = v219;
                unsigned int v191 = *MEMORY[0x263F07870];
                uint64_t v85 = v218;
                uint64_t v188 = (void (*)(char *, void, uint64_t))v72;
                ((void (*)(char *))v72)(v219);
                uint64_t v86 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
                uint64_t v87 = v217;
                uint64_t v190 = sub_2361FD7E8();
                uint64_t v88 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v227 + 8);
                uint64_t v223 = v227 + 8;
                uint64_t v221 = v88;
                v88(v86, v68);
                v229(v84, v85);
                uint64_t v90 = v216 + 8;
                uint64_t v89 = (void (*)(char *, uint64_t))*((void *)v216 + 1);
                v89(v87, v67);
                unint64_t v91 = (int *)v228;
                uint64_t v92 = v225;
                uint64_t v93 = v210;
                sub_2361348B8(v225 + *(int *)(v228 + 20), (uint64_t)v210, (uint64_t *)&unk_26AD74BD0);
                uint64_t v94 = v214 + 48;
                uint64_t v95 = *(uint64_t (**)(void (*)(void, void), uint64_t, uint64_t))(v214 + 48);
                uint64_t v96 = v212;
                int v97 = v95((void (*)(void, void))v93, 1, v212);
                uint64_t v98 = v213;
                if (v97 == 1)
                {
                  uint64_t v99 = (uint64_t)v93;
LABEL_26:
                  sub_23613491C(v99, (uint64_t *)&unk_26AD74BD0);
                  uint64_t v72 = (uint64_t)v207;
                  uint64_t v103 = (uint64_t)v206;
                  uint64_t v104 = v205;
                  uint64_t v105 = v197;
LABEL_39:
                  uint64_t v138 = v230;
LABEL_40:
                  uint64_t v139 = v209;
                  sub_23617A8A8((uint64_t)v195, v209, type metadata accessor for ReadingHistoryModel);
                  sub_2361348B8((uint64_t)v222, v139 + v91[5], (uint64_t *)&unk_26AD74BD0);
                  uint64_t v140 = (uint64_t)v194;
                  v224(v139 + v91[6], v194, v105);
                  sub_2361880D4(v140, (char *)(v139 + v91[7]));
                  swift_retain();
                  sub_2361FED38();
                  swift_release();
                  uint64_t v141 = sub_236126188(&qword_26AD75170);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v103, 1, 2, v141);
                  sub_23617A974(v139, v72, type metadata accessor for ReadingHistoryModel);
                  sub_23617A910(v103, v72 + *(int *)(v104 + 48), &qword_26AD747F0);
                  sub_23616A794(v139, v72, 0xD000000000000015, 0x800000023620B680);
                  *(double *)(v138 + 136) = v55;
                  sub_23612EA38(v138 + 56, (uint64_t)&v231);
                  uint64_t v142 = v232;
                  uint64_t v143 = v233;
                  sub_2361261CC(&v231, v232);
                  uint64_t v144 = v208;
                  sub_23617A8A8(v225, v208, type metadata accessor for ReadingHistoryModel);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v144, v142, v143);
                  sub_236178248(v144, type metadata accessor for ReadingHistoryModel);
                  sub_23612EF9C((uint64_t)&v231);
                  sub_23613491C(v72, &qword_26AD74880);
                  sub_236178248(v139, type metadata accessor for ReadingHistoryDataStore.State);
                  sub_236178248((uint64_t)v195, type metadata accessor for ReadingHistoryModel);
                  v221(v194, v105);
                  return sub_23613491C((uint64_t)v222, (uint64_t *)&unk_26AD74BD0);
                }
                sub_23617AC7C((uint64_t)v93, v213, type metadata accessor for ReadingHistory.Streak);
                uint64_t v101 = v92 + v91[7];
                uint64_t v102 = v203;
                sub_2361348B8(v101, v203, (uint64_t *)&unk_26AD74BD0);
                if (v95((void (*)(void, void))v102, 1, v96) == 1)
                {
                  sub_236178248(v98, type metadata accessor for ReadingHistory.Streak);
                  uint64_t v99 = v102;
                  goto LABEL_26;
                }
                uint64_t v210 = v89;
                uint64_t v214 = v94;
                uint64_t v216 = v90;
                sub_23617AC7C(v102, (uint64_t)v204, type metadata accessor for ReadingHistory.Streak);
                v224((uint64_t)v193, (void (*)(char *, uint64_t, uint64_t, uint64_t))v98, v197);
                sub_2361FD758();
                uint64_t v67 = (uint64_t)v219;
                uint64_t v75 = (char *)v218;
                uint64_t v72 = (uint64_t)v188;
                v188(v219, v211, v218);
                uint64_t v106 = sub_2361FD7E8();
                uint64_t v107 = (void (*)(uint64_t, char *))v229;
                v229((char *)v67, (uint64_t)v75);
                ((void (*)(uint64_t, void, char *))v72)(v67, v196, v75);
                uint64_t v108 = sub_2361FD7E8();
                v107(v67, v75);
                uint64_t v109 = 100 * v106;
                if ((unsigned __int128)(v106 * (__int128)100) >> 64 == (100 * v106) >> 63)
                {
                  uint64_t v110 = v109 + v108;
                  uint64_t v111 = v189;
                  if (!__OFADD__(v109, v108))
                  {
                    uint64_t v112 = v219;
                    uint64_t v113 = v218;
                    ((void (*)(char *, void, uint64_t))v72)(v219, v191, v218);
                    uint64_t v114 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
                    int v115 = v217;
                    uint64_t v116 = sub_2361FD7E8();
                    v221(v114, v197);
                    v229(v112, v113);
                    v210(v115, v215);
                    if (v110 != v111 || v116 != v190) {
                      goto LABEL_37;
                    }
                    v224((uint64_t)v193, (void (*)(char *, uint64_t, uint64_t, uint64_t))v204, v197);
                    sub_2361FD758();
                    uint64_t v67 = (uint64_t)v219;
                    uint64_t v75 = (char *)v218;
                    ((void (*)(char *, void, uint64_t))v72)(v219, v211, v218);
                    uint64_t v117 = sub_2361FD7E8();
                    uint64_t v118 = (void (*)(uint64_t, char *))v229;
                    v229((char *)v67, (uint64_t)v75);
                    ((void (*)(uint64_t, void, char *))v72)(v67, v196, v75);
                    uint64_t v119 = sub_2361FD7E8();
                    v118(v67, v75);
                    uint64_t v120 = 100 * v117;
                    if ((unsigned __int128)(v117 * (__int128)100) >> 64 == (100 * v117) >> 63)
                    {
                      uint64_t v121 = v120 + v119;
                      if (!__OFADD__(v120, v119))
                      {
                        uint64_t v122 = v219;
                        uint64_t v123 = v218;
                        ((void (*)(char *, void, uint64_t))v72)(v219, v191, v218);
                        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
                        uint64_t v125 = v217;
                        uint64_t v126 = sub_2361FD7E8();
                        v221(v124, v197);
                        uint64_t v127 = v123;
                        uint64_t v75 = (char *)v226;
                        v229(v122, v127);
                        v210(v125, v215);
                        if (v121 == v111 && v126 == v190)
                        {
                          uint64_t v128 = (uint64_t)v222;
                          uint64_t v129 = v212;
                          int v130 = v95((void (*)(void, void))v222, 1, v212);
                          uint64_t v131 = v128;
                          uint64_t v132 = v202;
                          sub_2361348B8(v131, v202, (uint64_t *)&unk_26AD74BD0);
                          if (v130 == 1)
                          {
                            sub_23613491C(v132, (uint64_t *)&unk_26AD74BD0);
                            uint64_t v133 = (uint64_t)v204;
                            uint64_t v134 = v219;
                            uint64_t v135 = (void (*)(char *, char *, uint64_t))v224;
                            uint64_t v67 = (uint64_t)v201;
                            uint64_t v136 = v200;
                            goto LABEL_49;
                          }
                          uint64_t v145 = v132;
                          uint64_t v146 = v199;
                          sub_2361348B8(v145, v199, (uint64_t *)&unk_26AD74BD0);
                          uint64_t result = v95((void (*)(void, void))v146, 1, v129);
                          if (result == 1)
                          {
                            __break(1u);
                            return result;
                          }
                          v224((uint64_t)v193, (void (*)(char *, uint64_t, uint64_t, uint64_t))v146, v197);
                          sub_236178248(v146, type metadata accessor for ReadingHistory.Streak);
                          sub_2361FD758();
                          uint64_t v147 = v219;
                          uint64_t v67 = v218;
                          ((void (*)(char *, void, uint64_t))v72)(v219, v211, v218);
                          uint64_t v148 = sub_2361FD7E8();
                          os_log_t v149 = v229;
                          v229(v147, v67);
                          ((void (*)(char *, void, uint64_t))v72)(v147, v196, v67);
                          uint64_t v150 = sub_2361FD7E8();
                          v149(v147, v67);
                          uint64_t v151 = 100 * v148;
                          if ((unsigned __int128)(v148 * (__int128)100) >> 64 == (100 * v148) >> 63)
                          {
                            uint64_t v152 = v151 + v150;
                            uint64_t v75 = v216;
                            if (!__OFADD__(v151, v150))
                            {
                              uint64_t v134 = v219;
                              uint64_t v67 = v218;
                              ((void (*)(char *, void, uint64_t))v72)(v219, v191, v218);
                              uint64_t v153 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
                              uint64_t v154 = v217;
                              uint64_t v155 = sub_2361FD7E8();
                              v221(v153, v197);
                              v229(v134, v67);
                              v210(v154, v215);
                              sub_23613491C(v202, (uint64_t *)&unk_26AD74BD0);
                              uint64_t v156 = 100 * v152;
                              if ((unsigned __int128)(v152 * (__int128)100) >> 64 == (100 * v152) >> 63)
                              {
                                BOOL v157 = __OFADD__(v156, v155);
                                uint64_t v158 = v156 + v155;
                                uint64_t v135 = (void (*)(char *, char *, uint64_t))v224;
                                uint64_t v67 = (uint64_t)v201;
                                if (!v157)
                                {
                                  uint64_t v159 = 100 * v111;
                                  if ((unsigned __int128)(v111 * (__int128)100) >> 64 == (100 * v111) >> 63)
                                  {
                                    BOOL v157 = __OFADD__(v159, v190);
                                    uint64_t v160 = v159 + v190;
                                    uint64_t v136 = v200;
                                    uint64_t v133 = (uint64_t)v204;
                                    if (!v157)
                                    {
                                      if (v158 < v160)
                                      {
LABEL_49:
                                        uint64_t v214 = *(int *)(v212 + 20);
                                        uint64_t v161 = (uint64_t)&v195[*(int *)(v136 + 20)];
                                        uint64_t v231 = *(void *)(v133 + v214);
                                        uint64_t v162 = sub_236126188(&qword_26AD75EE0);
                                        sub_2361FE518();
                                        uint64_t v163 = v227;
                                        uint64_t v164 = v197;
                                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v227 + 48))(v67, 1, v197) == 1)
                                        {
                                          sub_236178248(v133, type metadata accessor for ReadingHistory.Streak);
                                          sub_236178248(v213, type metadata accessor for ReadingHistory.Streak);
                                          sub_23613491C(v67, &qword_26AD74180);
                                          uint64_t v72 = (uint64_t)v207;
                                          uint64_t v138 = v230;
                                          uint64_t v103 = (uint64_t)v206;
                                          uint64_t v104 = v205;
                                          uint64_t v105 = v164;
LABEL_60:
                                          unint64_t v91 = (int *)v228;
                                          goto LABEL_40;
                                        }
                                        uint64_t v212 = v162;
                                        uint64_t v203 = v161;
                                        uint64_t v165 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 32);
                                        uint64_t v166 = v192;
                                        v165(v192, v67, v164);
                                        v135(v193, v166, v164);
                                        sub_2361FD758();
                                        uint64_t v67 = v218;
                                        ((void (*)(char *, void, uint64_t))v72)(v134, v211, v218);
                                        uint64_t v167 = sub_2361FD7E8();
                                        uint64_t v75 = (char *)v226;
                                        id v168 = v229;
                                        v229(v134, v67);
                                        ((void (*)(char *, void, uint64_t))v72)(v134, v196, v67);
                                        uint64_t v169 = sub_2361FD7E8();
                                        v168(v134, v67);
                                        uint64_t v170 = 100 * v167;
                                        if ((unsigned __int128)(v167 * (__int128)100) >> 64 == (100 * v167) >> 63)
                                        {
                                          uint64_t v171 = v170 + v169;
                                          uint64_t v75 = v216;
                                          uint64_t v172 = v189;
                                          if (!__OFADD__(v170, v169))
                                          {
                                            uint64_t v173 = v219;
                                            uint64_t v174 = v218;
                                            ((void (*)(char *, void, uint64_t))v72)(v219, v191, v218);
                                            uint64_t v175 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v193;
                                            uint64_t v176 = v217;
                                            uint64_t v177 = sub_2361FD7E8();
                                            v221(v175, v197);
                                            v229(v173, v174);
                                            v210(v176, v215);
                                            uint64_t v75 = v204;
                                            if (v171 != v172 || v177 != v190)
                                            {
                                              uint64_t v105 = v197;
                                              v221((void (*)(char *, uint64_t, uint64_t, uint64_t))v192, v197);
                                              sub_236178248((uint64_t)v75, type metadata accessor for ReadingHistory.Streak);
                                              sub_236178248(v213, type metadata accessor for ReadingHistory.Streak);
                                              uint64_t v72 = (uint64_t)v207;
                                              goto LABEL_59;
                                            }
                                            sub_2361FEC88();
                                            uint64_t v72 = (uint64_t)v207;
                                            uint64_t v67 = (uint64_t)v192;
                                            if (qword_26AD74FA8 == -1)
                                            {
LABEL_56:
                                              uint64_t v178 = (void *)qword_26AD74FA0;
                                              sub_236126188(&qword_26AD76040);
                                              uint64_t v179 = swift_allocObject();
                                              uint64_t v180 = *(void *)&v75[v214];
                                              uint64_t v181 = MEMORY[0x263F8D6C8];
                                              *(_OWORD *)(v179 + 16) = xmmword_23620DFC0;
                                              uint64_t v182 = MEMORY[0x263F8D750];
                                              *(void *)(v179 + 56) = v181;
                                              *(void *)(v179 + 64) = v182;
                                              *(void *)(v179 + 32) = v180;
                                              id v183 = v178;
                                              uint64_t v184 = sub_2361FD6B8();
                                              uint64_t v186 = v185;
                                              *(void *)(v179 + 96) = MEMORY[0x263F8D310];
                                              *(void *)(v179 + 104) = sub_23613B7F0();
                                              *(void *)(v179 + 72) = v184;
                                              *(void *)(v179 + 80) = v186;
                                              sub_2361FDB28();

                                              swift_bridgeObjectRelease();
                                              uint64_t v105 = v197;
                                              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v227 + 56))(v198, 1, 1, v197);
                                              uint64_t v231 = v180;
                                              sub_2361FE528();
                                              v221((void (*)(char *, uint64_t, uint64_t, uint64_t))v67, v105);
                                              sub_236178248((uint64_t)v75, type metadata accessor for ReadingHistory.Streak);
                                              sub_236178248(v213, type metadata accessor for ReadingHistory.Streak);
LABEL_59:
                                              uint64_t v138 = v230;
                                              uint64_t v103 = (uint64_t)v206;
                                              uint64_t v104 = v205;
                                              goto LABEL_60;
                                            }
LABEL_78:
                                            swift_once();
                                            goto LABEL_56;
                                          }
LABEL_77:
                                          __break(1u);
                                          goto LABEL_78;
                                        }
LABEL_76:
                                        __break(1u);
                                        goto LABEL_77;
                                      }
                                      uint64_t v137 = (uint64_t)v204;
LABEL_38:
                                      sub_236178248(v137, type metadata accessor for ReadingHistory.Streak);
                                      sub_236178248(v213, type metadata accessor for ReadingHistory.Streak);
                                      uint64_t v72 = (uint64_t)v207;
                                      uint64_t v103 = (uint64_t)v206;
                                      uint64_t v104 = v205;
                                      uint64_t v105 = v197;
                                      unint64_t v91 = (int *)v228;
                                      goto LABEL_39;
                                    }
LABEL_75:
                                    __break(1u);
                                    goto LABEL_76;
                                  }
LABEL_74:
                                  __break(1u);
                                  goto LABEL_75;
                                }
LABEL_73:
                                __break(1u);
                                goto LABEL_74;
                              }
LABEL_72:
                              __break(1u);
                              goto LABEL_73;
                            }
LABEL_71:
                            __break(1u);
                            goto LABEL_72;
                          }
LABEL_70:
                          __break(1u);
                          goto LABEL_71;
                        }
LABEL_37:
                        uint64_t v137 = (uint64_t)v204;
                        goto LABEL_38;
                      }
LABEL_69:
                      __break(1u);
                      goto LABEL_70;
                    }
LABEL_68:
                    __break(1u);
                    goto LABEL_69;
                  }
LABEL_67:
                  __break(1u);
                  goto LABEL_68;
                }
LABEL_66:
                __break(1u);
                goto LABEL_67;
              }
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_63;
    }
  }
  return result;
}

uint64_t ReadingHistoryModel.readingDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_236126188(&qword_26AD74F40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_23613491C((uint64_t)v4, &qword_26AD74F40);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = 2;
  }
  else
  {
    sub_23617AC7C((uint64_t)v4, (uint64_t)v8, type metadata accessor for ReadingHistoryDay);
    uint64_t v10 = sub_2361FE748();
    sub_236126188(&qword_26AD75E90);
    sub_2361FE0A8();
    uint64_t v11 = v14[1];
    uint64_t v13 = sub_2361FE748();
    sub_2361FE0A8();
    char v12 = v13 >= v14[0];
    uint64_t result = sub_236178248((uint64_t)v8, type metadata accessor for ReadingHistoryDay);
  }
  *(void *)a1 = v10;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v11;
  *(unsigned char *)(a1 + 16) = v12;
  return result;
}

uint64_t sub_23616C9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v63 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v3 = MEMORY[0x270FA5388](v63);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v57 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_236126188(&qword_26AD75030);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v57 - v15;
  uint64_t v62 = sub_236126188(&qword_26AD74880);
  uint64_t v17 = MEMORY[0x270FA5388](v62);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v57 = (uint64_t)&v57 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (uint64_t)&v57 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v58 = (uint64_t)&v57 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v57 - v26;
  uint64_t v60 = a1;
  sub_2361348B8(a1, (uint64_t)v16, &qword_26AD75030);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v61 = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v29 = sub_236126188(&qword_268853710);
    sub_23612D5D0((uint64_t)&v16[*(int *)(v29 + 48)], (uint64_t)v27, &qword_26AD74880);
    sub_23613491C((uint64_t)v16, &qword_26AD74880);
  }
  else
  {
    sub_23612D5D0((uint64_t)v16, (uint64_t)v27, &qword_26AD74880);
  }
  sub_23617A8A8((uint64_t)v27, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  uint64_t v30 = v64;
  uint64_t v31 = v64 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A8A8(v31, (uint64_t)v8, type metadata accessor for ReadingHistoryModel);
  sub_23617C108(&qword_26AD751C0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v32 = sub_2361FE2E8();
  sub_236178248((uint64_t)v8, type metadata accessor for ReadingHistoryModel);
  sub_236178248((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  if (v32)
  {
    uint64_t v33 = v27;
    sub_236166C70((uint64_t)v27);
    sub_2361348B8(v60, (uint64_t)v14, &qword_26AD75030);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = (uint64_t)&v14[*(int *)(sub_236126188(&qword_268853710) + 48)];
      uint64_t v35 = (uint64_t)v14;
      uint64_t v36 = v58;
      sub_23612D5D0(v35, v58, &qword_26AD74880);
      uint64_t v37 = v59;
      sub_23612D5D0(v34, v59, &qword_26AD74880);
      uint64_t v38 = v62;
      LOBYTE(v34) = *(unsigned char *)(v36 + *(int *)(v62 + 44));
      uint64_t v39 = v57;
      sub_2361348B8(v37, v57, &qword_26AD74880);
      if (v34)
      {
        sub_23613491C(v39, &qword_26AD74880);
      }
      else
      {
        char v53 = *(unsigned char *)(v39 + *(int *)(v38 + 44));
        sub_23613491C(v39, &qword_26AD74880);
        if ((v53 & 1) != 0 && *(unsigned char *)(v30 + 152) == 1) {
          sub_23616D0F8();
        }
      }
      sub_23613491C(v37, &qword_26AD74880);
      uint64_t v52 = v36;
      uint64_t v51 = &qword_26AD74880;
    }
    else
    {
      uint64_t v51 = &qword_26AD75030;
      uint64_t v52 = (uint64_t)v14;
    }
    sub_23613491C(v52, v51);
    sub_23612EA38(v30 + 56, (uint64_t)aBlock);
    uint64_t v54 = v66;
    double v55 = v67;
    sub_2361261CC(aBlock, (uint64_t)v66);
    uint64_t v56 = (uint64_t)v61;
    sub_23617A8A8(v31, (uint64_t)v61, type metadata accessor for ReadingHistoryModel);
    (*((void (**)(uint64_t, void *, uint64_t (*)()))v55 + 6))(v56, v54, v55);
    sub_236178248(v56, type metadata accessor for ReadingHistoryModel);
    sub_23612EF9C((uint64_t)aBlock);
    uint64_t v27 = v33;
    return sub_23613491C((uint64_t)v27, &qword_26AD74880);
  }
  uint64_t v40 = v62;
  int v41 = v27[*(int *)(v62 + 44)];
  uint64_t v42 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_2361FED38();
  swift_release();
  int v43 = v19[*(int *)(v40 + 44)];
  uint64_t v44 = sub_23613491C((uint64_t)v19, &qword_26AD74880);
  if (v41 == v43) {
    return sub_23613491C((uint64_t)v27, &qword_26AD74880);
  }
  uint64_t v45 = *(void *)(v30 + v42);
  MEMORY[0x270FA5388](v44);
  *(&v57 - 2) = (uint64_t)v27;
  uint64_t v46 = *(NSObject **)(v45 + 16);
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = sub_23617C150;
  v47[3] = &v57 - 4;
  void v47[4] = v45;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_23617C37C;
  *(void *)(v48 + 24) = v47;
  uint64_t v67 = sub_236159570;
  uint64_t v68 = v48;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  int v66 = &unk_26E974A00;
  uint64_t v49 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v46, v49);
  _Block_release(v49);
  LOBYTE(v46) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v46 & 1) == 0) {
    return sub_23613491C((uint64_t)v27, &qword_26AD74880);
  }
  __break(1u);
  return result;
}

uint64_t sub_23616D0F8()
{
  uint64_t v1 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v1 - 8);
  char v53 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_236126188(&qword_26AD75EE0);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_236126188(&qword_26AD75F18);
  uint64_t v6 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v9 = MEMORY[0x270FA5388](v44);
  uint64_t v52 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_236126188(&qword_26AD74880);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = v0;
  uint64_t v46 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_2361FED38();
  swift_release();
  int v19 = v17[*(int *)(v13 + 44)];
  uint64_t result = sub_23613491C((uint64_t)v17, &qword_26AD74880);
  if (v19 == 1)
  {
    *(void *)(v18 + 136) = 0x4072C00000000000;
    uint64_t v21 = v18 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
    uint64_t v43 = v18 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
    swift_beginAccess();
    uint64_t v42 = type metadata accessor for ReadingHistoryModel;
    sub_23617A8A8(v21, (uint64_t)v12, type metadata accessor for ReadingHistoryModel);
    uint64_t v22 = v45;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v45);
    sub_236161F04((uint64_t)v8, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    uint64_t v24 = (uint64_t)v47;
    uint64_t v23 = v48;
    uint64_t v25 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, &v12[*(int *)(v44 + 20)], v49);
    sub_23616232C(v24, (uint64_t)v12);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v26 = v54;
    sub_23617A8A8((uint64_t)v12, v54, type metadata accessor for ReadingHistoryModel);
    uint64_t v27 = v50;
    uint64_t v28 = v26 + *(int *)(v50 + 20);
    uint64_t v29 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    v30(v28, 1, 1, v29);
    uint64_t v31 = v43 + *(int *)(v27 + 24);
    v30(v26 + *(int *)(v27 + 28), 1, 1, v29);
    uint64_t v32 = v26 + *(int *)(v27 + 24);
    uint64_t v33 = sub_2361FD748();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v32, v31, v33);
    swift_retain();
    uint64_t v34 = (uint64_t)v51;
    sub_2361FED38();
    swift_release();
    uint64_t v35 = sub_236126188(&qword_26AD75170);
    uint64_t v36 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v53, 1, 2, v35);
    sub_23617A974((uint64_t)v12, v34, type metadata accessor for ReadingHistoryModel);
    sub_23617A910(v36, v34 + *(int *)(v13 + 48), &qword_26AD747F0);
    sub_23616A794(v26, v34, 0x7461447261656C63, 0xE900000000000061);
    sub_23612EA38(v18 + 56, (uint64_t)v55);
    uint64_t v37 = v56;
    uint64_t v38 = v57;
    sub_2361261CC(v55, v56);
    uint64_t v39 = v52;
    sub_23617A8A8(v43, v52, v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, v37, v38);
    sub_236178248(v39, type metadata accessor for ReadingHistoryModel);
    sub_23612EF9C((uint64_t)v55);
    sub_23613491C(v34, &qword_26AD74880);
    sub_236178248(v26, type metadata accessor for ReadingHistoryDataStore.State);
    uint64_t result = sub_236178248((uint64_t)v12, type metadata accessor for ReadingHistoryModel);
    char v40 = 0;
  }
  else
  {
    char v40 = 1;
  }
  *(unsigned char *)(v18 + 152) = v40;
  return result;
}

Swift::Void __swiftcall ReadingHistoryDataStore.handleSignificantDateChange()()
{
  uint64_t v1 = sub_2361FD7F8();
  Class isa = v1[-1].isa;
  dispatch_queue_t v45 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v42 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2361FD748();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v36 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v36 - v10;
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v36 - v12;
  int v38 = sub_2361FEC88();
  if (qword_26AD74FA8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_26AD74FA0;
  sub_236126188(&qword_26AD76040);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23620E120;
  uint64_t v16 = *(void (**)(void))(v0 + 120);
  id v17 = v14;
  uint64_t v37 = v0;
  v16();
  uint64_t v18 = sub_2361FD6B8();
  uint64_t v20 = v19;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v40 = v4 + 8;
  v39(v13, v3);
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  *(void *)(v15 + 64) = sub_23613B7F0();
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v20;
  sub_2361FDB28();

  uint64_t v21 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v16)(v21);
  uint64_t v22 = v42;
  sub_2361FD758();
  uint64_t v23 = v47;
  sub_2361FD768();
  (*((void (**)(char *, dispatch_queue_t))isa + 1))(v22, v45);
  uint64_t v24 = v37;
  dispatch_queue_t v45 = *(dispatch_queue_t *)(v37 + 144);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v26 = v43;
  v25(v43, v23, v3);
  uint64_t v27 = v46;
  v25(v46, v13, v3);
  uint64_t v28 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = (v28 + 24) & ~v28;
  uint64_t v30 = (v41 + v28 + v29) & ~v28;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v24;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v32(v31 + v29, v26, v3);
  v32(v31 + v30, v27, v3);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_236178190;
  *(void *)(v33 + 24) = v31;
  void aBlock[4] = sub_236134708;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  void aBlock[3] = &unk_26E9740A8;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v45, v34);
  _Block_release(v34);
  uint64_t v35 = v39;
  v39(v23, v3);
  v35(v13, v3);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v35) {
    __break(1u);
  }
}

void sub_23616DD64(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v92 = a2;
  uint64_t v4 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v86 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v88 = (uint64_t)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v91 = (uint64_t)v72 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v81 = (uint64_t)v72 - v11;
  uint64_t v80 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v12 = MEMORY[0x270FA5388](v80);
  uint64_t v87 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v72 - v14;
  uint64_t v16 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v77 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v82 = (uint64_t)v72 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v79 = (uint64_t)v72 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v72 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)v72 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v89 = (uint64_t)v72 - v29;
  uint64_t v30 = sub_236126188(&qword_26AD74880);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v90 = (uint64_t)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)v72 - v33;
  uint64_t v83 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  uint64_t v35 = a1;
  swift_retain();
  sub_2361FED38();
  swift_release();
  uint64_t v84 = v30;
  LODWORD(a1) = v34[*(int *)(v30 + 44)];
  sub_23613491C((uint64_t)v34, &qword_26AD74880);
  if (a1 == 1)
  {
    uint64_t v74 = 0;
    uint64_t v75 = v35;
    uint64_t v36 = v35 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
    swift_beginAccess();
    uint64_t v37 = (int *)v80;
    uint64_t v38 = v89;
    sub_2361348B8(v36 + *(int *)(v80 + 20), v89, (uint64_t *)&unk_26AD74BD0);
    uint64_t v39 = type metadata accessor for ReadingHistoryDataStore(0);
    sub_23617A8A8(v36, (uint64_t)v15, type metadata accessor for ReadingHistoryDataStore.State);
    int64_t v40 = v81;
    sub_23617A8A8(v36, v81, type metadata accessor for ReadingHistoryModel);
    v72[1] = v39;
    sub_236165F10((uint64_t)v15, v40, v92, (uint64_t)v28);
    sub_236178248(v40, type metadata accessor for ReadingHistoryModel);
    sub_236178248((uint64_t)v15, type metadata accessor for ReadingHistoryDataStore.State);
    sub_23617A8A8(v36, v91, type metadata accessor for ReadingHistoryModel);
    uint64_t v41 = v37[7];
    uint64_t v73 = v36;
    uint64_t v85 = v25;
    sub_2361348B8(v36 + v41, (uint64_t)v25, (uint64_t *)&unk_26AD74BD0);
    uint64_t v42 = v79;
    sub_2361348B8((uint64_t)v28, v79, (uint64_t *)&unk_26AD74BD0);
    uint64_t v43 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48);
    int v45 = v44(v42, 1, v43);
    uint64_t v76 = v28;
    uint64_t v46 = v40;
    if (v45 == 1)
    {
      sub_23613491C(v42, (uint64_t *)&unk_26AD74BD0);
      uint64_t v47 = 0;
    }
    else
    {
      uint64_t v47 = *(void *)(v42 + *(int *)(v43 + 20));
      sub_236178248(v42, type metadata accessor for ReadingHistory.Streak);
    }
    uint64_t v49 = v82;
    sub_2361348B8(v38, v82, (uint64_t *)&unk_26AD74BD0);
    int v50 = v44(v49, 1, v43);
    uint64_t v51 = v92;
    uint64_t v52 = v37;
    if (v50 == 1)
    {
      sub_23613491C(v49, (uint64_t *)&unk_26AD74BD0);
      uint64_t v53 = 0;
    }
    else
    {
      uint64_t v54 = v49;
      uint64_t v53 = *(void *)(v49 + *(int *)(v43 + 20));
      sub_236178248(v54, type metadata accessor for ReadingHistory.Streak);
    }
    uint64_t v55 = v75;
    uint64_t v56 = (uint64_t)v85;
    uint64_t v57 = v91;
    BOOL v58 = sub_23618AD8C(v51, 1);
    uint64_t v59 = (uint64_t)v87;
    if (v53 < v47 || v58)
    {
      sub_2361688C4(v57, (uint64_t)v76, v46);
      sub_236178248(v57, type metadata accessor for ReadingHistoryModel);
      sub_23617AC7C(v46, v57, type metadata accessor for ReadingHistoryModel);
      uint64_t v60 = v77;
      sub_2361880D4(v78, v77);
      sub_23613491C(v56, (uint64_t *)&unk_26AD74BD0);
      sub_23612D5D0((uint64_t)v60, v56, (uint64_t *)&unk_26AD74BD0);
    }
    sub_23617A8A8(v57, v59, type metadata accessor for ReadingHistoryModel);
    uint64_t v61 = (uint64_t)v76;
    sub_2361348B8((uint64_t)v76, v59 + v52[5], (uint64_t *)&unk_26AD74BD0);
    uint64_t v62 = v59 + v52[6];
    uint64_t v63 = sub_2361FD748();
    (*(void (**)(uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(*(void *)(v63 - 8) + 16))(v62, v92, v63);
    sub_2361348B8(v56, v59 + v52[7], (uint64_t *)&unk_26AD74BD0);
    swift_retain();
    uint64_t v64 = v90;
    uint64_t v65 = v84;
    int v66 = v74;
    sub_2361FED38();
    swift_release();
    uint64_t v67 = sub_236126188(&qword_26AD75170);
    uint64_t v68 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v86, 1, 2, v67);
    sub_23617A974(v59, v64, type metadata accessor for ReadingHistoryModel);
    sub_23617A910(v68, v64 + *(int *)(v65 + 48), &qword_26AD747F0);
    sub_23616A794(v59, v64, 0xD00000000000001BLL, 0x800000023620B560);
    sub_23612EA38(v55 + 56, (uint64_t)v93);
    uint64_t v69 = v94;
    uint64_t v70 = v95;
    sub_2361261CC(v93, v94);
    uint64_t v71 = v88;
    sub_23617A8A8(v73, v88, type metadata accessor for ReadingHistoryModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, v69, v70);
    if (v66) {

    }
    sub_236178248(v71, type metadata accessor for ReadingHistoryModel);
    sub_23612EF9C((uint64_t)v93);
    sub_23613491C(v90, &qword_26AD74880);
    sub_236178248(v59, type metadata accessor for ReadingHistoryDataStore.State);
    sub_23613491C((uint64_t)v85, (uint64_t *)&unk_26AD74BD0);
    sub_236178248(v91, type metadata accessor for ReadingHistoryModel);
    sub_23613491C(v61, (uint64_t *)&unk_26AD74BD0);
    sub_23613491C(v89, (uint64_t *)&unk_26AD74BD0);
  }
  else
  {
    sub_2361FEC88();
    if (qword_26AD74FA8 != -1) {
      swift_once();
    }
    id v48 = (id)qword_26AD74FA0;
    sub_2361FDB28();
  }
}

BOOL sub_23616E714(long long *a1, uint64_t a2)
{
  v22[1] = a2;
  uint64_t v3 = sub_236126188(&qword_26AD74F40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2361FD748();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *a1;
  sub_236187CDC((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v17 = &qword_26AD74180;
    uint64_t v18 = (uint64_t)v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_23617AC7C((uint64_t)v5, (uint64_t)v9, type metadata accessor for ReadingHistoryDay);
      uint64_t v20 = sub_2361FE748();
      sub_236126188(&qword_26AD75E90);
      sub_2361FE0A8();
      BOOL v19 = v20 >= (uint64_t)v23;
      sub_236178248((uint64_t)v9, type metadata accessor for ReadingHistoryDay);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return v19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = &qword_26AD74F40;
    uint64_t v18 = (uint64_t)v5;
  }
  sub_23613491C(v18, v17);
  return 0;
}

uint64_t ReadingHistoryDataStore.deinit()
{
  sub_23613491C(v0 + 16, &qword_26AD75E08);
  sub_23612EF9C(v0 + 56);

  swift_release();
  sub_236178248(v0 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ReadingHistoryDataStore.__deallocating_deinit()
{
  ReadingHistoryDataStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t ReadingHistoryDataStore.addObserver(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_2361628DC(a1, (uint64_t)sub_236142898, v6);
  swift_release();
  return swift_release();
}

uint64_t ReadingHistoryDataStore.addObserverWithEvent(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_2361628DC(a1, a2, a3);
  return swift_release();
}

uint64_t ReadingHistoryDataStore.removeObserver(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange);
  uint64_t v4 = *(NSObject **)(v3 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_236178340;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_236159570;
  void v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_23613F9DC;
  v9[3] = &unk_26E974148;
  uint64_t v7 = _Block_copy(v9);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t ReadingHistoryDataStore.increment(date:by:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2361FD748();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = *(NSObject **)(v2 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v10 + ((v7 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_236178430;
  *(void *)(v11 + 24) = v10;
  void aBlock[4] = sub_236159570;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  void aBlock[3] = &unk_26E9741C0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23616F000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_236126188(&qword_26AD74F40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = *(double *)(a1 + 136);
  uint64_t v17 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t result = sub_23617A8A8(v17, (uint64_t)v15, type metadata accessor for ReadingHistoryModel);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v28 = v12;
  ReadingHistoryModel.incrementReadingTime(date:amount:defaultGoal:)(a2, a3, (uint64_t)v16);
  sub_236126188(&qword_2688538F0);
  uint64_t v19 = sub_2361FD748();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v29 = v9;
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_23620E120;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v22 + v21, a2, v19);
  sub_23616F470(v23, (int64_t)v15, 0x6E656D6572636E69, 0xE900000000000074);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v29) == 1)
  {
    sub_236178248((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
    return sub_23613491C((uint64_t)v8, &qword_26AD74F40);
  }
  else
  {
    uint64_t v24 = (uint64_t)v28;
    sub_23617AC7C((uint64_t)v8, (uint64_t)v28, type metadata accessor for ReadingHistoryDay);
    swift_beginAccess();
    if (*(void *)(a1 + 40))
    {
      sub_23612EA38(a1 + 16, (uint64_t)v30);
      swift_endAccess();
      uint64_t v25 = v31;
      uint64_t v26 = v32;
      sub_2361261CC(v30, v31);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(a2, v24, v25, v26);
      sub_236178248(v24, type metadata accessor for ReadingHistoryDay);
      sub_236178248((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
      return sub_23612EF9C((uint64_t)v30);
    }
    else
    {
      sub_236178248(v24, type metadata accessor for ReadingHistoryDay);
      sub_236178248((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
      return swift_endAccess();
    }
  }
}

uint64_t sub_23616F470(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v125 = a3;
  uint64_t v126 = a4;
  uint64_t v129 = a1;
  uint64_t v134 = *v4;
  uint64_t v6 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v123 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v122);
  uint64_t v128 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v124 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v119 = (uint64_t)&v96 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v117 = (uint64_t)&v96 - v14;
  uint64_t v108 = sub_2361FD7D8();
  uint64_t v116 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v114 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_2361FD7F8();
  uint64_t v111 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v113 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v120 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v96 - v23;
  uint64_t v25 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v115 = (uint64_t)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v96 - v28;
  uint64_t v30 = sub_2361FD748();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v112 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v110 = (char *)&v96 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v96 - v36);
  uint64_t v127 = v4;
  uint64_t v38 = (uint64_t)v4 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v118 = v20;
  uint64_t v39 = v38 + *(int *)(v20 + 24);
  uint64_t v131 = v31;
  uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
  uint64_t v41 = v31 + 16;
  int64_t v40 = v42;
  uint64_t v133 = v30;
  v42((char *)v37, v39, v30);
  uint64_t v132 = v38;
  sub_23617A8A8(v38, (uint64_t)v24, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v121 = v29;
  uint64_t v135 = v37;
  sub_236165F10((uint64_t)v24, a2, v37, (uint64_t)v29);
  sub_236178248((uint64_t)v24, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v43 = *(void *)(v129 + 16);
  int v130 = (void (*)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v42;
  if (v43 != 1) {
    goto LABEL_4;
  }
  uint64_t v44 = v131;
  uint64_t v45 = v133;
  v40(v19, v129 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80)), v133);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v19, 0, 1, v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v19, 1, v45) == 1)
  {
    sub_23613491C((uint64_t)v19, &qword_26AD74180);
    goto LABEL_4;
  }
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  int v66 = v110;
  v65(v110, v19, v45);
  uint64_t v105 = v41;
  v40(v112, (unint64_t)v66, v45);
  sub_2361FD758();
  uint64_t v67 = v116;
  uint64_t v68 = v116 + 104;
  uint64_t v69 = *(void (**)(char *))(v116 + 104);
  uint64_t v70 = v114;
  LODWORD(v104) = *MEMORY[0x263F078A0];
  uint64_t v71 = v108;
  v69(v114);
  uint64_t v72 = sub_2361FD7E8();
  uint64_t v73 = *(void (**)(char *, uint64_t))(v67 + 8);
  v73(v70, v71);
  unsigned int v103 = *MEMORY[0x263F078A8];
  uint64_t v129 = v68;
  uint64_t v107 = v69;
  v69(v70);
  uint64_t v74 = sub_2361FD7E8();
  uint64_t v116 = v67 + 8;
  uint64_t v106 = v73;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v73)(v70, v71);
  uint64_t v75 = 100 * v72;
  if ((unsigned __int128)(v72 * (__int128)100) >> 64 != (100 * v72) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  BOOL v76 = __OFADD__(v75, v74);
  uint64_t v77 = v75 + v74;
  if (v76)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v102 = v77;
  uint64_t v78 = v114;
  unsigned int v99 = *MEMORY[0x263F07870];
  uint64_t v79 = v107;
  v107(v114);
  uint64_t v80 = v112;
  uint64_t v81 = v113;
  uint64_t v97 = sub_2361FD7E8();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v131 + 8);
  uint64_t v83 = v133;
  uint64_t v101 = v131 + 8;
  uint64_t v100 = v82;
  v82(v80, v133);
  uint64_t v84 = v106;
  v106(v78, v71);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v111 + 8);
  v111 += 8;
  uint64_t v98 = v85;
  v85(v81, v109);
  v130(v80, v135, v83);
  sub_2361FD758();
  ((void (*)(char *, void, uint64_t))v79)(v78, v104, v71);
  uint64_t v86 = sub_2361FD7E8();
  v84(v78, v71);
  ((void (*)(char *, void, uint64_t))v107)(v78, v103, v71);
  uint64_t v87 = sub_2361FD7E8();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v84)(v78, v71);
  uint64_t v88 = 100 * v86;
  if ((unsigned __int128)(v86 * (__int128)100) >> 64 != (100 * v86) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  BOOL v76 = __OFADD__(v88, v87);
  uint64_t v89 = v88 + v87;
  if (v76)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v90 = v114;
  uint64_t v104 = v89;
  ((void (*)(char *, void, uint64_t))v107)(v114, v99, v71);
  uint64_t v91 = v112;
  uint64_t v92 = v113;
  uint64_t v93 = sub_2361FD7E8();
  uint64_t v94 = v133;
  uint64_t v95 = v100;
  v100(v91, v133);
  v106(v90, v71);
  v98(v92, v109);
  v95(v110, v94);
  if (v102 == v104 && v97 == v93)
  {
    uint64_t v46 = v117;
    uint64_t v49 = (uint64_t)v121;
    sub_2361688C4(a2, (uint64_t)v121, v117);
    sub_236178248(a2, type metadata accessor for ReadingHistoryModel);
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v46 = v117;
  sub_23617A8A8(v132, v117, type metadata accessor for ReadingHistoryModel);
  uint64_t v47 = sub_236189060(a2);
  sub_236178248(v46, type metadata accessor for ReadingHistoryModel);
  uint64_t v48 = v115;
  sub_236168DD0(a2, v47, v115);
  swift_bridgeObjectRelease();
  sub_2361688C4(a2, v48, v46);
  sub_236178248(a2, type metadata accessor for ReadingHistoryModel);
  sub_23613491C(v48, (uint64_t *)&unk_26AD74BD0);
  uint64_t v49 = (uint64_t)v121;
LABEL_5:
  sub_23617AC7C(v46, a2, type metadata accessor for ReadingHistoryModel);
  int v50 = v127;
  uint64_t v51 = (uint64_t)v128;
  uint64_t v52 = v133;
  uint64_t v53 = (uint64_t)v120;
  uint64_t v54 = v119;
  if (*((unsigned char *)v127 + 96) == 1)
  {
    uint64_t v55 = v127[13];
    sub_23617A8A8(a2, v119, type metadata accessor for ReadingHistoryModel);
    sub_23618D124(v55);
  }
  else
  {
    sub_23617A8A8(a2, v119, type metadata accessor for ReadingHistoryModel);
  }
  sub_236178248(a2, type metadata accessor for ReadingHistoryModel);
  sub_23617AC7C(v54, a2, type metadata accessor for ReadingHistoryModel);
  sub_23617A8A8(a2, v53, type metadata accessor for ReadingHistoryModel);
  uint64_t v56 = v118;
  sub_2361348B8(v49, v53 + *(int *)(v118 + 20), (uint64_t *)&unk_26AD74BD0);
  uint64_t v57 = (uint64_t)v135;
  v130((char *)(v53 + *(int *)(v56 + 24)), v135, v52);
  sub_2361880D4(v57, (char *)(v53 + *(int *)(v56 + 28)));
  swift_retain();
  uint64_t v58 = v122;
  sub_2361FED38();
  swift_release();
  uint64_t v59 = sub_236126188(&qword_26AD75170);
  uint64_t v60 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v123, 1, 2, v59);
  sub_23617A974(v53, v51, type metadata accessor for ReadingHistoryModel);
  sub_23617A910(v60, v51 + *(int *)(v58 + 48), &qword_26AD747F0);
  sub_23616A794(v53, v51, v125, v126);
  sub_23612EA38((uint64_t)(v50 + 7), (uint64_t)&v136);
  uint64_t v61 = v137;
  uint64_t v62 = v138;
  sub_2361261CC(&v136, v137);
  uint64_t v63 = v124;
  sub_23617A8A8(v132, v124, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, v61, v62);
  sub_236178248(v63, type metadata accessor for ReadingHistoryModel);
  sub_23612EF9C((uint64_t)&v136);
  sub_23613491C(v51, &qword_26AD74880);
  sub_236178248(v53, type metadata accessor for ReadingHistoryDataStore.State);
  sub_23613491C(v49, (uint64_t *)&unk_26AD74BD0);
  return (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v131 + 8))(v135, v52);
}

uint64_t ReadingHistoryDataStore.applyUpdate(update:)(void *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 144);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_236178510;
  *(void *)(v5 + 24) = v4;
  void v9[4] = sub_236159570;
  void v9[5] = v5;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_23613F9DC;
  v9[3] = &unk_26E974238;
  uint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_236170428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v42 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (uint64_t)&v36 - v5;
  uint64_t v6 = sub_2361FD748();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v44 = v15;
  sub_23617A8A8(v16, (uint64_t)v15, type metadata accessor for ReadingHistoryModel);
  uint64_t v17 = ReadingHistoryUpdate.days.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = (void *)sub_23619D2E0(v17);
  swift_bridgeObjectRelease();
  int v50 = v18;
  sub_236174428(&v50);
  uint64_t v38 = a1;
  swift_bridgeObjectRelease();
  uint64_t v19 = v50[2];
  uint64_t v37 = v50;
  if (v19)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v20 = v7 + 16;
    uint64_t v21 = v22;
    uint64_t v23 = (char *)v50 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v47 = *(void *)(v20 + 56);
    uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v45 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    swift_retain();
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    unint64_t v36 = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v39 = v22;
    uint64_t v40 = v17;
    while (1)
    {
      v21(v12, v23, v6);
      uint64_t v24 = *v49;
      (*v49)(v12, 0, 1, v6);
      if ((*v48)(v12, 1, v6) == 1) {
        break;
      }
      (*v46)(v9, v12, v6);
      if (*(void *)(v17 + 16))
      {
        uint64_t v25 = v20;
        unint64_t v26 = sub_23612B024((uint64_t)v9);
        if (v27)
        {
          uint64_t v28 = v42;
          sub_23617A8A8(*(void *)(v17 + 56) + *(void *)(v43 + 72) * v26, v42, type metadata accessor for ReadingHistoryDay);
          uint64_t v29 = (uint64_t)v9;
          uint64_t v30 = v41;
          sub_23617AC7C(v28, v41, type metadata accessor for ReadingHistoryDay);
          ReadingHistoryModel.mergeDay(date:day:)(v29, v30);
          uint64_t v20 = v25;
          uint64_t v31 = v30;
          uint64_t v9 = (char *)v29;
          uint64_t v21 = v39;
          uint64_t v17 = v40;
          sub_236178248(v31, type metadata accessor for ReadingHistoryDay);
        }
      }
      (*v45)(v9, v6);
      v23 += v47;
      if (!--v19)
      {
        v24(v12, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_retain();
    v32(v12, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)v37;
  swift_release();
  uint64_t v34 = (uint64_t)v44;
  sub_23616F470(v33, (int64_t)v44, 0x647055796C707061, 0xEB00000000657461);
  swift_release();
  return sub_236178248(v34, type metadata accessor for ReadingHistoryModel);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearData()()
{
  uint64_t v1 = *(NSObject **)(v0 + 144);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_236178528;
  *(void *)(v2 + 24) = v0;
  v4[4] = sub_236159570;
  v4[5] = v2;
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 1107296256;
  v4[2] = sub_23613F9DC;
  v4[3] = &unk_26E974288;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

void static ReadingHistoryDataStore.clearCachedData(in:)(void *a1)
{
  uint64_t v2 = (void *)sub_2361FE8C8();
  objc_msgSend(a1, sel_removeObjectForKey_, v2);

  id v3 = (id)sub_2361FE8C8();
  objc_msgSend(a1, sel_setInteger_forKey_, 0, v3);
}

uint64_t ReadingHistoryDataStore.longestStreak.getter()
{
  return sub_2361FED38();
}

uint64_t sub_236170B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for ReadingHistoryDataStore.State(0);
  return sub_2361348B8(v3 + *(int *)(v4 + 28), a2, (uint64_t *)&unk_26AD74BD0);
}

uint64_t ReadingHistoryDataStore.currentStreakLength.getter()
{
  sub_2361FED38();
  return v1;
}

uint64_t sub_236170C0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v8 = type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_2361348B8(v7 + *(int *)(v8 + 20), (uint64_t)v6, (uint64_t *)&unk_26AD74BD0);
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    uint64_t result = sub_23613491C((uint64_t)v6, (uint64_t *)&unk_26AD74BD0);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = *(void *)&v6[*(int *)(v9 + 20)];
    uint64_t result = sub_236178248((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
  }
  *a2 = v11;
  return result;
}

uint64_t ReadingHistoryDataStore.readingHistoryDay(for:)()
{
  return sub_2361FED38();
}

uint64_t sub_236170DC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = sub_236126188(&qword_26AD75E90);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_2361FE778();
  uint64_t v4 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_236126188(&qword_26AD74F40);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v47 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v42 = a1;
  uint64_t v21 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A8A8(v21, (uint64_t)v9, type metadata accessor for ReadingHistoryModel);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v20);
  sub_236178248((uint64_t)v9, type metadata accessor for ReadingHistoryModel);
  sub_2361348B8((uint64_t)v20, (uint64_t)v18, &qword_26AD74F40);
  uint64_t v22 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23(v18, 1, v22) == 1)
  {
    sub_23613491C((uint64_t)v18, &qword_26AD74F40);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v25 = v6;
    unint64_t v26 = v6;
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v26, v18, v41);
    sub_236178248((uint64_t)v18, type metadata accessor for ReadingHistoryDay);
    uint64_t v24 = sub_2361FE748();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v25, v27);
  }
  sub_2361348B8((uint64_t)v20, (uint64_t)v15, &qword_26AD74F40);
  unsigned int v28 = v23(v15, 1, v22);
  uint64_t v29 = (uint64_t)v47;
  if (v28 != 1)
  {
    uint64_t v33 = &v15[*(int *)(v22 + 20)];
    uint64_t v42 = v24;
    uint64_t v34 = v43;
    uint64_t v35 = v44;
    uint64_t v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v33, v46);
    sub_236178248((uint64_t)v15, type metadata accessor for ReadingHistoryDay);
    sub_2361FE0A8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    uint64_t v24 = v42;
    uint64_t v32 = v48;
    goto LABEL_10;
  }
  uint64_t result = sub_23613491C((uint64_t)v15, &qword_26AD74F40);
  double v31 = *(double *)(v42 + 136);
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v32 = (uint64_t)v31;
LABEL_10:
  sub_2361348B8((uint64_t)v20, v29, &qword_26AD74F40);
  if (v23((char *)v29, 1, v22) == 1)
  {
    sub_23613491C((uint64_t)v20, &qword_26AD74F40);
    uint64_t result = sub_23613491C(v29, &qword_26AD74F40);
    BOOL v37 = 0;
  }
  else
  {
    uint64_t v38 = sub_2361FE748();
    sub_2361FE0A8();
    BOOL v37 = v38 >= v48;
    sub_23613491C((uint64_t)v20, &qword_26AD74F40);
    uint64_t result = sub_236178248(v29, type metadata accessor for ReadingHistoryDay);
  }
  uint64_t v39 = v45;
  *uint64_t v45 = v24;
  v39[1] = v32;
  *((unsigned char *)v39 + 16) = v37;
  return result;
}

void *ReadingHistoryDataStore.readingHistory(range:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v57 = (char *)&v45 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_2361FD7F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_236126188(&qword_26AD74158);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v5;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v58 = v4;
  v20(v19, v54, v4);
  v20(&v19[*(int *)(v17 + 56)], v55, v4);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_2361FD758();
  uint64_t v22 = (void *)sub_2361FD788();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v15, v12);
  objc_msgSend(v21, sel_setCalendar_, v22);

  uint64_t v24 = (void *)sub_2361FE8C8();
  objc_msgSend(v21, sel_setDateFormat_, v24);

  sub_2361FD758();
  uint64_t v45 = v19;
  sub_2361FD768();
  v23(v15, v12);
  sub_2361FD758();
  sub_2361FD768();
  uint64_t v53 = v15;
  uint64_t v54 = v13 + 8;
  uint64_t v55 = v12;
  uint64_t v51 = v23;
  v23(v15, v12);
  uint64_t v50 = sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
  uint64_t v25 = sub_2361FE8A8();
  if (v25)
  {

    unint64_t v26 = *(void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v27 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    id v52 = v21;
    uint64_t v28 = *(void *)(v3 + 144);
    uint64_t v49 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v47 = v28;
    uint64_t v27 = (void *)MEMORY[0x263F8EE78];
    uint64_t v48 = v3;
    do
    {
      MEMORY[0x270FA5388](v25);
      *(&v45 - 2) = (char *)v3;
      *(&v45 - 1) = v11;
      sub_2361FED38();
      uint64_t v29 = v59;
      uint64_t v30 = v60;
      char v31 = v61;
      uint64_t v32 = (void *)sub_2361FD6E8();
      id v33 = objc_msgSend(v52, sel_stringFromDate_, v32);

      uint64_t v34 = sub_2361FE8D8();
      uint64_t v36 = v35;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_2361745F4(0, v27[2] + 1, 1, v27);
      }
      unint64_t v38 = v27[2];
      unint64_t v37 = v27[3];
      if (v38 >= v37 >> 1) {
        uint64_t v27 = sub_2361745F4((void *)(v37 > 1), v38 + 1, 1, v27);
      }
      v27[2] = v38 + 1;
      uint64_t v39 = &v27[5 * v38];
      void v39[4] = v34;
      void v39[5] = v36;
      v39[6] = v29;
      v39[7] = v30;
      *((unsigned char *)v39 + 64) = v31;
      uint64_t v40 = v53;
      sub_2361FD758();
      uint64_t v41 = v56;
      sub_2361FD6A8();
      v51(v40, v55);
      unint64_t v26 = *v49;
      uint64_t v42 = v58;
      (*v49)(v11, v58);
      (*v46)(v11, v41, v42);
      uint64_t v25 = sub_2361FE8A8();
      uint64_t v3 = v48;
    }
    while ((v25 & 1) == 0);
  }
  uint64_t v43 = v58;
  v26(v57, v58);
  v26(v11, v43);
  sub_23613491C((uint64_t)v45, &qword_26AD74158);
  return v27;
}

uint64_t ReadingHistoryDataStore.readingHistoryState(range:currentTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v38 = a2;
  uint64_t v43 = a1;
  uint64_t v49 = a4;
  uint64_t v48 = type metadata accessor for ReadingHistory.State(0) - 8;
  MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v5 = MEMORY[0x270FA5388](v45);
  uint64_t v46 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v37 - v7;
  uint64_t v8 = sub_2361FD7F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2361FD748();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v13 = v40;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_236126188(&qword_26AD74158);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v50 = (uint64_t)&v37 - v21;
  unint64_t v37 = (char *)&v37 + *(int *)(v17 + 56) - v21;
  uint64_t v22 = v37;
  uint64_t v23 = *(void (**)(void))(v13 + 16);
  v23();
  ((void (*)(char *, uint64_t, uint64_t))v23)(v22, v38, v12);
  sub_2361FD758();
  uint64_t v24 = v15;
  uint64_t v41 = v15;
  sub_2361FD768();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v25 = v39;
  sub_2361FED38();
  uint64_t v44 = v53;
  uint64_t v26 = (uint64_t)v42;
  sub_2361FED38();
  uint64_t v51 = v25;
  id v52 = v24;
  sub_2361FED38();
  uint64_t v45 = v53;
  uint64_t v43 = v54;
  LODWORD(v3_Block_object_dispose(&STACK[0x3B0], 8) = v55;
  uint64_t v27 = (uint64_t)&v20[*(int *)(v17 + 56)];
  ((void (*)(char *, uint64_t, uint64_t))v23)(v20, v50, v12);
  ((void (*)(uint64_t, char *, uint64_t))v23)(v27, v37, v12);
  uint64_t v39 = ReadingHistoryDataStore.readingHistory(range:)((uint64_t)v20, v27);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v28(v27, v12);
  v28((uint64_t)v20, v12);
  uint64_t v29 = v46;
  sub_2361348B8(v26, v46, (uint64_t *)&unk_26AD74BD0);
  char v31 = (uint64_t *)v47;
  uint64_t v30 = v48;
  uint64_t v32 = (uint64_t)&v47[*(int *)(v48 + 28)];
  uint64_t v33 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *char v31 = v44;
  sub_23617A910(v29, v32, (uint64_t *)&unk_26AD74BD0);
  uint64_t v34 = (char *)v31 + *(int *)(v30 + 32);
  uint64_t v35 = v43;
  *(void *)uint64_t v34 = v45;
  *((void *)v34 + 1) = v35;
  v34[16] = v38;
  *(uint64_t *)((char *)v31 + *(int *)(v30 + 36)) = (uint64_t)v39;
  sub_23617AC7C((uint64_t)v31, v49, type metadata accessor for ReadingHistory.State);
  sub_23613491C(v26, (uint64_t *)&unk_26AD74BD0);
  v28((uint64_t)v41, v12);
  return sub_23613491C(v50, &qword_26AD74158);
}

uint64_t sub_236171DC8()
{
  return sub_2361FED38();
}

uint64_t sub_236171E34()
{
  sub_2361FED38();
  return v1;
}

uint64_t sub_236171E94()
{
  return sub_2361FED38();
}

void *sub_236171EF4(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.readingHistory(range:)(a1, a2);
}

uint64_t sub_236171F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryState(range:currentTime:)(a1, a2, a3, a4);
}

uint64_t sub_236171F3C@<X0>(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)(a1, a2);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)@<X0>(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  unsigned int v99 = a1;
  uint64_t v95 = a2;
  uint64_t v2 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v101 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  MEMORY[0x270FA5388](v93);
  uint64_t v94 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_236126188(&qword_26AD749F8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v92 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v102 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_236126188(&qword_26AD74F40);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v87 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v83 - v12;
  uint64_t v14 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v83 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v104 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v91 = *(void *)(v104 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v104);
  uint64_t v88 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v100 = (char *)&v83 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v105 = (uint64_t)&v83 - v24;
  uint64_t v25 = sub_236126188(&qword_26AD747F0);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v90 = (uint64_t)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v98 = (uint64_t)&v83 - v29;
  MEMORY[0x270FA5388](v28);
  char v31 = (char *)&v83 - v30;
  uint64_t v32 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2361FED38();
  uint64_t v35 = v14;
  swift_release();
  uint64_t v36 = *(int *)(v32 + 48);
  int v89 = v34[*(int *)(v32 + 44)];
  uint64_t v97 = &v34[v36];
  uint64_t v37 = (uint64_t)v99;
  sub_2361348B8((uint64_t)&v34[v36], (uint64_t)v31, &qword_26AD747F0);
  uint64_t v106 = v34;
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v13);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  uint64_t v85 = v15 + 48;
  uint64_t v84 = v38;
  unsigned int v39 = v38((uint64_t)v13, 1, v35);
  unsigned int v103 = v31;
  uint64_t v86 = v35;
  if (v39 == 1)
  {
    sub_23613491C((uint64_t)v13, &qword_26AD74F40);
    uint64_t v96 = 0;
    uint64_t v40 = 0;
    char v41 = 2;
  }
  else
  {
    sub_23617AC7C((uint64_t)v13, (uint64_t)v19, type metadata accessor for ReadingHistoryDay);
    uint64_t v96 = sub_2361FE748();
    sub_236126188(&qword_26AD75E90);
    sub_2361FE0A8();
    uint64_t v40 = v108;
    uint64_t v42 = v37;
    uint64_t v43 = sub_2361FE748();
    sub_2361FE0A8();
    BOOL v44 = v43 < v107;
    uint64_t v37 = v42;
    char v41 = !v44;
    sub_236178248((uint64_t)v19, type metadata accessor for ReadingHistoryDay);
  }
  uint64_t v45 = v102;
  sub_2361880D4(v37, v102);
  uint64_t v46 = v104;
  uint64_t v47 = (uint64_t)v100;
  uint64_t v48 = (uint64_t)&v100[*(int *)(v104 + 20)];
  uint64_t v49 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  v50(v48, 1, 1, v49);
  *(void *)uint64_t v47 = v96;
  *(void *)(v47 + _Block_object_dispose(&STACK[0x3B0], 8) = v40;
  *(unsigned char *)(v47 + 16) = v41;
  sub_23617A910((uint64_t)v45, v48, (uint64_t *)&unk_26AD74BD0);
  uint64_t v51 = v37;
  uint64_t v52 = v105;
  sub_23617AC7C(v47, v105, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  uint64_t v53 = v98;
  sub_2361348B8((uint64_t)v97, v98, &qword_26AD747F0);
  uint64_t v54 = sub_236126188(&qword_26AD75170);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 2, v54))
  {
    uint64_t v55 = (uint64_t)v103;
    uint64_t v56 = v90;
    sub_2361348B8((uint64_t)v103, v90, &qword_26AD747F0);
    sub_23617A8A8(v52, v47, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v57 = v92;
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
    v58(v92, 1, 1, v46);
    uint64_t v59 = v93;
    uint64_t v60 = v46;
    char v61 = v94;
    uint64_t v62 = (uint64_t)&v94[*(int *)(v93 + 28)];
    v58(v62, 1, 1, v60);
    *char v61 = v89;
    sub_23612D5D0(v56, (uint64_t)&v61[*(int *)(v59 + 20)], &qword_26AD747F0);
    sub_23617AC7C(v47, (uint64_t)&v61[*(int *)(v59 + 24)], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    sub_23617A910(v57, v62, &qword_26AD749F8);
    sub_23617AC7C((uint64_t)v61, v95, type metadata accessor for ReadingHistory.ModelSnapshot);
    uint64_t v63 = v52;
  }
  else
  {
    unsigned int v99 = v50;
    sub_23617AC7C(v53, v101, type metadata accessor for ReadingHistoryModel);
    uint64_t v64 = v87;
    ReadingHistoryModel.readingHistoryDay(for:)(v87);
    uint64_t v65 = v51;
    if (v84(v64, 1, v86) == 1)
    {
      sub_23613491C(v64, &qword_26AD74F40);
      uint64_t v66 = 0;
      uint64_t v67 = 0;
      char v68 = 2;
    }
    else
    {
      uint64_t v69 = v83;
      sub_23617AC7C(v64, v83, type metadata accessor for ReadingHistoryDay);
      uint64_t v98 = v49;
      uint64_t v70 = v51;
      uint64_t v66 = sub_2361FE748();
      sub_236126188(&qword_26AD75E90);
      sub_2361FE0A8();
      uint64_t v67 = v108;
      uint64_t v71 = sub_2361FE748();
      uint64_t v45 = v102;
      sub_2361FE0A8();
      uint64_t v65 = v70;
      uint64_t v49 = v98;
      char v68 = v71 >= v107;
      sub_236178248(v69, type metadata accessor for ReadingHistoryDay);
    }
    uint64_t v72 = v99;
    sub_2361880D4(v65, v45);
    uint64_t v73 = v104;
    uint64_t v74 = v47 + *(int *)(v104 + 20);
    v72(v74, 1, 1, v49);
    *(void *)uint64_t v47 = v66;
    *(void *)(v47 + _Block_object_dispose(&STACK[0x3B0], 8) = v67;
    *(unsigned char *)(v47 + 16) = v68;
    sub_23617A910((uint64_t)v45, v74, (uint64_t *)&unk_26AD74BD0);
    uint64_t v102 = (char *)type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues;
    uint64_t v75 = v88;
    sub_23617AC7C(v47, v88, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v76 = v90;
    sub_2361348B8((uint64_t)v103, v90, &qword_26AD747F0);
    uint64_t v63 = v105;
    sub_23617A8A8(v105, v47, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v77 = v92;
    sub_23617A8A8(v75, v92, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
    v78(v77, 0, 1, v73);
    uint64_t v80 = v93;
    uint64_t v79 = v94;
    uint64_t v81 = (uint64_t)&v94[*(int *)(v93 + 28)];
    v78(v81, 1, 1, v73);
    *uint64_t v79 = v89;
    sub_23612D5D0(v76, (uint64_t)&v79[*(int *)(v80 + 20)], &qword_26AD747F0);
    sub_23617AC7C(v47, (uint64_t)&v79[*(int *)(v80 + 24)], (uint64_t (*)(void))v102);
    sub_23617A910(v77, v81, &qword_26AD749F8);
    sub_23617AC7C((uint64_t)v79, v95, type metadata accessor for ReadingHistory.ModelSnapshot);
    sub_236178248(v88, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v55 = (uint64_t)v103;
    sub_236178248(v101, type metadata accessor for ReadingHistoryModel);
  }
  sub_236178248(v63, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_23613491C(v55, &qword_26AD747F0);
  return sub_23613491C((uint64_t)v106, &qword_26AD74880);
}

uint64_t sub_236172A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_2361628DC(a1, (uint64_t)sub_236144ABC, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_236172B40(uint64_t a1)
{
  return ReadingHistoryDataStore.removeObserver(_:)(a1);
}

void sub_236172B64()
{
}

uint64_t sub_236172B88()
{
  uint64_t v1 = sub_2361FD748();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)v0 + 120))(v3);
  sub_236172DB8((uint64_t)v5, 0x646F547261656C63, 0xEA00000000007961);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearToday()()
{
  uint64_t v1 = sub_2361FD748();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v0 + 120))(v3);
  sub_236172DB8((uint64_t)v5, 0x646F547261656C63, 0xEA00000000007961);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_236172D78(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.increment(date:by:)(a1, a2);
}

uint64_t ReadingHistoryDataStore.clearDate(_:)(uint64_t a1)
{
  return sub_236172DB8(a1, 0x7461447261656C63, 0xE900000000000065);
}

uint64_t sub_236172DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2361FD748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_queue_t v19 = *(dispatch_queue_t *)(v3 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v11, v10, v7);
  *(void *)(v13 + v12) = v3;
  uint64_t v14 = (void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_23617ADA4;
  *(void *)(v15 + 24) = v13;
  void aBlock[4] = sub_236159570;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23613F9DC;
  void aBlock[3] = &unk_26E9747A8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v16);
  _Block_release(v16);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23617300C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v5 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v57 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v9 = (int *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v51 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v49 - v12;
  uint64_t v13 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v52 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = sub_2361FD748();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v49 - v28;
  uint64_t v58 = v24;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v30((char *)&v49 - v28, a1, v23);
  uint64_t v31 = v62 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v30((char *)v27, v31 + v9[8], v23);
  uint64_t v50 = v31;
  sub_23617A8A8(v31, (uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v55 = v29;
  sub_23618C038((uint64_t)v29);
  type metadata accessor for ReadingHistoryDataStore(0);
  uint64_t v32 = v31;
  uint64_t v33 = (uint64_t)v59;
  sub_23617A8A8(v32, (uint64_t)v59, type metadata accessor for ReadingHistoryDataStore.State);
  sub_236165F10(v33, (int64_t)v22, v27, (uint64_t)v15);
  sub_236178248(v33, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v34 = (uint64_t)v56;
  sub_2361688C4((uint64_t)v22, (uint64_t)v15, (uint64_t)v56);
  sub_236178248((uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  sub_23617AC7C(v34, (uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v35 = v51;
  sub_23617A8A8((uint64_t)v22, v51, type metadata accessor for ReadingHistoryModel);
  uint64_t v36 = v35 + v9[7];
  uint64_t v59 = v15;
  sub_2361348B8((uint64_t)v15, v36, (uint64_t *)&unk_26AD74BD0);
  v30((char *)(v35 + v9[8]), (uint64_t)v27, v23);
  uint64_t v37 = (uint64_t)v53;
  uint64_t v38 = (char *)(v35 + v9[9]);
  uint64_t v56 = v27;
  sub_2361880D4((uint64_t)v27, v38);
  uint64_t v39 = v62;
  swift_retain();
  uint64_t v40 = v54;
  sub_2361FED38();
  swift_release();
  uint64_t v41 = sub_236126188(&qword_26AD75170);
  uint64_t v42 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v57, 1, 2, v41);
  sub_23617A974(v35, v37, type metadata accessor for ReadingHistoryModel);
  uint64_t v43 = *(int *)(v40 + 48);
  uint64_t v44 = (uint64_t)v52;
  sub_23617A910(v42, v37 + v43, &qword_26AD747F0);
  sub_23616A794(v35, v37, v60, v61);
  sub_23612EA38(v39 + 56, (uint64_t)v63);
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  sub_2361261CC(v63, v64);
  sub_23617A8A8(v50, v44, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, v45, v46);
  sub_236178248(v44, type metadata accessor for ReadingHistoryModel);
  sub_23612EF9C((uint64_t)v63);
  sub_23613491C(v37, &qword_26AD74880);
  sub_236178248(v35, type metadata accessor for ReadingHistoryDataStore.State);
  sub_23613491C((uint64_t)v59, (uint64_t *)&unk_26AD74BD0);
  sub_236178248((uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v47 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v58 + 8);
  v47(v56, v23);
  return ((uint64_t (*)(char *, uint64_t))v47)(v55, v23);
}

uint64_t ReadingHistoryDataStore.serializedModel(_:)(void *a1)
{
  uint64_t v2 = v1;
  long long v12 = xmmword_23620DFD0;
  uint64_t v4 = *(NSObject **)(v1 + 144);
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = &v12;
  v5[3] = v2;
  v5[4] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_2361785EC;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_236159570;
  v11[5] = v6;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23613F9DC;
  v11[3] = &unk_26E974300;
  uint64_t v7 = _Block_copy(v11);
  swift_retain();
  id v8 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_236173800(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_2361FE548();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_23617A8A8(v11, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F32EA8], v4);
  sub_23617C108(&qword_26AD751E0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  uint64_t v12 = sub_2361FE5B8();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_236178248((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  uint64_t v15 = *a1;
  unint64_t v16 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  return sub_2361343FC(v15, v16);
}

Swift::Void __swiftcall ReadingHistoryDataStore.forceSummarizeAndPrune(year:month:)(Swift::Int year, Swift::Int month)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 144);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = year;
  v7[4] = month;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_236178640;
  *(void *)(v8 + 24) = v7;
  void v10[4] = sub_236159570;
  void v10[5] = v8;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_23613F9DC;
  v10[3] = &unk_26E974378;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

uint64_t sub_236173C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = (char *)a2;
  uint64_t v53 = a1;
  uint64_t v3 = *v2;
  uint64_t v44 = v2;
  uint64_t v49 = v3;
  uint64_t v4 = sub_236126188(&qword_26AD747F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (uint64_t)&v43 - v11;
  uint64_t v12 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v50 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_2361FD748();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (uint64_t)v2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v25 = v24 + v8[8];
  uint64_t v55 = v21;
  uint64_t v26 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v21 + 16);
  v26(v23, v25, v20);
  uint64_t v47 = v24;
  uint64_t v45 = type metadata accessor for ReadingHistoryModel;
  sub_23617A8A8(v24, (uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  sub_23618C668(v53, (uint64_t)v56);
  uint64_t v27 = v24;
  uint64_t v28 = v46;
  sub_23617A8A8(v27, v46, type metadata accessor for ReadingHistoryDataStore.State);
  sub_236165F10(v28, (int64_t)v19, v23, (uint64_t)v14);
  sub_236178248(v28, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v29 = v48;
  sub_23617A8A8((uint64_t)v19, v48, type metadata accessor for ReadingHistoryModel);
  uint64_t v30 = v29 + v8[7];
  uint64_t v56 = v14;
  sub_2361348B8((uint64_t)v14, v30, (uint64_t *)&unk_26AD74BD0);
  v26((void (*)(char *, uint64_t, uint64_t, uint64_t))(v29 + v8[8]), (uint64_t)v23, v20);
  uint64_t v31 = (uint64_t)v51;
  uint64_t v32 = (char *)(v29 + v8[9]);
  uint64_t v53 = (uint64_t)v23;
  sub_2361880D4((uint64_t)v23, v32);
  uint64_t v33 = v44;
  swift_retain();
  uint64_t v34 = v52;
  sub_2361FED38();
  swift_release();
  uint64_t v35 = v31 + *(int *)(v34 + 48);
  uint64_t v36 = v54;
  sub_2361348B8(v35, v54, &qword_26AD747F0);
  sub_23617A974((uint64_t)v19, v31, type metadata accessor for ReadingHistoryModel);
  sub_23617A910(v36, v35, &qword_26AD747F0);
  uint64_t v37 = v29;
  uint64_t v38 = v29;
  uint64_t v39 = (uint64_t)v50;
  sub_23616A794(v38, v31, 0xD000000000000016, 0x800000023620B1C0);
  sub_23612EA38((uint64_t)(v33 + 7), (uint64_t)v57);
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  sub_2361261CC(v57, v58);
  sub_23617A8A8(v47, v39, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, v40, v41);
  sub_236178248(v39, type metadata accessor for ReadingHistoryModel);
  sub_23612EF9C((uint64_t)v57);
  sub_23613491C(v31, &qword_26AD74880);
  sub_236178248(v37, type metadata accessor for ReadingHistoryDataStore.State);
  sub_23613491C((uint64_t)v56, (uint64_t *)&unk_26AD74BD0);
  sub_236178248((uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v53, v20);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelLoadedState()()
{
  return sub_2361FED38();
}

uint64_t sub_2361742BC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_236126188(&qword_26AD74880);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2361FED38();
  swift_release();
  char v5 = v4[*(int *)(v2 + 44)];
  uint64_t result = sub_23613491C((uint64_t)v4, &qword_26AD74880);
  *a1 = v5;
  return result;
}

uint64_t sub_2361743BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_23619E6AC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2361752EC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_236174428(void **a1)
{
  uint64_t v2 = *(void *)(sub_2361FD748() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_23619E6C0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_236175A38(v6);
  *a1 = v3;
  return result;
}

void *sub_2361744D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_236174B54(a1, a2, a3, a4, &qword_26AD76048, &qword_26AD76080);
}

void *sub_2361744E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_236126188(&qword_2688538E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23617A170(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2361745F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_236126188(&qword_26AD76030);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_23617A25C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236174714(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236174748(a1, a2, a3, a4, &qword_268853958, type metadata accessor for PBPropertyBundle, type metadata accessor for PBPropertyBundle);
}

uint64_t sub_236174748(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_236126188(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_2361FF098();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_23617A448(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_2361749C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236174748(a1, a2, a3, a4, &qword_268853950, type metadata accessor for PBPropertyValue, type metadata accessor for PBPropertyValue);
}

void *sub_2361749FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_236126188(&qword_268853940);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23617A354(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236174B0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236174748(a1, a2, a3, a4, &qword_268853948, MEMORY[0x263EFD2D0], MEMORY[0x263EFD2D0]);
}

void *sub_236174B40(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_236174B54(a1, a2, a3, a4, &qword_268853928, (uint64_t *)&unk_268853930);
}

void *sub_236174B54(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_236126188(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23617A5A4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_236174C70(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = isStackAllocationSafe;
  v17[1] = *MEMORY[0x263EF8340];
  char v11 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v12 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    uint64_t v14 = sub_236174FA0((uint64_t)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, v10, a2, a3, a4, a5);
    swift_release();
    if (v5) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    uint64_t v14 = sub_236174FA0((uint64_t)v15, v12, v10, a2, a3, a4, a5);
    swift_release();
    MEMORY[0x237DFF240](v15, -1, -1);
  }
  return v14;
}

uint64_t sub_236174E1C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(long long *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_236175128((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_236175128((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x237DFF240](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_236174FA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (unint64_t *)result;
  uint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v12 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a3 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_20:
    unint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    if ((v23 != a4 || v24 != a5) && (v23 != a6 || v24 != a7))
    {
      *(void *)(result + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
LABEL_31:
        swift_retain();
        return sub_2361D2A74(v9, a2, v10, a3);
      }
    }
  }
  int64_t v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v19 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v19);
  ++v11;
  if (v20) {
    goto LABEL_19;
  }
  int64_t v11 = v19 + 1;
  if (v19 + 1 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20) {
    goto LABEL_19;
  }
  int64_t v11 = v19 + 2;
  if (v19 + 2 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20)
  {
LABEL_19:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v16) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_236175128(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *))
{
  unint64_t v20 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  uint64_t v22 = v7;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v8 << 6);
LABEL_18:
    long long v21 = *(_OWORD *)(*(void *)(a3 + 48) + 16 * v15);
    uint64_t result = a4(&v21);
    if (v4) {
      return result;
    }
    if (result)
    {
      *(unint64_t *)((char *)v20 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v7 = v22 + 1;
      if (!__OFADD__(v22, 1)) {
        goto LABEL_4;
      }
      __break(1u);
LABEL_28:
      swift_retain();
      return sub_2361D2A74(v20, a2, v22, a3);
    }
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_18;
  }
  int64_t v18 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 3;
  if (v8 + 3 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2361752EC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2361FF208();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_2361765F8(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_156;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_164;
  }
  uint64_t v6 = result;
  uint64_t v108 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (uint64_t *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v51 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_112:
      uint64_t v100 = v12;
      uint64_t v111 = v9;
      if (v51 < 2)
      {
LABEL_123:
        swift_bridgeObjectRelease();
        *(void *)(v111 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      uint64_t v101 = *v108;
      while (1)
      {
        unint64_t v102 = v51 - 2;
        if (v51 < 2) {
          goto LABEL_146;
        }
        if (!v101) {
          goto LABEL_163;
        }
        unsigned int v103 = v100;
        uint64_t v104 = *(void *)&v100[16 * v102 + 32];
        uint64_t v105 = *(void *)&v100[16 * v51 + 24];
        sub_2361769DC((uint64_t *)(v101 + 16 * v104), (uint64_t *)(v101 + 16 * *(void *)&v100[16 * v51 + 16]), v101 + 16 * v105, __dst);
        if (v1) {
          goto LABEL_123;
        }
        if (v105 < v104) {
          goto LABEL_147;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v103 = sub_23619E684((uint64_t)v103);
        }
        if (v102 >= *((void *)v103 + 2)) {
          goto LABEL_148;
        }
        uint64_t v106 = &v103[16 * v102 + 32];
        *(void *)uint64_t v106 = v104;
        *((void *)v106 + 1) = v105;
        unint64_t v107 = *((void *)v103 + 2);
        if (v51 > v107) {
          goto LABEL_149;
        }
        memmove(&v103[16 * v51 + 16], &v103[16 * v51 + 32], 16 * (v107 - v51));
        uint64_t v100 = v103;
        *((void *)v103 + 2) = v107 - 1;
        unint64_t v51 = v107 - 1;
        if (v107 <= 2) {
          goto LABEL_123;
        }
      }
    }
    uint64_t v111 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_2361FEAB8();
    *(void *)(v8 + 16) = v7;
    uint64_t v111 = v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v109 = *a1 - 16;
  uint64_t v110 = *a1 + 40;
  unint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v112 = v6;
  uint64_t v113 = v3;
  uint64_t v114 = v11;
  while (1)
  {
    uint64_t v13 = v10++;
    if (v10 >= v3) {
      goto LABEL_36;
    }
    uint64_t v14 = *(void *)(v11 + 16 * v10);
    uint64_t v15 = 100 * v14;
    if ((unsigned __int128)(v14 * (__int128)100) >> 64 != (100 * v14) >> 63) {
      goto LABEL_151;
    }
    uint64_t v16 = *(void *)(v11 + 16 * v10 + 8);
    BOOL v65 = __OFADD__(v15, v16);
    uint64_t v17 = v15 + v16;
    if (v65) {
      goto LABEL_152;
    }
    int64_t v18 = (uint64_t *)(v11 + 16 * v13);
    uint64_t v19 = 100 * *v18;
    if ((unsigned __int128)(*v18 * (__int128)100) >> 64 != v19 >> 63) {
      goto LABEL_153;
    }
    uint64_t v20 = v18[1];
    BOOL v65 = __OFADD__(v19, v20);
    uint64_t v21 = v19 + v20;
    if (v65) {
      goto LABEL_154;
    }
    uint64_t v10 = v13 + 2;
    if (v13 + 2 >= v3) {
      goto LABEL_27;
    }
    uint64_t v22 = (void *)(v110 + 16 * v13);
    do
    {
      uint64_t v23 = *(v22 - 1);
      uint64_t v24 = 100 * v23;
      if ((unsigned __int128)(v23 * (__int128)100) >> 64 != (100 * v23) >> 63) {
        goto LABEL_132;
      }
      uint64_t v25 = *v22;
      BOOL v65 = __OFADD__(v24, *v22);
      uint64_t v26 = v24 + *v22;
      if (v65)
      {
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
      uint64_t v27 = 100 * v14;
      BOOL v65 = __OFADD__(v27, v16);
      uint64_t v28 = v27 + v16;
      if (v65) {
        goto LABEL_134;
      }
      if (v17 < v21 == v26 >= v28) {
        goto LABEL_27;
      }
      ++v10;
      v22 += 2;
      uint64_t v16 = v25;
      uint64_t v14 = v23;
    }
    while (v3 != v10);
    uint64_t v10 = v3;
LABEL_27:
    if (v17 < v21) {
      break;
    }
LABEL_36:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v13)) {
        goto LABEL_155;
      }
      if (v10 - v13 < v6)
      {
        uint64_t v34 = v13 + v6;
        if (__OFADD__(v13, v6)) {
          goto LABEL_157;
        }
        if (v34 >= v3) {
          uint64_t v34 = v3;
        }
        if (v34 < v13) {
          goto LABEL_158;
        }
        if (v10 != v34)
        {
          uint64_t v35 = (uint64_t *)(v109 + 16 * v10);
          do
          {
            long long v36 = *(_OWORD *)(v11 + 16 * v10);
            uint64_t v37 = *(void *)(v11 + 16 * v10);
            uint64_t v38 = 100 * v37;
            BOOL v39 = (unsigned __int128)(v37 * (__int128)100) >> 64 != (100 * v37) >> 63;
            BOOL v65 = __OFADD__(v38, *((void *)&v36 + 1));
            uint64_t v40 = v38 + *((void *)&v36 + 1);
            char v41 = v65;
            uint64_t v42 = v13;
            uint64_t v43 = v35;
            do
            {
              if (v39)
              {
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
                goto LABEL_133;
              }
              if (v41) {
                goto LABEL_125;
              }
              uint64_t v44 = 100 * *v43;
              if ((unsigned __int128)(*v43 * (__int128)100) >> 64 != v44 >> 63) {
                goto LABEL_126;
              }
              uint64_t v45 = v43[1];
              BOOL v65 = __OFADD__(v44, v45);
              uint64_t v46 = v44 + v45;
              if (v65) {
                goto LABEL_127;
              }
              if (v40 >= v46) {
                break;
              }
              if (!v11) {
                goto LABEL_160;
              }
              uint64_t v47 = v43 + 2;
              long long v48 = *(_OWORD *)v43;
              *(_OWORD *)uint64_t v43 = v36;
              v43 -= 2;
              _OWORD *v47 = v48;
              ++v42;
            }
            while (v10 != v42);
            ++v10;
            v35 += 2;
          }
          while (v10 != v34);
          uint64_t v10 = v34;
        }
      }
    }
    if (v10 < v13) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_23619E16C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v50 = *((void *)v12 + 2);
    unint64_t v49 = *((void *)v12 + 3);
    unint64_t v51 = v50 + 1;
    uint64_t v11 = v114;
    if (v50 >= v49 >> 1)
    {
      unsigned int v99 = sub_23619E16C((char *)(v49 > 1), v50 + 1, 1, v12);
      uint64_t v11 = v114;
      unint64_t v12 = v99;
    }
    *((void *)v12 + 2) = v51;
    uint64_t v52 = v12 + 32;
    uint64_t v53 = &v12[16 * v50 + 32];
    *(void *)uint64_t v53 = v13;
    *((void *)v53 + 1) = v10;
    if (v50)
    {
      while (1)
      {
        unint64_t v54 = v51 - 1;
        if (v51 >= 4)
        {
          uint64_t v59 = &v52[16 * v51];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_135;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_136;
          }
          unint64_t v66 = v51 - 2;
          uint64_t v67 = &v52[16 * v51 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_138;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_141;
          }
          if (v71 >= v62)
          {
            int v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_145;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_96;
          }
        }
        else
        {
          if (v51 != 3)
          {
            uint64_t v83 = *((void *)v12 + 4);
            uint64_t v84 = *((void *)v12 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_90;
          }
          uint64_t v56 = *((void *)v12 + 4);
          uint64_t v55 = *((void *)v12 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_137;
        }
        unint64_t v66 = v51 - 2;
        uint64_t v72 = &v52[16 * v51 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_140;
        }
        uint64_t v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_143;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_144;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_96:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v77) {
          goto LABEL_139;
        }
        uint64_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_142;
        }
        if (v88 < v76) {
          goto LABEL_107;
        }
LABEL_98:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v51) {
          goto LABEL_128;
        }
        if (!v11) {
          goto LABEL_161;
        }
        uint64_t v94 = &v52[16 * v93];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = &v52[16 * v54];
        uint64_t v97 = *((void *)v96 + 1);
        sub_2361769DC((uint64_t *)(v11 + 16 * *(void *)v94), (uint64_t *)(v11 + 16 * *(void *)v96), v11 + 16 * v97, __dst);
        if (v1) {
          goto LABEL_123;
        }
        if (v97 < v95) {
          goto LABEL_129;
        }
        if (v54 > *((void *)v12 + 2)) {
          goto LABEL_130;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v52[16 * v93 + 8] = v97;
        unint64_t v98 = *((void *)v12 + 2);
        if (v54 >= v98) {
          goto LABEL_131;
        }
        unint64_t v51 = v98 - 1;
        memmove(&v52[16 * v54], v96 + 16, 16 * (v98 - 1 - v54));
        *((void *)v12 + 2) = v98 - 1;
        uint64_t v11 = v114;
        if (v98 <= 2) {
          goto LABEL_107;
        }
      }
    }
    unint64_t v51 = 1;
LABEL_107:
    uint64_t v6 = v112;
    uint64_t v3 = v113;
    if (v10 >= v113)
    {
      uint64_t v9 = v111;
      goto LABEL_112;
    }
  }
  if (v10 >= v13)
  {
    if (v13 < v10)
    {
      uint64_t v29 = (long long *)(v109 + 16 * v10);
      uint64_t v30 = v10;
      uint64_t v31 = v13;
      uint64_t v32 = (long long *)(v11 + 16 * v13);
      while (1)
      {
        if (v31 != --v30)
        {
          if (!v11) {
            goto LABEL_162;
          }
          long long v33 = *v32;
          *uint64_t v32 = *v29;
          *uint64_t v29 = v33;
        }
        ++v31;
        --v29;
        ++v32;
        if (v31 >= v30) {
          goto LABEL_36;
        }
      }
    }
    goto LABEL_36;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  uint64_t result = sub_2361FF098();
  __break(1u);
  return result;
}

uint64_t sub_236175A38(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v151 = (char *)&v131 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v146 = (char *)&v131 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v147 = (char *)&v131 - v12;
  uint64_t v13 = a1[1];
  uint64_t result = sub_2361FF208();
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_2361766BC(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  uint64_t v150 = a1;
  uint64_t v133 = result;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x263F8EE78];
    unint64_t v138 = MEMORY[0x263F8EE78]
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = MEMORY[0x263F8EE78];
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_236176CF0(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_23619E684((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v132 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_2361FEAB8();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = v17;
    unint64_t v138 = v17 + v18;
  }
  uint64_t v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)MEMORY[0x263F8EE78];
  uint64_t v139 = v5;
  while (1)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v20 + 1;
    uint64_t v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    uint64_t v142 = v20 + 1;
    uint64_t v153 = v139[9];
    uint64_t v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
    uint64_t v31 = v147;
    uint64_t v148 = v30;
    LODWORD(v152) = sub_2361FE8A8();
    uint64_t v32 = v13;
    long long v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    uint64_t v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    uint64_t v35 = v153;
    uint64_t v23 = v22 + 2;
    uint64_t v143 = v32;
    if (v22 + 2 >= v32)
    {
      uint64_t v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      uint64_t v37 = v153 * v23;
      while (1)
      {
        uint64_t v38 = v23;
        BOOL v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        char v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_2361FE8A8();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        uint64_t v23 = v38 + 1;
        uint64_t v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          uint64_t v13 = v143;
          uint64_t v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          uint64_t v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      uint64_t v23 = v38;
      uint64_t v22 = v137;
      uint64_t v13 = v143;
      uint64_t v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    uint64_t v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    uint64_t v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    uint64_t v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        uint64_t v23 = v148;
        uint64_t v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    uint64_t v22 = v137;
    uint64_t v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    uint64_t v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      uint64_t v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      uint64_t v57 = v23 * v55;
      uint64_t v135 = v54;
      do
      {
        uint64_t v59 = 0;
        uint64_t v148 = v23;
        uint64_t v142 = v57;
        uint64_t v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          uint64_t v153 = v22;
          uint64_t v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          unint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
          LOBYTE(v60) = sub_2361FE8A8();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          uint64_t v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          uint64_t v22 = v153 + 1;
          uint64_t v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        uint64_t v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        uint64_t v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        uint64_t v22 = v137;
      }
      while (v23 != v135);
      uint64_t v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_23619E16C(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_23619E16C((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    BOOL v75 = v19 + 32;
    uint64_t v76 = &v19[16 * v74 + 32];
    uint64_t v77 = v148;
    *(void *)uint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            uint64_t v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        unint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_236176CF0(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    uint64_t v13 = v150[1];
    uint64_t v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_2361FF098();
  __break(1u);
  return result;
}

uint64_t sub_2361765F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v6 = *(_OWORD *)(v4 + 16 * a3);
    uint64_t v7 = *(void *)(v4 + 16 * a3);
    uint64_t v8 = 100 * v7;
    BOOL v9 = (unsigned __int128)(v7 * (__int128)100) >> 64 != (100 * v7) >> 63;
    BOOL v10 = __OFADD__(v8, *((void *)&v6 + 1));
    uint64_t v11 = v8 + *((void *)&v6 + 1);
    char v12 = v10;
    uint64_t v13 = result;
    uint64_t v14 = (uint64_t *)v5;
    while (!v9)
    {
      if (v12) {
        goto LABEL_18;
      }
      uint64_t v15 = 100 * *v14;
      if ((unsigned __int128)(*v14 * (__int128)100) >> 64 != v15 >> 63) {
        goto LABEL_19;
      }
      uint64_t v16 = v14[1];
      BOOL v10 = __OFADD__(v15, v16);
      uint64_t v17 = v15 + v16;
      if (v10) {
        goto LABEL_20;
      }
      if (v11 < v17)
      {
        if (!v4) {
          goto LABEL_21;
        }
        unint64_t v18 = v14 + 2;
        long long v19 = *(_OWORD *)v14;
        *(_OWORD *)uint64_t v14 = v6;
        v14 -= 2;
        *unint64_t v18 = v19;
        if (a3 != ++v13) {
          continue;
        }
      }
      ++a3;
      v5 += 16;
      if (a3 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_2361766BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_2361FD748();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  char v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v37 = (char *)&v29 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    long long v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      uint64_t v22 = v33;
      v33(v36, v20, v7);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
      LOBYTE(v22) = sub_2361FE8A8();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2361769DC(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4 = __dst;
  long long v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v38 = __src;
  uint64_t v37 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v23 = &v4[2 * v13];
      uint64_t v36 = v23;
      uint64_t v38 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v24 = (uint64_t *)(a3 - 16);
        while (1)
        {
          uint64_t v25 = *(v23 - 2);
          uint64_t v26 = 100 * v25;
          if ((unsigned __int128)(v25 * (__int128)100) >> 64 != (100 * v25) >> 63) {
            break;
          }
          uint64_t v27 = *(v23 - 1);
          BOOL v17 = __OFADD__(v26, v27);
          uint64_t v28 = v26 + v27;
          if (v17) {
            goto LABEL_52;
          }
          uint64_t v29 = v6 - 2;
          uint64_t v30 = *(v6 - 2);
          uint64_t v31 = 100 * v30;
          if ((unsigned __int128)(v30 * (__int128)100) >> 64 != (100 * v30) >> 63) {
            goto LABEL_53;
          }
          uint64_t v32 = *(v6 - 1);
          BOOL v17 = __OFADD__(v31, v32);
          uint64_t v33 = v31 + v32;
          if (v17) {
            goto LABEL_54;
          }
          uint64_t v34 = v24 + 2;
          if (v28 >= v33)
          {
            uint64_t v36 = v23 - 2;
            if (v34 < v23 || v24 >= v23 || v34 != v23) {
              *(_OWORD *)uint64_t v24 = *((_OWORD *)v23 - 1);
            }
            uint64_t v29 = v6;
            v23 -= 2;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v34 != v6 || v24 >= v6) {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v29;
            }
            uint64_t v38 = v6 - 2;
            if (v29 <= v7) {
              goto LABEL_50;
            }
          }
          v24 -= 2;
          long long v6 = v29;
          if (v23 <= v4) {
            goto LABEL_50;
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
LABEL_50:
      sub_23619E274((void **)&v38, (const void **)&v37, &v36);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v36 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      while (1)
      {
        uint64_t v15 = 100 * *v6;
        if ((unsigned __int128)(*v6 * (__int128)100) >> 64 != v15 >> 63) {
          break;
        }
        uint64_t v16 = v6[1];
        BOOL v17 = __OFADD__(v15, v16);
        uint64_t v18 = v15 + v16;
        if (v17) {
          goto LABEL_56;
        }
        uint64_t v19 = 100 * *v4;
        if ((unsigned __int128)(*v4 * (__int128)100) >> 64 != v19 >> 63) {
          goto LABEL_57;
        }
        uint64_t v20 = v4[1];
        BOOL v17 = __OFADD__(v19, v20);
        uint64_t v21 = v19 + v20;
        if (v17) {
          goto LABEL_58;
        }
        if (v18 >= v21)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          uint64_t v37 = v4;
          uint64_t v22 = v6;
        }
        else
        {
          uint64_t v22 = v6 + 2;
          if (v7 < v6 || v7 >= v22 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 2;
        if (v4 < v14)
        {
          long long v6 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        uint64_t v38 = v7;
        goto LABEL_50;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    goto LABEL_50;
  }
LABEL_59:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_236176CF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_2361FD748();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          char v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
          LOBYTE(v41) = sub_2361FE8A8();
          uint64_t v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_23617C108((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
        char v27 = sub_2361FE8A8();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_23619E3EC(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_236177324(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  void (*v44)(long long *__return_ptr, uint64_t, uint64_t);
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  char *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  uint64_t v114;
  char *v115;
  void *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  long long v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  long long v124;

  uint64_t v8 = v7;
  uint64_t v104 = a7;
  uint64_t v103 = a6;
  uint64_t v109 = a5;
  uint64_t v107 = a3;
  uint64_t v116 = (void *)a2;
  uint64_t v113 = a1;
  uint64_t v10 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v115 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (char *)&v98 - v13;
  uint64_t v14 = sub_236126188(&qword_26AD74180);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v110 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v114 = (uint64_t)&v98 - v17;
  uint64_t v18 = sub_236126188(&qword_26AD74880);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  BOOL v106 = (uint64_t)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v105 = (uint64_t)&v98 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v117 = (uint64_t)&v98 - v23;
  unint64_t v102 = sub_2361FD7F8();
  char v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  unint64_t v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_2361FD748();
  uint64_t v108 = *(void *)(v111 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v111);
  uint64_t v98 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v118 = (char *)&v98 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v98 - v30;
  uint64_t v32 = sub_2361FECF8();
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = sub_2361FE098();
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v34 = sub_2361FED18();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v98 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v99 = *a4;
  uint64_t v100 = *((void *)a4 + 1);
  uint64_t v112 = (char *)sub_23612EDA4(0, (unint64_t *)&qword_26AD75FF0);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(void *)(v7 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, *MEMORY[0x263F8F138], v34);
  sub_2361FE078();
  *(void *)&uint64_t v120 = MEMORY[0x263F8EE78];
  sub_23617C108((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_23615936C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  uint64_t v38 = v113;
  sub_2361FEEA8();
  *(void *)(v7 + 144) = sub_2361FED58();
  uint64_t v39 = v104;
  uint64_t v40 = v103;
  v103();
  sub_2361FD758();
  uint64_t v112 = v31;
  sub_2361FD768();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v25, v102);
  *(unsigned char *)(v7 + 96) = v99;
  *(void *)(v7 + 120) = v40;
  *(void *)(v7 + 12_Block_object_dispose(&STACK[0x3B0], 8) = v39;
  char v41 = v109;
  *(void *)(v7 + 104) = v100;
  *(void *)(v7 + 112) = v41;
  uint64_t v42 = v38[3];
  uint64_t v43 = v38[4];
  sub_2361261CC(v38, v42);
  uint64_t v44 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v43 + 8);
  swift_retain();
  uint64_t v45 = v41;
  v44(&v120, v42, v43);
  *(void *)(v7 + 136) = *((void *)&v120 + 1);
  unint64_t v46 = v116;
  uint64_t v109 = (void *)(v8 + 56);
  sub_23612EA38((uint64_t)v116, v8 + 56);
  unint64_t v47 = v46[3];
  uint64_t v48 = v46[4];
  sub_2361261CC(v46, v47);
  uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 40))(v47, v48);
  uint64_t v50 = v117;
  (*(void (**)(uint64_t))(*(void *)v49 + 184))(v49);
  swift_release();
  unint64_t v51 = v107;
  *(void *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_transactionProvider) = v107;
  unint64_t v52 = v105;
  sub_2361348B8(v50, v105, &qword_26AD74880);
  sub_236126188(&qword_26AD75BE8);
  swift_allocObject();
  unint64_t v53 = v106;
  sub_2361348B8(v52, v106, &qword_26AD74880);
  swift_unknownObjectRetain();
  uint64_t v54 = sub_2361557C4(v53);
  sub_23613491C(v52, &qword_26AD74880);
  *(void *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange) = v54;
  type metadata accessor for ObservableTransaction();
  uint64_t v55 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain();
  *(void *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChangeObservableTransaction) = sub_23614249C(0xD000000000000038, 0x800000023620B5B0, v51, v55);
  *(unsigned char *)(v8 + 152) = 0;
  uint64_t v56 = *(id *)(v8 + 112);
  uint64_t v57 = (void *)sub_2361FE8C8();
  unint64_t v58 = objc_msgSend(v56, sel_integerForKey_, v57);

  sub_2361875E0((uint64_t)v58, (uint64_t *)&v120);
  if (v121 == 1)
  {
    unint64_t v59 = v108;
    unint64_t v60 = v114;
    uint64_t v61 = v111;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56))(v114, 1, 1, v111);
  }
  else
  {
    unint64_t v124 = v120;
    unint64_t v60 = v114;
    sub_236187CDC(v114);
    unint64_t v59 = v108;
    uint64_t v61 = v111;
  }
  uint64_t v62 = *(id *)(v8 + 112);
  uint64_t v63 = (void *)sub_2361FE8C8();
  uint64_t v64 = objc_msgSend(v62, sel_integerForKey_, v63);

  uint64_t v65 = type metadata accessor for ReadingHistory.Streak(0);
  unint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56);
  uint64_t v67 = (uint64_t)v119;
  v66((uint64_t)v119, 1, 1, v65);
  uint64_t v68 = v110;
  sub_2361348B8(v60, v110, &qword_26AD74180);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v68, 1, v61) == 1)
  {
    sub_23613491C(v68, &qword_26AD74180);
  }
  else
  {
    sub_23613491C(v67, (uint64_t *)&unk_26AD74BD0);
    uint64_t v69 = v61;
    uint64_t v70 = v68;
    uint64_t v71 = v59;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    unint64_t v73 = v98;
    v72(v98, v70, v69);
    v72(v119, (uint64_t)v73, v69);
    unint64_t v59 = v71;
    uint64_t v61 = v69;
    uint64_t v67 = (uint64_t)v119;
    *(void *)&v119[*(int *)(v65 + 20)] = v64;
    v66(v67, 0, 1, v65);
  }
  unint64_t v74 = v115;
  BOOL v75 = v117;
  sub_2361880D4((uint64_t)v112, v115);
  uint64_t v76 = v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  sub_23617A8A8(v75, v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryModel);
  uint64_t v77 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_2361348B8(v67, v76 + v77[5], (uint64_t *)&unk_26AD74BD0);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v76 + v77[6], v118, v61);
  sub_2361348B8((uint64_t)v74, v76 + v77[7], (uint64_t *)&unk_26AD74BD0);
  unint64_t v78 = *(void *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange)
      + *(void *)(**(void **)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange) + 128);
  swift_beginAccess();
  *(void *)(v78 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v79 = v113;
  uint64_t v80 = v59;
  uint64_t v81 = v113[3];
  char v82 = v113[4];
  sub_2361261CC(v113, v81);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v82 + 16))(&v120, v81, v82);
  uint64_t v83 = v122;
  uint64_t v84 = v123;
  sub_2361261CC(&v120, v122);
  uint64_t v85 = swift_allocObject();
  swift_weakInit();
  uint64_t v86 = *(void (**)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v84 + 8);
  swift_retain();
  swift_retain();
  v86(v8, sub_23617BAF8, v85, v83, v84);
  swift_release();
  swift_release_n();
  sub_23612EF9C((uint64_t)&v120);
  uint64_t v87 = *(void *)(v8 + 80);
  uint64_t v88 = *(void *)(v8 + 88);
  BOOL v89 = sub_2361261CC(v109, v87);
  unint64_t v90 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v92 = (char *)&v98 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v90 + 16))(v92);
  (*(void (**)(uint64_t, uint64_t))(v88 + 40))(v87, v88);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v87);
  uint64_t v93 = swift_allocObject();
  swift_weakInit();
  uint64_t v94 = swift_retain();
  sub_2361628DC(v94, (uint64_t)sub_23617BB00, v93);
  swift_release();
  swift_release();
  swift_release();
  sub_23613491C((uint64_t)v115, (uint64_t *)&unk_26AD74BD0);
  sub_23613491C((uint64_t)v119, (uint64_t *)&unk_26AD74BD0);
  sub_23613491C(v114, &qword_26AD74180);
  sub_23613491C(v117, &qword_26AD74880);
  uint64_t v95 = *(void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v96 = v111;
  v95(v118, v111);
  v95(v112, v96);
  sub_23612EF9C((uint64_t)v116);
  sub_23612EF9C((uint64_t)v79);
  return v8;
}

uint64_t sub_23617809C()
{
  uint64_t v1 = sub_2361FD748();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_release();
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v6);
}

void sub_236178190()
{
  uint64_t v1 = *(void *)(sub_2361FD748() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + v3) & ~v2);
  sub_23616DD64(v4, (void (*)(char *, uint64_t, uint64_t, uint64_t))(v0 + v3), v5);
}

uint64_t sub_236178220()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178230(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_236178240()
{
  return swift_release();
}

uint64_t sub_236178248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ReadingHistoryDataStore.State(uint64_t a1)
{
  return sub_23615F5A4(a1, qword_26AD74350);
}

uint64_t sub_2361782C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178300()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178340()
{
  return sub_236163F00(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_236178348()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178358()
{
  uint64_t v1 = sub_2361FD748();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_236178430()
{
  uint64_t v1 = *(void *)(sub_2361FD748() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23616F000(v3, v0 + v2, v4);
}

uint64_t sub_2361784C0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2361784D0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178510()
{
  return sub_236170428(*(void *)(v0 + 16));
}

uint64_t sub_236178518()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617852C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617853C@<X0>(uint64_t a1@<X8>)
{
  return sub_236170B34(v1, a1);
}

uint64_t sub_236178558@<X0>(void *a1@<X8>)
{
  return sub_236170C0C(v1, a1);
}

uint64_t sub_236178574@<X0>(uint64_t *a1@<X8>)
{
  return sub_236170DC0(*(void *)(v1 + 16), a1);
}

uint64_t sub_236178590@<X0>(uint64_t a1@<X8>)
{
  return sub_236156C94(v1, a1);
}

uint64_t sub_2361785AC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2361785EC()
{
  return sub_236173800(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2361785F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236178608()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_236178640()
{
  return sub_236173C9C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_23617866C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617867C@<X0>(char *a1@<X8>)
{
  return sub_2361742BC(a1);
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.model.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.observable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.sync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.longestStreak.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.currentStreakLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryDay(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistory(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryState(range:currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryModelSnapshot(currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.clearToday()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceObservable.addObserver(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceObservable.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_236178800()
{
  return type metadata accessor for ReadingHistoryDataStore(0);
}

uint64_t type metadata accessor for ReadingHistoryDataStore(uint64_t a1)
{
  return sub_23615F5A4(a1, qword_26AD743C8);
}

uint64_t sub_236178828()
{
  uint64_t result = type metadata accessor for ReadingHistoryDataStore.State(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ReadingHistoryDataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ReadingHistoryDataStore);
}

uint64_t dispatch thunk of ReadingHistoryDataStore.__allocating_init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t getEnumTagSinglePayload for ReadingHistoryDataStore.Config(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryDataStore.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistoryDataStore.Config()
{
  return &type metadata for ReadingHistoryDataStore.Config;
}

uint64_t *sub_2361789F0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_236126188(&qword_26AD75F18);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_236126188(&qword_26AD75EE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v13 = a3[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    uint64_t v32 = v17;
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_236126188((uint64_t *)&unk_26AD74BD0);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
      *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v22 = a3[6];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_2361FD748();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    uint64_t v27 = a3[7];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (v18(v29, 1, v16))
    {
      uint64_t v30 = sub_236126188((uint64_t *)&unk_26AD74BD0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v26(v28, v29, v25);
      *(void *)&v28[*(int *)(v16 + 20)] = *(void *)&v29[*(int *)(v16 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_236178D3C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD75F18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
  uint64_t v6 = sub_236126188(&qword_26AD75EE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    uint64_t v10 = sub_2361FD748();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
  }
  uint64_t v11 = a1 + a2[6];
  uint64_t v12 = sub_2361FD748();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v15(v11, v12);
  uint64_t v13 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v13, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v12);
  }
  return result;
}

uint64_t sub_236178F48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236126188(&qword_26AD75F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_236126188(&qword_26AD75EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  uint64_t v30 = v16;
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_2361FD748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_2361FD748();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  if (v17(v27, 1, v15))
  {
    uint64_t v28 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v24((uint64_t)v26, (uint64_t)v27, v23);
    *(void *)&v26[*(int *)(v15 + 20)] = *(void *)&v27[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_236179244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236126188(&qword_26AD75F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_236126188(&qword_26AD75EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[5];
  uint64_t v36 = a1;
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v17;
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v14, v20);
      *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_236178248((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    uint64_t v21 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = sub_2361FD748();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v13, v14, v33);
  *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = v36 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_2361FD748();
  uint64_t v34 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v26(v23, v24, v25);
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)(v36 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  LODWORD(v23) = v35(v36 + v27, 1, v15);
  int v30 = v35((uint64_t)v29, 1, v15);
  if (!v23)
  {
    if (!v30)
    {
      v26((uint64_t)v28, (uint64_t)v29, v25);
      *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
      return v36;
    }
    sub_236178248((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    return v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v28, v29, v25);
  *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  return v36;
}

uint64_t sub_236179678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236126188(&qword_26AD75F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_236126188(&qword_26AD75EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  int v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v29 = v16;
  if (v30(v14, 1, v15))
  {
    uint64_t v17 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_2361FD748();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_2361FD748();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  if (v30(v26, 1, v15))
  {
    uint64_t v27 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v23((uint64_t)v25, (uint64_t)v26, v22);
    *(void *)&v25[*(int *)(v15 + 20)] = *(void *)&v26[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_23617996C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_236126188(&qword_26AD75F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_236126188(&qword_26AD75EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[5];
  uint64_t v36 = a1;
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v17;
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = sub_2361FD748();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
      *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_236178248((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    uint64_t v21 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = sub_2361FD748();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v13, v14, v33);
  *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = v36 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_2361FD748();
  uint64_t v34 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 40);
  v26(v23, v24, v25);
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)(v36 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  LODWORD(v23) = v35(v36 + v27, 1, v15);
  int v30 = v35((uint64_t)v29, 1, v15);
  if (!v23)
  {
    if (!v30)
    {
      v26((uint64_t)v28, (uint64_t)v29, v25);
      *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
      return v36;
    }
    sub_236178248((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_236126188((uint64_t *)&unk_26AD74BD0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    return v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v28, v29, v25);
  *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  return v36;
}

uint64_t sub_236179D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_236179DAC);
}

uint64_t sub_236179DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_2361FD748();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_236179EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_236179F10);
}

uint64_t sub_236179F10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_2361FD748();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

void sub_23617A06C()
{
  type metadata accessor for ReadingHistoryModel(319);
  if (v0 <= 0x3F)
  {
    sub_236160890();
    if (v1 <= 0x3F)
    {
      sub_2361FD748();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

char *sub_23617A170(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23617A25C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23617A354(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23617A448(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23617A5A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_236126188(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2361FF108();
  __break(1u);
  return result;
}

uint64_t sub_23617A6B0()
{
  return sub_236162A58(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_23617A6BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617A6CC()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_23617A70C()
{
  unint64_t v1 = *(void (**)(unsigned char *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_23612D5D0(v0 + 32, (uint64_t)v4, &qword_26AD75038);
  return sub_2361633A4(v1, v2, (uint64_t)v4);
}

uint64_t sub_23617A768()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23617A7A4(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  sub_23612D5D0(a1, (uint64_t)v8, &qword_26AD75038);
  return sub_2361635A4((uint64_t)v8, v2, v3, v4, v5, v6);
}

uint64_t sub_23617A818()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 74, 7);
}

uint64_t sub_23617A850()
{
  unint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 73);
  long long v5 = *(_OWORD *)(v0 + 48);
  v7[0] = *(_OWORD *)(v0 + 32);
  v7[1] = v5;
  uint64_t v8 = v2;
  char v9 = v3;
  char v10 = v4;
  return v1(v7);
}

uint64_t sub_23617A8A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23617A910(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_236126188(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23617A974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_23617A9DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_23613491C(a1, &qword_26AD74880);
  return sub_2361348B8(v3, a1, &qword_26AD74880);
}

uint64_t sub_23617AA28()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23617AA60()
{
  return sub_236156ED0(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_23617AA6C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617AA7C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23617AAB4()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD74180) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = sub_2361FD748();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_23617ABE8()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD74180) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_236164C94(v3, v0 + v2, v4);
}

uint64_t sub_23617AC7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23617ACE4()
{
  uint64_t v1 = sub_2361FD748();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_23617ADA4()
{
  uint64_t v1 = *(void *)(sub_2361FD748() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void *)(v0 + v3);
  unint64_t v6 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  return sub_23617300C(v4, v5, v7, v8);
}

uint64_t sub_23617AE40()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

BOOL sub_23617AE50(long long *a1)
{
  return sub_23616E714(a1, *(void *)(v1 + 16));
}

uint64_t sub_23617AE74()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23617AEBC()
{
  return sub_236162E74(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_23617AEC8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617AED8()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 32) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_236126188(&qword_26AD75F18);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_236126188(&qword_26AD75EE0);
  unint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_236126188(&qword_26AD74880);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_236126188(&qword_26AD75170);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_2361FD748();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_236126188(&qword_268853710) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_2361FD748();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  swift_release();
  return MEMORY[0x270FA0238](v24, ((v27 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v25 | 7);
}

uint64_t sub_23617B448()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_2361634A8(v2, v3, v4);
}

uint64_t sub_23617B4E0()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_23617B528(uint64_t a1)
{
  return sub_236163A10(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23617B538()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 32) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_236126188(&qword_26AD75F18);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_236126188(&qword_26AD75EE0);
  unint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_236126188(&qword_26AD74880);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_236126188(&qword_26AD75170);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_2361FD748();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_236126188(&qword_268853710) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_2361FD748();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  return MEMORY[0x270FA0238](v24, v26 + v27, v25 | 7);
}

uint64_t sub_23617BA8C()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 16))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_23617BAF8(uint64_t *a1)
{
  return sub_2361653BC(a1);
}

uint64_t sub_23617BB00(uint64_t a1)
{
  return sub_2361657B4(a1);
}

uint64_t sub_23617BB08()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 16) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_236126188(&qword_26AD75F18);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_236126188(&qword_26AD75EE0);
  unint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_236126188(&qword_26AD74880);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_236126188(&qword_26AD75170);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_2361FD748();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_236126188(&qword_268853710) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 16) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 16) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_2361FD748();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  swift_release();
  return MEMORY[0x270FA0238](v24, ((v27 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v25 | 7);
}

uint64_t sub_23617C068()
{
  uint64_t v1 = *(void *)(sub_236126188(&qword_26AD75030) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23616C9E4(v0 + v2, v3);
}

uint64_t sub_23617C0F8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617C108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23617C150(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = sub_236126188(&qword_26AD74880);
  *(unsigned char *)(a1 + *(int *)(result + 44)) = *(unsigned char *)(v3 + *(int *)(result + 44));
  return result;
}

uint64_t sub_23617C18C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23617C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23617C200(uint64_t *a1)
{
  return sub_236168210(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_23617C21C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_23617C254()
{
  return sub_23616A934(v0 + 16, *(void *)(v0 + 64), *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v0 + 72));
}

uint64_t sub_23617C260()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_23617C270()
{
  unint64_t result = qword_2688539C8;
  if (!qword_2688539C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2688539C8);
  }
  return result;
}

uint64_t sub_23617C364@<X0>(uint64_t *a1@<X8>)
{
  return sub_236178574(a1);
}

id static OS_os_log.crdtModelSync.getter()
{
  if (qword_26AD74EE0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26AD74ED8;
  return v0;
}

uint64_t sub_23617C3E0()
{
  sub_23617C44C();
  uint64_t result = sub_2361FEE28();
  qword_26AD74ED8 = result;
  return result;
}

unint64_t sub_23617C44C()
{
  unint64_t result = qword_26AD76010;
  if (!qword_26AD76010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD76010);
  }
  return result;
}

uint64_t sub_23617C48C()
{
  sub_2361FED38();
  return v1;
}

uint64_t sub_23617C500(char a1)
{
  return sub_23617DAB8(a1);
}

uint64_t sub_23617C524(uint64_t a1, uint64_t a2)
{
  return sub_23617E2B8(a1, a2);
}

uint64_t sub_23617C548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23617F8E4(a1, a2, a3);
}

uint64_t sub_23617C56C()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_2361FDB38();
  os_log_type_t v3 = sub_2361FEC88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2360BC000, v2, v3, "CRDTModelFileSyncTransport: About to disconnect", v4, 2u);
    MEMORY[0x237DFF240](v4, -1, -1);
  }

  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = *(NSObject **)(v5 + 40);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_236180F80;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_236159570;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23613F9DC;
  v11[3] = &unk_26E975018;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0) {
    return sub_23617EE44((uint64_t)sub_236180428, (uint64_t)&unk_26E974D70);
  }
  __break(1u);
  return result;
}

uint64_t sub_23617C76C()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_2361FDB38();
  os_log_type_t v3 = sub_2361FEC88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2360BC000, v2, v3, "CRDTModelFileSyncTransport: About to reconnect", v4, 2u);
    MEMORY[0x237DFF240](v4, -1, -1);
  }

  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v6 = *(NSObject **)(v5 + 40);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_236180518;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_236159570;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23613F9DC;
  v11[3] = &unk_26E974F28;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_23617D588();
    return sub_23617EE44((uint64_t)sub_236180168, (uint64_t)&unk_26E974C58);
  }
  return result;
}

uint64_t sub_23617C974()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_23617C9CC();
    return swift_release();
  }
  return result;
}

uint64_t sub_23617C9CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v0[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  if (result)
  {
    unint64_t v6 = sub_2361FDB38();
    os_log_type_t v7 = sub_2361FEC88();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_2360BC000, v6, v7, "CRDTModelFileSyncTransport: assume connection is healthy", v8, 2u);
      MEMORY[0x237DFF240](v8, -1, -1);
    }

    uint64_t v9 = v1[5];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    *(void *)(v10 + 24) = v2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_236180F84;
    *(void *)(v11 + 24) = v10;
    void v14[4] = sub_236159570;
    v14[5] = v11;
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 1107296256;
    void v14[2] = sub_23613F9DC;
    v14[3] = &unk_26E975108;
    unint64_t v12 = _Block_copy(v14);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    _Block_release(v12);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23617CBEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2361FDB38();
  os_log_type_t v3 = sub_2361FEC88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2360BC000, v2, v3, "CRDTModelFileSyncTransport: disconnected", v4, 2u);
    MEMORY[0x237DFF240](v4, -1, -1);
  }

  uint64_t v5 = *(NSObject **)(v1 + 40);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_23618042C;
  *(void *)(v6 + 24) = v1;
  void v9[4] = sub_236134708;
  void v9[5] = v6;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  void v9[2] = sub_23613F9DC;
  v9[3] = &unk_26E974DC0;
  os_log_type_t v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v7);
  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

void sub_23617CD9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    sub_23617CE94(*(double *)(a1 + 56));
    double v2 = *(double *)(a1 + 56) + *(double *)(a1 + 56);
    *(double *)(a1 + 56) = v2;
    if (v2 > 3600.0) {
      *(void *)(a1 + 56) = 0x40AC200000000000;
    }
  }
  else
  {
    oslog = sub_2361FDB38();
    os_log_type_t v3 = sub_2361FEC88();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_2360BC000, oslog, v3, "CRDTModelFileSyncTransport: not reconnecting automatically", v4, 2u);
      MEMORY[0x237DFF240](v4, -1, -1);
    }
  }
}

void sub_23617CE94(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2361FDB38();
  os_log_type_t v5 = sub_2361FEC88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    double v17 = a1;
    sub_2361FEE68();
    _os_log_impl(&dword_2360BC000, v4, v5, "CRDTModelFileSyncTransport: attempt auto-reconnect in %f sec", v6, 0xCu);
    MEMORY[0x237DFF240](v6, -1, -1);
  }

  os_log_type_t v7 = *(void **)(v2 + 64);
  if (v7) {
    goto LABEL_5;
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  id v9 = objc_allocWithZone(MEMORY[0x263F2BA50]);
  uint64_t v21 = sub_236180444;
  uint64_t v22 = v8;
  double v17 = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_2361801B4;
  uint64_t v20 = &unk_26E974E38;
  uint64_t v10 = _Block_copy(&v17);
  swift_retain();
  uint64_t v11 = (void *)sub_2361FE8C8();
  id v12 = objc_msgSend(v9, sel_initWithNotifyBlock_blockDescription_, v10, v11);

  _Block_release(v10);
  swift_release();
  swift_release();
  unsigned int v13 = *(void **)(v2 + 64);
  *(void *)(v2 + 64) = v12;

  os_log_type_t v7 = *(void **)(v2 + 64);
  if (v7)
  {
LABEL_5:
    objc_msgSend(v7, sel_setCoalescingDelay_, a1, *(void *)&v17);
    uint64_t v14 = *(void **)(v2 + 64);
    if (v14)
    {
      uint64_t v21 = nullsub_60;
      uint64_t v22 = 0;
      double v17 = MEMORY[0x263EF8330];
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_2361E02F8;
      uint64_t v20 = &unk_26E974DE8;
      uint64_t v15 = _Block_copy(&v17);
      id v16 = v14;
      objc_msgSend(v16, sel_signalWithCompletion_, v15);
      _Block_release(v15);
    }
  }
}

uint64_t sub_23617D130()
{
  uint64_t v0 = sub_2361FDB58();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  os_log_type_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, Strong + OBJC_IVAR____TtC13BookDataStoreP33_8BA727A02A5A0740DF907C88E66860CE27_TransportConnectionManager_logger, v0);
    swift_release();
    os_log_type_t v5 = sub_2361FDB38();
    os_log_type_t v6 = sub_2361FEC88();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl(&dword_2360BC000, v5, v6, "CRDTModelFileSyncTransport: About to auto-reconnect", v7, 2u);
      MEMORY[0x237DFF240](v7, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_23617D2F4();
    return swift_release();
  }
  return result;
}

uint64_t sub_23617D2F4()
{
  uint64_t v1 = *(NSObject **)(v0 + 40);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_236180494;
  *(void *)(v2 + 24) = v0;
  v7[4] = sub_236159570;
  v7[5] = v2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_23613F9DC;
  v7[3] = &unk_26E974EB0;
  os_log_type_t v3 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 40))(ObjectType, v5);
    return swift_release();
  }
  return result;
}

void sub_23617D450()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2361FDB38();
  os_log_type_t v3 = sub_2361FEC58();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2360BC000, v2, v3, "CRDTModelFileSyncTransport: reconnected", v4, 2u);
    MEMORY[0x237DFF240](v4, -1, -1);
  }

  uint64_t v5 = *(void **)(v1 + 32);
  if (v5)
  {
    void v8[4] = nullsub_60;
    void v8[5] = 0;
    v8[0] = MEMORY[0x263EF8330];
    v8[1] = 1107296256;
    void v8[2] = sub_2361E02F8;
    v8[3] = &unk_26E974D48;
    os_log_type_t v6 = _Block_copy(v8);
    id v7 = v5;
    objc_msgSend(v7, sel_signalWithCompletion_, v6);
    _Block_release(v6);
  }
}

uint64_t sub_23617D588()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  os_log_type_t v3 = v1[5];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_236180570;
  *(void *)(v5 + 24) = v4;
  void v8[4] = sub_236159570;
  void v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_23613F9DC;
  v8[3] = &unk_26E974FA0;
  os_log_type_t v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_23617D704()
{
  swift_unknownObjectRelease();

  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC13BookDataStoreP33_8BA727A02A5A0740DF907C88E66860CE27_TransportConnectionManager_logger;
  uint64_t v2 = sub_2361FDB58();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23617D7C4()
{
  return type metadata accessor for _TransportConnectionManager();
}

uint64_t type metadata accessor for _TransportConnectionManager()
{
  uint64_t result = qword_26AD75D20;
  if (!qword_26AD75D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23617D818()
{
  uint64_t result = sub_2361FDB58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23617D8E4()
{
  uint64_t result = sub_2361FE6A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2361FD638();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_2361FDB58();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_23617DA44()
{
  sub_2361FED38();
  return v1;
}

uint64_t sub_23617DAB8(char a1)
{
  uint64_t v3 = sub_2361FE058();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FE098();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + *(void *)(*(void *)v1 + 152));
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  void aBlock[4] = sub_236180F54;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = &unk_26E975158;
  id v12 = _Block_copy(aBlock);
  swift_retain();
  sub_2361FE078();
  v14[1] = MEMORY[0x263F8EE78];
  sub_2361804D0((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
  sub_236126188((uint64_t *)&unk_26AD75F90);
  sub_236144A6C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
  sub_2361FEEA8();
  MEMORY[0x237DFDD80](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_23617DD7C(uint64_t result, char a2)
{
  uint64_t v2 = *(void *)(*(void *)result + 184);
  if (*(unsigned char *)(result + v2) != (a2 & 1))
  {
    *(unsigned char *)(result + v2) = a2 & 1;
    if (*(void *)(result + *(void *)(*(void *)result + 168)))
    {
      swift_retain();
      sub_2361FE558();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23617DE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236180EA0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23617DE28);
}

void *sub_23617DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v18 = *v3;
  uint64_t v19 = a1;
  uint64_t v5 = sub_2361FECF8();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2361FED18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2361FE098();
  MEMORY[0x270FA5388](v10 - 8);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = (void *)((char *)v4 + *(void *)(*v4 + 144));
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = *(void *)(*v3 + 152);
  sub_236134A78();
  sub_2361FE088();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F138], v6);
  unint64_t v22 = MEMORY[0x263F8EE78];
  sub_2361804D0((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_236144A6C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  *(void *)((char *)v3 + v12) = sub_2361FED58();
  *(void *)((char *)v3 + *(void *)(*v3 + 160)) = MEMORY[0x263F8EE88];
  *(void *)((char *)v3 + *(void *)(*v3 + 168)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 176)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 184)) = 0;
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD000000000000012;
  unint64_t v23 = 0x800000023620ACA0;
  (*(void (**)(void))(*(void *)(v18 + 88) + 8))(*(void *)(v18 + 80));
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FDB48();
  v3[4] = v19;
  unsigned int v13 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v14 = sub_2361FD638();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v20, v14);
  uint64_t v15 = (char *)v4 + *(void *)(*v4 + 128);
  uint64_t v16 = sub_2361FE6A8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v21, v16);
  return v4;
}

uint64_t sub_23617E2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 144));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  sub_236144558(v4);
  swift_retain();
  sub_23617E31C();
  return swift_release();
}

void sub_23617E31C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  unint64_t v52 = v2;
  uint64_t v3 = sub_2361FE548();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2361FD638();
  uint64_t v49 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2[10];
  uint64_t v10 = v2[12];
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = sub_2361FE6A8();
  uint64_t v13 = sub_2361FEE38();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = v2[21];
  if (*(void *)((char *)v1 + v15))
  {
    swift_retain_n();
    uint64_t v16 = sub_2361FDB38();
    os_log_type_t v17 = sub_2361FEC88();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = v15;
      uint64_t v20 = swift_slowAlloc();
      v53[0] = v20;
      *(_DWORD *)uint64_t v18 = 136315138;
      if (*((unsigned char *)v1 + *(void *)(*v1 + 176))) {
        uint64_t v21 = 0x657463656E6E6F63;
      }
      else {
        uint64_t v21 = 0x697463656E6E6F63;
      }
      if (*((unsigned char *)v1 + *(void *)(*v1 + 176))) {
        unint64_t v22 = 0xE900000000000064;
      }
      else {
        unint64_t v22 = 0xEA0000000000676ELL;
      }
      v53[3] = sub_23612A974(v21, v22, v53);
      sub_2361FEE68();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2360BC000, v16, v17, "CRDTModelFileSyncTransport reconnect: Already %s", v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v23 = v20;
      uint64_t v15 = v19;
      MEMORY[0x237DFF240](v23, -1, -1);
      MEMORY[0x237DFF240](v18, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (*(void *)((char *)v1 + v15)) {
      swift_retain();
    }
    else {
      __break(1u);
    }
  }
  else
  {
    uint64_t v41 = v11;
    uint64_t v42 = (char *)&v41 - v14;
    uint64_t v43 = v6;
    uint64_t v44 = v8;
    uint64_t v45 = v5;
    uint64_t v46 = v12;
    uint64_t v47 = v10;
    uint64_t v48 = v15;
    uint64_t v24 = v9;
    uint64_t v25 = sub_2361FDB38();
    os_log_type_t v26 = sub_2361FEC88();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_2360BC000, v25, v26, "CRDTModelFileSyncTransport reconnect: About to initialize file sync manager", v27, 2u);
      MEMORY[0x237DFF240](v27, -1, -1);
    }

    sub_2361FE538();
    swift_getWitnessTable();
    sub_2361FE588();
    uint64_t v28 = (void *)v1[4];
    uint64_t v29 = v46;
    uint64_t v30 = *(void *)(v46 - 8);
    uint64_t v31 = v42;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v42, (char *)v1 + *(void *)(*v1 + 128), v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v44, (char *)v1 + *(void *)(*v1 + 136), v43);
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v45, *MEMORY[0x263F32EB8], v51);
    id v32 = v28;
    *(void *)((char *)v1 + v4_Block_object_dispose(&STACK[0x3B0], 8) = sub_2361FE598();
    swift_retain();
    swift_release();
    sub_2361FE558();
    v53[0] = sub_2361FE578();
    uint64_t v33 = swift_allocObject();
    swift_weakInit();
    uint64_t v34 = (void *)swift_allocObject();
    void v34[2] = v9;
    uint64_t v35 = v52;
    uint64_t v36 = v52[11];
    uint64_t v37 = v47;
    v34[3] = v36;
    void v34[4] = v37;
    uint64_t v38 = v35[13];
    void v34[5] = v38;
    v34[6] = v33;
    uint64_t v39 = swift_allocObject();
    swift_weakInit();
    uint64_t v40 = (void *)swift_allocObject();
    id v40[2] = v24;
    v40[3] = v36;
    _DWORD v40[4] = v37;
    v40[5] = v38;
    v40[6] = v39;
    sub_236126310((uint64_t *)&unk_26AD76050);
    sub_2361FDB68();
    swift_getWitnessTable();
    sub_2361FDBB8();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_2361FDB78();
    swift_endAccess();
    swift_release();
  }
}

void sub_23617EA48(void **a1)
{
  uint64_t v2 = sub_2361FDB58();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = *a1;
  if (v9)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, Strong + *(void *)(*(void *)Strong + 192), v2);
      id v11 = v9;
      swift_release();
      id v12 = v9;
      id v13 = v9;
      uint64_t v14 = sub_2361FDB38();
      os_log_type_t v15 = sub_2361FEC68();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        v28[0] = v26;
        *(_DWORD *)uint64_t v16 = 136315138;
        v25[1] = v16 + 4;
        swift_getErrorValue();
        uint64_t v17 = sub_2361FF298();
        uint64_t v27 = sub_23612A974(v17, v18, v28);
        sub_2361FEE68();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2360BC000, v14, v15, "CRDTModelFileSyncTransport sink: error: %s", v16, 0xCu);
        uint64_t v19 = v26;
        swift_arrayDestroy();
        MEMORY[0x237DFF240](v19, -1, -1);
        MEMORY[0x237DFF240](v16, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      id v24 = v9;
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_23617EE44((uint64_t)sub_236180428, (uint64_t)&unk_26E974D70);

      swift_release();
    }
    else
    {
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v20 = swift_weakLoadStrong();
    if (v20)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v20 + *(void *)(*(void *)v20 + 192), v2);
      swift_release();
      uint64_t v21 = sub_2361FDB38();
      os_log_type_t v22 = sub_2361FEC88();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_2360BC000, v21, v22, "CRDTModelFileSyncTransport sink: finished", v23, 2u);
        MEMORY[0x237DFF240](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
}

uint64_t sub_23617EE44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2361FE058();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2361FE098();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + *(void *)(*(void *)v2 + 152));
  void aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = a2;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  sub_2361FE078();
  v15[1] = MEMORY[0x263F8EE78];
  sub_2361804D0((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
  sub_236126188((uint64_t *)&unk_26AD75F90);
  sub_236144A6C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
  sub_2361FEEA8();
  MEMORY[0x237DFDD80](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_23617F0D8(uint64_t a1)
{
  uint64_t v2 = sub_2361FDB58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, Strong + *(void *)(*(void *)Strong + 192), v2);
    swift_release();
    uint64_t v7 = sub_2361FDB38();
    os_log_type_t v8 = sub_2361FEC58();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_2360BC000, v7, v8, "CRDTModelFileSyncTransport sink: receiveValue", v9, 2u);
      MEMORY[0x237DFF240](v9, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_23617F2B0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23617F2B0(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v22 = sub_2361FE058();
  uint64_t v25 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v21 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2361FE098();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[12];
  uint64_t v10 = sub_2361FE6A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v20 - v12;
  v20[1] = *(void *)((char *)v1 + v3[19]);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v20 - v12, a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  os_log_type_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v8;
  *((void *)v15 + 3) = v3[11];
  *((void *)v15 + 4) = v9;
  *((void *)v15 + 5) = v3[13];
  *((void *)v15 + 6) = v1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], v13, v10);
  void aBlock[4] = sub_2361803B4;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361E02F8;
  void aBlock[3] = &unk_26E974D20;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_2361FE078();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_2361804D0((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
  sub_236126188((uint64_t *)&unk_26AD75F90);
  sub_236144A6C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
  unint64_t v18 = v21;
  uint64_t v17 = v22;
  sub_2361FEEA8();
  MEMORY[0x237DFDD80](0, v7, v18, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  return swift_release();
}

void sub_23617F6A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 176);
  if ((*(unsigned char *)(v1 + v4) & 1) == 0)
  {
    if (*(void *)(v1 + *(void *)(*(void *)v1 + 168)))
    {
      *(unsigned char *)(v1 + v4) = 1;
      if (MEMORY[0x237DFF340](v1 + 16))
      {
        sub_23617D450();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = sub_2361FDB38();
      os_log_type_t v6 = sub_2361FEC68();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl(&dword_2360BC000, v5, v6, "CRDTModelFileSyncTransport: got disconnected before load complete", v7, 2u);
        MEMORY[0x237DFF240](v7, -1, -1);
      }
    }
  }
  uint64_t v8 = *(void (**)(uint64_t))(v2 + *(void *)(*(void *)v2 + 144));
  if (v8)
  {
    swift_retain();
    v8(a1);
    sub_236144558((uint64_t)v8);
  }
}

uint64_t sub_23617F82C()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 160));
  swift_beginAccess();
  *uint64_t v1 = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();
  *(void *)(v0 + *(void *)(*(void *)v0 + 168)) = 0;
  swift_release();
  *(unsigned char *)(v0 + *(void *)(*(void *)v0 + 176)) = 0;
  uint64_t result = MEMORY[0x237DFF340](v0 + 16);
  if (result)
  {
    sub_23617CBEC();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23617F8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v31 = (void *)*v3;
  uint64_t v5 = v31;
  uint64_t v6 = sub_2361FE058();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_2361FE098();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v5[10];
  uint64_t v11 = v5[12];
  uint64_t v12 = sub_2361FE6A8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - v15;
  if (*(void *)((char *)v3 + v5[21]))
  {
    swift_retain();
    sub_2361FE568();
    return swift_release();
  }
  else
  {
    uint64_t v29 = v9;
    unint64_t v18 = v31;
    uint64_t v30 = *(void *)((char *)v3 + v31[19]);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
    unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = (char *)swift_allocObject();
    *((void *)v21 + 2) = v10;
    *((void *)v21 + 3) = v18[11];
    *((void *)v21 + 4) = v11;
    *((void *)v21 + 5) = v18[13];
    *((void *)v21 + 6) = v3;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[v19], v16, v12);
    uint64_t v22 = &v21[v20];
    uint64_t v23 = v38;
    *(void *)uint64_t v22 = v37;
    *((void *)v22 + 1) = v23;
    void aBlock[4] = sub_23618069C;
    void aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2361E02F8;
    void aBlock[3] = &unk_26E975068;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v25 = v29;
    sub_2361FE078();
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_2361804D0((unint64_t *)&unk_26AD75E80, MEMORY[0x263F8F030]);
    sub_236126188((uint64_t *)&unk_26AD75F90);
    sub_236144A6C((unint64_t *)&unk_26AD75FA0, (uint64_t *)&unk_26AD75F90);
    uint64_t v26 = v33;
    uint64_t v27 = v36;
    sub_2361FEEA8();
    MEMORY[0x237DFDD80](0, v25, v26, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v34);
    return swift_release();
  }
}

id *sub_23617FD70()
{
  sub_236142A20((uint64_t)(v0 + 2));

  uint64_t v1 = (char *)v0 + *((void *)*v0 + 16);
  uint64_t v2 = sub_2361FE6A8();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + *((void *)*v0 + 17);
  uint64_t v4 = sub_2361FD638();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_236144558(*(uint64_t *)((char *)v0 + *((void *)*v0 + 18)));

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = (char *)v0 + *((void *)*v0 + 24);
  uint64_t v6 = sub_2361FDB58();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_23617FF40()
{
  sub_23617FD70();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _CRDTModelFileSyncTransport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23617FFAC()
{
  uint64_t result = sub_2361FDB58();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_236180050()
{
  return sub_23617EE44((uint64_t)sub_236180168, (uint64_t)&unk_26E974C58);
}

uint64_t sub_236180084()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_26AD75AD8;
  uint64_t v2 = sub_2361FDB58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_2361800F8()
{
  sub_236180084();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRDTModelFileSyncTransport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_236180168()
{
  sub_23617E31C();
  return swift_release();
}

uint64_t sub_236180190(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2361801A0()
{
  return swift_release();
}

uint64_t sub_2361801A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_2361801B4(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_236180484, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_236180248()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236180280()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_2361802B8(void **a1)
{
}

uint64_t sub_2361802C8(uint64_t a1)
{
  return sub_23617F0D8(a1);
}

uint64_t sub_2361802D8()
{
  uint64_t v1 = sub_2361FE6A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_2361803B4()
{
  uint64_t v1 = *(void *)(sub_2361FE6A8() - 8);
  sub_23617F6A4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_23618042C()
{
  sub_23617CD9C(v0);
}

uint64_t sub_236180434()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236180444()
{
  return sub_23617D130();
}

uint64_t sub_23618044C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_236180484()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_236180494()
{
  uint64_t v1 = *(void **)(v0 + 64);
  *(void *)(v0 + 64) = 0;
}

uint64_t sub_2361804A0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2361804B0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 176));
}

uint64_t sub_2361804D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_236180518()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_236180528()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236180538()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_236180570()
{
  *(void *)(*(void *)(v0 + 16) + 56) = 0x403E000000000000;
}

uint64_t sub_236180580()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236180590()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2361805A0()
{
  uint64_t v1 = sub_2361FE6A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_23618069C()
{
  sub_2361FE6A8();
  sub_23617E31C();
  sub_2361FE568();
  return swift_release();
}

uint64_t sub_236180770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  uint64_t v5 = sub_2361FED18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2361FECF8();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_2361FE098();
  MEMORY[0x270FA5388](v10 - 8);
  *(void *)(a2 + 32) = 0;
  v19[1] = sub_236134A78();
  sub_2361FE088();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2361804D0((unint64_t *)&unk_26AD75FE0, MEMORY[0x263F8F0F8]);
  sub_236126188((uint64_t *)&unk_26AD75FB0);
  sub_236144A6C(&qword_26AD75FC0, (uint64_t *)&unk_26AD75FB0);
  sub_2361FEEA8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F130], v5);
  *(void *)(a2 + 40) = sub_2361FED58();
  *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 1;
  *(void *)(a2 + 64) = 0;
  sub_2361FDB48();
  uint64_t v11 = v21;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 56) = 0x403E000000000000;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = objc_allocWithZone(MEMORY[0x263F2BA50]);
  void aBlock[4] = sub_236180F04;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2361801B4;
  void aBlock[3] = &unk_26E975090;
  uint64_t v14 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v15 = (void *)sub_2361FE8C8();
  id v16 = objc_msgSend(v13, sel_initWithNotifyBlock_blockDescription_, v14, v15);

  _Block_release(v14);
  swift_release();
  swift_release();
  objc_msgSend(v16, sel_setCoalescingDelay_, 60.0);
  swift_unknownObjectRelease();
  uint64_t v17 = *(void **)(a2 + 32);
  *(void *)(a2 + 32) = v16;

  return a2;
}

void *sub_236180B44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  id v30 = a1;
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = sub_2361FD638();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = v5[10];
  uint64_t v23 = v5[12];
  uint64_t v24 = sub_2361FE6A8();
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v11 = (char *)&v23 - v10;
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD000000000000012;
  unint64_t v32 = 0x800000023620ACA0;
  unint64_t v12 = v5[11];
  (*(void (**)(unint64_t, unint64_t))(v12 + 8))(v8, v12);
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FDB48();
  uint64_t v13 = v5[13];
  unint64_t v31 = v8;
  unint64_t v32 = v12;
  uint64_t v33 = v23;
  uint64_t v34 = v13;
  uint64_t v14 = type metadata accessor for _CRDTModelFileSyncTransport();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v28, v24);
  uint64_t v15 = (uint64_t)v25;
  uint64_t v16 = v26;
  uint64_t v17 = v29;
  uint64_t v18 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v29, v27);
  swift_allocObject();
  v3[2] = sub_23617DE28((uint64_t)v30, (uint64_t)v11, v15);
  type metadata accessor for _TransportConnectionManager();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_236180770(v20, v19, v14, (uint64_t)&off_26E974C10);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  v4[3] = v21;
  *(void *)(v4[2] + 24) = &off_26E974C40;
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t sub_236180E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236180EA0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_236180B44);
}

uint64_t sub_236180EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  return a4(a1, a2, a3);
}

uint64_t sub_236180F04()
{
  return sub_23617C974();
}

uint64_t sub_236180F0C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_236180F1C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_236180F54()
{
  return sub_23617DD7C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_236180F60(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 184));
}

uint64_t sub_23618100C()
{
  sub_23617C44C();
  uint64_t result = sub_2361FEE28();
  qword_2688539D0 = result;
  return result;
}

id ReadingHistoryStateEstimator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ReadingHistoryStateEstimator.init()()
{
  uint64_t v1 = sub_2361FD7F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_allocWithZone(MEMORY[0x263F08790]);
  uint64_t v6 = v0;
  id v7 = objc_msgSend(v5, sel_init);
  uint64_t v8 = OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter;
  *(void *)&v6[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter] = v7;
  id v9 = v7;
  sub_2361FD758();
  uint64_t v10 = (void *)sub_2361FD788();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v9, sel_setCalendar_, v10);

  id v11 = *(id *)&v6[v8];
  unint64_t v12 = (void *)sub_2361FE8C8();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  uint64_t v13 = (objc_class *)type metadata accessor for ReadingHistoryStateEstimator();
  v15.receiver = v6;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for ReadingHistoryStateEstimator()
{
  return self;
}

uint64_t sub_236181288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_236126188(&qword_26AD74180);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2361FD748();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v45 = (char *)v37 - v14;
  uint64_t v15 = sub_236126188(&qword_26AD74158);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v37 + *(int *)(v41 + 48) - v19;
  uint64_t v47 = (char *)v37 - v19;
  sub_2361FD6D8();
  uint64_t v46 = v20;
  sub_2361FD6C8();
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    v37[0] = v18;
    uint64_t v39 = a1;
    uint64_t v40 = a2;
    id v49 = *(id *)(v3 + OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v43 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v11 + 24);
    uint64_t v38 = v11;
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v11 + 40);
    swift_bridgeObjectRetain();
    v37[1] = a3;
    uint64_t v25 = a3 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)sub_2361FE8C8();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v49, sel_dateFromString_, v26);

      if (v27)
      {
        uint64_t v28 = v48;
        sub_2361FD728();

        uint64_t v29 = *v22;
        (*v22)(v9, v28, v10);
        (*v23)(v9, 0, 1, v10);
        if ((*v24)(v9, 1, v10) != 1)
        {
          id v30 = v45;
          v29(v45, v9, v10);
          if (sub_2361FD6F8()) {
            (*v44)(v47, v30, v10);
          }
          unint64_t v31 = v46;
          if (sub_2361FD708()) {
            (*v42)(v31, v30, v10);
          }
          else {
            (*v43)(v30, v10);
          }
          goto LABEL_5;
        }
      }
      else
      {
        (*v23)(v9, 1, 1, v10);
      }
      sub_23613491C((uint64_t)v9, &qword_26AD74180);
LABEL_5:
      v25 += 40;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        a1 = v39;
        a2 = v40;
        uint64_t v11 = v38;
        uint64_t v18 = (char *)v37[0];
        break;
      }
    }
  }
  unint64_t v32 = &v18[*(int *)(v41 + 48)];
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v34 = (uint64_t)v47;
  v33(v18, v47, v10);
  v33(v32, v46, v10);
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v35(a1, v18, v10);
  v35(a2, v32, v10);
  return sub_23613491C(v34, &qword_26AD74158);
}

uint64_t sub_2361816E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_236126188(&qword_26AD74158);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(int *)(v5 + 56);
  uint64_t v30 = v5;
  uint64_t v12 = (char *)&v27 + v11 - v9;
  uint64_t v13 = sub_2361FD748();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  id v27 = v10;
  v15(v10, a1, v13);
  uint64_t v28 = v12;
  v15(v12, a2, v13);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_2361FEF98();
  swift_bridgeObjectRelease();
  uint64_t v31 = 91;
  unint64_t v32 = 0xE100000000000000;
  uint64_t v29 = *(char **)&v29[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter];
  id v16 = v29;
  uint64_t v17 = &v8[*(int *)(v5 + 56)];
  v15(v8, (uint64_t)v10, v13);
  v15(v17, (uint64_t)v12, v13);
  uint64_t v18 = (void *)sub_2361FD6E8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19(v17, v13);
  v19(v8, v13);
  id v20 = objc_msgSend(v16, sel_stringFromDate_, v18);

  sub_2361FE8D8();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v21 = &v8[*(int *)(v30 + 56)];
  uint64_t v22 = (uint64_t)v27;
  v15(v8, (uint64_t)v27, v13);
  v15(v21, (uint64_t)v28, v13);
  uint64_t v23 = (void *)sub_2361FD6E8();
  v19(v21, v13);
  v19(v8, v13);
  id v24 = objc_msgSend(v29, sel_stringFromDate_, v23);

  sub_2361FE8D8();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  sub_2361854C8((unint64_t *)&qword_268852F48, MEMORY[0x263F07490]);
  sub_2361FF218();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  sub_2361FF218();
  sub_2361FE9B8();
  swift_bridgeObjectRelease();
  sub_2361FE9B8();
  uint64_t v25 = v31;
  sub_23613491C(v22, &qword_26AD74158);
  return v25;
}

void *sub_236181ABC(uint64_t a1, void (**a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  uint64_t v55 = sub_2361FD7F8();
  uint64_t v67 = *(char **)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2361FD748();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v54 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = sub_236126188(&qword_26AD74158);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v20(v19, a1, v7);
  v20(&v19[*(int *)(v17 + 56)], (uint64_t)v64, v7);
  uint64_t v21 = v55;
  uint64_t v22 = sub_2361852DC(v65);
  sub_2361FD758();
  uint64_t v54 = v19;
  sub_2361FD768();
  uint64_t v23 = (void (*)(char *, uint64_t))*((void *)v67 + 1);
  v23(v6, v21);
  sub_2361FD758();
  sub_2361FD768();
  v23(v6, v21);
  uint64_t v24 = sub_2361854C8((unint64_t *)&unk_26AD74160, MEMORY[0x263F07490]);
  uint64_t v67 = v13;
  uint64_t v25 = v24;
  if ((sub_2361FE8A8() & 1) == 0)
  {
    uint64_t v62 = v25;
    uint64_t v63 = v23;
    uint64_t v28 = *(char **)&v61[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter];
    uint64_t v64 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v65 = v22;
    unint64_t v60 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v61 = v28;
    id v27 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v31 = v21;
      unint64_t v32 = (void *)sub_2361FD6E8();
      id v33 = objc_msgSend(v61, sel_stringFromDate_, v32);

      uint64_t v34 = sub_2361FE8D8();
      uint64_t v36 = v35;

      uint64_t v37 = v65;
      if (!*(void *)(v65 + 16)) {
        goto LABEL_14;
      }
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_23612B100(v34, v36);
      if ((v39 & 1) == 0) {
        break;
      }
      uint64_t v40 = *(void *)(v37 + 56) + 40 * v38;
      uint64_t v42 = *(void *)v40;
      uint64_t v41 = *(void *)(v40 + 8);
      uint64_t v43 = *(void *)(v40 + 16);
      uint64_t v57 = *(void *)(v40 + 24);
      uint64_t v58 = v43;
      int v56 = *(unsigned __int8 *)(v40 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v27 = sub_2361745F4(0, v27[2] + 1, 1, v27);
      }
      unint64_t v45 = v27[2];
      unint64_t v44 = v27[3];
      if (v45 >= v44 >> 1) {
        id v27 = sub_2361745F4((void *)(v44 > 1), v45 + 1, 1, v27);
      }
      v27[2] = v45 + 1;
      uint64_t v46 = &v27[5 * v45];
      v46[4] = v42;
      v46[5] = v41;
      uint64_t v47 = v57;
      v46[6] = v58;
      v46[7] = v47;
      *((unsigned char *)v46 + 64) = v56;
LABEL_5:
      sub_2361FD758();
      uint64_t v30 = v66;
      sub_2361FD6A8();
      uint64_t v21 = v31;
      v63(v6, v31);
      uint64_t v26 = *v64;
      (*v64)(v15, v7);
      (*v60)(v15, v30, v7);
      if (sub_2361FE8A8())
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v27 = sub_2361745F4(0, v27[2] + 1, 1, v27);
    }
    unint64_t v49 = v27[2];
    unint64_t v48 = v27[3];
    uint64_t v50 = v59;
    if (v49 >= v48 >> 1)
    {
      uint64_t v51 = sub_2361745F4((void *)(v48 > 1), v49 + 1, 1, v27);
      uint64_t v50 = v59;
      id v27 = v51;
    }
    v27[2] = v49 + 1;
    uint64_t v29 = &v27[5 * v49];
    void v29[4] = v34;
    void v29[5] = v36;
    v29[6] = 0;
    v29[7] = v50;
    *((unsigned char *)v29 + 64) = 0;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  id v27 = (void *)MEMORY[0x263F8EE78];
LABEL_19:
  uint64_t v52 = (uint64_t)v54;
  v26(v67, v7);
  v26(v15, v7);
  sub_23613491C(v52, &qword_26AD74158);
  return v27;
}

uint64_t sub_236182068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_2361FD7F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2361FD4D8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  if (sub_2361FD708())
  {
    sub_2361FD758();
    sub_236126188(&qword_2688539E8);
    uint64_t v33 = a3;
    uint64_t v15 = sub_2361FD7D8();
    uint64_t v32 = a1;
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)(v15 - 8);
    uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v31 = v6;
    uint64_t v19 = (v18 + 32) & ~v18;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_23620E120;
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v20 + v19, *MEMORY[0x263F07870], v16);
    sub_236184FC4(v20);
    swift_setDeallocating();
    a1 = v32;
    swift_arrayDestroy();
    a3 = v33;
    swift_deallocClassInstance();
    sub_2361FD778();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    uint64_t v14 = sub_2361FD498();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v22) {
      uint64_t v14 = 0;
    }
  }
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v24 = *(void *)(a2 + *(int *)(result + 20));
  BOOL v25 = __OFSUB__(v24, v14);
  uint64_t v26 = v24 - v14;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = result;
    if (v26 >= 2)
    {
      uint64_t v29 = sub_2361FD748();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a3, a1, v29);
      uint64_t v28 = 0;
      *(void *)(a3 + *(int *)(v27 + 20)) = v26;
    }
    else
    {
      uint64_t v28 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a3, v28, 1, v27);
  }
  return result;
}

void sub_2361823D0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v296 = a3;
  uint64_t v301 = (char *)a2;
  uint64_t v291 = (char *)a1;
  uint64_t v293 = a4;
  uint64_t v4 = sub_2361FD748();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v264 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v279 = *(void *)(v280 - 8);
  MEMORY[0x270FA5388](v280);
  uint64_t v272 = (uint64_t)&v252 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = type metadata accessor for ReadingHistory.State(0);
  uint64_t v292 = *(void *)(v302 - 8);
  MEMORY[0x270FA5388](v302);
  uint64_t v278 = (char *)&v252 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_236126188((uint64_t *)&unk_26AD74BD0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v266 = (uint64_t)&v252 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v259 = (uint64_t)&v252 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v258 = (uint64_t)&v252 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v265 = (char *)&v252 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v267 = (uint64_t)&v252 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v257 = (uint64_t)&v252 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v263 = (uint64_t)&v252 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v269 = (uint64_t)&v252 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v273 = (uint64_t)&v252 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v271 = (uint64_t)&v252 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v275 = (uint64_t)&v252 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v270 = (uint64_t)&v252 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v274 = (uint64_t)&v252 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v276 = (uint64_t)&v252 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v277 = (uint64_t)&v252 - v38;
  uint64_t v290 = sub_2361FD7F8();
  uint64_t v39 = *(void *)(v290 - 8);
  MEMORY[0x270FA5388](v290);
  uint64_t v41 = (char *)&v252 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_236126188(&qword_26AD74158);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v284 = (char *)&v252 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v295 = (uint64_t)&v252 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v297 = (uint64_t)&v252 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v289 = ((char *)&v252 - v50);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v298 = (uint64_t)&v252 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v304 = (uint64_t)&v252 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v288 = (char *)&v252 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v59 = (char *)&v252 - v58;
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  uint64_t v62 = (char *)&v252 - v61;
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = (char *)&v252 - v63;
  uint64_t v285 = v5;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v65 = v5 + 16;
  unint64_t v66 = v67;
  v67((char *)&v252 - v63, v291, v4);
  uint64_t v303 = v42;
  uint64_t v68 = (uint64_t)&v64[*(int *)(v42 + 48)];
  uint64_t v294 = v4;
  v67((char *)v68, v301, v4);
  uint64_t v69 = (uint64_t)&v62[*(int *)(v42 + 48)];
  sub_2361FD758();
  uint64_t v286 = v64;
  sub_2361FD768();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v71 = v290;
  v70(v41, v290);
  sub_2361FD758();
  uint64_t v301 = (char *)v69;
  uint64_t v268 = v68;
  sub_2361FD768();
  id v261 = v41;
  uint64_t v262 = v39 + 8;
  uint64_t v260 = v70;
  v70(v41, v71);
  uint64_t v72 = v303;
  unint64_t v73 = &v59[*(int *)(v303 + 48)];
  uint64_t v282 = *(int *)(v302 + 28);
  unint64_t v74 = v59;
  sub_236181288((uint64_t)v59, (uint64_t)v73, *(void *)((char *)v296 + v282));
  LODWORD(v287) = sub_2361FEC88();
  if (qword_268852E18 != -1) {
    swift_once();
  }
  BOOL v75 = qword_2688539D0;
  uint64_t v76 = v72;
  uint64_t v77 = (uint64_t)v288;
  unint64_t v78 = &v288[*(int *)(v72 + 48)];
  uint64_t v291 = v62;
  uint64_t v79 = v62;
  uint64_t v80 = v294;
  v66(v288, v79, v294);
  v66(v78, v301, v80);
  sub_2361348B8(v77, v304, &qword_26AD74158);
  sub_236184E34(v77, v298);
  uint64_t v81 = *(int *)(v76 + 48);
  uint64_t v82 = (uint64_t)v289;
  uint64_t v83 = (char *)v289 + v81;
  uint64_t v84 = (uint64_t)v74;
  v66((char *)v289, v74, v80);
  v66(v83, v73, v80);
  uint64_t v85 = v297;
  sub_2361348B8(v82, v297, &qword_26AD74158);
  uint64_t v86 = v295;
  sub_236184E34(v82, v295);
  uint64_t v87 = v299;
  int v88 = v287;
  uint64_t v299 = v75;
  BOOL v89 = os_log_type_enabled(v75, (os_log_type_t)v287);
  uint64_t v300 = (char *)v84;
  uint64_t v283 = v65;
  uint64_t v281 = v66;
  uint64_t v289 = v87;
  if (v89)
  {
    unint64_t v90 = v87;
    LODWORD(v28_Block_object_dispose(&STACK[0x3B0], 8) = v88;
    uint64_t v91 = v90;
    os_log_t v287 = v299;
    uint64_t v92 = (_DWORD *)swift_slowAlloc();
    uint64_t v256 = swift_slowAlloc();
    uint64_t v305 = v256;
    uint64_t v253 = (uint8_t *)v92;
    *uint64_t v92 = 136315394;
    uint64_t v299 = v73;
    uint64_t v93 = (void (*)(char *))v66;
    uint64_t v254 = v92 + 1;
    uint64_t v94 = *(int *)(v303 + 48);
    uint64_t v95 = (uint64_t)v284;
    uint64_t v96 = (uint64_t)&v284[v94];
    uint64_t v97 = v304 + v94;
    v93(v284);
    ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v96, v97, v80);
    uint64_t v98 = sub_2361816E4(v95, v96);
    unint64_t v100 = v99;
    char v101 = *(void (**)(uint64_t, uint64_t))(v285 + 8);
    BOOL v255 = v101;
    v101(v96, v80);
    v101(v95, v80);
    uint64_t v102 = sub_23612A974(v98, v100, &v305);
    uint64_t v103 = v253;
    uint64_t v306 = v102;
    sub_2361FEE68();

    swift_bridgeObjectRelease();
    sub_23613491C(v298, &qword_26AD74158);

    sub_23613491C(v304, &qword_26AD74158);
    uint64_t v104 = v103;
    *((_WORD *)v103 + 6) = 2080;
    uint64_t v304 = (uint64_t)(v103 + 14);
    uint64_t v105 = *(int *)(v303 + 48);
    uint64_t v106 = v95 + v105;
    uint64_t v107 = v297 + v105;
    v93((char *)v95);
    ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v106, v107, v80);
    uint64_t v108 = sub_2361816E4(v95, v106);
    unint64_t v110 = v109;
    uint64_t v111 = v106;
    uint64_t v112 = v255;
    v255(v111, v80);
    v112(v95, v80);
    uint64_t v114 = v292;
    uint64_t v113 = v293;
    uint64_t v306 = sub_23612A974(v108, v110, &v305);
    uint64_t v115 = v302;
    sub_2361FEE68();

    unint64_t v73 = (char *)v299;
    swift_bridgeObjectRelease();
    sub_23613491C(v295, &qword_26AD74158);

    sub_23613491C(v297, &qword_26AD74158);
    os_log_t v116 = v287;
    _os_log_impl(&dword_2360BC000, v287, (os_log_type_t)v288, "estimateState - new range: %s, existing: %s", v104, 0x16u);
    uint64_t v117 = v256;
    swift_arrayDestroy();
    MEMORY[0x237DFF240](v117, -1, -1);
    MEMORY[0x237DFF240](v104, -1, -1);
  }
  else
  {
    sub_23613491C(v298, &qword_26AD74158);
    sub_23613491C(v304, &qword_26AD74158);

    sub_23613491C(v86, &qword_26AD74158);
    sub_23613491C(v85, &qword_26AD74158);
    uint64_t v114 = v292;
    uint64_t v113 = v293;
    uint64_t v115 = v302;
  }
  uint64_t v118 = (uint64_t)v291;
  char v119 = sub_2361FD708();
  uint64_t v120 = (uint64_t)v301;
  if (v119)
  {
    sub_2361FEC68();
    id v121 = (id)qword_2688539D0;
    sub_2361FDB28();

    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    sub_23613491C(v118, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v114 + 56);
    uint64_t v123 = v113;
    uint64_t v124 = 1;
LABEL_10:
    unint64_t v126 = (int *)v115;
LABEL_39:
    v122(v123, v124, 1, v126);
    return;
  }
  if (sub_2361FD718())
  {
    sub_2361FEC88();
    id v125 = (id)qword_2688539D0;
    sub_2361FDB28();

    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    sub_23613491C(v118, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    sub_236184F60((uint64_t)v296, v113);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v114 + 56);
    uint64_t v123 = v113;
    uint64_t v124 = 0;
    goto LABEL_10;
  }
  uint64_t v127 = *(void *)((char *)v296 + v282);
  uint64_t v128 = *(void *)(v127 + 16);
  uint64_t v129 = v73;
  if (v128) {
    uint64_t v130 = *(void *)(v127 + 40 * v128 + 16);
  }
  else {
    uint64_t v130 = 300;
  }
  uint64_t v131 = (uint64_t)v284;
  uint64_t v132 = (void (**)(char *, uint64_t))&v284[*(int *)(v303 + 48)];
  uint64_t v133 = v294;
  uint64_t v134 = (void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))v281;
  v281(v284, (char *)v118, v294);
  v134(v132, v120, v133);
  uint64_t v135 = sub_236181ABC(v131, v132, v127, v130);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v285 + 8);
  v136((uint64_t)v132, v133);
  v136(v131, v133);
  Class isa = v135[2].isa;
  if (!isa)
  {
    swift_bridgeObjectRelease();
    sub_2361FEC68();
    id v139 = (id)qword_2688539D0;
    sub_2361FDB28();

    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    uint64_t v140 = v118;
LABEL_32:
    sub_23613491C(v140, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v292 + 56))(v293, 1, 1, v302);
    return;
  }
  if (isa == (Class)1)
  {
    swift_bridgeObjectRelease();
    sub_2361FEC68();
    id v138 = (id)qword_2688539D0;
LABEL_31:
    sub_2361FDB28();

    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    uint64_t v140 = (uint64_t)v291;
    goto LABEL_32;
  }
  uint64_t v141 = v135 + 4;
  uint64_t v142 = (uint64_t)&v135[5 * (void)isa + 4];
  uint64_t v143 = (uint64_t)v135[5 * (void)isa].isa;
  uint64_t v298 = *(void *)(v142 - 24);
  uint64_t v144 = *(void *)(v142 - 16);
  LODWORD(v304) = *(unsigned __int8 *)(v142 - 8);
  swift_bridgeObjectRetain();
  uint64_t v145 = v129;
  if (sub_2361FD6F8())
  {
    uint64_t v295 = v144;
    uint64_t v146 = v296;
    uint64_t v147 = *v296;
    uint64_t v306 = v147;
    uint64_t v299 = v135;
    uint64_t v297 = v143;
    if (v147 < 1)
    {
      uint64_t v149 = v292;
      uint64_t v148 = v293;
    }
    else
    {
      uint64_t v149 = v292;
      uint64_t v148 = v293;
      if ((v304 & 1) == 0)
      {
        if ((Class)((unint64_t)isa - 2) < v135[2].isa)
        {
          uint64_t v150 = (uint64_t)v300;
          if (((uint64_t)v141[5 * ((void)isa - 2) + 4].isa & 1) == 0)
          {
            uint64_t v147 = 0;
            uint64_t v306 = 0;
          }
          goto LABEL_35;
        }
        __break(1u);
        goto LABEL_77;
      }
    }
    uint64_t v150 = (uint64_t)v300;
LABEL_35:
    os_log_type_t v162 = sub_2361FEC88();
    uint64_t v163 = (void *)qword_2688539D0;
    os_log_type_t v164 = v162;
    if (os_log_type_enabled((os_log_t)qword_2688539D0, v162))
    {
      uint64_t v165 = v163;
      uint64_t v166 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v166 = 134217984;
      uint64_t v305 = v147;
      sub_2361FEE68();
      _os_log_impl(&dword_2360BC000, v165, v164, "estimateState - forward time change, estimated: currentStreak=%ld", v166, 0xCu);
      MEMORY[0x237DFF240](v166, -1, -1);
    }
    swift_beginAccess();
    uint64_t v167 = v306;
    uint64_t v154 = (int *)v302;
    uint64_t v168 = v277;
    sub_2361348B8((uint64_t)v146 + *(int *)(v302 + 20), v277, (uint64_t *)&unk_26AD74BD0);
    uint64_t v169 = (uint64_t *)v278;
    uint64_t v170 = (uint64_t)&v278[v154[5]];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 + 56))(v170, 1, 1, v280);
    *uint64_t v169 = v167;
    sub_23615F1E4(v168, v170);
    uint64_t v171 = (char *)v169 + v154[6];
    uint64_t v172 = v295;
    *(void *)uint64_t v171 = v298;
    *((void *)v171 + 1) = v172;
    v171[16] = v304;
    *(uint64_t *)((char *)v169 + v154[7]) = (uint64_t)v299;
    sub_236184E9C((uint64_t)v169, v148);
    swift_bridgeObjectRelease();
    sub_23613491C(v150, &qword_26AD74158);
    sub_23613491C((uint64_t)v291, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v149 + 56);
    uint64_t v123 = v148;
LABEL_38:
    uint64_t v124 = 0;
    unint64_t v126 = v154;
    goto LABEL_39;
  }
  if ((sub_2361FD708() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2361FEC68();
    id v138 = (id)qword_2688539D0;
    goto LABEL_31;
  }
  uint64_t v295 = v144;
  uint64_t v297 = v143;
  sub_2361FEC88();
  uint64_t v299 = v135;
  id v151 = (id)qword_2688539D0;
  uint64_t v152 = v299;
  sub_2361FDB28();

  if ((Class)((unint64_t)isa - 2) >= v152[2].isa)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v153 = v280;
  if ((v304 & 1) == 0 && ((uint64_t)v141[5 * ((void)isa - 2) + 4].isa & 1) == 0)
  {
    uint64_t v154 = (int *)v302;
    uint64_t v155 = (uint64_t)v296 + *(int *)(v302 + 20);
    uint64_t v156 = v274;
    sub_2361348B8(v155, v274, (uint64_t *)&unk_26AD74BD0);
    uint64_t v157 = v279;
    uint64_t v158 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
    int v159 = v158(v156, 1, v153);
    sub_23613491C(v156, (uint64_t *)&unk_26AD74BD0);
    if (v159 == 1)
    {
      uint64_t v160 = v276;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v276, 1, 1, v153);
      uint64_t v161 = (uint64_t)v291;
    }
    else
    {
      uint64_t v188 = v155;
      uint64_t v189 = v270;
      sub_2361348B8(v188, v270, (uint64_t *)&unk_26AD74BD0);
      int v190 = v158(v189, 1, v153);
      uint64_t v161 = (uint64_t)v291;
      uint64_t v160 = v276;
      if (v190 == 1)
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      sub_236182068((uint64_t)v301, v189, v276);
      sub_236184F00(v189, type metadata accessor for ReadingHistory.Streak);
    }
    os_log_type_t v191 = sub_2361FEC88();
    uint64_t v192 = qword_2688539D0;
    uint64_t v193 = v275;
    sub_2361348B8(v160, v275, (uint64_t *)&unk_26AD74BD0);
    if (os_log_type_enabled(v192, v191))
    {
      uint64_t v194 = v192;
      uint64_t v195 = (uint8_t *)swift_slowAlloc();
      uint64_t v196 = swift_slowAlloc();
      uint64_t v305 = v196;
      *(_DWORD *)uint64_t v195 = 136315138;
      uint64_t v197 = v193;
      uint64_t v198 = v271;
      sub_2361348B8(v197, v271, (uint64_t *)&unk_26AD74BD0);
      if (v158(v198, 1, v280) == 1)
      {
        uint64_t v199 = 7104878;
        sub_23613491C(v198, (uint64_t *)&unk_26AD74BD0);
        unint64_t v200 = 0xE300000000000000;
      }
      else
      {
        uint64_t v199 = ReadingHistory.Streak.description.getter();
        unint64_t v200 = v201;
        sub_236184F00(v198, type metadata accessor for ReadingHistory.Streak);
      }
      uint64_t v306 = sub_23612A974(v199, v200, &v305);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      sub_23613491C(v275, (uint64_t *)&unk_26AD74BD0);
      _os_log_impl(&dword_2360BC000, v194, v191, "estimateState - estimated: no currentStreak, longestStreak=%s", v195, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v196, -1, -1);
      MEMORY[0x237DFF240](v195, -1, -1);

      uint64_t v161 = (uint64_t)v291;
      uint64_t v157 = v279;
      uint64_t v160 = v276;
    }
    else
    {
      sub_23613491C(v193, (uint64_t *)&unk_26AD74BD0);
    }
    uint64_t v202 = v280;
    uint64_t v203 = v277;
    sub_2361348B8(v160, v277, (uint64_t *)&unk_26AD74BD0);
    uint64_t v204 = v278;
    uint64_t v205 = v160;
    uint64_t v206 = (uint64_t)&v278[v154[5]];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v206, 1, 1, v202);
    *uint64_t v204 = 0;
    sub_23615F1E4(v203, v206);
    uint64_t v207 = (char *)v204 + v154[6];
    uint64_t v208 = v295;
    *(void *)uint64_t v207 = v298;
    *((void *)v207 + 1) = v208;
    v207[16] = 0;
    *(void *)((char *)v204 + v154[7]) = v299;
    uint64_t v209 = v293;
    sub_236184E9C((uint64_t)v204, v293);
    swift_bridgeObjectRelease();
    sub_23613491C(v205, (uint64_t *)&unk_26AD74BD0);
    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    sub_23613491C(v161, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v292 + 56);
    uint64_t v123 = v209;
    goto LABEL_38;
  }
  uint64_t v173 = *v296;
  if (!*v296)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2361FEC88();
    id v138 = (id)qword_2688539D0;
    goto LABEL_31;
  }
  uint64_t v174 = *(void *)((char *)v296 + v282);
  uint64_t v175 = *(void *)(v174 + 16);
  uint64_t v176 = v302;
  uint64_t v177 = (uint64_t)v300;
  if (!v175)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2361FEC68();
    id v210 = (id)qword_2688539D0;
    sub_2361FDB28();

    sub_23613491C(v177, &qword_26AD74158);
    sub_23613491C((uint64_t)v291, &qword_26AD74158);
    uint64_t v211 = (uint64_t)v286;
    uint64_t v212 = &qword_26AD74158;
LABEL_58:
    sub_23613491C(v211, v212);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v292 + 56))(v293, 1, 1, v176);
    return;
  }
  if (*(unsigned char *)(v174 + 40 * v175 + 24) == 1)
  {
    uint64_t v178 = v284;
    uint64_t v179 = &v284[*(int *)(v303 + 48)];
    uint64_t v180 = v294;
    uint64_t v181 = v302;
    uint64_t v182 = v145;
    id v183 = v281;
    v281(v284, v300, v294);
    uint64_t v184 = v182;
    uint64_t v176 = v181;
    uint64_t v153 = v280;
    v183(v179, v184, v180);
    uint64_t v185 = v272;
    (*(void (**)(uint64_t, char *, uint64_t))(v285 + 32))(v272, v179, v180);
    *(void *)(v185 + *(int *)(v153 + 20)) = v173;
    v136((uint64_t)v178, v180);
    uint64_t v186 = v273;
    uint64_t v187 = v296;
  }
  else
  {
    uint64_t v213 = v261;
    sub_2361FD7C8();
    uint64_t v214 = v264;
    sub_2361FD698();
    v260(v213, v290);
    uint64_t v187 = v296;
    uint64_t v215 = *v296;
    uint64_t v185 = v272;
    (*(void (**)(uint64_t, char *, uint64_t))(v285 + 32))(v272, v214, v294);
    *(void *)(v185 + *(int *)(v153 + 20)) = v215;
    uint64_t v186 = v273;
  }
  sub_236182068(v268, v185, v186);
  uint64_t v216 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
  if (v216(v186, 1, v153) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2361FEC88();
    id v217 = (id)qword_2688539D0;
    sub_2361FDB28();

    sub_236184F00(v185, type metadata accessor for ReadingHistory.Streak);
    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    sub_23613491C((uint64_t)v291, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    uint64_t v212 = (uint64_t *)&unk_26AD74BD0;
    uint64_t v211 = v186;
    goto LABEL_58;
  }
  uint64_t v218 = (uint64_t)v187 + *(int *)(v176 + 20);
  uint64_t v219 = v263;
  sub_2361348B8(v218, v263, (uint64_t *)&unk_26AD74BD0);
  unsigned int v220 = v216(v219, 1, v153);
  sub_23613491C(v219, (uint64_t *)&unk_26AD74BD0);
  if (v220 == 1)
  {
    uint64_t v221 = v269;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 + 56))(v269, 1, 1, v153);
    uint64_t v222 = (uint64_t)v265;
LABEL_63:
    int v226 = sub_2361FEC88();
    uint64_t v227 = qword_2688539D0;
    uint64_t v228 = v267;
    sub_2361348B8(v186, v267, (uint64_t *)&unk_26AD74BD0);
    sub_2361348B8(v221, v222, (uint64_t *)&unk_26AD74BD0);
    LODWORD(v303) = v226;
    if (os_log_type_enabled(v227, (os_log_type_t)v226))
    {
      uint64_t v229 = v222;
      uint64_t v230 = v227;
      uint64_t v231 = swift_slowAlloc();
      uint64_t v232 = swift_slowAlloc();
      uint64_t v305 = v232;
      *(_DWORD *)uint64_t v231 = 134218242;
      uint64_t v233 = v258;
      sub_2361348B8(v228, v258, (uint64_t *)&unk_26AD74BD0);
      uint64_t v234 = v230;
      if (v216(v233, 1, v153) == 1)
      {
        sub_23613491C(v233, (uint64_t *)&unk_26AD74BD0);
        uint64_t v235 = 0;
      }
      else
      {
        uint64_t v235 = *(void *)(v233 + *(int *)(v153 + 20));
        sub_236184F00(v233, type metadata accessor for ReadingHistory.Streak);
      }
      sub_23613491C(v267, (uint64_t *)&unk_26AD74BD0);
      uint64_t v306 = v235;
      sub_2361FEE68();
      *(_WORD *)(v231 + 12) = 2080;
      uint64_t v236 = v259;
      sub_2361348B8(v229, v259, (uint64_t *)&unk_26AD74BD0);
      if (v216(v236, 1, v153) == 1)
      {
        uint64_t v237 = 7104878;
        sub_23613491C(v236, (uint64_t *)&unk_26AD74BD0);
        unint64_t v238 = 0xE300000000000000;
      }
      else
      {
        uint64_t v237 = ReadingHistory.Streak.description.getter();
        unint64_t v238 = v239;
        sub_236184F00(v236, type metadata accessor for ReadingHistory.Streak);
      }
      uint64_t v306 = sub_23612A974(v237, v238, &v305);
      sub_2361FEE68();
      swift_bridgeObjectRelease();
      sub_23613491C(v229, (uint64_t *)&unk_26AD74BD0);
      _os_log_impl(&dword_2360BC000, v234, (os_log_type_t)v303, "estimateState - estimated: currentStreak=%ld, longestStreak=%s", (uint8_t *)v231, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x237DFF240](v232, -1, -1);
      MEMORY[0x237DFF240](v231, -1, -1);

      uint64_t v186 = v273;
    }
    else
    {
      sub_23613491C(v228, (uint64_t *)&unk_26AD74BD0);
      sub_23613491C(v222, (uint64_t *)&unk_26AD74BD0);
    }
    uint64_t v240 = v266;
    sub_2361348B8(v186, v266, (uint64_t *)&unk_26AD74BD0);
    if (v216(v240, 1, v153) == 1)
    {
      sub_23613491C(v240, (uint64_t *)&unk_26AD74BD0);
      uint64_t v241 = 0;
    }
    else
    {
      uint64_t v241 = *(void *)(v240 + *(int *)(v153 + 20));
      sub_236184F00(v240, type metadata accessor for ReadingHistory.Streak);
    }
    uint64_t v242 = v153;
    uint64_t v244 = v292;
    uint64_t v243 = v293;
    uint64_t v245 = (uint64_t)v291;
    uint64_t v246 = v278;
    uint64_t v247 = v269;
    uint64_t v248 = v277;
    sub_2361348B8(v269, v277, (uint64_t *)&unk_26AD74BD0);
    uint64_t v154 = (int *)v302;
    uint64_t v249 = (uint64_t)v246 + *(int *)(v302 + 20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 + 56))(v249, 1, 1, v242);
    *uint64_t v246 = v241;
    sub_23615F1E4(v248, v249);
    uint64_t v250 = (char *)v246 + v154[6];
    uint64_t v251 = v295;
    *(void *)uint64_t v250 = v298;
    *((void *)v250 + 1) = v251;
    v250[16] = v304;
    *(void *)((char *)v246 + v154[7]) = v299;
    sub_236184E9C((uint64_t)v246, v243);
    swift_bridgeObjectRelease();
    sub_23613491C(v247, (uint64_t *)&unk_26AD74BD0);
    sub_236184F00(v272, type metadata accessor for ReadingHistory.Streak);
    sub_23613491C((uint64_t)v300, &qword_26AD74158);
    sub_23613491C(v245, &qword_26AD74158);
    sub_23613491C((uint64_t)v286, &qword_26AD74158);
    sub_23613491C(v273, (uint64_t *)&unk_26AD74BD0);
    uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v244 + 56);
    uint64_t v123 = v243;
    goto LABEL_38;
  }
  uint64_t v223 = v218;
  uint64_t v224 = v257;
  sub_2361348B8(v223, v257, (uint64_t *)&unk_26AD74BD0);
  unsigned int v225 = v216(v224, 1, v153);
  uint64_t v221 = v269;
  uint64_t v222 = (uint64_t)v265;
  if (v225 != 1)
  {
    sub_236182068((uint64_t)v301, v224, v269);
    sub_236184F00(v224, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_63;
  }
LABEL_79:
  __break(1u);
}