int main(int argc, const char **argv, const char **envp)
{
  id v3;

  qword_1000CBE88 = (uint64_t)[objc_allocWithZone((Class)type metadata accessor for ServiceDelegate()) init];
  v3 = [self serviceListener];
  qword_1000CBE90 = (uint64_t)v3;
  [v3 setDelegate:qword_1000CBE88];
  [v3 resume];
  return 0;
}

uint64_t type metadata accessor for ServiceDelegate()
{
  return self;
}

id sub_1000059A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServiceDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void type metadata accessor for CSUICurrentUserCKShareStatus(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

id sub_100005A04()
{
  return *v0;
}

uint64_t sub_100005A0C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_100005A14(uint64_t a1, uint64_t a2)
{
  return sub_100005B20(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100005A38(uint64_t a1, uint64_t a2)
{
  return sub_100005B20(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100005A58()
{
  sub_1000A4800();
  sub_1000A4840();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100005AAC()
{
  sub_1000A4800();
  sub_1000A4E10();
  sub_1000A4840();
  Swift::Int v0 = sub_1000A4E30();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100005B20(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1000A4800();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100005B64(uint64_t a1, id *a2)
{
  uint64_t result = sub_1000A47E0();
  *a2 = 0;
  return result;
}

uint64_t sub_100005BDC(uint64_t a1, id *a2)
{
  char v3 = sub_1000A47F0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100005C5C@<X0>(void *a1@<X8>)
{
  sub_1000A4800();
  NSString v2 = sub_1000A47C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100005CA0(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA0E0, type metadata accessor for BRError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100005D0C(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA0E0, type metadata accessor for BRError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100005D7C(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100005DE8(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA120, type metadata accessor for CKError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100005E54(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA120, type metadata accessor for CKError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100005EC0(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

void *sub_100005F2C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100005F3C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100005F48()
{
  return sub_1000A4800();
}

uint64_t sub_100005F58()
{
  sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);

  return sub_1000A4220();
}

uint64_t sub_100005FC4(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100006030(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000060C0()
{
  id v1 = *v0;
  uint64_t v2 = sub_1000A4B80();

  return v2;
}

uint64_t sub_1000060F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100006178()
{
  return sub_1000A4800();
}

uint64_t sub_100006188()
{
  sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);

  return sub_1000A4220();
}

uint64_t sub_1000061F4(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100006260(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000062F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000636C()
{
  return sub_1000A4E30();
}

uint64_t sub_1000063D0()
{
  uint64_t v0 = sub_1000A4800();
  uint64_t v2 = v1;
  if (v0 == sub_1000A4800() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1000A4D70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10000645C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_1000064E0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000064F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000657C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A4800();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000065A8(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA000, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_1000066F4(&qword_1000CA008, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100006664()
{
  return sub_1000066F4(&qword_1000C9FE8, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000066AC()
{
  return sub_1000066F4(&qword_1000C9FF0, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000066F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000673C()
{
  return sub_1000066F4(&qword_1000C9FF8, type metadata accessor for URLResourceKey);
}

void type metadata accessor for NSFileProviderServiceName(uint64_t a1)
{
}

void type metadata accessor for CSUIShareItemStatus(uint64_t a1)
{
}

__n128 sub_1000067AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000067BC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000067DC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CheckingType(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for BRError(uint64_t a1)
{
}

void type metadata accessor for ParticipantPermission(uint64_t a1)
{
}

uint64_t sub_100006868()
{
  return sub_1000066F4(&qword_1000CA0A8, type metadata accessor for BRError);
}

uint64_t sub_1000068B0()
{
  return sub_1000066F4(&qword_1000CA0B0, type metadata accessor for BRError);
}

uint64_t sub_1000068F8()
{
  return sub_1000066F4(&qword_1000CA0B8, type metadata accessor for CKError);
}

uint64_t sub_100006940()
{
  return sub_1000066F4(&qword_1000CA0C0, type metadata accessor for CKError);
}

uint64_t sub_100006988@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1000A47C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000069D0(uint64_t a1)
{
  uint64_t v2 = sub_1000066F4(&qword_1000CA158, type metadata accessor for NSFileProviderServiceName);
  uint64_t v3 = sub_1000066F4(&qword_1000CA160, type metadata accessor for NSFileProviderServiceName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100006A8C()
{
  return sub_1000066F4(&qword_1000CA0C8, type metadata accessor for NSFileProviderServiceName);
}

uint64_t sub_100006AD4()
{
  return sub_1000066F4(&qword_1000CA0D0, type metadata accessor for NSFileProviderServiceName);
}

uint64_t sub_100006B1C()
{
  return sub_1000066F4(&qword_1000CA0D8, type metadata accessor for NSFileProviderServiceName);
}

uint64_t sub_100006B64()
{
  return sub_1000066F4(&qword_1000CA0E0, type metadata accessor for BRError);
}

uint64_t sub_100006BAC()
{
  return sub_1000066F4(&qword_1000CA0E8, type metadata accessor for BRError);
}

uint64_t sub_100006BF4()
{
  return sub_1000066F4(&qword_1000CA0F0, type metadata accessor for BRError);
}

uint64_t sub_100006C3C()
{
  return sub_1000066F4(&qword_1000CA0F8, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_100006C98()
{
  return sub_1000066F4(&qword_1000CA100, _s3__C4CodeOMa_0);
}

unint64_t sub_100006CE4()
{
  unint64_t result = qword_1000CA108;
  if (!qword_1000CA108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA108);
  }
  return result;
}

uint64_t sub_100006D38()
{
  return sub_1000066F4(&qword_1000CA110, _s3__C4CodeOMa_0);
}

uint64_t sub_100006D80()
{
  return sub_1000066F4(&qword_1000CA118, type metadata accessor for BRError);
}

uint64_t sub_100006DC8()
{
  return sub_1000066F4(&qword_1000CA120, type metadata accessor for CKError);
}

uint64_t sub_100006E10()
{
  return sub_1000066F4(&qword_1000CA128, type metadata accessor for CKError);
}

uint64_t sub_100006E58()
{
  return sub_1000066F4(&qword_1000CA130, type metadata accessor for CKError);
}

uint64_t sub_100006EA0()
{
  return sub_1000066F4(&qword_1000CA138, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_100006EFC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100006F44()
{
  return sub_1000066F4(&qword_1000CA140, type metadata accessor for Code);
}

uint64_t sub_100006F8C()
{
  return sub_1000066F4(&qword_1000CA148, type metadata accessor for Code);
}

uint64_t sub_100006FD4()
{
  return sub_1000066F4(&qword_1000CA150, type metadata accessor for CKError);
}

uint64_t sub_100007038(uint64_t a1, char a2, uint64_t a3, void (*a4)(void, void *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    swift_errorRetain();
    v14 = (void *)sub_1000A4230();
    a4(0, v14);

    return sub_100008BFC(a1, 1);
  }
  else
  {
    swift_beginAccess();
    if (*(void *)(a3 + 16) || (swift_beginAccess(), *(void *)(a6 + 16)))
    {
      swift_errorRetain();
      v11 = (void *)sub_1000A4230();
      a4(0, v11);

      return swift_errorRelease();
    }
    else
    {
      return ((uint64_t (*)(uint64_t, void))a4)(a7, 0);
    }
  }
}

uint64_t sub_10000715C(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10 = (a4 >> 40) & 1;
  uint64_t v11 = sub_100008704(&qword_1000CA320);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_100008914(a3, v10, a7, (uint64_t)sub_100008754, v15);
  return swift_release();
}

uint64_t sub_1000072B8(void *a1, void *a2)
{
  if (!a1 || a2)
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD000000000000029;
    *(void *)(v5 + 8) = 0x80000001000AA060;
    *(void *)(v5 + 24) = 0;
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 16) = a2;
    *(unsigned char *)(v5 + 40) = 4;
    id v6 = a2;
    sub_100008704(&qword_1000CA320);
    return sub_1000A4960();
  }
  else
  {
    id v3 = a1;
    sub_100008704(&qword_1000CA320);
    return sub_1000A4970();
  }
}

void sub_100007378(uint64_t a1, void *a2, char a3, void (*a4)(id, id, void *, id))
{
  if (a3)
  {
    swift_errorRetain();
    id v7 = (id)sub_1000A4230();
    a4(0, 0, 0, v7);
  }
  else
  {
    id v8 = a2;
    id v9 = [v8 share];
    id v7 = [v8 containerID];
    id v10 = v8;
    a4(v9, v7, a2, 0);
    sub_100008FA0(a2, 0);
  }

  sub_100008FA0(a2, a3 & 1);
}

uint64_t sub_100007474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100008704(&qword_1000CA338);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_100008D04(a3, a4, (uint64_t)sub_100008C68, v11);
  return swift_release();
}

uint64_t sub_1000075C0(void *a1, void *a2, void *a3, void *a4)
{
  if (a1 && a2 && a3 && !a4)
  {
    id v7 = a1;
    id v8 = a2;
    id v9 = a3;
    sub_100008704(&qword_1000CA338);
    return sub_1000A4970();
  }
  else
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD00000000000002DLL;
    *(void *)(v11 + 8) = 0x80000001000AA0B0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 16) = a4;
    *(unsigned char *)(v11 + 40) = 5;
    id v12 = a4;
    sub_100008704(&qword_1000CA338);
    return sub_1000A4960();
  }
}

uint64_t sub_1000076A4(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t v9 = sub_100008704(&qword_1000CA368);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100008FAC(a3, a4, a5, (uint64_t)sub_100009928, v13);
  return swift_release();
}

uint64_t sub_100007800(void *a1)
{
  if (a1)
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD000000000000030;
    *(void *)(v2 + 8) = 0x80000001000AA140;
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 32) = 0;
    *(void *)(v2 + 16) = a1;
    *(unsigned char *)(v2 + 40) = 8;
    id v3 = a1;
    sub_100008704(&qword_1000CA368);
    return sub_1000A4960();
  }
  else
  {
    sub_100008704(&qword_1000CA368);
    return sub_1000A4970();
  }
}

uint64_t sub_1000078BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    swift_beginAccess();
    *(void *)(a4 + 16) = a2;
    swift_errorRetain();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100007924(uint64_t a1, char a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_errorRetain();
    unint64_t v12 = (void *)sub_1000A4230();
    a4();

    return sub_100008BFC(a1, 1);
  }
  else
  {
    swift_beginAccess();
    if (*(void *)(a3 + 16) || (swift_beginAccess(), *(void *)(a6 + 16)))
    {
      swift_errorRetain();
      uint64_t v9 = (void *)sub_1000A4230();
      a4();

      return swift_errorRelease();
    }
    else
    {
      return ((uint64_t (*)(void))a4)(0);
    }
  }
}

uint64_t sub_100007A30(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v3 = sub_1000A4460();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = sub_100008704(&qword_1000CA360);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return _swift_task_switch(sub_100007B34, 0, 0);
}

uint64_t sub_100007B34()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_100007C30;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000087D8;
  v0[13] = &unk_1000C2010;
  v0[14] = v3;
  [v2 fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100007C30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 192) = v2;
  if (v2)
  {
    uint64_t v3 = sub_100007FC0;
  }
  else
  {
    *(_DWORD *)(v1 + 200) = *(_DWORD *)(*(void *)(v1 + 168) + 48);
    uint64_t v3 = sub_100007D4C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100007D4C()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v0 + 200));
  uint64_t v5 = sub_1000A41B0();
  id v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(v3, v2, v5);
  uint64_t v7 = *v4;
  unint64_t v8 = v4[1];
  uint64_t v20 = v7;
  v6(v1, v3, v5);
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1000A4450();
  os_log_type_t v10 = sub_1000A4A40();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 152);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 160);
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 120) = sub_10003CFA4(v20, v8, &v21);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Username: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v18);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 144);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v16 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v16(v20, v8);
}

uint64_t sub_100007FC0()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100008054(uint64_t a1)
{
  v1[15] = a1;
  v1[16] = sub_100008704(&qword_1000CA360);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return _swift_task_switch(sub_1000080FC, 0, 0);
}

uint64_t sub_1000080FC()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (void *)v0[15];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_1000081F8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000087D8;
  v0[13] = &unk_1000C1FF8;
  v0[14] = v3;
  [v2 fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000081F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  if (v2)
  {
    uint64_t v3 = sub_100008430;
  }
  else
  {
    *(_DWORD *)(v1 + 160) = *(_DWORD *)(*(void *)(v1 + 128) + 48);
    uint64_t v3 = sub_100008314;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100008314()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(v0 + 160));
  uint64_t v4 = (void *)(v1 + *(int *)(*(void *)(v0 + 128) + 48));
  uint64_t v5 = sub_1000A41B0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v5);
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  *uint64_t v4 = v7;
  v4[1] = v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v9(v7, v8);
}

uint64_t sub_100008430()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000084B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v2 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10000856C()
{
  return type metadata accessor for CloudKitOperations();
}

uint64_t type metadata accessor for CloudKitOperations()
{
  uint64_t result = qword_1000CA210;
  if (!qword_1000CA210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000085C0()
{
  sub_100008660();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100008660()
{
  if (!qword_1000CA220)
  {
    sub_1000086BC(&qword_1000CA880);
    unint64_t v0 = sub_1000A4580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CA220);
    }
  }
}

uint64_t sub_1000086BC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100008704(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100008748()
{
  return sub_10000989C(&qword_1000CA320);
}

uint64_t sub_100008754(void *a1, void *a2)
{
  sub_100008704(&qword_1000CA320);

  return sub_1000072B8(a1, a2);
}

uint64_t sub_1000087D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_100008704(&qword_1000CA360);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_100008704(qword_1000CA3F0);
    uint64_t v10 = swift_allocError();
    void *v11 = a4;
    id v12 = a4;
    return _swift_continuation_throwingResumeWithError(v9, v10);
  }
  else
  {
    sub_1000A41A0();
    uint64_t v13 = (uint64_t *)&v8[*(int *)(v6 + 48)];
    *uint64_t v13 = sub_1000A4800();
    v13[1] = v14;
    sub_100009828((uint64_t)v8, *(void *)(*(void *)(v9 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

void sub_100008914(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_100008B20();
  sub_100008704(&qword_1000CA330);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A6400;
  *(void *)(v10 + 32) = a1;
  uint64_t v19 = (void *)v10;
  sub_1000A4920();
  id v11 = a1;
  v21.value._rawValue = v19;
  v21.is_nil = 0;
  v12.super.super.super.super.isa = sub_1000A4AD0(v21, v22).super.super.super.super.isa;
  [(objc_class *)v12.super.super.super.super.isa setQualityOfService:25];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  swift_retain();
  sub_1000A4AE0();
  swift_retain();
  sub_1000A4AF0();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v13;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = v14;
  v15[6] = v11;
  id v16 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A4AC0();
  uint64_t v17 = &selRef_privateCloudDatabase;
  if ((a2 & 1) == 0) {
    uint64_t v17 = &selRef_sharedCloudDatabase;
  }
  id v18 = [a3 *v17];
  [v18 addOperation:v12.super.super.super.super.isa];

  swift_release();
  swift_release();
}

unint64_t sub_100008B20()
{
  unint64_t result = qword_1000CA328;
  if (!qword_1000CA328)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CA328);
  }
  return result;
}

uint64_t sub_100008B60()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100008B98()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100008BE8(uint64_t a1, char a2)
{
  return sub_100007038(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void, void *))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_100008BFC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_100008C08()
{
  unint64_t result = qword_1000CA3E0;
  if (!qword_1000CA3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA3E0);
  }
  return result;
}

uint64_t sub_100008C5C()
{
  return sub_10000989C(&qword_1000CA338);
}

uint64_t sub_100008C68(void *a1, void *a2, void *a3, void *a4)
{
  sub_100008704(&qword_1000CA338);

  return sub_1000075C0(a1, a2, a3, a4);
}

void sub_100008D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v18 = [objc_allocWithZone((Class)CKContainer) initWithContainerSetupInfo:a2];
  }
  else
  {
    id v7 = objc_allocWithZone((Class)CKContainerID);
    NSString v8 = sub_1000A47C0();
    id v9 = [v7 initWithContainerIdentifier:v8 environment:1];

    id v18 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v9];
  }
  sub_100008704(&qword_1000CA340);
  uint64_t v10 = sub_1000A42E0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000A6410;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v13 + v12, a1, v10);
  id v14 = objc_allocWithZone((Class)CKFetchShareMetadataOperation);
  Class isa = sub_1000A4900().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithShareURLs:isa];

  [v16 setShouldFetchRootRecord:0];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  swift_retain();
  sub_1000A4B20();
  [v18 addOperation:v16];
}

uint64_t sub_100008F5C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100008F94(uint64_t a1, void *a2, char a3)
{
  sub_100007378(a1, a2, a3 & 1, *(void (**)(id, id, void *, id))(v3 + 16));
}

void sub_100008FA0(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

void sub_100008FAC(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_100008B20();
  sub_100008704(&qword_1000CA330);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A6400;
  *(void *)(v10 + 32) = [a1 recordID];
  sub_1000A4920();
  v18.is_nil = v10;
  v18.value._rawValue = _swiftEmptyArrayStorage;
  v11.super.super.super.super.Class isa = sub_1000A4AD0(v18, v19).super.super.super.super.isa;
  [(objc_class *)v11.super.super.super.super.isa setQualityOfService:25];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  swift_retain();
  sub_1000A4AE0();
  swift_retain();
  sub_1000A4AF0();
  id v14 = (void *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000A4AC0();
  uint64_t v15 = &selRef_privateCloudDatabase;
  if ((a2 & 1) == 0) {
    uint64_t v15 = &selRef_sharedCloudDatabase;
  }
  id v16 = [a3 *v15];
  [v16 addOperation:v11.super.super.super.super.isa];

  swift_release();
  swift_release();
}

uint64_t sub_1000091BC(uint64_t a1)
{
  v1[6] = a1;
  uint64_t v3 = sub_1000A41B0();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  v1[9] = v4;
  v1[10] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[11] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1000092D4;
  return sub_100007A30(v4, a1);
}

uint64_t sub_1000092D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v4[12] = a2;
  v4[13] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100009738;
  }
  else {
    uint64_t v5 = sub_1000093F0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000093F0()
{
  (*(void (**)(void, void, void))(v0[8] + 32))(v0[10], v0[9], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  void *v1 = v0;
  v1[1] = sub_10000949C;
  uint64_t v2 = v0[6];
  return sub_100008054(v2);
}

uint64_t sub_10000949C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1000097A4;
  }
  else
  {
    uint64_t v8 = v6[3];
    v6[16] = a2;
    v6[17] = a1;
    v6[18] = v8;
    uint64_t v7 = sub_1000095E0;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1000095E0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  v17._object = (void *)0x80000001000AA0E0;
  v17._countAndFlagsBits = 0xD000000000000017;
  if (sub_1000A48C0(v17))
  {
    uint64_t v1 = v2;
    uint64_t v3 = v4;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = self;
  Class v9 = sub_1000A4190();
  id v10 = [v8 localizedStringFromPersonNameComponents:v9 style:2 options:0];

  uint64_t v11 = sub_1000A4800();
  uint64_t v13 = v12;

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v14(v11, v13, v1, v3);
}

uint64_t sub_100009738()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000097A4()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100009828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CA360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100009890()
{
  return sub_10000989C(&qword_1000CA368);
}

uint64_t sub_10000989C(uint64_t *a1)
{
  uint64_t v2 = sub_100008704(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100009928(void *a1)
{
  sub_100008704(&qword_1000CA368);

  return sub_100007800(a1);
}

uint64_t sub_10000999C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000078BC(a1, a2, a3 & 1, v3);
}

uint64_t sub_1000099BC()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100009A04(uint64_t a1, char a2)
{
  return sub_100007924(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100009A18(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = sub_100008704(&qword_1000CA398);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = swift_task_alloc();
  *(void *)(v2 + 40) = swift_task_alloc();
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  uint64_t v6 = *(int *)(v4 + 48);
  *(_DWORD *)(v2 + 88) = v6;
  uint64_t v7 = v5 + v6;
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(v4 + 64);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100009B38;
  return sub_100019008(v7, a2);
}

uint64_t sub_100009B38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100009C38, 0, 0);
}

uint64_t sub_100009C38()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(int *)(v0 + 92);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v4 = *(void **)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = (uint64_t)v4 + *(int *)(v0 + 88);
  *uint64_t v4 = v1;
  *(void *)((char *)v4 + v3) = v2;
  uint64_t v8 = (uint64_t)v5 + *(int *)(v6 + 48);
  uint64_t v9 = *(int *)(v6 + 64);
  *uint64_t v5 = v1;
  sub_10000B690(v7, v8);
  *(void *)((char *)v5 + v9) = v2;
  if (v2)
  {
    uint64_t v10 = *(void **)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 56);
    id v12 = v10;
    sub_10000B988(v8, &qword_1000CA3B0);
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000010;
    *(void *)(v13 + 8) = 0x80000001000AA320;
    *(void *)(v13 + 24) = 0;
    *(void *)(v13 + 32) = 0;
    *(void *)(v13 + 16) = v10;
    *(unsigned char *)(v13 + 40) = 5;
    swift_willThrow();
    sub_10000B988(v11, &qword_1000CA398);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 72);
    Swift::String v17 = *(void ***)(v0 + 56);
    uint64_t v30 = *(int *)(v0 + 92);
    uint64_t v19 = *(void *)(v0 + 32);
    Swift::OpaquePointer_optional v18 = *(void **)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    uint64_t v22 = (uint64_t)v17 + *(int *)(v0 + 88);
    id v23 = v16;
    sub_10000B988(v8, &qword_1000CA3B0);
    uint64_t v24 = (uint64_t)v18 + *(int *)(v20 + 48);
    uint64_t v25 = *(int *)(v20 + 64);
    *Swift::OpaquePointer_optional v18 = v16;
    sub_10000B690(v22, v24);
    *(void *)((char *)v18 + v25) = 0;
    uint64_t v26 = v19 + *(int *)(v20 + 48);
    v27 = *v17;
    sub_10000B920(v22, v26);

    sub_10000B920(v26, v21);
    sub_10000B988(v24, &qword_1000CA3B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v29 = *(void *)(v0 + 72);
    return v28(v29);
  }
}

uint64_t sub_100009E94(char a1)
{
  if (a1 == 8) {
    return 0x6E776F6E6B6E752ELL;
  }
  if (a1 == 9) {
    return 0x6E656D75636F642ELL;
  }
  sub_1000A4C40(19);
  swift_bridgeObjectRelease();
  uint64_t v3 = 8 * a1;
  v4._countAndFlagsBits = *(void *)&aUnspeciNotes[v3];
  v4._object = *(void **)&aFied[v3];
  sub_1000A4880(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_1000A4880(v5);
  return 0xD000000000000010;
}

uint64_t sub_100009F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 49) = a6;
  *(unsigned char *)(v6 + 48) = a5;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return _swift_task_switch(sub_100009FB0, 0, 0);
}

uint64_t sub_100009FB0()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (uint64_t i = swift_bridgeObjectRetain(); v2; uint64_t i = *(void *)(v0 + 16))
  {
    uint64_t v4 = 0;
    uint64_t v19 = (const mach_header_64 *)((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
    unint64_t v5 = v1 & 0xC000000000000001;
    uint64_t v6 = i + 32;
    uint64_t v7 = *(void *)(v0 + 40);
    p_name = (char **)(&stru_1000C8FF8 + 8);
    while (1)
    {
      id v10 = v5 ? (id)sub_1000A4C60() : *(id *)(v6 + 8 * v4);
      unint64_t v1 = (unint64_t)v10;
      uint64_t v11 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (*(unsigned char *)(v0 + 49) == 1 && objc_msgSend(v10, p_name[172]) != (id)1)
      {
        uint64_t v12 = 1;
        switch(*(unsigned char *)(v0 + 36))
        {
          case 1:
            uint64_t v12 = 3;
            goto LABEL_16;
          case 2:
            uint64_t v12 = 2;
            goto LABEL_16;
          case 3:
            return sub_1000A4CD0();
          default:
LABEL_16:
            [(id)v1 setPermission:v12];
            uint64_t v13 = *(void *)(v7 + 16);
            if (!v13) {
              goto LABEL_33;
            }
            if (*(unsigned char *)(v7 + 32) != 1)
            {
              if (v13 == 1) {
                goto LABEL_34;
              }
LABEL_26:
              if (*(unsigned char *)(v0 + 48)) {
                goto LABEL_4;
              }
              goto LABEL_27;
            }
            if (v13 == 1) {
              goto LABEL_35;
            }
            if (*(unsigned char *)(v7 + 33) != 1 || v19 != &_mh_execute_header) {
              goto LABEL_26;
            }
            if (objc_msgSend((id)v1, p_name[172]) == (id)3
              || (char v14 = *(unsigned char *)(v0 + 48), v18 = [(id)v1 role], v15 = sub_1000A4AB0(), (v14 & 1) != 0)
              || v18 == (id)v15)
            {
LABEL_4:
              uint64_t v9 = sub_1000A4AB0();
              goto LABEL_5;
            }
LABEL_27:
            uint64_t v9 = 3;
LABEL_5:
            [(id)v1 setRole:v9];
            p_name = &stru_1000C8FF8.name;
            break;
        }
      }
      [*(id *)(v0 + 24) addParticipant:v1];

      ++v4;
      if (v11 == v2) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000A4CE0();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_10000A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 1036) = a6;
  *(void *)(v6 + 864) = a5;
  *(void *)(v6 + 856) = a4;
  *(void *)(v6 + 848) = a3;
  *(void *)(v6 + 840) = a2;
  *(void *)(v6 + 832) = a1;
  *(void *)(v6 + 872) = sub_100008704(&qword_1000CA3B0);
  *(void *)(v6 + 880) = swift_task_alloc();
  *(void *)(v6 + 888) = swift_task_alloc();
  *(void *)(v6 + 896) = swift_task_alloc();
  uint64_t v7 = sub_1000A4460();
  *(void *)(v6 + 904) = v7;
  *(void *)(v6 + 912) = *(void *)(v7 - 8);
  *(void *)(v6 + 920) = swift_task_alloc();
  *(void *)(v6 + 928) = swift_task_alloc();
  *(void *)(v6 + 936) = swift_task_alloc();
  *(void *)(v6 + 944) = swift_task_alloc();
  *(void *)(v6 + 952) = swift_task_alloc();
  return _swift_task_switch(sub_10000A3E0, 0, 0);
}

uint64_t sub_10000A3E0()
{
  uint64_t v70 = v0;
  unint64_t v1 = *(void **)(v0 + 840);
  uint64_t v2 = (NSString *)sub_1000A47C0();
  SEL v3 = NSSelectorFromString(v2);

  if ([v1 respondsToSelector:v3]) {
    unsigned int v4 = objc_msgSend(*(id *)(v0 + 840), "br_isCloudDocsShare");
  }
  else {
    unsigned int v4 = 0;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  unint64_t v5 = sub_1000A4450();
  os_log_type_t v6 = sub_1000A4A40();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 952);
  uint64_t v9 = *(void *)(v0 + 912);
  uint64_t v10 = *(void *)(v0 + 904);
  if (v7)
  {
    uint64_t v66 = *(void *)(v0 + 904);
    char v11 = *(unsigned char *)(v0 + 857);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = sub_100009E94(v11);
    *(void *)(v0 + 824) = sub_10003CFA4(v13, v14, &v69);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 1024;
    *(_DWORD *)(v0 + 1032) = v4;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare attr.sharingType: %s, isCloudDocsShare: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(v8, v66);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(v8, v10);
  }
  *(void *)(v0 + 960) = v15;
  if ((*(void *)(v0 + 856) & 0xFE00) == 0x800) {
    char v16 = 1;
  }
  else {
    char v16 = v4;
  }
  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + 896);
    id v18 = *(void **)(v0 + 840);
    uint64_t v19 = *(void *)(v0 + 832);
    sub_1000A4440();
    sub_10000B690(v19, v17);
    id v20 = v18;
    uint64_t v21 = sub_1000A4450();
    os_log_type_t v22 = sub_1000A4A40();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 928);
    uint64_t v25 = *(void *)(v0 + 904);
    uint64_t v26 = *(void *)(v0 + 896);
    if (v23)
    {
      uint64_t v68 = *(void *)(v0 + 928);
      uint64_t v27 = *(void *)(v0 + 888);
      v28 = *(void **)(v0 + 840);
      uint64_t v63 = *(void *)(v0 + 904);
      uint64_t v29 = swift_slowAlloc();
      v62 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      sub_10000B690(v26, v27);
      uint64_t v30 = sub_1000A4810();
      *(void *)(v0 + 776) = sub_10003CFA4(v30, v31, &v69);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10000B988(v26, &qword_1000CA3B0);
      *(_WORD *)(v29 + 12) = 2112;
      *(void *)(v0 + 784) = v28;
      id v32 = v28;
      sub_1000A4BC0();
      void *v62 = v28;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "saveShare performing CloudDocs (fileURL) operation \"%s\" -- %@", (uint8_t *)v29, 0x16u);
      sub_100008704(&qword_1000CAAF0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v15(v68, v63);
    }
    else
    {
      v42 = *(void **)(v0 + 840);
      sub_10000B988(*(void *)(v0 + 896), &qword_1000CA3B0);

      v15(v24, v25);
    }
    v43 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 1008) = v43;
    v43[1] = vextq_s8(*(int8x16_t *)(v0 + 832), *(int8x16_t *)(v0 + 832), 8uLL);
    sub_1000086BC(&qword_1000CA380);
    swift_asyncLet_begin();
    return _swift_asyncLet_get(v0 + 16, v0 + 696, sub_10000B134, v0 + 656);
  }
  else
  {
    v33 = *(void **)(v0 + 840);
    type metadata accessor for CloudKitOperations();
    v34 = (void *)swift_allocObject();
    *(void *)(v0 + 968) = v34;
    v34[2] = 0xD000000000000021;
    v34[3] = 0x80000001000AA210;
    v34[4] = 0xD000000000000016;
    v34[5] = 0x80000001000AA240;
    v34[6] = 0xD00000000000001DLL;
    v34[7] = 0x80000001000AA260;
    *(void *)(v0 + 712) = 0;
    *(void *)(v0 + 720) = 0;
    sub_100008704(&qword_1000CA880);
    sub_1000A4530();
    sub_1000A4440();
    id v35 = v33;
    v36 = sub_1000A4450();
    os_log_type_t v37 = sub_1000A4A40();
    BOOL v38 = os_log_type_enabled(v36, v37);
    v39 = *(void **)(v0 + 840);
    if (v38)
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v64 = (void *)swift_slowAlloc();
      *(_DWORD *)v40 = 138412290;
      *(void *)(v0 + 816) = v39;
      id v41 = v39;
      sub_1000A4BC0();
      void *v64 = v39;

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "saveShare performing CloudKit operation %@", v40, 0xCu);
      sub_100008704(&qword_1000CAAF0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v36 = *(NSObject **)(v0 + 840);
    }
    uint64_t v44 = *(void *)(v0 + 944);
    uint64_t v45 = *(void *)(v0 + 912);
    uint64_t v46 = *(void *)(v0 + 904);
    uint64_t v47 = *(void *)(v0 + 848);

    *(void *)(v0 + 976) = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v48 = ((uint64_t (*)(uint64_t, uint64_t))v15)(v44, v46);
    if (v47)
    {
      char v67 = *(unsigned char *)(v0 + 1036);
      uint64_t v65 = *(void *)(v0 + 864);
      uint64_t v56 = *(void *)(v0 + 856);
      uint64_t v57 = *(void *)(v0 + 848);
      uint64_t v58 = *(void *)(v0 + 840);
      uint64_t v59 = swift_task_alloc();
      *(void *)(v0 + 984) = v59;
      *(void *)(v59 + 16) = v34;
      *(void *)(v59 + 24) = v58;
      *(_WORD *)(v59 + 32) = v56;
      *(unsigned char *)(v59 + 34) = BYTE2(v56);
      *(unsigned char *)(v59 + 35) = BYTE3(v56);
      *(unsigned char *)(v59 + 36) = BYTE4(v56);
      *(unsigned char *)(v59 + 37) = BYTE5(v56) & 1;
      *(unsigned char *)(v59 + 38) = BYTE6(v56) & 1;
      *(void *)(v59 + 40) = v65;
      *(unsigned char *)(v59 + 48) = v67;
      *(void *)(v59 + 56) = v57;
      v60 = (void *)swift_task_alloc();
      *(void *)(v0 + 992) = v60;
      unint64_t v55 = sub_10000B8E0();
      void *v60 = v0;
      v60[1] = sub_10000AC68;
      unint64_t v51 = 0xD000000000000029;
      unint64_t v52 = 0x80000001000AA060;
      v53 = sub_10000B898;
      uint64_t v48 = v0 + 800;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v54 = v59;
    }
    else
    {
      __break(1u);
    }
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v48, v49, v50, v51, v52, v53, v54, v55);
  }
}

uint64_t sub_10000AC68()
{
  *(void *)(*(void *)v1 + 1000) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10000AD84;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10000AEFC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000AD84()
{
  uint64_t v1 = *(void *)(v0 + 968);
  swift_task_dealloc();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10000AEFC()
{
  uint64_t v1 = *(void **)(v0 + 840);
  uint64_t v2 = *(void *)(v0 + 800);
  sub_1000A4440();
  id v3 = v1;
  uint64_t v4 = sub_1000A4450();
  os_log_type_t v5 = sub_1000A4A40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 840);
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 138412290;
    *(void *)(v0 + 808) = v6;
    id v9 = v6;
    sub_1000A4BC0();
    *uint64_t v8 = v6;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "saveShare completed CloudKit operation %@", v7, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 840);
  }
  swift_release();

  (*(void (**)(void, void))(v0 + 960))(*(void *)(v0 + 936), *(void *)(v0 + 904));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v2);
}

uint64_t sub_10000B134()
{
  uint64_t v1 = (void *)v0[87];
  v0[127] = v1;
  uint64_t v2 = (void *)v0[88];
  v0[128] = v2;
  id v3 = v2;
  id v4 = v1;
  return _swift_asyncLet_finish(v0 + 2, v0 + 87, sub_10000B1C4, v0 + 92);
}

uint64_t sub_10000B1C4()
{
  return _swift_task_switch(sub_10000B1E0, 0, 0);
}

uint64_t sub_10000B1E0()
{
  unint64_t v31 = v0;
  uint64_t v1 = v0[110];
  uint64_t v2 = (void *)v0[105];
  uint64_t v3 = v0[104];
  swift_task_dealloc();
  sub_1000A4440();
  sub_10000B690(v3, v1);
  id v4 = v2;
  os_log_type_t v5 = sub_1000A4450();
  os_log_type_t v6 = sub_1000A4A40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v28 = v0[115];
    uint64_t v29 = (void (*)(uint64_t, uint64_t))v0[120];
    uint64_t v27 = v0[113];
    uint64_t v7 = v0[111];
    uint64_t v8 = v0[110];
    id v9 = (void *)v0[105];
    uint64_t v10 = swift_slowAlloc();
    char v11 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_10000B690(v8, v7);
    uint64_t v12 = sub_1000A4810();
    v0[99] = sub_10003CFA4(v12, v13, &v30);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    sub_10000B988(v8, &qword_1000CA3B0);
    *(_WORD *)(v10 + 12) = 2112;
    v0[91] = v9;
    id v14 = v9;
    sub_1000A4BC0();
    void *v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare completed CloudDocs (fileURL) operation \"%s\" -- %@", (uint8_t *)v10, 0x16u);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v29(v28, v27);
  }
  else
  {
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[120];
    uint64_t v16 = v0[115];
    uint64_t v17 = v0[113];
    id v18 = (void *)v0[105];
    sub_10000B988(v0[110], &qword_1000CA3B0);

    v15(v16, v17);
  }
  uint64_t v19 = (void *)v0[128];
  id v20 = (void *)v0[127];
  if (v19)
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000032;
    *(void *)(v21 + 8) = 0x80000001000AA1A0;
    *(void *)(v21 + 24) = 0;
    *(void *)(v21 + 32) = 0;
    *(void *)(v21 + 16) = v19;
    *(unsigned char *)(v21 + 40) = 4;
    id v22 = v19;
    swift_willThrow();

LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  if (!v20)
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v26 = 0xD000000000000032;
    *(void *)(v26 + 8) = 0x80000001000AA1A0;
    *(_OWORD *)(v26 + 16) = xmmword_1000A6490;
    *(void *)(v26 + 32) = 0x80000001000AA1E0;
    *(unsigned char *)(v26 + 40) = 11;
    swift_willThrow();
    goto LABEL_6;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void *))v0[1];
  return v25(v20);
}

uint64_t sub_10000B690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000B6F8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *os_log_type_t v6 = v2;
  v6[1] = sub_10000B7A4;
  return sub_1000193A4(a1, v5, v4);
}

uint64_t sub_10000B7A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000B898(uint64_t a1)
{
  uint64_t v2 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 37)) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000000000;
  if (!*(unsigned char *)(v1 + 38)) {
    uint64_t v3 = 0;
  }
  return sub_10000715C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned int *)(v1 + 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 36) << 32) | v2 | v3, *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void **)(v1 + 56));
}

unint64_t sub_10000B8E0()
{
  unint64_t result = qword_1000CAB30;
  if (!qword_1000CAB30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CAB30);
  }
  return result;
}

uint64_t sub_10000B920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000B988(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100008704(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000B9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_1000A4460();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_1000A42E0();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_10000BB34, 0, 0);
}

uint64_t sub_10000BB34()
{
  if ((*(void *)(v0 + 64) & 0xFE00) != 0x800)
  {
    uint64_t v7 = *(void *)(v0 + 56);
    type metadata accessor for CloudKitOperations();
    uint64_t v8 = (void *)swift_allocObject();
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 128) = v8;
    v8[2] = 0xD000000000000021;
    v8[3] = 0x80000001000AA210;
    v8[4] = 0xD000000000000016;
    v8[5] = 0x80000001000AA240;
    v8[6] = 0xD00000000000001DLL;
    v8[7] = 0x80000001000AA260;
    *(void *)(v0 + 24) = 0;
    sub_100008704(&qword_1000CA880);
    id v9 = (void *)sub_1000A4530();
    if (!v7)
    {
      __break(1u);
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v10, v11, v12, v13, v14, v15, v16);
    }
    char v17 = *(unsigned char *)(v0 + 69);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v20 = swift_task_alloc();
    *(void *)(v0 + 136) = v20;
    *(void *)(v20 + 16) = v8;
    *(void *)(v20 + 24) = v19;
    *(unsigned char *)(v20 + 32) = v17 & 1;
    *(void *)(v20 + 40) = v18;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_10000BEDC;
    unint64_t v12 = 0xD000000000000030;
    unint64_t v13 = 0x80000001000AA140;
    uint64_t v16 = (char *)&type metadata for Bool;
    id v14 = sub_10000C668;
    id v9 = (void *)(v0 + 184);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = v20;
LABEL_9:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v10, v11, v12, v13, v14, v15, v16);
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_10000B690(*(void *)(v0 + 40), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 112) + 32))(v22, *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v24 = swift_task_alloc();
    *(void *)(v0 + 160) = v24;
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v9;
    *id v9 = v0;
    v9[1] = sub_10000C234;
    unint64_t v12 = 0xD00000000000001ELL;
    uint64_t v16 = (char *)&type metadata for () + 8;
    unint64_t v13 = 0x80000001000AA3B0;
    id v14 = sub_10000C660;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = v24;
    goto LABEL_9;
  }
  sub_10000B988(*(void *)(v0 + 96), &qword_1000CA3B0);
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v4 = 0xD000000000000034;
  *(void *)(v4 + 8) = 0x80000001000AA340;
  *(_OWORD *)(v4 + 16) = xmmword_1000A64A0;
  *(void *)(v4 + 32) = 0x80000001000AA380;
  *(unsigned char *)(v4 + 40) = 11;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10000BEDC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10000C110;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10000BFF8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000BFF8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10000C110()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_task_dealloc();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10000C234()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10000C3E0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10000C350;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000C350()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10000C3E0()
{
  swift_task_dealloc();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v5;
    sub_1000A4BC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "stopSharing failed with error: %@", v3, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[13];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  uint64_t v9 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000034;
  *(void *)(v10 + 8) = 0x80000001000AA340;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 8;
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void sub_10000C660(uint64_t a1)
{
  sub_10001B9DC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10000C668(uint64_t a1)
{
  return sub_1000076A4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10000C678()
{
  v1[59] = v0;
  sub_100008704(&qword_1000CA3B0);
  v1[60] = swift_task_alloc();
  uint64_t v2 = sub_1000A42E0();
  v1[61] = v2;
  v1[62] = *(void *)(v2 - 8);
  v1[63] = swift_task_alloc();
  sub_1000A4990();
  v1[64] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[65] = v4;
  v1[66] = v3;
  return _swift_task_switch(sub_10000C7A0, v4, v3);
}

uint64_t sub_10000C7A0()
{
  uint64_t v1 = v0[61];
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[60];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[60];
    swift_release();
    sub_10000E36C(v4);
    sub_100008C08();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_1000A6550;
    *(_OWORD *)(v5 + 16) = xmmword_1000A6560;
    *(void *)(v5 + 32) = 0x80000001000AA4F0;
    *(unsigned char *)(v5 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[62] + 32))(v0[63], v0[60], v0[61]);
    id v8 = [objc_allocWithZone((Class)LPiCloudSharingMetadata) init];
    v0[67] = v8;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if (v0[56])
    {
      NSString v9 = sub_1000A47C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    [v8 setApplicationBundleIdenfier:v9];

    sub_10000E3CC();
    NSString v10 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    [v8 setApplication:v10];

    sub_10000D564();
    NSString v11 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    [v8 setTitle:v11];

    unint64_t v12 = sub_10000D7F4();
    [v8 setIcon:v12];

    id v13 = [objc_allocWithZone((Class)LPLinkMetadata) init];
    v0[68] = v13;
    sub_1000A4270(v14);
    uint64_t v16 = v15;
    [v13 setURL:v15];

    [v13 setSpecialization:v8];
    id v17 = objc_allocWithZone((Class)LPLinkHTMLTextGenerator);
    sub_1000A4270(v18);
    uint64_t v20 = v19;
    id v21 = [v17 initWithURL:v19];
    v0[69] = v21;

    [v21 setMetadata:v13];
    v0[2] = v0;
    v0[7] = v0 + 57;
    v0[3] = sub_10000CBE4;
    uint64_t v22 = swift_continuation_init();
    v0[50] = _NSConcreteStackBlock;
    v0[51] = 0x40000000;
    v0[52] = sub_10000DDD4;
    v0[53] = &unk_1000C2078;
    v0[54] = v22;
    [v21 generateHTMLFragmentString:v0 + 50];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_10000CBE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 560) = v2;
  uint64_t v3 = *(void *)(v1 + 528);
  uint64_t v4 = *(void *)(v1 + 520);
  if (v2) {
    uint64_t v5 = sub_10000D498;
  }
  else {
    uint64_t v5 = sub_10000CD14;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10000CD14()
{
  v84 = (void *)v0[69];
  v85 = (void *)v0[68];
  uint64_t v86 = v0[62];
  v87 = (void *)v0[67];
  uint64_t v88 = v0[61];
  uint64_t v89 = v0[63];
  swift_release();
  uint64_t v82 = v0[58];
  uint64_t v83 = v0[57];
  sub_100008704(&qword_1000CA3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6570;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v2 = self;
  uint64_t v3 = (objc_class *)[v2 mainBundle];
  v70._countAndFlagsBits = 0x80000001000AA570;
  v91._object = (void *)0x80000001000AA540;
  v91._countAndFlagsBits = 0xD00000000000002FLL;
  v103.value._countAndFlagsBits = 0;
  v103.value._object = 0;
  v4.super.Class isa = v3;
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  uint64_t v5 = sub_1000A4100(v91, v103, v4, v115, v70);
  uint64_t v7 = v6;

  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v7;
  *(unsigned char *)(inited + 56) = 8;
  id v8 = (objc_class *)[v2 mainBundle];
  v92._countAndFlagsBits = 0xD000000000000031;
  v71._object = (void *)0xD000000000000031;
  v71._countAndFlagsBits = 0x80000001000AA5F0;
  v92._object = (void *)0x80000001000AA5B0;
  v104.value._countAndFlagsBits = 0;
  v104.value._object = 0;
  v9.super.Class isa = v8;
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  uint64_t v10 = sub_1000A4100(v92, v104, v9, v116, v71);
  uint64_t v12 = v11;

  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v12;
  *(unsigned char *)(inited + 80) = 9;
  id v13 = (objc_class *)[v2 mainBundle];
  v72._countAndFlagsBits = 0x80000001000AA660;
  v93._object = (void *)0x80000001000AA630;
  v93._countAndFlagsBits = 0xD00000000000002FLL;
  v105.value._countAndFlagsBits = 0;
  v105.value._object = 0;
  v14.super.Class isa = v13;
  v117._countAndFlagsBits = 0;
  v117._object = (void *)0xE000000000000000;
  uint64_t v15 = sub_1000A4100(v93, v105, v14, v117, v72);
  uint64_t v17 = v16;

  *(void *)(inited + 88) = v15;
  *(void *)(inited + 96) = v17;
  *(unsigned char *)(inited + 104) = 11;
  uint64_t v18 = (objc_class *)[v2 mainBundle];
  v73._countAndFlagsBits = 0x80000001000AA6E0;
  v94._object = (void *)0x80000001000AA6A0;
  v94._countAndFlagsBits = 0xD000000000000030;
  v106.value._countAndFlagsBits = 0;
  v106.value._object = 0;
  v19.super.Class isa = v18;
  v118._countAndFlagsBits = 0;
  v118._object = (void *)0xE000000000000000;
  uint64_t v20 = sub_1000A4100(v94, v106, v19, v118, v73);
  uint64_t v22 = v21;

  *(void *)(inited + 112) = v20;
  *(void *)(inited + 120) = v22;
  *(unsigned char *)(inited + 128) = 0;
  uint64_t v23 = (objc_class *)[v2 mainBundle];
  v74._countAndFlagsBits = 0x80000001000AA5F0;
  v95._countAndFlagsBits = (uint64_t)v74._object;
  v95._object = (void *)0x80000001000AA5B0;
  v107.value._countAndFlagsBits = 0;
  v107.value._object = 0;
  v24.super.Class isa = v23;
  v119._countAndFlagsBits = 0;
  v119._object = (void *)0xE000000000000000;
  uint64_t v25 = sub_1000A4100(v95, v107, v24, v119, v74);
  uint64_t v27 = v26;

  *(void *)(inited + 136) = v25;
  *(void *)(inited + 144) = v27;
  *(unsigned char *)(inited + 152) = 1;
  uint64_t v28 = (objc_class *)[v2 mainBundle];
  v96._countAndFlagsBits = 0xD000000000000033;
  v75._countAndFlagsBits = 0x80000001000AA760;
  v96._object = (void *)0x80000001000AA720;
  v108.value._countAndFlagsBits = 0;
  v108.value._object = 0;
  v29.super.Class isa = v28;
  v120._countAndFlagsBits = 0;
  v120._object = (void *)0xE000000000000000;
  uint64_t v30 = sub_1000A4100(v96, v108, v29, v120, v75);
  uint64_t v32 = v31;

  *(void *)(inited + 160) = v30;
  *(void *)(inited + 168) = v32;
  *(unsigned char *)(inited + 176) = 2;
  v33 = (objc_class *)[v2 mainBundle];
  v97._countAndFlagsBits = 0xD000000000000036;
  v76._countAndFlagsBits = 0x80000001000AA7F0;
  v97._object = (void *)0x80000001000AA7B0;
  v109.value._countAndFlagsBits = 0;
  v109.value._object = 0;
  v34.super.Class isa = v33;
  v121._countAndFlagsBits = 0;
  v121._object = (void *)0xE000000000000000;
  uint64_t v35 = sub_1000A4100(v97, v109, v34, v121, v76);
  uint64_t v37 = v36;

  *(void *)(inited + 184) = v35;
  *(void *)(inited + 192) = v37;
  *(unsigned char *)(inited + 200) = 3;
  BOOL v38 = (objc_class *)[v2 mainBundle];
  v98._countAndFlagsBits = 0xD000000000000037;
  v77._countAndFlagsBits = 0x80000001000AA880;
  v98._object = (void *)0x80000001000AA840;
  v110.value._countAndFlagsBits = 0;
  v110.value._object = 0;
  v39.super.Class isa = v38;
  v122._countAndFlagsBits = 0;
  v122._object = (void *)0xE000000000000000;
  uint64_t v40 = sub_1000A4100(v98, v110, v39, v122, v77);
  uint64_t v42 = v41;

  *(void *)(inited + 208) = v40;
  *(void *)(inited + 216) = v42;
  *(unsigned char *)(inited + 224) = 4;
  v43 = (objc_class *)[v2 mainBundle];
  v78._countAndFlagsBits = 0x80000001000AA910;
  v99._object = (void *)0x80000001000AA8D0;
  v99._countAndFlagsBits = 0xD000000000000030;
  v111.value._countAndFlagsBits = 0;
  v111.value._object = 0;
  v44.super.Class isa = v43;
  v123._countAndFlagsBits = 0;
  v123._object = (void *)0xE000000000000000;
  uint64_t v45 = sub_1000A4100(v99, v111, v44, v123, v78);
  uint64_t v47 = v46;

  *(void *)(inited + 232) = v45;
  *(void *)(inited + 240) = v47;
  *(unsigned char *)(inited + 248) = 5;
  uint64_t v48 = (objc_class *)[v2 mainBundle];
  v79._countAndFlagsBits = 0x80000001000AA990;
  v100._object = (void *)0x80000001000AA950;
  v100._countAndFlagsBits = 0xD000000000000030;
  v112.value._countAndFlagsBits = 0;
  v112.value._object = 0;
  v49.super.Class isa = v48;
  v124._countAndFlagsBits = 0;
  v124._object = (void *)0xE000000000000000;
  uint64_t v50 = sub_1000A4100(v100, v112, v49, v124, v79);
  uint64_t v52 = v51;

  *(void *)(inited + 256) = v50;
  *(void *)(inited + 264) = v52;
  *(unsigned char *)(inited + 272) = 6;
  v53 = (objc_class *)[v2 mainBundle];
  v101._countAndFlagsBits = 0xD00000000000002ELL;
  v80._countAndFlagsBits = 0x80000001000AAA00;
  v101._object = (void *)0x80000001000AA9D0;
  v113.value._countAndFlagsBits = 0;
  v113.value._object = 0;
  v54.super.Class isa = v53;
  v125._countAndFlagsBits = 0;
  v125._object = (void *)0xE000000000000000;
  uint64_t v55 = sub_1000A4100(v101, v113, v54, v125, v80);
  uint64_t v57 = v56;

  *(void *)(inited + 280) = v55;
  *(void *)(inited + 288) = v57;
  *(unsigned char *)(inited + 296) = 13;
  uint64_t v58 = (objc_class *)[v2 mainBundle];
  v102._countAndFlagsBits = 0xD000000000000017;
  v81._countAndFlagsBits = 0x80000001000AAA60;
  v102._object = (void *)0x80000001000AAA40;
  v114.value._countAndFlagsBits = 0;
  v114.value._object = 0;
  v59.super.Class isa = v58;
  v126._countAndFlagsBits = 0;
  v126._object = (void *)0xE000000000000000;
  uint64_t v60 = sub_1000A4100(v102, v114, v59, v126, v81);
  uint64_t v62 = v61;

  *(void *)(inited + 304) = v60;
  *(void *)(inited + 312) = v62;
  unint64_t v63 = sub_10001FDE0(inited);
  sub_10002014C(v63);
  swift_bridgeObjectRelease();
  sub_100008704(&qword_1000CA3B8);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1000A6410;
  *(void *)(v64 + 56) = &type metadata for String;
  *(void *)(v64 + 64) = sub_10000E310();
  *(void *)(v64 + 32) = v83;
  *(void *)(v64 + 40) = v82;
  uint64_t v65 = sub_1000A47D0();
  uint64_t v67 = v66;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v89, v88);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v68(v65, v67);
}

uint64_t sub_10000D498()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = (void *)v0[68];
  uint64_t v3 = (void *)v0[67];
  uint64_t v4 = v0[63];
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[62];
  swift_release();
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10000D564()
{
  uint64_t v0 = sub_1000A42E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v14;
  if (v14)
  {
    sub_1000A4B40();
    uint64_t v8 = sub_1000A4B60();
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v15 = v8;
      sub_100008704(&qword_1000CA3D0);
      if (swift_dynamicCast())
      {
        uint64_t v9 = (uint64_t)v14;

        return v9;
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
  {
    sub_10000E36C((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
    sub_10000E36C((uint64_t)v6);
    uint64_t v9 = sub_100020718();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (v11) {
      return v9;
    }
  }
  return 0;
}

char *sub_10000D7F4()
{
  uint64_t v0 = sub_1000A4460();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v35 - v5;
  uint64_t v7 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (v36)
  {
    NSString v10 = sub_1000A47C0();
    id v11 = [self imageNamed:v10];

    id v12 = objc_allocWithZone((Class)LPImageProperties);
    id v13 = v11;
    id v14 = [v12 init];
    unint64_t result = (char *)[v14 setType:5];
    if (v13)
    {
      id v16 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v13 properties:v14];

LABEL_25:
      return (char *)v16;
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v17 = sub_1000A42E0();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v9, 1, v17);
  sub_10000E36C((uint64_t)v9);
  if (v18 == 1) {
    goto LABEL_11;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000A4440();
    uint64_t v20 = sub_1000A4450();
    os_log_type_t v21 = sub_1000A4A40();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "ext computed property--extensionController is nil--will assert", v22, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v23 = *(void **)&result[OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appIcon];
    id v14 = v23;
    swift_unknownObjectRelease();
    if (v23) {
      goto LABEL_24;
    }
LABEL_11:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    if (v35)
    {
      id v24 = v35;
      sub_1000A4B30();
      uint64_t v25 = sub_1000A4B60();

      swift_bridgeObjectRelease();
      if (v25)
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRetain();
          uint64_t v26 = sub_1000A4300();
          unint64_t v28 = v27;
          swift_unknownObjectRelease();
          id v29 = objc_allocWithZone((Class)UIImage);
          Class isa = sub_1000A42F0().super.isa;
          id v14 = [v29 initWithData:isa];
          sub_10000E60C(v26, v28);
          swift_unknownObjectRelease();

          if (!v14) {
            return 0;
          }
          goto LABEL_24;
        }
        swift_unknownObjectRelease();
      }
    }
    uint64_t v31 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v31)
    {
      sub_1000A4440();
      uint64_t v32 = sub_1000A4450();
      os_log_type_t v33 = sub_1000A4A40();
      if (os_log_type_enabled(v32, v33))
      {
        NSBundle v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSBundle v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "ext computed property--extensionController is nil--will assert", v34, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
    unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
    if (!result) {
      goto LABEL_29;
    }
    id v16 = *(id *)&result[OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appIcon];
    id v14 = v16;
    swift_unknownObjectRelease();
    if (!v16) {
      return (char *)v16;
    }
LABEL_24:
    id v16 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v14];
    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10000DDD4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100008704(qword_1000CA3F0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v8 = sub_1000A4800();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10000DE90(char a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D564();
  unint64_t v11 = v10;
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10000E36C((uint64_t)v4);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v21 = sub_10000E3CC();
      unint64_t v23 = v22;
      uint64_t v24 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
      }
      if (v24)
      {
        uint64_t v25 = v21;
        uint64_t v26 = (objc_class *)[self mainBundle];
        v30._countAndFlagsBits = 0x80000001000AA470;
        v32._countAndFlagsBits = 0x6620646572616853;
        v32._object = (void *)0xEE004025206D6F72;
        v33.value._countAndFlagsBits = 0;
        v33.value._object = 0;
        v27.super.Class isa = v26;
        v34._countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        sub_1000A4100(v32, v33, v27, v34, v30);

        sub_100008704(&qword_1000CA3B8);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1000A6410;
        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = sub_10000E310();
        *(void *)(v28 + 32) = v25;
        *(void *)(v28 + 40) = v23;
        uint64_t v20 = sub_1000A47D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return v20;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  uint64_t v13 = v9;
  id v14 = (objc_class *)[self mainBundle];
  if (a1)
  {
    v30._countAndFlagsBits = 0x80000001000AA440;
    v15._object = (void *)0x80000001000AA420;
    v15._countAndFlagsBits = 0xD000000000000014;
    v16.value._countAndFlagsBits = 0;
    v16.value._object = 0;
    v17.super.Class isa = v14;
    v18._countAndFlagsBits = 16421;
    v18._object = (void *)0xE200000000000000;
  }
  else
  {
    v30._countAndFlagsBits = 0x80000001000AA3F0;
    v15._object = (void *)0x80000001000AA3D0;
    v15._countAndFlagsBits = 0x1000000000000019;
    v16.value._countAndFlagsBits = 0;
    v16.value._object = 0;
    v17.super.Class isa = v14;
    v18._countAndFlagsBits = 0x9D80E240259C80E2;
    v18._object = (void *)0xA800000000000000;
  }
  sub_1000A4100(v15, v16, v17, v18, v30);

  sub_100008704(&qword_1000CA3B8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000A6410;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_10000E310();
  *(void *)(v19 + 32) = v13;
  *(void *)(v19 + 40) = v11;
  uint64_t v20 = sub_1000A47D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_10000E310()
{
  unint64_t result = qword_1000CA3C0;
  if (!qword_1000CA3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA3C0);
  }
  return result;
}

uint64_t sub_10000E36C(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000E3CC()
{
  sub_1000A42C0();
  sub_10000E598();
  uint64_t v0 = sub_1000A4BE0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 16) <= 1uLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = 0;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1000A4BF0();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v1 != 0x726464756F6C6349 || v3 != 0xEB00000000657669)
  {
LABEL_3:
    if ((sub_1000A4D70() & 1) == 0) {
      return v1;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = (objc_class *)[self mainBundle];
  v7._countAndFlagsBits = 0x80000001000AA4A0;
  v8._countAndFlagsBits = 0x442064756F6C4369;
  v8._object = (void *)0xEC00000065766972;
  v9.value._countAndFlagsBits = 0;
  v9.value._object = 0;
  v5.super.Class isa = v4;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  uint64_t v1 = sub_1000A4100(v8, v9, v5, v10, v7);

  return v1;
}

unint64_t sub_10000E598()
{
  unint64_t result = qword_1000CA3C8;
  if (!qword_1000CA3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA3C8);
  }
  return result;
}

uint64_t sub_10000E60C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

_WORD *sub_10000E664()
{
  uint64_t v1 = sub_1000A4460();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v96 = v1;
  uint64_t v97 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  Swift::String v94 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v92 = (char *)&v87 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v93 = (char *)&v87 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (uint8_t *)&v87 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (void (*)(char *, uint64_t))((char *)&v87 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  NSBundle v17 = (char *)&v87 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v87 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v87 - v21;
  uint64_t v95 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  KeyPath = v101;
  if (v101) {
    return KeyPath;
  }
  uint64_t v90 = v14;
  Swift::String v91 = v20;
  uint64_t v88 = v11;
  id v89 = v17;
  BOOL v100 = 1;
  sub_1000A4440();
  uint64_t v24 = sub_1000A4450();
  os_log_type_t v25 = sub_1000A4A40();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "configuredContainer needsBundleIDOverride initially true", v26, 2u);
    swift_slowDealloc();
  }

  uint64_t v28 = v97 + 8;
  NSBundle v27 = *(void (**)(char *, uint64_t))(v97 + 8);
  id v29 = v22;
  uint64_t v30 = v96;
  v27(v29, v96);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v31 = v101;
  if (v101)
  {
    Swift::String v32 = v91;
    sub_1000A4440();
    KeyPath = v31;
    Swift::String_optional v33 = sub_1000A4450();
    os_log_type_t v34 = sub_1000A4A40();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      id v89 = KeyPath;
      char v36 = (uint8_t *)v35;
      Swift::String v101 = (_WORD *)swift_slowAlloc();
      *(_DWORD *)char v36 = 136315138;
      uint64_t v88 = v36 + 4;
      id v37 = v89;
      uint64_t v97 = v28;
      uint64_t v90 = v27;
      id v38 = v37;
      id v39 = [v37 description];
      uint64_t v40 = sub_1000A4800();
      unint64_t v42 = v41;

      Swift::String_optional v103 = (_WORD *)sub_10003CFA4(v40, v42, (uint64_t *)&v101);
      sub_1000A4BC0();

      NSBundle v27 = v90;
      uint64_t v28 = v97;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "configuredContainer using setupInfo: %s", v36, 0xCu);
      swift_arrayDestroy();
      uint64_t v30 = v96;
      swift_slowDealloc();
      KeyPath = v89;
      swift_slowDealloc();

      v43 = v91;
    }
    else
    {

      v43 = v32;
    }
    v27(v43, v30);
    uint64_t v50 = v98;
    id v51 = [KeyPath containerOptions];
    id v52 = [v51 applicationBundleIdentifierOverrideForContainerAccess];

    if (v52) {
    BOOL v100 = v52 == 0;
    }
  }
  else
  {
    swift_getKeyPath();
    KeyPath = (_WORD *)swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    NSBundle v44 = v101;
    if (v101)
    {
      uint64_t v45 = v28;
      KeyPath = v89;
      sub_1000A4440();
      uint64_t v46 = v44;
      uint64_t v47 = sub_1000A4450();
      os_log_type_t v48 = sub_1000A4A40();
      if (os_log_type_enabled(v47, v48))
      {
        NSBundle v49 = (uint8_t *)swift_slowAlloc();
        Swift::String v91 = (char *)swift_slowAlloc();
        uint64_t v97 = v45;
        uint64_t v90 = v27;
        *(_DWORD *)NSBundle v49 = 138412290;
        Swift::String v101 = v46;
        uint64_t v46 = v46;
        uint64_t v30 = v96;
        uint64_t v45 = v97;
        sub_1000A4BC0();
        *(void *)Swift::String v91 = v44;

        _os_log_impl((void *)&_mh_execute_header, v47, v48, "configuredContainer with id: %@", v49, 0xCu);
        sub_100008704(&qword_1000CAAF0);
        NSBundle v27 = v90;
        swift_arrayDestroy();
        swift_slowDealloc();
        KeyPath = v89;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v47 = v46;
      }
      uint64_t v50 = v98;

      v27((char *)KeyPath, v30);
      uint64_t v28 = v45;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (v101 != 9)
      {
        uint64_t v62 = (char *)v90;
        sub_1000A4440();
        unint64_t v63 = sub_1000A4450();
        os_log_type_t v64 = sub_1000A4A20();
        if (os_log_type_enabled(v63, v64))
        {
          KeyPath = (_WORD *)swift_slowAlloc();
          _WORD *KeyPath = 0;
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "configuredContainer throwing as it can't build a container", (uint8_t *)KeyPath, 2u);
          swift_slowDealloc();
        }

        v27(v62, v30);
        unint64_t v65 = 0xD000000000000019;
        unint64_t v66 = 0x80000001000AAAB0;
        goto LABEL_40;
      }
      sub_1000A4800();
      sub_1000A4820();
      KeyPath = v53;
      swift_retain();
      swift_bridgeObjectRelease();
      id v54 = objc_allocWithZone((Class)CKContainerID);
      NSString v55 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v56 = [v54 initWithContainerIdentifier:v55 environment:1];

      sub_10009F0B0(v56, 0);
      swift_release();

      uint64_t v57 = v88;
      sub_1000A4440();
      swift_retain_n();
      uint64_t v58 = sub_1000A4450();
      os_log_type_t v59 = sub_1000A4A40();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v90 = v27;
        uint64_t v97 = v28;
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        KeyPath = (_WORD *)swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 138412290;
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000A4560();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v61 = (uint64_t)v101;
        if (!v101) {
          Swift::String v101 = 0;
        }
        sub_1000A4BC0();
        uint64_t v28 = v97;
        NSBundle v27 = v90;
        *(void *)KeyPath = v61;
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "configuredContainer with containerID: %@", v60, 0xCu);
        sub_100008704(&qword_1000CAAF0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v57 = v88;
      }
      else
      {

        swift_release_n();
      }
      uint64_t v30 = v96;
      v27((char *)v57, v96);
      uint64_t v50 = v98;
    }
  }
  swift_retain();
  sub_10009F4CC();
  swift_release();
  if (v50) {
    return KeyPath;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  KeyPath = v101;
  if (!v101)
  {
LABEL_36:
    KeyPath = v94;
    sub_1000A4440();
    swift_retain_n();
    Swift::String v80 = sub_1000A4450();
    os_log_type_t v81 = sub_1000A4A40();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v97 = v28;
      uint64_t v90 = v27;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      KeyPath = (_WORD *)swift_slowAlloc();
      Swift::String_optional v103 = KeyPath;
      *(_DWORD *)uint64_t v82 = 136315138;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      sub_100008704(&qword_1000CA880);
      uint64_t v83 = sub_1000A4810();
      Swift::String v101 = (_WORD *)sub_10003CFA4(v83, v84, (uint64_t *)&v103);
      sub_1000A4BC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "configuredContainer throwing as it doesn't have a container or nil sourceAppBundleID: %s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v90(v94, v96);
    }
    else
    {

      swift_release_n();
      v27((char *)KeyPath, v30);
    }
    unint64_t v66 = 0x80000001000AAAD0;
    unint64_t v65 = 0xD000000000000033;
LABEL_40:
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v85 = 0xD000000000000015;
    *(void *)(v85 + 8) = 0x80000001000AAA90;
    *(void *)(v85 + 16) = 0;
    *(void *)(v85 + 24) = v65;
    *(void *)(v85 + 32) = v66;
    *(unsigned char *)(v85 + 40) = 10;
    swift_willThrow();
    return KeyPath;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  unint64_t v67 = v102;
  if (!v102)
  {

    goto LABEL_36;
  }
  uint64_t v90 = v27;
  uint64_t v97 = v28;
  uint64_t v68 = (uint64_t)v101;
  uint64_t v69 = v93;
  sub_1000A4440();
  BOOL v70 = v100;
  Swift::String v71 = sub_1000A4450();
  os_log_type_t v72 = sub_1000A4A40();
  if (os_log_type_enabled(v71, v72))
  {
    Swift::String v73 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::String v73 = 67109120;
    LODWORD(v101) = v70;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "configuredContainer about to return container, needsBundleIDOverride: %{BOOL}d", v73, 8u);
    uint64_t v69 = v93;
    swift_slowDealloc();
  }

  v90(v69, v96);
  swift_beginAccess();
  if (v100)
  {
    id v74 = [KeyPath options];
    NSString v75 = sub_1000A47C0();
    [v74 setApplicationBundleIdentifierOverride:v75];

    Swift::String v76 = v92;
    sub_1000A4440();
    swift_bridgeObjectRetain();
    Swift::String v77 = sub_1000A4450();
    os_log_type_t v78 = sub_1000A4A40();
    if (os_log_type_enabled(v77, v78))
    {
      Swift::String v79 = (uint8_t *)swift_slowAlloc();
      Swift::String_optional v103 = (_WORD *)swift_slowAlloc();
      *(_DWORD *)Swift::String v79 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_10003CFA4(v68, v67, (uint64_t *)&v103);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "configuredContainer options applicationBundleIDOverride set to: %s", v79, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v90(v92, v96);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v90(v76, v96);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return KeyPath;
}

uint64_t sub_10000F650@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F664(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t sub_10000F678@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F68C(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t sub_10000F6A0@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F6B4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10000F730(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t sub_10000F744(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_10000F7B8@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F7E0(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t sub_10000F808@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F830(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t sub_10000F858@<X0>(void *a1@<X8>)
{
  return sub_10000F6B4(a1);
}

uint64_t sub_10000F880(void **a1)
{
  return sub_10000F744(a1);
}

uint64_t Publishers.CSCombineLatest5.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 100));
}

uint64_t Publishers.CSCombineLatest5.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 104));
}

uint64_t Publishers.CSCombineLatest5.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 108));
}

uint64_t Publishers.CSCombineLatest5.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 112));
}

uint64_t Publishers.CSCombineLatest5.init(_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  NSBundle v17 = (int *)type metadata accessor for Publishers.CSCombineLatest5();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9 + v17[25], a2, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v17[26], a3, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[27], a4, a10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[28], a5, a11);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest5()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest5.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = a4;
  uint64_t v85 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v87 = a1;
  uint64_t v88 = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v102 = v5;
  uint64_t v90 = v6;
  uint64_t v103 = v7;
  uint64_t v104 = v8;
  uint64_t v98 = v8;
  uint64_t v99 = v7;
  uint64_t v105 = v9;
  uint64_t v106 = v10;
  uint64_t v96 = v10;
  uint64_t v97 = v9;
  uint64_t v100 = sub_1000A4480();
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v91 = *(void *)(a2 + 48);
  Swift::String v93 = (char *)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v106 = *(void *)(a2 + 88);
  uint64_t v95 = v12;
  uint64_t v76 = v106;
  uint64_t v94 = sub_1000A4480();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = v88;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v99;
  uint64_t v103 = swift_getAssociatedTypeWitness();
  uint64_t v89 = v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v105 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v15 = v94;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v82 = sub_1000A44D0();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v16 = __chkstk_darwin(v82);
  os_log_type_t v78 = (char *)&v68 - v17;
  uint64_t v75 = *(void *)(v91 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  id v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::String v73 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  Swift::String v93 = (char *)&v68 - v23;
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v25 = __chkstk_darwin(v22);
  NSBundle v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v13;
  uint64_t v29 = *(void *)(v13 - 8);
  uint64_t v30 = __chkstk_darwin(v25);
  Swift::String v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v100 - 8);
  uint64_t v36 = __chkstk_darwin(v33);
  BOOL v70 = (char *)&v68 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  id v39 = (char *)&v68 - v38;
  uint64_t v41 = v79;
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v40 + 16))(v35, v79);
  uint64_t v69 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v41 + *(int *)(a2 + 100), v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v41 + *(int *)(a2 + 104), v99);
  os_log_type_t v72 = v39;
  uint64_t v44 = v43;
  sub_1000A4490();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v70, v39, v100);
  uint64_t v45 = v69;
  uint64_t v46 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v73, v41 + *(int *)(v69 + 108), v89);
  uint64_t v47 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v41 + *(int *)(v45 + 112), v91);
  uint64_t v48 = v76;
  uint64_t v49 = v46;
  uint64_t v50 = v47;
  uint64_t v51 = v95;
  sub_1000A4490();
  id v52 = (void *)swift_allocObject();
  v52[2] = v44;
  v52[3] = v28;
  uint64_t v53 = v98;
  uint64_t v54 = v99;
  v52[4] = v99;
  v52[5] = v49;
  uint64_t v55 = v85;
  v52[6] = v50;
  v52[7] = v55;
  uint64_t v56 = v96;
  uint64_t v57 = v97;
  v52[8] = v53;
  v52[9] = v57;
  v52[10] = v56;
  v52[11] = v51;
  uint64_t v58 = v86;
  v52[12] = v48;
  v52[13] = v58;
  os_log_type_t v59 = (void *)swift_allocObject();
  uint64_t v60 = v88;
  v59[2] = v90;
  v59[3] = v60;
  uint64_t v61 = v89;
  v59[4] = v54;
  v59[5] = v61;
  v59[6] = v50;
  v59[7] = v55;
  v59[8] = v53;
  v59[9] = v57;
  uint64_t v62 = v95;
  v59[10] = v56;
  v59[11] = v62;
  v59[12] = v48;
  v59[13] = v58;
  v59[14] = sub_100010A00;
  v59[15] = v52;
  unint64_t v63 = v78;
  unint64_t v65 = v93;
  uint64_t v64 = v94;
  sub_1000A45A0();
  swift_release();
  uint64_t v66 = v82;
  sub_1000A44C0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v63, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v72, v100);
}

uint64_t sub_100010410(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unint64_t v65 = a8;
  uint64_t v66 = a7;
  uint64_t v67 = a1;
  os_log_type_t v81 = a6;
  uint64_t v75 = a21;
  uint64_t v73 = a4;
  uint64_t v74 = a15;
  uint64_t v76 = a10;
  uint64_t v77 = a5;
  uint64_t v71 = a3;
  uint64_t v72 = a9;
  uint64_t v70 = a20;
  uint64_t v68 = a2;
  uint64_t v69 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v25 = TupleTypeMetadata3 - 8;
  uint64_t v26 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v85 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v84 = (char *)&v58 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v79 = (char *)&v58 - v31;
  __chkstk_darwin(v30);
  uint64_t v80 = (char *)&v58 + *(int *)(v25 + 56) - v32;
  uint64_t v33 = v80;
  os_log_type_t v78 = (char *)&v58 + *(int *)(v25 + 72) - v32;
  uint64_t v34 = v78;
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v86 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v82 = (void (*)(void))v86[2];
  uint64_t v83 = (char *)&v58 - v32;
  ((void (*)(char *, void, uint64_t))v82)((char *)&v58 - v32, v81, AssociatedTypeWitness);
  uint64_t v63 = *(void *)(v22 - 8);
  os_log_type_t v81 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v58 = v22;
  v81(v33, v66, v22);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v35 = *(void (**)(char *, char *))(v64 + 16);
  uint64_t v59 = v23;
  v35(v34, v65);
  uint64_t v60 = (void (*)(char *, char *, uint64_t))v35;
  uint64_t v66 = &v79[*(int *)(v25 + 56)];
  uint64_t v36 = v66;
  unint64_t v65 = &v79[*(int *)(v25 + 72)];
  uint64_t v37 = v65;
  uint64_t v38 = v61;
  v82();
  v81(v36, v80, v22);
  id v39 = v78;
  ((void (*)(char *, char *, uint64_t))v35)(v37, v78, v23);
  uint64_t v62 = (void (*)(void))v86[4];
  ((void (*)(uint64_t, char *, uint64_t))v62)(v67, v79, v38);
  uint64_t v40 = &v84[*(int *)(v25 + 56)];
  uint64_t v79 = &v84[*(int *)(v25 + 72)];
  uint64_t v41 = v79;
  v82();
  uint64_t v42 = v80;
  uint64_t v43 = v58;
  v81(v40, v80, v58);
  uint64_t v44 = v39;
  uint64_t v45 = v59;
  v60(v41, v44, v59);
  uint64_t v46 = v63;
  uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 32);
  v47(v68, v40, v43);
  uint64_t v48 = &v85[*(int *)(v25 + 56)];
  uint64_t v49 = &v85[*(int *)(v25 + 72)];
  v62();
  v47((uint64_t)v48, v42, v43);
  uint64_t v50 = v64;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  v51(v49, v78, v45);
  v51(v71, v49, v45);
  uint64_t v52 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v73, v72, v52);
  uint64_t v53 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v77, v76, v53);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
  v54(v48, v43);
  uint64_t v55 = (void (*)(char *, uint64_t))v86[1];
  v55(v85, v38);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v79, v45);
  v55(v84, v38);
  v56(v65, v45);
  return ((uint64_t (*)(char *, uint64_t))v54)(v66, v43);
}

uint64_t sub_1000109F0()
{
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100010A00(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), char *a7, char *a8, uint64_t a9, uint64_t a10)
{
  return sub_100010410(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9], v10[10],
           v10[11],
           v10[12]);
}

uint64_t sub_100010A48@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getTupleTypeMetadata3();
  uint64_t v8 = a1 + *(int *)(v7 + 48);
  uint64_t v9 = a1 + *(int *)(v7 + 64);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a3 + TupleTypeMetadata[24], a1, v12, v6, v8, v9);
}

uint64_t sub_100010C14()
{
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100010C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100010A48(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112), a2);
}

uint64_t sub_100010C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest5.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.CSCombineLatest6.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 116));
}

uint64_t Publishers.CSCombineLatest6.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 120));
}

uint64_t Publishers.CSCombineLatest6.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 124));
}

uint64_t Publishers.CSCombineLatest6.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 128));
}

uint64_t Publishers.CSCombineLatest6.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.CSCombineLatest6.init(_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9, a1, a7);
  uint64_t v16 = (int *)type metadata accessor for Publishers.CSCombineLatest6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v16[29], a2, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v16[30], a3, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v16[31], a4, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v16[32], a5, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v16[33], a6, a13);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest6()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest6.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v89 = a3;
  uint64_t v91 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v104 = *(void *)(a2 + 80);
  uint64_t v105 = v7;
  uint64_t AssociatedTypeWitness = v5;
  uint64_t v108 = v6;
  uint64_t v93 = v5;
  uint64_t v106 = v6;
  uint64_t v109 = v7;
  uint64_t v110 = v8;
  uint64_t v98 = v9;
  uint64_t v99 = v8;
  uint64_t v111 = v9;
  uint64_t v112 = v104;
  uint64_t v10 = sub_1000A4480();
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v100 = *(void *)(a2 + 40);
  uint64_t v101 = v11;
  uint64_t v102 = *(void *)(a2 + 56);
  uint64_t v103 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v82 = *(void *)(a2 + 88);
  uint64_t v113 = v12;
  uint64_t v114 = v13;
  uint64_t v96 = v13;
  uint64_t v97 = v12;
  uint64_t v95 = sub_1000A44A0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v108 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v105;
  uint64_t v109 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v100;
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v111 = swift_getAssociatedTypeWitness();
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v16 = v95;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v86 = sub_1000A44D0();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v17 = __chkstk_darwin(v86);
  os_log_type_t v81 = (char *)v71 - v18;
  uint64_t v79 = *(void *)(v102 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_type_t v78 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v76 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v73 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(v16 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v94 = (char *)v71 - v26;
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v72 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v106 - 8);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v93;
  uint64_t v35 = __chkstk_darwin(v31);
  uint64_t v37 = (char *)v71 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v103 - 8);
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)v71 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[1] = v40;
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)v71 - v41;
  uint64_t v74 = (char *)v71 - v41;
  uint64_t v44 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v37, v83, v34);
  uint64_t v45 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v44 + *(int *)(a2 + 116), v106);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v72, v44 + *(int *)(a2 + 120), v105);
  sub_1000A4490();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v40, v42, v103);
  uint64_t v46 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v73, v44 + *(int *)(a2 + 124), v100);
  uint64_t v47 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v45 + *(int *)(a2 + 128), v101);
  uint64_t v48 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v45 + *(int *)(a2 + 132), v102);
  uint64_t v49 = v96;
  uint64_t v50 = v82;
  uint64_t v51 = v46;
  uint64_t v52 = v47;
  sub_1000A44B0();
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v93;
  uint64_t v55 = v106;
  v53[2] = v93;
  v53[3] = v55;
  uint64_t v56 = v104;
  v53[4] = v105;
  v53[5] = v51;
  v53[6] = v52;
  v53[7] = v48;
  uint64_t v57 = v89;
  uint64_t v59 = v98;
  uint64_t v58 = v99;
  v53[8] = v89;
  v53[9] = v58;
  v53[10] = v59;
  v53[11] = v56;
  uint64_t v60 = v97;
  v53[12] = v50;
  v53[13] = v60;
  uint64_t v61 = v90;
  v53[14] = v49;
  v53[15] = v61;
  uint64_t v62 = (void *)swift_allocObject();
  uint64_t v63 = v106;
  v62[2] = v54;
  v62[3] = v63;
  uint64_t v64 = v100;
  v62[4] = v105;
  v62[5] = v64;
  uint64_t v65 = v102;
  v62[6] = v101;
  v62[7] = v65;
  v62[8] = v57;
  v62[9] = v58;
  v62[10] = v59;
  v62[11] = v56;
  v62[12] = v50;
  v62[13] = v60;
  uint64_t v66 = v95;
  v62[14] = v96;
  v62[15] = v61;
  v62[16] = sub_100012060;
  v62[17] = v53;
  uint64_t v67 = v81;
  uint64_t v68 = v94;
  sub_1000A45A0();
  swift_release();
  uint64_t v69 = v86;
  sub_1000A44C0();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v67, v69);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v68, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v74, v103);
}

uint64_t sub_1000119A8(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v77 = a8;
  uint64_t v96 = a7;
  uint64_t v91 = a6;
  uint64_t v89 = a5;
  uint64_t v85 = a4;
  os_log_type_t v81 = a3;
  uint64_t v78 = a2;
  uint64_t v76 = a1;
  uint64_t v90 = a12;
  uint64_t v88 = a25;
  uint64_t v86 = a11;
  uint64_t v87 = a18;
  uint64_t v83 = a17;
  uint64_t v84 = a24;
  uint64_t v82 = a10;
  uint64_t v75 = a9;
  uint64_t v80 = a23;
  uint64_t v79 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v29 = TupleTypeMetadata3 - 8;
  uint64_t v30 = __chkstk_darwin(TupleTypeMetadata3);
  uint64_t v97 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v98 = (char *)&v66 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v66 - v35;
  __chkstk_darwin(v34);
  uint64_t v92 = (char *)&v66 + *(int *)(v29 + 56) - v37;
  uint64_t v38 = v92;
  uint64_t v93 = (char *)&v66 - v37;
  uint64_t v39 = (char *)&v66 + *(int *)(v29 + 72) - v37;
  uint64_t v99 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v40 = v99 + 2;
  uint64_t v95 = (void (*)(void))v99[2];
  ((void (*)(char *, void *, uint64_t))v95)((char *)&v66 - v37, v96, AssociatedTypeWitness);
  uint64_t v69 = v40;
  uint64_t v96 = *(void **)(v26 - 8);
  uint64_t v94 = (void (*)(char *, char *, uint64_t))v96[2];
  uint64_t v70 = v26;
  v94(v38, v77, v26);
  uint64_t v68 = v27;
  uint64_t v74 = *(void *)(v27 - 8);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v71 = v39;
  v41(v39, v75, v27);
  uint64_t v72 = v41;
  uint64_t v42 = *(int *)(v29 + 56);
  uint64_t v67 = v36;
  uint64_t v43 = &v36[v42];
  uint64_t v77 = &v36[v42];
  uint64_t v75 = &v36[*(int *)(v29 + 72)];
  uint64_t v44 = v75;
  ((void (*)(char *, char *, uint64_t))v95)(v36, v93, v100);
  uint64_t v45 = v43;
  uint64_t v46 = v92;
  v94(v45, v92, v26);
  uint64_t v47 = v68;
  v41(v44, v39, v68);
  uint64_t v73 = (void (*)(void))v99[4];
  ((void (*)(char *, char *, uint64_t))v73)(v76, v67, v100);
  uint64_t v67 = &v98[*(int *)(v29 + 56)];
  uint64_t v48 = v67;
  uint64_t v76 = &v98[*(int *)(v29 + 72)];
  uint64_t v49 = v76;
  v95();
  uint64_t v50 = v46;
  uint64_t v51 = v70;
  v94(v48, v50, v70);
  uint64_t v52 = v71;
  v72(v49, v71, v47);
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v96[4];
  v53(v78, v67, v51);
  uint64_t v54 = &v97[*(int *)(v29 + 56)];
  uint64_t v55 = &v97[*(int *)(v29 + 72)];
  v73();
  v53((uint64_t)v54, v92, v51);
  uint64_t v56 = v74;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  v57(v55, v52, v47);
  v57(v81, v55, v47);
  uint64_t v58 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v85, v82, v58);
  uint64_t v59 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v89, v86, v59);
  uint64_t v60 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v91, v90, v60);
  uint64_t v61 = (void (*)(char *, uint64_t))v96[1];
  v61(v54, v51);
  uint64_t v62 = v100;
  uint64_t v63 = (void (*)(char *, uint64_t))v99[1];
  v63(v97, v100);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v56 + 8);
  v64(v76, v47);
  v63(v98, v62);
  v64(v75, v47);
  return ((uint64_t (*)(char *, uint64_t))v61)(v77, v51);
}

uint64_t sub_100012050()
{
  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100012060(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1000119A8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8],
           v12[9],
           v12[10],
           v12[11],
           v12[12],
           v12[13],
           v12[14]);
}

uint64_t sub_1000120B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v13 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v12 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + TupleTypeMetadata[12];
  uint64_t v8 = a1 + TupleTypeMetadata[16];
  uint64_t v9 = a1 + TupleTypeMetadata[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a1, v13, v12, v7, v8, v9);
}

uint64_t sub_1000122C8()
{
  swift_release();

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100012300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000120B0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 128), a2);
}

uint64_t sub_100012350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest6.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t _s7Combine10PublishersO13SPIHelper_iOSE16CSCombineLatest7V1axvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.CSCombineLatest7.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.CSCombineLatest7.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 136));
}

uint64_t Publishers.CSCombineLatest7.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 140));
}

uint64_t Publishers.CSCombineLatest7.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 144));
}

uint64_t Publishers.CSCombineLatest7.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 148));
}

uint64_t Publishers.CSCombineLatest7.g.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 64) - 8) + 16))(a2, v2 + *(int *)(a1 + 152));
}

uint64_t Publishers.CSCombineLatest7.init(_:_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t v17 = (int *)type metadata accessor for Publishers.CSCombineLatest7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v17[33], a2, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v17[34], a3, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v17[35], a4, a12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v17[36], a5, a13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(a9 + v17[37], a6, a14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(a9 + v17[38], a7, a15);
}

uint64_t type metadata accessor for Publishers.CSCombineLatest7()
{
  return swift_getGenericMetadata();
}

uint64_t Publishers.CSCombineLatest7.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v95 = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v111 = *(void *)(a2 + 32);
  uint64_t v112 = v5;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v110 = *(void *)(a2 + 96);
  uint64_t v113 = v6;
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v115 = v5;
  uint64_t v116 = v111;
  uint64_t v117 = v7;
  uint64_t v118 = v8;
  uint64_t v104 = v8;
  uint64_t v105 = v7;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v102 = v10;
  uint64_t v103 = v9;
  uint64_t v121 = v110;
  uint64_t v11 = sub_1000A44A0();
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v106 = *(void *)(a2 + 48);
  uint64_t v107 = v12;
  uint64_t v108 = *(void *)(a2 + 64);
  uint64_t v109 = v11;
  uint64_t v98 = (char *)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 120);
  uint64_t v101 = *(void *)(a2 + 104);
  uint64_t v121 = v14;
  uint64_t v85 = v13;
  uint64_t v100 = v14;
  uint64_t v99 = sub_1000A44A0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v111;
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v16 = v105;
  uint64_t v117 = swift_getAssociatedTypeWitness();
  uint64_t v17 = v106;
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v120 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v18 = v99;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v90 = sub_1000A44D0();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v19 = __chkstk_darwin(v90);
  uint64_t v86 = (char *)&v75 - v20;
  uint64_t v83 = *(void *)(v108 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v82 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v80 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v78 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = *(void *)(v18 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v98 = (char *)&v75 - v28;
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v76 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v112;
  uint64_t v36 = *(void *)(v112 - 8);
  uint64_t v37 = __chkstk_darwin(v32);
  uint64_t v39 = (char *)&v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = *(void *)(v109 - 8);
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v96 = (char *)&v75 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v75 - v45;
  uint64_t v48 = v87;
  (*(void (**)(char *, uint64_t))(v47 + 16))(v42, v87);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v48 + *(int *)(a2 + 132), v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v34, v48 + *(int *)(a2 + 136), v111);
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v76, v48 + *(int *)(a2 + 140), v105);
  uint64_t v77 = v46;
  sub_1000A44B0();
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v96, v46, v109);
  uint64_t v49 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v48 + *(int *)(a2 + 144), v106);
  uint64_t v50 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v48 + *(int *)(a2 + 148), v107);
  uint64_t v51 = v48 + *(int *)(a2 + 152);
  uint64_t v52 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v51, v108);
  uint64_t v53 = v100;
  uint64_t v54 = v85;
  uint64_t v55 = v101;
  uint64_t v56 = v50;
  uint64_t v57 = v52;
  sub_1000A44B0();
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v59 = v112;
  v58[2] = v113;
  v58[3] = v59;
  uint64_t v60 = v105;
  v58[4] = v111;
  v58[5] = v60;
  v58[6] = v49;
  v58[7] = v56;
  uint64_t v61 = v93;
  v58[8] = v57;
  v58[9] = v61;
  uint64_t v63 = v103;
  uint64_t v62 = v104;
  v58[10] = v104;
  v58[11] = v63;
  uint64_t v64 = v102;
  uint64_t v65 = v110;
  v58[12] = v102;
  v58[13] = v65;
  v58[14] = v55;
  v58[15] = v54;
  uint64_t v66 = v94;
  v58[16] = v53;
  v58[17] = v66;
  uint64_t v67 = (void *)swift_allocObject();
  uint64_t v68 = v112;
  v67[2] = v113;
  v67[3] = v68;
  v67[4] = v111;
  v67[5] = v60;
  uint64_t v69 = v107;
  v67[6] = v106;
  v67[7] = v69;
  v67[8] = v108;
  v67[9] = v61;
  v67[10] = v62;
  v67[11] = v63;
  v67[12] = v64;
  v67[13] = v65;
  v67[14] = v101;
  v67[15] = v54;
  v67[16] = v100;
  v67[17] = v66;
  v67[18] = sub_100013CD8;
  v67[19] = v58;
  uint64_t v70 = v86;
  uint64_t v71 = v99;
  uint64_t v72 = v98;
  sub_1000A45A0();
  swift_release();
  uint64_t v73 = v90;
  sub_1000A44C0();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v73);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v72, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v77, v109);
}

uint64_t sub_100013228(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void (*a17)(char *, char *, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(char *, uint64_t),uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v141 = a8;
  uint64_t v118 = a7;
  uint64_t v116 = a6;
  uint64_t v112 = a5;
  uint64_t v108 = a4;
  uint64_t v105 = a3;
  uint64_t v104 = a2;
  uint64_t v101 = a1;
  uint64_t v115 = a29;
  uint64_t v114 = a21;
  uint64_t v117 = a14;
  uint64_t v113 = a13;
  uint64_t v111 = a28;
  uint64_t v107 = a27;
  uint64_t v110 = a20;
  uint64_t v106 = a19;
  uint64_t v109 = a12;
  uint64_t v103 = a11;
  v138 = a10;
  v139 = a9;
  uint64_t v135 = a25;
  uint64_t v136 = a18;
  v137 = a26;
  v133 = a17;
  v140 = a24;
  v131 = a16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v144 = swift_getAssociatedTypeWitness();
  uint64_t v145 = swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v30 = (int *)(TupleTypeMetadata - 8);
  uint64_t v31 = __chkstk_darwin(TupleTypeMetadata);
  v129 = (char *)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  v127 = (char *)v94 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v128 = (char *)v94 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)v94 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)v94 - v40;
  uint64_t v120 = (char *)v94 + v30[14] - v40;
  uint64_t v42 = v120;
  uint64_t v43 = (char *)v94 + v30[18] - v40;
  Swift::String v124 = (char *)v94 + v30[22] - v40;
  v134 = (char *)v94 - v40;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  v132 = *(void **)(v44 - 8);
  Swift::String v122 = (void (*)(void))v132[2];
  Swift::String v123 = v132 + 2;
  ((void (*)(char *, uint64_t, uint64_t))v122)(v41, v141, v44);
  uint64_t v141 = swift_getAssociatedTypeWitness();
  v131 = *(void **)(v141 - 8);
  uint64_t v119 = (void (*)(char *, char *, uint64_t))v131[2];
  v140 = (void (*)(char *, uint64_t))(v131 + 2);
  v119(v42, (char *)v139, v141);
  uint64_t v135 = swift_getAssociatedTypeWitness();
  Swift::String v126 = *(void **)(v135 - 8);
  v133 = (void (*)(char *, char *, uint64_t))v126[2];
  v139 = (uint64_t (*)(char *, uint64_t))(v126 + 2);
  uint64_t v45 = v43;
  uint64_t v121 = v43;
  v133(v43, (char *)v138, v135);
  uint64_t v46 = swift_getAssociatedTypeWitness();
  v130 = *(void **)(v46 - 8);
  uint64_t v47 = (void (*)(char *, char *, uint64_t))v130[2];
  uint64_t v136 = v46;
  v137 = v130 + 2;
  v138 = v47;
  uint64_t v48 = v124;
  v47(v124, v103, v46);
  uint64_t v49 = v30[14];
  uint64_t v99 = v39;
  uint64_t v50 = &v39[v49];
  uint64_t v103 = &v39[v49];
  uint64_t v102 = &v39[v30[18]];
  uint64_t v51 = v102;
  uint64_t v100 = &v39[v30[22]];
  uint64_t v52 = v100;
  uint64_t v53 = v39;
  uint64_t v125 = v44;
  uint64_t v54 = v122;
  ((void (*)(char *, char *, uint64_t))v122)(v53, v134, v44);
  uint64_t v55 = v50;
  uint64_t v56 = v119;
  v119(v55, v120, v141);
  v133(v51, v45, v135);
  uint64_t v57 = v52;
  uint64_t v58 = v48;
  v138(v57, v48, v136);
  uint64_t v59 = (void (*)(void))v132[4];
  uint64_t v96 = v132 + 4;
  uint64_t v97 = v59;
  ((void (*)(char *, char *, uint64_t))v59)(v101, v99, v44);
  uint64_t v60 = &v128[v30[14]];
  uint64_t v101 = &v128[v30[18]];
  uint64_t v61 = v101;
  uint64_t v99 = &v128[v30[22]];
  uint64_t v62 = v99;
  v54();
  uint64_t v63 = v60;
  uint64_t v64 = v60;
  uint64_t v65 = v120;
  uint64_t v66 = v141;
  v56(v63, v120, v141);
  uint64_t v67 = v135;
  v133(v61, v121, v135);
  uint64_t v68 = v136;
  v138(v62, v58, v136);
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v131[4];
  v94[1] = v131 + 4;
  uint64_t v95 = v69;
  uint64_t v70 = v66;
  v69(v104, v64, v66);
  uint64_t v104 = &v127[v30[14]];
  uint64_t v71 = v104;
  uint64_t v72 = &v127[v30[18]];
  uint64_t v98 = &v127[v30[22]];
  uint64_t v73 = v98;
  v122();
  v119(v71, v65, v70);
  uint64_t v74 = v121;
  v133(v72, v121, v67);
  v138(v73, v58, v68);
  uint64_t v75 = (void (*)(uint64_t, char *, uint64_t))v126[4];
  v75(v105, v72, v67);
  uint64_t v76 = &v129[v30[14]];
  uint64_t v77 = &v129[v30[18]];
  uint64_t v78 = &v129[v30[22]];
  v97();
  uint64_t v79 = v65;
  uint64_t v80 = v141;
  v95(v76, v79, v141);
  v75((uint64_t)v77, v74, v67);
  uint64_t v81 = (void (*)(char *, char *, uint64_t))v130[4];
  v81(v78, v124, v68);
  v81(v108, v78, v68);
  uint64_t v82 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v112, v109, v82);
  uint64_t v83 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v116, v113, v83);
  uint64_t v84 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v118, v117, v84);
  v140 = (void (*)(char *, uint64_t))v126[1];
  v140(v77, v67);
  uint64_t v85 = (void (*)(char *, uint64_t))v131[1];
  uint64_t v86 = v80;
  v85(v76, v80);
  v139 = (uint64_t (*)(char *, uint64_t))v85;
  uint64_t v87 = (void (*)(char *, uint64_t))v132[1];
  uint64_t v88 = v125;
  v87(v129, v125);
  uint64_t v89 = (void (*)(char *, uint64_t))v130[1];
  uint64_t v90 = v136;
  v89(v98, v136);
  v85(v104, v86);
  v87(v127, v88);
  v89(v99, v90);
  uint64_t v91 = v135;
  uint64_t v92 = v140;
  v140(v101, v135);
  v87(v128, v88);
  v89(v100, v90);
  v92(v102, v91);
  return v139(v103, v141);
}

uint64_t sub_100013CC8()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100013CD8(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, uint64_t), void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_100013228(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *(void *)(v14 + 16), *(void **)(v14 + 24), *(void (**)(char *, char *, uint64_t))(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48),
           *(void *)(v14 + 56),
           *(void *)(v14 + 64),
           *(void *)(v14 + 72),
           *(void *)(v14 + 80),
           *(void (**)(char *, uint64_t))(v14 + 88),
           *(void *)(v14 + 96),
           *(void **)(v14 + 104),
           *(void *)(v14 + 112),
           *(void *)(v14 + 120),
           *(void *)(v14 + 128));
}

uint64_t sub_100013D30@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v14 = a1 + TupleTypeMetadata[12];
  uint64_t v13 = a1 + TupleTypeMetadata[16];
  uint64_t v12 = a1 + TupleTypeMetadata[20];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = (int *)swift_getTupleTypeMetadata();
  uint64_t v7 = a1 + v6[12];
  uint64_t v8 = a1 + v6[16];
  uint64_t v9 = a1 + v6[20];
  uint64_t v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a3 + v10[32], a1, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_100013FA0()
{
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_100013FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100013D30(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144), a2);
}

uint64_t sub_100014030(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 56), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_100014050(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 64), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_100014070(uint64_t a1, uint64_t a2)
{
  return _swift_getAssociatedConformanceWitness(*(void *)(a2 + 72), *(void *)(a2 + 16), a1, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
}

uint64_t sub_100014090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.CSCombineLatest7.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1000140A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 104);
}

uint64_t sub_1000140AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10001423C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(a3[3] - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = (v5 + v7) & ~v7;
  uint64_t v10 = *(void *)(a3[4] - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v46 = *(void *)(v6 + 64) + v11;
  uint64_t v12 = v46 + v9;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = a3[6];
  uint64_t v15 = v12 & ~v11;
  uint64_t v16 = *(void *)(a3[5] - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = *(void *)(v16 + 64);
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = *(_DWORD *)(v20 + 80);
  uint64_t v22 = v19 + v21;
  unint64_t v23 = ((v19 + v21 + ((v13 + v17 + v15) & ~v17)) & ~v21) + *(void *)(v20 + 64);
  uint64_t v24 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v10 + 80) | *(unsigned char *)(v16 + 80) | *(unsigned char *)(v20 + 80));
  if (v24 <= 7
    && v23 <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v10 + 80) | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v20 + 80)) & 0x100000) == 0)
  {
    uint64_t v44 = a3[5];
    uint64_t v29 = ~v7;
    uint64_t v40 = a3[4];
    uint64_t v41 = ~v11;
    uint64_t v42 = ~v17;
    uint64_t v43 = ~v21;
    uint64_t v39 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v45 = a1;
    unint64_t v31 = ((unint64_t)a1 + v8) & v29;
    unint64_t v32 = ((unint64_t)a2 + v8) & v29;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v31, v32, v39);
    uint64_t v33 = v31 + v46;
    uint64_t v28 = v45;
    uint64_t v34 = v33 & v41;
    unint64_t v35 = (v32 + v46) & v41;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v33 & v41, v35, v40);
    uint64_t v36 = (v34 + v18) & v42;
    unint64_t v37 = (v35 + v18) & v42;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v36, v37, v44);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))((v36 + v22) & v43, (v37 + v22) & v43, v14);
  }
  else
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v28 = (uint64_t *)(v27 + ((v24 + 16) & ~v24));
    swift_retain();
  }
  return v28;
}

uint64_t sub_100014580(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(a2[6] - 8);
  uint64_t v18 = *(uint64_t (**)(unint64_t))(v17 + 8);
  unint64_t v19 = (v16 + *(void *)(v15 + 56) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);

  return v18(v19);
}

uint64_t sub_1000146F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 16))((*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 48) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_100014890(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 24))((*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 40) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_100014A30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 32))((*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 32) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_100014BD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 40))((*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(void *)(v22 + 24) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

uint64_t sub_100014D70(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v44 = *(void *)(a3[2] - 8);
  unsigned int v5 = *(_DWORD *)(v44 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v44 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = *(void *)(a3[4] - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(void *)(v9 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v16 = *(void *)(a3[6] - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(*(void *)(a3[4] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v16 + 80);
  if (v17 <= v15) {
    unsigned int v24 = v15;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v16 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v25 = *(void *)(*(void *)(a3[2] - 8) + 64) + v18;
  uint64_t v26 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  int v27 = a2 - v24;
  if (a2 <= v24) {
    goto LABEL_33;
  }
  uint64_t v28 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      + *(void *)(*(void *)(a3[6] - 8) + 64);
  char v29 = 8 * v28;
  if (v28 > 3) {
    goto LABEL_16;
  }
  unsigned int v31 = ((v27 + ~(-1 << v29)) >> v29) + 1;
  if (HIWORD(v31))
  {
    int v30 = *(_DWORD *)((char *)a1 + v28);
    if (!v30) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 > 0xFF)
  {
    int v30 = *(unsigned __int16 *)((char *)a1 + v28);
    if (!*(unsigned __int16 *)((char *)a1 + v28)) {
      goto LABEL_33;
    }
    goto LABEL_23;
  }
  if (v31 >= 2)
  {
LABEL_16:
    int v30 = *((unsigned __int8 *)a1 + v28);
    if (!*((unsigned char *)a1 + v28)) {
      goto LABEL_33;
    }
LABEL_23:
    int v32 = (v30 - 1) << v29;
    if (v28 > 3) {
      int v32 = 0;
    }
    if (v28)
    {
      if (v28 <= 3) {
        int v33 = ((v26 + ((v21 + v22 + ((v19 + v20 + (v25 & ~v18)) & ~v20)) & ~v22)) & ~v23)
      }
            + *(_DWORD *)(*(void *)(a3[6] - 8) + 64);
      else {
        int v33 = 4;
      }
      switch(v33)
      {
        case 2:
          int v34 = *a1;
          break;
        case 3:
          int v34 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v34 = *(_DWORD *)a1;
          break;
        default:
          int v34 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v34 = 0;
    }
    return v24 + (v34 | v32) + 1;
  }
LABEL_33:
  if (!v24) {
    return 0;
  }
  if (v5 == v24)
  {
    unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v44 + 48);
    uint64_t v36 = a1;
    uint64_t v37 = *(unsigned int *)(v44 + 84);
    uint64_t v38 = a3[2];
    return v35(v36, v37, v38);
  }
  unint64_t v40 = ((unint64_t)a1 + v25) & ~v18;
  if (v7 == v24)
  {
    uint64_t v41 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v41(((unint64_t)a1 + v25) & ~v18);
  }
  else
  {
    if (v11 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48);
      uint64_t v36 = (unsigned __int16 *)((v40 + v19 + v20) & ~v20);
      uint64_t v37 = *(unsigned int *)(v10 + 84);
      uint64_t v38 = a3[4];
      return v35(v36, v37, v38);
    }
    uint64_t v36 = (unsigned __int16 *)((((v40 + v19 + v20) & ~v20) + v21 + v22) & ~v22);
    if (v14 == v24)
    {
      unint64_t v35 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v37 = *(unsigned int *)(v13 + 84);
      uint64_t v38 = a3[5];
      return v35(v36, v37, v38);
    }
    unint64_t v42 = ((unint64_t)v36 + v26) & ~v23;
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t))(v16 + 48);
    return v43(v42, v17);
  }
}

void sub_100015244(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v39 = *(void *)(a4[2] - 8);
  unsigned int v6 = *(_DWORD *)(v39 + 84);
  uint64_t v7 = *(void *)(a4[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4[4] - 8);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v39 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(void *)(a4[4] - 8);
  unsigned int v12 = *(_DWORD *)(v9 + 84);
  if (v12 <= v10) {
    unsigned int v13 = v10;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = a4[6];
  uint64_t v38 = a4[5];
  uint64_t v15 = *(void *)(v38 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  if (v16 <= v13) {
    unsigned int v17 = v13;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v18 = *(void *)(v14 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(void *)(*(void *)(a4[3] - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = *(void *)(v9 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v18 + 80);
  if (*(_DWORD *)(v18 + 84) <= v17) {
    unsigned int v25 = v17;
  }
  else {
    unsigned int v25 = *(_DWORD *)(v18 + 84);
  }
  uint64_t v26 = *(void *)(*(void *)(a4[2] - 8) + 64) + v19;
  uint64_t v27 = *(void *)(*(void *)(v38 - 8) + 64) + v24;
  size_t v28 = ((v27 + ((v22 + v23 + ((v20 + v21 + (v26 & ~v19)) & ~v21)) & ~v23)) & ~v24)
      + *(void *)(*(void *)(v14 - 8) + 64);
  if (a3 <= v25)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v34 = ((a3 - v25 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v34))
    {
      int v29 = 4;
    }
    else if (v34 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v34 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v25 < a2)
  {
    unsigned int v30 = ~v25 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v35 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v35;
          a1[2] = BYTE2(v35);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v35;
        }
        else
        {
          *a1 = v35;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  uint64_t v32 = ~v19;
  uint64_t v33 = ~v24;
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x10001577CLL);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v6 == v25)
        {
          uint64_t v36 = *(void (**)(char *))(v39 + 56);
          uint64_t v37 = a1;
        }
        else
        {
          uint64_t v37 = (char *)((unint64_t)&a1[v26] & v32);
          if (v8 == v25)
          {
            uint64_t v36 = *(void (**)(char *))(v7 + 56);
          }
          else
          {
            uint64_t v37 = (char *)((unint64_t)&v37[v20 + v21] & ~v21);
            if (v12 == v25)
            {
              uint64_t v36 = *(void (**)(char *))(v11 + 56);
            }
            else
            {
              uint64_t v37 = (char *)((unint64_t)&v37[v22 + v23] & ~v23);
              if (v16 == v25)
              {
                uint64_t v36 = *(void (**)(char *))(v15 + 56);
              }
              else
              {
                uint64_t v37 = (char *)((unint64_t)&v37[v27] & v33);
                uint64_t v36 = *(void (**)(char *))(v18 + 56);
              }
            }
          }
        }
        v36(v37);
      }
      return;
  }
}

uint64_t sub_1000157A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 120);
}

uint64_t sub_1000157AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10001597C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v54 = v5 + v9;
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v53 = v11 + v13;
  uint64_t v14 = (v11 + v13 + v10) & ~v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v55 = *(void *)(a3[5] - 8);
  uint64_t v16 = *(_DWORD *)(v55 + 80);
  uint64_t v52 = v15 + v16;
  uint64_t v17 = (v15 + v16 + v14) & ~v16;
  uint64_t v18 = *(void *)(v55 + 64);
  uint64_t v19 = *(void *)(a3[6] - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80);
  uint64_t v51 = v18 + v20;
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v22 = a3[7];
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  uint64_t v25 = v21 + v24;
  unint64_t v26 = ((v21 + v24 + ((v18 + v20 + v17) & ~v20)) & ~v24) + *(void *)(v23 + 64);
  uint64_t v27 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v12 + 80) | *(unsigned char *)(v55 + 80) | *(unsigned char *)(v19 + 80) | *(unsigned char *)(v23 + 80));
  if (v27 <= 7
    && v26 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v55 + 80) | *(_DWORD *)(v19 + 80) | *(_DWORD *)(v23 + 80)) & 0x100000) == 0)
  {
    uint64_t v50 = a3[6];
    uint64_t v32 = *(void *)(v7 - 8);
    uint64_t v33 = ~v9;
    uint64_t v48 = a3[5];
    uint64_t v34 = ~v13;
    uint64_t v45 = a3[4];
    uint64_t v46 = ~v16;
    uint64_t v47 = ~v20;
    uint64_t v49 = ~v24;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v36 = v6;
    int v31 = a1;
    unint64_t v37 = ((unint64_t)a1 + v54) & v33;
    unint64_t v38 = ((unint64_t)a2 + v54) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v37, v38, v36);
    unint64_t v39 = (v38 + v53) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((v37 + v53) & v34, v39, v45);
    unint64_t v40 = (((v37 + v53) & v34) + v52) & v46;
    unint64_t v41 = (v39 + v52) & v46;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 16))(v40, v41, v48);
    unint64_t v42 = (v40 + v51) & v47;
    uint64_t v43 = (v41 + v51) & v47;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v42, v43, v50);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 16))((v42 + v25) & v49, (v43 + v25) & v49, v22);
  }
  else
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    int v31 = (uint64_t *)(v30 + ((v27 + 16) & ~v27));
    swift_retain();
  }
  return v31;
}

uint64_t sub_100015D6C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(a2[7] - 8);
  uint64_t v22 = *(uint64_t (**)(unint64_t))(v21 + 8);
  unint64_t v23 = (v20 + *(void *)(v19 + 56) + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);

  return v22(v23);
}

uint64_t sub_100015F20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 16))((*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_100016110(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_100016300(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))((*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1000164F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 40))((*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1000166E0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v55 = a3[2];
  uint64_t v54 = *(void *)(v55 - 8);
  unsigned int v5 = *(_DWORD *)(v54 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a3[5];
  uint64_t v52 = v8;
  uint64_t v53 = a3[4];
  uint64_t v9 = *(void *)(v53 - 8);
  if (v7 <= v5) {
    unsigned int v10 = *(_DWORD *)(v54 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(v8 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[6];
  uint64_t v16 = *(void *)(v51 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  uint64_t v18 = *(void *)(v50 - 8);
  if (v17 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v16 + 84);
  }
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v56 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v24 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = *(void *)(v18 + 64);
  if (v20 > v19) {
    unsigned int v19 = *(_DWORD *)(v18 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v55 - 8) + 64) + v21;
  uint64_t v30 = v25 + v26;
  uint64_t v31 = *(void *)(*(void *)(v51 - 8) + 64) + v27;
  int v32 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_35;
  }
  uint64_t v33 = (v31 + ((v30 + ((v23 + v24 + ((v56 + v22 + (v29 & ~v21)) & ~v22)) & ~v24)) & ~v26)) & ~v27;
  uint64_t v34 = v33 + v28;
  char v35 = 8 * (v33 + v28);
  if (v34 > 3) {
    goto LABEL_18;
  }
  unsigned int v37 = ((v32 + ~(-1 << v35)) >> v35) + 1;
  if (HIWORD(v37))
  {
    int v36 = *(_DWORD *)((char *)a1 + v34);
    if (!v36) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 > 0xFF)
  {
    int v36 = *(unsigned __int16 *)((char *)a1 + v34);
    if (!*(unsigned __int16 *)((char *)a1 + v34)) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 >= 2)
  {
LABEL_18:
    int v36 = *((unsigned __int8 *)a1 + v34);
    if (!*((unsigned char *)a1 + v34)) {
      goto LABEL_35;
    }
LABEL_25:
    int v38 = (v36 - 1) << v35;
    if (v34 > 3) {
      int v38 = 0;
    }
    if (v34)
    {
      if (v34 <= 3) {
        int v39 = v34;
      }
      else {
        int v39 = 4;
      }
      switch(v39)
      {
        case 2:
          int v40 = *a1;
          break;
        case 3:
          int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)a1;
          break;
        default:
          int v40 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    return v19 + (v40 | v38) + 1;
  }
LABEL_35:
  if (!v19) {
    return 0;
  }
  if (v5 == v19)
  {
    uint64_t v41 = v55;
    unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v43 = a1;
    uint64_t v44 = *(unsigned int *)(v54 + 84);
    return v42(v43, v44, v41);
  }
  unint64_t v46 = ((unint64_t)a1 + v29) & ~v21;
  if (v7 == v19)
  {
    uint64_t v47 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v47(((unint64_t)a1 + v29) & ~v21);
  }
  else
  {
    if (v11 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48);
      uint64_t v43 = (unsigned __int16 *)((v46 + v56 + v22) & ~v22);
      uint64_t v44 = v11;
      uint64_t v41 = v53;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)((((v46 + v56 + v22) & ~v22) + v23 + v24) & ~v24);
    if (v14 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v44 = *(unsigned int *)(v13 + 84);
      uint64_t v41 = v52;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)(((unint64_t)v43 + v30) & ~v26);
    if (v17 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v44 = *(unsigned int *)(v16 + 84);
      uint64_t v41 = v51;
      return v42(v43, v44, v41);
    }
    unint64_t v48 = ((unint64_t)v43 + v31) & ~v27;
    uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
    return v49(v48, v20, v50);
  }
}

void sub_100016C74(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  uint64_t v52 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4[3] - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v51 = a4[4];
  uint64_t v12 = *(void *)(v51 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(void *)(a4[5] - 8);
  if (v13 <= v11) {
    unsigned int v15 = v11;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(void *)(a4[5] - 8);
  unsigned int v50 = *(_DWORD *)(v14 + 84);
  if (v50 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v18 = *(void *)(a4[6] - 8);
  uint64_t v19 = v18;
  unsigned int v20 = *(_DWORD *)(v18 + 84);
  unsigned int v49 = v20;
  if (v20 <= v17) {
    unsigned int v20 = v17;
  }
  uint64_t v21 = *(void *)(a4[7] - 8);
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = *(void *)(v8 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v26 = *(void *)(*(void *)(v51 - 8) + 64);
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = *(void *)(v14 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = *(void *)(v18 + 64);
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v32 = v22 + v23;
  uint64_t v33 = v28 + v29;
  uint64_t v34 = v30 + v31;
  size_t v35 = ((v34 + ((v28 + v29 + ((v26 + v27 + ((v24 + v25 + ((v22 + v23) & ~v23)) & ~v25)) & ~v27)) & ~v29)) & ~v31)
      + *(void *)(v21 + 64);
  if (*(_DWORD *)(v21 + 84) <= v20) {
    unsigned int v36 = v20;
  }
  else {
    unsigned int v36 = *(_DWORD *)(v21 + 84);
  }
  if (a3 <= v36)
  {
    int v37 = 0;
  }
  else if (v35 <= 3)
  {
    unsigned int v43 = ((a3 - v36 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
    if (HIWORD(v43))
    {
      int v37 = 4;
    }
    else if (v43 >= 0x100)
    {
      int v37 = 2;
    }
    else
    {
      int v37 = v43 > 1;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v36 < a2)
  {
    unsigned int v38 = ~v36 + a2;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v35)
      {
        int v44 = v38 & ~(-1 << (8 * v35));
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v44;
          a1[2] = BYTE2(v44);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v44;
        }
        else
        {
          *a1 = v44;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        a1[v35] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v39;
        return;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v35] = v39;
        return;
      default:
        return;
    }
  }
  uint64_t v40 = ~v23;
  uint64_t v41 = ~v29;
  uint64_t v42 = ~v31;
  switch(v37)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x100017234);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v7 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v52 + 56);
        unint64_t v46 = a1;
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&a1[v32] & v40);
      if (v10 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v9 + 56);
        goto LABEL_61;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v24 + v25] & ~v25);
      if (v13 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v12 + 56);
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v26 + v27] & ~v27);
      if (v50 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v16 + 56);
LABEL_37:
LABEL_61:
        v45(v46);
        return;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v33] & v41);
      if (v49 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v19 + 56);
        goto LABEL_61;
      }
      unint64_t v47 = (unint64_t)&v46[v34] & v42;
      unint64_t v48 = *(void (**)(unint64_t))(v21 + 56);
      v48(v47);
      return;
  }
}

uint64_t sub_10001725C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 144);
}

uint64_t sub_100017264()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_100017474(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v47 = *(void *)(a3[4] - 8);
  uint64_t v7 = a3[5];
  uint64_t v45 = *(void *)(v7 - 8);
  int v8 = *(_DWORD *)(v45 + 80);
  uint64_t v46 = a3[6];
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v44 = a3[7];
  uint64_t v41 = *(void *)(v44 - 8);
  int v9 = *(_DWORD *)(v41 + 80);
  uint64_t v42 = a3[8];
  uint64_t v39 = *(void *)(v42 - 8);
  int v10 = *(_DWORD *)(v39 + 80);
  uint64_t v11 = *(void *)(v5 + 64) + *(_DWORD *)(v47 + 80);
  uint64_t v40 = *(void *)(v4 + 64) + v6;
  uint64_t v12 = *(void *)(v47 + 64) + v8;
  uint64_t v13 = *(void *)(v45 + 64) + *(_DWORD *)(v43 + 80);
  uint64_t v14 = *(void *)(v43 + 64) + v9;
  uint64_t v15 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v47 + 80) | v8 | *(unsigned char *)(v43 + 80) | v9 | v10);
  if (v15 <= 7
    && ((*(void *)(*(void *)(v44 - 8) + 64)
       + *(_DWORD *)(v39 + 80)
       + ((v14
         + ((v13
           + ((v12 + ((v11 + (v40 & ~v6)) & ~(unint64_t)*(_DWORD *)(v47 + 80))) & ~(unint64_t)*(_DWORD *)(v45 + 80))) & ~(unint64_t)*(_DWORD *)(v43 + 80))) & ~(unint64_t)*(_DWORD *)(v41 + 80))) & ~(unint64_t)*(_DWORD *)(v39 + 80))
     + *(void *)(*(void *)(v42 - 8) + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v47 + 80) | v8 | *(_DWORD *)(v43 + 80) | v9 | v10) & 0x100000) == 0)
  {
    uint64_t v19 = ~v6;
    unint64_t v32 = ~(unint64_t)*(_DWORD *)(v47 + 80);
    unint64_t v33 = ~(unint64_t)v8;
    uint64_t v34 = a3[4];
    unint64_t v35 = ~(unint64_t)*(_DWORD *)(v43 + 80);
    uint64_t v36 = *(void *)(*(void *)(v44 - 8) + 64) + *(_DWORD *)(v39 + 80);
    unint64_t v37 = ~(unint64_t)v9;
    unint64_t v38 = ~(unint64_t)*(_DWORD *)(v39 + 80);
    uint64_t v20 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    unint64_t v22 = ((unint64_t)v3 + v40) & v19;
    unint64_t v23 = ((unint64_t)a2 + v40) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v22, v23, v20);
    unint64_t v24 = (v23 + v11) & v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 16))((v22 + v11) & v32, v24, v34);
    unint64_t v25 = (((v22 + v11) & v32) + v12) & v33;
    unint64_t v26 = (v24 + v12) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))(v25, v26, v7);
    unint64_t v27 = (v25 + v13) & v35;
    unint64_t v28 = (v26 + v13) & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v27, v28, v46);
    unint64_t v29 = (v27 + v14) & v37;
    unint64_t v30 = (v28 + v14) & v37;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v29, v30, v44);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 16))((v29 + v36) & v38, (v30 + v36) & v38, v42);
  }
  else
  {
    uint64_t v18 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v3;
}

uint64_t sub_100017904(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(v19 + 56);
  uint64_t v22 = *(void *)(a2[7] - 8);
  uint64_t v23 = v22 + 8;
  unint64_t v24 = (v20 + v21 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  (*(void (**)(unint64_t))(v22 + 8))(v24);
  uint64_t v25 = *(void *)(a2[8] - 8);
  unint64_t v26 = *(uint64_t (**)(unint64_t))(v25 + 8);
  unint64_t v27 = (v24 + *(void *)(v23 + 56) + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);

  return v26(v27);
}

uint64_t sub_100017AFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 48);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 16;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 16))((*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 48) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_100017D3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 40);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 24;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 24))((*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 40) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_100017F7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 32);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 32;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 32))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 32))((*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 32) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1000181BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(v29 + 24);
  uint64_t v35 = *(void *)(a3[7] - 8);
  uint64_t v36 = v35 + 40;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = v34 + v37;
  uint64_t v39 = (v38 + v32) & ~v37;
  uint64_t v40 = (v38 + v33) & ~v37;
  (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v39, v40);
  uint64_t v41 = *(void *)(a3[8] - 8);
  (*(void (**)(unint64_t, unint64_t))(v41 + 40))((*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80), (*(void *)(v36 + 24) + *(unsigned __int8 *)(v41 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  return a1;
}

uint64_t sub_1000183FC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v58 = a3[2];
  uint64_t v56 = a3[3];
  uint64_t v57 = *(void *)(v58 - 8);
  unsigned int v5 = *(_DWORD *)(v57 + 84);
  uint64_t v6 = *(void *)(v56 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5) {
    unsigned int v8 = *(_DWORD *)(v57 + 84);
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = a3[5];
  uint64_t v54 = a3[4];
  uint64_t v10 = *(void *)(v54 - 8);
  unsigned int v55 = *(_DWORD *)(v10 + 84);
  if (v55 > v8) {
    unsigned int v8 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v11 = *(void *)(v9 - 8);
  unsigned int v53 = *(_DWORD *)(v11 + 84);
  if (v53 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v13 = *(void *)(a3[6] - 8);
  unsigned int v52 = *(_DWORD *)(v13 + 84);
  if (v52 <= v12) {
    unsigned int v14 = v12;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v49 = a3[8];
  uint64_t v50 = a3[7];
  uint64_t v15 = *(void *)(v50 - 8);
  unsigned int v16 = *(_DWORD *)(v15 + 84);
  unsigned int v51 = v16;
  if (v16 <= v14) {
    unsigned int v16 = v14;
  }
  uint64_t v17 = *(void *)(a3[8] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v13;
  uint64_t v21 = *(void *)(*(void *)(v54 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = *(void *)(v13 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v27 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84) <= v16) {
    unsigned int v28 = v16;
  }
  else {
    unsigned int v28 = *(_DWORD *)(v17 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v56 - 8) + 64);
  uint64_t v30 = *(void *)(*(void *)(v58 - 8) + 64) + v18;
  uint64_t v31 = *(void *)(*(void *)(v9 - 8) + 64) + v23;
  uint64_t v32 = v24 + v25;
  uint64_t v33 = *(void *)(*(void *)(v50 - 8) + 64) + v26;
  unsigned int v34 = a2 - v28;
  if (a2 <= v28) {
    goto LABEL_37;
  }
  uint64_t v35 = (v33 + ((v32 + ((v31 + ((v21 + v22 + ((v29 + v19 + (v30 & ~v18)) & ~v19)) & ~v22)) & ~v23)) & ~v25)) & ~v26;
  uint64_t v36 = v35 + v27;
  char v37 = 8 * (v35 + v27);
  if (v36 > 3) {
    goto LABEL_20;
  }
  unsigned int v39 = ((v34 + ~(-1 << v37)) >> v37) + 1;
  if (HIWORD(v39))
  {
    int v38 = *(_DWORD *)((char *)a1 + v36);
    if (!v38) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 > 0xFF)
  {
    int v38 = *(unsigned __int16 *)((char *)a1 + v36);
    if (!*(unsigned __int16 *)((char *)a1 + v36)) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if (v39 >= 2)
  {
LABEL_20:
    int v38 = *((unsigned __int8 *)a1 + v36);
    if (!*((unsigned char *)a1 + v36)) {
      goto LABEL_37;
    }
LABEL_27:
    int v40 = (v38 - 1) << v37;
    if (v36 > 3) {
      int v40 = 0;
    }
    if (v36)
    {
      if (v36 <= 3) {
        int v41 = v36;
      }
      else {
        int v41 = 4;
      }
      switch(v41)
      {
        case 2:
          int v42 = *a1;
          break;
        case 3:
          int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v42 = *(_DWORD *)a1;
          break;
        default:
          int v42 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v42 = 0;
    }
    return v28 + (v42 | v40) + 1;
  }
LABEL_37:
  if (!v28) {
    return 0;
  }
  if (v5 == v28)
  {
    uint64_t v43 = v58;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v57 + 48);
    uint64_t v7 = *(unsigned int *)(v57 + 84);
    goto LABEL_57;
  }
  unint64_t v46 = ((unint64_t)a1 + v30) & ~v18;
  if (v7 == v28)
  {
    uint64_t v43 = v56;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48);
    a1 = (unsigned __int16 *)(((unint64_t)a1 + v30) & ~v18);
    goto LABEL_57;
  }
  uint64_t v7 = v55;
  if (v55 == v28)
  {
    uint64_t v43 = v54;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48);
    a1 = (unsigned __int16 *)((v46 + v29 + v19) & ~v19);
    goto LABEL_57;
  }
  a1 = (unsigned __int16 *)((((v46 + v29 + v19) & ~v19) + v21 + v22) & ~v22);
  uint64_t v7 = v53;
  if (v53 == v28)
  {
    uint64_t v43 = v9;
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    goto LABEL_57;
  }
  unint64_t v47 = ((unint64_t)a1 + v31) & ~v23;
  if (v52 != v28)
  {
    a1 = (unsigned __int16 *)((v32 + v47) & ~v25);
    uint64_t v7 = v51;
    if (v51 != v28)
    {
      a1 = (unsigned __int16 *)(((unint64_t)a1 + v33) & ~v26);
      uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v7 = *(unsigned int *)(v17 + 84);
      uint64_t v43 = v49;
      return v44(a1, v7, v43);
    }
    uint64_t v44 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v43 = v50;
LABEL_57:
    return v44(a1, v7, v43);
  }
  unint64_t v48 = *(uint64_t (**)(unint64_t))(v20 + 48);
  return v48(v47);
}

void sub_100018998(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v56 = *(void *)(a4[2] - 8);
  unsigned int v5 = *(_DWORD *)(v56 + 84);
  uint64_t v6 = *(void *)(a4[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v55 = v7;
  if (v7 <= v5) {
    unsigned int v7 = *(_DWORD *)(v56 + 84);
  }
  uint64_t v52 = a4[4];
  uint64_t v8 = *(void *)(v52 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  unsigned int v54 = v9;
  if (v9 <= v7) {
    unsigned int v9 = v7;
  }
  uint64_t v49 = a4[5];
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(void *)(a4[6] - 8);
  unsigned int v50 = *(_DWORD *)(v10 + 84);
  if (v50 > v9) {
    unsigned int v9 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v12 = *(void *)(a4[6] - 8);
  unsigned int v48 = *(_DWORD *)(v11 + 84);
  if (v48 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v46 = a4[7];
  uint64_t v14 = *(void *)(v46 - 8);
  unsigned int v47 = *(_DWORD *)(v14 + 84);
  if (v47 <= v13) {
    unsigned int v15 = v13;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v16 = *(void *)(a4[8] - 8);
  uint64_t v17 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v53 = *(void *)(a4[3] - 8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(v53 + 64);
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v51 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = *(void *)(*(void *)(v49 - 8) + 64);
  uint64_t v24 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = *(void *)(v11 + 64);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = *(void *)(*(void *)(v46 - 8) + 64);
  uint64_t v28 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v29 = v17 + v18;
  uint64_t v30 = v23 + v24;
  uint64_t v31 = v25 + v26;
  size_t v32 = ((v27
        + v28
        + ((v25 + v26 + ((v23 + v24 + ((v21 + v22 + ((v19 + v20 + ((v17 + v18) & ~v18)) & ~v20)) & ~v22)) & ~v24)) & ~v26)) & ~v28)
      + *(void *)(v16 + 64);
  if (*(_DWORD *)(v16 + 84) <= v15) {
    unsigned int v33 = v15;
  }
  else {
    unsigned int v33 = *(_DWORD *)(v16 + 84);
  }
  if (a3 <= v33)
  {
    int v34 = 0;
  }
  else if (v32 <= 3)
  {
    unsigned int v39 = ((a3 - v33 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v39))
    {
      int v34 = 4;
    }
    else if (v39 >= 0x100)
    {
      int v34 = 2;
    }
    else
    {
      int v34 = v39 > 1;
    }
  }
  else
  {
    int v34 = 1;
  }
  if (v33 < a2)
  {
    unsigned int v35 = ~v33 + a2;
    if (v32 < 4)
    {
      int v36 = (v35 >> (8 * v32)) + 1;
      if (v32)
      {
        int v40 = v35 & ~(-1 << (8 * v32));
        bzero(a1, v32);
        if (v32 == 3)
        {
          *(_WORD *)a1 = v40;
          a1[2] = BYTE2(v40);
        }
        else if (v32 == 2)
        {
          *(_WORD *)a1 = v40;
        }
        else
        {
          *a1 = v40;
        }
      }
    }
    else
    {
      bzero(a1, v32);
      *(_DWORD *)a1 = v35;
      int v36 = 1;
    }
    switch(v34)
    {
      case 1:
        a1[v32] = v36;
        return;
      case 2:
        *(_WORD *)&a1[v32] = v36;
        return;
      case 3:
        goto LABEL_67;
      case 4:
        *(_DWORD *)&a1[v32] = v36;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v18;
  uint64_t v38 = ~v26;
  switch(v34)
  {
    case 1:
      a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)&a1[v32] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_36;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x100018FD0);
    case 4:
      *(_DWORD *)&a1[v32] = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (!a2) {
        return;
      }
LABEL_36:
      if (v5 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v56 + 56);
        int v42 = a1;
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&a1[v29] & v37);
      if (v55 == v33)
      {
        int v41 = *(void (**)(unsigned char *))(v53 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v19 + v20] & ~v20);
      if (v54 == v33)
      {
        uint64_t v43 = v51;
LABEL_54:
        int v41 = *(void (**)(unsigned char *))(v43 + 56);
        goto LABEL_55;
      }
      int v42 = (unsigned char *)((unint64_t)&v42[v21 + v22] & ~v22);
      if (v50 == v33)
      {
        uint64_t v43 = v10;
        goto LABEL_54;
      }
      unint64_t v44 = (unint64_t)&v42[v30] & ~v24;
      if (v48 != v33)
      {
        int v42 = (unsigned char *)((v31 + v44) & v38);
        if (v47 != v33)
        {
          int v42 = (unsigned char *)((unint64_t)&v42[v27 + v28] & ~v28);
          int v41 = *(void (**)(unsigned char *))(v16 + 56);
          goto LABEL_57;
        }
        int v41 = *(void (**)(unsigned char *))(v14 + 56);
LABEL_55:
LABEL_57:
        v41(v42);
        return;
      }
      uint64_t v45 = *(void (**)(unint64_t))(v12 + 56);
      v45(v44);
      return;
  }
}

ValueMetadata *type metadata accessor for CloudDocsOperations()
{
  return &type metadata for CloudDocsOperations;
}

uint64_t sub_100019008(uint64_t a1, uint64_t a2)
{
  v2[93] = a2;
  v2[87] = a1;
  v2[94] = sub_100008704(&qword_1000CA398);
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  return _swift_task_switch(sub_1000190B4, 0, 0);
}

uint64_t sub_1000190B4()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  *(_DWORD *)(v0 + 800) = *(_DWORD *)(v1 + 48);
  *(_DWORD *)(v0 + 804) = *(_DWORD *)(v1 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 776) = v3;
  *(void *)(v3 + 16) = v2;
  swift_asyncLet_begin();
  uint64_t v4 = *(void *)(v0 + 768);
  return _swift_asyncLet_get(v0 + 16, v4, sub_100019188, v0 + 656);
}

uint64_t sub_100019188()
{
  return _swift_task_switch(sub_1000191A4, 0, 0);
}

uint64_t sub_1000191A4()
{
  uint64_t v1 = *(int *)(v0 + 804);
  uint64_t v2 = *(void ***)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 696);
  uint64_t v4 = (uint64_t)v2 + *(int *)(v0 + 800);
  uint64_t v5 = *(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 752) + 48);
  uint64_t v6 = *v2;
  *(void *)(v0 + 784) = *v2;
  sub_10001F904(v4, v5, &qword_1000CA3B0);
  unsigned int v7 = *(void **)((char *)v2 + v1);
  *(void *)(v0 + 792) = v7;
  sub_10000B920(v5, v3);
  id v8 = v7;
  id v9 = v6;
  uint64_t v10 = *(void *)(v0 + 768);
  return _swift_asyncLet_finish(v0 + 16, v10, sub_100019280, v0 + 704);
}

uint64_t sub_100019280()
{
  return _swift_task_switch(sub_10001929C, 0, 0);
}

uint64_t sub_10001929C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v2 = v0[99];
  uint64_t v3 = v0[98];
  return v1(v3, v2);
}

void sub_10001931C()
{
  id v0 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v0 setQualityOfService:25];
  NSString v1 = sub_1000A47C0();
  [v0 setName:v1];

  qword_1000CA580 = (uint64_t)v0;
}

uint64_t sub_1000193A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return _swift_task_switch(sub_1000193C8, 0, 0);
}

uint64_t sub_1000193C8()
{
  NSString v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = sub_100008704(&qword_1000CA380);
  *uint64_t v2 = v0;
  v2[1] = sub_1000194D0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000002BLL, 0x80000001000AAB70, sub_10001EFCC, v1, v3);
}

uint64_t sub_1000194D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000195E8, 0, 0);
}

uint64_t sub_1000195E8()
{
  *(_OWORD *)*(void *)(v0 + 32) = *(_OWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001960C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v3 = sub_100008704(&qword_1000CA398);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = swift_task_alloc();
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v3 + 48);
  *(_DWORD *)(v2 + 68) = *(_DWORD *)(v3 + 64);
  return _swift_task_switch(sub_1000196BC, 0, 0);
}

uint64_t sub_1000196BC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000197A4;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000026, 0x80000001000AAC80, sub_10001F5F8, v2, v5);
}

uint64_t sub_1000197A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000198BC, 0, 0);
}

uint64_t sub_1000198BC()
{
  uint64_t v1 = *(int *)(v0 + 68);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(uint64_t **)(v0 + 40);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(uint64_t *)((char *)v3 + *(int *)(v2 + 64));
  sub_10000B920((uint64_t)v3 + *(int *)(v2 + 48), (uint64_t)v4 + *(int *)(v0 + 64));
  *uint64_t v4 = v5;
  *(void *)((char *)v4 + v1) = v6;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100019960(uint64_t a1, uint64_t a2)
{
  v2[101] = a2;
  v2[95] = a1;
  uint64_t v3 = sub_1000A42E0();
  v2[107] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[108] = v4;
  v2[109] = *(void *)(v4 + 64);
  v2[110] = swift_task_alloc();
  return _swift_task_switch(sub_100019A2C, 0, 0);
}

uint64_t sub_100019A2C()
{
  uint64_t v1 = v0[110];
  uint64_t v2 = v0[108];
  uint64_t v3 = v0[107];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[101], v3);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  v0[111] = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v5 + v4, v1, v3);
  swift_retain();
  sub_1000086BC(&qword_1000CA658);
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 2, v0 + 87, sub_100019B68, v0 + 82);
}

uint64_t sub_100019B68()
{
  return _swift_task_switch(sub_100019B84, 0, 0);
}

uint64_t sub_100019B84()
{
  uint64_t v1 = (void *)v0[87];
  uint64_t v2 = v0[88];
  uint64_t v3 = v0[89];
  uint64_t v4 = v0[90];
  v0[112] = v4;
  uint64_t v5 = v0[91];
  v0[113] = v5;
  uint64_t v6 = (void *)v0[94];
  v0[114] = v6;
  if (v6 || !v1)
  {
    id v9 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100019E0C;
    uint64_t v11 = v0 + 2;
    uint64_t v12 = v0 + 87;
    unsigned int v13 = v0 + 96;
    goto LABEL_11;
  }
  if (v3)
  {
    if (v5)
    {
      id v7 = v1;
      swift_bridgeObjectRetain_n();
      id v8 = v7;
      swift_bridgeObjectRetain();
      v21._object = (void *)0x80000001000AA0E0;
      v21._countAndFlagsBits = 0xD000000000000017;
      LOBYTE(v7) = sub_1000A48C0(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7)
      {
        uint64_t v4 = v2;
        uint64_t v5 = v3;
      }
      goto LABEL_10;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v14 = v1;
LABEL_10:
  v0[116] = v5;
  v0[115] = v4;
  id v15 = [self localizedStringFromPersonNameComponents:v1 style:2 options:0];
  uint64_t v16 = sub_1000A4800();
  uint64_t v18 = v17;

  v0[117] = v16;
  v0[118] = v18;
  uint64_t v10 = sub_100019D4C;
  uint64_t v11 = v0 + 2;
  uint64_t v12 = v0 + 87;
  unsigned int v13 = v0 + 102;
LABEL_11:
  return _swift_asyncLet_finish(v11, v12, v10, v13);
}

uint64_t sub_100019D4C()
{
  return _swift_task_switch(sub_100019D68, 0, 0);
}

uint64_t sub_100019D68()
{
  long long v5 = *(_OWORD *)(v0 + 920);
  long long v6 = *(_OWORD *)(v0 + 936);
  uint64_t v1 = *(void *)(v0 + 912);
  uint64_t v2 = *(void *)(v0 + 760);
  swift_release_n();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v2 = v6;
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100019E0C()
{
  return _swift_task_switch(sub_100019E28, 0, 0);
}

uint64_t sub_100019E28()
{
  long long v5 = *(_OWORD *)(v0 + 896);
  uint64_t v1 = *(void *)(v0 + 912);
  uint64_t v2 = *(void *)(v0 + 760);
  swift_release_n();
  swift_task_dealloc();
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100019EC0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return _swift_task_switch(sub_100019EE0, 0, 0);
}

uint64_t sub_100019EE0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  uint64_t v4 = sub_100008704(&qword_1000CA658);
  *uint64_t v3 = v0;
  v3[1] = sub_100019FE4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000003ALL, 0x80000001000AAD20, sub_10001FAE4, v2, v4);
}

uint64_t sub_100019FE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10001A0FC, 0, 0);
}

uint64_t sub_10001A0FC()
{
  uint64_t v1 = *(_OWORD **)(v0 + 80);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 64);
  _OWORD *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  v1[2] = v3;
  v1[3] = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A128(uint64_t a1)
{
  *(void *)(v1 + 728) = a1;
  return _swift_task_switch(sub_10001A148, 0, 0);
}

uint64_t sub_10001A148()
{
  sub_1000086BC(&qword_1000CA618);
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 16, v0 + 696, sub_10001A1F8, v0 + 656);
}

uint64_t sub_10001A1F8()
{
  return _swift_task_switch(sub_10001A214, 0, 0);
}

uint64_t sub_10001A214()
{
  uint64_t v1 = (void *)v0[87];
  v0[92] = v0[88];
  v0[93] = v0[89];
  uint64_t v2 = (void *)v0[90];
  v0[94] = v2;
  if (v2) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = v1 == 0;
  }
  if (v3)
  {
    id v4 = v2;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10001A3A0;
  }
  else
  {
    long long v5 = self;
    swift_bridgeObjectRetain();
    id v6 = v1;
    id v7 = [v5 localizedStringFromPersonNameComponents:v6 style:2 options:0];
    uint64_t v8 = sub_1000A4800();
    uint64_t v10 = v9;

    v0[95] = v8;
    v0[96] = v10;
    uint64_t v11 = sub_10001A350;
  }
  return _swift_asyncLet_finish(v0 + 2, v0 + 87, v11, v0 + 82);
}

uint64_t sub_10001A350()
{
  return _swift_task_switch(sub_10001A36C, 0, 0);
}

uint64_t sub_10001A36C()
{
  uint64_t v1 = *(void *)(v0 + 768);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 728);
  long long v4 = *(_OWORD *)(v0 + 736);
  *(void *)uint64_t v3 = *(void *)(v0 + 760);
  *(void *)(v3 + 8) = v1;
  *(_OWORD *)(v3 + 16) = v4;
  *(void *)(v3 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A3A0()
{
  return _swift_task_switch(sub_10001A3BC, 0, 0);
}

uint64_t sub_10001A3BC()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 728);
  long long v3 = *(_OWORD *)(v0 + 736);
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(_OWORD *)(v2 + 16) = v3;
  *(void *)(v2 + 32) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A3E8(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  uint64_t v3 = sub_100008704(&qword_1000CA620);
  *uint64_t v2 = v1;
  v2[1] = sub_10001A4D0;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, 0, 0, 0xD000000000000030, 0x80000001000AACE0, sub_10001DD9C, 0, v3);
}

uint64_t sub_10001A4D0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10001A5CC, 0, 0);
}

uint64_t sub_10001A5CC()
{
  uint64_t v1 = *(_OWORD **)(v0 + 48);
  long long v2 = *(_OWORD *)(v0 + 32);
  _OWORD *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A5F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v3 = sub_100008704(&qword_1000CAAB0);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = swift_task_alloc();
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v3 + 48);
  return _swift_task_switch(sub_10001A698, 0, 0);
}

uint64_t sub_10001A698()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001A780;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001FLL, 0x80000001000AAB10, sub_10001E8A8, v2, v5);
}

uint64_t sub_10001A780()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10001A898, 0, 0);
}

uint64_t sub_10001A898()
{
  uint64_t v1 = *(int *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 32) + 48));
  sub_10000B920(*(void *)(v0 + 40), v2);
  *(void *)(v2 + v1) = v3;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10001A928(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 1712) = a2;
  *(void *)(v2 + 1384) = a1;
  uint64_t v3 = sub_1000A4460();
  *(void *)(v2 + 1432) = v3;
  *(void *)(v2 + 1480) = *(void *)(v3 - 8);
  *(void *)(v2 + 1528) = swift_task_alloc();
  *(void *)(v2 + 1576) = swift_task_alloc();
  uint64_t v4 = sub_1000A42E0();
  *(void *)(v2 + 1624) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v2 + 1632) = v5;
  *(void *)(v2 + 1640) = *(void *)(v5 + 64);
  *(void *)(v2 + 1648) = swift_task_alloc();
  *(void *)(v2 + 1656) = swift_task_alloc();
  return _swift_task_switch(sub_10001AA70, 0, 0);
}

uint64_t sub_10001AA70()
{
  uint64_t v1 = *(void *)(v0 + 1656);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1624);
  char v4 = *(unsigned char *)(v0 + 1712);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, *(void *)(v0 + 1384), v3);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1664) = v7;
  uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v22(v7 + v6, v1, v3);
  swift_retain();
  swift_asyncLet_begin();
  if (v4)
  {
    *(_OWORD *)(v0 + 1688) = 0u;
    uint64_t v8 = v0 + 16;
  }
  else
  {
    uint64_t v20 = v5;
    unint64_t v21 = v6;
    sub_1000A4440();
    uint64_t v9 = sub_1000A4450();
    os_log_type_t v10 = sub_1000A4A40();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "isForcedFolderSharing is false, so call doBRSharingRunCleanFolder", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 1648);
    uint64_t v13 = *(void *)(v0 + 1624);
    uint64_t v14 = *(void *)(v0 + 1576);
    uint64_t v15 = *(void *)(v0 + 1480);
    uint64_t v16 = *(void *)(v0 + 1432);
    uint64_t v17 = *(void *)(v0 + 1384);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v20(v12, v17, v13);
    uint64_t v18 = swift_allocObject();
    *(void *)(v0 + 1672) = v18;
    v22(v18 + v21, v12, v13);
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v8 = v0 + 656;
  }
  return _swift_asyncLet_get_throwing(v8);
}

uint64_t sub_10001AD20(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1680) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 1344;
    uint64_t v5 = sub_10001AF18;
  }
  else
  {
    uint64_t v4 = v3 + 1488;
    uint64_t v5 = sub_10001AD5C;
  }
  return _swift_asyncLet_finish(v3 + 656, a2, v5, v4);
}

uint64_t sub_10001AD5C()
{
  return _swift_task_switch(sub_10001AD78, 0, 0);
}

uint64_t sub_10001AD78()
{
  swift_release();
  v0[212] = v0[209];
  v0[211] = &unk_1000CA5D0;
  return _swift_asyncLet_get_throwing(v0 + 2);
}

uint64_t sub_10001AE04(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 1704) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 1584;
    uint64_t v5 = sub_10001B260;
  }
  else
  {
    uint64_t v4 = v3 + 1440;
    uint64_t v5 = sub_10001AE40;
  }
  return _swift_asyncLet_finish(v3 + 16, a2, v5, v4);
}

uint64_t sub_10001AE40()
{
  return _swift_task_switch(sub_10001AE5C, 0, 0);
}

uint64_t sub_10001AE5C()
{
  uint64_t v1 = *(void *)(v0 + 1688);
  swift_release_n();
  sub_10001F44C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001AF18()
{
  return _swift_task_switch(sub_10001AF34, 0, 0);
}

uint64_t sub_10001AF34()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v1, sub_10001AFA4, v0 + 1392);
}

uint64_t sub_10001AFA4()
{
  return _swift_task_switch(sub_10001AFC0, 0, 0);
}

uint64_t sub_10001AFC0()
{
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[167] = v5;
    sub_1000A4BC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "runFolderSharingPrepOperations clean or prep error: %@", v3, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[191];
  uint64_t v7 = v0[185];
  uint64_t v8 = v0[179];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000041;
  *(void *)(v10 + 8) = 0x80000001000AABC0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_release();
  sub_10001F44C((uint64_t)&unk_1000CA5D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10001B260()
{
  return _swift_task_switch(sub_10001B27C, 0, 0);
}

uint64_t sub_10001B27C()
{
  uint64_t v13 = v0[211];
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[167] = v5;
    sub_1000A4BC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "runFolderSharingPrepOperations clean or prep error: %@", v3, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[191];
  uint64_t v7 = v0[185];
  uint64_t v8 = v0[179];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000041;
  *(void *)(v10 + 8) = 0x80000001000AABC0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 40) = 3;
  swift_willThrow();
  swift_errorRelease();
  swift_release();
  sub_10001F44C(v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10001B50C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(sub_10001B52C, 0, 0);
}

uint64_t sub_10001B52C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001B618;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10001B618()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001FDA8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10001FDC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001B734(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(sub_10001B754, 0, 0);
}

uint64_t sub_10001B754()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001B844;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10001B844()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001B978;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10001B960;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001B960()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001B978()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10001B9DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v35 = a1;
  uint64_t v36 = sub_100008704(&qword_1000CA5D8);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v32 = v5;
  unsigned int v33 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v30 = sub_1000A42B0();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v31 = a2;
  v13(v12, a2, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  LODWORD(a2) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  id v15 = a3;
  uint64_t v16 = 0;
  if (a2 != 1)
  {
    sub_1000A4270(v14);
    uint64_t v16 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
  id v18 = [objc_allocWithZone((Class)BRShareUnshareOperation) initWithShare:v15 fileURL:v16];

  if (v18)
  {
    [v18 setQualityOfService:25];
    v13(&v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v31, v6);
    uint64_t v20 = v33;
    uint64_t v19 = v34;
    uint64_t v21 = v36;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 16))(v33, v35, v36);
    unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v23 = (v8 + *(unsigned __int8 *)(v19 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = v30;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v24 + v22, v9, v6);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v19 + 32))(v24 + v23, v20, v21);
    aBlock[4] = sub_10001F478;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BE6C;
    aBlock[3] = &unk_1000C2578;
    uint64_t v25 = _Block_copy(aBlock);
    swift_release();
    [v18 setUnshareCompletionBlock:v25];
    _Block_release(v25);
    if (qword_1000C9F40 != -1) {
      swift_once();
    }
    [(id)qword_1000CA580 addOperation:v18];
  }
  else
  {
    sub_1000A4800();
    id v26 = objc_allocWithZone((Class)NSError);
    NSString v27 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v28 = [v26 initWithDomain:v27 code:80 userInfo:0];

    aBlock[0] = v28;
    sub_1000A4960();
  }
}

void sub_10001BE6C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_10001BED8(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v32 = sub_100008704(&qword_1000CA5D8);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v29 = v3;
  id v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v28 = v7;
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v27 = sub_1000A42B0();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a2, v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    sub_1000A4270(v13);
    uint64_t v14 = v15;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  }
  id v16 = [objc_allocWithZone((Class)BRSharePrepFolderForSharing) initWithURL:v14];

  if (v16)
  {
    [v16 setQualityOfService:25];
    v12(v8, a2, v5);
    uint64_t v17 = v30;
    uint64_t v18 = v32;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v30 + 16))(v4, v31, v32);
    unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v20 = (v28 + *(unsigned __int8 *)(v17 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = v27;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v21 + v19, v8, v5);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v17 + 32))(v21 + v20, v4, v18);
    aBlock[4] = sub_10001F478;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BE6C;
    aBlock[3] = &unk_1000C23C0;
    unint64_t v22 = _Block_copy(aBlock);
    swift_release();
    [v16 setPrepFolderSharingCompletionBlock:v22];
    _Block_release(v22);
    if (qword_1000C9F40 != -1) {
      swift_once();
    }
    [(id)qword_1000CA580 addOperation:v16];
  }
  else
  {
    sub_1000A4800();
    id v23 = objc_allocWithZone((Class)NSError);
    NSString v24 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v25 = [v23 initWithDomain:v24 code:80 userInfo:0];

    aBlock[0] = v25;
    sub_1000A4960();
  }
}

void sub_10001C35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = sub_100008704(&qword_1000CA5D8);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v31 = v4;
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v30 = v8;
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v29 = sub_1000A42B0();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  v13(v12, a2, v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  id v15 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
  {
    sub_1000A4270(v14);
    id v15 = v16;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
  }
  id v17 = objc_allocWithZone((Class)BRShareProcessSubitems);
  id v18 = [v17 initWithURL:v15 processType:v33];

  if (v18)
  {
    [v18 setQualityOfService:25];
    [v18 setMaxSharedSubitemsBeforeFailure:4];
    v13(v9, a2, v6);
    uint64_t v19 = v32;
    uint64_t v20 = v35;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v32 + 16))(v5, v34, v35);
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v22 = (v30 + *(unsigned __int8 *)(v19 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = v29;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v23 + v21, v9, v6);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v19 + 32))(v23 + v22, v5, v20);
    aBlock[4] = sub_10001F478;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BE6C;
    aBlock[3] = &unk_1000C2410;
    NSString v24 = _Block_copy(aBlock);
    swift_release();
    [v18 setProcessSubitemsCompletionBlock:v24];
    _Block_release(v24);
    if (qword_1000C9F40 != -1) {
      swift_once();
    }
    [(id)qword_1000CA580 addOperation:v18];
  }
  else
  {
    sub_1000A4800();
    id v25 = objc_allocWithZone((Class)NSError);
    NSString v26 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v27 = [v25 initWithDomain:v26 code:80 userInfo:0];

    aBlock[0] = v27;
    sub_1000A4960();
  }
}

uint64_t sub_10001C7F8(uint64_t a1, char a2)
{
  if (a2) {
    sub_1000A4290();
  }
  if (a1)
  {
    swift_errorRetain();
    sub_100008704(&qword_1000CA5D8);
    return sub_1000A4960();
  }
  else
  {
    sub_100008704(&qword_1000CA5D8);
    return sub_1000A4970();
  }
}

void sub_10001C880(uint64_t a1, uint64_t a2, void *a3)
{
  id v37 = a3;
  uint64_t v38 = a1;
  uint64_t v39 = sub_100008704(&qword_1000CA5A8);
  uint64_t v4 = *(void *)(v39 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v36 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  uint64_t v6 = *(void *)(v34 + 64);
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v35 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v32[-v9];
  __chkstk_darwin(v8);
  uint64_t v12 = &v32[-v11];
  sub_10001F904(a2, (uint64_t)&v32[-v11], &qword_1000CA3B0);
  uint64_t v13 = sub_1000A42E0();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13) == 1)
  {
    sub_10000B988((uint64_t)v12, &qword_1000CA3B0);
    BOOL v33 = 0;
  }
  else
  {
    BOOL v33 = sub_1000A42B0();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v12, v13);
  }
  sub_10001F904(a2, (uint64_t)v10, &qword_1000CA3B0);
  unsigned int v16 = v15(v10, 1, v13);
  id v18 = v37;
  if (v16 == 1)
  {
    uint64_t v19 = 0;
  }
  else
  {
    sub_1000A4270(v17);
    uint64_t v19 = v20;
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v10, v13);
  }
  id v21 = [objc_allocWithZone((Class)BRShareSaveOperation) initWithShare:v18 fileURL:v19];

  if (v21)
  {
    [v21 setQualityOfService:25];
    unint64_t v22 = v35;
    sub_10001F904(a2, (uint64_t)v35, &qword_1000CA3B0);
    uint64_t v23 = v36;
    uint64_t v24 = v39;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v36, v38, v39);
    unint64_t v25 = (*(unsigned __int8 *)(v34 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    unint64_t v26 = (v6 + *(unsigned __int8 *)(v4 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = v33;
    sub_10000B920((uint64_t)v22, v27 + v25);
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v27 + v26, v23, v24);
    unint64_t v44 = sub_10001F194;
    uint64_t v45 = v27;
    aBlock = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256;
    int v42 = sub_10001CED0;
    uint64_t v43 = &unk_1000C2320;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_release();
    [v21 setShareSaveCompletionBlock:v28];
    _Block_release(v28);
    if (qword_1000C9F40 != -1) {
      swift_once();
    }
    [(id)qword_1000CA580 addOperation:v21];
  }
  else
  {
    sub_1000A4800();
    id v29 = objc_allocWithZone((Class)NSError);
    NSString v30 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v31 = [v29 initWithDomain:v30 code:80 userInfo:0];

    aBlock = 0;
    uint64_t v41 = (uint64_t)v31;
    sub_1000A4970();
  }
}

uint64_t sub_10001CD60(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin();
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (char *)v16 - v9;
  if (a3)
  {
    sub_10001F904(a4, (uint64_t)v16 - v9, &qword_1000CA3B0);
    uint64_t v11 = sub_1000A42E0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1000A4290();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      if (a2) {
        goto LABEL_5;
      }
LABEL_7:
      uint64_t v13 = 0;
      goto LABEL_8;
    }
    sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  }
  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v13 = sub_1000A4230();
LABEL_8:
  v16[0] = a1;
  v16[1] = v13;
  id v14 = a1;
  sub_100008704(&qword_1000CA5A8);
  return sub_1000A4970();
}

void sub_10001CED0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10001CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a1;
  uint64_t v45 = sub_100008704(&qword_1000CA5F8);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v41 = v3;
  int v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A42E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100008704(&qword_1000CA398);
  __chkstk_darwin(v37);
  uint64_t v36 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - v11;
  BOOL v38 = sub_1000A42B0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v40 = a2;
  v13(v12, a2, v4);
  id v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v14(v12, 0, 1, v4);
  unsigned int v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) != 1)
  {
    sub_1000A4270(v15);
    unsigned int v16 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
  }
  id v18 = [objc_allocWithZone((Class)BRShareCopyOperation) initWithURL:v16];

  if (v18)
  {
    [v18 setQualityOfService:25];
    uint64_t v19 = v39;
    v13(v39, v40, v4);
    id v21 = v42;
    uint64_t v20 = v43;
    uint64_t v22 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v44, v45);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v24 = (v6 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = v38;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v23, v19, v4);
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v21, v22);
    aBlock[4] = sub_10001F60C;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001D5E8;
    aBlock[3] = &unk_1000C2460;
    unint64_t v26 = _Block_copy(aBlock);
    swift_release();
    [v18 setRootShareCopyCompletionBlock:v26];
    _Block_release(v26);
    if (qword_1000C9F40 != -1) {
      swift_once();
    }
    [(id)qword_1000CA580 addOperation:v18];
  }
  else
  {
    uint64_t v27 = (uint64_t)v35;
    v14(v35, 1, 1, v4);
    sub_1000A4800();
    id v28 = objc_allocWithZone((Class)NSError);
    NSString v29 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v30 = [v28 initWithDomain:v29 code:80 userInfo:0];

    id v31 = v36;
    uint64_t v32 = (uint64_t)v36 + *(int *)(v37 + 48);
    uint64_t v33 = *(int *)(v37 + 64);
    void *v36 = 0;
    sub_10000B920(v27, v32);
    *(void *)((char *)v31 + v33) = v30;
    sub_1000A4970();
  }
}

uint64_t sub_10001D488(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA398);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4) {
    sub_1000A4290();
  }
  sub_10001F904(a2, (uint64_t)v13, &qword_1000CA3B0);
  if (a3) {
    uint64_t v14 = sub_1000A4230();
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = (uint64_t)v10 + *(int *)(v8 + 48);
  uint64_t v16 = *(int *)(v8 + 64);
  *uint64_t v10 = a1;
  sub_10000B920((uint64_t)v13, v15);
  *(void *)((char *)v10 + v16) = v14;
  id v17 = a1;
  sub_100008704(&qword_1000CA5F8);
  return sub_1000A4970();
}

uint64_t sub_10001D5E8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(void *, char *, void *))(a1 + 32);
  if (a3)
  {
    sub_1000A42A0();
    uint64_t v12 = sub_1000A42E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1000A42E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a2;
  id v15 = a4;
  v11(a2, v10, a4);

  swift_release();
  return sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
}

void sub_10001D750(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v3 = sub_100008704((uint64_t *)&unk_1000CA660);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v19 = sub_1000A42B0();
  sub_1000A4270(v10);
  id v21 = v11;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v12 = v3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(&v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v20, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v14 = (v8 + *(unsigned __int8 *)(v4 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v19;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v15 + v13, v9, v6);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v15 + v14, &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  aBlock[4] = sub_10001FAF8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001DBA4;
  aBlock[3] = &unk_1000C2528;
  uint64_t v16 = _Block_copy(aBlock);
  swift_release();
  uint64_t v17 = v21;
  BRSharingCopyCurrentUserNameAndDisplayHandleForURL();
  _Block_release(v16);
}

uint64_t sub_10001D9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v23 = a4;
  uint64_t v24 = a6;
  uint64_t v15 = sub_100008704(&qword_1000CA638);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a9) {
    sub_1000A4290();
  }
  sub_10001F904(a1, (uint64_t)v17, &qword_1000CA638);
  uint64_t v18 = sub_1000A41B0();
  uint64_t v19 = *(void *)(v18 - 8);
  Class v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    Class v20 = sub_1000A4190();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  if (a8) {
    uint64_t v21 = sub_1000A4230();
  }
  else {
    uint64_t v21 = 0;
  }
  Class v25 = v20;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = v23;
  uint64_t v29 = a5;
  uint64_t v30 = v24;
  uint64_t v31 = a7;
  uint64_t v32 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100008704((uint64_t *)&unk_1000CA660);
  return sub_1000A4970();
}

uint64_t sub_10001DBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = sub_100008704(&qword_1000CA638);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000A41A0();
    uint64_t v15 = sub_1000A41B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = sub_1000A41B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  }
  if (a3)
  {
    uint64_t v17 = sub_1000A4800();
    a3 = v18;
    if (a4) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v19 = 0;
    if (a5) {
      goto LABEL_7;
    }
LABEL_10:
    uint64_t v21 = 0;
    goto LABEL_11;
  }
  uint64_t v17 = 0;
  if (!a4) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v19 = sub_1000A4800();
  a4 = v20;
  if (!a5) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v21 = sub_1000A4800();
  a5 = v22;
LABEL_11:
  swift_retain();
  id v23 = a6;
  v26(v14, v17, a3, v19, a4, v21, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10000B988((uint64_t)v14, &qword_1000CA638);
}

void sub_10001DD9C(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA628);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  sub_10001F798(0, (unint64_t *)&qword_1000CA630);
  uint64_t v5 = (void *)sub_1000A4A80();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10001F868;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001E0D0;
  aBlock[3] = &unk_1000C24B0;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  BRSharingCopyCurrentUserNameAndDisplayHandle();
  _Block_release(v8);
}

uint64_t sub_10001DF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA638);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001F904(a1, (uint64_t)v10, &qword_1000CA638);
  uint64_t v11 = sub_1000A41B0();
  uint64_t v12 = *(void *)(v11 - 8);
  Class v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    Class v13 = sub_1000A4190();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a4) {
    uint64_t v14 = sub_1000A4230();
  }
  else {
    uint64_t v14 = 0;
  }
  v16[0] = v13;
  v16[1] = a2;
  void v16[2] = a3;
  v16[3] = v14;
  swift_bridgeObjectRetain();
  sub_100008704(&qword_1000CA628);
  return sub_1000A4970();
}

uint64_t sub_10001E0D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA638);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000A41A0();
    uint64_t v12 = sub_1000A41B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_1000A41B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  if (a3)
  {
    uint64_t v14 = sub_1000A4800();
    a3 = v15;
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_retain();
  id v16 = a4;
  v11(v10, v14, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return sub_10000B988((uint64_t)v10, &qword_1000CA638);
}

void sub_10001E250(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v58 = sub_100008704(&qword_1000CA590);
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v54 = v3;
  unsigned int v55 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A42E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v52 = v6;
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008704(&qword_1000CAAB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008704(&qword_1000CA3B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v46 - v14;
  BOOL v51 = sub_1000A42B0();
  sub_1000A4270(v16);
  uint64_t v18 = v17;
  aBlock[0] = 0;
  id v19 = objc_msgSend(v17, "br_typeIdentifierWithError:", aBlock);

  id v20 = aBlock[0];
  if (v19)
  {
    uint64_t v46 = v7;
    unsigned int v47 = v13;
    unsigned int v48 = v9;
    uint64_t v50 = sub_1000A4800();
    id v21 = v20;

    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v49(v15, a2, v4);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v15, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4) == 1)
    {
      uint64_t v24 = 0;
    }
    else
    {
      sub_1000A4270(v23);
      uint64_t v24 = v28;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    }
    id v29 = objc_allocWithZone((Class)BRShareCopyShareURLOperation);
    NSString v30 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v31 = [v29 initWithFileURL:v24 documentType:v30];

    if (v31)
    {
      [v31 setQualityOfService:25];
      uint64_t v32 = v53;
      v49(v53, a2, v4);
      uint64_t v34 = v55;
      uint64_t v33 = v56;
      uint64_t v35 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v57, v58);
      unint64_t v36 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      unint64_t v37 = (v52 + *(unsigned __int8 *)(v33 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      BOOL v38 = (unsigned char *)swift_allocObject();
      v38[16] = v51;
      (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 32))(&v38[v36], v32, v4);
      (*(void (**)(unsigned char *, char *, uint64_t))(v33 + 32))(&v38[v37], v34, v35);
      aBlock[4] = sub_10001EA04;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10001EAF0;
      aBlock[3] = &unk_1000C22D0;
      uint64_t v39 = _Block_copy(aBlock);
      swift_release();
      [v31 setCopyShareURLCompletionBlock:v39];
      _Block_release(v39);
      if (qword_1000C9F40 != -1) {
        swift_once();
      }
      [(id)qword_1000CA580 addOperation:v31];
    }
    else
    {
      uint64_t v40 = (uint64_t)v47;
      v22(v47, 1, 1, v4);
      sub_1000A4800();
      id v41 = objc_allocWithZone((Class)NSError);
      NSString v42 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v43 = [v41 initWithDomain:v42 code:80 userInfo:0];

      uint64_t v44 = *(int *)(v46 + 48);
      uint64_t v45 = (uint64_t)v48;
      sub_10000B920(v40, (uint64_t)v48);
      *(void *)(v45 + v44) = v43;
      sub_1000A4970();
    }
  }
  else
  {
    id v25 = aBlock[0];
    sub_1000A4240();

    swift_willThrow();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
    uint64_t v26 = sub_1000A4230();
    uint64_t v27 = *(int *)(v7 + 48);
    sub_10000B920((uint64_t)v13, (uint64_t)v9);
    *(void *)&v9[v27] = v26;
    sub_1000A4970();
    swift_errorRelease();
  }
}

void sub_10001E8A8(uint64_t a1)
{
  sub_10001E250(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001E8B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_100008704(&qword_1000CAAB0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    sub_1000A4290();
  }
  sub_10001F904(a1, (uint64_t)v11, &qword_1000CA3B0);
  if (a2) {
    uint64_t v12 = sub_1000A4230();
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  sub_10000B920((uint64_t)v11, (uint64_t)v8);
  *(void *)&v8[v13] = v12;
  sub_100008704(&qword_1000CA590);
  return sub_1000A4970();
}

uint64_t sub_10001E9F8()
{
  return sub_10001FC34(&qword_1000CA590);
}

uint64_t sub_10001EA04(uint64_t a1, uint64_t a2)
{
  sub_1000A42E0();
  sub_100008704(&qword_1000CA590);
  char v5 = *(unsigned char *)(v2 + 16);

  return sub_10001E8B0(a1, a2, v5);
}

uint64_t sub_10001EAF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1000A42A0();
    uint64_t v10 = sub_1000A42E0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1000A42E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_10000B988((uint64_t)v8, &qword_1000CA3B0);
}

uint64_t sub_10001EC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001EC48()
{
  return swift_release();
}

uint64_t sub_10001EC50(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1000A4270(v7);
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  id v10 = [self accountDescriptorForURL:v8 mustBeLoggedIn:1];

  if (!v10) {
    return 0;
  }
  id v11 = [v10 accountIdentifier];
  if (!v11)
  {

    return 0;
  }
  id v12 = v11;
  uint64_t v13 = sub_1000A4800();

  return v13;
}

uint64_t sub_10001EE0C()
{
  uint64_t v0 = self;
  if (![v0 mightHaveDataSeparatedAccountDescriptor]) {
    return 0;
  }
  id v1 = [v0 allLoggedInAccountDescriptors];
  if (!v1) {
    return 0;
  }
  sub_10001F798(0, &qword_1000CA598);
  unint64_t v2 = sub_1000A4910();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_5;
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000A4CE0();
  if (!v3) {
    goto LABEL_20;
  }
LABEL_5:
  for (uint64_t i = 4; ; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_1000A4C60();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i);
    }
    uint64_t v6 = v5;
    uint64_t v7 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if ([v5 isDataSeparated]) {
      break;
    }

    if (v7 == v3)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  id v9 = [v6 accountIdentifier];

  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_1000A4800();

  return v8;
}

void sub_10001EFCC(uint64_t a1)
{
  sub_10001C880(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10001EFD4()
{
  uint64_t v1 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100008704(&qword_1000CA5A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1000A42E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  uint64_t v10 = (v3 + v13 + v6) & ~v6;
  uint64_t v11 = v10 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v11, v2 | v6 | 7);
}

uint64_t sub_10001F194(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_100008704(&qword_1000CA5A8);
  char v7 = *(unsigned char *)(v2 + 16);

  return sub_10001CD60(a1, a2, v7, v2 + v6);
}

uint64_t sub_10001F288()
{
  uint64_t v2 = *(void *)(sub_1000A42E0() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10001FD88;
  v4[2] = v3;
  return _swift_task_switch(sub_10001B52C, 0, 0);
}

uint64_t sub_10001F36C()
{
  uint64_t v2 = *(void *)(sub_1000A42E0() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10000B7A4;
  v4[2] = v3;
  return _swift_task_switch(sub_10001B754, 0, 0);
}

uint64_t sub_10001F44C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_10001F45C(uint64_t a1)
{
  sub_10001C35C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10001F464(uint64_t a1)
{
  sub_10001BED8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001F46C()
{
  return sub_10001FC34(&qword_1000CA5D8);
}

uint64_t sub_10001F47C()
{
  return sub_10001FC34(&qword_1000CA5D8);
}

uint64_t sub_10001F488(uint64_t a1)
{
  sub_1000A42E0();
  sub_100008704(&qword_1000CA5D8);
  return sub_10001C7F8(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_10001F558(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001FD88;
  return sub_10001960C(a1, v4);
}

void sub_10001F5F8(uint64_t a1)
{
  sub_10001CF5C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001F600()
{
  return sub_10001FC34(&qword_1000CA5F8);
}

uint64_t sub_10001F60C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000A42E0();
  sub_100008704(&qword_1000CA5F8);
  char v7 = *(unsigned char *)(v3 + 16);

  return sub_10001D488(a1, a2, a3, v7);
}

uint64_t sub_10001F700(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001FD88;
  return sub_10001A3E8(a1);
}

uint64_t sub_10001F798(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10001F7D4()
{
  uint64_t v1 = sub_100008704(&qword_1000CA628);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001F868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100008704(&qword_1000CA628);

  return sub_10001DF60(a1, a2, a3, a4);
}

uint64_t sub_10001F904(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008704(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001F96C()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10001F9FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10001FD88;
  v6[10] = a1;
  v6[11] = v5;
  return _swift_task_switch(sub_100019EE0, 0, 0);
}

void sub_10001FAE4(uint64_t a1)
{
  sub_10001D750(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001FAEC()
{
  return sub_10001FC34((uint64_t *)&unk_1000CA660);
}

uint64_t sub_10001FAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000A42E0();
  sub_100008704((uint64_t *)&unk_1000CA660);
  return sub_10001D9EC(a1, a2, a3, a4, a5, a6, a7, a8, *(unsigned char *)(v8 + 16));
}

uint64_t sub_10001FC28()
{
  return sub_10001FC34(&qword_1000CA5D8);
}

uint64_t sub_10001FC34(uint64_t *a1)
{
  uint64_t v3 = sub_1000A42E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 17) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = sub_100008704(a1);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v6 + v7 + v10) & ~v10;
  uint64_t v12 = v11 + *(void *)(v9 + 64);
  uint64_t v13 = v5 | v10 | 7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1 + v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1 + v11, v8);

  return _swift_deallocObject(v1, v12, v13);
}

uint64_t sub_10001FDCC()
{
  return sub_10002EB50();
}

unint64_t sub_10001FDE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008704(&qword_1000CAB40);
  uint64_t v2 = (void *)sub_1000A4D10();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10003D5FC(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10001FEF0(uint64_t a1)
{
  return sub_10001FEFC(a1, &qword_1000CB0C8);
}

unint64_t sub_10001FEFC(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008704(a2);
  uint64_t v3 = (void *)sub_1000A4D10();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  char v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_10003D684(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100020014(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008704(&qword_1000CAB50);
  uint64_t v2 = sub_1000A4D10();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001F904(v6, (uint64_t)&v15, &qword_1000CAB58);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10003D684(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10003FBE0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10002014C(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_1000A42E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  switch(v31)
  {
    case 1:
      goto LABEL_17;
    case 2:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 8;
      goto LABEL_4;
    case 3:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 9;
      goto LABEL_4;
    case 4:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 10;
      goto LABEL_4;
    case 5:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 11;
      goto LABEL_4;
    case 9:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000A4560();
        swift_release();
        swift_release();
        swift_release();
        id v20 = v30;
        unint64_t v21 = sub_10009BD7C(v11, v30);
        uint64_t v23 = v22;

        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v11, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
        LOBYTE(v20) = sub_10009C6AC(v21, v23, (uint64_t)v5);
        swift_bridgeObjectRelease();
        sub_10000B988((uint64_t)v5, &qword_1000CA3B0);
        switch((char)v20)
        {
          case 1:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 1;
            goto LABEL_52;
          case 2:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 2;
            goto LABEL_52;
          case 3:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 3;
            goto LABEL_52;
          case 4:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 4;
            goto LABEL_52;
          case 5:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 5;
            goto LABEL_52;
          case 6:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 6;
            goto LABEL_52;
          case 7:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 7;
            goto LABEL_52;
          case 8:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 8;
            goto LABEL_52;
          case 9:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 9;
            goto LABEL_52;
          case 10:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 10;
            goto LABEL_52;
          case 11:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 11;
            goto LABEL_52;
          case 12:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 12;
            goto LABEL_52;
          case 13:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            unint64_t v25 = sub_10003D5FC(13);
            if (v28) {
              goto LABEL_53;
            }
            id v29 = *(void (**)(char *, uint64_t))(v9 + 8);
            v9 += 8;
            v29(v11, v8);
            if (*(void *)(a1 + 16)) {
              goto LABEL_6;
            }
            __break(1u);
LABEL_58:
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
            goto LABEL_5;
          default:
            if (!*(void *)(a1 + 16)) {
              goto LABEL_58;
            }
            char v24 = 0;
LABEL_52:
            unint64_t v25 = sub_10003D5FC(v24);
            if ((v26 & 1) == 0) {
              goto LABEL_58;
            }
LABEL_53:
            uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 16 * v25);
            uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
            swift_bridgeObjectRetain();
            v27(v11, v8);
            return v16;
        }
      }
      sub_10000B988((uint64_t)v7, &qword_1000CA3B0);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_61;
      }
      unint64_t v13 = sub_10003D5FC(1);
      if (v18) {
        goto LABEL_7;
      }
      if (!*(void *)(a1 + 16)) {
        goto LABEL_61;
      }
      unint64_t v13 = sub_10003D5FC(13);
      if (v19) {
        goto LABEL_7;
      }
      __break(1u);
LABEL_17:
      if (*(void *)(a1 + 16))
      {
        char v12 = 7;
LABEL_4:
        unint64_t v13 = sub_10003D5FC(v12);
        if (v14) {
          goto LABEL_7;
        }
      }
LABEL_5:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_60;
      }
LABEL_6:
      unint64_t v13 = sub_10003D5FC(13);
      if ((v15 & 1) == 0)
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        JUMPOUT(0x1000206A4);
      }
LABEL_7:
      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 16 * v13);
      swift_bridgeObjectRetain();
      return v16;
    default:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_5;
      }
      char v12 = 13;
      goto LABEL_4;
  }
}

uint64_t sub_100020704()
{
  return sub_10002E714();
}

uint64_t sub_100020718()
{
  uint64_t v0 = sub_1000A4460();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1000A4180();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008704(&qword_1000CA678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6410;
  *(void *)(inited + 32) = NSURLLocalizedNameKey;
  uint64_t v6 = NSURLLocalizedNameKey;
  uint64_t v7 = sub_10003DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v7, (uint64_t)v4);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1000A4120();
  if (v9)
  {
    uint64_t v10 = result;
    unint64_t v11 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v10 == sub_1000A4260() && v11 == v12)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return v10;
      }
    }
    v35._countAndFlagsBits = sub_1000A4250();
    uint64_t v31 = 46;
    unint64_t v32 = 0xE100000000000000;
    sub_1000A4880(v35);
    swift_bridgeObjectRelease();
    uint64_t v16 = v31;
    unint64_t v15 = v32;
    uint64_t v17 = HIBYTE(v32) & 0xF;
    if ((v32 & 0x2000000000000000) == 0) {
      uint64_t v17 = v31 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17) {
      goto LABEL_14;
    }
    uint64_t v18 = sub_1000A4850();
    if (sub_1000A4850() >= v18) {
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1000A4850();
    unint64_t v20 = sub_10003E898(v19, v10, v11);
    unint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v31 = v20;
    unint64_t v32 = v22;
    uint64_t v33 = v24;
    uint64_t v34 = v26;
    v30[2] = v16;
    v30[3] = v15;
    sub_100041398();
    sub_10000E598();
    uint64_t v27 = sub_1000A4C00();
    swift_bridgeObjectRelease();
    if (v27)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000A4850();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1000A4850();
    swift_bridgeObjectRelease();
    uint64_t result = v28 - v29;
    if (!__OFSUB__(v28, v29))
    {
      sub_10003E954(result);
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1000A4830();
      goto LABEL_14;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100020C6C()
{
  return sub_10002E7AC();
}

uint64_t sub_100020C80()
{
  return sub_10002E7AC();
}

uint64_t sub_100020C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100008704(&qword_1000CB000);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000A49C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_10001F904(a5, (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000CB000);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = a3;
  v18[5] = a4;
  sub_1000409B0((uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v18 + v17, &qword_1000CB000);
  unint64_t v19 = (void *)((char *)v18 + ((v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v19 = a1;
  v19[1] = a2;
  swift_retain();
  swift_retain();
  sub_1000210F4((uint64_t)v15, (uint64_t)&unk_1000CB010, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_100020E7C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  uint64_t v12 = (int *)((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[5] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_100020F6C;
  return ((uint64_t (*)(void *, uint64_t))v12)(v8 + 2, a6);
}

uint64_t sub_100020F6C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100021068, 0, 0);
}

uint64_t sub_100021068()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void (*)(id *))v0[3];
  id v5 = (id)v0[2];
  char v6 = 0;
  id v2 = v5;
  v1(&v5);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000210F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A49C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000A49B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000B988(a1, &qword_1000CAB08);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000A4950();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

BOOL sub_1000212A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (!v3) {
    return 0;
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (!v2) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  return v1 != 0;
}

uint64_t sub_1000213E0()
{
  return sub_10002E7AC();
}

uint64_t sub_1000213F4(uint64_t a1)
{
  uint64_t v422 = *v1;
  uint64_t v444 = sub_100008704(&qword_1000CAB70);
  uint64_t v443 = *(void *)(v444 - 8);
  __chkstk_darwin(v444);
  v442 = (char *)&v304 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v447 = sub_100008704(&qword_1000CAB78);
  uint64_t v446 = *(void *)(v447 - 8);
  __chkstk_darwin(v447);
  v445 = (char *)&v304 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v450 = sub_100008704(&qword_1000CAB80);
  uint64_t v449 = *(void *)(v450 - 8);
  __chkstk_darwin(v450);
  v448 = (char *)&v304 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v436 = sub_100008704(&qword_1000CAB88);
  uint64_t v435 = *(void *)(v436 - 8);
  __chkstk_darwin(v436);
  v433 = (char *)&v304 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v437 = sub_100008704(&qword_1000CAB90);
  __chkstk_darwin(v437);
  v434 = (char *)&v304 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v441 = sub_100008704(&qword_1000CAB98);
  uint64_t v438 = *(void *)(v441 - 8);
  uint64_t v8 = __chkstk_darwin(v441);
  v439 = (char *)&v304 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v440 = (char *)&v304 - v10;
  uint64_t v427 = sub_100008704(&qword_1000CABA0);
  __chkstk_darwin(v427);
  v425 = (char *)&v304 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v429 = sub_100008704(&qword_1000CABA8);
  uint64_t v428 = *(void *)(v429 - 8);
  __chkstk_darwin(v429);
  v426 = (char *)&v304 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v432 = sub_100008704(&qword_1000CABB0);
  uint64_t v431 = *(void *)(v432 - 8);
  __chkstk_darwin(v432);
  v430 = (char *)&v304 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v424 = sub_100008704(&qword_1000CABB8);
  uint64_t v423 = *(void *)(v424 - 8);
  uint64_t v14 = __chkstk_darwin(v424);
  v420 = (char *)&v304 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v421 = (char *)&v304 - v16;
  uint64_t v417 = sub_100008704(&qword_1000CABC0);
  uint64_t v415 = *(void *)(v417 - 8);
  __chkstk_darwin(v417);
  v414 = (char *)&v304 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = sub_100008704(&qword_1000CABC8);
  uint64_t v408 = *(void *)(v409 - 8);
  __chkstk_darwin(v409);
  v406 = (char *)&v304 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = sub_100008704(&qword_1000CABD0);
  uint64_t v19 = __chkstk_darwin(v410);
  v407 = (char *)&v304 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v405 = (char *)&v304 - v21;
  uint64_t v413 = sub_100008704(&qword_1000CABD8);
  uint64_t v412 = *(void *)(v413 - 8);
  __chkstk_darwin(v413);
  v411 = (char *)&v304 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v419 = sub_100008704(&qword_1000CABE0);
  uint64_t v418 = *(void *)(v419 - 8);
  __chkstk_darwin(v419);
  v416 = (char *)&v304 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v404 = sub_100008704(&qword_1000CABE8);
  uint64_t v403 = *(void *)(v404 - 8);
  __chkstk_darwin(v404);
  v402 = (char *)&v304 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v401 = sub_100008704(&qword_1000CABF0);
  uint64_t v400 = *(void *)(v401 - 8);
  __chkstk_darwin(v401);
  v399 = (char *)&v304 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = sub_100008704(&qword_1000CABF8);
  uint64_t v397 = *(void *)(v398 - 8);
  __chkstk_darwin(v398);
  v396 = (char *)&v304 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = sub_100008704(&qword_1000CAC00);
  uint64_t v394 = *(void *)(v395 - 8);
  __chkstk_darwin(v395);
  v393 = (char *)&v304 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v392 = sub_100008704(&qword_1000CAC08);
  uint64_t v391 = *(void *)(v392 - 8);
  __chkstk_darwin(v392);
  v390 = (char *)&v304 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = sub_100008704(&qword_1000CAC10);
  uint64_t v388 = *(void *)(v389 - 8);
  __chkstk_darwin(v389);
  v387 = (char *)&v304 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = sub_100008704(&qword_1000CAC18);
  uint64_t v374 = *(void *)(v375 - 8);
  __chkstk_darwin(v375);
  v373 = (char *)&v304 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v383 = sub_100008704(&qword_1000CAC20);
  uint64_t v382 = *(void *)(v383 - 8);
  __chkstk_darwin(v383);
  v381 = (char *)&v304 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_100008704(&qword_1000CAC28);
  uint64_t v369 = *(void *)(v370 - 8);
  __chkstk_darwin(v370);
  v367 = (char *)&v304 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v378 = sub_100008704(&qword_1000CAC30);
  uint64_t v377 = *(void *)(v378 - 8);
  __chkstk_darwin(v378);
  v376 = (char *)&v304 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v372 = sub_100008704(&qword_1000CAC38);
  uint64_t v371 = *(void *)(v372 - 8);
  __chkstk_darwin(v372);
  v466 = (char *)&v304 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_100008704(&qword_1000CAC40);
  __chkstk_darwin(v379);
  v380 = (char *)&v304 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v386 = sub_100008704(&qword_1000CAC48);
  uint64_t v385 = *(void *)(v386 - 8);
  __chkstk_darwin(v386);
  v384 = (char *)&v304 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v465 = sub_100008704(&qword_1000CAC50);
  uint64_t v368 = *(void *)(v465 - 8);
  uint64_t v37 = __chkstk_darwin(v465);
  v365 = (char *)&v304 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v366 = (char *)&v304 - v39;
  uint64_t v488 = sub_100008704(&qword_1000CAC58);
  uint64_t v467 = *(void *)(v488 - 8);
  __chkstk_darwin(v488);
  v487 = (char *)&v304 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_100008704(&qword_1000CAC60);
  uint64_t v359 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  v358 = (char *)&v304 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_100008704(&qword_1000CAC68);
  uint64_t v362 = *(void *)(v363 - 8);
  __chkstk_darwin(v363);
  v361 = (char *)&v304 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100008704(&qword_1000CAC70);
  __chkstk_darwin(v43 - 8);
  v502 = (char *)&v304 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v483 = sub_100008704(&qword_1000CAC78);
  uint64_t v497 = *(void *)(v483 - 8);
  __chkstk_darwin(v483);
  v364 = (char *)&v304 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v463 = sub_100008704(&qword_1000CAC80);
  uint64_t v462 = *(void *)(v463 - 8);
  __chkstk_darwin(v463);
  v461 = (char *)&v304 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = sub_100008704(&qword_1000CAC88);
  v356 = *(void (***)(char *, uint64_t))(v455 - 8);
  __chkstk_darwin(v455);
  v355 = (char *)&v304 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v485 = sub_100008704(&qword_1000CAC90);
  uint64_t v498 = *(void *)(v485 - 8);
  uint64_t v48 = __chkstk_darwin(v485);
  v479 = (char *)&v304 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v484 = (char *)&v304 - v50;
  uint64_t v51 = sub_100008704(&qword_1000CAC98);
  uint64_t v490 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  v472 = (char *)&v304 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v475 = sub_100008704(&qword_1000CACA0);
  __chkstk_darwin(v475);
  v491 = (char *)&v304 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v353 = (void *)sub_100008704(&qword_1000CACA8);
  uint64_t v352 = *(v353 - 1);
  __chkstk_darwin(v353);
  v351 = (char *)&v304 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v478 = sub_100008704(&qword_1000CACB0);
  uint64_t v55 = __chkstk_darwin(v478);
  v457 = (char *)&v304 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v451 = (void (*)(char *, uint64_t))((char *)&v304 - v57);
  uint64_t v470 = sub_100008704(&qword_1000CACB8);
  uint64_t v489 = *(void *)(v470 - 8);
  __chkstk_darwin(v470);
  v469 = (char *)&v304 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v471 = sub_100008704(&qword_1000CACC0);
  __chkstk_darwin(v471);
  v499 = (char *)&v304 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v454 = sub_100008704(&qword_1000CACC8);
  unint64_t v452 = *(void *)(v454 - 8);
  __chkstk_darwin(v454);
  v354 = (char *)&v304 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v477 = (void (*)(void))sub_100008704(&qword_1000CACD0);
  v456 = (void (**)(char *, void (*)(void)))*((void *)v477 - 1);
  __chkstk_darwin(v477);
  v453 = (char *)&v304 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v480 = (void *)sub_100008704(&qword_1000CACD8);
  uint64_t v350 = *(v480 - 1);
  __chkstk_darwin(v480);
  v349 = (char *)&v304 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v348 = sub_100008704(&qword_1000CACE0);
  v347 = *(void (**)(char *, uint64_t))(v348 - 8);
  __chkstk_darwin(v348);
  v344 = (char *)&v304 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_100008704(&qword_1000CACE8);
  v345 = *(void (**)(uint64_t, char *, uint64_t))(v346 - 8);
  __chkstk_darwin(v346);
  v343 = (char *)&v304 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v468 = sub_100008704(&qword_1000CACF0);
  uint64_t v342 = *(void *)(v468 - 8);
  __chkstk_darwin(v468);
  v341 = (char *)&v304 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v476 = sub_100008704(&qword_1000CACF8);
  uint64_t v340 = *(void *)(v476 - 8);
  __chkstk_darwin(v476);
  v339 = (char *)&v304 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v494 = (void *)sub_100008704(&qword_1000CAD00);
  uint64_t v357 = *(v494 - 1);
  __chkstk_darwin(v494);
  v338 = (char *)&v304 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v486 = sub_100008704(&qword_1000CAD08);
  uint64_t v337 = *(void *)(v486 - 8);
  __chkstk_darwin(v486);
  v336 = (char *)&v304 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_100008704(&qword_1000CAD10);
  uint64_t v334 = *(void *)(v335 - 8);
  __chkstk_darwin(v335);
  v333 = (char *)&v304 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v474 = sub_100008704(&qword_1000CAD18);
  uint64_t v332 = *(void *)(v474 - 8);
  __chkstk_darwin(v474);
  v331 = (char *)&v304 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = sub_100008704(&qword_1000CAD20);
  uint64_t v327 = *(void *)(v328 - 8);
  __chkstk_darwin(v328);
  v326 = (char *)&v304 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v459 = sub_100008704(&qword_1000CAD28);
  uint64_t v325 = *(void *)(v459 - 8);
  __chkstk_darwin(v459);
  v324 = (char *)&v304 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v492 = (void *)sub_100008704(&qword_1000CA3B0);
  uint64_t v73 = __chkstk_darwin(v492);
  uint64_t v323 = (uint64_t)&v304 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v330 = (uint64_t)&v304 - v76;
  __chkstk_darwin(v75);
  v329 = (char *)&v304 - v77;
  uint64_t v322 = sub_100008704(&qword_1000CAD30);
  uint64_t v321 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  v320 = (char *)&v304 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = sub_100008704(&qword_1000CA840);
  uint64_t v79 = __chkstk_darwin(v319);
  uint64_t v318 = (uint64_t)&v304 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  v317 = (char *)&v304 - v81;
  uint64_t v464 = sub_100008704(&qword_1000CAD38);
  uint64_t v316 = *(void *)(v464 - 8);
  __chkstk_darwin(v464);
  v315 = (char *)&v304 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = sub_100008704(&qword_1000CAD40);
  uint64_t v314 = *(void *)(v460 - 8);
  __chkstk_darwin(v460);
  v313 = (char *)&v304 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v458 = sub_100008704(&qword_1000CAD48);
  uint64_t v312 = *(void *)(v458 - 8);
  __chkstk_darwin(v458);
  v311 = (char *)&v304 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v310 = sub_100008704(&qword_1000CAD50);
  uint64_t v309 = *(void *)(v310 - 8);
  __chkstk_darwin(v310);
  v308 = (char *)&v304 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = sub_100008704(&qword_1000CAD58);
  uint64_t v306 = *(void *)(v307 - 8);
  __chkstk_darwin(v307);
  uint64_t v87 = (char *)&v304 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v496 = sub_100008704(&qword_1000CAD60);
  uint64_t v88 = *(void *)(v496 - 8);
  __chkstk_darwin(v496);
  uint64_t v90 = (char *)&v304 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v481 = sub_100008704(&qword_1000CAD68);
  uint64_t v91 = *(void *)(v481 - 8);
  __chkstk_darwin(v481);
  uint64_t v93 = (char *)&v304 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100008704(&qword_1000CAD70);
  uint64_t v95 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v97 = (char *)&v304 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v504 = a1;
  uint64_t v473 = v51;
  v305 = v87;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000A4CE0()) {
    uint64_t v98 = (void *)sub_10003E9F0((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v98 = &_swiftEmptySetSingleton;
  }
  uint64_t v99 = v500;
  uint64_t v100 = v500;
  *(void *)(v500 + 32) = v98;
  uint64_t v495 = v100 + 32;
  *(void *)(v99 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v99 + 56) = swift_getKeyPath();
  *(unsigned char *)(v99 + 64) = 0;
  uint64_t v101 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isDelegateInitialized;
  LOBYTE(v505) = 0;
  sub_1000A4530();
  v482 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 32);
  v503 = (void *)(v95 + 32);
  v501 = (void (*)(void, void))v94;
  v482(v101, v97, v94);
  uint64_t v102 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__executionMode;
  LOBYTE(v505) = 0;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v102, v93, v481);
  uint64_t v103 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingType;
  LOBYTE(v505) = 8;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v103, v90, v496);
  uint64_t v104 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingStage;
  LOBYTE(v505) = 0;
  uint64_t v105 = v305;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v306 + 32))(v104, v105, v307);
  uint64_t v106 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__addedAddresses;
  unint64_t v505 = (unint64_t)_swiftEmptyArrayStorage;
  sub_100008704(&qword_1000CA818);
  uint64_t v107 = v308;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v309 + 32))(v106, v107, v310);
  uint64_t v108 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__createOrLoadStage;
  LOBYTE(v505) = 0;
  uint64_t v109 = v311;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v312 + 32))(v108, v109, v458);
  uint64_t v110 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__addingAddressesStage;
  LOBYTE(v505) = 0;
  uint64_t v111 = v313;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v314 + 32))(v110, v111, v460);
  uint64_t v112 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__savingStage;
  LOBYTE(v505) = 2;
  uint64_t v113 = v315;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v316 + 32))(v112, v113, v464);
  uint64_t v114 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__alertNowShowing;
  uint64_t v115 = type metadata accessor for AlertViewModel(0);
  uint64_t v116 = (uint64_t)v317;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v317, 1, 1, v115);
  sub_10001F904(v116, v318, &qword_1000CA840);
  uint64_t v117 = v320;
  sub_1000A4530();
  sub_10000B988(v116, &qword_1000CA840);
  (*(void (**)(uint64_t, char *, uint64_t))(v321 + 32))(v114, v117, v322);
  uint64_t v118 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isShowingAlert;
  LOBYTE(v505) = 0;
  v493 = v97;
  sub_1000A4530();
  uint64_t v119 = v501;
  uint64_t v120 = v482;
  v482(v118, v97, (uint64_t)v501);
  uint64_t v121 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isFolderShare;
  LOBYTE(v505) = 0;
  sub_1000A4530();
  v120(v121, v97, (uint64_t)v119);
  uint64_t v319 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderURL;
  uint64_t v321 = sub_1000A42E0();
  uint64_t v122 = *(void *)(v321 - 8);
  v320 = *(char **)(v122 + 56);
  uint64_t v322 = v122 + 56;
  uint64_t v123 = (uint64_t)v329;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v320)(v329, 1, 1, v321);
  sub_100008704(&qword_1000CAD78);
  uint64_t v124 = swift_allocObject();
  uint64_t v125 = (void *)(v124 + *(void *)(*(void *)v124 + 104));
  *uint64_t v125 = 0;
  v125[1] = 0;
  uint64_t v126 = v330;
  sub_10001F904(v123, v330, &qword_1000CA3B0);
  swift_beginAccess();
  sub_10001F904(v126, v323, &qword_1000CA3B0);
  sub_1000A4530();
  sub_10000B988(v126, &qword_1000CA3B0);
  swift_endAccess();
  sub_10000B988(v123, &qword_1000CA3B0);
  *(void *)(v99 + v319) = v124;
  uint64_t v127 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isFolderSubshare;
  LOBYTE(v505) = 0;
  v128 = v493;
  sub_1000A4530();
  v120(v127, v128, (uint64_t)v119);
  v129 = v120;
  uint64_t v130 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderTitle;
  sub_100008704(&qword_1000CAD80);
  uint64_t v131 = swift_allocObject();
  v132 = (void *)(v131 + *(void *)(*(void *)v131 + 104));
  void *v132 = 0;
  v132[1] = 0;
  swift_beginAccess();
  id v509 = 0;
  uint64_t v510 = 0;
  uint64_t v133 = sub_100008704(&qword_1000CA880);
  sub_1000A4530();
  swift_endAccess();
  *(void *)(v99 + v130) = v131;
  uint64_t v134 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__ckFolderSubitemName;
  uint64_t v135 = swift_allocObject();
  uint64_t v136 = (void *)(v135 + *(void *)(*(void *)v135 + 104));
  *uint64_t v136 = 0;
  v136[1] = 0;
  swift_beginAccess();
  id v509 = 0;
  uint64_t v510 = 0;
  uint64_t v323 = v133;
  sub_1000A4530();
  swift_endAccess();
  *(void *)(v99 + v134) = v135;
  uint64_t v137 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__folderSharingStage;
  LOBYTE(v505) = 4;
  sub_100008704(&qword_1000CA850);
  v138 = v324;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v325 + 32))(v137, v138, v459);
  uint64_t v139 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__shareSaveStatus;
  LOBYTE(v505) = 0;
  v140 = v326;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v327 + 32))(v139, v140, v328);
  uint64_t v141 = (void *)(v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_lastServicesData);
  *uint64_t v141 = 0;
  v141[1] = 0;
  uint64_t v142 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingOptionsAllowedFromSPI;
  unint64_t v505 = 15;
  uint64_t v143 = v331;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v332 + 32))(v142, v143, v474);
  uint64_t v144 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__yourNameAndEmail;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  uint64_t v507 = 0;
  unint64_t v508 = 0xE000000000000000;
  sub_100008704(&qword_1000CA870);
  uint64_t v145 = v333;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v334 + 32))(v144, v145, v335);
  uint64_t v146 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharedFileOrFolderURL;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v320)(v123, 1, 1, v321);
  sub_10001F904(v123, v126, &qword_1000CA3B0);
  v147 = v336;
  sub_1000A4530();
  sub_10000B988(v123, &qword_1000CA3B0);
  (*(void (**)(uint64_t, char *, uint64_t))(v337 + 32))(v146, v147, v486);
  *(unsigned char *)(v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_shouldStopAccessingSharedFileOrFolderURL) = 0;
  uint64_t v148 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__itemUTI;
  unint64_t v505 = 0;
  unint64_t v506 = 0;
  v149 = v338;
  sub_1000A4530();
  v492 = *(void **)(v357 + 32);
  ((void (*)(uint64_t, char *, void *))v492)(v148, v149, v494);
  uint64_t v150 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isShareRoot;
  LOBYTE(v505) = 1;
  v151 = v493;
  sub_1000A4530();
  v129(v150, v151, (uint64_t)v501);
  uint64_t v152 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnail;
  unint64_t v505 = (unint64_t)[objc_allocWithZone((Class)UIImage) init];
  uint64_t v357 = sub_10001F798(0, &qword_1000CA890);
  v153 = v339;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v340 + 32))(v152, v153, v476);
  uint64_t v154 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnailFromCloudKitSPI;
  unint64_t v505 = 0;
  sub_100008704(&qword_1000CA8A0);
  v155 = v341;
  sub_1000A4530();
  v156 = *(void (**)(uint64_t, char *, uint64_t))(v342 + 32);
  uint64_t v157 = v468;
  v156(v154, v155, v468);
  uint64_t v158 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnailFromDocumentSPI;
  unint64_t v505 = 0;
  sub_1000A4530();
  v156(v158, v155, v157);
  uint64_t v159 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__itemTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  v160 = v343;
  sub_1000A4530();
  v161 = (void (*)(uint64_t, char *, uint64_t))*((void *)v345 + 4);
  uint64_t v162 = v346;
  v161(v159, v160, v346);
  uint64_t v163 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sourceAppBundleID;
  unint64_t v505 = 0;
  unint64_t v506 = 0;
  sub_1000A4530();
  ((void (*)(uint64_t, char *, void *))v492)(v163, v149, v494);
  uint64_t v164 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sectionTitleForAuxiliaryToggles;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000A4530();
  v161(v164, v160, v162);
  uint64_t v165 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__primaryCheckboxTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000A4530();
  v161(v165, v160, v162);
  v345 = v161;
  uint64_t v166 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__secondaryCheckboxTitle;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000A4530();
  v161(v166, v160, v162);
  uint64_t v167 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__primaryCheckboxState;
  LOBYTE(v505) = 0;
  v168 = v493;
  sub_1000A4530();
  v169 = v501;
  v170 = v482;
  v482(v167, v168, (uint64_t)v501);
  uint64_t v171 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__secondaryCheckboxState;
  LOBYTE(v505) = 0;
  sub_1000A4530();
  v170(v171, v168, (uint64_t)v169);
  uint64_t v172 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__ckContainerIdentifier;
  unint64_t v505 = (unint64_t)[objc_allocWithZone((Class)CKContainerID) init];
  sub_10001F798(0, &qword_1000CA8B8);
  v173 = v344;
  sub_1000A4530();
  (*((void (**)(uint64_t, char *, unint64_t))v347 + 4))(v172, v173, v348);
  uint64_t v174 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__helpAnchor;
  unint64_t v505 = 0;
  unint64_t v506 = 0xE000000000000000;
  sub_1000A4530();
  v345(v174, v160, v162);
  uint64_t v175 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__participantDetails;
  unint64_t v505 = sub_10001FEFC((uint64_t)_swiftEmptyArrayStorage, &qword_1000CB0A8);
  sub_100008704((uint64_t *)&unk_1000CA8C8);
  v176 = v349;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, void *))(v350 + 32))(v175, v176, v480);
  uint64_t v177 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_networkMonitor;
  type metadata accessor for NetworkMonitor();
  swift_allocObject();
  uint64_t v178 = v99;
  *(void *)(v99 + v177) = sub_1000502E4(0);
  *(void *)(v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_ckMetadata) = 0;
  uint64_t v179 = v504;
  *(void *)(v99 + 16) = v504;
  *(void *)(v99 + 24) = *(void *)(v179 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel_ckShareModel);
  swift_weakAssign();
  uint64_t v350 = v99 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharedFileOrFolderURL;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  v180 = v469;
  sub_1000A4540();
  swift_endAccess();
  v503 = &protocol conformance descriptor for Published<A>.Publisher;
  v349 = (char *)sub_1000406A8(&qword_1000CAD88, &qword_1000CACB8);
  unint64_t v348 = sub_10003FC64();
  uint64_t v181 = v470;
  sub_1000A45D0();
  v182 = *(void (**)(char *, uint64_t))(v489 + 8);
  v489 += 8;
  v347 = v182;
  v182(v180, v181);
  swift_beginAccess();
  v183 = v351;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CADA0, &qword_1000CACA8);
  sub_10003FD50();
  v184 = v353;
  sub_1000A45D0();
  v185 = *(void (**)(char *, void *))(v352 + 8);
  v185(v183, v184);
  swift_beginAccess();
  sub_1000A4540();
  swift_endAccess();
  sub_1000A45D0();
  v185(v183, v184);
  swift_beginAccess();
  v186 = v472;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v346 = sub_1000406A8(&qword_1000CADB0, &qword_1000CAC98);
  uint64_t v187 = v473;
  sub_1000A45D0();
  v188 = *(void (**)(uint64_t, char *, uint64_t))(v490 + 8);
  v490 += 8;
  v345 = v188;
  ((void (*)(char *, uint64_t))v188)(v186, v187);
  v351 = (char *)sub_1000406A8(&qword_1000CADB8, &qword_1000CACC0);
  sub_1000406A8(&qword_1000CADC0, &qword_1000CACB0);
  v482 = (void (*)(uint64_t, char *, uint64_t))&protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  uint64_t v352 = sub_1000406A8(&qword_1000CADC8, &qword_1000CACA0);
  v189 = v354;
  sub_1000A44B0();
  uint64_t v190 = swift_allocObject();
  *(void *)(v190 + 16) = sub_10003FDBC;
  *(void *)(v190 + 24) = v178;
  v353 = &protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>;
  sub_1000406A8(&qword_1000CADD0, &qword_1000CACC8);
  swift_retain();
  v191 = v453;
  uint64_t v192 = v454;
  sub_1000A45A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v452 + 8))(v189, v192);
  uint64_t v193 = v178 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingType;
  swift_beginAccess();
  v194 = v484;
  sub_1000A4540();
  swift_endAccess();
  v457 = (char *)&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_1000406A8(&qword_1000CADD8, &qword_1000CACD0);
  v195 = v477;
  sub_1000A45F0();
  v456[1](v191, v195);
  uint64_t v196 = v498;
  uint64_t v197 = v485;
  (*(void (**)(char *, char *, uint64_t))(v498 + 16))(v479, v194, v485);
  uint64_t v454 = v193;
  swift_beginAccess();
  sub_1000A4550();
  swift_endAccess();
  v198 = *(void (***)(char *, void (*)(void)))(v196 + 8);
  uint64_t v498 = v196 + 8;
  v456 = v198;
  ((void (*)(char *, uint64_t))v198)(v194, v197);
  v199 = (char *)(v178 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__executionMode);
  swift_beginAccess();
  v200 = v364;
  sub_1000A4540();
  swift_endAccess();
  v453 = (char *)sub_1000406A8(&qword_1000CADE0, &qword_1000CAC78);
  unint64_t v452 = sub_10003FE68();
  v201 = v461;
  uint64_t v202 = v483;
  sub_1000A45D0();
  v203 = *(void (**)(char *, uint64_t))(v497 + 8);
  v497 += 8;
  v451 = v203;
  v203(v200, v202);
  v494 = self;
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  v492 = (void *)sub_1000A4B90();
  uint64_t v204 = *(v492 - 1);
  v477 = *(void (**)(void))(v204 + 56);
  v493 = (char *)(v204 + 56);
  uint64_t v205 = (uint64_t)v502;
  v477();
  v479 = (char *)sub_10001F798(0, &qword_1000CADF0);
  v344 = (char *)sub_1000406A8(&qword_1000CADF8, &qword_1000CAC80);
  uint64_t v478 = sub_10003FEBC((unint64_t *)&qword_1000CAE00, &qword_1000CADF0);
  v206 = v355;
  uint64_t v207 = v463;
  sub_1000A45C0();
  sub_10000B988(v205, &qword_1000CAC70);

  (*(void (**)(char *, uint64_t))(v462 + 8))(v201, v207);
  v480 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_1000406A8(&qword_1000CAE08, &qword_1000CAC88);
  swift_retain();
  uint64_t v208 = v455;
  sub_1000A45E0();
  swift_release();
  v356[1](v206, v208);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  v354 = v199;
  swift_beginAccess();
  sub_1000A4540();
  swift_endAccess();
  uint64_t v209 = v483;
  sub_1000A45D0();
  v451(v200, v209);
  swift_beginAccess();
  swift_retain();
  uint64_t v455 = sub_100008704(&qword_1000CAE10);
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  v355 = (char *)sub_1000406A8(&qword_1000CAE18, &qword_1000CAC58);
  v210 = v358;
  sub_1000A4470();
  uint64_t v211 = swift_allocObject();
  swift_weakInit();
  uint64_t v212 = swift_allocObject();
  *(void *)(v212 + 16) = sub_10003FF08;
  *(void *)(v212 + 24) = v211;
  v356 = (void (**)(char *, uint64_t))&protocol conformance descriptor for Publishers.CombineLatest<A, B>;
  sub_1000406A8(&qword_1000CAE20, &qword_1000CAC60);
  v213 = v361;
  uint64_t v214 = v360;
  sub_1000A45A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v359 + 8))(v210, v214);
  swift_beginAccess();
  swift_retain();
  uint64_t v215 = sub_100008704(&qword_1000CAE28);
  v216 = v366;
  uint64_t v360 = v215;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAE30, &qword_1000CAC68);
  uint64_t v217 = v363;
  sub_1000A45F0();
  (*(void (**)(char *, uint64_t))(v362 + 8))(v213, v217);
  uint64_t v218 = v368;
  uint64_t v219 = v465;
  (*(void (**)(char *, char *, uint64_t))(v368 + 16))(v365, v216, v465);
  swift_beginAccess();
  sub_1000A4550();
  swift_endAccess();
  uint64_t v368 = *(void *)(v218 + 8);
  ((void (*)(char *, uint64_t))v368)(v216, v219);
  swift_release();
  swift_beginAccess();
  sub_1000A4540();
  swift_endAccess();
  uint64_t v220 = v483;
  sub_1000A45D0();
  v451(v200, v220);
  swift_beginAccess();
  v221 = v484;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v497 = sub_1000406A8(&qword_1000CAE38, &qword_1000CAC90);
  sub_10003FF48();
  uint64_t v222 = v485;
  sub_1000A45D0();
  ((void (*)(char *, uint64_t))v456)(v221, v222);
  swift_beginAccess();
  swift_retain();
  v223 = v487;
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100008704(&qword_1000CAE48);
  v224 = v367;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAE50, &qword_1000CAC28);
  sub_10003FF9C();
  v225 = v376;
  uint64_t v226 = v370;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v369 + 8))(v224, v226);
  swift_beginAccess();
  sub_100008704(&qword_1000CAE60);
  v227 = v373;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAE68, &qword_1000CAC18);
  sub_10003FFF0();
  v228 = v381;
  uint64_t v229 = v375;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v374 + 8))(v227, v229);
  swift_beginAccess();
  swift_retain();
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  sub_1000406A8(&qword_1000CAE78, &qword_1000CAC50);
  sub_100040044();
  v230 = v387;
  uint64_t v231 = v465;
  sub_1000A45D0();
  ((void (*)(char *, uint64_t))v368)(v216, v231);
  uint64_t v232 = (uint64_t)v380;
  (*(void (**)(char *, char *, uint64_t))(v462 + 32))(v380, v461, v463);
  v233 = (int *)v379;
  (*(void (**)(uint64_t, char *, uint64_t))(v371 + 32))(v232 + *(int *)(v379 + 116), v466, v372);
  (*(void (**)(uint64_t, char *, uint64_t))(v467 + 32))(v232 + v233[30], v223, v488);
  (*(void (**)(uint64_t, char *, uint64_t))(v377 + 32))(v232 + v233[31], v225, v378);
  (*(void (**)(uint64_t, char *, uint64_t))(v382 + 32))(v232 + v233[32], v228, v383);
  (*(void (**)(uint64_t, char *, uint64_t))(v388 + 32))(v232 + v233[33], v230, v389);
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v234 = (uint64_t)v502;
  v235 = v477;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_1000406A8(&qword_1000CAE88, &qword_1000CAC40);
  v236 = v384;
  sub_1000A45C0();
  sub_10000B988(v234, &qword_1000CAC70);

  sub_10000B988(v232, &qword_1000CAC40);
  uint64_t v237 = swift_allocObject();
  swift_weakInit();
  uint64_t v238 = swift_allocObject();
  uint64_t v239 = v504;
  *(void *)(v238 + 16) = v237;
  *(void *)(v238 + 24) = v239;
  uint64_t v240 = swift_allocObject();
  *(void *)(v240 + 16) = sub_1000400D8;
  *(void *)(v240 + 24) = v238;
  sub_1000406A8(&qword_1000CAE90, &qword_1000CAC48);
  swift_retain();
  uint64_t v241 = v386;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v385 + 8))(v236, v241);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  swift_retain();
  v242 = v487;
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v243 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v235)(v502, 1, 1, v492);
  v244 = v390;
  uint64_t v245 = v488;
  sub_1000A45C0();
  sub_10000B988(v243, &qword_1000CAC70);

  (*(void (**)(char *, uint64_t))(v467 + 8))(v242, v245);
  swift_allocObject();
  swift_weakInit();
  sub_1000406A8(&qword_1000CAE98, &qword_1000CAC08);
  uint64_t v246 = v392;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v391 + 8))(v244, v246);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v247 = v484;
  sub_1000A4540();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  uint64_t v248 = v485;
  sub_1000A45E0();
  swift_release();
  ((void (*)(char *, uint64_t))v456)(v247, v248);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v249 = v393;
  sub_1000A4540();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  sub_1000406A8(&qword_1000CAEA0, &qword_1000CAC00);
  uint64_t v250 = v395;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v394 + 8))(v249, v250);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v251 = v396;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v252 = swift_allocObject();
  swift_weakInit();
  uint64_t v253 = swift_allocObject();
  *(void *)(v253 + 16) = sub_100040138;
  *(void *)(v253 + 24) = v252;
  sub_1000406A8(&qword_1000CAEA8, &qword_1000CABF8);
  uint64_t v254 = v398;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v397 + 8))(v251, v254);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v255 = v399;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v256 = swift_allocObject();
  swift_weakInit();
  uint64_t v257 = swift_allocObject();
  *(void *)(v257 + 16) = sub_10004016C;
  *(void *)(v257 + 24) = v256;
  sub_1000406A8(&qword_1000CAEB0, &qword_1000CABF0);
  uint64_t v258 = v401;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v400 + 8))(v255, v258);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v259 = v402;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v260 = swift_allocObject();
  swift_weakInit();
  uint64_t v261 = swift_allocObject();
  *(void *)(v261 + 16) = sub_1000401A0;
  *(void *)(v261 + 24) = v260;
  sub_1000406A8(&qword_1000CAEB8, &qword_1000CABE8);
  uint64_t v262 = v404;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v403 + 8))(v259, v262);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v263 = v469;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v264 = v470;
  sub_1000A45D0();
  v347(v263, v264);
  swift_beginAccess();
  v265 = v472;
  sub_1000A4540();
  swift_endAccess();
  uint64_t v266 = v473;
  sub_1000A45D0();
  ((void (*)(char *, uint64_t))v345)(v265, v266);
  swift_beginAccess();
  v267 = v406;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAEC0, &qword_1000CABC8);
  sub_1000401D4();
  uint64_t v268 = v409;
  sub_1000A45D0();
  v269 = *(void (**)(char *, uint64_t))(v408 + 8);
  v269(v267, v268);
  swift_beginAccess();
  sub_1000A4540();
  swift_endAccess();
  sub_1000A45D0();
  v269(v267, v268);
  sub_1000406A8(&qword_1000CAED8, &qword_1000CABD0);
  v270 = v411;
  sub_1000A44B0();
  uint64_t v271 = swift_allocObject();
  swift_weakInit();
  uint64_t v272 = swift_allocObject();
  *(void *)(v272 + 16) = v271;
  *(int64x2_t *)(v272 + 24) = vdupq_n_s64(0x4060000000000000uLL);
  *(void *)(v272 + 40) = v422;
  uint64_t v273 = swift_allocObject();
  *(void *)(v273 + 16) = &unk_1000CAEE8;
  *(void *)(v273 + 24) = v272;
  uint64_t v274 = swift_allocObject();
  *(void *)(v274 + 16) = &unk_1000CAEF8;
  *(void *)(v274 + 24) = v273;
  swift_retain();
  sub_1000A44E0();
  sub_100008704(&qword_1000CAF00);
  sub_1000406A8(&qword_1000CAF08, &qword_1000CABD8);
  sub_1000406A8(&qword_1000CAF10, &qword_1000CAF00);
  v275 = v414;
  uint64_t v276 = v413;
  v277 = v270;
  sub_1000A45B0();
  swift_release();
  sub_1000406A8(&qword_1000CAF18, &qword_1000CABC0);
  uint64_t v278 = v417;
  unint64_t v279 = sub_1000A4590();
  (*(void (**)(char *, uint64_t))(v415 + 8))(v275, v278);
  swift_release();
  (*(void (**)(char *, uint64_t))(v412 + 8))(v277, v276);
  unint64_t v505 = v279;
  id v509 = [v494 mainRunLoop];
  uint64_t v280 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_100008704(&qword_1000CAF20);
  sub_1000406A8(&qword_1000CAF28, &qword_1000CAF20);
  v281 = v416;
  sub_1000A45C0();
  sub_10000B988(v280, &qword_1000CAC70);

  swift_release();
  swift_beginAccess();
  v282 = v421;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAF30, &qword_1000CABE0);
  uint64_t v283 = v419;
  sub_1000A45F0();
  (*(void (**)(char *, uint64_t))(v418 + 8))(v281, v283);
  uint64_t v284 = v423;
  uint64_t v285 = v424;
  (*(void (**)(char *, char *, uint64_t))(v423 + 16))(v420, v282, v424);
  swift_beginAccess();
  sub_1000A4550();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v284 + 8))(v282, v285);
  swift_beginAccess();
  v286 = v440;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAF38, &qword_1000CAB98);
  sub_100040558();
  uint64_t v287 = v441;
  sub_1000A45D0();
  uint64_t v288 = v438;
  v501 = *(void (**)(void, void))(v438 + 8);
  v501(v286, v287);
  swift_beginAccess();
  swift_retain();
  sub_100008704(&qword_1000CAF48);
  v289 = v433;
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  sub_1000406A8(&qword_1000CAF50, &qword_1000CAB88);
  sub_1000405AC();
  uint64_t v290 = v436;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v435 + 8))(v289, v290);
  sub_1000406A8(&qword_1000CAF78, &qword_1000CABA0);
  sub_1000406A8(&qword_1000CAF80, &qword_1000CAB90);
  v291 = v426;
  sub_1000A4470();
  sub_1000406A8(&qword_1000CAF88, &qword_1000CABA8);
  v292 = v430;
  uint64_t v293 = v429;
  sub_1000A45A0();
  (*(void (**)(char *, uint64_t))(v428 + 8))(v291, v293);
  swift_beginAccess();
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAF90, &qword_1000CABB0);
  uint64_t v294 = v432;
  sub_1000A45F0();
  (*(void (**)(char *, uint64_t))(v431 + 8))(v292, v294);
  (*(void (**)(char *, char *, uint64_t))(v288 + 16))(v439, v286, v287);
  swift_beginAccess();
  sub_1000A4550();
  swift_endAccess();
  v501(v286, v287);
  uint64_t v295 = v500;
  swift_beginAccess();
  swift_retain();
  sub_100008704(&qword_1000CAF98);
  v296 = v442;
  sub_1000A4540();
  swift_endAccess();
  swift_release();
  sub_1000406A8(&qword_1000CAFA0, &qword_1000CAB70);
  sub_10004064C();
  v297 = v445;
  uint64_t v298 = v444;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v443 + 8))(v296, v298);
  unint64_t v505 = (unint64_t)[v494 mainRunLoop];
  uint64_t v299 = (uint64_t)v502;
  ((void (*)(char *, uint64_t, uint64_t, void *))v477)(v502, 1, 1, v492);
  sub_1000406A8(&qword_1000CAFB0, &qword_1000CAB78);
  v300 = v448;
  uint64_t v301 = v447;
  sub_1000A45C0();
  sub_10000B988(v299, &qword_1000CAC70);

  (*(void (**)(char *, uint64_t))(v446 + 8))(v297, v301);
  swift_allocObject();
  swift_weakInit();
  sub_1000406A8(&qword_1000CAFB8, &qword_1000CAB80);
  uint64_t v302 = v450;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v449 + 8))(v300, v302);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_release();
  return v295;
}

uint64_t sub_100026CEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v60 = a2;
  unint64_t v61 = a3;
  uint64_t v10 = sub_1000A4460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v59 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v23 - 8);
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v26 = (char *)&v59 - v25;
  if ((a6 & 1) == 0) {
    return 8;
  }
  if (!a5)
  {
    sub_10001F904(a1, (uint64_t)&v59 - v25, &qword_1000CA3B0);
    uint64_t v41 = sub_1000A42E0();
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v26, 1, v41);
    sub_10000B988((uint64_t)v26, &qword_1000CA3B0);
    if (v42 != 1) {
      return 9;
    }
    uint64_t v43 = sub_100027748();
    if ((v43 & 0xFE) != 8)
    {
      uint64_t v29 = v43;
      if (v43 > 7u || ((1 << v43) & 0xC1) == 0)
      {
        sub_1000A4440();
        uint64_t v52 = sub_1000A4450();
        os_log_type_t v53 = sub_1000A4A40();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          v64[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315138;
          uint64_t v55 = sub_10009B1DC(v29);
          uint64_t v65 = sub_10003CFA4(v55, v56, v64);
          sub_1000A4BC0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Combine for sharingType specific CK sharingType: %s.", v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v62);
        return v29;
      }
    }
    sub_1000A4440();
    uint64_t v44 = v61;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1000A4450();
    os_log_type_t v46 = sub_1000A4A40();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v64[1] = v44;
      uint64_t v65 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v49 = v60;
      v64[0] = v60;
      sub_100008704(&qword_1000CA880);
      uint64_t v50 = sub_1000A4BA0();
      v64[0] = sub_10003CFA4(v50, v51, &v65);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Combine for sharingType sourceAppBundleID: %s.", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v62);
      if (!v44) {
        return 0;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v62);
      uint64_t v49 = v60;
      if (!v44) {
        return 0;
      }
    }
    if (v49 == 0x6C7070612E6D6F63 && v44 == 0xEF7365746F4E2E65
      || (sub_1000A4D70() & 1) != 0
      || v49 == 0xD000000000000015 && v44 == 0x80000001000ABD80
      || (sub_1000A4D70() & 1) != 0)
    {
      return 1;
    }
    if (v49 == 0xD000000000000013 && v44 == 0x80000001000ABD60 || (sub_1000A4D70() & 1) != 0) {
      return 3;
    }
    if (v49 == 0xD000000000000010 && v44 == 0x80000001000ABD40
      || (sub_1000A4D70() & 1) != 0
      || v49 == 0xD000000000000016 && v44 == 0x80000001000ABD20
      || (sub_1000A4D70() & 1) != 0)
    {
      return 4;
    }
    if (v49 == 0xD000000000000010 && v61 == 0x80000001000ABD00
      || (sub_1000A4D70() & 1) != 0
      || v60 == 0xD000000000000012 && v61 == 0x80000001000ABCE0
      || (sub_1000A4D70() & 1) != 0)
    {
      return 5;
    }
    uint64_t v57 = HIBYTE(v61) & 0xF;
    if ((v61 & 0x2000000000000000) == 0) {
      uint64_t v57 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (v57) {
      return 6;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  char v27 = sub_10009C6AC(a4, a5, a1);
  uint64_t v28 = sub_10009B154(v27);
  uint64_t v29 = v28;
  if ((v28 & 0xFE) != 8 && (v28 == 7 || !(_BYTE)v28) && v61)
  {
    uint64_t v30 = HIBYTE(v61) & 0xF;
    if ((v61 & 0x2000000000000000) == 0) {
      uint64_t v30 = v60 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1000A4450();
      os_log_type_t v32 = sub_1000A4A40();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        v64[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_10003CFA4(a4, a5, v64);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v34 = sub_10009B1DC(v29);
        uint64_t v65 = sub_10003CFA4(v34, v35, v64);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Combine for sharingType itemUTI: %s, sharingType: %s--return .other for unspecified.", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v62);
      return 6;
    }
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1000A4450();
  os_log_type_t v37 = sub_1000A4A40();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10003CFA4(a4, a5, v64);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 12) = 2080;
    uint64_t v39 = sub_10009B1DC(v29);
    uint64_t v65 = sub_10003CFA4(v39, v40, v64);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Combine for sharingType itemUTI: %s, sharingType: %s.", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v62);
  return v29;
}

uint64_t sub_100027748()
{
  uint64_t v0 = sub_1000A4460();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v31 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (!v34[0])
  {
    sub_1000A4440();
    uint64_t v26 = sub_1000A4450();
    os_log_type_t v27 = sub_1000A4A40();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "ckSharingTypeFromShare on model--no CKShare yet so return .cloudKit(type: .other).", v28, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 6;
  }
  uint64_t v10 = v34[0];
  sub_1000A4B50();
  uint64_t v11 = sub_1000A4B60();

  swift_bridgeObjectRelease();
  if (!v11 || (uint64_t v35 = v11, sub_100008704(&qword_1000CA3D0), (swift_dynamicCast() & 1) == 0))
  {
    sub_1000A4440();
    uint64_t v22 = sub_1000A4450();
    os_log_type_t v23 = sub_1000A4A40();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckSharingTypeFromShare on model--couldn't get a string from CKShare.shareType so return .cloudKit(type: .other).", v24, 2u);
      swift_slowDealloc();
      unint64_t v25 = v10;
    }
    else
    {
      unint64_t v25 = v22;
      uint64_t v22 = v10;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    return 6;
  }
  unint64_t v12 = sub_10009B4F4((uint64_t)v34[0], (uint64_t)v34[1]);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1000A4450();
  os_log_type_t v16 = sub_1000A4A40();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v33 = v12;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v32 = (void *)swift_slowAlloc();
    v34[0] = v32;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v31 = v17 + 4;
    char v18 = sub_10009CC70(v33, v14);
    char v19 = sub_10009B154(v18);
    uint64_t v20 = sub_10009B1DC(v19);
    uint64_t v35 = sub_10003CFA4(v20, v21, (uint64_t *)v34);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    unint64_t v12 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "ckSharingTypeFromShare on model--CKShare converts to: %s.", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  char v30 = sub_10009CC70(v12, v14);
  swift_bridgeObjectRelease();

  return sub_10009B154(v30);
}

unsigned char *sub_100027BCC(unsigned char *result)
{
  if (*result == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return (unsigned char *)sub_1000A4570();
  }
  return result;
}

_UNKNOWN **sub_100027C4C(char a1, void *a2)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return &off_1000C1980;
  }
  if (!a2)
  {
    swift_release();
    return &off_1000C1980;
  }
  char v22 = a1;
  id v4 = a2;
  id v5 = [v4 participants];
  sub_10001F798(0, &qword_1000CB098);
  unint64_t v6 = sub_1000A4910();

  id v7 = v4;
  swift_retain();
  sub_10009FBE8(a2);
  uint64_t v23 = v8;
  swift_release();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (_UNKNOWN **)sub_1000A4CE0();
    uint64_t v9 = (uint64_t)result;
  }
  else
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (_UNKNOWN **)swift_bridgeObjectRetain();
  }
  if (v9)
  {
    if (v9 < 1)
    {
LABEL_52:
      __break(1u);
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v12 = (id)sub_1000A4C60();
      }
      else {
        id v12 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      if ([v12 role] != (id)1
        && (id v14 = [v13 role], v14 == (id)sub_1000A4AB0())
        && [v13 permission] == (id)3)
      {
        sub_1000A4C80();
        sub_1000A4CA0();
        sub_1000A4CB0();
        sub_1000A4C90();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_49;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v15 = _swiftEmptyArrayStorage[2];
    goto LABEL_24;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000A4CE0();
  swift_release();
LABEL_24:
  swift_release();
  if (v9)
  {
    uint64_t v21 = v15;
    for (uint64_t j = 0; j != v9; ++j)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v17 = (id)sub_1000A4C60();
      }
      else {
        id v17 = *(id *)(v6 + 8 * j + 32);
      }
      char v18 = v17;
      if (objc_msgSend(v17, "role", v21) == (id)1
        || (id v19 = [v18 role], v19 == (id)sub_1000A4AB0()) && objc_msgSend(v18, "permission") != (id)2)
      {
      }
      else
      {
        sub_1000A4C80();
        sub_1000A4CA0();
        sub_1000A4CB0();
        sub_1000A4C90();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v21;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v20 = _swiftEmptyArrayStorage[2];
    goto LABEL_40;
  }
LABEL_50:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1000A4CE0();
  swift_release();
LABEL_40:
  uint64_t result = (_UNKNOWN **)swift_release();
  if (__OFSUB__(v20, v23))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v15 <= 0)
  {
    swift_release();

    return &off_1000C18E0;
  }
  else if (v20 - v23 < 1)
  {
    swift_release();

    return &off_1000C1958;
  }
  else
  {
    swift_release();

    if (v22 == 3) {
      return &off_1000C1908;
    }
    else {
      return &off_1000C1930;
    }
  }
}

uint64_t sub_100028080(int a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1000A4460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v41 - v14;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    if ((_BYTE)a1)
    {
      uint64_t v43 = a6;
      uint64_t v44 = v13;
      uint64_t v47 = v10;
      LODWORD(v46) = (a2 < 0xAu) & (0x23Eu >> a2);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v18 = v48;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v19 = v48;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (v48 != 1) {
        goto LABEL_8;
      }
      if (a1 != 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000A4560();
        swift_release();
        swift_release();
        swift_release();
        if (v48 != 1) {
          goto LABEL_8;
        }
      }
      if (v18 == 2 || (char v20 = v46, v19 != 2)) {
LABEL_8:
      }
        char v20 = 0;
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v48) = v20;
      swift_retain();
      sub_1000A4570();
      sub_1000A4440();
      swift_retain_n();
      uint64_t v21 = sub_1000A4450();
      os_log_type_t v22 = sub_1000A4A40();
      BOOL v23 = os_log_type_enabled(v21, v22);
      int v45 = a1;
      if (v23)
      {
        BOOL v41 = v19 == 2;
        BOOL v42 = a1 == 1;
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 67110144;
        LODWORD(v48) = v46;
        sub_1000A4BC0();
        *(_WORD *)(v24 + 8) = 1024;
        LODWORD(v48) = v18 == 2;
        sub_1000A4BC0();
        *(_WORD *)(v24 + 14) = 1024;
        LODWORD(v48) = v41;
        sub_1000A4BC0();
        *(_WORD *)(v24 + 20) = 1024;
        LODWORD(v48) = v42;
        sub_1000A4BC0();
        *(_WORD *)(v24 + 26) = 1024;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        swift_release();
        LODWORD(v48) = v48;
        sub_1000A4BC0();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "executionMode is set. appIsOKForCoOwners: %{BOOL}d, R/O: %{BOOL}d, private: %{BOOL}d, isPreShare: %{BOOL}d, allowCoOwnersEditing: %{BOOL}d", (uint8_t *)v24, 0x20u);
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v25 = v47 + 8;
      uint64_t v26 = *(void (**)(char *, uint64_t))(v47 + 8);
      v26(v15, v9);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (v48)
      {
        if (v45 != 1)
        {
          uint64_t v27 = v17;
          uint64_t v28 = v9;
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_1000A4560();
          swift_release();
          swift_release();
          uint64_t v29 = v48;
          if (v48)
          {
            uint64_t v46 = v27;
            id v30 = [v48 participants];
            sub_10001F798(0, &qword_1000CB098);
            unint64_t v31 = sub_1000A4910();

            uint64_t v47 = v25;
            if (v31 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v40 = sub_1000A4CE0();
              swift_release();

              swift_bridgeObjectRelease_n();
              if (v40 > 1)
              {
LABEL_17:
                uint64_t v33 = v28;
                sub_100051318(v43);
                uint64_t v34 = v44;
                sub_1000A4440();
                swift_retain_n();
                uint64_t v35 = sub_1000A4450();
                os_log_type_t v36 = sub_1000A4A40();
                if (!os_log_type_enabled(v35, v36))
                {

                  swift_release();
                  swift_release_n();
                  return ((uint64_t (*)(char *, uint64_t))v26)(v34, v33);
                }
                os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)os_log_type_t v37 = 67109120;
                swift_getKeyPath();
                swift_getKeyPath();
                sub_1000A4560();
                swift_release();
                uint64_t result = swift_release();
                unint64_t v38 = v48[2];
                if (v38)
                {
                  if (*((unsigned char *)v48 + 32) == 1)
                  {
                    if (v38 >= 2)
                    {
                      int v39 = *((unsigned __int8 *)v48 + 33);
                      swift_release();
                      swift_bridgeObjectRelease();
LABEL_29:
                      LODWORD(v48) = v39;
                      sub_1000A4BC0();
                      swift_release();
                      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Setting newParticipantsCanBeCoOwners from CKShare state: %{BOOL}d.", v37, 8u);
                      swift_slowDealloc();
                      swift_release();

                      uint64_t v33 = v28;
                      return ((uint64_t (*)(char *, uint64_t))v26)(v34, v33);
                    }
                    goto LABEL_35;
                  }
                  swift_release();
                  uint64_t result = swift_bridgeObjectRelease();
                  if (v38 >= 2)
                  {
                    int v39 = 0;
                    goto LABEL_29;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
LABEL_35:
                __break(1u);
                return result;
              }
            }
            else
            {
              uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_release();
              swift_bridgeObjectRelease();

              if (v32 > 1) {
                goto LABEL_17;
              }
            }
          }
          else
          {
            swift_release();
          }
        }
      }
      else
      {
        sub_100051318((uint64_t)&off_1000C19A8);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1000288B0()
{
  return sub_10002E7AC();
}

void sub_1000288C4(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (!v1)
    {
      swift_release();
      return;
    }
    id v2 = v1;
    sub_1000A4B50();
    uint64_t v3 = sub_1000A4B60();

    swift_bridgeObjectRelease();
    if (v3)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        sub_1000A4800();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4570();
        swift_unknownObjectRelease();
LABEL_9:

        return;
      }
      swift_unknownObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4570();
    goto LABEL_9;
  }
}

uint64_t sub_100028A08(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      if (v1 == 8)
      {
LABEL_4:
        swift_release();
        return swift_unknownObjectRelease();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (v3 == 8)
      {
LABEL_12:
        switch(v1)
        {
          case 0:
          case 7:
            goto LABEL_4;
          case 4:
LABEL_13:
            swift_getKeyPath();
            swift_getKeyPath();
            swift_retain();
            sub_1000A4570();
            goto LABEL_14;
          default:
            goto LABEL_14;
        }
      }
      if (v3 == 9)
      {
        switch(v1)
        {
          case 0:
          case 7:
          case 9:
            goto LABEL_4;
          case 4:
            goto LABEL_13;
          default:
            goto LABEL_14;
        }
      }
      if (v1 != 9)
      {
        if (v3 == 7 || v1 == 7 || v3 == v1) {
          goto LABEL_4;
        }
        goto LABEL_12;
      }
LABEL_14:
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100028C0C(unsigned char *a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CAB08);
  uint64_t result = __chkstk_darwin(v2 - 8);
  id v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (v10[7] == 3)
      {
        sub_1000A49A0();
        uint64_t v7 = sub_1000A49C0();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
        sub_1000A4990();
        swift_retain();
        uint64_t v8 = sub_1000A4980();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v8;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        sub_1000210F4((uint64_t)v5, (uint64_t)&unk_1000CB090, (uint64_t)v9);
        swift_release();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100028DC0()
{
  return sub_10002E7AC();
}

uint64_t sub_100028DD4()
{
  v0[2] = sub_1000A4990();
  v0[3] = sub_1000A4980();
  int v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100028E84;
  return sub_100029020(1500);
}

uint64_t sub_100028E84()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1000A4950();
  return _swift_task_switch(sub_100028FC0, v1, v0);
}

uint64_t sub_100028FC0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100029020(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_1000A4460();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_1000A4990();
  v2[16] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  v2[17] = v5;
  v2[18] = v4;
  return _swift_task_switch(sub_100029124, v5, v4);
}

uint64_t sub_100029124()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1 < 1)
  {
    __break(1u);
    JUMPOUT(0x1000293F0);
  }
  *(void *)(v0 + 152) = BRCloudDocsErrorDomain;
  *(void *)(v0 + 160) = CKErrorDomain;
  *(void *)(v0 + 168) = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  switch(*(unsigned char *)(v0 + 61))
  {
    case 1:
      return _swift_task_switch(sub_100029408, 0, 0);
    case 3:
      goto LABEL_4;
    case 4:
    case 5:
      goto LABEL_9;
    default:
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 63) = 3;
      swift_retain();
      sub_1000A4570();
LABEL_4:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v2 = *(unsigned __int8 *)(v0 + 58);
      if (v2 == 4 || v2 == 2)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000A4570();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_100029894;
        return sub_10002EFE0();
      }
      else
      {
LABEL_9:
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
        return v5();
      }
  }
}

uint64_t sub_100029408()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_1000294A0;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_1000294A0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100041468;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_1000295C4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000295C4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    if (v1 < 2)
    {
      __break(1u);
      JUMPOUT(0x10002987CLL);
    }
    *(void *)(v0 + 168) = v1 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_100029408, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000A4570();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        int v2 = *(unsigned __int8 *)(v0 + 58);
        if (v2 != 4 && v2 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000A4570();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_100029894;
        uint64_t result = sub_10002EFE0();
        break;
    }
  }
  return result;
}

uint64_t sub_100029894()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_100029CEC;
  }
  else {
    uint64_t v5 = sub_1000299D0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000299D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 62) = 4;
  swift_retain();
  sub_1000A4570();
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    if (v1 < 2)
    {
      __break(1u);
      JUMPOUT(0x100029CD4);
    }
    *(void *)(v0 + 168) = v1 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_100029408, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000A4570();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        int v2 = *(unsigned __int8 *)(v0 + 58);
        if (v2 != 4 && v2 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000A4570();
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_100029894;
        uint64_t result = sub_10002EFE0();
        break;
    }
  }
  return result;
}

uint64_t sub_100029CEC()
{
  uint64_t v55 = v0;
  *(void *)(v0 + 72) = *(void *)(v0 + 192);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 200) = v1;
  *(void *)(v0 + 208) = v2;
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 224) = v3;
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 232) = v5;
  int v6 = *(unsigned __int8 *)(v0 + 56);
  if (v6 != 1)
  {
    sub_10003E804(v1, v2, v4, v3, v5, v6);
LABEL_16:
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 5;
    swift_retain();
    sub_1000A4570();
    sub_1000A4800();
    id v31 = objc_allocWithZone((Class)NSError);
    NSString v32 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v33 = [v31 initWithDomain:v32 code:1 userInfo:0];

    sub_1000A4440();
    uint64_t v34 = sub_1000A4450();
    os_log_type_t v35 = sub_1000A4A20();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "tryToCreateShareIfNeeded unexpected error, returning CKError.internalError as best approximation", v36, 2u);
      swift_slowDealloc();
    }
    uint64_t v38 = *(void *)(v0 + 104);
    uint64_t v37 = *(void *)(v0 + 112);
    uint64_t v39 = *(void *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    id v40 = v33;
    sub_100033290(1u, v33);

    swift_errorRelease();
    uint64_t v41 = *(void *)(v0 + 168);
    if (v41 == 1)
    {
LABEL_27:
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      int v45 = *(uint64_t (**)(void))(v0 + 8);
      return v45();
    }
    if (v41 >= 2)
    {
      *(void *)(v0 + 168) = v41 - 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      switch(*(unsigned char *)(v0 + 61))
      {
        case 1:
          uint64_t v15 = sub_100029408;
          goto LABEL_31;
        case 3:
          break;
        case 4:
        case 5:
          goto LABEL_27;
        default:
          swift_getKeyPath();
          swift_getKeyPath();
          *(unsigned char *)(v0 + 63) = 3;
          swift_retain();
          sub_1000A4570();
          break;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v42 = *(unsigned __int8 *)(v0 + 58);
      if (v42 == 4 || v42 == 2)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000A4570();
        uint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v43;
        void *v43 = v0;
        v43[1] = sub_100029894;
        return sub_10002EFE0();
      }
      goto LABEL_27;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    JUMPOUT(0x10002A544);
  }
  uint64_t v51 = v3;
  uint64_t v52 = v1;
  if (!v4) {
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  id v7 = v4;
  uint64_t v53 = v2;
  swift_bridgeObjectRetain();
  id v8 = [v7 domain];
  uint64_t v9 = sub_1000A4800();
  uint64_t v11 = v10;

  if (v9 == sub_1000A4800() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {

      goto LABEL_12;
    }
  }
  id v14 = [v7 code];

  if (v14 != (id)7)
  {
LABEL_12:
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 5;
    swift_retain();
    sub_1000A4570();
    sub_1000A4440();
    id v16 = v7;
    uint64_t v17 = v2;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v18 = v16;
    int v19 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A20();
    BOOL v20 = os_log_type_enabled(v19, type);
    uint64_t v21 = *(void *)(v0 + 120);
    uint64_t v22 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 104);
    if (v20)
    {
      log = v19;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      buf = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      id v25 = v18;
      uint64_t v47 = v22;
      id v26 = [v25 description];
      uint64_t v27 = sub_1000A4800();
      id v49 = v18;
      unint64_t v29 = v28;

      *(void *)(v0 + 64) = sub_10003CFA4(v27, v29, &v54);
      sub_1000A4BC0();
      id v18 = v49;
      uint64_t v17 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, type, "tryToCreateShareIfNeeded not-in-iCloud error after retries: %s", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v47);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    id v30 = v18;
    sub_100033290(1u, v4);
    sub_10003E804(v52, v17, v4, v51, v5, 1u);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v15 = sub_10002A55C;
LABEL_31:
  return _swift_task_switch(v15, 0, 0);
}

uint64_t sub_10002A55C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v1;
  void *v1 = v0;
  v1[1] = sub_10002A5F4;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10002A5F4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100041490;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_10002A718;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002A718()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v3 = *(void **)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 200);
  swift_errorRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v5, v4, v3, v1, v2, 1u);
  uint64_t v6 = *(void *)(v0 + 168);
  if (v6 == 1)
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    if (v6 < 2)
    {
      __break(1u);
      JUMPOUT(0x10002AA10);
    }
    *(void *)(v0 + 168) = v6 - 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    switch(*(unsigned char *)(v0 + 61))
    {
      case 1:
        return _swift_task_switch(sub_100029408, 0, 0);
      case 3:
        goto LABEL_5;
      case 4:
      case 5:
        goto LABEL_10;
      default:
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 63) = 3;
        swift_retain();
        sub_1000A4570();
LABEL_5:
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        int v7 = *(unsigned __int8 *)(v0 + 58);
        if (v7 != 4 && v7 != 2) {
          goto LABEL_10;
        }
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 57) = 1;
        swift_retain();
        sub_1000A4570();
        id v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 184) = v8;
        *id v8 = v0;
        v8[1] = sub_100029894;
        uint64_t result = sub_10002EFE0();
        break;
    }
  }
  return result;
}

uint64_t sub_10002AA28(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100008704(&qword_1000CAB08);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 4)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (HIBYTE(v13) == 1)
      {
        sub_1000A49A0();
        uint64_t v7 = sub_1000A49C0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
        sub_1000A4990();
        swift_retain();
        uint64_t v8 = sub_1000A4980();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v8;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        uint64_t v10 = &unk_1000CB080;
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        if (HIBYTE(v13) != 3) {
          return swift_release();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        if (HIBYTE(v13) - 6 > 0xFFFFFFFB || (v13 & 0x100000000000000) != 0) {
          return swift_release();
        }
        sub_1000A49A0();
        uint64_t v11 = sub_1000A49C0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
        sub_1000A4990();
        swift_retain();
        uint64_t v12 = sub_1000A4980();
        uint64_t v9 = (void *)swift_allocObject();
        v9[2] = v12;
        v9[3] = &protocol witness table for MainActor;
        v9[4] = v6;
        uint64_t v10 = &unk_1000CB070;
      }
      sub_1000210F4((uint64_t)v5, (uint64_t)v10, (uint64_t)v9);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10002AD24()
{
  return sub_10002E7AC();
}

uint64_t sub_10002AD38()
{
  v0[2] = sub_1000A4990();
  v0[3] = sub_1000A4980();
  int v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10002ADE8;
  return sub_10002AF24(1);
}

uint64_t sub_10002ADE8()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1000A4950();
  return _swift_task_switch(sub_100041494, v1, v0);
}

uint64_t sub_10002AF24(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(unsigned char *)(v2 + 162) = a1;
  *(void *)(v2 + 104) = sub_1000A4990();
  *(void *)(v2 + 112) = sub_1000A4980();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 120) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10002AFDC;
  return sub_100029020(300);
}

uint64_t sub_10002AFDC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000A4950();
  *(void *)(v1 + 128) = v3;
  *(void *)(v1 + 136) = v2;
  return _swift_task_switch(sub_10002B120, v3, v2);
}

uint64_t sub_10002B120()
{
  if ((*(unsigned char *)(v0 + 162) & 1) == 0)
  {
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 3;
    swift_retain();
LABEL_7:
    sub_1000A4570();
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 63) != 4)
  {
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 1;
    swift_retain();
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 58) == 2)
  {
    swift_release();
LABEL_8:
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 57) = 1;
  swift_retain();
  sub_1000A4570();
  swift_retain();
  char v3 = sub_100051768();
  swift_release();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002B3C8;
  return sub_1000309E8(v3 & 1);
}

uint64_t sub_10002B3C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_10002B5B8;
  }
  else {
    uint64_t v5 = sub_10002B504;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002B504()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 161) = 2;
  swift_retain();
  sub_1000A4570();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002B5B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = v0 + 88;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v23 = *(void *)(v0 + 16);
    uint64_t v6 = *(void **)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    int v8 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 160) = 4;
    swift_retain();
    uint64_t result = sub_1000A4570();
    if (v8 == 10)
    {
      if (!v6)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v10 = v6;
      swift_bridgeObjectRetain();
      sub_100033290(1u, v6);
      sub_10003E804(v23, v4, v6, v5, v7, 0xAu);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4800();
      id v18 = objc_allocWithZone((Class)NSError);
      NSString v19 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v20 = [v18 initWithDomain:v19 code:46 userInfo:0];

      sub_100033290(2u, v20);
      sub_10003E804(v23, v4, v6, v5, v7, v8);
    }
  }
  else
  {
    uint64_t v11 = (void **)(v0 + 80);
    uint64_t v12 = *(void *)(v0 + 152);
    swift_errorRelease();
    *(void *)(v1 + 64) = v12;
    swift_errorRetain();
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v13 = *v11;
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v3 - 26) = 4;
      swift_retain();
      sub_1000A4570();
      sub_1000A4800();
      *(void *)(v3 - 16) = v13;
      sub_10003FD08(&qword_1000CA150, type metadata accessor for CKError);
      uint64_t v14 = sub_1000A4220();
      id v15 = objc_allocWithZone((Class)NSError);
      NSString v16 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v17 = [v15 initWithDomain:v16 code:v14 userInfo:0];

      sub_100033290(1u, v17);
    }
    else
    {
      swift_errorRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v3 - 27) = 4;
      swift_retain();
      sub_1000A4570();
      uint64_t v21 = (void *)sub_1000A4230();
      sub_100033290(2u, v21);
    }
  }
  swift_errorRelease();
  uint64_t v22 = *(uint64_t (**)(void))(v1 + 8);
  return v22();
}

uint64_t sub_10002B9F0()
{
  return sub_10002E7AC();
}

uint64_t sub_10002BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1000A4990();
  v4[3] = sub_1000A4980();
  uint64_t v6 = sub_1000A4950();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10002BA9C, v6, v5);
}

uint64_t sub_10002BA9C()
{
  uint64_t v1 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_lastServicesData);
  uint64_t v2 = *v1;
  v0[6] = *v1;
  uint64_t v3 = v1[1];
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002BB68;
  return sub_10002BCAC(0, v2, v3);
}

uint64_t sub_10002BB68()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_100028FC0, v3, v2);
}

uint64_t sub_10002BCAC(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = v3;
  *(void *)(v4 + 72) = a2;
  *(unsigned char *)(v4 + 145) = a1;
  sub_1000A4990();
  *(void *)(v4 + 96) = sub_1000A4980();
  uint64_t v6 = sub_1000A4950();
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 112) = v5;
  return _swift_task_switch(sub_10002BD4C, v6, v5);
}

uint64_t sub_10002BD4C()
{
  *(_OWORD *)(*(void *)(v0 + 88) + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_lastServicesData) = *(_OWORD *)(v0 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = sub_10002BE0C;
  char v2 = *(unsigned char *)(v0 + 145);
  return sub_10002AF24(v2);
}

uint64_t sub_10002BE0C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10002BF2C, v3, v2);
}

uint64_t sub_10002BF2C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 62) != 4) {
    goto LABEL_6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57) != 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 58) != 2)
    {
LABEL_6:
      char v1 = *(unsigned char *)(v0 + 145);
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 61) = v1;
      swift_retain();
      sub_1000A4570();
      goto LABEL_7;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 59) == 3)
  {
    swift_release();
LABEL_7:
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  char v4 = *(unsigned char *)(v0 + 145);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 60) = v4;
  swift_retain();
  sub_1000A4570();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10002C20C;
  return sub_100034038();
}

uint64_t sub_10002C20C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_10002C3F8;
  }
  else {
    uint64_t v5 = sub_10002C348;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002C348()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 144) = 3;
  swift_retain();
  sub_1000A4570();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002C3F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 136);
  swift_release();
  *(void *)(v0 + 64) = v2;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v15 = *(void *)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    int v7 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 63) = 5;
    swift_retain();
    uint64_t result = sub_1000A4570();
    if (v7 == 4)
    {
      if (!v5)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v9 = v5;
      swift_bridgeObjectRetain();
      sub_100033290(5u, v5);
      sub_10003E804(v15, v3, v5, v4, v6, 4u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4800();
      id v11 = objc_allocWithZone((Class)NSError);
      NSString v12 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v13 = [v11 initWithDomain:v12 code:46 userInfo:0];

      sub_100033290(2u, v13);
      sub_10003E804(v15, v3, v5, v4, v6, v7);
    }
  }
  else
  {
    swift_errorRelease();
    id v10 = (void *)sub_1000A4230();
    sub_100033290(2u, v10);
  }
  swift_errorRelease();
  uint64_t v14 = *(uint64_t (**)(void))(v1 + 8);
  return v14();
}

uint64_t sub_10002C674(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100008704(&qword_1000CAB08);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (HIBYTE(v11) - 2 >= 4)
      {
        char v7 = HIBYTE(v11) & 1;
        sub_1000A49A0();
        uint64_t v8 = sub_1000A49C0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 0, 1, v8);
        sub_1000A4990();
        swift_retain();
        uint64_t v9 = sub_1000A4980();
        uint64_t v10 = swift_allocObject();
        *(void *)(v10 + 16) = v9;
        *(void *)(v10 + 24) = &protocol witness table for MainActor;
        *(void *)(v10 + 32) = v6;
        *(unsigned char *)(v10 + 40) = v7;
        sub_1000210F4((uint64_t)v5, (uint64_t)&unk_1000CB040, v10);
        swift_release();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10002C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 64) = a5;
  *(void *)(v5 + 16) = a4;
  sub_1000A4990();
  *(void *)(v5 + 24) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v6;
  return _swift_task_switch(sub_10002C8CC, v7, v6);
}

uint64_t sub_10002C8CC()
{
  int v1 = (uint64_t *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_lastServicesData);
  uint64_t v2 = *v1;
  *(void *)(v0 + 48) = *v1;
  uint64_t v3 = v1[1];
  swift_unknownObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002BB68;
  char v5 = *(unsigned char *)(v0 + 64);
  return sub_10002BCAC(v5, v2, v3);
}

uint64_t sub_10002C99C(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = sub_100008704(&qword_1000CAB08);
  uint64_t result = __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1 == 3)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      sub_1000A49A0();
      uint64_t v7 = sub_1000A49C0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
      sub_1000A4990();
      swift_retain();
      uint64_t v8 = sub_1000A4980();
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v8;
      v9[3] = &protocol witness table for MainActor;
      v9[4] = v6;
      sub_100055948((uint64_t)v5, (uint64_t)&unk_1000CB030, (uint64_t)v9);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10002CB04(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  *(double *)(v7 + 96) = a6;
  *(double *)(v7 + 104) = a7;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(unsigned char *)(v7 + 200) = a2;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a3;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v7 + 112) = swift_task_alloc();
  *(void *)(v7 + 120) = swift_task_alloc();
  uint64_t v8 = sub_1000A42E0();
  *(void *)(v7 + 128) = v8;
  *(void *)(v7 + 136) = *(void *)(v8 - 8);
  *(void *)(v7 + 144) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v7 + 152) = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  *(void *)(v7 + 160) = v10;
  *(void *)(v7 + 168) = v9;
  return _swift_task_switch(sub_10002CC44, v10, v9);
}

uint64_t sub_10002CC44()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 176) = Strong;
  if (!Strong)
  {
    swift_release();
    id v4 = [objc_allocWithZone((Class)UIImage) init];
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(id))(v0 + 8);
    return v18(v4);
  }
  uint64_t v2 = *(void **)(v0 + 72);
  if (v2)
  {
    id v3 = v2;
    swift_release();
    id v4 = *(id *)(v0 + 72);
    goto LABEL_11;
  }
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    swift_release();
    NSString v5 = sub_1000A47C0();
    id v4 = [self imageNamed:v5];

    goto LABEL_11;
  }
  uint64_t v6 = *(void **)(v0 + 80);
  if (v6)
  {
    id v7 = v6;
    swift_release();
    id v4 = *(id *)(v0 + 80);
    goto LABEL_11;
  }
  uint64_t v8 = Strong;
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 120);
  sub_10001F904(*(void *)(v0 + 64), v11, &qword_1000CA3B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 120);
    swift_release();
    sub_10000B988(v12, &qword_1000CA3B0);
    id v4 = 0;
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 120), *(void *)(v0 + 128));
  uint64_t v20 = *(void *)(v8 + 56);
  char v21 = *(unsigned char *)(v8 + 64);
  sub_100040DBC(v20, v21);
  double v22 = sub_10002E42C(v20, v21);
  sub_100040DC8(v20, v21);
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI + 8);
    if (v24)
    {
      uint64_t v25 = *(void *)(v0 + 136);
      uint64_t v26 = *(void *)(v0 + 128);
      uint64_t v27 = *(void *)(v0 + 112);
      uint64_t v28 = *(void *)(v23 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI);
      (*(void (**)(uint64_t, void, uint64_t))(v25 + 16))(v27, *(void *)(v0 + 144), v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v26);
      swift_bridgeObjectRetain();
      LOBYTE(v26) = sub_10009C6AC(v28, v24, v27);
      swift_bridgeObjectRelease();
      sub_10000B988(v27, &qword_1000CA3B0);
      if (sub_10009B2D4(v26) == 0x7265646C6F66 && v29 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      char v30 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_31:
        NSString v31 = sub_1000A47C0();
        id v4 = [self imageNamed:v31];

        swift_unknownObjectRelease();
        if (v4)
        {
          (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
          swift_release();
LABEL_11:
          sub_10001F798(0, &qword_1000CB018);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000A4560();
          swift_release();
          swift_release();
          id v13 = *(void **)(v0 + 40);
          if (qword_1000C9F48 != -1) {
            swift_once();
          }
          char v14 = sub_1000A4B70();

          if (v14)
          {
            if (v4) {
              goto LABEL_20;
            }
          }
          else
          {
            swift_getKeyPath();
            swift_getKeyPath();
            sub_1000A4560();
            swift_release();
            swift_release();
            uint64_t v15 = *(void **)(v0 + 48);
            id v16 = [objc_allocWithZone((Class)UIImage) init];
            char v17 = sub_1000A4B70();

            if (v4) {
              goto LABEL_20;
            }
            if ((v17 & 1) == 0)
            {
              swift_getKeyPath();
              swift_getKeyPath();
              sub_1000A4560();
              swift_release();
              swift_release();
              swift_release();
              id v4 = *(id *)(v0 + 56);
              goto LABEL_21;
            }
          }
          id v4 = (id)qword_1000CA670;
LABEL_20:
          swift_release();
          goto LABEL_21;
        }
        goto LABEL_34;
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_34:
  NSString v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v32;
  *NSString v32 = v0;
  v32[1] = sub_10002D258;
  uint64_t v33 = *(void *)(v0 + 144);
  double v34 = *(double *)(v0 + 96);
  double v35 = *(double *)(v0 + 104);
  return sub_10003ECA4(v33, v34, v35, v22);
}

uint64_t sub_10002D258(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  return _swift_task_switch(sub_10002D380, v4, v3);
}

uint64_t sub_10002D380()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  id v4 = (id)v0[24];
  sub_10001F798(0, &qword_1000CB018);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  NSString v5 = (void *)v0[5];
  if (qword_1000C9F48 != -1) {
    swift_once();
  }
  char v6 = sub_1000A4B70();

  if (v6)
  {
    if (v4) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  id v7 = (void *)v0[6];
  id v8 = [objc_allocWithZone((Class)UIImage) init];
  char v9 = sub_1000A4B70();

  if (v4) {
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_9:
    id v4 = (id)qword_1000CA670;
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  id v4 = (id)v0[7];
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(id))v0[1];
  return v10(v4);
}

uint64_t sub_10002D600()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002D674(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  char v6 = (int *)sub_100008704(&qword_1000CB000);
  uint64_t v7 = *(unsigned __int8 *)(a2 + v6[12]);
  uint64_t v8 = *(void *)(a2 + v6[16]);
  uint64_t v9 = *(void *)(a2 + v6[20]);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10002D794;
  return v12(a2, v7, v8, v9);
}

uint64_t sub_10002D794(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void sub_10002D8A4(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = (void *)a1[1];
  if (v3)
  {
    id v5 = [v3 containerOptions];
    unsigned int v6 = [v5 prefersHiddenAllowedSharingOptionsUI];

    if (v6) {
      uint64_t v4 = 0;
    }
  }
  *a2 = v4;
}

uint64_t sub_10002D90C(char *a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    uint64_t v10 = sub_1000A42E0();
    int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10);
    sub_10000B988((uint64_t)v7, &qword_1000CA3B0);
    if (v11 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      BOOL v12 = (v18 & 0xFE) != 8;
      if (v8) {
        return swift_release();
      }
    }
    else
    {
      if (v8) {
        return swift_release();
      }
      BOOL v12 = 1;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if (v18 == 2 && v12)
    {
      uint64_t v13 = sub_1000A49C0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
      uint64_t v14 = swift_allocObject();
      swift_weakInit();
      sub_1000A4990();
      swift_retain();
      uint64_t v15 = sub_1000A4980();
      id v16 = (void *)swift_allocObject();
      void v16[2] = v15;
      v16[3] = &protocol witness table for MainActor;
      void v16[4] = v14;
      swift_release();
      sub_1000210F4((uint64_t)v4, (uint64_t)&unk_1000CAFE0, (uint64_t)v16);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10002DC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = sub_1000A4460();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = sub_1000A4990();
  v4[13] = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  v4[14] = v7;
  v4[15] = v6;
  return _swift_task_switch(sub_10002DD3C, v7, v6);
}

uint64_t sub_10002DD3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[16] = Strong;
  if (Strong)
  {
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    v0[17] = v2;
    if (v2)
    {
      sub_1000A4440();
      uint64_t v3 = sub_1000A4450();
      os_log_type_t v4 = sub_1000A4A40();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Refetching share due to network change.", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v6 = v0[11];
      uint64_t v7 = v0[8];
      uint64_t v8 = v0[9];

      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v0[18] = v9;
      v0[19] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v9(v6, v7);
      v0[20] = sub_1000A4980();
      uint64_t v10 = (void *)swift_task_alloc();
      v0[21] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_10002DF28;
      return sub_100031EC0();
    }
    swift_release();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10002DF28()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000A4950();
  if (v0) {
    os_log_type_t v4 = sub_10002E16C;
  }
  else {
    os_log_type_t v4 = sub_10002E084;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10002E084()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_10002E0E8, v1, v2);
}

uint64_t sub_10002E0E8()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002E16C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_10002E1D0, v1, v2);
}

uint64_t sub_10002E1D0()
{
  char v17 = v0;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[22];
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v14 = v0[10];
    uint64_t v4 = v0[8];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v16 = v6;
    v0[5] = v3;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    v0[6] = sub_10003CFA4(v7, v8, &v16);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to refetch share for network change %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v15(v14, v4);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[8];
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

double sub_10002E42C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000A46C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000A4A30();
  uint64_t v9 = sub_1000A46E0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_10003CFA4(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000A46B0();
  swift_getAtKeyPath();
  sub_100040DC8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_10002E63C()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E650@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10002E664()
{
  return sub_10003CBAC();
}

uint64_t sub_10002E678()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E68C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002E700()
{
  return sub_10002E714();
}

uint64_t sub_10002E714()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();

  return swift_release();
}

uint64_t sub_10002E784()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E798()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E7AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002E818()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E82C()
{
  return sub_10002E7AC();
}

uint64_t sub_10002E840()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002E8B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000A42E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_shouldStopAccessingSharedFileOrFolderURL;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_shouldStopAccessingSharedFileOrFolderURL) == 1)
  {
    sub_10001F904(a1, (uint64_t)&v17 - v12, &qword_1000CA3B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
    {
      sub_10000B988((uint64_t)v13, &qword_1000CA3B0);
    }
    else
    {
      sub_1000A4290();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    uint64_t result = sub_10000B988((uint64_t)v11, &qword_1000CA3B0);
    BOOL v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    sub_10000B988((uint64_t)v11, &qword_1000CA3B0);
    BOOL v16 = sub_1000A42B0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(unsigned char *)(v2 + v14) = v16;
  return result;
}

uint64_t sub_10002EB3C()
{
  return sub_10002EB50();
}

uint64_t sub_10002EB50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

double sub_10002EBBC@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10002EC3C()
{
  return sub_1000A4570();
}

uint64_t sub_10002ECC0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10002ED40(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_10002EDB8(char a1, char a2)
{
  uint64_t v4 = sub_1000A4460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    if (a1)
    {
      sub_1000A4440();
      uint64_t v8 = sub_1000A4450();
      os_log_type_t v9 = sub_1000A4A20();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "setExecutionModeForSPI specified true for both isPreShare and isAddPeople; this will eventually become an internal error",
          v10,
          2u);
        swift_slowDealloc();
      }

      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v13[13] = 3;
    swift_retain();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    uint64_t result = swift_release();
    if (v13[15] == 3) {
      return result;
    }
    if (a1) {
      char v12 = 1;
    }
    else {
      char v12 = 2;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v13[14] = v12;
    swift_retain();
  }
  return sub_1000A4570();
}

uint64_t sub_10002EFE0()
{
  v1[5] = v0;
  sub_100008704(&qword_1000CA3B0);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  uint64_t v2 = sub_1000A42E0();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = sub_1000A4460();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  sub_1000A4990();
  v1[15] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  return _swift_task_switch(sub_10002F1B0, v5, v4);
}

uint64_t sub_10002F1B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 133) = 1;
  swift_retain();
  sub_1000A4570();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 129) & 0xFE) != 8)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!Strong)
    {
      sub_1000A4440();
      uint64_t v7 = sub_1000A4450();
      os_log_type_t v8 = sub_1000A4A40();
      if (os_log_type_enabled(v7, v8))
      {
        os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "ext computed property--extensionController is nil--will assert", v9, 2u);
        swift_slowDealloc();
      }
      uint64_t v11 = *(void *)(v0 + 104);
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 96);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    if (!swift_unknownObjectWeakLoadStrong())
    {
      __break(1u);
      JUMPOUT(0x10002F9ECLL);
    }
    swift_release();
    swift_unknownObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 135) = 0;
    swift_retain();
    goto LABEL_23;
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 80) + 32))(*(void *)(v0 + 88), *(void *)(v0 + 64), *(void *)(v0 + 72));
    sub_1000A4270(v13);
    uint64_t v15 = v14;
    *(void *)(v0 + 32) = 0;
    id v16 = (id)BRSharingCreateShareForItemAtURL();

    if (v16)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v17 = v16;
      swift_retain();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v18 = *(unsigned __int8 *)(v0 + 132);
      swift_release();
      if (v18 == 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000A4560();
        swift_release();
        swift_release();
        uint64_t v19 = 1;
        switch(*(unsigned char *)(v0 + 134))
        {
          case 1:
            uint64_t v19 = 3;
            goto LABEL_20;
          case 2:
            uint64_t v19 = 2;
            goto LABEL_20;
          case 3:
            return sub_1000A4CD0();
          default:
LABEL_20:
            swift_release();
            break;
        }
      }
      else
      {
        uint64_t v19 = 1;
      }
      [v17 setPublicPermission:v19];
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 16) = v16;
      swift_retain();
      sub_1000A4570();
    }
    else
    {
      uint64_t v20 = *(void **)(v0 + 32);
      if (v20)
      {
        uint64_t v22 = *(void *)(v0 + 80);
        uint64_t v21 = *(void *)(v0 + 88);
        uint64_t v23 = *(void *)(v0 + 72);
        sub_100008C08();
        swift_allocError();
        *(_OWORD *)uint64_t v24 = xmmword_1000A69E0;
        *(void *)(v24 + 24) = 0;
        *(void *)(v24 + 32) = 0;
        *(void *)(v24 + 16) = v20;
        *(unsigned char *)(v24 + 40) = 1;
        id v25 = v20;
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
        swift_getKeyPath();
        swift_getKeyPath();
        *(unsigned char *)(v0 + 131) = 0;
        goto LABEL_4;
      }
      uint64_t v26 = *(void *)(v0 + 72);
      uint64_t v27 = *(void *)(v0 + 80);
      uint64_t v29 = *(void *)(v0 + 48);
      uint64_t v28 = *(void *)(v0 + 56);
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 24) = 0;
      swift_retain_n();
      sub_1000A4570();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, 1, 1, v26);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10001F904(v28, v29, &qword_1000CA3B0);
      swift_retain();
      sub_1000A4570();
      sub_10000B988(v28, &qword_1000CA3B0);
      swift_release();
    }
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 130) = 0;
    swift_retain();
LABEL_23:
    sub_1000A4570();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_24;
  }
  sub_10000B988(*(void *)(v0 + 64), &qword_1000CA3B0);
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v4 = 0xD000000000000016;
  *(void *)(v4 + 8) = 0x80000001000ABC00;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  swift_willThrow();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 128) = 0;
LABEL_4:
  swift_retain();
  sub_1000A4570();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_24:
  return v5();
}

uint64_t sub_10002F9FC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 256) = a2;
  *(void *)(v4 + 264) = v3;
  *(unsigned char *)(v4 + 368) = a3;
  *(void *)(v4 + 248) = a1;
  uint64_t v5 = sub_1000A4460();
  *(void *)(v4 + 272) = v5;
  *(void *)(v4 + 280) = *(void *)(v5 - 8);
  *(void *)(v4 + 288) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v4 + 296) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v4 + 304) = v7;
  *(void *)(v4 + 312) = v6;
  return _swift_task_switch(sub_10002FAF8, v7, v6);
}

uint64_t sub_10002FAF8()
{
  if (*(unsigned char *)(v0 + 368))
  {
    uint64_t v6 = sub_10000E664();
    *(void *)(v0 + 328) = v6;
    uint64_t v7 = v6;
    NSString v8 = sub_1000A47C0();
    *(void *)(v0 + 352) = v8;
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 240;
    *(void *)(v0 + 88) = sub_1000300E0;
    uint64_t v9 = swift_continuation_init();
    *(void *)(v0 + 184) = _NSConcreteStackBlock;
    *(void *)(v0 + 192) = 0x40000000;
    *(void *)(v0 + 200) = sub_10002E638;
    *(void *)(v0 + 208) = &unk_1000C25A0;
    *(void *)(v0 + 216) = v9;
    [v7 fetchShareParticipantWithPhoneNumber:v8 completionHandler:v0 + 184];
    uint64_t v5 = v0 + 80;
  }
  else
  {
    uint64_t v1 = sub_10000E664();
    *(void *)(v0 + 320) = v1;
    uint64_t v2 = v1;
    NSString v3 = sub_1000A47C0();
    *(void *)(v0 + 336) = v3;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 232;
    *(void *)(v0 + 24) = sub_10002FF24;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_10002E638;
    *(void *)(v0 + 168) = &unk_1000C25B8;
    *(void *)(v0 + 176) = v4;
    [v2 fetchShareParticipantWithEmailAddress:v3 completionHandler:v0 + 144];
    uint64_t v5 = v0 + 16;
  }
  return _swift_continuation_await(v5);
}

uint64_t sub_10002FF24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 344) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v5 = sub_10003029C;
  }
  else {
    uint64_t v5 = sub_100030054;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100030054()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  uint64_t v3 = v0[29];

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_1000300E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 360) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v5 = sub_1000304F8;
  }
  else {
    uint64_t v5 = sub_100030210;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100030210()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[41];
  swift_release();
  uint64_t v3 = v0[30];

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_10003029C()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  swift_willThrow();

  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000A4450();
  os_log_type_t v4 = sub_1000A4A20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[28] = v7;
    sub_1000A4BC0();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "participant(withAddress) got CK error: %@", v5, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[35];
  uint64_t v8 = v0[36];
  uint64_t v10 = v0[34];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v12 = 0xD000000000000019;
  *(void *)(v12 + 8) = 0x80000001000AB320;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 40) = 2;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1000304F8()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[41];
  swift_release();
  swift_willThrow();

  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000A4450();
  os_log_type_t v4 = sub_1000A4A20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[28] = v7;
    sub_1000A4BC0();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "participant(withAddress) got CK error: %@", v5, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[35];
  uint64_t v8 = v0[36];
  uint64_t v10 = v0[34];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v11 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v12 = 0xD000000000000019;
  *(void *)(v12 + 8) = 0x80000001000AB320;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 40) = 2;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100030750(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100008704(qword_1000CA3F0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t sub_100030810(uint64_t a1, unsigned __int8 a2)
{
  if (sub_1000212A0())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    if (v8) {
      goto LABEL_6;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (v7 != 1) {
    return 3;
  }
LABEL_6:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((v6 & 1) == 0 && (a2 & (a1 == 3)) == 0) {
    return 3;
  }
  return sub_1000A4AB0();
}

uint64_t sub_1000309E8(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 210) = a1;
  uint64_t v3 = sub_1000A4460();
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 72) = *(void *)(v3 - 8);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v2 + 96) = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  *(void *)(v2 + 104) = v5;
  *(void *)(v2 + 112) = v4;
  return _swift_task_switch(sub_100030AF0, v5, v4);
}

uint64_t sub_100030AF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  if (!v1)
  {
    swift_release();
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v10 = 0xD00000000000002CLL;
    *(void *)(v10 + 8) = 0x80000001000AB270;
    *(_OWORD *)(v10 + 16) = xmmword_1000A69F0;
    *(void *)(v10 + 32) = 0x80000001000AB2A0;
    *(unsigned char *)(v10 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
    return v9();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 209);
  swift_release();
  if (v2 == 1)
  {
    swift_release();
    sub_1000A4440();
    uint64_t v3 = sub_1000A4450();
    os_log_type_t v4 = sub_1000A4A40();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "addParticipantsToShare, doing nothing as we have a public share", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  *(void *)(v0 + 32) = &_swiftEmptyArrayStorage;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v12 = *(void *)(v0 + 40);
  *(void *)(v0 + 120) = v12;
  uint64_t v13 = *(void *)(v12 + 16);
  *(void *)(v0 + 128) = v13;
  if (v13)
  {
    *(void *)(v0 + 136) = 0;
    uint64_t v14 = *(void *)(v12 + 32);
    *(void *)(v0 + 144) = v14;
    uint64_t v15 = *(void *)(v12 + 40);
    *(void *)(v0 + 152) = v15;
    char v16 = *(unsigned char *)(v12 + 48);
    *(unsigned char *)(v0 + 211) = v16;
    sub_10003E618();
    id v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v17;
    *id v17 = v0;
    v17[1] = sub_100031074;
    return sub_10002F9FC(v14, v15, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000A4440();
    swift_retain_n();
    int v18 = sub_1000A4450();
    os_log_type_t v19 = sub_1000A4A40();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      uint64_t v21 = *(void *)(*(void *)(v0 + 48) + 16);
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)(v0 + 24) = v21;
      sub_1000A4BC0();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "addParticipantsToShare, adding %ld", v20, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    uint64_t v22 = *(void *)(v0 + 32);
    *(void *)(v0 + 184) = v22;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_100031654;
    return sub_1000318D8(v22, 1, 1);
  }
}

uint64_t sub_100031074(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[21] = a1;
  v3[22] = v1;
  swift_task_dealloc();
  sub_10003E620();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    uint64_t v6 = sub_1000317E4;
  }
  else
  {
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    uint64_t v6 = sub_1000311B4;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1000311B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = 1;
  switch(*(unsigned char *)(v0 + 208))
  {
    case 1:
      uint64_t v1 = 3;
      goto LABEL_4;
    case 2:
      uint64_t v1 = 2;
      goto LABEL_4;
    case 3:
      return sub_1000A4CD0();
    default:
LABEL_4:
      int v2 = *(void **)(v0 + 168);
      unsigned __int8 v3 = *(unsigned char *)(v0 + 210);
      swift_release();
      [v2 setPermission:v1];
      objc_msgSend(v2, "setRole:", sub_100030810((uint64_t)objc_msgSend(v2, "permission"), v3));
      id v4 = v2;
      sub_1000A48F0();
      if (*(void *)((*(void *)(v0 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1000A4930();
      uint64_t v5 = *(void **)(v0 + 168);
      uint64_t v6 = *(void *)(v0 + 128);
      uint64_t v7 = *(void *)(v0 + 136) + 1;
      sub_1000A4940();
      sub_1000A4920();

      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        sub_1000A4440();
        swift_retain_n();
        uint64_t v8 = sub_1000A4450();
        os_log_type_t v9 = sub_1000A4A40();
        if (os_log_type_enabled(v8, v9))
        {
          uint64_t v10 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v10 = 134217984;
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000A4560();
          swift_release();
          swift_release();
          uint64_t v11 = *(void *)(*(void *)(v0 + 48) + 16);
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v0 + 24) = v11;
          sub_1000A4BC0();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "addParticipantsToShare, adding %ld", v10, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }

        (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
        uint64_t v19 = *(void *)(v0 + 32);
        *(void *)(v0 + 184) = v19;
        uint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 192) = v20;
        *uint64_t v20 = v0;
        v20[1] = sub_100031654;
        return sub_1000318D8(v19, 1, 1);
      }
      else
      {
        uint64_t v12 = *(void *)(v0 + 136) + 1;
        *(void *)(v0 + 136) = v12;
        uint64_t v13 = *(void *)(v0 + 120) + 24 * v12;
        uint64_t v14 = *(void *)(v13 + 32);
        *(void *)(v0 + 144) = v14;
        uint64_t v15 = *(void *)(v13 + 40);
        *(void *)(v0 + 152) = v15;
        char v16 = *(unsigned char *)(v13 + 48);
        *(unsigned char *)(v0 + 211) = v16;
        sub_10003E618();
        id v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 160) = v17;
        *id v17 = v0;
        v17[1] = sub_100031074;
        return sub_10002F9FC(v14, v15, v16);
      }
  }
}

uint64_t sub_100031654()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100031858;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100031770;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100031770()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000317E4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100031858()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000318D8(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 114) = a3;
  *(unsigned char *)(v4 + 113) = a2;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = v3;
  uint64_t v5 = sub_1000A4460();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = *(void *)(v5 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v4 + 64) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = v6;
  return _swift_task_switch(sub_1000319D4, v7, v6);
}

uint64_t sub_1000319D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 88) = v1;
  if (!v1)
  {
    swift_release();
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v19 = 0xD000000000000034;
    *(void *)(v19 + 8) = 0x80000001000AB2E0;
    *(_OWORD *)(v19 + 16) = xmmword_1000A69F0;
    *(void *)(v19 + 32) = 0x80000001000AB2A0;
    *(unsigned char *)(v19 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v9();
  }
  if (*(unsigned char *)(v0 + 113) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    int v2 = *(unsigned __int8 *)(v0 + 112);
    swift_release();
    if (v2 == 1)
    {
      swift_release();
      sub_1000A4440();
      uint64_t v3 = sub_1000A4450();
      os_log_type_t v4 = sub_1000A4A40();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "addParticipantsToShare, doing nothing as we have a public share", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v6 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      swift_task_dealloc();
      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    }
  }
  unint64_t v10 = sub_10009A5DC();
  uint64_t v12 = v11;
  char v14 = v13;
  *(void *)(v0 + 96) = v11;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, char))((char *)&dword_1000CA388
                                                                               + dword_1000CA388);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100031D08;
  char v16 = *(unsigned char *)(v0 + 114);
  uint64_t v17 = *(void *)(v0 + 24);
  return v20(v17, (uint64_t)v1, v10 & 0x101FFFFFFFFFFLL, v12, v14 & 1, v16);
}

uint64_t sub_100031D08()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100031E4C, v3, v2);
}

uint64_t sub_100031E4C()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100031EC0()
{
  v1[5] = v0;
  uint64_t v2 = sub_1000A4460();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_1000A42E0();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_1000A4990();
  v1[19] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  v1[20] = v5;
  v1[21] = v4;
  return _swift_task_switch(sub_100032090, v5, v4);
}

uint64_t sub_100032090()
{
  uint64_t v31 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 224) & 0xFE) != 8)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 112);
    swift_release();
    sub_10000B988(v5, &qword_1000CA3B0);
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000016;
    *(void *)(v6 + 8) = 0x80000001000ABC00;
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = 0;
    *(unsigned char *)(v6 + 40) = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v7();
  }
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 32))(v9, *(void *)(v0 + 112), v11);
  sub_1000A4440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
  char v13 = sub_1000A4450();
  os_log_type_t v14 = sub_1000A4A40();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = *(void *)(v0 + 128);
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 64);
  uint64_t v21 = *(void *)(v0 + 48);
  if (v15)
  {
    uint64_t v29 = *(void *)(v0 + 64);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_10003FD08((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v23 = sub_1000A4D50();
    *(void *)(v0 + 32) = sub_10003CFA4(v23, v24, &v30);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    id v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(v16, v18);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Fetching share for URL: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v29, v21);
  }
  else
  {
    id v25 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v25(*(void *)(v0 + 136), *(void *)(v0 + 120));

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  *(void *)(v0 + 192) = v25;
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1000325A4;
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v28 = *(void *)(v0 + 96);
  return sub_100009A18(v28, v27);
}

uint64_t sub_1000325A4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 208) = a1;
  *(void *)(v4 + 216) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 168);
  uint64_t v6 = *(void *)(v3 + 160);
  if (v1) {
    uint64_t v7 = sub_100032A0C;
  }
  else {
    uint64_t v7 = sub_1000326E8;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1000326E8()
{
  uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 88);
  swift_release();
  sub_1000409B0(v4, v3, &qword_1000CA3B0);
  sub_10001F904(v3, v5, &qword_1000CA3B0);
  if (v1(v5, 1, v2) == 1)
  {
    sub_10000B988(*(void *)(v0 + 88), &qword_1000CA3B0);
    id v6 = *(id *)(v0 + 208);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 88);
    id v8 = *(id *)(v0 + 208);
    sub_10000B988(v7, &qword_1000CA3B0);
    id v6 = [objc_allocWithZone((Class)BRCKShareSubitem) initWithShare:v8];
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);
  sub_10001F904(*(void *)(v0 + 104), v10, &qword_1000CA3B0);
  sub_10001F904(v10, v9, &qword_1000CA3B0);
  swift_retain();
  sub_100046C7C(v9);
  swift_release();
  sub_10000B988(v10, &qword_1000CA3B0);
  swift_getKeyPath();
  swift_getKeyPath();
  if (v6)
  {
    *(void *)(v0 + 24) = v6;
    swift_retain();
    sub_1000A4570();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 80);
    *(void *)(v0 + 16) = 0;
    swift_retain_n();
    sub_1000A4570();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001F904(v13, v14, &qword_1000CA3B0);
    swift_retain();
    sub_1000A4570();
    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
  }
  BOOL v15 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 120);
  sub_10000B988(*(void *)(v0 + 104), &qword_1000CA3B0);
  v15(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100032A0C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[24];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100032B08(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  sub_1000A4990();
  v3[12] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  v3[13] = v5;
  v3[14] = v4;
  return _swift_task_switch(sub_100032BA4, v5, v4);
}

uint64_t sub_100032BA4()
{
  type metadata accessor for CloudKitOperations();
  uint64_t v1 = (void *)swift_allocObject();
  v0[15] = v1;
  v1[2] = 0xD000000000000021;
  v1[3] = 0x80000001000AA210;
  v1[4] = 0xD000000000000016;
  v1[5] = 0x80000001000AA240;
  v1[6] = 0xD00000000000001DLL;
  v1[7] = 0x80000001000AA260;
  v0[6] = 0;
  v0[5] = 0;
  sub_100008704(&qword_1000CA880);
  sub_1000A4530();
  return _swift_task_switch(sub_100032C9C, 0, 0);
}

uint64_t sub_100032C9C()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  uint64_t v6 = sub_100008704(&qword_1000CB0B8);
  *uint64_t v5 = v0;
  v5[1] = sub_100032DB0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000002DLL, 0x80000001000AA0B0, sub_10004137C, v4, v6);
}

uint64_t sub_100032DB0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10003311C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100032ECC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100032ECC()
{
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 16);
  *(void *)(v0 + 168) = *(void *)(v0 + 32);
  return _swift_task_switch(sub_100032EF4, *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_100032EF4()
{
  uint64_t v1 = v0[10];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[10];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[8] = v2;
    id v3 = v2;
    swift_retain();
    sub_1000A4570();
  }
  else
  {
    uint64_t v4 = (void *)v0[20];
    swift_retain();
    id v5 = v4;
    sub_10009F0B0(v4, 0);

    swift_release();
  }
  uint64_t v7 = (void *)v0[20];
  uint64_t v6 = (void *)v0[21];
  uint64_t v8 = (void *)v0[19];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[11];
  uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_ckMetadata);
  *(void *)(v10 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_ckMetadata) = v6;
  id v12 = v6;

  swift_getKeyPath();
  swift_getKeyPath();
  v0[7] = v8;
  swift_retain();
  id v13 = v8;
  sub_1000A4570();

  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v9 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v15 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_deallocClassInstance();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10003311C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_100033180, v1, v2);
}

uint64_t sub_100033180()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS18CloudKitOperations__ckSourceAppBundleID;
  uint64_t v3 = sub_100008704(&qword_1000CAD00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_deallocClassInstance();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100033290(unsigned __int8 a1, void *a2)
{
  uint64_t v3 = v2;
  int v5 = a1;
  uint64_t v6 = sub_1000A4460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v78 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v78 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v78 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v78 - v20;
  if (v5 == 6)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!Strong)
    {
      sub_1000A4440();
      uint64_t v23 = sub_1000A4450();
      os_log_type_t v24 = sub_1000A4A40();
      if (os_log_type_enabled(v23, v24))
      {
        id v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "ext computed property--extensionController is nil--will assert", v25, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000A4800();
      id v26 = objc_allocWithZone((Class)NSError);
      NSString v27 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v28 = [v26 initWithDomain:v27 code:3072 userInfo:0];

      sub_10004DCF8(v28);
      swift_unknownObjectRelease();

      return;
    }
    __break(1u);
    goto LABEL_57;
  }
  if (a2)
  {
    uint64_t v85 = v3;
    id v29 = a2;
    sub_1000A4440();
    uint64_t v30 = v29;
    uint64_t v31 = sub_1000A4450();
    int v32 = sub_1000A4A20();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v79) = v32;
      os_log_t v81 = v31;
      uint64_t v82 = v30;
      uint64_t v83 = v7;
      uint64_t v84 = v6;
      uint64_t v33 = (_DWORD *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v87 = v78;
      uint64_t v80 = v33;
      _DWORD *v33 = 136315394;
      uint64_t v34 = sub_1000A48D0();
      uint64_t v36 = v35;
      if ((0x80000001000ABBE0 & 0x2000000000000000) != 0) {
        unint64_t v37 = (0x80000001000ABBE0 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v37 = 124;
      }
      if ((((unint64_t)"(generic fallback)" >> 61) & ((0x80000001000ABBE0 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
      }
      else
      {
        uint64_t v38 = v34;
        while (sub_1000A48D0() != v38 || v39 != v36)
        {
          char v41 = sub_1000A4D70();
          swift_bridgeObjectRelease();
          if (v41) {
            goto LABEL_38;
          }
          if (v37 == (unint64_t)sub_1000A4860() >> 14) {
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
LABEL_38:
        swift_bridgeObjectRelease();
        sub_1000A48E0();
        uint64_t v42 = sub_1000A4830();
        unint64_t v43 = v58;
        swift_bridgeObjectRelease();
      }
      uint64_t v59 = v80;
      uint64_t v86 = sub_10003CFA4(v42, v43, &v87);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      *((_WORD *)v59 + 6) = 2080;
      uint64_t v30 = v82;
      uint64_t v60 = v82;
      id v61 = [v60 description];
      uint64_t v62 = sub_1000A4800();
      unint64_t v64 = v63;

      uint64_t v86 = sub_10003CFA4(v62, v64, &v87);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      os_log_t v65 = v81;
      _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v79, "%s cancelling via extension with error: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v7 = v83;
      uint64_t v6 = v84;
    }
    else
    {
    }
    uint64_t v66 = *(void (**)(char *, uint64_t))(v7 + 8);
    v66(v19, v6);
    uint64_t v67 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v67)
    {
      sub_1000A4440();
      uint64_t v68 = sub_1000A4450();
      os_log_type_t v69 = sub_1000A4A40();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v70 = 0;
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "ext computed property--extensionController is nil--will assert", v70, 2u);
        swift_slowDealloc();
      }

      v66(v16, v6);
    }
    if (!swift_unknownObjectWeakLoadStrong())
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      return;
    }
    sub_10004DCF8(v30);
  }
  else
  {
    sub_1000A4440();
    uint64_t v44 = sub_1000A4450();
    int v45 = sub_1000A4A40();
    if (os_log_type_enabled(v44, (os_log_type_t)v45))
    {
      LODWORD(v80) = v45;
      uint64_t v82 = v44;
      uint64_t v83 = v7;
      uint64_t v84 = v6;
      uint64_t v85 = v3;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v87 = v79;
      os_log_t v81 = v46;
      LODWORD(v46->isa) = 136315138;
      uint64_t v47 = sub_1000A48D0();
      uint64_t v49 = v48;
      if ((0x80000001000ABBE0 & 0x2000000000000000) != 0) {
        unint64_t v50 = (0x80000001000ABBE0 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v50 = 124;
      }
      if ((((unint64_t)"(generic fallback)" >> 61) & ((0x80000001000ABBE0 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
      }
      else
      {
        uint64_t v51 = v47;
        while (sub_1000A48D0() != v51 || v52 != v49)
        {
          char v54 = sub_1000A4D70();
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_47;
          }
          if (v50 == (unint64_t)sub_1000A4860() >> 14) {
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
LABEL_47:
        swift_bridgeObjectRelease();
        sub_1000A48E0();
        uint64_t v55 = sub_1000A4830();
        unint64_t v56 = v71;
        swift_bridgeObjectRelease();
      }
      uint64_t v72 = (uint8_t *)v81;
      uint64_t v86 = sub_10003CFA4(v55, v56, &v87);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      uint64_t v73 = v82;
      _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v80, "%s dismissing via extension without error", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v6 = v84;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v83 + 8);
      v57(v13, v84);
    }
    else
    {

      uint64_t v57 = *(void (**)(char *, uint64_t))(v7 + 8);
      v57(v13, v6);
    }
    uint64_t v74 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v74)
    {
      sub_1000A4440();
      uint64_t v75 = sub_1000A4450();
      os_log_type_t v76 = sub_1000A4A40();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "ext computed property--extensionController is nil--will assert", v77, 2u);
        swift_slowDealloc();
      }

      v57(v10, v6);
    }
    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_58;
    }
  }
  swift_unknownObjectRelease();
}

uint64_t sub_100033BF8(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 88) = a1;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v2 + 24) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v2 + 32) = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_100033CC4, v4, v3);
}

uint64_t sub_100033CC4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v2 = sub_1000A42E0();
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 64) = v3;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    int v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v5;
    *int v5 = v0;
    v5[1] = sub_100033E10;
    uint64_t v6 = *(void *)(v0 + 24);
    char v7 = *(unsigned char *)(v0 + 88);
    return sub_10001A928(v6, v7);
  }
  return result;
}

uint64_t sub_100033E10()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    uint64_t v4 = v2[6];
    int v5 = sub_100033FA8;
  }
  else
  {
    (*(void (**)(void, void))(v2[8] + 8))(v2[3], v2[7]);
    uint64_t v3 = v2[5];
    uint64_t v4 = v2[6];
    int v5 = sub_100033F3C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100033F3C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100033FA8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100034038()
{
  v1[8] = v0;
  uint64_t v2 = sub_1000A4460();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v1[13] = swift_task_alloc();
  sub_1000A4990();
  v1[14] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[15] = v4;
  v1[16] = v3;
  return _swift_task_switch(sub_10003416C, v4, v3);
}

uint64_t sub_10003416C()
{
  uint64_t v26 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 184) = 2;
  swift_retain();
  sub_1000A4570();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if ((*(unsigned char *)(v0 + 187) & 0xFE) == 8) {
      uint64_t v2 = 0;
    }
    else {
      uint64_t v2 = sub_10000E664();
    }
    *(void *)(v0 + 144) = v2;
    unint64_t v16 = sub_10009A5DC();
    uint64_t v18 = v17;
    char v20 = v19;
    *(void *)(v0 + 152) = v17;
    os_log_type_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000CA370
                                                                                    + dword_1000CA370);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1000346A0;
    uint64_t v22 = *(void *)(v0 + 104);
    return v24(v22, v1, (uint64_t)v2, v16 & 0x101FFFFFFFFFFLL, v18, v20 & 1);
  }
  else
  {
    swift_release();
    sub_100008C08();
    uint64_t v3 = swift_allocError();
    *(_OWORD *)uint64_t v4 = xmmword_1000A6A00;
    *(_OWORD *)(v4 + 16) = xmmword_1000A6A10;
    *(void *)(v4 + 32) = 0x80000001000AB240;
    *(unsigned char *)(v4 + 40) = 11;
    swift_willThrow();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 186) = 0;
    swift_retain();
    sub_1000A4570();
    sub_1000A4440();
    swift_errorRetain();
    swift_errorRetain();
    int v5 = sub_1000A4450();
    os_log_type_t v6 = sub_1000A4A20();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 72);
    if (v7)
    {
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      *(void *)(v0 + 40) = v3;
      swift_errorRetain();
      sub_100008704(qword_1000CA3F0);
      uint64_t v12 = sub_1000A4810();
      *(void *)(v0 + 48) = sub_10003CFA4(v12, v13, &v25);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "saveShare error: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v10);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1000346A0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  v4[21] = a1;
  v4[22] = v1;
  swift_task_dealloc();
  int v5 = (void *)v3[18];
  sub_10000B988(v3[13], &qword_1000CA3B0);
  swift_bridgeObjectRelease();

  uint64_t v6 = v3[16];
  uint64_t v7 = v3[15];
  if (v1) {
    uint64_t v8 = sub_100034B44;
  }
  else {
    uint64_t v8 = sub_100034840;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100034840()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 56) = v1;
  swift_retain();
  id v2 = v1;
  sub_1000A4570();
  sub_1000A4440();
  id v3 = v2;
  uint64_t v4 = sub_1000A4450();
  os_log_type_t v5 = sub_1000A4A40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 32) = [v6 rootRecordID];
    sub_100008704(&qword_1000CAAD0);
    uint64_t v9 = sub_1000A4810();
    *(void *)(v0 + 16) = sub_10003CFA4(v9, v10, &v21);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "saveShare succeeded, rootRecordID: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  uint64_t v15 = *(void **)(v0 + 168);
  unint64_t v16 = *(void **)(v0 + 136);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 185) = 3;
  swift_retain();
  sub_1000A4570();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_100034B44()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 136);
  swift_release();

  uint64_t v2 = *(void *)(v0 + 176);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 186) = 0;
  swift_retain();
  sub_1000A4570();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  id v3 = sub_1000A4450();
  os_log_type_t v4 = sub_1000A4A20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v17 = v7;
    *(void *)(v0 + 40) = v2;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v8 = sub_1000A4810();
    *(void *)(v0 + 48) = sub_10003CFA4(v8, v9, &v17);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "saveShare error: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v15);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 72);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100034DDC()
{
  v1[6] = v0;
  uint64_t v2 = sub_1000A4460();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_1000A4990();
  v1[14] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[15] = v4;
  v1[16] = v3;
  return _swift_task_switch(sub_100034F2C, v4, v3);
}

uint64_t sub_100034F2C()
{
  uint64_t v24 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 136) = Strong;
  if (Strong)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 189) = 2;
    swift_retain();
    sub_1000A4570();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v2 = *(void *)(v0 + 16);
    *(void *)(v0 + 144) = v2;
    if (v2)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if ((*(unsigned char *)(v0 + 194) & 0xFE) == 8) {
        uint64_t v3 = 0;
      }
      else {
        uint64_t v3 = sub_10000E664();
      }
      *(void *)(v0 + 152) = v3;
      unint64_t v17 = sub_10009A5DC();
      *(void *)(v0 + 160) = v18;
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000CA3A0 + dword_1000CA3A0);
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_10003552C;
      uint64_t v20 = *(void *)(v0 + 104);
      return v22(v20, v2, (uint64_t)v3, v17 & 0x101FFFFFFFFFFLL);
    }
    swift_release();
    sub_100008C08();
    uint64_t v5 = swift_allocError();
    *(_OWORD *)uint64_t v6 = xmmword_1000A6A20;
    *(_OWORD *)(v6 + 16) = xmmword_1000A6A30;
    *(void *)(v6 + 32) = 0x80000001000ABDC0;
    *(unsigned char *)(v6 + 40) = 11;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 190) = 0;
    swift_retain();
    sub_1000A4570();
    sub_1000A4440();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = sub_1000A4450();
    uint64_t v8 = sub_1000A4A20();
    BOOL v9 = os_log_type_enabled(v7, (os_log_type_t)v8);
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 56);
    if (v9)
    {
      uint64_t v21 = *(void *)(v0 + 72);
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)(v0 + 32) = v5;
      swift_errorRetain();
      sub_100008704(qword_1000CA3F0);
      uint64_t v14 = sub_1000A4810();
      *(void *)(v0 + 40) = sub_10003CFA4(v14, v15, &v23);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v8, "stopSharing error: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v12);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    }
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_10003552C()
{
  uint64_t v2 = *v1;
  (*v1)[22] = v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)v2[19];
  sub_10000B988(v2[13], &qword_1000CA3B0);
  swift_bridgeObjectRelease();

  uint64_t v4 = v2[16];
  uint64_t v5 = v2[15];
  if (v0) {
    uint64_t v6 = sub_100035A6C;
  }
  else {
    uint64_t v6 = sub_1000356C4;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000356C4()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 24) = 0;
  swift_retain_n();
  sub_1000A4570();
  uint64_t v3 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001F904(v1, v2, &qword_1000CA3B0);
  swift_retain();
  sub_1000A4570();
  sub_10000B988(v1, &qword_1000CA3B0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 192) = 0;
  swift_retain();
  sub_1000A4570();
  sub_1000A4440();
  swift_retain_n();
  uint64_t v4 = sub_1000A4450();
  os_log_type_t v5 = sub_1000A4A40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v11 = *(void **)(v0 + 144);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    char v7 = *(unsigned char *)(v0 + 193);
    swift_release();
    *(_DWORD *)(v0 + 184) = (v7 & 0xFE) != 8;
    sub_1000A4BC0();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "stopSharing succeeded. Is CloudKit Sharing: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }
  else
  {
    uint64_t v8 = *(NSObject **)(v0 + 144);
    swift_release_n();

    uint64_t v4 = v8;
  }

  (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100035A6C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  swift_release();
  swift_unknownObjectRelease();

  uint64_t v2 = *(void *)(v0 + 176);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 190) = 0;
  swift_retain();
  sub_1000A4570();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_1000A4450();
  os_log_type_t v4 = sub_1000A4A20();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v16 = *(void *)(v0 + 72);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    uint64_t v17 = v6;
    *(void *)(v0 + 32) = v2;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    *(void *)(v0 + 40) = sub_10003CFA4(v7, v8, &v17);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "stopSharing error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 56);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100035D30(uint64_t a1)
{
  v2[94] = v1;
  v2[93] = a1;
  v2[95] = sub_100008704(&qword_1000CAAB0);
  v2[96] = swift_task_alloc();
  v2[97] = swift_task_alloc();
  v2[98] = swift_task_alloc();
  v2[99] = swift_task_alloc();
  v2[100] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v2[101] = swift_task_alloc();
  v2[102] = swift_task_alloc();
  v2[103] = swift_task_alloc();
  v2[104] = swift_task_alloc();
  uint64_t v3 = sub_1000A42E0();
  v2[105] = v3;
  v2[106] = *(void *)(v3 - 8);
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  sub_1000A4990();
  v2[110] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  v2[111] = v5;
  v2[112] = v4;
  return _swift_task_switch(sub_100035F08, v5, v4);
}

uint64_t sub_100035F08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 944) & 0xFE) != 8)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v1 = *(void **)(v0 + 696);
    if (v1)
    {
      id v2 = [*(id *)(v0 + 696) URL];
      if (v2)
      {
        uint64_t v3 = v2;
        uint64_t v4 = *(void *)(v0 + 864);
        uint64_t v5 = *(void *)(v0 + 848);
        uint64_t v6 = *(void *)(v0 + 840);
        uint64_t v7 = *(void *)(v0 + 832);
        sub_1000A42A0();

        unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
        v8(v7, v4, v6);
        uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
        v9(v7, 0, 1, v6);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) != 1)
        {
          uint64_t v10 = *(void *)(v0 + 872);
          uint64_t v23 = v8;
          uint64_t v11 = *(void *)(v0 + 848);
          uint64_t v12 = *(void *)(v0 + 840);
          uint64_t v13 = *(void *)(v0 + 832);
          uint64_t v24 = *(void *)(v0 + 824);
          uint64_t v25 = *(void *)(v0 + 816);
          swift_release();
          v23(v10, v13, v12);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v24, v10, v12);
          v9(v24, 0, 1, v12);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10001F904(v24, v25, &qword_1000CA3B0);
          swift_retain_n();
          sub_1000A4570();
          sub_10000B988(v24, &qword_1000CA3B0);

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
LABEL_10:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
          return v20();
        }
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 848) + 56))(*(void *)(v0 + 832), 1, 1, *(void *)(v0 + 840));
      }
      uint64_t v14 = *(void *)(v0 + 832);

      sub_10000B988(v14, &qword_1000CA3B0);
    }
  }
  uint64_t v15 = *(void *)(v0 + 848);
  uint64_t v16 = *(void *)(v0 + 840);
  uint64_t v17 = *(void *)(v0 + 808);
  sub_10001F904(*(void *)(v0 + 744), v17, &qword_1000CA3B0);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  *(void *)(v0 + 904) = v18;
  *(void *)(v0 + 912) = (v15 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v18(v17, 1, v16) == 1)
  {
    uint64_t v19 = *(void *)(v0 + 808);
    swift_release();
    sub_10000B988(v19, &qword_1000CA3B0);
    goto LABEL_10;
  }
  uint64_t v22 = *(void *)(v0 + 760);
  (*(void (**)(void, void, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 856), *(void *)(v0 + 808), *(void *)(v0 + 840));
  *(_DWORD *)(v0 + 936) = *(_DWORD *)(v22 + 48);
  return _swift_task_switch(sub_1000363BC, 0, 0);
}

uint64_t sub_1000363BC()
{
  uint64_t v1 = *(void *)(v0 + 856);
  *(_DWORD *)(v0 + 940) = *(_DWORD *)(*(void *)(v0 + 760) + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 920) = v2;
  *(void *)(v2 + 16) = v1;
  swift_asyncLet_begin();
  uint64_t v3 = *(void *)(v0 + 792);
  return _swift_asyncLet_get(v0 + 16, v3, sub_100036488, v0 + 656);
}

uint64_t sub_100036488()
{
  return _swift_task_switch(sub_1000364A4, 0, 0);
}

uint64_t sub_1000364A4()
{
  uint64_t v1 = *(int *)(v0 + 940);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 784);
  sub_10001F904(v3, v4, &qword_1000CA3B0);
  uint64_t v5 = *(void **)(v3 + v1);
  *(void *)(v0 + 928) = v5;
  sub_1000409B0(v4, v2, &qword_1000CA3B0);
  id v6 = v5;
  uint64_t v7 = *(void *)(v0 + 792);
  return _swift_asyncLet_finish(v0 + 16, v7, sub_10003656C, v0 + 704);
}

uint64_t sub_10003656C()
{
  return _swift_task_switch(sub_100036588, 0, 0);
}

uint64_t sub_100036588()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 896);
  uint64_t v2 = *(void *)(v0 + 888);
  return _swift_task_switch(sub_1000365F0, v2, v1);
}

uint64_t sub_1000365F0()
{
  uint64_t v1 = *(void *)(v0 + 928);
  uint64_t v2 = *(int *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 800);
  uint64_t v4 = *(void *)(v0 + 776);
  uint64_t v5 = *(void *)(v0 + 760);
  swift_release();
  *(void *)(v3 + v2) = v1;
  uint64_t v6 = *(int *)(v5 + 48);
  sub_10001F904(v3, v4, &qword_1000CA3B0);
  *(void *)(v4 + v6) = v1;
  if (v1)
  {
    uint64_t v7 = *(void **)(v0 + 928);
    uint64_t v8 = *(void *)(v0 + 856);
    uint64_t v9 = *(void *)(v0 + 848);
    uint64_t v10 = *(void *)(v0 + 840);
    uint64_t v11 = *(void *)(v0 + 800);
    uint64_t v12 = *(void *)(v0 + 776);
    id v13 = v7;
    sub_10000B988(v12, &qword_1000CA3B0);
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000001CLL;
    *(void *)(v14 + 8) = 0x80000001000AB220;
    *(void *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 16) = v7;
    *(unsigned char *)(v14 + 40) = 7;
    swift_willThrow();
    sub_10000B988(v11, &qword_1000CAAB0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 904);
    uint64_t v17 = *(void *)(v0 + 840);
    uint64_t v18 = *(void *)(v0 + 800);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    sub_10000B988(*(void *)(v0 + 776), &qword_1000CA3B0);
    uint64_t v21 = *(int *)(v20 + 48);
    sub_10001F904(v18, v19, &qword_1000CA3B0);
    *(void *)(v19 + v21) = 0;
    uint64_t result = v16(v19, 1, v17);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v23 = *(void *)(v0 + 848);
    uint64_t v24 = *(void *)(v0 + 840);
    uint64_t v25 = *(void *)(v0 + 824);
    uint64_t v26 = *(void *)(v0 + 816);
    uint64_t v29 = *(void *)(v0 + 800);
    uint64_t v30 = *(void *)(v0 + 856);
    uint64_t v27 = *(void *)(v0 + 768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v27, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v24);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001F904(v25, v26, &qword_1000CA3B0);
    swift_retain_n();
    sub_1000A4570();
    sub_10000B988(v25, &qword_1000CA3B0);
    swift_release();
    sub_10000B988(v29, &qword_1000CAAB0);
    id v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v28(v30, v24);
    v28(v27, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v15();
}

uint64_t sub_1000369FC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000413EC(v0 + 40);
  sub_100040DC8(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isDelegateInitialized;
  uint64_t v2 = sub_100008704(&qword_1000CAD70);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__executionMode;
  uint64_t v5 = sub_100008704(&qword_1000CAD68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingType;
  uint64_t v7 = sub_100008704(&qword_1000CAD60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingStage;
  uint64_t v9 = sub_100008704(&qword_1000CAD58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__addedAddresses;
  uint64_t v11 = sub_100008704(&qword_1000CAD50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__createOrLoadStage;
  uint64_t v13 = sub_100008704(&qword_1000CAD48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__addingAddressesStage;
  uint64_t v15 = sub_100008704(&qword_1000CAD40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__savingStage;
  uint64_t v17 = sub_100008704(&qword_1000CAD38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__alertNowShowing;
  uint64_t v19 = sub_100008704(&qword_1000CAD30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isShowingAlert, v2);
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isFolderShare, v2);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isFolderSubshare, v2);
  swift_release();
  swift_release();
  uint64_t v20 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__folderSharingStage;
  uint64_t v21 = sub_100008704(&qword_1000CAD28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__shareSaveStatus;
  uint64_t v23 = sub_100008704(&qword_1000CAD20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_unknownObjectRelease();
  uint64_t v24 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharingOptionsAllowedFromSPI;
  uint64_t v25 = sub_100008704(&qword_1000CAD18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__yourNameAndEmail;
  uint64_t v27 = sub_100008704(&qword_1000CAD10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sharedFileOrFolderURL;
  uint64_t v29 = sub_100008704(&qword_1000CAD08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__itemUTI;
  uint64_t v31 = sub_100008704(&qword_1000CAD00);
  int v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
  v32(v30, v31);
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__isShareRoot, v2);
  uint64_t v33 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnail;
  uint64_t v34 = sub_100008704(&qword_1000CACF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnailFromCloudKitSPI;
  uint64_t v36 = sub_100008704(&qword_1000CACF0);
  unint64_t v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
  v37(v35, v36);
  v37(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__thumbnailFromDocumentSPI, v36);
  uint64_t v38 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__itemTitle;
  uint64_t v39 = sub_100008704(&qword_1000CACE8);
  id v40 = *(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8);
  v40(v38, v39);
  v32(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sourceAppBundleID, v31);
  v40(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__sectionTitleForAuxiliaryToggles, v39);
  v40(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__primaryCheckboxTitle, v39);
  v40(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__secondaryCheckboxTitle, v39);
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__primaryCheckboxState, v2);
  v3(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__secondaryCheckboxState, v2);
  uint64_t v41 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__ckContainerIdentifier;
  uint64_t v42 = sub_100008704(&qword_1000CACE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  v40(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__helpAnchor, v39);
  uint64_t v43 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__participantDetails;
  uint64_t v44 = sub_100008704(&qword_1000CACD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  swift_release();

  return v0;
}

uint64_t sub_1000371D8()
{
  sub_1000369FC();

  return swift_deallocClassInstance();
}

uint64_t sub_100037230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000A4510();
  *a1 = result;
  return result;
}

void sub_100037280()
{
  NSString v0 = sub_1000A47C0();
  id v1 = [self imageNamed:v0];

  if (!v1) {
    id v1 = [objc_allocWithZone((Class)UIImage) init];
  }
  qword_1000CA670 = (uint64_t)v1;
}

uint64_t sub_100037314(char a1)
{
  *(void *)(v2 + 184) = v1;
  *(unsigned char *)(v2 + 105) = a1;
  sub_100008704(&qword_1000CA840);
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  *(void *)(v2 + 208) = swift_task_alloc();
  sub_100008704(&qword_1000CAB00);
  *(void *)(v2 + 216) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AlertViewModelButton(0);
  *(void *)(v2 + 224) = v3;
  *(void *)(v2 + 232) = *(void *)(v3 - 8);
  *(void *)(v2 + 240) = swift_task_alloc();
  *(void *)(v2 + 248) = swift_task_alloc();
  uint64_t v4 = sub_1000A4460();
  *(void *)(v2 + 256) = v4;
  *(void *)(v2 + 264) = *(void *)(v4 - 8);
  *(void *)(v2 + 272) = swift_task_alloc();
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  *(void *)(v2 + 296) = swift_task_alloc();
  *(void *)(v2 + 304) = swift_task_alloc();
  *(void *)(v2 + 312) = swift_task_alloc();
  *(void *)(v2 + 320) = swift_task_alloc();
  sub_100008704(&qword_1000CAB08);
  *(void *)(v2 + 328) = swift_task_alloc();
  *(void *)(v2 + 336) = sub_1000A4990();
  *(void *)(v2 + 344) = sub_1000A4980();
  uint64_t v6 = sub_1000A4950();
  *(void *)(v2 + 352) = v6;
  *(void *)(v2 + 360) = v5;
  return _swift_task_switch(sub_100037574, v6, v5);
}

uint64_t sub_100037574()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 57) & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_1000A4560(),
        swift_release(),
        swift_release(),
        *(unsigned __int8 *)(v0 + 62) - 2 > 3))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 328);
    uint64_t v2 = *(void *)(v0 + 184);
    sub_1000A49A0();
    uint64_t v3 = sub_1000A49C0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
    swift_retain();
    uint64_t v4 = sub_1000A4980();
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = v4;
    v5[3] = &protocol witness table for MainActor;
    v5[4] = v2;
    uint64_t v6 = sub_100055948(v1, (uint64_t)&unk_1000CAB18, (uint64_t)v5);
    *(void *)(v0 + 368) = v6;
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 61) = 0;
    swift_retain();
    sub_1000A4570();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v7;
    uint64_t v8 = sub_100008704(qword_1000CA3F0);
    *(void *)(v0 + 384) = v8;
    *uint64_t v7 = v0;
    v7[1] = sub_1000378D8;
    return Task.value.getter(v8, v6, (char *)&type metadata for () + 8, v8, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_1000378D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  if (v0) {
    uint64_t v5 = sub_100037B88;
  }
  else {
    uint64_t v5 = sub_100037A14;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100037A14()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 63) = 2;
  swift_retain();
  sub_1000A4570();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100037B88()
{
  uint64_t v161 = v0;
  *(void *)(v0 + 144) = *(void *)(v0 + 392);
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v1 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 24);
    *(void *)(v0 + 400) = v1;
    *(void *)(v0 + 408) = v2;
    uint64_t v4 = *(void **)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    *(void *)(v0 + 416) = v4;
    *(void *)(v0 + 424) = v3;
    uint64_t v5 = *(void *)(v0 + 48);
    *(void *)(v0 + 432) = v5;
    int v158 = *(unsigned __int8 *)(v0 + 56);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 60) = 2;
    swift_retain();
    int v6 = v158;
    uint64_t v7 = v1;
    sub_1000A4570();
    sub_1000A4440();
    sub_10003E7A4(v1, v2, v4, v3, v5, v158);
    uint64_t v8 = v5;
    sub_10003E7A4(v1, v2, v4, v3, v5, v158);
    uint64_t v9 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A20();
    BOOL v10 = os_log_type_enabled(v9, type);
    uint64_t v154 = v5;
    uint64_t v155 = *(void *)(v0 + 320);
    uint64_t v11 = *(void *)(v0 + 264);
    uint64_t v12 = *(void *)(v0 + 256);
    if (v10)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v160 = swift_slowAlloc();
      buf = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)(v0 + 64) = v7;
      *(void *)(v0 + 72) = v2;
      *(void *)(v0 + 80) = v4;
      *(void *)(v0 + 88) = v3;
      *(void *)(v0 + 96) = v8;
      *(unsigned char *)(v0 + 104) = v158;
      sub_10003E7A4(v7, v2, v4, v3, v8, v158);
      uint64_t v14 = sub_1000A4810();
      *(void *)(v0 + 152) = sub_10003CFA4(v14, v15, &v160);
      sub_1000A4BC0();
      int v6 = v158;
      swift_bridgeObjectRelease();
      sub_10003E804(v7, v2, v4, v3, v8, v158);
      sub_10003E804(v7, v2, v4, v3, v8, v158);
      _os_log_impl((void *)&_mh_execute_header, v9, type, "saveShareAndReportErrors error: %s", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      uint64_t result = v16(v155, v12);
      uint64_t v18 = v2;
      uint64_t v19 = v4;
      uint64_t v20 = v3;
      uint64_t v21 = v154;
    }
    else
    {
      sub_10003E804(v7, v2, v4, v3, v8, v158);
      sub_10003E804(v7, v2, v4, v3, v8, v158);

      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      uint64_t result = v16(v155, v12);
      uint64_t v18 = v2;
      uint64_t v19 = v4;
      uint64_t v20 = v3;
      uint64_t v21 = v8;
    }
    *(void *)(v0 + 440) = v16;
    if (v6 != 4)
    {
      swift_release();
LABEL_34:
      sub_100008C08();
      swift_allocError();
      *(void *)uint64_t v92 = v7;
      *(void *)(v92 + 8) = v18;
      *(void *)(v92 + 16) = v19;
      *(void *)(v92 + 24) = v20;
      *(void *)(v92 + 32) = v21;
      *(unsigned char *)(v92 + 40) = v6;
      sub_10003E7A4(v7, v18, v19, v20, v21, v6);
      swift_willThrow();
      swift_release();
      uint64_t v93 = v7;
      uint64_t v94 = v18;
      uint64_t v95 = v19;
      uint64_t v96 = v20;
      uint64_t v97 = v21;
      unsigned __int8 v98 = v6;
LABEL_35:
      sub_10003E804(v93, v94, v95, v96, v97, v98);
      goto LABEL_36;
    }
    if (!v19)
    {
      __break(1u);
      return result;
    }
    sub_10003E7A4(v7, v18, v19, v20, v21, 4u);
    id v22 = v19;
    char v23 = sub_100095D7C(22);

    if (v23)
    {
      uint64_t v149 = v20;
      v156 = v19;
      uint64_t v24 = v18;
      uint64_t v25 = v7;
      sub_1000A4440();
      uint64_t v26 = sub_1000A4450();
      os_log_type_t v27 = sub_1000A4A20();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "saveShareAndReportErrors got batchRequestFailed, will retry once", v28, 2u);
        swift_slowDealloc();
      }
      uint64_t v29 = *(void *)(v0 + 312);
      uint64_t v30 = *(void *)(v0 + 256);
      uint64_t v31 = *(void *)(v0 + 264);
      int v32 = *(unsigned __int8 *)(v0 + 105);

      *(void *)(v0 + 448) = (v31 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v16(v29, v30);
      if (v32 == 1)
      {
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 456) = v33;
        void *v33 = v0;
        v33[1] = sub_100038FB4;
        return sub_100037314(0);
      }

      uint64_t v18 = v24;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v21 = v154;
      swift_bridgeObjectRelease();
      uint64_t v7 = v25;
      uint64_t v19 = v156;
      uint64_t v20 = v149;
      goto LABEL_33;
    }
    swift_release();
    id v34 = v22;
    char v35 = sub_100095D7C(14);

    if (v35)
    {
      uint64_t v159 = v34;
      os_log_t log = (os_log_t)v7;
      uint64_t v150 = v20;
      uint64_t v157 = v19;
      uint64_t v147 = v18;
      uint64_t v36 = (_OWORD *)(v0 + 112);
      sub_1000A4440();
      unint64_t v37 = sub_1000A4450();
      os_log_type_t v38 = sub_1000A4A20();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "saveShareAndReportErrors got oplock error, will update share and show alert", v39, 2u);
        swift_slowDealloc();
      }
      uint64_t v40 = *(void *)(v0 + 304);
      uint64_t v41 = *(void *)(v0 + 256);

      v16(v40, v41);
      id v42 = [v159 userInfo];
      uint64_t v43 = sub_1000A4770();

      uint64_t v44 = sub_1000A4800();
      if (*(void *)(v43 + 16) && (unint64_t v46 = sub_10003D684(v44, v45), (v47 & 1) != 0))
      {
        sub_10003FB84(*(void *)(v43 + 56) + 32 * v46, (uint64_t)v36);
      }
      else
      {
        _OWORD *v36 = 0u;
        *(_OWORD *)(v0 + 128) = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 136))
      {
        sub_10001F798(0, (unint64_t *)&qword_1000CAB30);
        if (swift_dynamicCast())
        {
          uint64_t v86 = *(void **)(v0 + 176);
          sub_1000A4440();
          id v87 = v86;
          uint64_t v88 = sub_1000A4450();
          os_log_type_t v89 = sub_1000A4A10();
          uint64_t v139 = v0;
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = (uint8_t *)swift_slowAlloc();
            bufb = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v90 = 138412290;
            *(void *)(v0 + 160) = v87;
            id v91 = v87;
            sub_1000A4BC0();
            *(void *)bufb = v87;

            _os_log_impl((void *)&_mh_execute_header, v88, v89, "saveShareAndReportErrors oplock error server's updated share: %@", v90, 0xCu);
            sub_100008704(&qword_1000CAAF0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v70 = *(void *)(v0 + 248);
          uint64_t v107 = *(int **)(v0 + 224);
          uint64_t v108 = *(void *)(v0 + 208);
          uint64_t v109 = *(void *)(v0 + 216);
          uint64_t v142 = *(void *)(v0 + 232);
          bufc = *(uint8_t **)(v0 + 200);
          v16(*(void *)(v0 + 296), *(void *)(v0 + 256));
          swift_getKeyPath();
          swift_getKeyPath();
          *(void *)(v0 + 168) = v87;
          id typeb = v87;
          swift_retain();
          sub_1000A4570();
          sub_1000A46D0();
          LOWORD(v137._object) = 256;
          uint64_t v110 = sub_1000A46F0();
          uint64_t v112 = v111;
          char v114 = v113;
          uint64_t v116 = v115;
          uint64_t v117 = sub_1000A4680();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v109, 1, 1, v117);
          uint64_t v118 = swift_allocObject();
          swift_weakInit();
          sub_1000A4310();
          uint64_t v119 = v70 + v107[5];
          *(void *)uint64_t v119 = v110;
          *(void *)(v119 + 8) = v112;
          *(unsigned char *)(v119 + 16) = v114 & 1;
          *(void *)(v119 + 24) = v116;
          sub_1000409B0(v109, v70 + v107[6], &qword_1000CAB00);
          uint64_t v120 = (uint64_t (**)())(v70 + v107[7]);
          *uint64_t v120 = sub_10003FB7C;
          v120[1] = (uint64_t (*)())v118;
          uint64_t v121 = self;
          uint64_t v122 = (objc_class *)objc_msgSend(v121, "mainBundle", 0);
          v137._countAndFlagsBits = 0x80000001000AB3E0;
          v164._object = (void *)0x80000001000AB3C0;
          v164._countAndFlagsBits = 0x1000000000000019;
          v167.value._countAndFlagsBits = 0;
          v167.value._object = 0;
          v123.super.Class isa = v122;
          v170._countAndFlagsBits = 0;
          v170._object = (void *)0xE000000000000000;
          uint64_t v124 = sub_1000A4100(v164, v167, v123, v170, v137);
          uint64_t v126 = v125;

          uint64_t v127 = (objc_class *)[v121 mainBundle];
          v138._countAndFlagsBits = 0x80000001000AB430;
          v165._object = (void *)0x80000001000AB410;
          v165._countAndFlagsBits = 0xD000000000000011;
          v168.value._countAndFlagsBits = 0;
          v168.value._object = 0;
          v128.super.Class isa = v127;
          v171._countAndFlagsBits = 0;
          v171._object = (void *)0xE000000000000000;
          uint64_t v129 = sub_1000A4100(v165, v168, v128, v171, v138);
          uint64_t v131 = v130;

          sub_100008704(&qword_1000CAB20);
          unint64_t v132 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
          uint64_t v133 = swift_allocObject();
          *(_OWORD *)(v133 + 16) = xmmword_1000A6410;
          sub_10003FA64(v70, v133 + v132);
          sub_1000A4310();
          uint64_t v134 = (int *)type metadata accessor for AlertViewModel(0);
          uint64_t v135 = (uint64_t *)(v108 + v134[5]);
          *uint64_t v135 = v124;
          v135[1] = v126;
          uint64_t v136 = (uint64_t *)(v108 + v134[6]);
          *uint64_t v136 = v129;
          v136[1] = v131;
          uint64_t v85 = v139;
          *(void *)(v108 + v134[7]) = v133;
          (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v134 - 1) + 56))(v108, 0, 1, v134);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10001F904(v108, (uint64_t)bufc, &qword_1000CA840);
          swift_retain();
          sub_1000A4570();
          sub_10000B988(v108, &qword_1000CA840);
          swift_getKeyPath();
          swift_getKeyPath();
          *(unsigned char *)(v139 + 59) = 1;
          swift_retain();
          sub_1000A4570();
          swift_release();

          goto LABEL_46;
        }
      }
      else
      {
        sub_10000B988((uint64_t)v36, &qword_1000CAB28);
      }
      sub_1000A4440();
      uint64_t v100 = sub_1000A4450();
      os_log_type_t v101 = sub_1000A4A10();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v101, "saveShareAndReportErrors userInfo has no CKRecordChangedErrorServerRecordKey, so rethrow oplock", v102, 2u);
        swift_slowDealloc();
      }
      uint64_t v103 = *(void *)(v0 + 288);
      uint64_t v104 = *(void *)(v0 + 256);

      v16(v103, v104);
      sub_100008C08();
      swift_allocError();
      *(void *)uint64_t v105 = log;
      *(void *)(v105 + 8) = v18;
      *(void *)(v105 + 16) = v19;
      *(void *)(v105 + 24) = v20;
      *(void *)(v105 + 32) = v154;
      *(unsigned char *)(v105 + 40) = 4;
      swift_bridgeObjectRetain();
      id v106 = v159;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v93 = (uint64_t)log;
      uint64_t v94 = v18;
      uint64_t v95 = v19;
      uint64_t v96 = v20;
      uint64_t v97 = v154;
      unsigned __int8 v98 = 4;
      goto LABEL_35;
    }
    id v48 = v34;
    char v49 = sub_100096058((id)0x7DB);

    if ((v49 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      LOBYTE(v6) = v158;
      goto LABEL_34;
    }
    uint64_t v159 = v34;
    os_log_t log = (os_log_t)v7;
    uint64_t v150 = v20;
    uint64_t v157 = v19;
    uint64_t v147 = v18;
    sub_1000A4440();
    unint64_t v50 = sub_1000A4450();
    os_log_type_t v51 = sub_1000A4A10();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "saveShareAndReportErrors got rejected login error", v52, 2u);
      swift_slowDealloc();
    }
    uint64_t v53 = *(void *)(v0 + 280);
    uint64_t v54 = *(void *)(v0 + 256);
    uint64_t v55 = v0;
    unint64_t v56 = *(uint8_t **)(v0 + 232);
    uint64_t v57 = *(void *)(v0 + 240);
    unint64_t v58 = *(int **)(v0 + 224);
    uint64_t v141 = *(void *)(v55 + 216);
    uint64_t typea = *(void *)(v55 + 208);
    uint64_t v59 = *(void *)(v55 + 192);
    bufa = v56;

    v16(v53, v54);
    sub_1000A46D0();
    LOWORD(v137._object) = 256;
    uint64_t v60 = sub_1000A46F0();
    uint64_t v62 = v61;
    char v64 = v63;
    uint64_t v140 = v65;
    uint64_t v66 = sub_1000A4680();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v141, 1, 1, v66);
    uint64_t v67 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1000A4310();
    uint64_t v68 = v57 + v58[5];
    *(void *)uint64_t v68 = v60;
    *(void *)(v68 + 8) = v62;
    *(unsigned char *)(v68 + 16) = v64 & 1;
    *(void *)(v68 + 24) = v140;
    sub_1000409B0(v141, v57 + v58[6], &qword_1000CAB00);
    swift_release();
    os_log_type_t v69 = (uint64_t (**)())(v57 + v58[7]);
    *os_log_type_t v69 = sub_10003E890;
    v69[1] = (uint64_t (*)())v67;
    uint64_t v70 = v57;
    unint64_t v71 = (objc_class *)objc_msgSend(self, "mainBundle", 0);
    v137._countAndFlagsBits = 0x80000001000AB370;
    v163._countAndFlagsBits = 0x6E67695320746F4ELL;
    v163._object = (void *)0xED00006E49206465;
    v166.value._countAndFlagsBits = 0;
    v166.value._object = 0;
    v72.super.Class isa = v71;
    v169._countAndFlagsBits = 0;
    v169._object = (void *)0xE000000000000000;
    uint64_t v73 = sub_1000A4100(v163, v166, v72, v169, v137);
    uint64_t v75 = v74;

    unint64_t v76 = sub_10003F3AC();
    uint64_t v77 = sub_10002014C(v76);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    sub_100008704(&qword_1000CAB20);
    unint64_t v80 = (bufa[80] + 32) & ~(unint64_t)bufa[80];
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_1000A6410;
    sub_10003FA64(v57, v81 + v80);
    sub_1000A4310();
    uint64_t v82 = (int *)type metadata accessor for AlertViewModel(0);
    uint64_t v83 = (uint64_t *)(v59 + v82[5]);
    *uint64_t v83 = v73;
    v83[1] = v75;
    uint64_t v84 = (uint64_t *)(v59 + v82[6]);
    uint64_t *v84 = v77;
    v84[1] = v79;
    uint64_t v85 = v55;
    *(void *)(v59 + v82[7]) = v81;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v82 - 1) + 56))(v59, 0, 1, v82);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001F904(v59, typea, &qword_1000CA840);
    swift_retain();
    sub_1000A4570();
    sub_10000B988(v59, &qword_1000CA840);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v55 + 58) = 1;
    swift_retain();
    sub_1000A4570();
    swift_release();
LABEL_46:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10003E804((uint64_t)log, v147, v157, v150, v154, 4u);
    sub_10003FB20(v70);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v99 = *(uint64_t (**)(void))(v85 + 8);
    goto LABEL_37;
  }
  swift_release();
  swift_release();
LABEL_36:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v99 = *(uint64_t (**)(void))(v0 + 8);
LABEL_37:
  return v99();
}

uint64_t sub_100038FB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  if (v0) {
    uint64_t v5 = sub_10003925C;
  }
  else {
    uint64_t v5 = sub_1000390F0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000390F0()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v3 = (void *)v0[52];
  uint64_t v5 = v0[50];
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003E804(v5, v4, v3, v1, v2, 4u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10003925C()
{
  swift_release();
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "saveShareAndReportErrors retry failed, so rethrow batchRequestFailed", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v1;
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v6 = v0[54];
  uint64_t v8 = v0[51];
  uint64_t v7 = (void *)v0[52];
  uint64_t v13 = v0[50];
  uint64_t v14 = v0[53];
  uint64_t v9 = v0[34];
  uint64_t v10 = v0[32];

  v5(v9, v10);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v13, v8, v7, v14, v6, 4u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100039470()
{
  v0[2] = sub_1000A4990();
  v0[3] = sub_1000A4980();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10003951C;
  return sub_100034038();
}

uint64_t sub_10003951C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000A4950();
  if (v0) {
    uint64_t v4 = sub_1000396DC;
  }
  else {
    uint64_t v4 = sub_100039678;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100039678()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000396DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100039740()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000A4570();
  }
  return result;
}

uint64_t sub_1000397C0()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4570();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100033290(6u, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100039880()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderURL)
                 + *(void *)(**(void **)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderURL) + 104));
  uint64_t v2 = *v1;
  uint64_t *v1 = (uint64_t)sub_10003FC00;
  v1[1] = v0;
  swift_retain();
  sub_10001F44C(v2);
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderTitle)
                 + *(void *)(**(void **)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderTitle) + 104));
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)sub_10003FC04;
  v3[1] = v0;
  swift_retain();
  sub_10001F44C(v4);
  uint64_t v5 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__ckFolderSubitemName)
                 + *(void *)(**(void **)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__ckFolderSubitemName)
                             + 104));
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)sub_10003FC04;
  v5[1] = v0;
  swift_retain();

  return sub_10001F44C(v6);
}

uint64_t sub_1000399A0()
{
  v1[20] = v0;
  sub_100008704(&qword_1000CA3B0);
  v1[21] = swift_task_alloc();
  uint64_t v2 = sub_1000A42E0();
  v1[22] = v2;
  v1[23] = *(void *)(v2 - 8);
  v1[24] = swift_task_alloc();
  sub_1000A4990();
  v1[25] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[26] = v4;
  v1[27] = v3;
  return _swift_task_switch(sub_100039AC4, v4, v3);
}

uint64_t sub_100039AC4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  if ((*(void *)(v0 + 96) || *(void *)(v0 + 104) != 0xE000000000000000) && (sub_1000A4D70() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!v2 && v1 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v3 = sub_1000A4D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
LABEL_13:
    swift_release();
    goto LABEL_14;
  }
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 384) & 0xFE) == 8)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      uint64_t v7 = *(void *)(v0 + 168);
      swift_release();
      sub_10000B988(v7, &qword_1000CA3B0);
LABEL_14:
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      return v9();
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 192), *(void *)(v0 + 168), *(void *)(v0 + 176));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v11;
    void *v11 = v0;
    v11[1] = sub_10003A268;
    uint64_t v12 = *(void *)(v0 + 192);
    return sub_100019960(v0 + 16, v12);
  }
  else
  {
    uint64_t v8 = sub_10000E664();
    *(void *)(v0 + 224) = v8;
    uint64_t v13 = (uint64_t)v8;
    uint64_t v15 = (uint64_t (*)(uint64_t))((char *)&dword_1000CA348 + dword_1000CA348);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v14;
    void *v14 = v0;
    v14[1] = sub_100039EE4;
    return v15(v13);
  }
}

uint64_t sub_100039EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v5;
  *(void *)(*v5 + 240) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v11 = *(void *)(v10 + 208);
    uint64_t v12 = *(void *)(v10 + 216);
    uint64_t v13 = sub_10003A1C0;
  }
  else
  {

    *(void *)(v10 + 248) = a4;
    *(void *)(v10 + 256) = a3;
    *(void *)(v10 + 264) = a2;
    *(void *)(v10 + 272) = a1;
    uint64_t v11 = *(void *)(v10 + 208);
    uint64_t v12 = *(void *)(v10 + 216);
    uint64_t v13 = sub_10003A034;
  }
  return _swift_task_switch(v13, v11, v12);
}

uint64_t sub_10003A034()
{
  swift_release();
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  if (v1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD000000000000016;
    *(void *)(v4 + 8) = 0x80000001000ABDA0;
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 16) = 0;
    *(unsigned char *)(v4 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v0[32];
    uint64_t v6 = v0[34];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[16] = v6;
    v0[17] = v1;
    v0[18] = v5;
    v0[19] = v2;
    swift_retain();
    sub_1000A4570();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10003A1C0()
{
  *(void *)(v0 + 328) = *(void *)(v0 + 240);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v1;
  void *v1 = v0;
  v1[1] = sub_10003A5E8;
  return sub_10001A128(v0 + 56);
}

uint64_t sub_10003A268()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  long long v3 = *(_OWORD *)(*(void *)v0 + 32);
  *((_OWORD *)v2 + 18) = *((_OWORD *)v2 + 1);
  *((_OWORD *)v2 + 19) = v3;
  v2[40] = v1[6];
  swift_task_dealloc();
  uint64_t v4 = v1[27];
  uint64_t v5 = v1[26];
  return _swift_task_switch(sub_10003A3A4, v5, v4);
}

uint64_t sub_10003A3A4()
{
  uint64_t v1 = v0[40];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[40];
    uint64_t v4 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v5 = v0[22];
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000016;
    *(void *)(v6 + 8) = 0x80000001000ABDA0;
    *(void *)(v6 + 24) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 16) = v2;
    *(unsigned char *)(v6 + 40) = 6;
    id v7 = v2;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[37];
    if (v9) {
      BOOL v10 = v8 == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10)
    {
      uint64_t v12 = v0[36];
      uint64_t v13 = v0[38];
      swift_getKeyPath();
      swift_getKeyPath();
      v0[16] = v12;
      v0[17] = v9;
      v0[18] = v13;
      v0[19] = v8;
      swift_retain();
      sub_1000A4570();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v14 = (uint64_t (*)(void))v0[1];
      goto LABEL_10;
    }
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD000000000000016;
    *(void *)(v11 + 8) = 0x80000001000ABDA0;
    *(void *)(v11 + 24) = 0;
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 16) = 0;
    *(unsigned char *)(v11 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
LABEL_10:
  return v14();
}

uint64_t sub_10003A5E8()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  *(_OWORD *)(v2 + 43) = *(_OWORD *)(v2 + 7);
  *(_OWORD *)(v2 + 45) = *(_OWORD *)(v2 + 9);
  v2[47] = v1[11];
  swift_task_dealloc();
  uint64_t v3 = v1[27];
  uint64_t v4 = v1[26];
  return _swift_task_switch(sub_10003A734, v4, v3);
}

uint64_t sub_10003A734()
{
  uint64_t v1 = v0[47];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[47];
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v3 = 0xD000000000000016;
    *(void *)(v3 + 8) = 0x80000001000ABDA0;
    *(void *)(v3 + 24) = 0;
    *(void *)(v3 + 32) = 0;
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 40) = 6;
    id v4 = v2;
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    uint64_t v5 = v0[46];
    uint64_t v6 = v0[44];
    if (v6) {
      BOOL v7 = v5 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7)
    {
      uint64_t v9 = v0[43];
      uint64_t v10 = v0[45];
      swift_getKeyPath();
      swift_getKeyPath();
      v0[16] = v9;
      v0[17] = v6;
      v0[18] = v10;
      v0[19] = v5;
      swift_retain();
      sub_1000A4570();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = (uint64_t (*)(void))v0[1];
      goto LABEL_10;
    }
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000016;
    *(void *)(v8 + 8) = 0x80000001000ABDA0;
    *(void *)(v8 + 24) = 0;
    *(void *)(v8 + 32) = 0;
    *(void *)(v8 + 16) = 0;
    *(unsigned char *)(v8 + 40) = 6;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
LABEL_10:
  return v11();
}

uint64_t sub_10003A954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = sub_1000A4460();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v4[14] = swift_task_alloc();
  sub_1000A4990();
  v4[15] = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  v4[16] = v7;
  v4[17] = v6;
  return _swift_task_switch(sub_10003AA78, v7, v6);
}

uint64_t sub_10003AA78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  void *v1 = v0;
  v1[1] = sub_10003AB64;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_100035D30(v2);
}

uint64_t sub_10003AB64()
{
  uint64_t v2 = *v1;
  (*v1)[19] = v0;
  swift_task_dealloc();
  sub_10000B988(v2[14], &qword_1000CA3B0);
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[16];
  if (v0) {
    uint64_t v5 = sub_10003B0E4;
  }
  else {
    uint64_t v5 = sub_10003ACC0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10003ACC0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_lastServicesData)) {
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(v0 + 72);
  if (!v2)
  {
    sub_100008C08();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = 0xD000000000000024;
    *(void *)(v14 + 8) = 0x80000001000ABC70;
    *(_OWORD *)(v14 + 16) = xmmword_1000A69F0;
    *(void *)(v14 + 32) = 0x80000001000ABCA0;
    *(unsigned char *)(v14 + 40) = 11;
    swift_willThrow();
    swift_unknownObjectRelease();
    *(void *)(v0 + 64) = v13;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_11;
    }
    uint64_t result = swift_errorRelease();
    uint64_t v16 = *(void *)(v0 + 16);
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v18 = *(void **)(v0 + 32);
    uint64_t v17 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    int v20 = *(unsigned __int8 *)(v0 + 56);
    if (v20 == 7)
    {
      if (!v18)
      {
LABEL_22:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v21 = v18;
      swift_bridgeObjectRetain();
      sub_100033290(1u, v18);
      sub_10003E804(v16, v15, v18, v17, v19, 7u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4800();
      uint64_t v25 = v17;
      id v22 = objc_allocWithZone((Class)NSError);
      NSString v23 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v24 = [v22 initWithDomain:v23 code:46 userInfo:0];

      sub_100033290(2u, v24);
      sub_10003E804(v16, v15, v18, v25, v19, v20);
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  id v3 = [*(id *)(v0 + 72) _copyWithoutPersonalInfo];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000A4440();
    uint64_t v5 = sub_1000A4450();
    os_log_type_t v6 = sub_1000A4A40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "ext computed property--extensionController is nil--will assert", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_9:
  sub_100033290(5u, 0);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
  return v12();
}

uint64_t sub_10003B0E4()
{
  swift_release();
  *(void *)(v0 + 64) = *(void *)(v0 + 152);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t result = swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v5 = *(void **)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    int v7 = *(unsigned __int8 *)(v0 + 56);
    if (v7 == 7)
    {
      if (!v5)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      id v8 = v5;
      swift_bridgeObjectRetain();
      sub_100033290(1u, v5);
      sub_10003E804(v3, v2, v5, v4, v6, 7u);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000A4800();
      uint64_t v13 = v4;
      id v9 = objc_allocWithZone((Class)NSError);
      NSString v10 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithDomain:v10 code:46 userInfo:0];

      sub_100033290(2u, v11);
      sub_10003E804(v3, v2, v5, v13, v6, v7);
    }
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10003B310(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 57) = a3;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = a2;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v4 = sub_1000A4460();
  *(void *)(v3 + 128) = v4;
  *(void *)(v3 + 136) = *(void *)(v4 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v3 + 184) = sub_1000A4980();
  uint64_t v6 = sub_1000A4950();
  *(void *)(v3 + 192) = v6;
  *(void *)(v3 + 200) = v5;
  return _swift_task_switch(sub_10003B46C, v6, v5);
}

void sub_10003B46C()
{
  uint64_t v1 = v0[13];
  if (v1 < 1)
  {
    __break(1u);
  }
  else
  {
    v0[26] = BRCloudDocsErrorDomain;
    v0[27] = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[28] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10003B51C;
    sub_100031EC0();
  }
}

uint64_t sub_10003B51C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v5 = sub_10003B7C4;
  }
  else {
    uint64_t v5 = sub_10003B658;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10003B658()
{
  swift_release();
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[27];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[12] = v3;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "fetchShare completed with this many retries left: %ld", v4, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10003B7C4()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 232);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = swift_errorRelease();
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    *(void *)(v0 + 240) = v4;
    *(void *)(v0 + 248) = v5;
    uint64_t v6 = *(void **)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    *(void *)(v0 + 256) = v6;
    *(void *)(v0 + 264) = v7;
    uint64_t v8 = *(void *)(v0 + 48);
    *(void *)(v0 + 272) = v8;
    int v9 = *(unsigned __int8 *)(v0 + 56);
    uint64_t v68 = v8;
    uint64_t v69 = v4;
    if (v9 != 5)
    {
      swift_release();
      sub_1000A4440();
      uint64_t v16 = sub_1000A4450();
      os_log_type_t v17 = sub_1000A4A20();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = v5;
        uint64_t v19 = *(void *)(v0 + 216);
        int v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int v20 = 134217984;
        *(void *)(v0 + 72) = v19;
        uint64_t v5 = v18;
        sub_1000A4BC0();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "tryToFetchShare error: throwing unexpected error--retries that were left: %ld", v20, 0xCu);
        swift_slowDealloc();
      }
      uint64_t v22 = *(void *)(v0 + 136);
      uint64_t v21 = *(void *)(v0 + 144);
      uint64_t v23 = *(void *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      sub_100008C08();
      swift_allocError();
      *(void *)uint64_t v24 = 0xD00000000000003ELL;
      *(void *)(v24 + 8) = 0x80000001000ABDF0;
      *(_OWORD *)(v24 + 16) = xmmword_1000A6A40;
      *(void *)(v24 + 32) = 0x80000001000ABE30;
      *(unsigned char *)(v24 + 40) = 11;
      swift_willThrow();
      uint64_t v26 = v68;
      uint64_t v25 = v69;
      uint64_t v27 = v5;
      uint64_t v28 = v6;
      uint64_t v29 = v7;
      unsigned __int8 v30 = v9;
      goto LABEL_23;
    }
    if (!v6)
    {
      __break(1u);
      return _swift_task_switch(v1, v2, v3);
    }
    swift_bridgeObjectRetain();
    uint64_t v66 = v6;
    id v10 = v6;
    swift_bridgeObjectRetain();
    id v11 = [v10 domain];
    uint64_t v12 = sub_1000A4800();
    uint64_t v14 = v13;

    if (v12 == sub_1000A4800() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v31 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {

        goto LABEL_17;
      }
    }
    id v32 = [v10 code];

    if (v32 == (id)7)
    {
      uint64_t v33 = *(void *)(v0 + 120);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      uint64_t v34 = sub_1000A42E0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1)
      {
        uint64_t v35 = *(void *)(v0 + 120);
        swift_release();
        sub_10000B988(v35, &qword_1000CA3B0);
LABEL_18:
        sub_1000A4440();
        id v36 = v10;
        unint64_t v37 = sub_1000A4450();
        os_log_type_t v38 = sub_1000A4A20();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = *(void *)(v0 + 216);
          uint64_t v40 = swift_slowAlloc();
          uint64_t v65 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v40 = 134218242;
          *(void *)(v0 + 80) = v39;
          sub_1000A4BC0();
          *(_WORD *)(v40 + 12) = 2112;
          *(void *)(v0 + 88) = v36;
          os_log_t log = v37;
          id v41 = v36;
          id v42 = v36;
          sub_1000A4BC0();
          uint64_t v43 = v66;
          *uint64_t v65 = v66;

          id v36 = v41;
          unint64_t v37 = log;
          _os_log_impl((void *)&_mh_execute_header, log, v38, "tryToFetchShare failed to fetch share so throwing--retries that were left: %ld, error: %@", (uint8_t *)v40, 0x16u);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v43 = v66;
        }

        (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 128));
        sub_100008C08();
        swift_allocError();
        uint64_t v44 = v68;
        *(void *)uint64_t v45 = v69;
        *(void *)(v45 + 8) = v5;
        *(void *)(v45 + 16) = v43;
        *(void *)(v45 + 24) = v7;
        *(void *)(v45 + 32) = v68;
        *(unsigned char *)(v45 + 40) = 5;
        swift_bridgeObjectRetain();
        id v46 = v36;
        swift_bridgeObjectRetain();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = v69;
        uint64_t v27 = v5;
        uint64_t v28 = v43;
LABEL_22:
        uint64_t v29 = v7;
        uint64_t v26 = v44;
        unsigned __int8 v30 = 5;
LABEL_23:
        sub_10003E804(v25, v27, v28, v29, v26, v30);
        goto LABEL_24;
      }
      char v49 = *(unsigned char *)(v0 + 57);
      sub_10000B988(*(void *)(v0 + 120), &qword_1000CA3B0);
      if ((v49 & 1) == 0)
      {
        uint64_t v44 = v8;
        swift_release();
        sub_1000A4440();
        uint64_t v57 = sub_1000A4450();
        os_log_type_t v58 = sub_1000A4A20();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "tryToFetchShare not synced to iCloud AND not shared so throw notInICloud error", v59, 2u);
          swift_slowDealloc();
        }
        uint64_t v60 = *(void *)(v0 + 168);
        uint64_t v61 = *(void *)(v0 + 128);
        uint64_t v62 = *(void *)(v0 + 136);

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60, v61);
        sub_100008C08();
        swift_allocError();
        *(void *)uint64_t v63 = v69;
        *(void *)(v63 + 8) = v5;
        *(void *)(v63 + 16) = v66;
        *(void *)(v63 + 24) = v7;
        *(void *)(v63 + 32) = v44;
        *(unsigned char *)(v63 + 40) = 5;
        swift_bridgeObjectRetain();
        id v64 = v10;
        swift_bridgeObjectRetain();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = v69;
        uint64_t v27 = v5;
        uint64_t v28 = v66;
        goto LABEL_22;
      }
      sub_1000A4440();
      unint64_t v50 = sub_1000A4450();
      os_log_type_t v51 = sub_1000A4A40();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = *(void *)(v0 + 216);
        uint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 134217984;
        *(void *)(v53 + 4) = v52;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "About to retry tryToFetchShare post-share when unsynced after 1 second--retries left including this one: %ld", (uint8_t *)v53, 0xCu);
        swift_slowDealloc();
      }
      uint64_t v54 = *(void *)(v0 + 160);
      uint64_t v55 = *(void *)(v0 + 128);
      uint64_t v56 = *(void *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
      uint64_t v1 = (uint64_t)sub_10003C048;
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      return _swift_task_switch(v1, v2, v3);
    }
LABEL_17:
    swift_release();
    goto LABEL_18;
  }
  swift_release();
LABEL_24:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

uint64_t sub_10003C048()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  void *v1 = v0;
  v1[1] = sub_10003C0E0;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_10003C0E0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 192);
    uint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = sub_10004146C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 192);
    uint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = sub_10003C204;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10003C204()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[31];
  uint64_t v3 = (void *)v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[27];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v5, v4, v3, v1, v2, 5u);
  uint64_t result = swift_errorRelease();
  if (v6 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v8 = v0[27];
    if (v8 < 2)
    {
      __break(1u);
    }
    else
    {
      v0[27] = v8 - 1;
      int v9 = (void *)swift_task_alloc();
      v0[28] = v9;
      *int v9 = v0;
      v9[1] = sub_10003B51C;
      return sub_100031EC0();
    }
  }
  return result;
}

uint64_t shareStatus(url:)()
{
  uint64_t v0 = sub_1000A42E0();
  v21[4] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1000A4460();
  v21[2] = *(void *)(v1 - 8);
  v21[3] = v1;
  __chkstk_darwin(v1);
  uint64_t v2 = sub_1000A4180();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008704(&qword_1000CA678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6A50;
  *(void *)(inited + 32) = NSURLUbiquitousItemIsSharedKey;
  *(void *)(inited + 40) = NSURLUbiquitousSharedItemCurrentUserRoleKey;
  uint64_t v7 = NSURLUbiquitousItemIsSharedKey;
  uint64_t v8 = NSURLUbiquitousSharedItemCurrentUserRoleKey;
  int v9 = sub_10003DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v9, (uint64_t)v5);
  uint64_t v10 = v2;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1000A4150();
  uint64_t v12 = (NSString *)sub_1000A4160();
  if (!v12) {
    uint64_t v12 = NSURLUbiquitousSharedItemRoleParticipant;
  }
  uint64_t v13 = v12;
  uint64_t v14 = v3;
  uint64_t v15 = sub_1000A4800();
  uint64_t v17 = v16;
  int v19 = 256;
  if (v15 != sub_1000A4800() || v17 != v18)
  {
    if (sub_1000A4D70()) {
      int v19 = 256;
    }
    else {
      int v19 = 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v10);

  return v19 | (v11 & 1);
}

unint64_t sub_10003C8F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1000A48D0() != a1 || v9 != a2)
  {
    char v10 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1000A4860();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10003C9E4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003C9F8()
{
  return sub_10003CBAC();
}

uint64_t sub_10003CA0C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003CA8C()
{
  return sub_1000A4570();
}

uint64_t sub_10003CB08@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003CB1C()
{
  return sub_10003CBAC();
}

uint64_t sub_10003CB30@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003CBAC()
{
  return sub_1000A4570();
}

uint64_t sub_10003CC1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();

  return swift_release();
}

uint64_t sub_10003CC98(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA840);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10001F904(a1, (uint64_t)&v9 - v6, &qword_1000CA840);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001F904((uint64_t)v7, (uint64_t)v5, &qword_1000CA840);
  swift_retain();
  sub_1000A4570();
  return sub_10000B988((uint64_t)v7, &qword_1000CA840);
}

uint64_t sub_10003CDA8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003CDBC()
{
  return sub_10003CBAC();
}

uint64_t sub_10003CDD0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10003CEAC;
  return v6(a1);
}

uint64_t sub_10003CEAC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10003CFA4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10003D078(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10003FB84((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10003FB84((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100041414((uint64_t)v12);
  return v7;
}

uint64_t sub_10003D078(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000A4BD0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10003D234(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000A4C70();
  if (!v8)
  {
    sub_1000A4CC0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000A4D20();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10003D234(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10003D2CC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10003D4AC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10003D4AC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10003D2CC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10003D444(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000A4C50();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000A4CC0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000A4890();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1000A4D20();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000A4CC0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10003D444(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100008704(&qword_1000CB0F0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10003D4AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008704(&qword_1000CB0F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

unint64_t sub_10003D5FC(char a1)
{
  sub_1000A4E10();
  sub_10009B2D4(a1);
  sub_1000A4840();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000A4E30();

  return sub_10003D6FC(a1, v2);
}

unint64_t sub_10003D684(uint64_t a1, uint64_t a2)
{
  sub_1000A4E10();
  sub_1000A4840();
  Swift::Int v4 = sub_1000A4E30();

  return sub_10003D810(a1, a2, v4);
}

unint64_t sub_10003D6FC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    uint64_t v7 = *(void *)&aFolder_1[v6 * 8];
    uint64_t v8 = qword_1000A7490[v6];
    while (*(void *)&aFolder_1[8 * *(char *)(*(void *)(v2 + 48) + v4)] != v7
         || qword_1000A7490[*(char *)(*(void *)(v2 + 48) + v4)] != v8)
    {
      char v10 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_10003D810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000A4D70() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000A4D70() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10003D8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_100008704(&qword_1000CB000);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_10001F904(a1, (uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000CB000);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  sub_1000409B0((uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, &qword_1000CB000);
  sub_100008704(&qword_1000CAF00);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1000A4520();
  *a4 = result;
  return result;
}

void *sub_10003DA44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100008704(&qword_1000CB0F8);
    uint64_t v3 = sub_1000A4C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      unint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_1000A4800();
      sub_1000A4E10();
      id v7 = v6;
      sub_1000A4840();
      Swift::Int v8 = sub_1000A4E30();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1000A4800();
        uint64_t v17 = v16;
        if (v15 == sub_1000A4800() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1000A4800();
          uint64_t v24 = v23;
          if (v22 == sub_1000A4800() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1000A4D70();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10003DC74()
{
  return type metadata accessor for SharingModel();
}

uint64_t type metadata accessor for SharingModel()
{
  uint64_t result = qword_1000CA7E0;
  if (!qword_1000CA7E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003DCC8()
{
  sub_10003E3A4(319, &qword_1000CA7F0);
  if (v0 <= 0x3F)
  {
    sub_10003E3A4(319, &qword_1000CA7F8);
    if (v1 <= 0x3F)
    {
      sub_10003E3A4(319, &qword_1000CA800);
      if (v2 <= 0x3F)
      {
        sub_10003E3A4(319, &qword_1000CA808);
        if (v3 <= 0x3F)
        {
          sub_10003E444(319, &qword_1000CA810, &qword_1000CA818);
          if (v4 <= 0x3F)
          {
            sub_10003E3A4(319, &qword_1000CA820);
            if (v5 <= 0x3F)
            {
              sub_10003E3A4(319, &qword_1000CA828);
              if (v6 <= 0x3F)
              {
                sub_10003E3A4(319, &qword_1000CA830);
                if (v7 <= 0x3F)
                {
                  sub_10003E444(319, &qword_1000CA838, &qword_1000CA840);
                  if (v8 <= 0x3F)
                  {
                    sub_10003E444(319, &qword_1000CA848, &qword_1000CA850);
                    if (v9 <= 0x3F)
                    {
                      sub_10003E3A4(319, &qword_1000CA858);
                      if (v10 <= 0x3F)
                      {
                        sub_10003E3A4(319, &qword_1000CA860);
                        if (v11 <= 0x3F)
                        {
                          sub_10003E444(319, &qword_1000CA868, &qword_1000CA870);
                          if (v12 <= 0x3F)
                          {
                            sub_10003E444(319, &qword_1000CA878, &qword_1000CA3B0);
                            if (v13 <= 0x3F)
                            {
                              sub_10003E444(319, (unint64_t *)&qword_1000CA220, &qword_1000CA880);
                              if (v14 <= 0x3F)
                              {
                                sub_10003E3EC(319, &qword_1000CA888, &qword_1000CA890);
                                if (v15 <= 0x3F)
                                {
                                  sub_10003E444(319, &qword_1000CA898, &qword_1000CA8A0);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_10003E3A4(319, &qword_1000CA8A8);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_10003E3EC(319, &qword_1000CA8B0, &qword_1000CA8B8);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_10003E444(319, &qword_1000CA8C0, (uint64_t *)&unk_1000CA8C8);
                                        if (v19 <= 0x3F) {
                                          swift_updateClassMetadata2();
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10003E3A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1000A4580();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_10003E3EC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_10001F798(255, a3);
    unint64_t v4 = sub_1000A4580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10003E444(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_1000086BC(a3);
    unint64_t v4 = sub_1000A4580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10003E494()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10003E4A8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003E4D0()
{
  return sub_10003CBAC();
}

uint64_t sub_10003E4F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001FD88;
  return sub_10001A5F0(a1, v4);
}

uint64_t sub_10003E5B0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003E5D8()
{
  return sub_10003CBAC();
}

uint64_t sub_10003E618()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003E620()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E648@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003E670()
{
  return sub_10003CBAC();
}

uint64_t sub_10003E698@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003E6C0()
{
  return sub_10003CBAC();
}

uint64_t sub_10003E6E8()
{
  return sub_10004121C(40);
}

uint64_t sub_10003E6F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10001FD88;
  return sub_100039470();
}

void sub_10003E7A4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0xDu)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v7 = a3;
  }
}

uint64_t sub_10003E804(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0xDu)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003E858()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003E890()
{
  return sub_1000397C0();
}

unint64_t sub_10003E898(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_1000A4870();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_1000A48E0();
}

uint64_t sub_10003E954(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000A4870();
    return sub_1000A48E0();
  }
  return result;
}

unint64_t sub_10003E9F0(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000A4CE0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100008704(&qword_1000CAFC0);
      uint64_t result = sub_1000A4C30();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1000A4CE0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = sub_1000A4C60();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    sub_1000A4500();
    sub_10003FD08(&qword_1000CAFC8, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_1000A4790();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_10003FD08(&qword_1000CAFD0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = sub_1000A47B0();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10003ECA4(uint64_t a1, double a2, double a3, double a4)
{
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 168) = a4;
  *(double *)(v4 + 152) = a2;
  *(void *)(v4 + 144) = a1;
  uint64_t v5 = sub_1000A4460();
  *(void *)(v4 + 176) = v5;
  *(void *)(v4 + 184) = *(void *)(v5 - 8);
  *(void *)(v4 + 192) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v4 + 200) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v4 + 208) = v7;
  *(void *)(v4 + 216) = v6;
  return _swift_task_switch(sub_10003EDA0, v7, v6);
}

uint64_t sub_10003EDA0()
{
  double v2 = *(double *)(v0 + 160);
  double v1 = *(double *)(v0 + 168);
  double v3 = *(double *)(v0 + 152);
  *(unsigned char *)(v0 + 248) = sub_1000A42B0();
  id v4 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  sub_1000A4270(v5);
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v4, "initWithFileAtURL:size:scale:representationTypes:", v6, -1, v3, v2, v1);
  *(void *)(v0 + 224) = v8;

  id v9 = [self sharedGenerator];
  *(void *)(v0 + 232) = v9;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_10003EF40;
  uint64_t v10 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10002E638;
  *(void *)(v0 + 104) = &unk_1000C2850;
  *(void *)(v0 + 112) = v10;
  [v9 generateBestRepresentationForRequest:v8 completionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10003EF40()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 240) = v2;
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = *(void *)(v1 + 208);
  if (v2) {
    uint64_t v5 = sub_10003F130;
  }
  else {
    uint64_t v5 = sub_10003F070;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10003F070()
{
  uint64_t v2 = *(void **)(v0 + 224);
  uint64_t v1 = *(void **)(v0 + 232);
  int v3 = *(unsigned __int8 *)(v0 + 248);
  swift_release();
  uint64_t v4 = *(void **)(v0 + 120);
  id v5 = [v4 UIImage];

  if (v3 == 1) {
    sub_1000A4290();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(id))(v0 + 8);
  return v6(v5);
}

uint64_t sub_10003F130()
{
  uint64_t v20 = v0;
  swift_release();
  swift_willThrow();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 240);
    uint64_t v15 = *(void **)(v0 + 232);
    uint64_t v16 = *(void **)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 192);
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    uint64_t v19 = v6;
    *(void *)(v0 + 128) = v3;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    *(void *)(v0 + 136) = sub_10003CFA4(v7, v8, &v19);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "generateBestRepresentation throws error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v17);
  }
  else
  {
    id v9 = *(void **)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  if (*(unsigned char *)(v0 + 248)) {
    sub_1000A4290();
  }
  swift_task_dealloc();
  unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13(0);
}

unint64_t sub_10003F3AC()
{
  sub_100008704(&qword_1000CA3E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6A60;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v1 = self;
  os_log_type_t v2 = (objc_class *)[v1 mainBundle];
  v68._countAndFlagsBits = 0x80000001000AB4C0;
  v81._object = (void *)0x80000001000AB460;
  v81._countAndFlagsBits = 0xD00000000000005DLL;
  v94.value._countAndFlagsBits = 0;
  v94.value._object = 0;
  v3.super.Class isa = v2;
  v107._countAndFlagsBits = 0;
  v107._object = (void *)0xE000000000000000;
  uint64_t v4 = sub_1000A4100(v81, v94, v3, v107, v68);
  uint64_t v6 = v5;

  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 56) = 8;
  uint64_t v7 = (objc_class *)[v1 mainBundle];
  v69._countAndFlagsBits = 0x80000001000AB550;
  v82._countAndFlagsBits = 0xD00000000000005FLL;
  v82._object = (void *)0x80000001000AB4F0;
  v95.value._countAndFlagsBits = 0;
  v95.value._object = 0;
  v8.super.Class isa = v7;
  v108._countAndFlagsBits = 0;
  v108._object = (void *)0xE000000000000000;
  uint64_t v9 = sub_1000A4100(v82, v95, v8, v108, v69);
  uint64_t v11 = v10;

  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v11;
  *(unsigned char *)(inited + 80) = 9;
  uint64_t v12 = (objc_class *)[v1 mainBundle];
  v70._countAndFlagsBits = 0x80000001000AB5F0;
  v83._object = (void *)0x80000001000AB590;
  v83._countAndFlagsBits = 0xD00000000000005DLL;
  v96.value._countAndFlagsBits = 0;
  v96.value._object = 0;
  v13.super.Class isa = v12;
  v109._countAndFlagsBits = 0;
  v109._object = (void *)0xE000000000000000;
  uint64_t v14 = sub_1000A4100(v83, v96, v13, v109, v70);
  uint64_t v16 = v15;

  *(void *)(inited + 88) = v14;
  *(void *)(inited + 96) = v16;
  *(unsigned char *)(inited + 104) = 10;
  uint64_t v17 = (objc_class *)[v1 mainBundle];
  v84._countAndFlagsBits = 0xD000000000000062;
  v71._countAndFlagsBits = 0x80000001000AB690;
  v84._object = (void *)0x80000001000AB620;
  v97.value._countAndFlagsBits = 0;
  v97.value._object = 0;
  v18.super.Class isa = v17;
  v110._countAndFlagsBits = 0;
  v110._object = (void *)0xE000000000000000;
  uint64_t v19 = sub_1000A4100(v84, v97, v18, v110, v71);
  uint64_t v21 = v20;

  *(void *)(inited + 112) = v19;
  *(void *)(inited + 120) = v21;
  *(unsigned char *)(inited + 128) = 11;
  uint64_t v22 = (objc_class *)[v1 mainBundle];
  v72._countAndFlagsBits = 0x80000001000AB730;
  v85._object = (void *)0x80000001000AB6D0;
  v85._countAndFlagsBits = 0xD00000000000005ELL;
  v98.value._countAndFlagsBits = 0;
  v98.value._object = 0;
  v23.super.Class isa = v22;
  v111._countAndFlagsBits = 0;
  v111._object = (void *)0xE000000000000000;
  uint64_t v24 = sub_1000A4100(v85, v98, v23, v111, v72);
  uint64_t v26 = v25;

  *(void *)(inited + 136) = v24;
  *(void *)(inited + 144) = v26;
  *(unsigned char *)(inited + 152) = 0;
  char v27 = (objc_class *)[v1 mainBundle];
  v73._countAndFlagsBits = 0x80000001000AB760;
  v86._countAndFlagsBits = 0xD00000000000005FLL;
  v86._object = (void *)0x80000001000AB4F0;
  v99.value._countAndFlagsBits = 0;
  v99.value._object = 0;
  v28.super.Class isa = v27;
  v112._countAndFlagsBits = 0;
  v112._object = (void *)0xE000000000000000;
  uint64_t v29 = sub_1000A4100(v86, v99, v28, v112, v73);
  uint64_t v31 = v30;

  *(void *)(inited + 160) = v29;
  *(void *)(inited + 168) = v31;
  *(unsigned char *)(inited + 176) = 1;
  uint64_t v32 = (objc_class *)[v1 mainBundle];
  v87._countAndFlagsBits = 0xD000000000000061;
  v74._countAndFlagsBits = 0x80000001000AB800;
  v87._object = (void *)0x80000001000AB790;
  v100.value._countAndFlagsBits = 0;
  v100.value._object = 0;
  v33.super.Class isa = v32;
  v113._countAndFlagsBits = 0;
  v113._object = (void *)0xE000000000000000;
  uint64_t v34 = sub_1000A4100(v87, v100, v33, v113, v74);
  uint64_t v36 = v35;

  *(void *)(inited + 184) = v34;
  *(void *)(inited + 192) = v36;
  *(unsigned char *)(inited + 200) = 2;
  unint64_t v37 = (objc_class *)[v1 mainBundle];
  v88._countAndFlagsBits = 0xD000000000000064;
  v75._countAndFlagsBits = 0x80000001000AB8A0;
  v88._object = (void *)0x80000001000AB830;
  v101.value._countAndFlagsBits = 0;
  v101.value._object = 0;
  v38.super.Class isa = v37;
  v114._countAndFlagsBits = 0;
  v114._object = (void *)0xE000000000000000;
  uint64_t v39 = sub_1000A4100(v88, v101, v38, v114, v75);
  uint64_t v41 = v40;

  *(void *)(inited + 208) = v39;
  *(void *)(inited + 216) = v41;
  *(unsigned char *)(inited + 224) = 3;
  id v42 = (objc_class *)[v1 mainBundle];
  v89._countAndFlagsBits = 0xD000000000000065;
  v76._countAndFlagsBits = 0x80000001000AB950;
  v89._object = (void *)0x80000001000AB8E0;
  v102.value._countAndFlagsBits = 0;
  v102.value._object = 0;
  v43.super.Class isa = v42;
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  uint64_t v44 = sub_1000A4100(v89, v102, v43, v115, v76);
  uint64_t v46 = v45;

  *(void *)(inited + 232) = v44;
  *(void *)(inited + 240) = v46;
  *(unsigned char *)(inited + 248) = 4;
  char v47 = (objc_class *)[v1 mainBundle];
  v77._countAndFlagsBits = 0x80000001000AB9F0;
  v90._object = (void *)0x80000001000AB990;
  v90._countAndFlagsBits = 0xD00000000000005ELL;
  v103.value._countAndFlagsBits = 0;
  v103.value._object = 0;
  v48.super.Class isa = v47;
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  uint64_t v49 = sub_1000A4100(v90, v103, v48, v116, v77);
  uint64_t v51 = v50;

  *(void *)(inited + 256) = v49;
  *(void *)(inited + 264) = v51;
  *(unsigned char *)(inited + 272) = 5;
  uint64_t v52 = (objc_class *)[v1 mainBundle];
  v78._countAndFlagsBits = 0x80000001000ABA80;
  v91._object = (void *)0x80000001000ABA20;
  v91._countAndFlagsBits = 0xD00000000000005ELL;
  v104.value._countAndFlagsBits = 0;
  v104.value._object = 0;
  v53.super.Class isa = v52;
  v117._countAndFlagsBits = 0;
  v117._object = (void *)0xE000000000000000;
  uint64_t v54 = sub_1000A4100(v91, v104, v53, v117, v78);
  uint64_t v56 = v55;

  *(void *)(inited + 280) = v54;
  *(void *)(inited + 288) = v56;
  *(unsigned char *)(inited + 296) = 6;
  uint64_t v57 = (objc_class *)[v1 mainBundle];
  v92._countAndFlagsBits = 0xD00000000000005CLL;
  v79._countAndFlagsBits = 0x80000001000ABB10;
  v92._object = (void *)0x80000001000ABAB0;
  v105.value._countAndFlagsBits = 0;
  v105.value._object = 0;
  v58.super.Class isa = v57;
  v118._countAndFlagsBits = 0;
  v118._object = (void *)0xE000000000000000;
  uint64_t v59 = sub_1000A4100(v92, v105, v58, v118, v79);
  uint64_t v61 = v60;

  *(void *)(inited + 304) = v59;
  *(void *)(inited + 312) = v61;
  *(unsigned char *)(inited + 320) = 13;
  uint64_t v62 = (objc_class *)[v1 mainBundle];
  v80._countAndFlagsBits = 0x80000001000ABBA0;
  v93._object = (void *)0x80000001000ABB40;
  v93._countAndFlagsBits = 0xD00000000000005DLL;
  v106.value._countAndFlagsBits = 0;
  v106.value._object = 0;
  v63.super.Class isa = v62;
  v119._countAndFlagsBits = 0;
  v119._object = (void *)0xE000000000000000;
  uint64_t v64 = sub_1000A4100(v93, v106, v63, v119, v80);
  uint64_t v66 = v65;

  *(void *)(inited + 328) = v64;
  *(void *)(inited + 336) = v66;
  return sub_10001FDE0(inited);
}

uint64_t sub_10003FA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AlertViewModelButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003FAD0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10003FAF8()
{
  return sub_10003CBAC();
}

uint64_t sub_10003FB20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlertViewModelButton(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003FB7C()
{
  return sub_100039740();
}

uint64_t sub_10003FB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_10003FBE0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10003FC10@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000A4690();
  *a1 = v3;
  return result;
}

uint64_t sub_10003FC3C()
{
  return sub_1000A46A0();
}

unint64_t sub_10003FC64()
{
  unint64_t result = qword_1000CAD90;
  if (!qword_1000CAD90)
  {
    sub_1000086BC(&qword_1000CA3B0);
    sub_10003FD08((unint64_t *)&qword_1000CAD98, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAD90);
  }
  return result;
}

uint64_t sub_10003FD08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003FD50()
{
  unint64_t result = qword_1000CADA8;
  if (!qword_1000CADA8)
  {
    sub_1000086BC(&qword_1000CA880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CADA8);
  }
  return result;
}

uint64_t sub_10003FDBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_100026CEC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10003FDC4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003FDFC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, void, void, void, void))(v2 + 16);
  uint64_t v6 = (int *)sub_100008704(&qword_1000CB0A0);
  uint64_t result = v5(a1, *(void *)(a1 + v6[12]), *(void *)(a1 + v6[12] + 8), *(void *)(a1 + v6[16]), *(void *)(a1 + v6[16] + 8), *(unsigned __int8 *)(a1 + v6[20]));
  *a2 = result;
  return result;
}

unint64_t sub_10003FE68()
{
  unint64_t result = qword_1000CADE8;
  if (!qword_1000CADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CADE8);
  }
  return result;
}

uint64_t sub_10003FEBC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001F798(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_10003FF00(unsigned char *result)
{
  return sub_100027BCC(result);
}

_UNKNOWN **sub_10003FF08(char a1, void *a2)
{
  return sub_100027C4C(a1, a2);
}

uint64_t sub_10003FF10@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *((void *)a1 + 1));
  *a2 = result;
  return result;
}

unint64_t sub_10003FF48()
{
  unint64_t result = qword_1000CAE40;
  if (!qword_1000CAE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAE40);
  }
  return result;
}

unint64_t sub_10003FF9C()
{
  unint64_t result = qword_1000CAE58;
  if (!qword_1000CAE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAE58);
  }
  return result;
}

unint64_t sub_10003FFF0()
{
  unint64_t result = qword_1000CAE70;
  if (!qword_1000CAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAE70);
  }
  return result;
}

unint64_t sub_100040044()
{
  unint64_t result = qword_1000CAE80;
  if (!qword_1000CAE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAE80);
  }
  return result;
}

uint64_t sub_100040098()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000400D8(int a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100028080(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000400E0(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void, void))(v1 + 16))(*a1, a1[1], *((void *)a1 + 1), a1[16], a1[17], *((void *)a1 + 3));
}

void sub_100040120(void **a1)
{
}

uint64_t sub_100040128(unsigned __int8 *a1)
{
  return sub_100028A08(a1);
}

uint64_t sub_100040130(unsigned char *a1)
{
  return sub_100028C0C(a1);
}

uint64_t sub_100040138(unsigned __int8 a1)
{
  return sub_10002AA28(a1);
}

uint64_t sub_100040140(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10004016C(unsigned __int8 a1)
{
  return sub_10002C674(a1);
}

uint64_t sub_100040174(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1000401A0(unsigned __int8 a1)
{
  return sub_10002C99C(a1);
}

uint64_t sub_1000401A8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1000401D4()
{
  unint64_t result = qword_1000CAEC8;
  if (!qword_1000CAEC8)
  {
    sub_1000086BC(&qword_1000CA8A0);
    sub_10003FEBC(&qword_1000CAED0, &qword_1000CA890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAEC8);
  }
  return result;
}

uint64_t sub_100040274()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000402AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *((void *)v4 + 2);
  double v11 = v4[3];
  double v12 = v4[4];
  NSBundle v13 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v13;
  *NSBundle v13 = v5;
  v13[1] = sub_10004038C;
  return sub_10002CB04(a1, a2, a3, a4, v10, v11, v12);
}

uint64_t sub_10004038C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_100040488(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000B7A4;
  NSBundle v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1000CAEF0 + dword_1000CAEF0);
  return v8(a1, a2, v6);
}

uint64_t sub_100040550@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003D8F4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_100040558()
{
  unint64_t result = qword_1000CAF40;
  if (!qword_1000CAF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAF40);
  }
  return result;
}

unint64_t sub_1000405AC()
{
  unint64_t result = qword_1000CAF58;
  if (!qword_1000CAF58)
  {
    sub_1000086BC(&qword_1000CAF60);
    sub_10003FEBC(&qword_1000CAF68, &qword_1000CAF70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAF58);
  }
  return result;
}

unint64_t sub_10004064C()
{
  unint64_t result = qword_1000CAFA8;
  if (!qword_1000CAFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAFA8);
  }
  return result;
}

uint64_t sub_1000406A0(char *a1)
{
  return sub_10002D90C(a1);
}

uint64_t sub_1000406A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000086BC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000406EC()
{
  return sub_10004121C(40);
}

uint64_t sub_1000406F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10001FD88;
  return sub_10002DC34(a1, v4, v5, v6);
}

uint64_t sub_1000407A8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001FD88;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000CAFE8 + dword_1000CAFE8);
  return v6(a1, v4);
}

uint64_t sub_100040860()
{
  uint64_t v1 = sub_100008704(&qword_1000CB000);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000409B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008704(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100040A14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100008704(&qword_1000CB000) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100020C94(a1, a2, v6, v7, v8);
}

uint64_t sub_100040A9C()
{
  uint64_t v1 = sub_100008704(&qword_1000CB000);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }

  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100040C0C()
{
  uint64_t v2 = *(void *)(sub_100008704(&qword_1000CB000) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(int **)(v0 + 32);
  uint64_t v6 = v0 + v3;
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_10001FD88;
  *(_OWORD *)(v7 + 24) = v8;
  double v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 40) = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_100020F6C;
  return v11(v7 + 16, v6);
}

uint64_t sub_100040DBC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100040DC8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100040DD4()
{
  return sub_10004121C(40);
}

uint64_t sub_100040DDC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000B7A4;
  return sub_10003A954(a1, v4, v5, v6);
}

uint64_t sub_100040E90()
{
  return sub_10004121C(41);
}

uint64_t sub_100040E98(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_10001FD88;
  return sub_10002C830(a1, v4, v5, v6, v7);
}

uint64_t sub_100040F5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100040F84()
{
  return sub_10003CBAC();
}

uint64_t sub_100040FAC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100040FD4()
{
  return sub_10003CBAC();
}

uint64_t sub_100040FFC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100041024()
{
  return sub_10003CBAC();
}

uint64_t sub_10004104C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100041074()
{
  return sub_10003CBAC();
}

uint64_t sub_10004109C()
{
  return sub_10004121C(40);
}

uint64_t sub_1000410A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_10001FD88;
  return sub_10002BA04(a1, v4, v5, v6);
}

uint64_t sub_100041158()
{
  return sub_10004121C(40);
}

uint64_t sub_100041160()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10001FD88;
  return sub_10002AD38();
}

uint64_t sub_100041214()
{
  return sub_10004121C(40);
}

uint64_t sub_10004121C(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100041268()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10001FD88;
  return sub_100028DD4();
}

uint64_t sub_10004132C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100041354()
{
  return sub_10003CBAC();
}

uint64_t sub_10004137C(uint64_t a1)
{
  return sub_100007474(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_100041398()
{
  unint64_t result = qword_1000CB0D0;
  if (!qword_1000CB0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB0D0);
  }
  return result;
}

uint64_t sub_1000413EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100041414(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

BOOL sub_100041498(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t *sub_1000414AC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1000414C4(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1000414D0(void *a1@<X8>)
{
  *a1 = &off_1000C19D0;
}

void sub_1000414E4()
{
  sub_1000A4E20(*v0);
}

BOOL sub_100041514(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_10004152C@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10004154C(void *a1@<X8>)
{
  *a1 = &off_1000C19F8;
}

Swift::Int sub_10004155C()
{
  Swift::UInt v1 = *v0;
  sub_1000A4E10();
  sub_1000A4E20(v1);
  return sub_1000A4E30();
}

Swift::Int sub_1000415A4()
{
  Swift::UInt v1 = *v0;
  sub_1000A4E10();
  sub_1000A4E20(v1);
  return sub_1000A4E30();
}

void sub_1000415E8(void *a1@<X8>)
{
  *a1 = &off_1000C1A20;
}

uint64_t sub_1000415F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__showingAlert;
  uint64_t v2 = sub_100008704(&qword_1000CAD30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__showingAlertBool;
  uint64_t v4 = sub_100008704(&qword_1000CAD70);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__whoCanAccessPermissions;
  uint64_t v7 = sub_100008704(&qword_1000CB328);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__whoCanAccessPermissionSelected;
  uint64_t v9 = sub_100008704(&qword_1000CB330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__readWritePermissions;
  uint64_t v11 = sub_100008704(&qword_1000CB338);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__readWritePermissionSelected;
  uint64_t v13 = sub_100008704(&qword_1000CB340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__whoCanAddPeoplePermissions;
  uint64_t v15 = sub_100008704(&qword_1000CB348);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__whoCanAddPeoplePermissionSelected;
  uint64_t v17 = sub_100008704(&qword_1000CB350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v5(v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__anyoneCanAddPeople, v4);
  uint64_t v18 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__localizedPermissionSummary;
  uint64_t v19 = sub_100008704(&qword_1000CACE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  v5(v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__shouldShowSharingOptionsView, v4);
  uint64_t v20 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__didTapCopyLink;
  uint64_t v21 = sub_100008704(&qword_1000CB358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v5(v0 + OBJC_IVAR____TtC13SPIHelper_iOS25GlobalPermissionViewModel__savingInProgress, v4);
  return v0;
}

uint64_t sub_100041960()
{
  sub_1000415F8();

  return swift_deallocClassInstance();
}

uint64_t sub_1000419B8()
{
  return type metadata accessor for GlobalPermissionViewModel();
}

uint64_t type metadata accessor for GlobalPermissionViewModel()
{
  uint64_t result = qword_1000CB190;
  if (!qword_1000CB190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100041A0C()
{
  sub_10003E444(319, &qword_1000CA838, &qword_1000CA840);
  if (v0 <= 0x3F)
  {
    sub_10003E3A4(319, &qword_1000CA7F0);
    if (v1 <= 0x3F)
    {
      sub_10003E444(319, &qword_1000CB1A0, &qword_1000CB1A8);
      if (v2 <= 0x3F)
      {
        sub_10003E3A4(319, &qword_1000CB1B0);
        if (v3 <= 0x3F)
        {
          sub_10003E444(319, &qword_1000CB1B8, &qword_1000CB1C0);
          if (v4 <= 0x3F)
          {
            sub_10003E3A4(319, &qword_1000CB1C8);
            if (v5 <= 0x3F)
            {
              sub_10003E444(319, &qword_1000CB1D0, &qword_1000CB1D8);
              if (v6 <= 0x3F)
              {
                sub_10003E3A4(319, &qword_1000CB1E0);
                if (v7 <= 0x3F)
                {
                  sub_10003E3A4(319, &qword_1000CA8A8);
                  if (v8 <= 0x3F)
                  {
                    sub_10003E444(319, &qword_1000CB1E8, (uint64_t *)&unk_1000CB1F0);
                    if (v9 <= 0x3F) {
                      swift_updateClassMetadata2();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for SharePermission(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.WhoCanAddPeople()
{
  return &type metadata for GlobalPermissionViewModel.WhoCanAddPeople;
}

uint64_t getEnumTagSinglePayload for SharingMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13SPIHelper_iOS25GlobalPermissionViewModelC24CanMakeChangesOrViewOnlyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100041EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100041F1C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100041F24(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.CanMakeChangesOrViewOnly()
{
  return &type metadata for GlobalPermissionViewModel.CanMakeChangesOrViewOnly;
}

uint64_t getEnumTagSinglePayload for NetworkStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GlobalPermissionViewModel.WhoCanAccess(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100042098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000420C0(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GlobalPermissionViewModel.WhoCanAccess()
{
  return &type metadata for GlobalPermissionViewModel.WhoCanAccess;
}

void *sub_1000420DC()
{
  return &protocol witness table for Int;
}

uint64_t sub_1000420E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100042314(a1, a2, a3, (uint64_t (*)(void))sub_100042114, (uint64_t (*)(void))sub_100042168);
}

unint64_t sub_100042114()
{
  unint64_t result = qword_1000CB2E0;
  if (!qword_1000CB2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB2E0);
  }
  return result;
}

unint64_t sub_100042168()
{
  unint64_t result = qword_1000CB2E8;
  if (!qword_1000CB2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB2E8);
  }
  return result;
}

uint64_t sub_1000421C0()
{
  return sub_100042424(&qword_1000CB2F0, &qword_1000CB1A8);
}

uint64_t sub_1000421E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100042314(a1, a2, a3, (uint64_t (*)(void))sub_100042214, (uint64_t (*)(void))sub_100042268);
}

unint64_t sub_100042214()
{
  unint64_t result = qword_1000CB2F8;
  if (!qword_1000CB2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB2F8);
  }
  return result;
}

unint64_t sub_100042268()
{
  unint64_t result = qword_1000CB300;
  if (!qword_1000CB300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB300);
  }
  return result;
}

uint64_t sub_1000422C0()
{
  return sub_100042424(&qword_1000CB308, &qword_1000CB1C0);
}

uint64_t sub_1000422E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100042314(a1, a2, a3, (uint64_t (*)(void))sub_100042350, (uint64_t (*)(void))sub_1000423A4);
}

uint64_t sub_100042314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100042350()
{
  unint64_t result = qword_1000CB310;
  if (!qword_1000CB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB310);
  }
  return result;
}

unint64_t sub_1000423A4()
{
  unint64_t result = qword_1000CB318;
  if (!qword_1000CB318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB318);
  }
  return result;
}

uint64_t sub_1000423FC()
{
  return sub_100042424(&qword_1000CB320, &qword_1000CB1D8);
}

uint64_t sub_100042424(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000086BC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004248C()
{
  uint64_t v1 = type metadata accessor for SPIAnalyticsEvent();
  __chkstk_darwin(v1);
  int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042890(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = sub_100008704(&qword_1000CB368);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v9 = &v3[*(int *)(v8 + 112)];
      sub_1000428F4(*(void *)v9, *((void *)v9 + 1), *((void **)v9 + 2), *((void *)v9 + 3), *((void *)v9 + 4), v9[40]);
      uint64_t v10 = sub_1000A42E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      unint64_t v7 = 0xD000000000000029;
      break;
    case 2u:
    case 3u:
    case 8u:
      unint64_t v7 = 0xD00000000000002BLL;
      sub_100042908((uint64_t)v3);
      break;
    case 4u:
    case 6u:
      sub_100042908((uint64_t)v3);
      unint64_t v7 = 0xD000000000000030;
      break;
    case 5u:
    case 0xAu:
      sub_100042908((uint64_t)v3);
      unint64_t v7 = 0xD000000000000026;
      break;
    case 7u:
    case 9u:
      sub_100042908((uint64_t)v3);
      unint64_t v7 = 0xD000000000000022;
      break;
    case 0xBu:
      sub_100042908((uint64_t)v3);
      unint64_t v7 = 0xD000000000000036;
      break;
    case 0xCu:
      uint64_t v11 = sub_100008704(&qword_1000CB360);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = &v3[*(int *)(v11 + 128)];
      sub_1000428F4(*(void *)v12, *((void *)v12 + 1), *((void **)v12 + 2), *((void *)v12 + 3), *((void *)v12 + 4), v12[40]);
      sub_10000E36C((uint64_t)v3);
      unint64_t v7 = 0xD000000000000038;
      break;
    default:
      uint64_t v4 = sub_100008704(&qword_1000CB370);
      swift_bridgeObjectRelease();
      uint64_t v5 = &v3[*(int *)(v4 + 80)];
      sub_1000428F4(*(void *)v5, *((void *)v5 + 1), *((void **)v5 + 2), *((void *)v5 + 3), *((void *)v5 + 4), v5[40]);
      uint64_t v6 = sub_1000A42E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
      unint64_t v7 = 0xD000000000000028;
      break;
  }
  return v7;
}

uint64_t type metadata accessor for SPIAnalyticsEvent()
{
  uint64_t result = qword_1000CB3F0;
  if (!qword_1000CB3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100042890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SPIAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000428F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF) {
    return sub_10003E804(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_100042908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SPIAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100042964()
{
  uint64_t v1 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A42E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SPIAnalyticsEvent();
  __chkstk_darwin(v8);
  uint64_t v10 = (unsigned __int8 *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042890(v0, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = (int *)sub_100008704(&qword_1000CB368);
      uint64_t v27 = v26[12];
      uint64_t v28 = v26[16];
      uint64_t v29 = *(void *)&v10[v26[20]];
      uint64_t v30 = (uint64_t *)&v10[v26[24]];
      uint64_t v31 = v30[1];
      uint64_t v61 = *v30;
      char v32 = v10[v28];
      uint64_t v33 = v10[v27];
      sub_1000409B0((uint64_t)&v10[v26[28]], (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 32))(v7, v10, v4);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      uint64_t v16 = sub_100043638((uint64_t)v3, 0, v33, v32, v29, v61, v31, (uint64_t)v62, 0, 0xE000000000000000);
      sub_10000E36C((uint64_t)v3);
      sub_100043800((uint64_t)v62);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      unint64_t v35 = *(void *)v10;
      unint64_t v34 = *((void *)v10 + 1);
      uint64_t v36 = *((void *)v10 + 3);
      uint64_t v61 = *((void *)v10 + 4);
      uint64_t v37 = *((void *)v10 + 5);
      uint64_t v38 = (uint64_t)(v10 + 48);
      char v39 = v10[17];
      uint64_t v40 = v10[16];
      sub_1000409B0(v38, (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      uint64_t v16 = sub_100043638((uint64_t)v3, 0, v40, v39, v36, v61, v37, (uint64_t)v62, v35, v34);
      sub_10000E36C((uint64_t)v3);
      sub_100043800((uint64_t)v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    case 3u:
      uint64_t v41 = *((void *)v10 + 1);
      uint64_t v42 = *((void *)v10 + 2);
      uint64_t v43 = *((void *)v10 + 3);
      uint64_t v44 = (uint64_t)(v10 + 32);
      char v45 = v10[1];
      uint64_t v46 = *v10;
      sub_1000409B0(v44, (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      uint64_t v16 = sub_100043638((uint64_t)v3, 0, v46, v45, v41, v42, v43, (uint64_t)v62, 0, 0xE000000000000000);
      sub_10000E36C((uint64_t)v3);
      sub_100043800((uint64_t)v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      unint64_t v11 = *(void *)v10;
      unint64_t v12 = *((void *)v10 + 1);
      uint64_t v13 = (uint64_t)(v10 + 32);
      uint64_t v15 = *((void *)v10 + 2);
      uint64_t v14 = *((void *)v10 + 3);
      sub_1000409B0(v13, (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      uint64_t v16 = sub_100098F3C((uint64_t)v3, 0, v15, v14, (uint64_t)v62, v11, v12);
      sub_10000E36C((uint64_t)v3);
      sub_100043800((uint64_t)v62);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 9u:
    case 0xBu:
      uint64_t v18 = *(void **)v10;
      uint64_t v17 = *((void *)v10 + 1);
      uint64_t v19 = (uint64_t)(v10 + 24);
      uint64_t v20 = *((void *)v10 + 2);
      sub_1000409B0(v19, (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      uint64_t v16 = sub_100098F3C((uint64_t)v3, v18, v17, v20, (uint64_t)v62, 0, 0xE000000000000000);
      sub_10000E36C((uint64_t)v3);
      sub_100043800((uint64_t)v62);

LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      char v47 = *(void **)v10;
      uint64_t v48 = *((void *)v10 + 1);
      uint64_t v49 = *((void *)v10 + 2);
      uint64_t v50 = *((void *)v10 + 3);
      sub_1000409B0((uint64_t)(v10 + 32), (uint64_t)v62, &qword_1000CB378);
      uint64_t v16 = sub_1000431D0(v47, v48, v49, v50, (uint64_t)v62, 0, 0xE000000000000000);
      sub_100043800((uint64_t)v62);

      swift_bridgeObjectRelease();
      break;
    case 0xCu:
      uint64_t v51 = (int *)sub_100008704(&qword_1000CB360);
      uint64_t v52 = *(void **)&v10[v51[12]];
      uint64_t v53 = *(void *)&v10[v51[24]];
      uint64_t v54 = (uint64_t *)&v10[v51[28]];
      uint64_t v55 = *v54;
      uint64_t v56 = v54[1];
      char v57 = v10[v51[20]];
      uint64_t v58 = v10[v51[16]];
      sub_1000409B0((uint64_t)&v10[v51[32]], (uint64_t)v62, &qword_1000CB378);
      sub_1000409B0((uint64_t)v10, (uint64_t)v3, &qword_1000CA3B0);
      uint64_t v16 = sub_100043638((uint64_t)v3, v52, v58, v57, v53, v55, v56, (uint64_t)v62, 0, 0xE000000000000000);
      sub_100043800((uint64_t)v62);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_10000E36C((uint64_t)v3);
      break;
    default:
      uint64_t v21 = (int *)sub_100008704(&qword_1000CB370);
      uint64_t v22 = *(void *)&v10[v21[12]];
      NSBundle v23 = (uint64_t *)&v10[v21[16]];
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      sub_1000409B0((uint64_t)&v10[v21[20]], (uint64_t)v62, &qword_1000CB378);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 32))(v7, v10, v4);
      uint64_t v16 = sub_100043020((uint64_t)v7, v22, v24, v25, (uint64_t)v62);
      sub_100043800((uint64_t)v62);
LABEL_7:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
  }
  return v16;
}

void *sub_100043020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000409B0(a5, (uint64_t)v23, &qword_1000CB378);
  int v10 = v23[40];
  uint64_t v11 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000981E8(a2, v10 != 255);
  uint64_t v14 = sub_1000A42E0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  uint64_t v16 = sub_100098F3C((uint64_t)v13, 0, a3, a4, a5, 0, 0xE000000000000000);
  sub_10000E36C((uint64_t)v13);
  Class isa = sub_1000A49F0().super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v16;
  sub_100043B48((uint64_t)isa, 0x737574617473, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v22;
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1000431D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  sub_1000409B0(a5, (uint64_t)v26, &qword_1000CB378);
  int v14 = v26[40];
  uint64_t v15 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100099950(a2, v14 != 255);
  uint64_t v18 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = sub_100098F3C((uint64_t)v17, a1, a3, a4, a5, a6, a7);
  sub_10000E36C((uint64_t)v17);
  Class isa = sub_1000A49F0().super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v19;
  sub_100043B48((uint64_t)isa, 0x737574617473, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v22 = v25;
  swift_bridgeObjectRelease();
  return v22;
}

BOOL sub_100043358()
{
  uint64_t v1 = type metadata accessor for SPIAnalyticsEvent();
  __chkstk_darwin(v1);
  int v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042890(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = sub_100008704(&qword_1000CB368);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(v11 + 112);
      goto LABEL_6;
    case 2u:
      long long v15 = *((_OWORD *)v3 + 4);
      long long v21 = *((_OWORD *)v3 + 3);
      long long v22 = v15;
      uint64_t v5 = *((void *)v3 + 10);
      int v6 = v3[88];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      long long v4 = *((_OWORD *)v3 + 3);
      long long v21 = *((_OWORD *)v3 + 2);
      long long v22 = v4;
      uint64_t v5 = *((void *)v3 + 8);
      int v6 = v3[72];
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 9u:
    case 0xBu:
      unint64_t v7 = *(void **)v3;
      long long v8 = *(_OWORD *)(v3 + 40);
      long long v21 = *(_OWORD *)(v3 + 24);
      long long v22 = v8;
      uint64_t v5 = *((void *)v3 + 7);
      int v6 = v3[64];
      goto LABEL_10;
    case 0xAu:
      unint64_t v7 = *(void **)v3;
      long long v16 = *((_OWORD *)v3 + 3);
      long long v21 = *((_OWORD *)v3 + 2);
      long long v22 = v16;
      uint64_t v5 = *((void *)v3 + 8);
      int v6 = v3[72];
LABEL_10:

LABEL_11:
      swift_bridgeObjectRelease();
      if (v6 != 255) {
        goto LABEL_12;
      }
      return v6 != 255;
    case 0xCu:
      uint64_t v18 = sub_100008704(&qword_1000CB360);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = &v3[*(int *)(v18 + 128)];
      long long v20 = *((_OWORD *)v19 + 1);
      long long v21 = *(_OWORD *)v19;
      long long v22 = v20;
      uint64_t v5 = *((void *)v19 + 4);
      int v6 = v19[40];
      sub_10000E36C((uint64_t)v3);
      if (v6 == 255) {
        return v6 != 255;
      }
      goto LABEL_12;
    default:
      uint64_t v9 = sub_100008704(&qword_1000CB370);
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(v9 + 80);
LABEL_6:
      uint64_t v12 = &v3[v10];
      long long v13 = *((_OWORD *)v12 + 1);
      long long v21 = *(_OWORD *)v12;
      long long v22 = v13;
      uint64_t v5 = *((void *)v12 + 4);
      int v6 = v12[40];
      uint64_t v14 = sub_1000A42E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v3, v14);
      if (v6 == 255) {
        return v6 != 255;
      }
LABEL_12:
      sub_1000428F4(v21, *((uint64_t *)&v21 + 1), (void *)v22, *((uint64_t *)&v22 + 1), v5, v6);
      return v6 != 255;
  }
}

void *sub_100043638(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10)
{
  sub_1000409B0(a8, (uint64_t)v27, &qword_1000CB378);
  char v16 = v27[40] != 255;
  sub_1000995AC(a3, v16);
  sub_100099708(a4, v16);
  swift_bridgeObjectRetain();
  sub_100099894(a3, a5);
  uint64_t v17 = sub_100098F3C(a1, a2, a6, a7, a8, a9, a10);
  Class isa = sub_1000A49F0().super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100043B48((uint64_t)isa, 0x737365636361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  Class v20 = sub_1000A49F0().super.super.isa;
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_100043B48((uint64_t)v20, 0x697373696D726570, 0xEB00000000736E6FLL, v21);
  swift_bridgeObjectRelease();
  Class v22 = sub_1000A49F0().super.super.isa;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_100043B48((uint64_t)v22, 0x766E49776F6C6C61, 0xED0000676E697469, v23);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100043800(uint64_t a1)
{
  return a1;
}

uint64_t sub_100043838(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_100008704(&qword_1000CB0C8);
  char v38 = a2;
  uint64_t v6 = sub_1000A4D00();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    Class v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          int v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1000A4E10();
    sub_1000A4840();
    uint64_t result = sub_1000A4E30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int v3 = v35;
  Class v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *Class v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

void sub_100043B48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10003D684(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100043CB8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100043838(v15, a4 & 1);
  unint64_t v20 = sub_10003D684(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1000A4D90();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  Class v22 = (uint64_t *)(v18[6] + 16 * v12);
  *Class v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

id sub_100043CB8()
{
  uint64_t v1 = v0;
  sub_100008704(&qword_1000CB0C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000A4CF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_100043E6C(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v17[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = (int *)sub_100008704(&qword_1000CB368);
        a1[v19[12]] = a2[v19[12]];
        a1[v19[16]] = a2[v19[16]];
        *(void *)&a1[v19[20]] = *(void *)&a2[v19[20]];
        uint64_t v20 = v19[24];
        char v21 = &a1[v20];
        int64_t v22 = &a2[v20];
        uint64_t v23 = *((void *)v22 + 1);
        *(void *)char v21 = *(void *)v22;
        *((void *)v21 + 1) = v23;
        uint64_t v24 = v19[28];
        unint64_t v14 = &a1[v24];
        unint64_t v15 = &a2[v24];
        int v16 = a2[v24 + 40];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != 255) {
          goto LABEL_7;
        }
        long long v73 = *((_OWORD *)v15 + 1);
        *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v73;
        *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
        break;
      case 2u:
        uint64_t v30 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v30;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v31 = *((void *)a2 + 4);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = v31;
        *((void *)a1 + 5) = *((void *)a2 + 5);
        int v32 = a2[88];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32 == 255)
        {
          long long v74 = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 4) = v74;
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          uint64_t v33 = *((void *)a2 + 6);
          uint64_t v34 = *((void *)a2 + 7);
          unint64_t v35 = (void *)*((void *)a2 + 8);
          uint64_t v36 = *((void *)a2 + 9);
          uint64_t v37 = *((void *)a2 + 10);
          sub_10003E7A4(v33, v34, v35, v36, v37, v32);
          *((void *)a1 + 6) = v33;
          *((void *)a1 + 7) = v34;
          *((void *)a1 + 8) = v35;
          *((void *)a1 + 9) = v36;
          *((void *)a1 + 10) = v37;
          a1[88] = v32;
        }
        break;
      case 3u:
        *(_WORD *)a1 = *(_WORD *)a2;
        uint64_t v38 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v38;
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v75 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v75;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 4u:
        uint64_t v40 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v40;
        uint64_t v41 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v41;
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v76 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v76;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 5u:
        uint64_t v42 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v42;
        uint64_t v43 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v43;
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v77 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v77;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 6u:
        uint64_t v44 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v44;
        uint64_t v45 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v45;
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v78 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v78;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 7u:
        uint64_t v46 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v46;
        uint64_t v47 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v47;
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v79 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v79;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 8u:
        uint64_t v48 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v48;
        uint64_t v49 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v49;
        int v39 = a2[72];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39 != 255) {
          goto LABEL_25;
        }
        long long v80 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v80;
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        break;
      case 9u:
        uint64_t v50 = *(char **)a2;
        uint64_t v51 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v51;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        int v52 = a2[64];
        uint64_t v53 = v50;
        swift_bridgeObjectRetain();
        if (v52 != 255) {
          goto LABEL_23;
        }
        long long v81 = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = v81;
        *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
        break;
      case 0xAu:
        uint64_t v59 = *(char **)a2;
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v39 = a2[72];
        uint64_t v60 = v59;
        swift_bridgeObjectRetain();
        if (v39 == 255)
        {
          long long v82 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v82;
          *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        }
        else
        {
LABEL_25:
          uint64_t v61 = *((void *)a2 + 4);
          uint64_t v62 = *((void *)a2 + 5);
          NSBundle v63 = (void *)*((void *)a2 + 6);
          uint64_t v64 = *((void *)a2 + 7);
          uint64_t v65 = *((void *)a2 + 8);
          sub_10003E7A4(v61, v62, v63, v64, v65, v39);
          *((void *)a1 + 4) = v61;
          *((void *)a1 + 5) = v62;
          *((void *)a1 + 6) = v63;
          *((void *)a1 + 7) = v64;
          *((void *)a1 + 8) = v65;
          a1[72] = v39;
        }
        break;
      case 0xBu:
        uint64_t v66 = *(char **)a2;
        uint64_t v67 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v67;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        int v52 = a2[64];
        Swift::String v68 = v66;
        swift_bridgeObjectRetain();
        if (v52 == 255)
        {
          long long v83 = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = v83;
          *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
        }
        else
        {
LABEL_23:
          uint64_t v54 = *((void *)a2 + 3);
          uint64_t v55 = *((void *)a2 + 4);
          uint64_t v56 = (void *)*((void *)a2 + 5);
          uint64_t v57 = *((void *)a2 + 6);
          uint64_t v58 = *((void *)a2 + 7);
          sub_10003E7A4(v54, v55, v56, v57, v58, v52);
          *((void *)a1 + 3) = v54;
          *((void *)a1 + 4) = v55;
          *((void *)a1 + 5) = v56;
          *((void *)a1 + 6) = v57;
          *((void *)a1 + 7) = v58;
          a1[64] = v52;
        }
        break;
      case 0xCu:
        uint64_t v69 = sub_1000A42E0();
        uint64_t v70 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(a2, 1, v69))
        {
          uint64_t v71 = sub_100008704(&qword_1000CA3B0);
          memcpy(a1, a2, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(a1, a2, v69);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(a1, 0, 1, v69);
        }
        Swift::String v84 = (int *)sub_100008704(&qword_1000CB360);
        uint64_t v85 = v84[12];
        Swift::String v86 = *(void **)&a2[v85];
        *(void *)&a1[v85] = v86;
        a1[v84[16]] = a2[v84[16]];
        a1[v84[20]] = a2[v84[20]];
        *(void *)&a1[v84[24]] = *(void *)&a2[v84[24]];
        uint64_t v87 = v84[28];
        Swift::String v88 = &a1[v87];
        Swift::String v89 = &a2[v87];
        uint64_t v90 = *((void *)v89 + 1);
        *(void *)Swift::String v88 = *(void *)v89;
        *((void *)v88 + 1) = v90;
        uint64_t v91 = v84[32];
        unint64_t v14 = &a1[v91];
        unint64_t v15 = &a2[v91];
        int v16 = a2[v91 + 40];
        id v92 = v86;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != 255) {
          goto LABEL_7;
        }
        long long v93 = *((_OWORD *)v15 + 1);
        *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v93;
        *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
        break;
      default:
        uint64_t v6 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        unint64_t v7 = (int *)sub_100008704(&qword_1000CB370);
        *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
        uint64_t v8 = v7[16];
        int64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v12 = *(void *)v10;
        uint64_t v11 = *((void *)v10 + 1);
        *(void *)int64_t v9 = v12;
        *((void *)v9 + 1) = v11;
        uint64_t v13 = v7[20];
        unint64_t v14 = &a1[v13];
        unint64_t v15 = &a2[v13];
        int v16 = a2[v13 + 40];
        swift_bridgeObjectRetain();
        if (v16 == 255)
        {
          long long v72 = *((_OWORD *)v15 + 1);
          *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
          *((_OWORD *)v14 + 1) = v72;
          *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
        }
        else
        {
LABEL_7:
          uint64_t v25 = *(void *)v15;
          uint64_t v26 = *((void *)v15 + 1);
          BOOL v27 = (void *)*((void *)v15 + 2);
          uint64_t v28 = *((void *)v15 + 3);
          uint64_t v29 = *((void *)v15 + 4);
          sub_10003E7A4(v25, v26, v27, v28, v29, v16);
          *(void *)unint64_t v14 = v25;
          *((void *)v14 + 1) = v26;
          *((void *)v14 + 2) = v27;
          *((void *)v14 + 3) = v28;
          *((void *)v14 + 4) = v29;
          v14[40] = v16;
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000448AC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v9 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      uint64_t v10 = sub_100008704(&qword_1000CB370);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = *(int *)(v10 + 80);
      goto LABEL_15;
    case 1:
      uint64_t v12 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v13 = sub_100008704(&qword_1000CB368);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = *(int *)(v13 + 112);
      goto LABEL_15;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      int v3 = *(unsigned __int8 *)(a1 + 88);
      if (v3 == 255) {
        return result;
      }
      uint64_t v4 = *(void *)(a1 + 48);
      uint64_t v5 = *(void *)(a1 + 56);
      uint64_t v6 = *(void **)(a1 + 64);
      uint64_t v7 = *(void *)(a1 + 72);
      uint64_t v8 = *(void *)(a1 + 80);
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 9:
    case 11:

      uint64_t result = swift_bridgeObjectRelease();
      int v3 = *(unsigned __int8 *)(a1 + 64);
      if (v3 == 255) {
        return result;
      }
      uint64_t v4 = *(void *)(a1 + 24);
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void **)(a1 + 40);
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      break;
    case 10:

LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      int v3 = *(unsigned __int8 *)(a1 + 72);
      if (v3 == 255) {
        return result;
      }
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v6 = *(void **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 56);
      uint64_t v8 = *(void *)(a1 + 64);
      break;
    case 12:
      uint64_t v14 = sub_1000A42E0();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
      }
      uint64_t v16 = sub_100008704(&qword_1000CB360);

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v11 = *(int *)(v16 + 128);
LABEL_15:
      uint64_t v17 = a1 + v11;
      int v3 = *(unsigned __int8 *)(v17 + 40);
      if (v3 == 255) {
        return result;
      }
      uint64_t v4 = *(void *)v17;
      uint64_t v5 = *(void *)(v17 + 8);
      uint64_t v6 = *(void **)(v17 + 16);
      uint64_t v7 = *(void *)(v17 + 24);
      uint64_t v8 = *(void *)(v17 + 32);
      break;
    default:
      return result;
  }

  return sub_10003E804(v4, v5, v6, v7, v8, v3);
}

char *sub_100044B9C(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = sub_1000A42E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
      unint64_t v35 = (int *)sub_100008704(&qword_1000CB368);
      a1[v35[12]] = a2[v35[12]];
      a1[v35[16]] = a2[v35[16]];
      *(void *)&a1[v35[20]] = *(void *)&a2[v35[20]];
      uint64_t v36 = v35[24];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      uint64_t v39 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      uint64_t v40 = v35[28];
      uint64_t v31 = &a1[v40];
      int v32 = &a2[v40];
      int v33 = a2[v40 + 40];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    case 2u:
      uint64_t v41 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v41;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v42 = *((void *)a2 + 4);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = v42;
      *((void *)a1 + 5) = *((void *)a2 + 5);
      int v43 = a2[88];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 != 255)
      {
        uint64_t v44 = *((void *)a2 + 6);
        uint64_t v45 = *((void *)a2 + 7);
        uint64_t v46 = (void *)*((void *)a2 + 8);
        uint64_t v47 = *((void *)a2 + 9);
        uint64_t v48 = *((void *)a2 + 10);
        sub_10003E7A4(v44, v45, v46, v47, v48, v43);
        *((void *)a1 + 6) = v44;
        *((void *)a1 + 7) = v45;
        *((void *)a1 + 8) = v46;
        *((void *)a1 + 9) = v47;
        *((void *)a1 + 10) = v48;
        a1[88] = v43;
        goto LABEL_25;
      }
      uint64_t v12 = a1 + 48;
      uint64_t v13 = a2 + 48;
      goto LABEL_19;
    case 3u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v49 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v49;
      uint64_t v5 = *((void *)a2 + 3);
      goto LABEL_3;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v4 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v4;
      uint64_t v5 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
LABEL_3:
      *((void *)a1 + 3) = v5;
      int v6 = a2[72];
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 9u:
    case 0xBu:
      uint64_t v14 = *(void **)a2;
      uint64_t v15 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v15;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      int v16 = a2[64];
      id v17 = v14;
      swift_bridgeObjectRetain();
      if (v16 != 255)
      {
        uint64_t v18 = *((void *)a2 + 3);
        uint64_t v19 = *((void *)a2 + 4);
        uint64_t v20 = (void *)*((void *)a2 + 5);
        uint64_t v21 = *((void *)a2 + 6);
        uint64_t v22 = *((void *)a2 + 7);
        sub_10003E7A4(v18, v19, v20, v21, v22, v16);
        *((void *)a1 + 3) = v18;
        *((void *)a1 + 4) = v19;
        *((void *)a1 + 5) = v20;
        *((void *)a1 + 6) = v21;
        *((void *)a1 + 7) = v22;
        a1[64] = v16;
        goto LABEL_25;
      }
      uint64_t v12 = a1 + 24;
      uint64_t v13 = a2 + 24;
      goto LABEL_19;
    case 0xAu:
      uint64_t v50 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      int v6 = a2[72];
      id v51 = v50;
LABEL_4:
      swift_bridgeObjectRetain();
      if (v6 == 255)
      {
        uint64_t v12 = a1 + 32;
        uint64_t v13 = a2 + 32;
LABEL_19:
        long long v55 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v55;
        *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
      }
      else
      {
        uint64_t v7 = *((void *)a2 + 4);
        uint64_t v8 = *((void *)a2 + 5);
        uint64_t v9 = (void *)*((void *)a2 + 6);
        uint64_t v10 = *((void *)a2 + 7);
        uint64_t v11 = *((void *)a2 + 8);
        sub_10003E7A4(v7, v8, v9, v10, v11, v6);
        *((void *)a1 + 4) = v7;
        *((void *)a1 + 5) = v8;
        *((void *)a1 + 6) = v9;
        *((void *)a1 + 7) = v10;
        *((void *)a1 + 8) = v11;
        a1[72] = v6;
      }
LABEL_25:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xCu:
      uint64_t v52 = sub_1000A42E0();
      uint64_t v53 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(a2, 1, v52))
      {
        uint64_t v54 = sub_100008704(&qword_1000CA3B0);
        memcpy(a1, a2, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(a1, a2, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(a1, 0, 1, v52);
      }
      uint64_t v56 = (int *)sub_100008704(&qword_1000CB360);
      uint64_t v57 = v56[12];
      uint64_t v58 = *(void **)&a2[v57];
      *(void *)&a1[v57] = v58;
      a1[v56[16]] = a2[v56[16]];
      a1[v56[20]] = a2[v56[20]];
      *(void *)&a1[v56[24]] = *(void *)&a2[v56[24]];
      uint64_t v59 = v56[28];
      uint64_t v60 = &a1[v59];
      uint64_t v61 = &a2[v59];
      uint64_t v62 = *((void *)v61 + 1);
      *(void *)uint64_t v60 = *(void *)v61;
      *((void *)v60 + 1) = v62;
      uint64_t v63 = v56[32];
      uint64_t v31 = &a1[v63];
      int v32 = &a2[v63];
      int v33 = a2[v63 + 40];
      id v64 = v58;
      swift_bridgeObjectRetain();
      goto LABEL_22;
    default:
      uint64_t v23 = sub_1000A42E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      uint64_t v24 = (int *)sub_100008704(&qword_1000CB370);
      *(void *)&a1[v24[12]] = *(void *)&a2[v24[12]];
      uint64_t v25 = v24[16];
      uint64_t v26 = &a1[v25];
      BOOL v27 = &a2[v25];
      uint64_t v29 = *(void *)v27;
      uint64_t v28 = *((void *)v27 + 1);
      *(void *)uint64_t v26 = v29;
      *((void *)v26 + 1) = v28;
      uint64_t v30 = v24[20];
      uint64_t v31 = &a1[v30];
      int v32 = &a2[v30];
      int v33 = a2[v30 + 40];
LABEL_22:
      swift_bridgeObjectRetain();
      if (v33 == 255)
      {
        long long v70 = *((_OWORD *)v32 + 1);
        *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v70;
        *(_OWORD *)(v31 + 25) = *(_OWORD *)(v32 + 25);
      }
      else
      {
        uint64_t v65 = *(void *)v32;
        uint64_t v66 = *((void *)v32 + 1);
        uint64_t v67 = (void *)*((void *)v32 + 2);
        uint64_t v68 = *((void *)v32 + 3);
        uint64_t v69 = *((void *)v32 + 4);
        sub_10003E7A4(v65, v66, v67, v68, v69, v33);
        *(void *)uint64_t v31 = v65;
        *((void *)v31 + 1) = v66;
        *((void *)v31 + 2) = v67;
        *((void *)v31 + 3) = v68;
        *((void *)v31 + 4) = v69;
        v31[40] = v33;
      }
      goto LABEL_25;
  }
}

char *sub_1000450E0(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100042908((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = (int *)sub_100008704(&qword_1000CB368);
        a1[v30[12]] = a2[v30[12]];
        a1[v30[16]] = a2[v30[16]];
        *(void *)&a1[v30[20]] = *(void *)&a2[v30[20]];
        uint64_t v31 = v30[24];
        int v32 = &a1[v31];
        int v33 = &a2[v31];
        *(void *)int v32 = *(void *)v33;
        *((void *)v32 + 1) = *((void *)v33 + 1);
        uint64_t v34 = v30[28];
        uint64_t v26 = &a1[v34];
        BOOL v27 = &a2[v34];
        int v28 = a2[v34 + 40];
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        a1[17] = a2[17];
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        int v35 = a2[88];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35 != 255)
        {
          uint64_t v36 = *((void *)a2 + 6);
          uint64_t v37 = *((void *)a2 + 7);
          uint64_t v38 = (void *)*((void *)a2 + 8);
          uint64_t v39 = *((void *)a2 + 9);
          uint64_t v40 = *((void *)a2 + 10);
          sub_10003E7A4(v36, v37, v38, v39, v40, v35);
          *((void *)a1 + 6) = v36;
          *((void *)a1 + 7) = v37;
          *((void *)a1 + 8) = v38;
          *((void *)a1 + 9) = v39;
          *((void *)a1 + 10) = v40;
          a1[88] = v35;
          goto LABEL_26;
        }
        uint64_t v10 = a1 + 48;
        uint64_t v11 = (long long *)(a2 + 48);
        goto LABEL_20;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        goto LABEL_4;
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
        *(void *)a1 = *(void *)a2;
LABEL_4:
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v4 = a2[72];
        swift_bridgeObjectRetain();
        goto LABEL_5;
      case 9u:
      case 0xBu:
        uint64_t v12 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        int v13 = a2[64];
        id v14 = v12;
        swift_bridgeObjectRetain();
        if (v13 != 255)
        {
          uint64_t v15 = *((void *)a2 + 3);
          uint64_t v16 = *((void *)a2 + 4);
          id v17 = (void *)*((void *)a2 + 5);
          uint64_t v18 = *((void *)a2 + 6);
          uint64_t v19 = *((void *)a2 + 7);
          sub_10003E7A4(v15, v16, v17, v18, v19, v13);
          *((void *)a1 + 3) = v15;
          *((void *)a1 + 4) = v16;
          *((void *)a1 + 5) = v17;
          *((void *)a1 + 6) = v18;
          *((void *)a1 + 7) = v19;
          a1[64] = v13;
          goto LABEL_26;
        }
        uint64_t v10 = a1 + 24;
        uint64_t v11 = (long long *)(a2 + 24);
        goto LABEL_20;
      case 0xAu:
        uint64_t v41 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        int v4 = a2[72];
        id v42 = v41;
LABEL_5:
        swift_bridgeObjectRetain();
        if (v4 == 255)
        {
          uint64_t v10 = a1 + 32;
          uint64_t v11 = (long long *)(a2 + 32);
LABEL_20:
          long long v46 = *v11;
          long long v47 = v11[1];
          *(_OWORD *)((char *)v10 + 25) = *(long long *)((char *)v11 + 25);
          *uint64_t v10 = v46;
          v10[1] = v47;
        }
        else
        {
          uint64_t v5 = *((void *)a2 + 4);
          uint64_t v6 = *((void *)a2 + 5);
          uint64_t v7 = (void *)*((void *)a2 + 6);
          uint64_t v8 = *((void *)a2 + 7);
          uint64_t v9 = *((void *)a2 + 8);
          sub_10003E7A4(v5, v6, v7, v8, v9, v4);
          *((void *)a1 + 4) = v5;
          *((void *)a1 + 5) = v6;
          *((void *)a1 + 6) = v7;
          *((void *)a1 + 7) = v8;
          *((void *)a1 + 8) = v9;
          a1[72] = v4;
        }
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v43 = sub_1000A42E0();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(a2, 1, v43))
        {
          uint64_t v45 = sub_100008704(&qword_1000CA3B0);
          memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 16))(a1, a2, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
        }
        uint64_t v48 = (int *)sub_100008704(&qword_1000CB360);
        uint64_t v49 = v48[12];
        uint64_t v50 = *(void **)&a2[v49];
        *(void *)&a1[v49] = v50;
        a1[v48[16]] = a2[v48[16]];
        a1[v48[20]] = a2[v48[20]];
        *(void *)&a1[v48[24]] = *(void *)&a2[v48[24]];
        uint64_t v51 = v48[28];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = *((void *)v53 + 1);
        uint64_t v54 = v48[32];
        uint64_t v26 = &a1[v54];
        BOOL v27 = &a2[v54];
        int v28 = a2[v54 + 40];
        id v55 = v50;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      default:
        uint64_t v20 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = (int *)sub_100008704(&qword_1000CB370);
        *(void *)&a1[v21[12]] = *(void *)&a2[v21[12]];
        uint64_t v22 = v21[16];
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = *((void *)v24 + 1);
        uint64_t v25 = v21[20];
        uint64_t v26 = &a1[v25];
        BOOL v27 = &a2[v25];
        int v28 = a2[v25 + 40];
LABEL_23:
        swift_bridgeObjectRetain();
        if (v28 == 255)
        {
          long long v61 = *(_OWORD *)v27;
          long long v62 = *((_OWORD *)v27 + 1);
          *(_OWORD *)(v26 + 25) = *(_OWORD *)(v27 + 25);
          *(_OWORD *)uint64_t v26 = v61;
          *((_OWORD *)v26 + 1) = v62;
        }
        else
        {
          uint64_t v56 = *(void *)v27;
          uint64_t v57 = *((void *)v27 + 1);
          uint64_t v58 = (void *)*((void *)v27 + 2);
          uint64_t v59 = *((void *)v27 + 3);
          uint64_t v60 = *((void *)v27 + 4);
          sub_10003E7A4(v56, v57, v58, v59, v60, v28);
          *(void *)uint64_t v26 = v56;
          *((void *)v26 + 1) = v57;
          *((void *)v26 + 2) = v58;
          *((void *)v26 + 3) = v59;
          *((void *)v26 + 4) = v60;
          v26[40] = v28;
        }
        goto LABEL_26;
    }
  }
  return a1;
}

char *sub_10004567C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 12:
      uint64_t v13 = sub_1000A42E0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = sub_100008704(&qword_1000CA3B0);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
      uint64_t v22 = (int *)sub_100008704(&qword_1000CB360);
      *(void *)&a1[v22[12]] = *(void *)&a2[v22[12]];
      a1[v22[16]] = a2[v22[16]];
      a1[v22[20]] = a2[v22[20]];
      *(void *)&a1[v22[24]] = *(void *)&a2[v22[24]];
      *(_OWORD *)&a1[v22[28]] = *(_OWORD *)&a2[v22[28]];
      uint64_t v23 = v22[32];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      long long v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
      *(_OWORD *)(v24 + 25) = *(_OWORD *)(v25 + 25);
      goto LABEL_11;
    case 1:
      uint64_t v16 = sub_1000A42E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      id v17 = (int *)sub_100008704(&qword_1000CB368);
      a1[v17[12]] = a2[v17[12]];
      a1[v17[16]] = a2[v17[16]];
      *(void *)&a1[v17[20]] = *(void *)&a2[v17[20]];
      *(_OWORD *)&a1[v17[24]] = *(_OWORD *)&a2[v17[24]];
      uint64_t v18 = v17[28];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(_OWORD *)(v19 + 25) = *(_OWORD *)(v20 + 25);
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      goto LABEL_11;
    case 0:
      uint64_t v7 = sub_1000A42E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)sub_100008704(&qword_1000CB370);
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      *(_OWORD *)&a1[v8[16]] = *(_OWORD *)&a2[v8[16]];
      uint64_t v9 = v8[20];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(_OWORD *)(v10 + 25) = *(_OWORD *)(v11 + 25);
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100045980(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100042908((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 12:
        uint64_t v13 = sub_1000A42E0();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
        {
          uint64_t v15 = sub_100008704(&qword_1000CA3B0);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        }
        uint64_t v22 = (int *)sub_100008704(&qword_1000CB360);
        *(void *)&a1[v22[12]] = *(void *)&a2[v22[12]];
        a1[v22[16]] = a2[v22[16]];
        a1[v22[20]] = a2[v22[20]];
        *(void *)&a1[v22[24]] = *(void *)&a2[v22[24]];
        *(_OWORD *)&a1[v22[28]] = *(_OWORD *)&a2[v22[28]];
        uint64_t v23 = v22[32];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        long long v26 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v26;
        *(_OWORD *)(v24 + 25) = *(_OWORD *)(v25 + 25);
        goto LABEL_12;
      case 1:
        uint64_t v16 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        id v17 = (int *)sub_100008704(&qword_1000CB368);
        a1[v17[12]] = a2[v17[12]];
        a1[v17[16]] = a2[v17[16]];
        *(void *)&a1[v17[20]] = *(void *)&a2[v17[20]];
        *(_OWORD *)&a1[v17[24]] = *(_OWORD *)&a2[v17[24]];
        uint64_t v18 = v17[28];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        *(_OWORD *)(v19 + 25) = *(_OWORD *)(v20 + 25);
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        goto LABEL_12;
      case 0:
        uint64_t v7 = sub_1000A42E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = (int *)sub_100008704(&qword_1000CB370);
        *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
        *(_OWORD *)&a1[v8[16]] = *(_OWORD *)&a2[v8[16]];
        uint64_t v9 = v8[20];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        *(_OWORD *)(v10 + 25) = *(_OWORD *)(v11 + 25);
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100045C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100045CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100045CE8()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_100045CF8()
{
  sub_1000A42E0();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v5 = &v4;
    swift_getTupleTypeLayout();
    uint64_t v6 = &v3;
    uint64_t v7 = &unk_1000A79C8;
    uint64_t v8 = &unk_1000A79E0;
    uint64_t v9 = &unk_1000A79E0;
    uint64_t v10 = &unk_1000A79E0;
    uint64_t v11 = &unk_1000A79E0;
    long long v12 = &unk_1000A79E0;
    uint64_t v13 = &unk_1000A79E0;
    uint64_t v14 = &unk_1000A79F8;
    uint64_t v15 = &unk_1000A79E0;
    uint64_t v16 = &unk_1000A79F8;
    sub_100045EB0();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      id v17 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_100045EB0()
{
  if (!qword_1000CB400)
  {
    sub_1000A42E0();
    unint64_t v0 = sub_1000A4BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CB400);
    }
  }
}

void *sub_100045F08(void *a1)
{
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046174(a1, a1[3]);
  uint64_t v6 = sub_100042964();
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1000A4450();
  os_log_type_t v8 = sub_1000A4A40();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v15 = v2;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v14 = v9 + 4;
    sub_1000461B8();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000A4780();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_10003CFA4(v10, v12, &v17);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Analytics payload: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

void *sub_100046174(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1000461B8()
{
  unint64_t result = qword_1000CB018;
  if (!qword_1000CB018)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1000CB018);
  }
  return result;
}

uint64_t sub_1000461FC()
{
  uint64_t result = sub_1000A4580();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100046298@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100046318()
{
  return sub_1000A4570();
}

uint64_t sub_10004638C()
{
  uint64_t v0 = sub_100008704(&qword_1000CA3B0);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - v3;
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel__rootFolderURL;
  uint64_t v25 = v0;
  unint64_t v9 = sub_10003FC64();
  unint64_t v26 = v9;
  swift_getKeyPath();
  uint64_t v23 = v0;
  unint64_t v24 = v9;
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000B988((uint64_t)v4, &qword_1000CA3B0);
    swift_retain();
    sub_100047568(0, 0);
    uint64_t v10 = swift_release();
    __chkstk_darwin(v10);
    uint64_t v11 = sub_100008704(&qword_1000CA880);
    *(&v21 - 2) = v11;
    unint64_t v12 = sub_10003FD50();
    *(&v21 - 1) = v12;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v21 - 2) = v11;
    *(&v21 - 1) = v12;
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v14 = v28;
    if (v28) {
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    BOOL v27 = v14 == 0;
    swift_retain();
    sub_1000A4570();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v15 = sub_1000A4260();
    uint64_t v17 = v16;
    swift_retain();
    sub_100047568(v15, v17);
    swift_release();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    BOOL v27 = 0;
    swift_retain();
    sub_1000A4570();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    __chkstk_darwin(result);
    *(&v21 - 2) = v0;
    *(&v21 - 1) = v9;
    uint64_t v19 = swift_getKeyPath();
    __chkstk_darwin(v19);
    *(&v21 - 2) = v0;
    *(&v21 - 1) = v9;
    swift_getKeyPath();
    swift_retain();
    uint64_t v20 = (uint64_t)v22;
    sub_1000A4560();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return sub_10000B988(v20, &qword_1000CA3B0);
  }
  return result;
}

uint64_t sub_100046868()
{
  uint64_t v0 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100008704(&qword_1000CA880);
  v13[2] = v3;
  unint64_t v4 = sub_10003FD50();
  v13[3] = v4;
  swift_getKeyPath();
  v13[0] = v3;
  v13[1] = v4;
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v15;
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5)
  {
    __chkstk_darwin(v6);
    v13[-2] = v3;
    v13[-1] = v4;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v13[-2] = v3;
    v13[-1] = v4;
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v8 = v15;
    swift_bridgeObjectRelease();
    if (v8)
    {
      BOOL v9 = 1;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      uint64_t v10 = sub_1000A42E0();
      BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v2, 1, v10) != 1;
      sub_10000B988((uint64_t)v2, &qword_1000CA3B0);
    }
  }
  else
  {
    BOOL v9 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v14 = v9;
  swift_retain();
  sub_1000A4570();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  BOOL v11 = v14;
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v14 = !v11;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_100046BC0()
{
  return swift_release();
}

uint64_t sub_100046C7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = sub_1000A42E0();
  uint64_t v41 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008704(&qword_1000CB4B0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008704(&qword_1000CA3B0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v44 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v43 = (uint64_t)&v40 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v48 = v17;
  unint64_t v20 = sub_10003FC64();
  unint64_t v49 = v20;
  swift_getKeyPath();
  uint64_t v46 = v9;
  unint64_t v47 = v20;
  swift_getKeyPath();
  id v42 = v2;
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v21 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10000B690((uint64_t)v19, (uint64_t)v8);
  sub_10000B690(v45, v21);
  uint64_t v22 = v41;
  uint64_t v23 = *(uint64_t (**)(void, void, void))(v41 + 48);
  if (v23(v8, 1, v3) == 1)
  {
    int v24 = v23(v21, 1, v3);
    if (v24 == 1) {
      uint64_t v25 = &qword_1000CA3B0;
    }
    else {
      uint64_t v25 = &qword_1000CB4B0;
    }
    if (v24 == 1) {
      char v26 = -1;
    }
    else {
      char v26 = 0;
    }
  }
  else
  {
    sub_10000B690((uint64_t)v8, (uint64_t)v16);
    if (v23(v21, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v3);
      char v26 = 0;
      uint64_t v25 = &qword_1000CB4B0;
    }
    else
    {
      uint64_t v27 = v22;
      uint64_t v28 = *(void (**)(void, void, void))(v22 + 32);
      uint64_t v29 = v40;
      v28(v40, v21, v3);
      sub_100047510();
      char v26 = sub_1000A47B0();
      uint64_t v30 = *(void (**)(void, void))(v27 + 8);
      v30(v29, v3);
      v30(v16, v3);
      uint64_t v25 = &qword_1000CA3B0;
    }
  }
  sub_10000B988((uint64_t)v8, v25);
  sub_10000B988((uint64_t)v19, &qword_1000CA3B0);
  uint64_t v31 = v45;
  uint64_t v32 = v43;
  uint64_t v33 = sub_10000B690(v45, v43);
  __chkstk_darwin(v33);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10000B690(v32, v44);
  int v35 = v42;
  swift_retain();
  sub_1000A4570();
  sub_10000B988(v32, &qword_1000CA3B0);
  uint64_t v36 = *v35;
  if ((v26 & 1) == 0)
  {
    uint64_t v37 = *(void (**)(void))((char *)v35 + *(void *)(v36 + 104));
    if (v37)
    {
      uint64_t v38 = swift_retain();
      v37(v38);
      sub_10001F44C((uint64_t)v37);
      return sub_10000B988(v31, &qword_1000CA3B0);
    }
  }
  if (*(uint64_t *)((char *)v35 + *(void *)(v36 + 104))) {
    return sub_10000B988(v31, &qword_1000CA3B0);
  }
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_1000471AC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1000A4580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10001F44C(*(void *)(v0 + *(void *)(*(void *)v0 + 104)));
  return v0;
}

uint64_t sub_100047254()
{
  sub_1000471AC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ModelPublished()
{
  return sub_1000477D0();
}

uint64_t sub_1000472C4()
{
  return swift_release();
}

uint64_t sub_100047360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v14 - v10;
  uint64_t v12 = *(void (**)(char *))(v6 + 16);
  v12((char *)v14 - v10);
  v14[2] = v4;
  v14[3] = v5;
  swift_getKeyPath();
  v14[0] = v4;
  v14[1] = v5;
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v12)(v9, v11, v4);
  swift_retain();
  sub_1000A4570();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v4);
}

uint64_t sub_1000474E0()
{
  return 16;
}

__n128 sub_1000474EC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_100047510()
{
  unint64_t result = qword_1000CAD98;
  if (!qword_1000CAD98)
  {
    sub_1000A42E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAD98);
  }
  return result;
}

uint64_t sub_100047568(uint64_t a1, uint64_t a2)
{
  sub_100008704(&qword_1000CA880);
  sub_10003FD50();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t v5 = swift_release();
  char v6 = a2 == 0;
  if (v13)
  {
    if (a2)
    {
      if (v12 == a1 && v13 == a2) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1000A4D70();
      }
    }
    else
    {
      char v6 = 0;
    }
    uint64_t v5 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v5);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1000A4570();
  uint64_t v9 = *v2;
  if ((v6 & 1) != 0 || (uint64_t v10 = *(void (**)(uint64_t))((char *)v2 + *(void *)(v9 + 104))) == 0)
  {
    if (!*(uint64_t *)((char *)v2 + *(void *)(v9 + 104)))
    {
      uint64_t result = sub_1000A4CD0();
      __break(1u);
    }
  }
  else
  {
    uint64_t v11 = swift_retain();
    v10(v11);
    return sub_10001F44C((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1000477D0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100047800@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_100047814()
{
  return sub_10003CBAC();
}

uint64_t sub_100047828()
{
  *(unsigned char *)(v0 + 16) = 2;
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_fileOrFolderURL;
  uint64_t v2 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI);
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = 0;
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPI);
  *uint64_t v4 = nullsub_1;
  v4[1] = 0;
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPISharingURL);
  *uint64_t v5 = nullsub_1;
  v5[1] = 0;
  char v6 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIFileOrSetup);
  *char v6 = nullsub_1;
  v6[1] = 0;
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIRemove);
  *uint64_t v7 = nullsub_1;
  v7[1] = 0;
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIMail);
  *uint64_t v8 = nullsub_1;
  v8[1] = 0;
  uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIMetadata);
  *uint64_t v9 = nullsub_1;
  v9[1] = 0;
  uint64_t v10 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIUserStatus);
  *uint64_t v10 = j_nullsub_1;
  v10[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appIcon) = 0;
  uint64_t v11 = (void *)(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
  void *v11 = 0;
  v11[1] = 0;
  return v0;
}

uint64_t sub_1000479C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  uint64_t v5 = sub_1000A4460();
  v4[19] = v5;
  v4[20] = *(void *)(v5 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v6 = sub_1000A4180();
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v4[25] = swift_task_alloc();
  uint64_t v7 = sub_1000A42E0();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  return _swift_task_switch(sub_100047B6C, 0, 0);
}

uint64_t sub_100047B6C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = (void *)(v0[18] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPI);
  *uint64_t v2 = v0[16];
  v2[1] = v1;
  swift_release();
  v0[29] = sub_1000A4990();
  swift_retain();
  v0[30] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_100047C2C, v4, v3);
}

uint64_t sub_100047C2C()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 248) = sub_1000A0554();
  return _swift_task_switch(sub_100047CB4, 0, 0);
}

uint64_t sub_100047CB4()
{
  *(void *)(v0 + 256) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100047D40, v2, v1);
}

uint64_t sub_100047D40()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 264) = sub_1000534FC(v1);
  return _swift_task_switch(sub_100047DD0, 0, 0);
}

uint64_t sub_100047DD0()
{
  *(void *)(v0 + 272) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100047E5C, v2, v1);
}

uint64_t sub_100047E5C()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 280) = sub_1000213F4(v1);
  return _swift_task_switch(sub_100047EEC, 0, 0);
}

uint64_t sub_100047EEC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[18];
  uint64_t v6 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v5 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[35];
  swift_release();
  uint64_t v7 = v5 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_fileOrFolderURL;
  swift_beginAccess();
  sub_10004E02C(v1, v7);
  swift_endAccess();
  sub_10000B690(v1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000E36C(v0[25]);
  }
  else
  {
    uint64_t v8 = v0[24];
    (*(void (**)(void, void, void))(v0[27] + 32))(v0[28], v0[25], v0[26]);
    sub_100008704(&qword_1000CA678);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A6A50;
    *(void *)(inited + 32) = NSURLIsPackageKey;
    *(void *)(inited + 40) = NSURLIsDirectoryKey;
    uint64_t v10 = NSURLIsPackageKey;
    uint64_t v11 = NSURLIsDirectoryKey;
    uint64_t v12 = sub_10003DA44(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    URL.evictionSafeResourceValues(forKeys:)((uint64_t)v12, v8);
    uint64_t v13 = v0[27];
    os_log_t log = (os_log_t)v0[26];
    uint64_t v25 = v0[28];
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v16 = v0[22];
    swift_bridgeObjectRelease();
    char v17 = sub_1000A4170();
    char v18 = sub_1000A4110();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, os_log_t))(v13 + 8))(v25, log);
    if (v18 == 2 || (v17 & 1) != 0) {
      char v19 = 0;
    }
    else {
      char v19 = v18 & 1;
    }
    *(unsigned char *)(v0[18] + 16) = v19;
  }
  uint64_t v20 = *(void *)(v5 + v6);
  v0[36] = v20;
  if (!v20) {
    return sub_1000A4CD0();
  }
  swift_retain();
  v0[37] = sub_1000A4980();
  uint64_t v22 = sub_1000A4950();
  return _swift_task_switch(sub_1000485EC, v22, v21);
}

uint64_t sub_1000485EC()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  swift_release();
  sub_10004C5DC(v2, 0, v3, 0, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1000486A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_100008704(&qword_1000CA3B0);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  uint64_t v7 = sub_1000A42E0();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_1000487B0, 0, 0);
}

uint64_t sub_1000487B0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  sub_10000B690(*(void *)(v0 + 16), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 24);
    sub_10000E36C(*(void *)(v0 + 72));
    if (v4)
    {
      id v5 = *(id *)(v0 + 24);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_100048BE0;
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v8 = *(void *)(v0 + 32);
      uint64_t v9 = *(void *)(v0 + 40);
      return sub_100048D58((uint64_t)v5, v8, v9, v7, 0);
    }
    else
    {
      sub_10004E1A4(0xD00000000000001ELL, 0x80000001000AC780, *(void (**)(void, void, void))(v0 + 40), *(void *)(v0 + 48));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v16 = *(void **)(v0 + 24);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 32))(v11, *(void *)(v0 + 72), v13);
    char v17 = *(void **)(v15 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share);
    *(void *)(v15 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share) = v16;
    id v18 = v16;

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v11, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    char v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v19;
    *char v19 = v0;
    v19[1] = sub_100048A34;
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 48);
    return sub_1000479C0(v20, v21, v22);
  }
}

uint64_t sub_100048A34(void *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_task_dealloc();

  sub_10000E36C(v3);
  return _swift_task_switch(sub_100048B54, 0, 0);
}

uint64_t sub_100048B54()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100048BE0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100048CDC, 0, 0);
}

uint64_t sub_100048CDC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100048D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v6 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_100048DF8, 0, 0);
}

uint64_t sub_100048DF8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPI);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[8] = sub_1000A4990();
  swift_retain();
  v0[9] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_100048EB8, v4, v3);
}

uint64_t sub_100048EB8()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 80) = sub_1000A0554();
  return _swift_task_switch(sub_100048F40, 0, 0);
}

uint64_t sub_100048F40()
{
  *(void *)(v0 + 88) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100048FCC, v2, v1);
}

uint64_t sub_100048FCC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 96) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004905C, 0, 0);
}

uint64_t sub_10004905C()
{
  *(void *)(v0 + 104) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_1000490E8, v2, v1);
}

uint64_t sub_1000490E8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 112) = sub_1000213F4(v1);
  return _swift_task_switch(sub_100049178, 0, 0);
}

uint64_t sub_100049178()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  uint64_t v3 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[14];
  swift_release();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share);
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share) = v2;

  uint64_t v5 = *(void *)(v1 + v3);
  v0[15] = v5;
  if (!v5) {
    return sub_1000A4CD0();
  }
  uint64_t v6 = v0[7];
  uint64_t v7 = (void *)v0[2];
  uint64_t v8 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  id v9 = v7;
  swift_retain();
  v0[16] = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  return _swift_task_switch(sub_100049308, v11, v10);
}

uint64_t sub_100049308()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  char v4 = *(unsigned char *)(v0 + 136);
  uint64_t v5 = *(void **)(v0 + 24);
  swift_release();
  sub_10004C5DC(v3, v5, v2, v4, v1);
  swift_release();
  sub_10000E36C(v2);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000493B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100008704(&qword_1000CA3B0);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_100049450, 0, 0);
}

uint64_t sub_100049450()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPISharingURL);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[8] = sub_1000A4990();
  swift_retain();
  v0[9] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_100049510, v4, v3);
}

uint64_t sub_100049510()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 80) = sub_1000A0554();
  return _swift_task_switch(sub_100049598, 0, 0);
}

uint64_t sub_100049598()
{
  *(void *)(v0 + 88) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100049624, v2, v1);
}

uint64_t sub_100049624()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 96) = sub_1000534FC(v1);
  return _swift_task_switch(sub_1000496B4, 0, 0);
}

uint64_t sub_1000496B4()
{
  *(void *)(v0 + 104) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100049740, v2, v1);
}

uint64_t sub_100049740()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 112) = sub_1000213F4(v1);
  return _swift_task_switch(sub_1000497D0, 0, 0);
}

uint64_t sub_1000497D0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[14];
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  v0[15] = v3;
  if (!v3) {
    return sub_1000A4CD0();
  }
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_retain();
  v0[16] = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  return _swift_task_switch(sub_100049934, v7, v6);
}

uint64_t sub_100049934()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v5 = v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_release();
  sub_10004D28C(v3, v4, v5, 0, v2, v1);
  swift_release();
  sub_10000E36C(v2);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000499E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_100049A08, 0, 0);
}

uint64_t sub_100049A08()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIFileOrSetup);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[7] = sub_1000A4990();
  swift_retain();
  v0[8] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_100049AC8, v4, v3);
}

uint64_t sub_100049AC8()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 72) = sub_1000A0554();
  return _swift_task_switch(sub_100049B50, 0, 0);
}

uint64_t sub_100049B50()
{
  *(void *)(v0 + 80) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100049BDC, v2, v1);
}

uint64_t sub_100049BDC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 88) = sub_1000534FC(v1);
  return _swift_task_switch(sub_100049C6C, 0, 0);
}

uint64_t sub_100049C6C()
{
  *(void *)(v0 + 96) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_100049CF8, v2, v1);
}

uint64_t sub_100049CF8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 104) = sub_1000213F4(v1);
  return _swift_task_switch(sub_100049D88, 0, 0);
}

uint64_t sub_100049D88()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[13];
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  v0[14] = v3;
  if (!v3) {
    return sub_1000A4CD0();
  }
  swift_retain();
  v0[15] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  return _swift_task_switch(sub_100049EA8, v5, v4);
}

uint64_t sub_100049EA8()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[2];
  uint64_t v3 = (void *)v0[3];
  swift_release();
  sub_10004C5DC(v2, v3, v4, 0, v1);
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100049F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100008704(&qword_1000CA3B0);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_100049FD4, 0, 0);
}

uint64_t sub_100049FD4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIRemove);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[8] = sub_1000A4990();
  swift_retain();
  v0[9] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004A094, v4, v3);
}

uint64_t sub_10004A094()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 80) = sub_1000A0554();
  return _swift_task_switch(sub_10004A11C, 0, 0);
}

uint64_t sub_10004A11C()
{
  *(void *)(v0 + 88) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004A1A8, v2, v1);
}

uint64_t sub_10004A1A8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 96) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004A238, 0, 0);
}

uint64_t sub_10004A238()
{
  *(void *)(v0 + 104) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004A2C4, v2, v1);
}

uint64_t sub_10004A2C4()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 112) = sub_1000213F4(v1);
  return _swift_task_switch(sub_10004A354, 0, 0);
}

uint64_t sub_10004A354()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[14];
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  v0[15] = v3;
  if (!v3) {
    return sub_1000A4CD0();
  }
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_retain();
  v0[16] = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  return _swift_task_switch(sub_10004EB1C, v7, v6);
}

uint64_t sub_10004A4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_100008704(&qword_1000CA3B0);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10004A550, 0, 0);
}

uint64_t sub_10004A550()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[5] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIRemove);
  *uint64_t v2 = v0[3];
  v2[1] = v1;
  swift_release();
  v0[7] = sub_1000A4990();
  swift_retain();
  v0[8] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004A610, v4, v3);
}

uint64_t sub_10004A610()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 72) = sub_1000A0554();
  return _swift_task_switch(sub_10004A698, 0, 0);
}

uint64_t sub_10004A698()
{
  *(void *)(v0 + 80) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004A724, v2, v1);
}

uint64_t sub_10004A724()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 88) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004A7B4, 0, 0);
}

uint64_t sub_10004A7B4()
{
  *(void *)(v0 + 96) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004A840, v2, v1);
}

uint64_t sub_10004A840()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 104) = sub_1000213F4(v1);
  return _swift_task_switch(sub_10004A8D0, 0, 0);
}

uint64_t sub_10004A8D0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[13];
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  v0[14] = v3;
  if (!v3) {
    return sub_1000A4CD0();
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[2];
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  swift_retain();
  v0[15] = sub_1000A4980();
  uint64_t v9 = sub_1000A4950();
  return _swift_task_switch(sub_10004AA88, v9, v8);
}

uint64_t sub_10004AA88()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  swift_release();
  sub_10004C5DC(v3, 0, v2, 0, v1);
  swift_release();
  sub_10000E36C(v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10004AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100008704(&qword_1000CA3B0);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_10004ABC0, 0, 0);
}

uint64_t sub_10004ABC0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIRemove);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[8] = sub_1000A4990();
  swift_retain();
  v0[9] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004AC80, v4, v3);
}

uint64_t sub_10004AC80()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 80) = sub_1000A0554();
  return _swift_task_switch(sub_10004AD08, 0, 0);
}

uint64_t sub_10004AD08()
{
  *(void *)(v0 + 88) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004AD94, v2, v1);
}

uint64_t sub_10004AD94()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 96) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004AE24, 0, 0);
}

uint64_t sub_10004AE24()
{
  *(void *)(v0 + 104) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004AEB0, v2, v1);
}

uint64_t sub_10004AEB0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 112) = sub_1000213F4(v1);
  return _swift_task_switch(sub_10004AF40, 0, 0);
}

uint64_t sub_10004AF40()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  uint64_t v3 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[14];
  swift_release();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share);
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share) = v2;

  uint64_t v5 = *(void *)(v1 + v3);
  v0[15] = v5;
  if (!v5) {
    return sub_1000A4CD0();
  }
  uint64_t v6 = v0[7];
  uint64_t v7 = (void *)v0[2];
  uint64_t v8 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  id v9 = v7;
  swift_retain();
  v0[16] = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  return _swift_task_switch(sub_10004B0D0, v11, v10);
}

uint64_t sub_10004B0D0()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = (void *)v0[3];
  swift_release();
  sub_10004C5DC(v3, v4, v2, 0, v1);
  swift_release();
  sub_10000E36C(v2);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10004B170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  uint64_t v7 = sub_1000A4180();
  v6[18] = v7;
  v6[19] = *(void *)(v7 - 8);
  v6[20] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v6[21] = swift_task_alloc();
  uint64_t v8 = sub_1000A42E0();
  v6[22] = v8;
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  return _swift_task_switch(sub_10004B2C4, 0, 0);
}

uint64_t sub_10004B2C4()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = (void *)(v0[17] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIMail);
  *uint64_t v2 = v0[15];
  v2[1] = v1;
  swift_release();
  v0[25] = sub_1000A4990();
  swift_retain();
  v0[26] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004B384, v4, v3);
}

uint64_t sub_10004B384()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 216) = sub_1000A0554();
  return _swift_task_switch(sub_10004B40C, 0, 0);
}

uint64_t sub_10004B40C()
{
  *(void *)(v0 + 224) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004B498, v2, v1);
}

uint64_t sub_10004B498()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 232) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004B528, 0, 0);
}

uint64_t sub_10004B528()
{
  *(void *)(v0 + 240) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004B5B4, v2, v1);
}

uint64_t sub_10004B5B4()
{
  uint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 248) = sub_1000213F4(v1);
  return _swift_task_switch(sub_10004B644, 0, 0);
}

uint64_t sub_10004B644()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v6 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v4 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[31];
  swift_release();
  uint64_t v7 = v4 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_fileOrFolderURL;
  swift_beginAccess();
  sub_10004E02C(v5, v7);
  swift_endAccess();
  sub_10000B690(v5, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[13];
    sub_10000E36C(v0[21]);
    uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
    uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName + 8);
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_10004E490(v9, v10, v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = (unint64_t *)(v8 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI);
  }
  else
  {
    uint64_t v16 = v0[20];
    (*(void (**)(void, void, void))(v0[23] + 32))(v0[24], v0[21], v0[22]);
    sub_100008704(&qword_1000CA678);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A6410;
    *(void *)(inited + 32) = NSURLTypeIdentifierKey;
    id v18 = NSURLTypeIdentifierKey;
    char v19 = sub_10003DA44(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    URL.evictionSafeResourceValues(forKeys:)((uint64_t)v19, v16);
    uint64_t v21 = v0[19];
    uint64_t v20 = v0[20];
    uint64_t v22 = v0[18];
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_1000A4130();
    unint64_t v14 = v23;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    if (!v14)
    {
      uint64_t v24 = v0[13];
      uint64_t v25 = (uint64_t *)(v0[17] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_10004E490(v24, v26, v27);
      unint64_t v14 = v28;
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = v0[17];
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    uint64_t v15 = (unint64_t *)(v29 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI);
  }
  *uint64_t v15 = v12;
  v15[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v4 + v6);
  v0[32] = v30;
  if (!v30) {
    return sub_1000A4CD0();
  }
  swift_retain();
  v0[33] = sub_1000A4980();
  uint64_t v32 = sub_1000A4950();
  return _swift_task_switch(sub_10004BB08, v32, v31);
}

uint64_t sub_10004BB08()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[17];
  uint64_t v4 = (void *)v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[12];
  swift_release();
  sub_10004D28C(v2, 0, v5, v4, v3, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10004BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  sub_100008704(&qword_1000CA3B0);
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_10004BC6C, 0, 0);
}

uint64_t sub_10004BC6C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)(v0[6] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIMetadata);
  *uint64_t v2 = v0[4];
  v2[1] = v1;
  swift_release();
  v0[8] = sub_1000A4990();
  swift_retain();
  v0[9] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004A094, v4, v3);
}

uint64_t sub_10004BD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_100008704(&qword_1000CA3B0);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_10004BDC4, 0, 0);
}

uint64_t sub_10004BDC4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[5] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPIUserStatus);
  *uint64_t v2 = v0[3];
  v2[1] = v1;
  swift_retain();
  swift_release();
  v0[7] = sub_1000A4990();
  v0[8] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  return _swift_task_switch(sub_10004BE84, v4, v3);
}

uint64_t sub_10004BE84()
{
  swift_release();
  type metadata accessor for CKShareModel();
  swift_allocObject();
  *(void *)(v0 + 72) = sub_1000A0554();
  return _swift_task_switch(sub_10004BF0C, 0, 0);
}

uint64_t sub_10004BF0C()
{
  *(void *)(v0 + 80) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004BF98, v2, v1);
}

uint64_t sub_10004BF98()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  type metadata accessor for OptionsModel();
  swift_allocObject();
  *(void *)(v0 + 88) = sub_1000534FC(v1);
  return _swift_task_switch(sub_10004C028, 0, 0);
}

uint64_t sub_10004C028()
{
  *(void *)(v0 + 96) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10004C0B4, v2, v1);
}

uint64_t sub_10004C0B4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  type metadata accessor for SharingModel();
  swift_allocObject();
  *(void *)(v0 + 104) = sub_1000213F4(v1);
  return _swift_task_switch(sub_10004C144, 0, 0);
}

uint64_t sub_10004C144()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  uint64_t v3 = OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel;
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel) = v0[13];
  swift_release();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share);
  *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share) = v2;

  uint64_t v5 = *(void *)(v1 + v3);
  v0[14] = v5;
  if (!v5) {
    return sub_1000A4CD0();
  }
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)v0[2];
  uint64_t v8 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  id v9 = v7;
  swift_retain();
  v0[15] = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  return _swift_task_switch(sub_10004AA88, v11, v10);
}

uint64_t sub_10004C2D4()
{
  sub_10000E36C(v0 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_fileOrFolderURL);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10004C3E0()
{
  sub_10004C2D4();

  return swift_deallocClassInstance();
}

uint64_t sub_10004C438()
{
  return type metadata accessor for ModelDelegateSPI();
}

uint64_t type metadata accessor for ModelDelegateSPI()
{
  uint64_t result = qword_1000CB4E0;
  if (!qword_1000CB4E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004C48C()
{
  sub_100045EB0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10004C55C(uint64_t a1)
{
  uint64_t result = sub_10004EAD4(&qword_1000CB5D0, (void (*)(uint64_t))type metadata accessor for ModelDelegateSPI);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10004C5B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10004C5C8()
{
  return sub_10003CBAC();
}

uint64_t sub_10004C5DC(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v75 = a3;
  long long v70 = a2;
  uint64_t v7 = sub_100008704(&qword_1000CA3B0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v71 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v72 = (char *)&v69 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v69 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = sub_1000A42E0();
  uint64_t v76 = *(void *)(v17 - 8);
  uint64_t v77 = v17;
  __chkstk_darwin(v17);
  long long v73 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000A4460();
  uint64_t v78 = *(void *)(v19 - 8);
  uint64_t v79 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  long long v74 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v69 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v69 - v25;
  uint64_t v27 = sub_10004EAD4(&qword_1000CB5E8, (void (*)(uint64_t))type metadata accessor for ModelDelegateSPI);
  sub_100039880();
  *(void *)(a5 + 48) = v27;
  swift_unknownObjectWeakAssign();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    sub_1000A4440();
    uint64_t v29 = sub_1000A4450();
    os_log_type_t v30 = sub_1000A4A40();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "ext computed property--extensionController is nil--will assert", v31, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v79);
  }
  uint64_t v69 = v24;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v33 = *(void **)(result + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_share);
  id v34 = v33;
  swift_unknownObjectRelease();
  if (v33)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long v81 = v33;
    swift_retain();
    sub_1000A4570();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  int v35 = (void *)v81;
  if ((void)v81)
  {
    swift_retain();
    id v36 = [v35 containerID];
    sub_10009F0B0(v36, 0);
    swift_release();

    sub_10002EDB8(0, a4 & 1);
  }
  else
  {
    swift_retain();
    sub_100051820(2u);
    swift_release();
    swift_retain();
    sub_100051B64(1u);
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = (void *)v81;
  if ((void)v81)
  {
    id v38 = [(id)v81 containerIdentifier];
    uint64_t v39 = sub_1000A4800();
    uint64_t v41 = v40;

    sub_1000A4800();
    uint64_t v42 = sub_1000A4820();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    if (v39 == v42 && v41 == v44)
    {
      swift_bridgeObjectRelease_n();
LABEL_16:
      swift_getKeyPath();
      swift_getKeyPath();
      long long v81 = xmmword_1000A7BE0;
      swift_retain();
      sub_1000A4570();

      goto LABEL_19;
    }
    char v45 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_16;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v81 = 0xD000000000000013;
  *((void *)&v81 + 1) = 0x80000001000AC760;
  swift_retain();
  sub_1000A4570();
LABEL_19:
  sub_10000B690(v75, (uint64_t)v16);
  uint64_t v47 = v76;
  uint64_t v46 = v77;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v16, 1, v77) != 1)
  {
    uint64_t v52 = v73;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v73, v16, v46);
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v14, v52, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v46);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v53 = (uint64_t)v72;
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10000B690((uint64_t)v14, v71);
    swift_retain();
    sub_1000A4570();
    sub_10002E8B8(v53);
    sub_10000E36C((uint64_t)v14);
    sub_10000E36C(v53);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v81) = 9;
    swift_retain();
    sub_1000A4570();
    uint64_t v54 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v54)
    {
      id v55 = v69;
      sub_1000A4440();
      uint64_t v56 = sub_1000A4450();
      os_log_type_t v57 = sub_1000A4A40();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "ext computed property--extensionController is nil--will assert", v58, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v78 + 8))(v55, v79);
    }
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v59 = *(unsigned char *)(result + 16);
      swift_unknownObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v81) = v59 & 1;
      swift_retain();
      sub_1000A4570();
      swift_getKeyPath();
      swift_getKeyPath();
      long long v81 = xmmword_1000A7BE0;
      swift_retain();
      sub_1000A4570();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000A4560();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v60 = v81;

      unint64_t v49 = v74;
      if (!v60)
      {
        sub_1000A4800();
        sub_1000A4820();
        swift_retain();
        swift_bridgeObjectRelease();
        id v61 = objc_allocWithZone((Class)CKContainerID);
        NSString v62 = sub_1000A47C0();
        swift_bridgeObjectRelease();
        id v63 = [v61 initWithContainerIdentifier:v62 environment:1];

        sub_10009F0B0(v63, 0);
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v77);
      goto LABEL_30;
    }
LABEL_35:
    __break(1u);
    return result;
  }
  sub_10000E36C((uint64_t)v16);
  char v48 = sub_100027748();
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v81) = v48;
  swift_retain();
  sub_1000A4570();
  unint64_t v49 = v74;
  uint64_t v50 = v70;
  if (v70)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long v81 = v50;
    id v51 = v50;
    swift_retain();
    sub_1000A4570();
  }
LABEL_30:
  sub_1000A4440();
  swift_retain_n();
  id v64 = sub_1000A4450();
  os_log_type_t v65 = sub_1000A4A40();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    *(_DWORD *)uint64_t v66 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    sub_100008704(&qword_1000CA880);
    uint64_t v67 = sub_1000A4810();
    *(void *)&long long v81 = sub_10003CFA4(v67, v68, &v80);
    sub_1000A4BC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "setUpForExplicitSPI final sourceAppBundleID: %s.", v66, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v79);
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v81) = 1;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_10004D28C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a3;
  uint64_t v56 = a2;
  uint64_t v9 = sub_1000A4460();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin(v9);
  char v59 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008704(&qword_1000CA3B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v51 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v57 = (uint64_t)&v49 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v49 - v19;
  uint64_t v21 = sub_1000A42E0();
  uint64_t v58 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v52 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a6 + 48) = sub_10004EAD4(&qword_1000CB5E8, (void (*)(uint64_t))type metadata accessor for ModelDelegateSPI);
  swift_unknownObjectWeakAssign();
  sub_100039880();
  swift_retain();
  sub_100051820(2u);
  swift_release();
  swift_retain();
  sub_100051B64(1u);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v61 = 0xD000000000000013;
  *((void *)&v61 + 1) = 0x80000001000AC760;
  swift_retain();
  sub_1000A4570();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (v61 != 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v61) = 2;
    swift_retain();
    sub_1000A4570();
  }
  if (a4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long v61 = a4;
    id v23 = a4;
    swift_retain();
    sub_1000A4570();
    swift_retain();
    id v24 = [v23 containerID];
    sub_10009F0B0(v24, 0);
    swift_release();

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v25 = (void *)v61;
    if (!(void)v61)
    {

      goto LABEL_12;
    }
    id v49 = v23;
    uint64_t v50 = a5;
    id v26 = [(id)v61 containerIdentifier];
    uint64_t v27 = sub_1000A4800();
    uint64_t v29 = v28;

    sub_1000A4800();
    uint64_t v30 = sub_1000A4820();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    if (v27 == v30 && v29 == v32)
    {
      swift_bridgeObjectRelease_n();
      a5 = v50;
    }
    else
    {
      char v33 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a5 = v50;
      if ((v33 & 1) == 0)
      {
LABEL_11:

        goto LABEL_12;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    long long v61 = xmmword_1000A7BE0;
    swift_retain();
    sub_1000A4570();
    goto LABEL_11;
  }
LABEL_12:
  sub_10000B690(a5, (uint64_t)v20);
  uint64_t v34 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v20, 1, v21) == 1)
  {
    sub_10000E36C((uint64_t)v20);
  }
  else
  {
    int v35 = v52;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v52, v20, v21);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v18, v35, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v18, 0, 1, v21);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v36 = v57;
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10000B690((uint64_t)v18, v51);
    swift_retain();
    sub_1000A4570();
    sub_10002E8B8(v36);
    sub_10000E36C((uint64_t)v18);
    sub_10000E36C(v36);
    swift_getKeyPath();
    swift_getKeyPath();
    long long v61 = xmmword_1000A7BE0;
    swift_retain();
    sub_1000A4570();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v21);
  }
  uint64_t v37 = v53;
  char v38 = sub_100027748();
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v61) = v38;
  swift_retain();
  sub_1000A4570();
  uint64_t v39 = v56;
  if (v56)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&long long v61 = v39;
    id v40 = v39;
    uint64_t v34 = v58;
    swift_retain();
    sub_1000A4570();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v18, v37, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v18, 0, 1, v21);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000B690((uint64_t)v18, v57);
  swift_retain_n();
  sub_1000A4570();
  sub_10000E36C((uint64_t)v18);
  swift_release();
  sub_1000A4440();
  swift_retain_n();
  uint64_t v41 = sub_1000A4450();
  os_log_type_t v42 = sub_1000A4A40();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = v54;
    uint64_t v60 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    sub_100008704(&qword_1000CA880);
    uint64_t v46 = sub_1000A4810();
    *(void *)&long long v61 = sub_10003CFA4(v46, v47, &v60);
    sub_1000A4BC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "setUpForExplicitSharingURLSPI final sourceAppBundleID: %s.", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v59, v55);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v55);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v61) = 1;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_10004DCF8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A4460();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4440();
  id v11 = a1;
  uint64_t v12 = sub_1000A4450();
  os_log_type_t v13 = sub_1000A4A20();
  if (os_log_type_enabled(v12, v13))
  {
    char v33 = v6;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = v8;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v28 = v15 + 4;
    id v16 = v11;
    uint64_t v32 = v2;
    id v17 = v16;
    id v18 = [v16 description];
    uint64_t v19 = sub_1000A4800();
    uint64_t v29 = v7;
    id v20 = v11;
    uint64_t v21 = v19;
    unint64_t v23 = v22;

    uint64_t v6 = v33;
    uint64_t v24 = v21;
    id v11 = v20;
    uint64_t v34 = sub_10003CFA4(v24, v23, &v35);
    sub_1000A4BC0();

    uint64_t v2 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "cancelAppExtension error: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v25 = *(void (**)(char *, void, id))(v2 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_concludeSPI);
  uint64_t v26 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
  swift_retain();
  v25(v6, 0, v11);
  swift_release();
  return sub_10000E36C((uint64_t)v6);
}

uint64_t sub_10004E02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_10004E094()
{
  unint64_t result = qword_1000CB5E0;
  if (!qword_1000CB5E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CB5E0);
  }
  return result;
}

uint64_t sub_10004E0F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10004E11C()
{
  return sub_10003CBAC();
}

uint64_t sub_10004E154@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10004E17C()
{
  return sub_10003CBAC();
}

uint64_t sub_10004E1A4(uint64_t a1, unint64_t a2, void (*a3)(void, void, void), uint64_t a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1000A4450();
  os_log_type_t v16 = sub_1000A4A20();
  if (os_log_type_enabled(v15, v16))
  {
    v23[1] = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v24 = a3;
    id v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v27 = v19;
    v23[0] = v11;
    *(_DWORD *)id v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10003CFA4(v25, a2, &v27);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "createAndInitModel error: %s", v18, 0xCu);
    swift_arrayDestroy();
    a1 = v25;
    swift_slowDealloc();
    a3 = v24;
    swift_slowDealloc();

    (*(void (**)(char *, void))(v12 + 8))(v14, v23[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v20 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
  id v21 = sub_100096858(a1, a2);
  a3(v10, 0, v21);

  return sub_10000E36C((uint64_t)v10);
}

unint64_t sub_10004E490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1000A4420();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A4460();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  sub_1000A4B50();
  uint64_t v12 = sub_1000A4B60();
  swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_6:
    if (a3)
    {
      uint64_t v22 = sub_1000A4820();
      if (v23)
      {
        if (v22 == 0x7365746F6ELL && v23 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          unint64_t v25 = 0xD000000000000014;
          uint64_t v26 = "com.apple.notes.note";
LABEL_36:
          unint64_t v47 = v25;
          unint64_t v48 = (unint64_t)(v26 - 32) | 0x8000000000000000;
          goto LABEL_39;
        }
        char v24 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_14;
        }
      }
      uint64_t v27 = sub_1000A4820();
      if (v28)
      {
        if (v27 == 0x7265646E696D6572 && v28 == 0xE900000000000073)
        {
          swift_bridgeObjectRelease();
LABEL_20:
          unint64_t v25 = 0xD000000000000018;
          uint64_t v26 = "com.apple.reminders.list";
          goto LABEL_36;
        }
        char v29 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_20;
        }
      }
      uint64_t v30 = sub_1000A4820();
      if (v31)
      {
        if (v30 == 0x697261666173 && v31 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_26:
          unint64_t v25 = 0xD000000000000019;
          uint64_t v26 = "com.apple.safari.tabgroup";
          goto LABEL_36;
        }
        char v32 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_26;
        }
      }
      uint64_t v33 = sub_1000A4820();
      if (v34)
      {
        if (v33 == 0x6C656D726163 && v34 == 0xE600000000000000) {
          goto LABEL_34;
        }
        char v35 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v35)
        {
LABEL_35:
          unint64_t v25 = 0xD000000000000018;
          uint64_t v26 = "com.apple.freeform.board";
          goto LABEL_36;
        }
      }
      uint64_t v36 = sub_1000A4820();
      if (v37)
      {
        if (v36 == 0x6D726F6665657266 && v37 == 0xE800000000000000)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        char v38 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_35;
        }
      }
    }
    sub_1000A43F0();
    uint64_t v39 = sub_1000A4350();
    unint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v47 = v39;
    unint64_t v48 = v41;
    goto LABEL_39;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  uint64_t v13 = sub_1000A4800();
  unint64_t v15 = v14;
  swift_unknownObjectRelease();
  unint64_t v16 = sub_10009B4F4(v13, v15);
  unint64_t v18 = v17;
  unint64_t v47 = v16;
  unint64_t v48 = v17;
  swift_bridgeObjectRetain();
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000A4450();
  os_log_type_t v20 = sub_1000A4A40();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v46[0] = v44;
    *(_DWORD *)uint64_t v21 = 136315394;
    unint64_t v43 = v16;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_10003CFA4(v13, v15, v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_10003CFA4(v43, v18, v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "utiFromCKShare raw ckShareType: %s, utiOfItemFromCKShare: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_39:
  swift_beginAccess();
  return v47;
}

uint64_t sub_10004EAD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10004EB24(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A4320();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    unint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10004EC28(uint64_t a1)
{
  uint64_t v2 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004ECBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004ED70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004EE54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10004EEE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004EFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004EFB4);
}

uint64_t sub_10004EFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4320();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10004F078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004F08C);
}

uint64_t sub_10004F08C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A4320();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AlertViewModel(uint64_t a1)
{
  return sub_100050108(a1, qword_1000CB698);
}

uint64_t sub_10004F16C()
{
  uint64_t result = sub_1000A4320();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10004F21C()
{
  unint64_t result = qword_1000CB6D8;
  if (!qword_1000CB6D8)
  {
    sub_1000A4320();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB6D8);
  }
  return result;
}

uint64_t sub_10004F278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000A4320();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void *sub_10004F2E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000A4320();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8);
    uint64_t v12 = *(void *)((char *)a2 + v8 + 8);
    char v13 = *((unsigned char *)a2 + v8 + 16);
    sub_10004F4F8(v11, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
    *((void *)v9 + 3) = *((void *)v10 + 3);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1000A4680();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_100008704(&qword_1000CAB00);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (void *)((char *)a1 + v22);
    char v24 = (void *)((char *)a2 + v22);
    if (*v24)
    {
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
  }
  return a1;
}

uint64_t sub_10004F4F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10004F508(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_10004F644(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1000A4680();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  if (*(void *)(a1 + a2[7]))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_10004F644(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10004F654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  char v12 = *(unsigned char *)(a2 + v7 + 16);
  sub_10004F4F8(v10, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000A4680();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_100008704(&qword_1000CAB00);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (*v22)
  {
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  return a1;
}

uint64_t sub_10004F81C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  char v12 = *(unsigned char *)(a2 + v7 + 16);
  sub_10004F4F8(v10, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  char v15 = *(unsigned char *)(v8 + 16);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  sub_10004F644(v13, v14, v15);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_1000A4680();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v8) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v8)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    uint64_t v23 = sub_100008704(&qword_1000CAB00);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v24 = a3[7];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v28 = *v26;
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = v26[1];
      *uint64_t v25 = v28;
      v25[1] = v30;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    return a1;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v29 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10004FA84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  char v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = sub_1000A4680();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100008704(&qword_1000CAB00);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  if (*v19)
  {
    uint64_t v21 = v19[1];
    *uint64_t v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  return a1;
}

uint64_t sub_10004FC14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000A4320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  LOBYTE(v7) = *(unsigned char *)(a2 + v7 + 16);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  char v12 = *(unsigned char *)(v8 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = v7;
  sub_10004F644(v10, v11, v12);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_1000A4680();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_100008704(&qword_1000CAB00);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22);
  uint64_t v26 = *v24;
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = v24[1];
      *uint64_t v23 = v26;
      v23[1] = v28;
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v27 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v27;
  swift_release();
  return a1;
}

uint64_t sub_10004FE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004FE6C);
}

uint64_t sub_10004FE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4320();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100008704(&qword_1000CAB00);
    char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10004FFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004FFB4);
}

uint64_t sub_10004FFB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000A4320();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100008704(&qword_1000CAB00);
    char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for AlertViewModelButton(uint64_t a1)
{
  return sub_100050108(a1, (uint64_t *)&unk_1000CB738);
}

uint64_t sub_100050108(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100050140()
{
  sub_1000A4320();
  if (v0 <= 0x3F)
  {
    sub_100050218();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100050218()
{
  if (!qword_1000CB748)
  {
    sub_1000A4680();
    unint64_t v0 = sub_1000A4BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CB748);
    }
  }
}

uint64_t sub_100050270()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000502E4(int a1)
{
  uint64_t v2 = v1;
  int v17 = a1;
  uint64_t v3 = sub_100008704(&qword_1000CAF98);
  uint64_t v15 = *(void *)(v3 - 8);
  uint64_t v16 = v3;
  __chkstk_darwin(v3);
  uint64_t v14 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000A4A70();
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000A4A50();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1000A4720();
  __chkstk_darwin(v9 - 8);
  sub_1000A4630();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1000A4620();
  sub_100050F84();
  sub_1000A4710();
  int v19 = _swiftEmptyArrayStorage;
  sub_10005115C(&qword_1000CB850, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100008704(&qword_1000CB858);
  sub_1000511A4(&qword_1000CB860, &qword_1000CB858);
  sub_1000A4C20();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v1 + 24) = sub_1000A4AA0();
  uint64_t v10 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS14NetworkMonitor__status;
  char v18 = 0;
  uint64_t v11 = v14;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v10, v11, v16);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_100051004((uint64_t)sub_100050FFC);
  sub_1000A4600();
  swift_release();
  swift_release_n();
  if (v17) {
    sub_1000A4610();
  }
  return v2;
}

uint64_t sub_100050698(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000A4700();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000A4720();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A4670();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100050F84();
    uint64_t v21 = sub_1000A4A80();
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v22 = v4;
    uint64_t v14 = v2;
    uint64_t v15 = (v13 + 24) & ~v13;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
    aBlock[4] = sub_1000510E0;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100050C2C;
    aBlock[3] = &unk_1000C2DE8;
    int v17 = _Block_copy(aBlock);
    swift_release();
    sub_1000A4710();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10005115C(&qword_1000CB868, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100008704(&qword_1000CB870);
    sub_1000511A4((unint64_t *)&qword_1000CB878, &qword_1000CB870);
    char v18 = v24;
    sub_1000A4C20();
    int v19 = (void *)v21;
    sub_1000A4A90();
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v22);
  }
  return result;
}

uint64_t sub_100050A78()
{
  uint64_t v0 = sub_1000A4650();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v10[-v5];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000A4660();
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v4, enum case for NWPath.Status.satisfied(_:), v0);
    char v8 = sub_1000A4640();
    uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v9(v4, v0);
    v9(v6, v0);
    swift_getKeyPath();
    swift_getKeyPath();
    v10[7] = (v8 & 1) == 0;
    return sub_1000A4570();
  }
  return result;
}

uint64_t sub_100050C2C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100050C70()
{
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS14NetworkMonitor__status;
  uint64_t v2 = sub_100008704(&qword_1000CAF98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100050D24()
{
  return type metadata accessor for NetworkMonitor();
}

uint64_t type metadata accessor for NetworkMonitor()
{
  uint64_t result = qword_1000CB7B0;
  if (!qword_1000CB7B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100050D78()
{
  sub_100050E24();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100050E24()
{
  if (!qword_1000CB7C0)
  {
    unint64_t v0 = sub_1000A4580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CB7C0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NetworkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100050F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

unint64_t sub_100050F84()
{
  unint64_t result = qword_1000CA630;
  if (!qword_1000CA630)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CA630);
  }
  return result;
}

uint64_t sub_100050FC4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100050FFC(uint64_t a1)
{
  return sub_100050698(a1);
}

uint64_t sub_100051004(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100051014()
{
  uint64_t v1 = sub_1000A4670();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000510E0()
{
  sub_1000A4670();

  return sub_100050A78();
}

uint64_t sub_100051144(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100051154()
{
  return swift_release();
}

uint64_t sub_10005115C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000511A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000086BC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000511F4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100051278()
{
  return sub_1000A4570();
}

uint64_t sub_1000512F0()
{
  return sub_10002E7AC();
}

uint64_t sub_100051304()
{
  return sub_10002E7AC();
}

NSObject *sub_100051318(uint64_t a1)
{
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  BOOL v6 = sub_1000555CC(v24, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_1000A4440();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    char v8 = sub_1000A4450();
    os_log_type_t v9 = sub_1000A4A40();
    if (!os_log_type_enabled(v8, v9))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_23:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_getKeyPath();
      swift_getKeyPath();
      BOOL v24 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      return sub_1000A4570();
    }
    uint64_t v10 = swift_slowAlloc();
    uint64_t result = swift_slowAlloc();
    BOOL v24 = (BOOL)result;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    int v12 = *(unsigned __int8 *)(a1 + 32);
    v22[1] = result;
    if (v12 == 1)
    {
      if (v11 == 1)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (*(unsigned char *)(a1 + 33))
      {
        uint64_t v13 = 7237422;
        unint64_t v14 = 0xE300000000000000;
        goto LABEL_13;
      }
    }
    else
    {
      if (v11 == 1)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (v12 == *(unsigned __int8 *)(a1 + 33))
      {
        uint64_t v13 = 1717989166;
        unint64_t v14 = 0xE400000000000000;
LABEL_13:
        uint64_t v23 = sub_10003CFA4(v13, v14, (uint64_t *)&v24);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        uint64_t result = v23;
        uint64_t v15 = *(void *)(v23 + 16);
        if (v15)
        {
          int v16 = *(unsigned __int8 *)(v23 + 32);
          v22[0] = v8;
          if (v16 == 1)
          {
            if (v15 != 1)
            {
              if (*(unsigned char *)(v23 + 33))
              {
                os_log_type_t v17 = v9;
                uint64_t v18 = 7237422;
                unint64_t v19 = 0xE300000000000000;
LABEL_22:
                swift_bridgeObjectRelease();
                uint64_t v23 = sub_10003CFA4(v18, v19, (uint64_t *)&v24);
                sub_1000A4BC0();
                swift_release_n();
                swift_bridgeObjectRelease();
                os_log_type_t v20 = v17;
                os_log_t v21 = v22[0];
                _os_log_impl((void *)&_mh_execute_header, v22[0], v20, "changeNewParticipantsCanBeCoOwners 4 newState: %s, oldState: %s", (uint8_t *)v10, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                goto LABEL_23;
              }
LABEL_20:
              os_log_type_t v17 = v9;
              unint64_t v19 = 0xE600000000000000;
              uint64_t v18 = 0x646578696D2ELL;
              goto LABEL_22;
            }
LABEL_30:
            __break(1u);
            return result;
          }
          if (v15 != 1)
          {
            if (v16 == *(unsigned __int8 *)(v23 + 33))
            {
              os_log_type_t v17 = v9;
              uint64_t v18 = 1717989166;
              unint64_t v19 = 0xE400000000000000;
              goto LABEL_22;
            }
            goto LABEL_20;
          }
          goto LABEL_28;
        }
        goto LABEL_26;
      }
    }
    unint64_t v14 = 0xE600000000000000;
    uint64_t v13 = 0x646578696D2ELL;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100051768()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t result = v3;
  uint64_t v1 = *(void *)(v3 + 16);
  if (!v1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(unsigned char *)(v3 + 32) != 1)
  {
    if (v1 != 1)
    {
      uint64_t v2 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    uint64_t v2 = *(unsigned __int8 *)(v3 + 33);
LABEL_7:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100051820(unsigned __int8 a1)
{
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  if (v15 != a1)
  {
    sub_1000A4440();
    swift_retain_n();
    uint64_t v7 = sub_1000A4450();
    os_log_type_t v8 = sub_1000A4A40();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      uint64_t v10 = 8 * (char)a1;
      uint64_t v11 = *(void *)&aNone_2[v10];
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v14 = sub_10003CFA4(v11, *(void *)&aPublicmPrivate[v10 + 16], &v15);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      uint64_t v14 = sub_10003CFA4(*(void *)&aNone_2[8 * (char)v14], *(void *)&aPublicmPrivate[8 * (char)v14 + 16], &v15);
      sub_1000A4BC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "updateAccessModeOnly 4 newAccess: %s, oldAccess: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v15) = a1;
    swift_retain();
    return sub_1000A4570();
  }
  return result;
}

uint64_t sub_100051B64(unsigned __int8 a1)
{
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  if (v15 != a1)
  {
    sub_1000A4440();
    swift_retain_n();
    uint64_t v7 = sub_1000A4450();
    os_log_type_t v8 = sub_1000A4A40();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      uint64_t v10 = (char)a1;
      uint64_t v11 = *(void *)&aNone_3[v10 * 8];
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v14 = sub_10003CFA4(v11, qword_1000A8498[v10], &v15);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      uint64_t v14 = sub_10003CFA4(*(void *)&aNone_3[8 * (char)v14], qword_1000A8498[(char)v14], &v15);
      sub_1000A4BC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "updatePermissionsOnly newAccess: %s, oldAccess: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v15) = a1;
    swift_retain();
    return sub_1000A4570();
  }
  return result;
}

uint64_t sub_100051EA8()
{
  return sub_10002E7AC();
}

uint64_t sub_100051EBC()
{
  return sub_10002E7AC();
}

uint64_t sub_100051ED0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100051F44(char a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 187) = a3;
  *(void *)(v4 + 88) = a2;
  *(void *)(v4 + 96) = v3;
  *(unsigned char *)(v4 + 186) = a1;
  uint64_t v5 = sub_1000A4460();
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 112) = *(void *)(v5 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v4 + 128) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v4 + 136) = v7;
  *(void *)(v4 + 144) = v6;
  return _swift_task_switch(sub_100052040, v7, v6);
}

uint64_t sub_100052040()
{
  uint64_t v33 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 186);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 180) != v1)
  {
    char v2 = *(unsigned char *)(v0 + 186);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    uint64_t v3 = *(char *)(v0 + 184);
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 183) = v2;
    swift_retain();
    sub_1000A4570();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = *(void **)(v0 + 56);
    *(void *)(v0 + 152) = v4;
    if (v4)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000A4560();
      swift_release();
      swift_release();
      swift_release();
      if ((*(unsigned char *)(v0 + 182) & 1) == 0)
      {
        swift_release();

        goto LABEL_7;
      }
      uint64_t v30 = v3;
      int v5 = *(unsigned __int8 *)(v0 + 186);
      uint64_t v6 = (char *)[v4 publicPermission];
      if (v5 == 2)
      {
        uint64_t v7 = 1;
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4560();
        swift_release();
        swift_release();
        if (*(unsigned char *)(v0 + 181) != 3)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_1000A4560();
          swift_release();
          swift_release();
          uint64_t v7 = 1;
          switch(*(unsigned char *)(v0 + 185))
          {
            case 1:
              break;
            case 2:
              uint64_t v7 = 2;
              goto LABEL_13;
            case 3:
              return sub_1000A4CD0();
            default:
              goto LABEL_13;
          }
        }
        uint64_t v7 = 3;
      }
LABEL_13:
      uint64_t v10 = (id *)(v0 + 72);
      *(void *)(v0 + 72) = v7;
      sub_1000A4440();
      uint64_t v11 = sub_1000A4450();
      os_log_type_t v12 = sub_1000A4A40();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v27 = v12;
        uint64_t v28 = v7;
        os_log_t log = v11;
        uint64_t v13 = *(char *)(v0 + 186);
        uint64_t v14 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v15 = *(void *)&aNone_2[8 * v13];
        *(_DWORD *)uint64_t v14 = 136316162;
        *(void *)(v0 + 80) = sub_10003CFA4(v15, *(void *)&aPublicmPrivate[8 * v13 + 16], &v32);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        *(void *)(v0 + 64) = sub_10003CFA4(*(void *)&aNone_2[8 * v30], *(void *)&aPublicmPrivate[8 * v30 + 16], &v32);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 22) = 2080;
        if ((unint64_t)(v6 - 1) > 2) {
          return sub_1000A4CD0();
        }
        *(void *)(v0 + 48) = sub_10003CFA4(*(void *)&aNone_4[8 * (void)(v6 - 1)], *(void *)&aReadonlReadwri[8 * (void)(v6 - 1) + 16], &v32);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        uint64_t v16 = 8 * v28 - 8;
        uint64_t v17 = *(void *)&aNone_4[v16];
        unint64_t v18 = *(void *)&aReadonlReadwri[v16 + 16];
        *(_WORD *)(v14 + 32) = 2080;
        uint64_t v19 = *(void *)(v0 + 112);
        uint64_t v31 = *(void *)(v0 + 120);
        uint64_t v20 = *(void *)(v0 + 104);
        int v21 = *(unsigned __int8 *)(v0 + 187);
        *(void *)(v0 + 40) = sub_10003CFA4(v17, v18, &v32);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 42) = 1024;
        *(_DWORD *)(v0 + 176) = v21;
        sub_1000A4BC0();
        _os_log_impl((void *)&_mh_execute_header, log, v27, "changeAccessSetting 4 newAccess: %s, oldAccess: %s oldSharePermission: %s,\nnewSharePermission: %s, saveShare: %{BOOL}d", (uint8_t *)v14, 0x30u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v31, v20);
        uint64_t v10 = (id *)(v0 + 72);
      }
      else
      {
        uint64_t v23 = *(void *)(v0 + 112);
        uint64_t v22 = *(void *)(v0 + 120);
        uint64_t v24 = *(void *)(v0 + 104);

        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      }
      swift_beginAccess();
      if (*v10 != v6)
      {
        int v25 = *(unsigned __int8 *)(v0 + 187);
        objc_msgSend(v4, "setPublicPermission:");
        if (v25 == 1)
        {
          uint64_t v26 = (void *)swift_task_alloc();
          *(void *)(v0 + 160) = v26;
          *uint64_t v26 = v0;
          v26[1] = sub_1000527C0;
          return sub_100037314(1);
        }
      }
    }
  }
  swift_release();
LABEL_7:
  swift_task_dealloc();
  os_log_type_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000527C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    int v5 = sub_100052970;
  }
  else {
    int v5 = sub_1000528FC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000528FC()
{
  int v1 = *(void **)(v0 + 152);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100052970()
{
  int v1 = *(void **)(v0 + 152);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000529E4(char a1, uint64_t a2, char a3, char a4)
{
  *(unsigned char *)(v5 + 142) = a4;
  *(unsigned char *)(v5 + 141) = a3;
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 140) = a1;
  uint64_t v6 = sub_1000A4460();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v5 + 80) = sub_1000A4980();
  uint64_t v8 = sub_1000A4950();
  *(void *)(v5 + 88) = v8;
  *(void *)(v5 + 96) = v7;
  return _swift_task_switch(sub_100052AE4, v8, v7);
}

uint64_t sub_100052AE4()
{
  uint64_t v36 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 140);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 136) == v1) {
    goto LABEL_6;
  }
  char v2 = *(unsigned char *)(v0 + 140);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 138) = v2;
  swift_retain();
  sub_1000A4570();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = *(void **)(v0 + 16);
  *(void *)(v0 + 104) = v3;
  if (!v3) {
    goto LABEL_6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 137) & 1) == 0)
  {
    swift_release();

    goto LABEL_7;
  }
  swift_retain();
  id v4 = v3;
  sub_10009FBE8(v3);
  unsigned __int8 v6 = v5;

  swift_release();
  sub_1000A4440();
  uint64_t v7 = sub_1000A4450();
  os_log_type_t v8 = sub_1000A4A40();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t type = v8;
    uint64_t v9 = *(char *)(v0 + 140);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v11 = *(void *)&aNone_3[8 * v9];
    *(_DWORD *)uint64_t v10 = 136315906;
    *(void *)(v0 + 32) = sub_10003CFA4(v11, qword_1000A8498[v9], &v35);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v12 = (char)v6;
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 72);
    unsigned __int8 v13 = v6;
    int v14 = *(unsigned __int8 *)(v0 + 142);
    id v34 = v4;
    int v15 = *(unsigned __int8 *)(v0 + 141);
    *(void *)(v0 + 24) = sub_10003CFA4(*(void *)&aNone_3[v12 * 8], qword_1000A8498[v12], &v35);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 1024;
    *(_DWORD *)(v0 + 132) = v14;
    unsigned __int8 v6 = v13;
    sub_1000A4BC0();
    *(_WORD *)(v10 + 28) = 1024;
    *(_DWORD *)(v0 + 128) = v15;
    id v4 = v34;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "changeReadWritePermission newPermission: %s, oldSharePermission: %s,\nupdateExistingParticipants: %{BOOL}d, saveShare: %{BOOL}d", (uint8_t *)v10, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  if (*(unsigned __int8 *)(v0 + 140) == v6)
  {
LABEL_38:

LABEL_6:
    swift_release();
LABEL_7:
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  uint64_t v21 = 1;
  int v22 = 0;
  switch(*(unsigned char *)(v0 + 140))
  {
    case 1:
      int v22 = 0;
      uint64_t v21 = 3;
      goto LABEL_16;
    case 2:
      int v22 = 1;
      uint64_t v21 = 2;
      goto LABEL_16;
    case 3:
      return sub_1000A4CD0();
    default:
LABEL_16:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      if (*(unsigned char *)(v0 + 139) == 1) {
        [v4 setPublicPermission:v21];
      }
      if (*(unsigned char *)(v0 + 142) != 1 || [v4 publicPermission] != (id)1) {
        goto LABEL_34;
      }
      id v23 = [v4 participants];
      sub_10001F798(0, &qword_1000CB098);
      unint64_t v24 = sub_1000A4910();

      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1000A4CE0();
        swift_bridgeObjectRelease();
        if (!v25) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v25) {
          goto LABEL_33;
        }
      }
      if (v25 < 1)
      {
        __break(1u);
        JUMPOUT(0x100053254);
      }
      for (uint64_t i = 0; i != v25; ++i)
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v27 = (id)sub_1000A4C60();
        }
        else {
          id v27 = *(id *)(v24 + 8 * i + 32);
        }
        uint64_t v28 = v27;
        if ([v27 role] != (id)1)
        {
          [v28 setPermission:v21];
          if (v22) {
            [v28 setRole:3];
          }
        }
      }
LABEL_33:
      swift_bridgeObjectRelease();
LABEL_34:
      if (*(unsigned char *)(v0 + 141) != 1) {
        goto LABEL_38;
      }
      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_100053264;
      uint64_t result = sub_100037314(1);
      break;
  }
  return result;
}

uint64_t sub_100053264()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  if (v0) {
    unsigned __int8 v5 = sub_100053414;
  }
  else {
    unsigned __int8 v5 = sub_1000533A0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000533A0()
{
  int v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100053414()
{
  int v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100053488()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

void *sub_1000534FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v84 = *v1;
  uint64_t v85 = a1;
  uint64_t v3 = sub_100008704(&qword_1000CAB98);
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  uint64_t v75 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008704(&qword_1000CABA0);
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  __chkstk_darwin(v5);
  uint64_t v78 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008704(&qword_1000CB9E8);
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  __chkstk_darwin(v7);
  long long v81 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008704(&qword_1000CAC70);
  __chkstk_darwin(v9 - 8);
  long long v74 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100008704(&qword_1000CAC58);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  long long v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008704(&qword_1000CAC08);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (void *)sub_100008704(&qword_1000CB9F0);
  unint64_t v68 = (void (**)(void, void, void))*(v69 - 1);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100008704(&qword_1000CAE28);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  id v64 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v63 = sub_100008704(&qword_1000CAD70);
  uint64_t v16 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100008704(&qword_1000CAE60);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100008704(&qword_1000CAE48);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__readWritePermission;
  LOBYTE(v87) = 1;
  sub_1000A4530();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v26, v23);
  uint64_t v28 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__sharingMode;
  LOBYTE(v87) = 0;
  sub_1000A4530();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v22, v19);
  uint64_t v29 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__allowCoOwnersEditing;
  LOBYTE(v87) = 0;
  sub_1000A4530();
  uint64_t v30 = *(void (**)(char *, char *, unint64_t))(v16 + 32);
  unint64_t v31 = v63;
  v30(v29, v18, v63);
  uint64_t v32 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__newParticipantsCanBeCoOwners;
  uint64_t v87 = &off_1000C1A70;
  uint64_t v33 = v64;
  sub_1000A4530();
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v32, v33, v66);
  id v34 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__participantsAreAlwaysCoOwners;
  LOBYTE(v87) = 0;
  sub_1000A4530();
  v30(v34, v18, v31);
  uint64_t v35 = (char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__currentUserCanInvitePublisher;
  LOBYTE(v87) = 2;
  sub_100008704((uint64_t *)&unk_1000CB918);
  uint64_t v36 = v67;
  sub_1000A4530();
  ((void (**)(char *, char *, void *))v68)[4](v35, v36, v69);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000A4CE0()) {
    uint64_t v37 = (void *)sub_10003E9F0((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v37 = &_swiftEmptySetSingleton;
  }
  uint64_t v38 = v61;
  uint64_t v39 = v60;
  NSString v62 = v2;
  uint64_t v69 = (void *)((char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel_store);
  *uint64_t v69 = v37;
  uint64_t v40 = v85;
  *(void *)((char *)v2 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel_ckShareModel) = v85;
  swift_beginAccess();
  uint64_t v86 = 15;
  swift_retain();
  sub_1000A4530();
  swift_endAccess();
  swift_beginAccess();
  sub_100008704(&qword_1000CAE10);
  unint64_t v41 = v70;
  sub_1000A4540();
  swift_endAccess();
  unint64_t v68 = (void (**)(void, void, void))self;
  uint64_t v87 = (_UNKNOWN **)[v68 mainRunLoop];
  uint64_t v66 = sub_1000A4B90();
  uint64_t v42 = *(void *)(v66 - 8);
  uint64_t v65 = *(void *)(v42 + 56);
  uint64_t v67 = (char *)(v42 + 56);
  uint64_t v43 = (uint64_t)v74;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v74, 1, 1, v66);
  id v64 = (char *)sub_10001F798(0, &qword_1000CADF0);
  sub_1000406A8(&qword_1000CAE18, &qword_1000CAC58);
  unint64_t v63 = sub_100055424();
  uint64_t v44 = v71;
  sub_1000A45C0();
  sub_10005548C(v43);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v62;
  swift_weakInit();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v45;
  *(void *)(v47 + 24) = v40;
  sub_1000406A8(&qword_1000CAE98, &qword_1000CAC08);
  swift_retain();
  uint64_t v48 = v73;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v48);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100008704(&qword_1000CAD18);
  id v49 = v75;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAF38, &qword_1000CAB98);
  sub_100040558();
  uint64_t v51 = v77;
  uint64_t v50 = v78;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v49, v51);
  uint64_t v87 = (_UNKNOWN **)[v68 mainRunLoop];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v43, 1, 1, v66);
  sub_1000406A8(&qword_1000CAF78, &qword_1000CABA0);
  uint64_t v52 = v80;
  uint64_t v53 = v81;
  sub_1000A45C0();
  sub_10005548C(v43);

  (*(void (**)(char *, uint64_t))(v79 + 8))(v50, v52);
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v84;
  *(void *)(v55 + 16) = v54;
  *(void *)(v55 + 24) = v56;
  sub_1000406A8(&qword_1000CB9F8, &qword_1000CB9E8);
  uint64_t v57 = v83;
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v57);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_release();
  return v46;
}

void sub_100054208(void **a1)
{
  unsigned __int8 v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (v1)
    {
      id v2 = v1;
      [v2 publicPermission];
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000A4570();
      id v3 = v2;
      sub_10009FBE8(v1);

      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1000A4570();
      id v4 = [v3 currentUserParticipant];
      if (v4)
      {
        uint64_t v5 = v4;
        [v4 role];
        sub_1000A4AB0();
        sub_10001F798(0, &qword_1000CB018);
        id v6 = [v3 owner];
        sub_1000A4B70();

        swift_getKeyPath();
        swift_getKeyPath();
        sub_1000A4570();

        return;
      }
    }
    swift_release();
  }
}

uint64_t sub_100054410(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    char v3 = sub_10005458C(v4, v1);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4570();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    sub_100054638(v3, v1);
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1000A4570();
  }
  return result;
}

uint64_t sub_10005458C(unsigned __int8 a1, uint64_t a2)
{
  int v2 = a1;
  uint64_t v3 = a2 & 0xC;
  uint64_t result = (a2 >> 3) & 1;
  while (2)
  {
    switch(v2)
    {
      case 1:
        int v2 = 2;
        if ((a2 & 8) == 0) {
          continue;
        }
        break;
      case 2:
        int v2 = 1;
        if (v3 == 8) {
          continue;
        }
        uint64_t result = (a2 >> 1) & 2;
        break;
      case 3:
        if (v3 != 12) {
          goto LABEL_9;
        }
        uint64_t result = 3;
        break;
      default:
        if (a2)
        {
LABEL_9:
          if ((a2 & 8) != 0)
          {
            BOOL v5 = v2 == 1;
            int v2 = 1;
            if (!v5) {
              continue;
            }
          }
          else
          {
            BOOL v5 = v2 == 2;
            int v2 = 2;
            if (!v5) {
              continue;
            }
          }
        }
        uint64_t result = 0;
        break;
    }
    return result;
  }
}

uint64_t sub_100054638(char a1, uint64_t a2)
{
  if ((a2 & 2) != 0) {
    char v3 = 2;
  }
  else {
    char v3 = 1;
  }
  if ((a2 & 1u) <= (a2 == 0)) {
    uint64_t result = a2 == 0;
  }
  else {
    uint64_t result = a2 & 1;
  }
  do
  {
    while (a1)
    {
      if (a1 == 1)
      {
        a1 = 2;
        if ((a2 & 3) != 2) {
          return result;
        }
      }
      else
      {
        a1 = 1;
        if (a2 == 0 || (a2 & 2) != 0) {
          return 2;
        }
      }
    }
    a1 = v3;
  }
  while (a2);
  return 0;
}

uint64_t sub_1000546AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__readWritePermission;
  uint64_t v2 = sub_100008704(&qword_1000CAE48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__sharingMode;
  uint64_t v4 = sub_100008704(&qword_1000CAE60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__sharingOptionsAllowed;
  uint64_t v6 = sub_100008704(&qword_1000CAD18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__allowCoOwnersEditing;
  uint64_t v8 = sub_100008704(&qword_1000CAD70);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__newParticipantsCanBeCoOwners;
  uint64_t v11 = sub_100008704(&qword_1000CAE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  v9(v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__participantsAreAlwaysCoOwners, v8);
  uint64_t v12 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12OptionsModel__currentUserCanInvitePublisher;
  uint64_t v13 = sub_100008704(&qword_1000CB9F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100054908()
{
  return type metadata accessor for OptionsModel();
}

uint64_t type metadata accessor for OptionsModel()
{
  uint64_t result = qword_1000CB8E8;
  if (!qword_1000CB8E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005495C()
{
  sub_10003E3A4(319, &qword_1000CB8F8);
  if (v0 <= 0x3F)
  {
    sub_10003E3A4(319, &qword_1000CB900);
    if (v1 <= 0x3F)
    {
      sub_10003E3A4(319, &qword_1000CA860);
      if (v2 <= 0x3F)
      {
        sub_10003E3A4(319, &qword_1000CA7F0);
        if (v3 <= 0x3F)
        {
          sub_10003E3A4(319, &qword_1000CB908);
          if (v4 <= 0x3F)
          {
            sub_100054B80();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100054B80()
{
  if (!qword_1000CB910)
  {
    sub_1000086BC((uint64_t *)&unk_1000CB918);
    unint64_t v0 = sub_1000A4580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CB910);
    }
  }
}

uint64_t sub_100054C04()
{
  v1[2] = v0;
  uint64_t v2 = sub_1000A4460();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1000A4990();
  v1[6] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[7] = v4;
  v1[8] = v3;
  return _swift_task_switch(sub_100054CF8, v4, v3);
}

uint64_t sub_100054CF8()
{
  *(void *)(v0 + 72) = 10;
  sub_1000A4440();
  swift_retain_n();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109376;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    int v4 = *(unsigned __int8 *)(v0 + 89);
    swift_release();
    *(_DWORD *)(v3 + 4) = v4 != 2;
    swift_release();
    *(_WORD *)(v3 + 8) = 2048;
    *(void *)(v3 + 10) = 10;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "waitForCurrentUserInvitingFromShare completed: %{BOOL}d, retriesLeft: %ld", (uint8_t *)v3, 0x12u);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(void, void))(*(void *)(v0 + 32) + 8))(*(void *)(v0 + 40), *(void *)(v0 + 24));
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 88) == 2)
  {
    return _swift_task_switch(sub_100054F50, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100054F50()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_100054FE8;
  return static Task<>.sleep(nanoseconds:)(10000000);
}

uint64_t sub_100054FE8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    unint64_t v5 = sub_1000555AC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    unint64_t v5 = sub_10005510C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10005510C(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = v4 - 1;
  if (v4 == 1)
  {
    swift_release();
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD000000000000026;
    *(void *)(v12 + 8) = 0x80000001000ACA50;
    *(_OWORD *)(v12 + 16) = xmmword_1000A81B0;
    *(void *)(v12 + 32) = 0x80000001000ACA80;
    *(unsigned char *)(v12 + 40) = 11;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v3 + 8);
  }
  else
  {
    if (v4 < 2)
    {
      __break(1u);
      return _swift_task_switch(a1, a2, a3);
    }
    *(void *)(v3 + 72) = v5;
    sub_1000A4440();
    swift_retain_n();
    uint64_t v6 = sub_1000A4450();
    os_log_type_t v7 = sub_1000A4A40();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109376;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1000A4560();
      swift_release();
      swift_release();
      int v9 = *(unsigned __int8 *)(v3 + 89);
      swift_release();
      *(_DWORD *)(v8 + 4) = v9 != 2;
      swift_release();
      *(_WORD *)(v8 + 8) = 2048;
      *(void *)(v8 + 10) = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "waitForCurrentUserInvitingFromShare completed: %{BOOL}d, retriesLeft: %ld", (uint8_t *)v8, 0x12u);
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(void, void))(*(void *)(v3 + 32) + 8))(*(void *)(v3 + 40), *(void *)(v3 + 24));
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v3 + 88) == 2)
    {
      a1 = sub_100054F50;
      a2 = 0;
      a3 = 0;
      return _swift_task_switch(a1, a2, a3);
    }
    swift_release();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v3 + 8);
  }
  return v10();
}

unint64_t sub_100055424()
{
  unint64_t result = qword_1000CAE00;
  if (!qword_1000CAE00)
  {
    sub_10001F798(255, &qword_1000CADF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAE00);
  }
  return result;
}

uint64_t sub_10005548C(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CAC70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000554EC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100055524()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100055564(void **a1)
{
}

uint64_t sub_10005556C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000555A4(uint64_t *a1)
{
  return sub_100054410(a1);
}

ValueMetadata *type metadata accessor for TriStateBool()
{
  return &type metadata for TriStateBool;
}

BOOL sub_1000555C0(BOOL *a1, uint64_t *a2)
{
  return sub_1000555CC(*a1, *a2);
}

BOOL sub_1000555CC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_23;
  }
  int v3 = *(unsigned __int8 *)(result + 32);
  if (v3 == 1)
  {
    if (v2 == 1)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (*(unsigned char *)(result + 33) == 1)
    {
      uint64_t v4 = 0;
      goto LABEL_11;
    }
    int v5 = 0;
  }
  else
  {
    if (v2 == 1)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    int v5 = *(unsigned __int8 *)(result + 33);
  }
  BOOL v6 = v3 == v5;
  uint64_t v4 = 1;
  if (!v6) {
    uint64_t v4 = 2;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v8 = *(unsigned __int8 *)(a2 + 32);
  if ((v8 & 1) == 0)
  {
    if (v7 != 1)
    {
      int v10 = *(unsigned __int8 *)(a2 + 33);
      goto LABEL_19;
    }
    goto LABEL_25;
  }
  if (v7 != 1)
  {
    if (*(unsigned char *)(a2 + 33) == 1)
    {
      uint64_t v9 = 0;
      return v4 == v9;
    }
    int v10 = 0;
LABEL_19:
    BOOL v6 = v8 == v10;
    uint64_t v9 = 1;
    if (!v6) {
      uint64_t v9 = 2;
    }
    return v4 == v9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100055694()
{
  return sub_1000814E8();
}

uint64_t sub_1000556A8(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  int v8 = (char *)&v12 - v7;
  __chkstk_darwin(v6);
  int v10 = (char *)&v12 - v9;
  sub_10001F904(a1, (uint64_t)&v12 - v9, &qword_1000CA3B0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001F904((uint64_t)v10, (uint64_t)v5, &qword_1000CA3B0);
  swift_retain();
  sub_1000A4570();
  sub_10002E8B8((uint64_t)v8);
  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  return sub_10000B988((uint64_t)v8, &qword_1000CA3B0);
}

double sub_100055844@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000558C4()
{
  return sub_1000A4570();
}

uint64_t sub_100055948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000A49C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1000A49B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000B988(a1, &qword_1000CAB08);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000A4950();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

Class sub_100055AD0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10001F798(0, &qword_1000CB018);
    v4.super.Class isa = sub_1000A4760().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

id sub_100055B6C()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1000A4460();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1;
  v8.super.super.Class isa = sub_1000A4E00().super.super.isa;
  uint64_t v9 = self;
  id v33 = 0;
  id v10 = [v9 handleForIdentifier:v8.super.super.isa error:&v33];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v33;

    id v13 = [v11 bundle];
    uint64_t v14 = v13;
    if (v13)
    {
      id v15 = [v13 identifier];

      if (v15)
      {
        uint64_t v14 = (void *)sub_1000A4800();
        uint64_t v17 = v16;

LABEL_12:
        uint64_t v26 = &v7[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
        *(void *)uint64_t v26 = v14;
        *((void *)v26 + 1) = v17;
        goto LABEL_13;
      }

      uint64_t v14 = 0;
    }
    else
    {
    }
    uint64_t v17 = 0;
    goto LABEL_12;
  }
  id v18 = v33;
  uint64_t v19 = sub_1000A4240();

  swift_willThrow();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v20 = sub_1000A4450();
  os_log_type_t v21 = sub_1000A4A20();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v30 = ObjectType;
    int v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    id v33 = v29;
    *(_DWORD *)int v22 = 136315138;
    v28[1] = v22 + 4;
    uint64_t v31 = v19;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v23 = sub_1000A4810();
    uint64_t v31 = sub_10003CFA4(v23, v24, (uint64_t *)&v33);
    sub_1000A4BC0();
    ObjectType = v30;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "RBSProcessHandle error: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v25 = &v7[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
LABEL_13:

  v32.receiver = v7;
  v32.super_class = ObjectType;
  return objc_msgSendSuper2(&v32, "init");
}

uint64_t sub_100055F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000A42E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v15 = sub_1000A4D50();
  sub_1000818F0(v15, v16, 0xD00000000000001ELL, 0x80000001000AD4C0);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v17 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_1000A4990();
  id v18 = v4;
  swift_retain();
  uint64_t v19 = sub_1000A4980();
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  os_log_type_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v19;
  *((void *)v21 + 3) = &protocol witness table for MainActor;
  *((void *)v21 + 4) = v18;
  *((void *)v21 + 5) = a2;
  *((void *)v21 + 6) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v21[v20], v11, v8);
  sub_1000210F4((uint64_t)v14, (uint64_t)&unk_1000CBBA8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100056194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[104] = a7;
  v7[103] = a6;
  v7[102] = a5;
  v7[101] = a4;
  sub_100008704(&qword_1000CA3B0);
  v7[105] = swift_task_alloc();
  v7[106] = swift_task_alloc();
  uint64_t v8 = sub_1000A4180();
  v7[107] = v8;
  v7[108] = *(void *)(v8 - 8);
  v7[109] = swift_task_alloc();
  uint64_t v9 = sub_1000A42E0();
  v7[110] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[111] = v10;
  v7[112] = *(void *)(v10 + 64);
  v7[113] = swift_task_alloc();
  v7[114] = swift_task_alloc();
  sub_1000A4990();
  v7[115] = sub_1000A4980();
  uint64_t v12 = sub_1000A4950();
  v7[116] = v12;
  v7[117] = v11;
  return _swift_task_switch(sub_10005634C, v12, v11);
}

uint64_t sub_10005634C()
{
  *(void *)(v0 + 792) = 0;
  BOOL v1 = sub_1000A42B0();
  sub_1000A4270(v2);
  uint64_t v4 = v3;
  unsigned int v5 = objc_msgSend(v3, "br_isInSyncedLocation");

  if (v1) {
    sub_1000A4290();
  }
  if (v5)
  {
    uint64_t v6 = shareStatus(url:)();
    if ((v6 & 0x10000) == 0)
    {
      __int16 v7 = v6;
      if ((v6 & 1) == 0)
      {
        Swift::String v114 = (uint64_t (*)(uint64_t))((char *)&dword_1000CBBB0 + dword_1000CBBB0);
        uint64_t v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 944) = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_1000572D0;
        uint64_t v9 = *(void *)(v0 + 832);
        return v114(v9);
      }
      uint64_t v35 = *(void *)(v0 + 872);
      swift_release();
      sub_100008704(&qword_1000CA678);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000A6410;
      *(void *)(inited + 32) = NSURLParentDirectoryURLKey;
      uint64_t v37 = NSURLParentDirectoryURLKey;
      uint64_t v38 = sub_10003DA44(inited);
      swift_setDeallocating();
      type metadata accessor for URLResourceKey(0);
      swift_arrayDestroy();
      URL.evictionSafeResourceValues(forKeys:)((uint64_t)v38, v35);
      uint64_t v39 = *(void *)(v0 + 888);
      uint64_t v40 = *(void *)(v0 + 880);
      uint64_t v41 = *(void *)(v0 + 848);
      uint64_t v42 = *(void *)(v0 + 840);
      swift_bridgeObjectRelease();
      sub_1000A4140();
      sub_10001F904(v41, v42, &qword_1000CA3B0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v42, 1, v40) == 1)
      {
        sub_10000B988(*(void *)(v0 + 840), &qword_1000CA3B0);
      }
      else
      {
        uint64_t v43 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v0 + 888) + 32);
        v43(*(void *)(v0 + 904), *(void *)(v0 + 840), *(void *)(v0 + 880));
        uint64_t v44 = shareStatus(url:)();
        if ((v44 & 0x10000) != 0)
        {
          uint64_t v67 = *(void *)(v0 + 912);
          uint64_t v106 = *(void *)(v0 + 896);
          Swift::String v109 = v43;
          uint64_t v68 = *(void *)(v0 + 888);
          uint64_t v69 = *(void *)(v0 + 880);
          uint64_t v104 = *(void *)(v0 + 832);
          Swift::String v112 = *(void **)(v0 + 808);
          *(_OWORD *)(v0 + 400) = 0u;
          *(_OWORD *)(v0 + 416) = 0u;
          *(void *)(v0 + 432) = 0;
          *(unsigned char *)(v0 + 440) = -1;
          sub_1000A4800();
          id v70 = objc_allocWithZone((Class)NSError);
          NSString v71 = sub_1000A47C0();
          swift_bridgeObjectRelease();
          id v72 = [v70 initWithDomain:v71 code:12 userInfo:0];

          (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v67, v104, v69);
          unint64_t v73 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
          unint64_t v74 = (v106 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v75 = swift_allocObject();
          v109(v75 + v73, v67, v69);
          *(void *)(v75 + v74) = 0;
          *(void *)(v75 + ((v74 + 15) & 0xFFFFFFFFFFFFFFF8)) = v112;
          v112;
          sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0x7320746E65726170, 0xED00007375746174, v0 + 400, v72, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v75);
          swift_release();
          uint64_t result = swift_beginAccess();
          uint64_t v76 = *(void *)(v0 + 792);
          BOOL v57 = __CFADD__(v76, 1);
          uint64_t v77 = v76 + 1;
          if (!v57)
          {
            uint64_t v78 = *(void *)(v0 + 904);
            uint64_t v79 = *(void *)(v0 + 888);
            uint64_t v80 = *(void *)(v0 + 880);
            uint64_t v81 = *(void *)(v0 + 872);
            uint64_t v82 = *(void *)(v0 + 864);
            uint64_t v83 = *(void *)(v0 + 856);
            uint64_t v84 = *(void *)(v0 + 848);
            uint64_t v85 = *(void (**)(void, id))(v0 + 816);
            *(void *)(v0 + 792) = v77;
            v85(0, v72);

            (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
            sub_10000B988(v84, &qword_1000CA3B0);
            (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
            uint64_t v21 = *(void *)(v0 + 792);
            goto LABEL_23;
          }
          goto LABEL_33;
        }
        if (v44)
        {
          uint64_t v86 = *(void *)(v0 + 912);
          uint64_t v87 = *(void *)(v0 + 896);
          uint64_t v88 = *(void *)(v0 + 888);
          uint64_t v89 = *(void *)(v0 + 880);
          uint64_t v90 = *(void *)(v0 + 832);
          Swift::String v113 = *(void **)(v0 + 808);
          *(_OWORD *)(v0 + 352) = 0u;
          *(_OWORD *)(v0 + 368) = 0u;
          *(void *)(v0 + 384) = 0;
          *(unsigned char *)(v0 + 392) = -1;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v86, v90, v89);
          unint64_t v91 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
          unint64_t v92 = (v87 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v93 = swift_allocObject();
          v43(v93 + v91, v86, v89);
          *(void *)(v93 + v92) = 5;
          *(void *)(v93 + ((v92 + 15) & 0xFFFFFFFFFFFFFFF8)) = v113;
          v113;
          sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0x7320746E65726170, 0xED00007375746174, v0 + 352, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v93);
          swift_release();
          uint64_t result = swift_beginAccess();
          uint64_t v94 = *(void *)(v0 + 792);
          BOOL v57 = __CFADD__(v94, 1);
          uint64_t v95 = v94 + 1;
          if (!v57)
          {
            uint64_t v96 = *(void *)(v0 + 904);
            uint64_t v97 = *(void *)(v0 + 888);
            uint64_t v98 = *(void *)(v0 + 880);
            uint64_t v99 = *(void *)(v0 + 872);
            uint64_t v100 = *(void *)(v0 + 864);
            uint64_t v101 = *(void *)(v0 + 856);
            uint64_t v102 = *(void *)(v0 + 848);
            Swift::String_optional v103 = *(void (**)(uint64_t, void))(v0 + 816);
            *(void *)(v0 + 792) = v95;
            v103(5, 0);
            (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
            sub_10000B988(v102, &qword_1000CA3B0);
            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
            uint64_t v21 = *(void *)(v0 + 792);
            goto LABEL_23;
          }
LABEL_34:
          __break(1u);
          return result;
        }
        (*(void (**)(void, void))(*(void *)(v0 + 888) + 8))(*(void *)(v0 + 904), *(void *)(v0 + 880));
      }
      uint64_t v45 = *(void *)(v0 + 912);
      uint64_t v46 = *(void *)(v0 + 896);
      uint64_t v47 = *(void *)(v0 + 888);
      uint64_t v48 = *(void *)(v0 + 880);
      uint64_t v49 = *(void *)(v0 + 832);
      Swift::String v111 = *(void **)(v0 + 808);
      if ((v7 & 0x100) != 0) {
        uint64_t v50 = 4;
      }
      else {
        uint64_t v50 = 2;
      }
      *(_OWORD *)(v0 + 304) = 0u;
      *(_OWORD *)(v0 + 320) = 0u;
      *(void *)(v0 + 336) = 0;
      *(unsigned char *)(v0 + 344) = -1;
      *(void *)(v0 + 776) = v50;
      type metadata accessor for CSUIShareItemStatus(0);
      uint64_t v51 = sub_1000A4810();
      unint64_t v105 = v52;
      uint64_t v108 = v51;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v49, v48);
      unint64_t v53 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      unint64_t v54 = (v46 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = swift_allocObject();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v47 + 32))(v55 + v53, v45, v48);
      *(void *)(v55 + v54) = v50;
      *(void *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8)) = v111;
      v111;
      sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, v108, v105, v0 + 304, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v55);
      swift_release();
      uint64_t result = swift_beginAccess();
      uint64_t v56 = *(void *)(v0 + 792);
      BOOL v57 = __CFADD__(v56, 1);
      uint64_t v58 = v56 + 1;
      if (!v57)
      {
        uint64_t v59 = *(void *)(v0 + 872);
        uint64_t v60 = *(void *)(v0 + 864);
        uint64_t v61 = *(void *)(v0 + 856);
        uint64_t v62 = *(void *)(v0 + 848);
        unint64_t v63 = *(void (**)(uint64_t, void))(v0 + 816);
        *(void *)(v0 + 792) = v58;
        v63(v50, 0);
        swift_bridgeObjectRelease();
        sub_10000B988(v62, &qword_1000CA3B0);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
        uint64_t v21 = *(void *)(v0 + 792);
        goto LABEL_23;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v23 = *(void *)(v0 + 912);
    uint64_t v24 = *(void *)(v0 + 896);
    uint64_t v25 = *(void *)(v0 + 888);
    uint64_t v26 = *(void *)(v0 + 880);
    uint64_t v107 = *(void *)(v0 + 832);
    Swift::String v110 = *(void **)(v0 + 808);
    swift_release();
    *(void *)(v0 + 480) = 0;
    *(_OWORD *)(v0 + 448) = 0u;
    *(_OWORD *)(v0 + 464) = 0u;
    *(unsigned char *)(v0 + 488) = -1;
    sub_1000A4800();
    id v27 = objc_allocWithZone((Class)NSError);
    NSString v28 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithDomain:v28 code:12 userInfo:0];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v107, v26);
    unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v31 = (v24 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v32 + v30, v23, v26);
    *(void *)(v32 + v31) = 0;
    *(void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8)) = v110;
    v110;
    sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0x20676E6974746567, 0xEE00737574617473, v0 + 448, v29, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v32);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v33 = *(void *)(v0 + 792);
    uint64_t v21 = v33 + 1;
    if (v33 != -1)
    {
      id v34 = *(void (**)(void, id))(v0 + 816);
      *(void *)(v0 + 792) = v21;
      v34(0, v29);

      goto LABEL_23;
    }
LABEL_31:
    __break(1u);
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)(v0 + 912);
  uint64_t v12 = *(void *)(v0 + 896);
  uint64_t v13 = *(void *)(v0 + 888);
  uint64_t v14 = *(void *)(v0 + 880);
  uint64_t v15 = *(void *)(v0 + 832);
  unint64_t v16 = *(void **)(v0 + 808);
  swift_release();
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(unsigned char *)(v0 + 56) = -1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v15, v14);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v19 + v17, v11, v14);
  *(void *)(v19 + v18) = 1;
  *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v16;
  v16;
  sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0x6542746F6E6E6163, 0xEE00646572616853, v0 + 16, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v19);
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v20 = *(void *)(v0 + 792);
  uint64_t v21 = v20 + 1;
  if (v20 == -1)
  {
    __break(1u);
    goto LABEL_31;
  }
  int v22 = *(void (**)(uint64_t, void))(v0 + 816);
  *(void *)(v0 + 792) = v21;
  v22(1, 0);
LABEL_23:
  uint64_t v64 = *(void *)(v0 + 824);
  uint64_t v65 = *(uint64_t **)(v0 + 816);
  swift_retain();
  sub_10008D62C(v21, 0xD00000000000001ELL, 0x80000001000AD4C0, v65, v64, 14478);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
  return v66();
}

uint64_t sub_1000572D0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 952) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 936);
    uint64_t v6 = *(void *)(v4 + 928);
    __int16 v7 = sub_1000576F4;
  }
  else
  {
    *(unsigned char *)(v4 + 57) = a1 & 1;
    uint64_t v5 = *(void *)(v4 + 936);
    uint64_t v6 = *(void *)(v4 + 928);
    __int16 v7 = sub_100057400;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100057400()
{
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&dword_1000CBBB8 + dword_1000CBBB8);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v1;
    void *v1 = v0;
    v1[1] = sub_100057A60;
    uint64_t v2 = *(void *)(v0 + 832);
    return v19(v2);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 912);
    uint64_t v5 = *(void *)(v0 + 896);
    uint64_t v6 = *(void *)(v0 + 888);
    uint64_t v7 = *(void *)(v0 + 880);
    uint64_t v8 = *(void *)(v0 + 832);
    uint64_t v9 = *(void **)(v0 + 808);
    swift_release();
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    *(unsigned char *)(v0 + 152) = -1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v8, v7);
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v11 = (v5 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v12 + v10, v4, v7);
    *(void *)(v12 + v11) = 1;
    *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v9;
    v9;
    sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0xD000000000000030, 0x80000001000AD520, v0 + 112, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v12);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 792);
    uint64_t v14 = v13 + 1;
    if (v13 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = *(void (**)(uint64_t, void))(v0 + 816);
      *(void *)(v0 + 792) = v14;
      v15(1, 0);
      uint64_t v16 = *(void *)(v0 + 824);
      unint64_t v17 = *(uint64_t **)(v0 + 816);
      swift_retain();
      sub_10008D62C(v14, 0xD00000000000001ELL, 0x80000001000AD4C0, v17, v16, 14478);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
  return result;
}

uint64_t sub_1000576F4()
{
  uint64_t v1 = *(void *)(v0 + 952);
  uint64_t v2 = *(void *)(v0 + 912);
  uint64_t v3 = *(void *)(v0 + 888);
  uint64_t v18 = *(void *)(v0 + 880);
  uint64_t v19 = *(void *)(v0 + 896);
  uint64_t v17 = *(void *)(v0 + 832);
  uint64_t v20 = *(void **)(v0 + 808);
  swift_release();
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 96) = 0;
  *(_OWORD *)(v0 + 80) = 0u;
  *(unsigned char *)(v0 + 104) = -1;
  sub_1000A4C40(64);
  v22._countAndFlagsBits = 0xD00000000000003ELL;
  v22._object = (void *)0x80000001000AD4E0;
  sub_1000A4880(v22);
  *(void *)(v0 + 800) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  v23._countAndFlagsBits = sub_1000A4810();
  sub_1000A4880(v23);
  swift_bridgeObjectRelease();
  sub_1000A4800();
  id v4 = objc_allocWithZone((Class)NSError);
  NSString v5 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithDomain:v5 code:12 userInfo:0];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v17, v18);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v19 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v2, v18);
  *(void *)(v9 + v8) = 1;
  *(void *)(v9 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  v20;
  sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0, 0xE000000000000000, v0 + 64, v6, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v9);
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 792);
  uint64_t v12 = v11 + 1;
  if (v11 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, id))(v0 + 816);
    *(void *)(v0 + 792) = v12;
    v13(1, v6);
    swift_bridgeObjectRelease();

    swift_errorRelease();
    uint64_t v14 = *(void *)(v0 + 824);
    uint64_t v15 = *(uint64_t **)(v0 + 816);
    swift_retain();
    sub_10008D62C(v12, 0xD00000000000001ELL, 0x80000001000AD4C0, v15, v14, 14478);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  return result;
}

uint64_t sub_100057A60(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 58) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 936);
  uint64_t v4 = *(void *)(v2 + 928);
  return _swift_task_switch(sub_100057B88, v4, v3);
}

uint64_t sub_100057B88()
{
  int v1 = *(unsigned __int8 *)(v0 + 58);
  uint64_t v2 = *(void *)(v0 + 896);
  uint64_t v3 = *(void *)(v0 + 888);
  swift_release();
  uint64_t v4 = v2 + 7;
  uint64_t v5 = *(void *)(v0 + 912);
  uint64_t v6 = *(void *)(v0 + 880);
  uint64_t v7 = *(void *)(v0 + 832);
  unint64_t v8 = *(void **)(v0 + 808);
  uint64_t v9 = (void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v0 + 888) + 32);
  if (v1 != 1)
  {
    *(void *)(v0 + 192) = 0;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(unsigned char *)(v0 + 200) = -1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v7, v6);
    unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    unint64_t v18 = (v17 + v4) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    (*v9)(v19 + v17, v5, v6);
    *(void *)(v19 + v18) = 3;
    *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    v8;
    sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0x61685365426E6163, 0xEB00000000646572, v0 + 160, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v19);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v20 = *(void *)(v0 + 792);
    uint64_t v15 = v20 + 1;
    if (v20 != -1)
    {
      uint64_t v21 = *(void (**)(uint64_t, void))(v0 + 816);
      *(void *)(v0 + 792) = v15;
      v21(3, 0);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  *(void *)(v0 + 240) = 0;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(unsigned char *)(v0 + 248) = -1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v7, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v11 = (v10 + v4) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  (*v9)(v12 + v10, v5, v6);
  *(void *)(v12 + v11) = 6;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
  v8;
  sub_100058054(0xD00000000000001ELL, 0x80000001000AD4C0, 0xD000000000000024, 0x80000001000AD560, v0 + 208, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094CC0, v12);
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v14 = *(void *)(v0 + 792);
  uint64_t v15 = v14 + 1;
  if (v14 == -1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = *(void (**)(uint64_t, void))(v0 + 816);
  *(void *)(v0 + 792) = v15;
  v16(6, 0);
LABEL_6:
  uint64_t v22 = *(void *)(v0 + 824);
  Swift::String v23 = *(uint64_t **)(v0 + 816);
  swift_retain();
  sub_10008D62C(v15, 0xD00000000000001ELL, 0x80000001000AD4C0, v23, v22, 14478);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100057F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  a5[3] = type metadata accessor for SPIAnalyticsEvent();
  a5[4] = (uint64_t)&off_1000C2B58;
  unint64_t v10 = sub_1000931B4(a5);
  unint64_t v11 = (int *)sub_100008704(&qword_1000CB370);
  uint64_t v12 = v11[12];
  uint64_t v13 = (uint64_t *)((char *)v10 + v11[16]);
  uint64_t v14 = (uint64_t)v10 + v11[20];
  uint64_t v15 = sub_1000A42E0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v10, a2, v15);
  *(uint64_t *)((char *)v10 + v12) = a3;
  uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v17 = *(void *)(a4 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *uint64_t v13 = v16;
  v13[1] = v17;
  sub_1000409B0(a1, v14, &qword_1000CB378);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_100093174(a1, (void (*)(void, void, void, void, void, void))sub_100093160);
}

uint64_t sub_100058054(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t *__return_ptr, uint64_t *), uint64_t a8)
{
  void (*v121)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  char *v126;
  int v127;
  os_log_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134[2];
  uint64_t v135;
  long long v136;
  uint64_t v137;
  uint64_t v138[3];
  uint64_t v139;
  uint64_t v140[5];
  void v141[5];
  unsigned __int8 v142;
  unsigned char v143[48];
  void v144[6];
  uint64_t v145[5];
  char v146;

  uint64_t v113 = a5;
  uint64_t v120 = a8;
  uint64_t v121 = a7;
  unint64_t v116 = a4;
  NSBundle v123 = a3;
  sub_1000409B0(a5, (uint64_t)v141, &qword_1000CB378);
  unint64_t v11 = (char *)v141[2];
  uint64_t v130 = v141[3];
  uint64_t v131 = v141[1];
  NSBundle v128 = (os_log_t)v141[0];
  uint64_t v129 = v141[4];
  int v12 = v142;
  uint64_t v13 = sub_1000A4460();
  unint64_t v132 = *(void *)(v13 - 8);
  uint64_t v133 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v124 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v119 = (char *)&v109 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v126 = (char *)&v109 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v109 - v21;
  __chkstk_darwin(v20);
  Swift::String v117 = ((char *)&v109 - v23);
  uint64_t v24 = sub_1000A48D0();
  sub_10003C8F4(v24, v25, a1, a2);
  char v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v125 = a2;
  Swift::String v118 = a1;
  if (v27)
  {
    uint64_t v122 = 0;
    unint64_t v29 = 0xE000000000000000;
    unint64_t v30 = v126;
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    id v34 = v11;
    uint64_t v35 = v22;
    uint64_t v36 = v113;
    sub_1000409B0(v113, (uint64_t)v143, &qword_1000CB378);
    if (v143[40] == 255)
    {
      uint64_t v37 = v128;
      uint64_t v75 = v129;
      uint64_t v77 = v130;
      uint64_t v61 = v131;
    }
    else
    {
      sub_100092640((uint64_t)v143, (uint64_t)v144);
      uint64_t v37 = v128;
      sub_10003E7A4((uint64_t)v128, v131, v34, v130, v129, v12);
      sub_1000A4440();
      unint64_t v38 = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v36, (void (*)(void, void, void, void, void, void))sub_100093160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v36, (void (*)(void, void, void, void, void, void))sub_100093160);
      uint64_t v39 = sub_1000A4450();
      os_log_type_t v40 = sub_1000A4A20();
      Swift::String v117 = v39;
      int v112 = v40;
      BOOL v41 = os_log_type_enabled(v39, v40);
      uint64_t v42 = v35;
      if (v41)
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        v140[0] = v110;
        *(_DWORD *)uint64_t v43 = 136315650;
        unint64_t v115 = v29;
        swift_bridgeObjectRetain();
        v145[0] = sub_10003CFA4(v122, v115, v140);
        uint64_t v127 = v12;
        Swift::String v111 = v42;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 12) = 2080;
        if (v38) {
          uint64_t v44 = v123;
        }
        else {
          uint64_t v44 = 0;
        }
        if (v38) {
          unint64_t v45 = v38;
        }
        else {
          unint64_t v45 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        v145[0] = sub_10003CFA4(v44, v45, v140);
        int v12 = v127;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        unint64_t v30 = v126;
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 22) = 2080;
        sub_100092640((uint64_t)v144, (uint64_t)v145);
        sub_10003E7A4((uint64_t)v37, v131, v34, v130, v129, v12);
        uint64_t v46 = sub_1000A4810();
        v145[0] = sub_10003CFA4(v46, v47, v140);
        unint64_t v29 = v115;
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        uint64_t v48 = v113;
        sub_100093174(v113, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v48, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        uint64_t v49 = v117;
        _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v112, "SharingError in %s %s, error: %s", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100093174(v113, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v111, v133);
      }
      else
      {
        sub_100093174(v36, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100093174(v36, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v36, (void (*)(void, void, void, void, void, void))sub_1000428F4);

        (*(void (**)(char *, uint64_t))(v132 + 8))(v35, v133);
      }
      uint64_t v78 = v130;
      uint64_t v61 = v131;
      uint64_t v75 = v129;
      sub_10003E7A4((uint64_t)v37, v131, v34, v130, v129, v12);
      uint64_t v77 = v78;
    }
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  sub_1000A48E0();
  swift_bridgeObjectRelease();
  uint64_t v122 = sub_1000A4830();
  unint64_t v29 = v28;
  swift_bridgeObjectRelease();
  unint64_t v30 = v126;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  unint64_t v31 = v116;
  if (v116)
  {
    id v32 = a6;
    unint64_t v33 = v31;
  }
  else
  {
    id v50 = a6;
    id v51 = [v50 description];
    NSBundle v123 = sub_1000A4800();
    unint64_t v52 = v29;
    unint64_t v54 = v53;

    unint64_t v33 = v54;
    unint64_t v29 = v52;
  }
  swift_bridgeObjectRetain();
  id v55 = [a6 code];
  unint64_t v56 = 0xED0000726F727265;
  unint64_t v57 = 0x206C6172656E6567;
  if (v55 == (id)10) {
    int v58 = 13;
  }
  else {
    int v58 = 11;
  }
  if (v55 == (id)10)
  {
    unint64_t v57 = 0xD000000000000019;
    unint64_t v56 = 0x80000001000ACE10;
  }
  if (v55 == (id)12) {
    int v12 = 12;
  }
  else {
    int v12 = v58;
  }
  if (v55 == (id)12) {
    unint64_t v59 = 0xD000000000000018;
  }
  else {
    unint64_t v59 = v57;
  }
  uint64_t v131 = v59;
  if (v55 == (id)12) {
    unint64_t v60 = 0x80000001000ACE30;
  }
  else {
    unint64_t v60 = v56;
  }
  uint64_t v61 = v125;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v62 = v117;
  sub_1000A4440();
  id v63 = a6;
  swift_bridgeObjectRetain_n();
  id v64 = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1000A4450();
  os_log_type_t v66 = sub_1000A4A20();
  int v67 = v66;
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v130 = swift_slowAlloc();
    v145[0] = v130;
    *(_DWORD *)uint64_t v68 = 136315906;
    LODWORD(v129) = v67;
    swift_bridgeObjectRetain();
    v144[0] = sub_10003CFA4(v122, v29, v145);
    uint64_t v127 = v12;
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    NSBundle v128 = v65;
    *(_WORD *)(v68 + 12) = 2080;
    swift_bridgeObjectRetain();
    v144[0] = sub_10003CFA4(v123, v33, v145);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v68 + 22) = 2080;
    swift_bridgeObjectRetain();
    v144[0] = sub_10003CFA4(v131, v60, v145);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v68 + 32) = 2080;
    id v69 = v64;
    id v70 = [v69 description];
    uint64_t v71 = sub_1000A4800();
    unint64_t v72 = v33;
    unint64_t v74 = v73;

    v144[0] = sub_10003CFA4(v71, v74, v145);
    int v12 = v127;
    sub_1000A4BC0();

    uint64_t v75 = v72;
    swift_bridgeObjectRelease();
    os_log_t v76 = v128;
    _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v129, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v68, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(NSObject *, uint64_t))(v132 + 8))(v117, v133);
    id v34 = 0;
    uint64_t v37 = v118;
    uint64_t v61 = v125;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(NSObject *, uint64_t))(v132 + 8))(v62, v133);
    id v34 = 0;
    uint64_t v75 = v33;
    uint64_t v37 = v118;
  }
  uint64_t v77 = v123;
  unint64_t v30 = v126;
LABEL_37:
  v145[0] = (uint64_t)v37;
  v145[1] = v61;
  v145[2] = (uint64_t)v34;
  v145[3] = v77;
  uint64_t v130 = v77;
  v145[4] = v75;
  uint64_t v146 = v12;
  v121(v140, v145);
  sub_10001F904((uint64_t)v140, (uint64_t)&v136, &qword_1000CBAB8);
  NSBundle v128 = v37;
  uint64_t v129 = v75;
  uint64_t v127 = v12;
  uint64_t v126 = v34;
  uint64_t v131 = v61;
  if (v137)
  {
    sub_1000930E4(&v136, (uint64_t)v138);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v138, (uint64_t)&v136);
    swift_bridgeObjectRetain_n();
    uint64_t v79 = sub_1000A4450();
    os_log_type_t v80 = sub_1000A4A40();
    BOOL v81 = os_log_type_enabled(v79, v80);
    unint64_t v115 = v29;
    if (v81)
    {
      uint64_t v82 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_10003CFA4(v122, v29, v134);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v82 + 12) = 2080;
      sub_100046174(&v136, v137);
      unint64_t v83 = sub_10004248C();
      uint64_t v135 = sub_10003CFA4(v83, v84, v134);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v136);
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Finishing %s, sending event %s", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v136);
    }

    uint64_t v85 = *(void (**)(char *, uint64_t))(v132 + 8);
    v85(v30, v133);
    uint64_t v88 = v119;
    uint64_t v89 = sub_100046174(v138, v139);
    sub_100081C20((uint64_t)v89);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v138, (uint64_t)&v136);
    swift_bridgeObjectRetain_n();
    uint64_t v90 = (char *)v114;
    unint64_t v91 = sub_1000A4450();
    os_log_type_t v92 = sub_1000A4A40();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      NSBundle v123 = swift_slowAlloc();
      uint64_t v135 = v123;
      *(_DWORD *)uint64_t v93 = 136315650;
      uint64_t v94 = *(void *)&v90[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v134[0] = *(void *)&v90[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v134[1] = v94;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v95 = sub_1000A4810();
      v134[0] = sub_10003CFA4(v95, v96, &v135);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 12) = 2080;
      sub_100046174(&v136, v137);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v97 = sub_1000A4780();
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      v134[0] = sub_10003CFA4(v97, v99, &v135);
      sub_1000A4BC0();
      uint64_t v100 = v85;
      uint64_t v101 = v133;
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v136);
      *(_WORD *)(v93 + 22) = 2080;
      unint64_t v102 = v125;
      swift_bridgeObjectRetain();
      v134[0] = sub_10003CFA4((uint64_t)v118, v102, &v135);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v93, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v100(v119, v101);
    }
    else
    {

      sub_100041414((uint64_t)&v136);
      swift_bridgeObjectRelease_n();
      v85(v88, v133);
    }
    unint64_t v29 = v115;
    id v34 = v126;
    uint64_t v61 = v131;
    sub_100046174(v138, v139);
    BOOL v103 = sub_100043358();
    if (v103) {
      uint64_t v86 = 0x7272652068746957;
    }
    else {
      uint64_t v86 = 0x73736563637553;
    }
    if (v103) {
      unint64_t v87 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v87 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v138);
  }
  else
  {
    uint64_t v86 = 0x73736563637553;
    sub_10000B988((uint64_t)&v136, &qword_1000CBAB8);
    unint64_t v87 = 0xE700000000000000;
  }
  uint64_t v104 = v124;
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v105 = sub_1000A4450();
  os_log_type_t v106 = sub_1000A4A40();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = swift_slowAlloc();
    v138[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v107 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&uint64_t v136 = sub_10003CFA4(v122, v29, v138);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v107 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&uint64_t v136 = sub_10003CFA4(v86, v87, v138);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v105, v106, "Finished %s: %s.", (uint8_t *)v107, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4((uint64_t)v128, v131, v126, v130, v129, v127);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v124, v133);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4((uint64_t)v128, v61, v34, v130, v129, v127);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v104, v133);
  }
  return sub_10000B988((uint64_t)v140, &qword_1000CBAB8);
}

uint64_t sub_1000591AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_100008704(&qword_1000CA3B0);
  v4[3] = swift_task_alloc();
  uint64_t v5 = sub_1000A42E0();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  sub_1000A4990();
  v4[7] = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  v4[8] = v7;
  v4[9] = v6;
  return _swift_task_switch(sub_1000592D0, v7, v6);
}

uint64_t sub_1000592D0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000B988(v0[3], &qword_1000CA3B0);
    char v4 = 0;
  }
  else
  {
    uint64_t v6 = v0[5];
    uint64_t v5 = v0[6];
    uint64_t v7 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v5, v0[3], v7);
    int v8 = shareStatus(url:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    char v4 = (v8 & 0x10001) == 1;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100059454;
  uint64_t v10 = v0[2];
  return sub_10003B310(60, v10, v4);
}

uint64_t sub_100059454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_100059608;
  }
  else {
    uint64_t v5 = sub_100059590;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100059590()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100059608()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100059680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = a7;
  uint64_t v36 = a8;
  uint64_t v37 = a3;
  int v35 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v28 = a2;
  uint64_t v9 = sub_1000A42E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  unint64_t v30 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = 0x3A4C5255656C6966;
  unint64_t v39 = 0xE900000000000020;
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v29 = v9;
  v40._countAndFlagsBits = sub_1000A4D50();
  sub_1000A4880(v40);
  swift_bridgeObjectRelease();
  sub_1000818F0(v38, v39, 0xD000000000000068, 0x80000001000AD370);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v15 = sub_1000A49C0();
  uint64_t v16 = (uint64_t)v14;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  sub_1000A4990();
  id v17 = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1000A4980();
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = &protocol witness table for MainActor;
  uint64_t v24 = v32;
  *((void *)v23 + 4) = v17;
  *((void *)v23 + 5) = v24;
  *((void *)v23 + 6) = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v19], v30, v29);
  *(void *)&v23[v20] = v28;
  *(void *)&v23[v21] = v37;
  uint64_t v25 = v34;
  *(void *)&v23[v22] = v33;
  char v26 = &v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8];
  *(void *)char v26 = v25;
  v26[8] = v35;
  sub_100055948(v16, (uint64_t)&unk_1000CBB80, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1000599B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 59) = v18;
  *(void *)(v8 + 792) = v17;
  *(_OWORD *)(v8 + 776) = v16;
  *(void *)(v8 + 768) = a8;
  *(void *)(v8 + 760) = a7;
  *(void *)(v8 + 752) = a6;
  *(void *)(v8 + 744) = a5;
  *(void *)(v8 + 736) = a4;
  uint64_t v9 = sub_1000A4460();
  *(void *)(v8 + 800) = v9;
  *(void *)(v8 + 808) = *(void *)(v9 - 8);
  *(void *)(v8 + 816) = swift_task_alloc();
  *(void *)(v8 + 824) = swift_task_alloc();
  uint64_t v10 = sub_1000A42E0();
  *(void *)(v8 + 832) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 840) = v11;
  *(void *)(v8 + 848) = *(void *)(v11 + 64);
  *(void *)(v8 + 856) = swift_task_alloc();
  *(void *)(v8 + 864) = sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 872) = swift_task_alloc();
  *(void *)(v8 + 880) = swift_task_alloc();
  *(void *)(v8 + 888) = swift_task_alloc();
  *(void *)(v8 + 896) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 904) = sub_1000A4980();
  uint64_t v13 = sub_1000A4950();
  *(void *)(v8 + 912) = v13;
  *(void *)(v8 + 920) = v12;
  return _swift_task_switch(sub_100059BAC, v13, v12);
}

uint64_t sub_100059BAC()
{
  uint64_t v1 = v0[112];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[104];
  uint64_t v4 = v0[95];
  uint64_t v5 = v0[94];
  uint64_t v6 = v0[93];
  v0[90] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[116] = sub_100047828();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[117] = v7;
  v0[118] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v4, v3);
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
  v0[119] = v8;
  v0[120] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v1, 0, 1, v3);
  uint64_t v9 = swift_allocObject();
  v0[121] = v9;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[122] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100059D3C;
  uint64_t v11 = v0[112];
  return sub_1000479C0(v11, (uint64_t)sub_1000947BC, v9);
}

uint64_t sub_100059D3C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 896);
  *(void *)(*v1 + 984) = a1;
  swift_task_dealloc();
  swift_release();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 920);
  uint64_t v5 = *(void *)(v2 + 912);
  return _swift_task_switch(sub_100059EAC, v5, v4);
}

uint64_t sub_100059EAC()
{
  uint64_t v1 = *(void **)(v0 + 984);
  if (v1)
  {
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v3 = *(void *)(v0 + 856);
    uint64_t v59 = *(void *)(v0 + 848);
    uint64_t v4 = *(void *)(v0 + 840);
    uint64_t v5 = *(void *)(v0 + 832);
    uint64_t v6 = *(void *)(v0 + 760);
    uint64_t v62 = *(void **)(v0 + 736);
    id v60 = v1;
    swift_release();
    *(void *)(v0 + 336) = 0;
    *(_OWORD *)(v0 + 304) = 0u;
    *(_OWORD *)(v0 + 320) = 0u;
    *(unsigned char *)(v0 + 344) = -1;
    v2(v3, v6, v5);
    unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    *(unsigned char *)(v8 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v3, v5);
    *(void *)(v8 + ((v59 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v62;
    id v9 = v60;
    id v10 = v62;
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD00000000000001FLL, 0x80000001000AD410, v0 + 304, v1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v8);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 720);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (!v13)
    {
      uint64_t v15 = *(void *)(v0 + 984);
      long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
      uint64_t v17 = *(void *)(v0 + 896);
      uint64_t v18 = *(void *)(v0 + 832);
      unint64_t v19 = *(void (**)(uint64_t, void, uint64_t))(v0 + 744);
      *(void *)(v0 + 720) = v14;
      v16(v17, 1, 1, v18);
      id v20 = v9;
      v19(v17, 0, v15);

      sub_10000B988(v17, &qword_1000CA3B0);
      swift_release();

LABEL_4:
      uint64_t v21 = *(void *)(v0 + 752);
      unint64_t v22 = *(void (**)(void, void, void))(v0 + 744);
      uint64_t v23 = *(void *)(v0 + 720);
      swift_retain();
      sub_10008BF84(v23, 0xD000000000000068, 0x80000001000AD370, v22, v21);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
      return v24();
    }
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v25 = *(void *)(v0 + 928);
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  *(void *)(v0 + 992) = v26;
  if (!v26) {
    return sub_1000A4CD0();
  }
  uint64_t v63 = v26;
  char v27 = (uint64_t *)(*(void *)(v0 + 736) + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v28 = v27[1];
  if (v28)
  {
    uint64_t v29 = *v27;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 688) = v29;
    *(void *)(v0 + 696) = v28;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
    uint64_t v25 = *(void *)(v0 + 928);
  }
  else
  {
    swift_retain();
  }
  unint64_t v30 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 952);
  uint64_t v31 = *(void *)(v0 + 896);
  uint64_t v32 = *(void *)(v0 + 832);
  uint64_t v33 = *(void *)(v0 + 776);
  uint64_t v34 = *(void *)(v0 + 768);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 936))(v31, *(void *)(v0 + 760), v32);
  v30(v31, 0, 1, v32);
  uint64_t v35 = v25 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_fileOrFolderURL;
  swift_beginAccess();
  sub_1000947C4(v31, v35);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10008179C(v33);
  sub_10009D81C(v34);
  swift_bridgeObjectRelease();
  LOBYTE(v31) = sub_1000A42B0();
  sub_1000A4270(v36);
  uint64_t v38 = v37;
  unsigned __int8 v39 = objc_msgSend(v37, "br_isInSyncedLocation");

  if (v31) {
    sub_1000A4290();
  }
  if ((v39 & 1) == 0)
  {
    int v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v41 = *(void *)(v0 + 856);
    uint64_t v42 = *(void *)(v0 + 848);
    uint64_t v43 = *(void *)(v0 + 840);
    uint64_t v44 = *(void *)(v0 + 832);
    uint64_t v57 = *(void *)(v0 + 760);
    uint64_t v61 = *(void **)(v0 + 736);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v45 = objc_allocWithZone((Class)NSError);
    NSString v46 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v47 = [v45 initWithDomain:v46 code:12 userInfo:0];

    uint64_t v48 = v41;
    v58(v41, v57, v44);
    unint64_t v49 = (*(unsigned __int8 *)(v43 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = 0;
    *(void *)(v50 + 24) = 0;
    *(unsigned char *)(v50 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v50 + v49, v48, v44);
    *(void *)(v50 + ((v42 + v49 + 7) & 0xFFFFFFFFFFFFFFF8)) = v61;
    v61;
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD00000000000002ALL, 0x80000001000AD3E0, v0 + 16, v47, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v50);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v51 = *(void *)(v0 + 720);
    BOOL v13 = __CFADD__(v51, 1);
    uint64_t v52 = v51 + 1;
    if (!v13)
    {
      unint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
      uint64_t v54 = *(void *)(v0 + 896);
      uint64_t v55 = *(void *)(v0 + 832);
      unint64_t v56 = *(void (**)(uint64_t, void, id))(v0 + 744);
      *(void *)(v0 + 720) = v52;
      v53(v54, 1, 1, v55);
      id v20 = v47;
      v56(v54, 0, v47);

      sub_10000B988(v54, &qword_1000CA3B0);
      swift_release();
      swift_release();
      goto LABEL_4;
    }
LABEL_21:
    __break(1u);
    return result;
  }
  id v64 = (uint64_t (*)(uint64_t))((char *)&dword_1000CBB20 + dword_1000CBB20);
  Swift::String v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 1000) = v40;
  void *v40 = v0;
  v40[1] = sub_10005A664;
  return v64(v63);
}

uint64_t sub_10005A664(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 105) = a1;
  *(void *)(v4 + 1008) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 920);
  uint64_t v6 = *(void *)(v3 + 912);
  if (v1) {
    unint64_t v7 = sub_10005ACC0;
  }
  else {
    unint64_t v7 = sub_10005A7AC;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10005A7AC()
{
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = *(unsigned __int8 *)(v0 + 105);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    *(_DWORD *)(v0 + 60) = v3;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "url is a shared location: %{BOOL}d", v4, 8u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 808);
  uint64_t v7 = *(void *)(v0 + 800);

  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(void *)(v0 + 1016) = v8;
  *(void *)(v0 + 1024) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v5, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v9 = *(void *)(v0 + 992);
    unsigned __int8 v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000CBA78 + dword_1000CBA78);
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1032) = v10;
    *id v10 = v0;
    v10[1] = sub_10005B1A8;
    char v11 = *(unsigned char *)(v0 + 59);
    uint64_t v12 = *(void *)(v0 + 792);
    uint64_t v13 = *(void *)(v0 + 784);
    return v39(v9, v13, v12, v11);
  }
  else
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v15 = *(void *)(v0 + 856);
    uint64_t v38 = *(void *)(v0 + 848);
    uint64_t v16 = *(void *)(v0 + 840);
    uint64_t v17 = *(void *)(v0 + 832);
    uint64_t v36 = *(void *)(v0 + 760);
    uint64_t v18 = *(void **)(v0 + 736);
    swift_release();
    *(void *)(v0 + 96) = 0;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(unsigned char *)(v0 + 104) = -1;
    sub_1000A4800();
    id v19 = objc_allocWithZone((Class)NSError);
    NSString v20 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithDomain:v20 code:10 userInfo:0];

    v37(v15, v36, v17);
    unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    *(void *)(v23 + 24) = 0;
    *(unsigned char *)(v23 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32))(v23 + v22, v15, v17);
    *(void *)(v23 + ((v38 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18;
    v18;
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 64, v21, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v23);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v24 = *(void *)(v0 + 720);
    BOOL v25 = __CFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
    }
    else
    {
      char v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
      uint64_t v28 = *(void *)(v0 + 896);
      uint64_t v29 = *(void *)(v0 + 832);
      unint64_t v30 = *(void (**)(uint64_t, void, id))(v0 + 744);
      *(void *)(v0 + 720) = v26;
      v27(v28, 1, 1, v29);
      id v31 = v21;
      v30(v28, 0, v21);

      sub_10000B988(v28, &qword_1000CA3B0);
      swift_release();
      swift_release();

      uint64_t v32 = *(void *)(v0 + 752);
      uint64_t v33 = *(void (**)(void, void, void))(v0 + 744);
      uint64_t v34 = *(void *)(v0 + 720);
      swift_retain();
      sub_10008BF84(v34, 0xD000000000000068, 0x80000001000AD370, v33, v32);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
      return v35();
    }
  }
  return result;
}

uint64_t sub_10005ACC0()
{
  uint64_t v1 = *(void *)(v0 + 1008);
  swift_release();
  *(void *)(v0 + 728) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_type_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v3 = *(void *)(v0 + 856);
    uint64_t v4 = *(void *)(v0 + 840);
    uint64_t v5 = *(void *)(v0 + 832);
    uint64_t v6 = *(void *)(v0 + 760);
    uint64_t v30 = *(void *)(v0 + 848);
    id v31 = *(void **)(v0 + 736);
    swift_errorRelease();
    sub_100092640(v0 + 448, v0 + 160);
    uint64_t v7 = *(void *)(v0 + 480);
    char v8 = *(unsigned char *)(v0 + 488);
    long long v9 = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 128) = v9;
    *(void *)(v0 + 144) = v7;
    *(unsigned char *)(v0 + 152) = v8;
    v2(v3, v6, v5);
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(unsigned char *)(v11 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v3, v5);
    *(void *)(v11 + ((v30 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v31;
    v31;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v11);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 720);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
    uint64_t v17 = *(void *)(v0 + 872);
    uint64_t v18 = *(void *)(v0 + 832);
    id v19 = *(void (**)(uint64_t, void, id))(v0 + 744);
    *(void *)(v0 + 720) = v15;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v20 = sub_100094F20(0xD000000000000068, 0x80000001000AD370);
    v16(v17, 1, 1, v18);
    id v21 = (void *)sub_1000A4230();
    id v22 = (id)CKXPCSuitableError();

    v19(v17, 0, v22);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v17, &qword_1000CA3B0);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v23 = *(void *)(v0 + 752);
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 744);
    uint64_t v25 = *(void *)(v0 + 720);
    swift_retain();
    sub_10008BF84(v25, 0xD000000000000068, 0x80000001000AD370, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 752);
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 744);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v29 = *(void *)(v0 + 720);
    swift_retain();
    sub_10008BF84(v29, 0xD000000000000068, 0x80000001000AD370, v28, v27);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

uint64_t sub_10005B1A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1040) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 920);
  uint64_t v4 = *(void *)(v2 + 912);
  if (v0) {
    uint64_t v5 = sub_10005B538;
  }
  else {
    uint64_t v5 = sub_10005B2E4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005B2E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 58);
  swift_release();
  if (v1 == 1)
  {
    sub_1000A4440();
    uint64_t v2 = sub_1000A4450();
    os_log_type_t v3 = sub_1000A4A20();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "addParticipantsToShare (internal) will return an error for this public share", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
    uint64_t v6 = *(void *)(v0 + 816);
    uint64_t v7 = *(void *)(v0 + 800);

    v5(v6, v7);
  }
  if (*(unsigned char *)(v0 + 105))
  {
    BOOL v14 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1000CBB88 + dword_1000CBB88);
    char v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1064) = v8;
    *char v8 = v0;
    v8[1] = sub_10005BFAC;
    uint64_t v9 = *(void *)(v0 + 928);
    char v10 = *(unsigned char *)(v0 + 59);
    return v14(v0 + 352, v9, v10);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 992);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000CBA58 + dword_1000CBA58);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 1048) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10005BA20;
    return v15(300, v12);
  }
}

uint64_t sub_10005B538()
{
  uint64_t v1 = *(void *)(v0 + 1040);
  swift_release();
  *(void *)(v0 + 728) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v3 = *(void *)(v0 + 856);
    uint64_t v4 = *(void *)(v0 + 840);
    uint64_t v5 = *(void *)(v0 + 832);
    uint64_t v6 = *(void *)(v0 + 760);
    uint64_t v30 = *(void *)(v0 + 848);
    id v31 = *(void **)(v0 + 736);
    swift_errorRelease();
    sub_100092640(v0 + 448, v0 + 160);
    uint64_t v7 = *(void *)(v0 + 480);
    char v8 = *(unsigned char *)(v0 + 488);
    long long v9 = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 128) = v9;
    *(void *)(v0 + 144) = v7;
    *(unsigned char *)(v0 + 152) = v8;
    v2(v3, v6, v5);
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(unsigned char *)(v11 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v3, v5);
    *(void *)(v11 + ((v30 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v31;
    v31;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v11);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 720);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
    uint64_t v17 = *(void *)(v0 + 872);
    uint64_t v18 = *(void *)(v0 + 832);
    id v19 = *(void (**)(uint64_t, void, id))(v0 + 744);
    *(void *)(v0 + 720) = v15;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v20 = sub_100094F20(0xD000000000000068, 0x80000001000AD370);
    v16(v17, 1, 1, v18);
    id v21 = (void *)sub_1000A4230();
    id v22 = (id)CKXPCSuitableError();

    v19(v17, 0, v22);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v17, &qword_1000CA3B0);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v23 = *(void *)(v0 + 752);
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 744);
    uint64_t v25 = *(void *)(v0 + 720);
    swift_retain();
    sub_10008BF84(v25, 0xD000000000000068, 0x80000001000AD370, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 752);
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 744);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v29 = *(void *)(v0 + 720);
    swift_retain();
    sub_10008BF84(v29, 0xD000000000000068, 0x80000001000AD370, v28, v27);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

uint64_t sub_10005BA20(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1056) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 920);
  uint64_t v4 = *(void *)(v2 + 912);
  return _swift_task_switch(sub_10005BB48, v4, v3);
}

uint64_t sub_10005BB48()
{
  uint64_t v32 = *(void *)(v0 + 1056);
  if (v32)
  {
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
    uint64_t v2 = *(void *)(v0 + 856);
    uint64_t v31 = *(void *)(v0 + 848);
    uint64_t v3 = *(void *)(v0 + 840);
    uint64_t v4 = *(void *)(v0 + 832);
    uint64_t v5 = *(void *)(v0 + 760);
    uint64_t v6 = *(void **)(v0 + 736);
    swift_release();
    *(void *)(v0 + 712) = v32;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    swift_dynamicCast();
    uint64_t v30 = v0 + 256;
    sub_100092640(v0 + 400, v0 + 256);
    uint64_t v7 = *(void *)(v0 + 432);
    char v8 = *(unsigned char *)(v0 + 440);
    long long v9 = *(_OWORD *)(v0 + 416);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 400);
    *(_OWORD *)(v0 + 224) = v9;
    *(void *)(v0 + 240) = v7;
    *(unsigned char *)(v0 + 248) = v8;
    v1(v2, v5, v4);
    unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    *(unsigned char *)(v11 + 32) = 0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11 + v10, v2, v4);
    *(void *)(v11 + ((v31 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
    v6;
    sub_100058054(0xD000000000000068, 0x80000001000AD370, 0xD00000000000002ALL, 0x80000001000AD3E0, v0 + 208, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v11);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 720);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 952);
      uint64_t v17 = *(void *)(v0 + 888);
      uint64_t v18 = *(void *)(v0 + 832);
      id v19 = *(void (**)(uint64_t, void, id))(v0 + 744);
      *(void *)(v0 + 720) = v15;
      sub_100093174(v30, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
      id v20 = sub_100094F20(0xD000000000000068, 0x80000001000AD370);
      v16(v17, 1, 1, v18);
      id v21 = (void *)sub_1000A4230();
      id v22 = (id)CKXPCSuitableError();

      v19(v17, 0, v22);
      sub_100093174(v30, (void (*)(void, void, void, void, void, void))sub_10003E804);

      sub_10000B988(v17, &qword_1000CA3B0);
      sub_100093174(v30, (void (*)(void, void, void, void, void, void))sub_10003E804);
      swift_release();
      swift_release();
      swift_errorRelease();
      uint64_t v23 = *(void *)(v0 + 752);
      uint64_t v24 = *(void (**)(void, void, void))(v0 + 744);
      uint64_t v25 = *(void *)(v0 + 720);
      swift_retain();
      sub_10008BF84(v25, 0xD000000000000068, 0x80000001000AD370, v24, v23);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
      return v26();
    }
  }
  else
  {
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1000CBB88 + dword_1000CBB88);
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 1064) = v27;
    void *v27 = v0;
    v27[1] = sub_10005BFAC;
    uint64_t v28 = *(void *)(v0 + 928);
    char v29 = *(unsigned char *)(v0 + 59);
    return v33(v0 + 352, v28, v29);
  }
  return result;
}

uint64_t sub_10005BFAC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 920);
  uint64_t v3 = *(void *)(v1 + 912);
  return _swift_task_switch(sub_10005C0CC, v3, v2);
}

uint64_t sub_10005C0CC()
{
  uint64_t v1 = (char *)v0[112];
  uint64_t v2 = v0[110];
  uint64_t v18 = v0[95];
  uint64_t v16 = (void (*)(char *, id, id))v0[93];
  uint64_t v17 = (void *)v0[92];
  swift_release();
  unint64_t v15 = sub_10009A5DC();
  uint64_t v4 = v3;
  char v6 = v5;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = (void *)v0[88];
  sub_10001F904((uint64_t)v1, v2, &qword_1000CA3B0);
  uint64_t v8 = sub_1000A4810();
  sub_10005C8BC(v18, v1, v7, (uint64_t)(v0 + 44), v8, v9, 0, v15 & 0x101FFFFFFFFFFLL, v4, v6 & 1, 0xD000000000000068, 0x80000001000AD370, v17, v0 + 90, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100093174((uint64_t)(v0 + 44), (void (*)(void, void, void, void, void, void))sub_1000428F4);
  swift_release();
  swift_release();
  sub_10000B988((uint64_t)v1, &qword_1000CA3B0);
  swift_beginAccess();
  uint64_t v10 = v0[94];
  uint64_t v11 = (void (*)(void, void, void))v0[93];
  uint64_t v12 = v0[90];
  swift_retain();
  sub_10008BF84(v12, 0xD000000000000068, 0x80000001000AD370, v11, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_10005C3DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    unint64_t v15 = (void *)sub_1000A4230();
  }
  else {
    unint64_t v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  uint64_t v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    uint64_t v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    unint64_t v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000AD370 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000AD370 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 416;
    }
    if ((((unint64_t)"allowOthersToInvite:withReply:)" >> 61) & ((0x80000001000AD370 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v41;
    unint64_t v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      unint64_t v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

void sub_10005C8BC(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, unint64_t a12, void *a13, void *a14, void (*a15)(char *, id, id))
{
  uint64_t v54 = a8;
  uint64_t v55 = a7;
  unint64_t v59 = a6;
  uint64_t v58 = a5;
  id v44 = a3;
  uint64_t v43 = a2;
  unint64_t v56 = a12;
  uint64_t v57 = a11;
  int v53 = a10;
  sub_1000409B0(a4, (uint64_t)v60, &qword_1000CB378);
  uint64_t v51 = v60[0];
  uint64_t v50 = v60[1];
  unint64_t v49 = (void *)v60[2];
  uint64_t v48 = v60[3];
  uint64_t v47 = v60[4];
  int v46 = v61;
  uint64_t v17 = sub_100008704(&qword_1000CA3B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  os_log_t v45 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v52 = (char *)&v42 - v20;
  uint64_t v21 = sub_1000A42E0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, a1, v21);
  unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v26 = (v23 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v54;
  *(void *)(v27 + 24) = a9;
  *(unsigned char *)(v27 + 32) = v53;
  unint64_t v28 = v27 + v25;
  uint64_t v29 = a4;
  unint64_t v30 = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v28, v24, v21);
  *(void *)(v27 + v26) = a13;
  unint64_t v31 = v56;
  swift_bridgeObjectRetain();
  id v32 = a13;
  uint64_t v33 = v57;
  sub_100058054(v57, v31, v58, v59, v29, v30, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100094830, v27);
  swift_release();
  swift_beginAccess();
  if (*a14 == -1)
  {
    __break(1u);
    return;
  }
  ++*a14;
  sub_1000409B0(v29, (uint64_t)v62, &qword_1000CB378);
  if (v62[40] != 255)
  {
    sub_100092640((uint64_t)v62, (uint64_t)v63);
    sub_10003E7A4(v51, v50, v49, v48, v47, v46);
    id v34 = sub_100094F20(v33, v31);
    unint64_t v35 = v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v52, 1, 1, v21);
    unint64_t v36 = (void *)sub_1000A4230();
    id v37 = (id)CKXPCSuitableError();

    a15(v35, 0, v37);
    sub_100093174(v29, (void (*)(void, void, void, void, void, void))sub_1000428F4);

    uint64_t v38 = (uint64_t)v35;
LABEL_6:
    sub_10000B988(v38, &qword_1000CA3B0);
    return;
  }
  if (v30)
  {
    unsigned __int8 v39 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v45, 1, 1, v21);
    id v40 = v30;
    a15(v39, 0, v30);

    uint64_t v38 = (uint64_t)v39;
    goto LABEL_6;
  }
  if (v44) {
    id v41 = [v44 _copyWithoutPersonalInfo];
  }
  else {
    id v41 = 0;
  }
  a15(v43, v41, 0);
}

uint64_t sub_10005CD90@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _UNKNOWN **a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  if (a3)
  {
    uint64_t v8 = a3;
    unint64_t v20 = a2 >> 24;
    unint64_t v9 = HIDWORD(a2);
    swift_bridgeObjectRetain();
  }
  else
  {
    LOBYTE(v9) = 0;
    LOBYTE(v20) = 0;
    uint64_t v8 = &off_1000C1B88;
  }
  a6[3] = type metadata accessor for SPIAnalyticsEvent();
  a6[4] = (uint64_t)&off_1000C2B58;
  uint64_t v10 = sub_1000931B4(a6);
  uint64_t v11 = (int *)sub_100008704(&qword_1000CB368);
  uint64_t v12 = v11[12];
  uint64_t v13 = v11[16];
  uint64_t v14 = v11[20];
  unint64_t v15 = (uint64_t *)((char *)v10 + v11[24]);
  uint64_t v16 = (uint64_t)v10 + v11[28];
  uint64_t v17 = sub_1000A42E0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v10, a4, v17);
  *((unsigned char *)v10 + v12) = v20;
  *((unsigned char *)v10 + v13) = v9;
  *(uint64_t *)((char *)v10 + v14) = (uint64_t)v8;
  uint64_t v18 = *(void *)(a5 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *unint64_t v15 = *(void *)(a5 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  v15[1] = v18;
  sub_1000409B0(a1, v16, &qword_1000CB378);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_100093174(a1, (void (*)(void, void, void, void, void, void))sub_100093160);
}

uint64_t sub_10005CF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 112) = a5;
  *(void *)(v5 + 16) = a4;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v5 + 24) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v5 + 32) = sub_1000A4980();
  uint64_t v7 = sub_1000A4950();
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 48) = v6;
  return _swift_task_switch(sub_10005D02C, v7, v6);
}

uint64_t sub_10005D02C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  *(void *)(v0 + 56) = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10005D150;
  char v3 = *(unsigned char *)(v0 + 112);
  return sub_1000309E8(v3);
}

uint64_t sub_10005D150()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    uint64_t v4 = v2[6];
    return _swift_task_switch(sub_10005D6B4, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[10] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_10005D2B8;
    return sub_100034038();
  }
}

uint64_t sub_10005D2B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_10005D72C;
  }
  else {
    uint64_t v5 = sub_10005D3F4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005D3F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  void *v1 = v0;
  v1[1] = sub_10005D4DC;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_100035D30(v2);
}

uint64_t sub_10005D4DC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v6 = sub_10005D7A4;
  }
  else {
    uint64_t v6 = sub_10005D63C;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10005D63C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005D6B4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005D72C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005D7A4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005D81C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = a8;
  uint64_t v32 = a5;
  int v34 = a7;
  uint64_t v33 = a6;
  uint64_t v14 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = a1;
  id v18 = [v17 description];
  uint64_t v19 = sub_1000A4800();
  unint64_t v21 = v20;

  sub_1000818F0(v19, v21, 0xD00000000000007FLL, 0x80000001000AD2F0);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v22 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v16, 0, 1, v22);
  sub_1000A4990();
  id v23 = v17;
  id v24 = v9;
  swift_retain();
  id v25 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1000A4980();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = &protocol witness table for MainActor;
  uint64_t v28 = v31;
  *(void *)(v27 + 32) = v24;
  *(void *)(v27 + 40) = v28;
  *(void *)(v27 + 48) = a9;
  *(void *)(v27 + 56) = v23;
  *(void *)(v27 + 64) = v25;
  *(void *)(v27 + 72) = a3;
  uint64_t v29 = v32;
  *(void *)(v27 + 80) = a4;
  *(void *)(v27 + 88) = v29;
  *(void *)(v27 + 96) = v33;
  *(unsigned char *)(v27 + 104) = v34;
  sub_100055948((uint64_t)v16, (uint64_t)&unk_1000CBB70, v27);
  return swift_release();
}

uint64_t sub_10005DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 59) = v17;
  *(void *)(v8 + 472) = v15;
  *(void *)(v8 + 480) = v16;
  *(_OWORD *)(v8 + 456) = v14;
  *(void *)(v8 + 440) = a7;
  *(void *)(v8 + 448) = a8;
  *(void *)(v8 + 424) = a5;
  *(void *)(v8 + 432) = a6;
  *(void *)(v8 + 416) = a4;
  uint64_t v9 = sub_1000A4460();
  *(void *)(v8 + 488) = v9;
  *(void *)(v8 + 496) = *(void *)(v9 - 8);
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 520) = swift_task_alloc();
  *(void *)(v8 + 528) = swift_task_alloc();
  *(void *)(v8 + 536) = swift_task_alloc();
  *(void *)(v8 + 544) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 552) = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  *(void *)(v8 + 560) = v11;
  *(void *)(v8 + 568) = v10;
  return _swift_task_switch(sub_10005DBA0, v11, v10);
}

uint64_t sub_10005DBA0()
{
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[53];
  uint64_t v2 = v0[54];
  v0[51] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[72] = sub_100047828();
  uint64_t v4 = swift_allocObject();
  v0[73] = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[74] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10005DCC0;
  uint64_t v6 = v0[55];
  return sub_100048D58(v6, v1, (uint64_t)sub_100094514, v4, 0);
}

uint64_t sub_10005DCC0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 568);
  uint64_t v3 = *(void *)(v1 + 560);
  return _swift_task_switch(sub_10005DE04, v3, v2);
}

uint64_t sub_10005DE04()
{
  uint64_t v1 = *(void *)(v0[72] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[75] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[52] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[47] = v4;
    v0[48] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v8 = v0[57];
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10008179C(v6);
  sub_10009D81C(v8);
  swift_bridgeObjectRelease();
  v0[76] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[77] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10005DFEC;
  return sub_100054C04();
}

uint64_t sub_10005DFEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 624) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 568);
    uint64_t v4 = *(void *)(v2 + 560);
    uint64_t v5 = sub_10005F460;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 568);
    uint64_t v4 = *(void *)(v2 + 560);
    uint64_t v5 = sub_10005E110;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005E110()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v1 = *(void *)(v0 + 600);
    id v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000CBA78 + dword_1000CBA78);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10005E4C0;
    char v3 = *(unsigned char *)(v0 + 59);
    uint64_t v4 = *(void *)(v0 + 472);
    uint64_t v5 = *(void *)(v0 + 480);
    return v25(v1, v4, v5, v3);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 576);
    uint64_t v8 = *(void **)(v0 + 416);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v9 = objc_allocWithZone((Class)NSError);
    NSString v10 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v11 = [v9 initWithDomain:v10 code:10 userInfo:0];

    id v12 = v8;
    swift_retain();
    LOBYTE(v24) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v11, v12, 0, 0, v24, (uint64_t)v12, 0, v7);
    swift_release();

    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 408);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 544);
      char v17 = *(void (**)(uint64_t, void, id))(v0 + 424);
      *(void *)(v0 + 408) = v15;
      uint64_t v18 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
      id v19 = v11;
      v17(v16, 0, v11);

      sub_10000B988(v16, &qword_1000CA3B0);
      swift_release();
      swift_release();
      unint64_t v21 = *(void (**)(void, void, void))(v0 + 424);
      uint64_t v20 = *(void *)(v0 + 432);
      uint64_t v22 = *(void *)(v0 + 408);
      swift_retain();
      sub_10008BF84(v22, 0xD00000000000007FLL, 0x80000001000AD2F0, v21, v20);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
  }
  return result;
}

uint64_t sub_10005E4C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 640) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 568);
  uint64_t v4 = *(void *)(v2 + 560);
  if (v0) {
    uint64_t v5 = sub_10005E79C;
  }
  else {
    uint64_t v5 = sub_10005E5FC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005E5FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 58);
  swift_release();
  if (v1 == 1)
  {
    sub_1000A4440();
    uint64_t v2 = sub_1000A4450();
    os_log_type_t v3 = sub_1000A4A20();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "addParticipantsToShare (internal) will return an error for this public share", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 496);
    uint64_t v5 = *(void *)(v0 + 504);
    uint64_t v7 = *(void *)(v0 + 488);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 648) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10005EBEC;
  char v9 = *(unsigned char *)(v0 + 59);
  return sub_1000309E8(v9);
}

uint64_t sub_10005E79C()
{
  uint64_t v1 = *(void *)(v0 + 640);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 576);
    os_log_type_t v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    LOBYTE(v26) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, 0, 0, v26, (uint64_t)v8, 0, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 408);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v0 + 520);
    BOOL v14 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 408) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v15 = sub_100094F20(0xD00000000000007FLL, 0x80000001000AD2F0);
    uint64_t v16 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    char v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v14(v13, 0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432);
    uint64_t v21 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v21, 0xD00000000000007FLL, 0x80000001000AD2F0, v20, v19);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v25, 0xD00000000000007FLL, 0x80000001000AD2F0, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_10005EBEC()
{
  uint64_t v2 = (void *)*v1;
  v2[82] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[71];
    uint64_t v4 = v2[70];
    return _swift_task_switch(sub_10005F8B8, v4, v3);
  }
  else
  {
    char v5 = (void *)swift_task_alloc();
    v2[83] = v5;
    *char v5 = v2;
    v5[1] = sub_10005ED58;
    return sub_100034038();
  }
}

uint64_t sub_10005ED58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 672) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 568);
  uint64_t v4 = *(void *)(v2 + 560);
  if (v0) {
    char v5 = sub_10005FD08;
  }
  else {
    char v5 = sub_10005EE94;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10005EE94()
{
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 680) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10005EF70;
  uint64_t v4 = *(void *)(v0 + 536);
  return sub_100035D30(v4);
}

uint64_t sub_10005EF70()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 536);
  *(void *)(*v1 + 688) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 568);
  uint64_t v5 = *(void *)(v2 + 560);
  if (v0) {
    uint64_t v6 = sub_100060158;
  }
  else {
    uint64_t v6 = sub_10005F0D0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10005F0D0()
{
  uint64_t v1 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v24 = *(void **)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 576);
  swift_release();
  unint64_t v23 = sub_10009A5DC();
  char v22 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  *(_OWORD *)(v0 + 160) = 0u;
  uint64_t v4 = *(void **)(v0 + 392);
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = -1;
  sub_10001F904(v2, v1, &qword_1000CA3B0);
  uint64_t v5 = sub_1000A4810();
  unint64_t v7 = v6;
  id v8 = v4;
  id v9 = v24;
  swift_retain();
  uint64_t v10 = (_UNKNOWN **)swift_bridgeObjectRetain();
  LOBYTE(v21) = v22 & 1;
  sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, v5, v7, v0 + 160, 0, v9, v23 & 0x101FFFFFFFFFFLL, v10, v21, (uint64_t)v9, (uint64_t)v4, v25);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(v0 + 408);
  BOOL v13 = __CFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 408) = v14;
    if (v4) {
      id v15 = [v8 _copyWithoutPersonalInfo];
    }
    else {
      id v15 = 0;
    }
    uint64_t v16 = *(void *)(v0 + 528);
    (*(void (**)(uint64_t, id, void))(v0 + 424))(v16, v15, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    sub_10000B988(v16, &qword_1000CA3B0);
    swift_beginAccess();
    id v18 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v17 = *(void *)(v0 + 432);
    uint64_t v19 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v19, 0xD00000000000007FLL, 0x80000001000AD2F0, v18, v17);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  return result;
}

uint64_t sub_10005F460()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 624);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 576);
    char v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    LOBYTE(v26) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, 0, 0, v26, (uint64_t)v8, 0, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 408);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v0 + 520);
    uint64_t v14 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 408) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v15 = sub_100094F20(0xD00000000000007FLL, 0x80000001000AD2F0);
    uint64_t v16 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v14(v13, 0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432);
    uint64_t v21 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v21, 0xD00000000000007FLL, 0x80000001000AD2F0, v20, v19);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v25, 0xD00000000000007FLL, 0x80000001000AD2F0, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_10005F8B8()
{
  uint64_t v1 = *(void *)(v0 + 656);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 576);
    char v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    LOBYTE(v26) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, 0, 0, v26, (uint64_t)v8, 0, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 408);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v0 + 520);
    uint64_t v14 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 408) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v15 = sub_100094F20(0xD00000000000007FLL, 0x80000001000AD2F0);
    uint64_t v16 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v14(v13, 0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432);
    uint64_t v21 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v21, 0xD00000000000007FLL, 0x80000001000AD2F0, v20, v19);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v25, 0xD00000000000007FLL, 0x80000001000AD2F0, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_10005FD08()
{
  uint64_t v1 = *(void *)(v0 + 672);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 576);
    char v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    LOBYTE(v26) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, 0, 0, v26, (uint64_t)v8, 0, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 408);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v0 + 520);
    uint64_t v14 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 408) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v15 = sub_100094F20(0xD00000000000007FLL, 0x80000001000AD2F0);
    uint64_t v16 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v14(v13, 0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432);
    uint64_t v21 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v21, 0xD00000000000007FLL, 0x80000001000AD2F0, v20, v19);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v25, 0xD00000000000007FLL, 0x80000001000AD2F0, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_100060158()
{
  uint64_t v1 = *(void *)(v0 + 688);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 576);
    char v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    LOBYTE(v26) = 0;
    sub_100083250(0xD00000000000007FLL, 0x80000001000AD2F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, 0, 0, v26, (uint64_t)v8, 0, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 408);
    BOOL v11 = __CFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(v0 + 520);
    uint64_t v14 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 408) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v15 = sub_100094F20(0xD00000000000007FLL, 0x80000001000AD2F0);
    uint64_t v16 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v14(v13, 0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v13, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v19 = *(void *)(v0 + 432);
    uint64_t v21 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v21, 0xD00000000000007FLL, 0x80000001000AD2F0, v20, v19);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v24 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008BF84(v25, 0xD00000000000007FLL, 0x80000001000AD2F0, v24, v23);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v22 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v22();
}

uint64_t sub_1000605A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    id v15 = (void *)sub_1000A4230();
  }
  else {
    id v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  uint64_t v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    id v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    unint64_t v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000AD2F0 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000AD2F0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 508;
    }
    if ((((unint64_t)"Invite:withReply:)" >> 61) & ((0x80000001000AD2F0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v41;
    id v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      id v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

void sub_100060BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001F904(a1, (uint64_t)v10, &qword_1000CA3B0);
  uint64_t v11 = sub_1000A42E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    sub_1000A4270(v13);
    uint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a3) {
    id v16 = (void *)sub_1000A4230();
  }
  else {
    id v16 = 0;
  }
  (*(void (**)(uint64_t, void *, uint64_t, void *))(a4 + 16))(a4, v14, a2, v16);
}

uint64_t sub_100060D28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v42 = a8;
  int v45 = a7;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a3;
  unint64_t v35 = a2;
  uint64_t v40 = a9;
  uint64_t v11 = sub_1000A42E0();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v39 + 64);
  __chkstk_darwin(v11);
  os_log_t v37 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v46, "sharingURL: ");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v36 = v11;
  v47._countAndFlagsBits = sub_1000A4D50();
  sub_1000A4880(v47);
  swift_bridgeObjectRelease();
  sub_1000818F0(v46[0], v46[1], 0xD000000000000082, 0x80000001000AD260);
  swift_bridgeObjectRelease();
  uint64_t v38 = v15;
  sub_1000A49A0();
  uint64_t v16 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  uint64_t v17 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  sub_1000A4990();
  id v18 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v41 = v41;
  uint64_t v19 = v40;
  swift_retain();
  uint64_t v20 = sub_1000A4980();
  uint64_t v21 = v17;
  unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = v20;
  *((void *)v27 + 3) = &protocol witness table for MainActor;
  uint64_t v28 = v42;
  *((void *)v27 + 4) = v41;
  *((void *)v27 + 5) = v28;
  *((void *)v27 + 6) = v19;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v27[v22], v37, v36);
  *(void *)&v27[v23] = v35;
  *(void *)&v27[v24] = v34;
  *(void *)&v27[v25] = v33;
  uint64_t v29 = v44;
  *(void *)&v27[v26] = v43;
  unint64_t v30 = &v27[(v26 + 15) & 0xFFFFFFFFFFFFFFF8];
  *(void *)unint64_t v30 = v29;
  v30[8] = v45;
  sub_100055948((uint64_t)v38, (uint64_t)&unk_1000CBB60, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_100061090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 59) = v17;
  *(void *)(v8 + 472) = v15;
  *(void *)(v8 + 480) = v16;
  *(_OWORD *)(v8 + 456) = v14;
  *(void *)(v8 + 440) = a7;
  *(void *)(v8 + 448) = a8;
  *(void *)(v8 + 424) = a5;
  *(void *)(v8 + 432) = a6;
  *(void *)(v8 + 416) = a4;
  *(void *)(v8 + 488) = sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 496) = swift_task_alloc();
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = swift_task_alloc();
  uint64_t v9 = sub_1000A4460();
  *(void *)(v8 + 520) = v9;
  *(void *)(v8 + 528) = *(void *)(v9 - 8);
  *(void *)(v8 + 536) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 544) = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  *(void *)(v8 + 552) = v11;
  *(void *)(v8 + 560) = v10;
  return _swift_task_switch(sub_100061200, v11, v10);
}

uint64_t sub_100061200()
{
  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  v0[49] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[71] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[72] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[73] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006130C;
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  return sub_1000493B4(v6, v5, (uint64_t)sub_100094380, v3);
}

uint64_t sub_10006130C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 560);
  uint64_t v3 = *(void *)(v1 + 552);
  return _swift_task_switch(sub_100061450, v3, v2);
}

uint64_t sub_100061450()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 568) + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  *(void *)(v0 + 592) = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + 416) + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 376) = v4;
    *(void *)(v0 + 384) = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v22 = *(void *)(v0 + 456);
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10008179C(v6);
  sub_10009D81C(v22);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 58))
  {
    id v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v7;
    *id v7 = v0;
    v7[1] = sub_100061894;
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v8 = *(void *)(v0 + 448);
    return sub_100032B08(v9, v8);
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 416);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v13 = [v11 initWithDomain:v12 code:10 userInfo:0];

    id v14 = v10;
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v13, v14, 0, 0, 0, (uint64_t)v14);

    uint64_t result = swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v16 = v15 + 1;
    if (v15 == -1)
    {
      __break(1u);
    }
    else
    {
      char v17 = *(void (**)(void, void, id))(v0 + 424);
      *(void *)(v0 + 392) = v16;
      id v18 = v13;
      v17(0, 0, v13);

      swift_release();
      swift_release();
      uint64_t v20 = *(void (**)(void, void, void))(v0 + 424);
      uint64_t v19 = *(void *)(v0 + 432);
      swift_retain();
      sub_10008C5A8(v16, 0xD000000000000082, 0x80000001000AD260, v20, v19);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
      return v21();
    }
  }
  return result;
}

uint64_t sub_100061894()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 608) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 560);
    uint64_t v4 = *(void *)(v2 + 552);
    return _swift_task_switch(sub_1000628DC, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 592);
    id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000CBA78 + dword_1000CBA78);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 616) = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_100061A28;
    uint64_t v7 = *(unsigned __int8 *)(v2 + 59);
    uint64_t v8 = *(void *)(v2 + 472);
    uint64_t v9 = *(void *)(v2 + 480);
    return v11(v5, v8, v9, v7);
  }
}

uint64_t sub_100061A28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 624) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 560);
  uint64_t v4 = *(void *)(v2 + 552);
  if (v0) {
    uint64_t v5 = sub_100061D08;
  }
  else {
    uint64_t v5 = sub_100061B64;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100061B64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 57);
  swift_release();
  if (v1 == 1)
  {
    sub_1000A4440();
    uint64_t v2 = sub_1000A4450();
    os_log_type_t v3 = sub_1000A4A20();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "addParticipantsToShare (internal) will return an error for this public share", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 536);
    uint64_t v6 = *(void *)(v0 + 528);
    uint64_t v7 = *(void *)(v0 + 520);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 632) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000620B4;
  char v9 = *(unsigned char *)(v0 + 59);
  return sub_1000309E8(v9);
}

uint64_t sub_100061D08()
{
  uint64_t v1 = *(void *)(v0 + 624);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v6, 0, 0, 0, (uint64_t)v6);

    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 392);
    BOOL v9 = __CFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = *(void (**)(void, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000082, 0x80000001000AD260);
    id v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, 0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    char v17 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v15, 0xD000000000000082, 0x80000001000AD260, v17, v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008C5A8(v21, 0xD000000000000082, 0x80000001000AD260, v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_1000620B4()
{
  uint64_t v2 = (void *)*v1;
  v2[80] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[70];
    uint64_t v4 = v2[69];
    return _swift_task_switch(sub_100062C88, v4, v3);
  }
  else
  {
    long long v5 = (void *)swift_task_alloc();
    v2[81] = v5;
    *long long v5 = v2;
    v5[1] = sub_100062220;
    return sub_100034038();
  }
}

uint64_t sub_100062220()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 656) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 560);
  uint64_t v4 = *(void *)(v2 + 552);
  if (v0) {
    long long v5 = sub_100063034;
  }
  else {
    long long v5 = sub_10006235C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006235C()
{
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100062438;
  uint64_t v4 = *(void *)(v0 + 512);
  return sub_100035D30(v4);
}

uint64_t sub_100062438()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 512);
  *(void *)(*v1 + 672) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 560);
  uint64_t v5 = *(void *)(v2 + 552);
  if (v0) {
    uint64_t v6 = sub_1000633E0;
  }
  else {
    uint64_t v6 = sub_100062598;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100062598()
{
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 504);
  unint64_t v24 = *(void **)(v0 + 416);
  swift_release();
  unint64_t v23 = sub_10009A5DC();
  uint64_t v4 = v3;
  char v6 = v5;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  *(_OWORD *)(v0 + 160) = 0u;
  uint64_t v7 = *(void **)(v0 + 400);
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = -1;
  sub_10001F904(v2, v1, &qword_1000CA3B0);
  uint64_t v8 = sub_1000A4810();
  unint64_t v10 = v9;
  unsigned __int8 v11 = v6 & 1;
  id v12 = v24;
  swift_bridgeObjectRetain();
  sub_100084474(0xD000000000000082, 0x80000001000AD260, v8, v10, v0 + 160, 0, v12, v23 & 0x101FFFFFFFFFFLL, v4, v11, (uint64_t)v12);

  swift_bridgeObjectRelease();
  uint64_t result = swift_beginAccess();
  uint64_t v14 = *(void *)(v0 + 392);
  BOOL v15 = __CFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 392) = v16;
    if (v7) {
      id v17 = [v7 _copyWithoutPersonalInfo];
    }
    else {
      id v17 = 0;
    }
    uint64_t v18 = *(void *)(v0 + 504);
    (*(void (**)(uint64_t, id, void))(v0 + 424))(1, v17, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    sub_10000B988(v18, &qword_1000CA3B0);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v0 + 392);
    uint64_t v21 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v19, 0xD000000000000082, 0x80000001000AD260, v21, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  return result;
}

uint64_t sub_1000628DC()
{
  uint64_t v1 = *(void *)(v0 + 608);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v6, 0, 0, 0, (uint64_t)v6);

    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 392);
    BOOL v9 = __CFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    unsigned __int8 v11 = *(void (**)(void, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000082, 0x80000001000AD260);
    id v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, 0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    id v17 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v15, 0xD000000000000082, 0x80000001000AD260, v17, v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008C5A8(v21, 0xD000000000000082, 0x80000001000AD260, v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_100062C88()
{
  uint64_t v1 = *(void *)(v0 + 640);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v6, 0, 0, 0, (uint64_t)v6);

    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 392);
    BOOL v9 = __CFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    unsigned __int8 v11 = *(void (**)(void, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000082, 0x80000001000AD260);
    id v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, 0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    id v17 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v15, 0xD000000000000082, 0x80000001000AD260, v17, v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008C5A8(v21, 0xD000000000000082, 0x80000001000AD260, v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_100063034()
{
  uint64_t v1 = *(void *)(v0 + 656);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v6, 0, 0, 0, (uint64_t)v6);

    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 392);
    BOOL v9 = __CFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    unsigned __int8 v11 = *(void (**)(void, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000082, 0x80000001000AD260);
    id v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, 0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    id v17 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v15, 0xD000000000000082, 0x80000001000AD260, v17, v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008C5A8(v21, 0xD000000000000082, 0x80000001000AD260, v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_1000633E0()
{
  uint64_t v1 = *(void *)(v0 + 672);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100084474(0xD000000000000082, 0x80000001000AD260, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v6, 0, 0, 0, (uint64_t)v6);

    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v0 + 392);
    BOOL v9 = __CFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    unsigned __int8 v11 = *(void (**)(void, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000082, 0x80000001000AD260);
    id v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, 0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 392);
    id v17 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    swift_retain();
    sub_10008C5A8(v15, 0xD000000000000082, 0x80000001000AD260, v17, v16);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008C5A8(v21, 0xD000000000000082, 0x80000001000AD260, v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_10006378C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_1000A4460();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unsigned __int8 v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    a3 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v12 = a3;
  id v13 = sub_1000A4450();
  int v14 = sub_1000A4A20();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v41 = v14;
    os_log_t v42 = v13;
    uint64_t v43 = v9;
    id v44 = v12;
    int v45 = a3;
    uint64_t v37 = v8;
    uint64_t v38 = a5;
    uint64_t v39 = a4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v47 = v40;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = sub_1000A48D0();
    uint64_t v18 = v17;
    if ((0x80000001000AD260 & 0x2000000000000000) != 0) {
      unint64_t v19 = (0x80000001000AD260 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v19 = 520;
    }
    if ((((unint64_t)"ontainerSetupInfo:withReply:)" >> 61) & ((0x80000001000AD260 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
    }
    else
    {
      uint64_t v20 = v16;
      while (sub_1000A48D0() != v20 || v21 != v18)
      {
        char v23 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_18;
        }
        if (v19 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v24 = sub_1000A4830();
      unint64_t v25 = v26;
      swift_bridgeObjectRelease();
    }
    a4 = v39;
    uint64_t v27 = v37;
    id v12 = v44;
    uint64_t v28 = v45;
    uint64_t v46 = sub_10003CFA4(v24, v25, &v47);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    if (v28)
    {
      id v29 = v12;
      id v30 = [v29 description];
      uint64_t v31 = sub_1000A4800();
      unint64_t v33 = v32;

      id v12 = v44;
    }
    else
    {
      unint64_t v33 = 0xEE00646569666963;
      uint64_t v31 = 0x65707320656E6F6ELL;
    }
    uint64_t v46 = sub_10003CFA4(v31, v33, &v47);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v34 = v42;
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v41, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v27);
    a3 = v45;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  a4(0, 0, a3);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_100063BC8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _UNKNOWN **a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  sub_1000409B0(a1, (uint64_t)v22, &qword_1000CB378);
  uint64_t v10 = v22[2];
  uint64_t v20 = v22[1];
  uint64_t v21 = v22[0];
  uint64_t v11 = v22[3];
  uint64_t v12 = v22[4];
  char v19 = v23;
  if (a3)
  {
    unint64_t v13 = a2 >> 24;
    unint64_t v14 = HIDWORD(a2);
    swift_bridgeObjectRetain();
  }
  else
  {
    LOBYTE(v14) = 0;
    LOBYTE(v13) = 0;
    a3 = &off_1000C1AC0;
  }
  a5[3] = type metadata accessor for SPIAnalyticsEvent();
  a5[4] = (uint64_t)&off_1000C2B58;
  uint64_t v15 = sub_1000931B4(a5);
  uint64_t v16 = *(void *)(a4 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v17 = *(void *)(a4 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *(unsigned char *)uint64_t v15 = v13;
  *((unsigned char *)v15 + 1) = v14;
  v15[1] = (uint64_t)a3;
  v15[2] = v16;
  v15[3] = v17;
  v15[4] = v21;
  v15[5] = v20;
  v15[6] = v10;
  v15[7] = v11;
  v15[8] = v12;
  *((unsigned char *)v15 + 72) = v19;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_100093174(a1, (void (*)(void, void, void, void, void, void))sub_100093160);
}

void sub_100063EB4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_1000A4230();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void, uint64_t))(a4 + 16))(a4, a1 & 1, a2);
}

uint64_t sub_100063F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[52] = a7;
  v8[53] = a8;
  v8[50] = a5;
  v8[51] = a6;
  v8[49] = a4;
  sub_1000A4990();
  v8[54] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v8[55] = v10;
  v8[56] = v9;
  return _swift_task_switch(sub_100063FD4, v10, v9);
}

uint64_t sub_100063FD4()
{
  uint64_t v2 = v0[50];
  uint64_t v1 = v0[51];
  v0[48] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[57] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[58] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  char v4 = (void *)swift_task_alloc();
  v0[59] = v4;
  *char v4 = v0;
  v4[1] = sub_1000640E0;
  uint64_t v6 = v0[52];
  uint64_t v5 = v0[53];
  return sub_100049F38(v6, v5, (uint64_t)sub_1000940A4, v3);
}

uint64_t sub_1000640E0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 448);
  uint64_t v3 = *(void *)(v1 + 440);
  return _swift_task_switch(sub_100064224, v3, v2);
}

uint64_t sub_100064224()
{
  uint64_t v1 = *(void *)(v0[57] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[60] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[49] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[44] = v4;
    v0[45] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v6 = (void *)swift_task_alloc();
  v0[61] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000643CC;
  uint64_t v8 = v0[52];
  uint64_t v7 = v0[53];
  return sub_100032B08(v8, v7);
}

uint64_t sub_1000643CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 448);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    uint64_t v5 = sub_100064D00;
  }
  else {
    uint64_t v5 = sub_100064508;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100064508()
{
  v0[63] = *(void *)(v0[60] + 16);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[64] = v1;
  void *v1 = v0;
  v1[1] = sub_1000645AC;
  return sub_100054C04();
}

uint64_t sub_1000645AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 440);
    uint64_t v4 = *(void *)(v2 + 448);
    uint64_t v5 = sub_100065058;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 440);
    uint64_t v4 = *(void *)(v2 + 448);
    uint64_t v5 = sub_1000646C8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000646C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    *(void *)(v0 + 528) = *(void *)(v0 + 368);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v1;
    void *v1 = v0;
    v1[1] = sub_100064A18;
    return sub_100034DDC();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = *(void **)(v0 + 392);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithDomain:v6 code:10 userInfo:0];

    id v8 = v4;
    swift_retain();
    sub_1000867AC(0xD00000000000003DLL, 0x80000001000AD220, (void (*)(void, void))0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v7, v8, (uint64_t)v8, 0, v3, 4);
    swift_release();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void (**)(void, id))(v0 + 400);
      *(void *)(v0 + 384) = v10;
      id v12 = v7;
      v11(0, v7);

      swift_release();
      swift_release();
      unint64_t v14 = *(void (**)(void, void))(v0 + 400);
      uint64_t v13 = *(void *)(v0 + 408);
      swift_retain();
      sub_10008CB28(v10, 0xD00000000000003DLL, 0x80000001000AD220, v14, v13);
      swift_release();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
    }
  }
  return result;
}

uint64_t sub_100064A18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 448);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    id v5 = sub_1000653BC;
  }
  else {
    id v5 = sub_100064B54;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100064B54()
{
  uint64_t v1 = *(void **)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void **)(v0 + 392);
  swift_release();
  *(_OWORD *)(v0 + 160) = 0u;
  *(void *)(v0 + 192) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 200) = -1;
  id v4 = v1;
  id v5 = v3;
  swift_retain();
  sub_1000867AC(0xD00000000000003DLL, 0x80000001000AD220, (void (*)(void, void))0x73736563637573, 0xE700000000000000, v0 + 160, 0, v5, (uint64_t)v5, v1, v2, 4);
  swift_release();

  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v8 = v7 + 1;
  if (v7 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, void))(v0 + 400);
    *(void *)(v0 + 384) = v8;
    v9(1, 0);
    swift_release();
    swift_release();

    uint64_t v10 = *(void (**)(void, void))(v0 + 400);
    uint64_t v11 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008CB28(v8, 0xD00000000000003DLL, 0x80000001000AD220, v10, v11);
    swift_release();
    id v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  return result;
}

uint64_t sub_100064D00()
{
  swift_release();
  *(void *)(v0 + 376) = *(void *)(v0 + 496);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 456);
    uint64_t v2 = *(void **)(v0 + 392);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    swift_retain_n();
    id v7 = v6;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD00000000000003DLL, 0x80000001000AD220, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v7, (uint64_t)v7, 0, v1, 4);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = *(void (**)(void, id))(v0 + 400);
    *(void *)(v0 + 384) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD00000000000003DLL, 0x80000001000AD220);
    uint64_t v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v15 = *(void (**)(void, void))(v0 + 400);
    uint64_t v16 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008CB28(v10, 0xD00000000000003DLL, 0x80000001000AD220, v15, v16);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    char v19 = *(void (**)(void, void))(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 408);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void *)(v0 + 384);
    swift_retain();
    sub_10008CB28(v20, 0xD00000000000003DLL, 0x80000001000AD220, v19, v18);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v17();
}

uint64_t sub_100065058()
{
  swift_release();
  swift_release();
  *(void *)(v0 + 376) = *(void *)(v0 + 520);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 456);
    uint64_t v2 = *(void **)(v0 + 392);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v3 = *(void *)(v0 + 240);
    char v4 = *(unsigned char *)(v0 + 248);
    long long v5 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v5;
    *(void *)(v0 + 96) = v3;
    *(unsigned char *)(v0 + 104) = v4;
    id v6 = v2;
    swift_retain_n();
    id v7 = v6;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD00000000000003DLL, 0x80000001000AD220, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v7, (uint64_t)v7, 0, v1, 4);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = *(void (**)(void, id))(v0 + 400);
    *(void *)(v0 + 384) = v10;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD00000000000003DLL, 0x80000001000AD220);
    uint64_t v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, v14);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v15 = *(void (**)(void, void))(v0 + 400);
    uint64_t v16 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008CB28(v10, 0xD00000000000003DLL, 0x80000001000AD220, v15, v16);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    char v19 = *(void (**)(void, void))(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 408);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void *)(v0 + 384);
    swift_retain();
    sub_10008CB28(v20, 0xD00000000000003DLL, 0x80000001000AD220, v19, v18);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v17();
}

uint64_t sub_1000653BC()
{
  uint64_t v1 = *(void **)(v0 + 528);
  swift_release();

  *(void *)(v0 + 376) = *(void *)(v0 + 544);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 456);
    uint64_t v3 = *(void **)(v0 + 392);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD00000000000003DLL, 0x80000001000AD220, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v8, (uint64_t)v8, 0, v2, 4);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 384);
    uint64_t v11 = v10 + 1;
    if (v10 == -1)
    {
      __break(1u);
      return result;
    }
    id v12 = *(void (**)(void, id))(v0 + 400);
    *(void *)(v0 + 384) = v11;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v13 = sub_100094F20(0xD00000000000003DLL, 0x80000001000AD220);
    id v14 = (void *)sub_1000A4230();
    id v15 = (id)CKXPCSuitableError();

    v12(0, v15);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v16 = *(void (**)(void, void))(v0 + 400);
    uint64_t v17 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008CB28(v11, 0xD00000000000003DLL, 0x80000001000AD220, v16, v17);
    swift_release();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v20 = *(void (**)(void, void))(v0 + 400);
    uint64_t v19 = *(void *)(v0 + 408);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 384);
    swift_retain();
    sub_10008CB28(v21, 0xD00000000000003DLL, 0x80000001000AD220, v20, v19);
    swift_release();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_10006571C(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v7 = sub_1000A4460();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    a2 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v11 = a2;
  id v12 = sub_1000A4450();
  int v13 = sub_1000A4A20();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v40 = v13;
    os_log_t v41 = v12;
    uint64_t v42 = v8;
    id v43 = v11;
    id v44 = a2;
    uint64_t v36 = v7;
    uint64_t v37 = a4;
    uint64_t v38 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = sub_1000A48D0();
    uint64_t v17 = v16;
    if ((0x80000001000AD220 & 0x2000000000000000) != 0) {
      unint64_t v18 = (0x80000001000AD220 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v18 = 244;
    }
    if ((((unint64_t)":containerSetupInfo:withReply:)" >> 61) & ((0x80000001000AD220 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    else
    {
      uint64_t v19 = v15;
      while (sub_1000A48D0() != v19 || v20 != v17)
      {
        char v22 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_18;
        }
        if (v18 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v23 = sub_1000A4830();
      unint64_t v24 = v25;
      swift_bridgeObjectRelease();
    }
    a3 = v38;
    uint64_t v26 = v36;
    id v11 = v43;
    uint64_t v27 = v44;
    uint64_t v45 = sub_10003CFA4(v23, v24, &v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (v27)
    {
      id v28 = v11;
      id v29 = [v28 description];
      uint64_t v30 = sub_1000A4800();
      unint64_t v32 = v31;

      id v11 = v43;
    }
    else
    {
      unint64_t v32 = 0xEE00646569666963;
      uint64_t v30 = 0x65707320656E6F6ELL;
    }
    uint64_t v45 = sub_10003CFA4(v30, v32, &v46);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v33 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v26);
    a2 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  a3(0, a2);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

void sub_100065CDC(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1000A4230();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t sub_100065D4C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = a1;
  id v13 = [v12 description];
  uint64_t v14 = sub_1000A4800();
  unint64_t v16 = v15;

  sub_1000818F0(v14, v16, 0xD00000000000002FLL, 0x80000001000AD1F0);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v17 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  sub_1000A4990();
  id v18 = a2;
  id v19 = v12;
  id v20 = v4;
  swift_retain();
  uint64_t v21 = sub_1000A4980();
  char v22 = (void *)swift_allocObject();
  os_log_t v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v20;
  void v22[5] = a3;
  v22[6] = a4;
  v22[7] = v19;
  v22[8] = a2;
  sub_100055948((uint64_t)v11, (uint64_t)&unk_1000CBB40, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_100065F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[51] = a7;
  v8[52] = a8;
  v8[49] = a5;
  v8[50] = a6;
  v8[48] = a4;
  sub_1000A4990();
  v8[53] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v8[54] = v10;
  v8[55] = v9;
  return _swift_task_switch(sub_100065FB0, v10, v9);
}

uint64_t sub_100065FB0()
{
  uint64_t v2 = v0[49];
  uint64_t v1 = v0[50];
  v0[47] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[56] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[57] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[58] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000660BC;
  uint64_t v6 = v0[51];
  uint64_t v5 = v0[52];
  return sub_10004AB24(v6, v5, (uint64_t)sub_100093E60, v3);
}

uint64_t sub_1000660BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 440);
  uint64_t v3 = *(void *)(v1 + 432);
  return _swift_task_switch(sub_100066200, v3, v2);
}

uint64_t sub_100066200()
{
  uint64_t v1 = *(void *)(v0[56] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[59] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[48] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[44] = v4;
    v0[45] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  v0[60] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[61] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000663B4;
  return sub_100054C04();
}

uint64_t sub_1000663B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 432);
    uint64_t v4 = *(void *)(v2 + 440);
    uint64_t v5 = sub_100066AA8;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 432);
    uint64_t v4 = *(void *)(v2 + 440);
    uint64_t v5 = sub_1000664D0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000664D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 504) = v1;
    void *v1 = v0;
    v1[1] = sub_1000667CC;
    return sub_100034DDC();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 448);
    uint64_t v4 = *(void **)(v0 + 408);
    uint64_t v5 = *(void **)(v0 + 384);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v6 = objc_allocWithZone((Class)NSError);
    NSString v7 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v8 = [v6 initWithDomain:v7 code:10 userInfo:0];

    swift_retain();
    id v9 = v4;
    id v10 = v5;
    sub_1000855E8(0xD00000000000002FLL, 0x80000001000AD1F0, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v8, v10, v3, (uint64_t)v9, (uint64_t)v10);

    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v11 = *(void *)(v0 + 376);
    uint64_t v12 = v11 + 1;
    if (v11 == -1)
    {
      __break(1u);
    }
    else
    {
      id v13 = *(void (**)(void, id))(v0 + 392);
      *(void *)(v0 + 376) = v12;
      id v14 = v8;
      v13(0, v8);

      swift_release();
      swift_release();
      unint64_t v16 = *(void (**)(void, void))(v0 + 392);
      uint64_t v15 = *(void *)(v0 + 400);
      swift_retain();
      sub_10008CB28(v12, 0xD00000000000002FLL, 0x80000001000AD1F0, v16, v15);
      swift_release();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  return result;
}

uint64_t sub_1000667CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 440);
  uint64_t v4 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v5 = sub_100066E1C;
  }
  else {
    uint64_t v5 = sub_100066908;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100066908()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void **)(v0 + 408);
  uint64_t v3 = *(void **)(v0 + 384);
  swift_release();
  *(_OWORD *)(v0 + 160) = 0u;
  *(void *)(v0 + 192) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 200) = -1;
  swift_retain();
  id v4 = v2;
  id v5 = v3;
  sub_1000855E8(0xD00000000000002FLL, 0x80000001000AD1F0, 0x73736563637573, 0xE700000000000000, v0 + 160, 0, v5, v1, (uint64_t)v4, (uint64_t)v5);

  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v8 = v7 + 1;
  if (v7 == -1)
  {
    __break(1u);
  }
  else
  {
    id v9 = *(void (**)(uint64_t, void))(v0 + 392);
    *(void *)(v0 + 376) = v8;
    v9(1, 0);
    swift_release();
    swift_release();
    uint64_t v11 = *(void (**)(void, void))(v0 + 392);
    uint64_t v10 = *(void *)(v0 + 400);
    swift_retain();
    sub_10008CB28(v8, 0xD00000000000002FLL, 0x80000001000AD1F0, v11, v10);
    swift_release();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  return result;
}

uint64_t sub_100066AA8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 496);
  swift_release();
  *(void *)(v0 + 368) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 448);
    uint64_t v3 = *(void **)(v0 + 408);
    id v4 = *(void **)(v0 + 384);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v5 = *(void *)(v0 + 240);
    char v6 = *(unsigned char *)(v0 + 248);
    long long v7 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v7;
    *(void *)(v0 + 96) = v5;
    *(unsigned char *)(v0 + 104) = v6;
    swift_retain_n();
    id v8 = v3;
    id v9 = v4;
    id v10 = v8;
    id v11 = v9;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000855E8(0xD00000000000002FLL, 0x80000001000AD1F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v11, v2, (uint64_t)v10, (uint64_t)v11);

    swift_release_n();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v14 = v13 + 1;
    if (v13 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void (**)(void, id))(v0 + 392);
    *(void *)(v0 + 376) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v16 = sub_100094F20(0xD00000000000002FLL, 0x80000001000AD1F0);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v15(0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    id v19 = *(void (**)(void, void))(v0 + 392);
    uint64_t v20 = *(void *)(v0 + 400);
    swift_retain();
    sub_10008CB28(v14, 0xD00000000000002FLL, 0x80000001000AD1F0, v19, v20);
    swift_release();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v23 = *(void (**)(void, void))(v0 + 392);
    uint64_t v22 = *(void *)(v0 + 400);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v24 = *(void *)(v0 + 376);
    swift_retain();
    sub_10008CB28(v24, 0xD00000000000002FLL, 0x80000001000AD1F0, v23, v22);
    swift_release();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v21();
}

uint64_t sub_100066E1C()
{
  uint64_t v1 = *(void *)(v0 + 512);
  swift_release();
  *(void *)(v0 + 368) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 448);
    uint64_t v3 = *(void **)(v0 + 408);
    id v4 = *(void **)(v0 + 384);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v5 = *(void *)(v0 + 240);
    char v6 = *(unsigned char *)(v0 + 248);
    long long v7 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v7;
    *(void *)(v0 + 96) = v5;
    *(unsigned char *)(v0 + 104) = v6;
    swift_retain_n();
    id v8 = v3;
    id v9 = v4;
    id v10 = v8;
    id v11 = v9;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000855E8(0xD00000000000002FLL, 0x80000001000AD1F0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v11, v2, (uint64_t)v10, (uint64_t)v11);

    swift_release_n();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v14 = v13 + 1;
    if (v13 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void (**)(void, id))(v0 + 392);
    *(void *)(v0 + 376) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v16 = sub_100094F20(0xD00000000000002FLL, 0x80000001000AD1F0);
    uint64_t v17 = (void *)sub_1000A4230();
    id v18 = (id)CKXPCSuitableError();

    v15(0, v18);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    id v19 = *(void (**)(void, void))(v0 + 392);
    uint64_t v20 = *(void *)(v0 + 400);
    swift_retain();
    sub_10008CB28(v14, 0xD00000000000002FLL, 0x80000001000AD1F0, v19, v20);
    swift_release();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v23 = *(void (**)(void, void))(v0 + 392);
    uint64_t v22 = *(void *)(v0 + 400);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v24 = *(void *)(v0 + 376);
    swift_retain();
    sub_10008CB28(v24, 0xD00000000000002FLL, 0x80000001000AD1F0, v23, v22);
    swift_release();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v21();
}

uint64_t sub_100067188(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v7 = sub_1000A4460();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    a2 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v11 = a2;
  uint64_t v12 = sub_1000A4450();
  int v13 = sub_1000A4A20();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v40 = v13;
    os_log_t v41 = v12;
    uint64_t v42 = v8;
    id v43 = v11;
    id v44 = a2;
    uint64_t v36 = v7;
    uint64_t v37 = a4;
    uint64_t v38 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = sub_1000A48D0();
    uint64_t v17 = v16;
    if ((0x80000001000AD1F0 & 0x2000000000000000) != 0) {
      unint64_t v18 = (0x80000001000AD1F0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v18 = 188;
    }
    if ((((unint64_t)"ected SharingError" >> 61) & ((0x80000001000AD1F0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    else
    {
      uint64_t v19 = v15;
      while (sub_1000A48D0() != v19 || v20 != v17)
      {
        char v22 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_18;
        }
        if (v18 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v23 = sub_1000A4830();
      unint64_t v24 = v25;
      swift_bridgeObjectRelease();
    }
    a3 = v38;
    uint64_t v26 = v36;
    id v11 = v43;
    uint64_t v27 = v44;
    uint64_t v45 = sub_10003CFA4(v23, v24, &v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (v27)
    {
      id v28 = v11;
      id v29 = [v28 description];
      uint64_t v30 = sub_1000A4800();
      unint64_t v32 = v31;

      id v11 = v43;
    }
    else
    {
      unint64_t v32 = 0xEE00646569666963;
      uint64_t v30 = 0x65707320656E6F6ELL;
    }
    uint64_t v45 = sub_10003CFA4(v30, v32, &v46);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v33 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v26);
    a2 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  a3(0, a2);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_1000675F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v6 = sub_1000A42E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0x203A4C52557366;
  unint64_t v23 = 0xE700000000000000;
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  v24._countAndFlagsBits = sub_1000A4D50();
  sub_1000A4880(v24);
  swift_bridgeObjectRelease();
  sub_1000818F0(v22, v23, 0xD000000000000026, 0x80000001000AD0D0);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v13 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1000A4990();
  id v14 = v3;
  swift_retain();
  uint64_t v15 = sub_1000A4980();
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = &protocol witness table for MainActor;
  uint64_t v18 = v21;
  *((void *)v17 + 4) = v14;
  *((void *)v17 + 5) = v18;
  *((void *)v17 + 6) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v16], v9, v6);
  sub_100055948((uint64_t)v12, (uint64_t)&unk_1000CBB18, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1000678AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[60] = a6;
  v7[61] = a7;
  v7[58] = a4;
  v7[59] = a5;
  sub_1000A4990();
  v7[62] = sub_1000A4980();
  uint64_t v9 = sub_1000A4950();
  v7[63] = v9;
  v7[64] = v8;
  return _swift_task_switch(sub_100067948, v9, v8);
}

uint64_t sub_100067948()
{
  uint64_t v2 = v0[59];
  uint64_t v1 = v0[60];
  v0[55] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[65] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[66] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  id v4 = (void *)swift_task_alloc();
  v0[67] = v4;
  *id v4 = v0;
  v4[1] = sub_100067A54;
  uint64_t v5 = v0[61];
  return sub_10004A4B8(v5, (uint64_t)sub_100093C5C, v3);
}

uint64_t sub_100067A54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 512);
  uint64_t v3 = *(void *)(v1 + 504);
  return _swift_task_switch(sub_100067B98, v3, v2);
}

uint64_t sub_100067B98()
{
  uint64_t v1 = *(void *)(v0[65] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[68] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[58] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[53] = v4;
    v0[54] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_1000CBB20 + dword_1000CBB20);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[69] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100067D4C;
  return v7(v1);
}

uint64_t sub_100067D4C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 560) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 504);
    uint64_t v6 = *(void *)(v4 + 512);
    uint64_t v7 = sub_100068120;
  }
  else
  {
    *(unsigned char *)(v4 + 58) = a1 & 1;
    uint64_t v5 = *(void *)(v4 + 504);
    uint64_t v6 = *(void *)(v4 + 512);
    uint64_t v7 = sub_100067E74;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100067E74()
{
  if (*(unsigned char *)(v0 + 58))
  {
    *(void *)(v0 + 568) = *(void *)(*(void *)(v0 + 544) + 16);
    swift_retain();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v1;
    void *v1 = v0;
    v1[1] = sub_100068478;
    return sub_100054C04();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 520);
    uint64_t v4 = *(void **)(v0 + 464);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithDomain:v6 code:20 userInfo:0];

    id v8 = v4;
    swift_retain();
    sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0xD000000000000013, 0x80000001000AD100, v0 + 16, v7, v8, (uint64_t)v8, 0, v3, 6);
    swift_release();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void (**)(void, id))(v0 + 472);
      *(void *)(v0 + 440) = v10;
      id v12 = v7;
      v11(0, v7);

      swift_release();
      swift_release();
      id v14 = *(void (**)(void, void))(v0 + 472);
      uint64_t v13 = *(void *)(v0 + 480);
      swift_retain();
      sub_10008CB28(v10, 0xD000000000000026, 0x80000001000AD0D0, v14, v13);
      swift_release();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
    }
  }
  return result;
}

uint64_t sub_100068120()
{
  swift_release();
  *(void *)(v0 + 456) = *(void *)(v0 + 560);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 520);
    uint64_t v2 = *(void **)(v0 + 464);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 160);
    uint64_t v3 = *(void *)(v0 + 288);
    char v4 = *(unsigned char *)(v0 + 296);
    long long v5 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 128) = v5;
    *(void *)(v0 + 144) = v3;
    *(unsigned char *)(v0 + 152) = v4;
    id v6 = v2;
    swift_retain_n();
    id v7 = v6;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, v7, (uint64_t)v7, 0, v1, 6);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = *(void (**)(void, id))(v0 + 472);
    *(void *)(v0 + 440) = v10;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000026, 0x80000001000AD0D0);
    uint64_t v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, v14);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v15 = *(void (**)(void, void))(v0 + 472);
    uint64_t v16 = *(void *)(v0 + 480);
    swift_retain();
    sub_10008CB28(v10, 0xD000000000000026, 0x80000001000AD0D0, v15, v16);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void))(v0 + 472);
    uint64_t v18 = *(void *)(v0 + 480);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void *)(v0 + 440);
    swift_retain();
    sub_10008CB28(v20, 0xD000000000000026, 0x80000001000AD0D0, v19, v18);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v17();
}

uint64_t sub_100068478()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 584) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 504);
    uint64_t v4 = *(void *)(v2 + 512);
    long long v5 = sub_100068BD0;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 504);
    uint64_t v4 = *(void *)(v2 + 512);
    long long v5 = sub_100068594;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100068594()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    *(void *)(v0 + 592) = *(void *)(v0 + 448);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v1;
    void *v1 = v0;
    v1[1] = sub_1000688E8;
    return sub_100034DDC();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 520);
    uint64_t v4 = *(void **)(v0 + 464);
    swift_release();
    *(void *)(v0 + 96) = 0;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(unsigned char *)(v0 + 104) = -1;
    sub_1000A4800();
    id v5 = objc_allocWithZone((Class)NSError);
    NSString v6 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithDomain:v6 code:10 userInfo:0];

    id v8 = v4;
    swift_retain();
    sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0xD00000000000003DLL, 0x80000001000ACD50, v0 + 64, v7, v8, (uint64_t)v8, 0, v3, 6);
    swift_release();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = *(void (**)(void, id))(v0 + 472);
      *(void *)(v0 + 440) = v10;
      id v12 = v7;
      v11(0, v7);

      swift_release();
      swift_release();
      id v14 = *(void (**)(void, void))(v0 + 472);
      uint64_t v13 = *(void *)(v0 + 480);
      swift_retain();
      sub_10008CB28(v10, 0xD000000000000026, 0x80000001000AD0D0, v14, v13);
      swift_release();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
    }
  }
  return result;
}

uint64_t sub_1000688E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 608) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 512);
  uint64_t v4 = *(void *)(v2 + 504);
  if (v0) {
    id v5 = sub_100068F34;
  }
  else {
    id v5 = sub_100068A24;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100068A24()
{
  uint64_t v1 = *(void **)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void **)(v0 + 464);
  swift_release();
  *(_OWORD *)(v0 + 208) = 0u;
  *(void *)(v0 + 240) = 0;
  *(_OWORD *)(v0 + 224) = 0u;
  *(unsigned char *)(v0 + 248) = -1;
  id v4 = v1;
  id v5 = v3;
  swift_retain();
  sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0x73736563637573, 0xE700000000000000, v0 + 208, 0, v5, (uint64_t)v5, v1, v2, 6);
  swift_release();

  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v8 = v7 + 1;
  if (v7 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, void))(v0 + 472);
    *(void *)(v0 + 440) = v8;
    v9(1, 0);
    swift_release();
    swift_release();

    uint64_t v10 = *(void (**)(void, void))(v0 + 472);
    uint64_t v11 = *(void *)(v0 + 480);
    swift_retain();
    sub_10008CB28(v8, 0xD000000000000026, 0x80000001000AD0D0, v10, v11);
    swift_release();
    id v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  return result;
}

uint64_t sub_100068BD0()
{
  swift_release();
  swift_release();
  *(void *)(v0 + 456) = *(void *)(v0 + 584);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 520);
    uint64_t v2 = *(void **)(v0 + 464);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 160);
    uint64_t v3 = *(void *)(v0 + 288);
    char v4 = *(unsigned char *)(v0 + 296);
    long long v5 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 128) = v5;
    *(void *)(v0 + 144) = v3;
    *(unsigned char *)(v0 + 152) = v4;
    id v6 = v2;
    swift_retain_n();
    id v7 = v6;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, v7, (uint64_t)v7, 0, v1, 6);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v10 = v9 + 1;
    if (v9 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = *(void (**)(void, id))(v0 + 472);
    *(void *)(v0 + 440) = v10;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v12 = sub_100094F20(0xD000000000000026, 0x80000001000AD0D0);
    uint64_t v13 = (void *)sub_1000A4230();
    id v14 = (id)CKXPCSuitableError();

    v11(0, v14);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v15 = *(void (**)(void, void))(v0 + 472);
    uint64_t v16 = *(void *)(v0 + 480);
    swift_retain();
    sub_10008CB28(v10, 0xD000000000000026, 0x80000001000AD0D0, v15, v16);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void))(v0 + 472);
    uint64_t v18 = *(void *)(v0 + 480);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v20 = *(void *)(v0 + 440);
    swift_retain();
    sub_10008CB28(v20, 0xD000000000000026, 0x80000001000AD0D0, v19, v18);
    swift_release();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v17();
}

uint64_t sub_100068F34()
{
  uint64_t v1 = *(void **)(v0 + 592);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 608);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 464);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 160);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 128) = v6;
    *(void *)(v0 + 144) = v4;
    *(unsigned char *)(v0 + 152) = v5;
    id v7 = v3;
    swift_retain_n();
    id v8 = v7;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_1000867AC(0xD000000000000026, 0x80000001000AD0D0, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, v8, (uint64_t)v8, 0, v2, 6);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)(v0 + 440);
    uint64_t v11 = v10 + 1;
    if (v10 == -1)
    {
      __break(1u);
      return result;
    }
    id v12 = *(void (**)(void, id))(v0 + 472);
    *(void *)(v0 + 440) = v11;
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v13 = sub_100094F20(0xD000000000000026, 0x80000001000AD0D0);
    id v14 = (void *)sub_1000A4230();
    id v15 = (id)CKXPCSuitableError();

    v12(0, v15);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    uint64_t v16 = *(void (**)(void, void))(v0 + 472);
    uint64_t v17 = *(void *)(v0 + 480);
    swift_retain();
    sub_10008CB28(v11, 0xD000000000000026, 0x80000001000AD0D0, v16, v17);
    swift_release();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v20 = *(void (**)(void, void))(v0 + 472);
    uint64_t v19 = *(void *)(v0 + 480);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 440);
    swift_retain();
    sub_10008CB28(v21, 0xD000000000000026, 0x80000001000AD0D0, v20, v19);
    swift_release();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_100069294(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v7 = sub_1000A4460();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    a2 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v11 = a2;
  id v12 = sub_1000A4450();
  int v13 = sub_1000A4A20();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v40 = v13;
    os_log_t v41 = v12;
    uint64_t v42 = v8;
    id v43 = v11;
    id v44 = a2;
    uint64_t v36 = v7;
    uint64_t v37 = a4;
    uint64_t v38 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = sub_1000A48D0();
    uint64_t v17 = v16;
    if ((0x80000001000AD0D0 & 0x2000000000000000) != 0) {
      unint64_t v18 = (0x80000001000AD0D0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v18 = 152;
    }
    if ((((unint64_t)"Error finishing " >> 61) & ((0x80000001000AD0D0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    else
    {
      uint64_t v19 = v15;
      while (sub_1000A48D0() != v19 || v20 != v17)
      {
        char v22 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_18;
        }
        if (v18 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v23 = sub_1000A4830();
      unint64_t v24 = v25;
      swift_bridgeObjectRelease();
    }
    a3 = v38;
    uint64_t v26 = v36;
    id v11 = v43;
    uint64_t v27 = v44;
    uint64_t v45 = sub_10003CFA4(v23, v24, &v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (v27)
    {
      id v28 = v11;
      id v29 = [v28 description];
      uint64_t v30 = sub_1000A4800();
      unint64_t v32 = v31;

      id v11 = v43;
    }
    else
    {
      unint64_t v32 = 0xEE00646569666963;
      uint64_t v30 = 0x65707320656E6F6ELL;
    }
    uint64_t v45 = sub_10003CFA4(v30, v32, &v46);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v33 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v26);
    a2 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  a3(0, a2);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_100069700(void *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t, uint64_t))
{
  uint64_t v11 = sub_1000A42E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _Block_copy(a4);
  sub_1000A42A0();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  id v17 = a1;
  a7(v14, a6, v16);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100069844(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v48 = a6;
  uint64_t v50 = a5;
  uint64_t v51 = a8;
  unint64_t v49 = a7;
  uint64_t v52 = a4;
  id v42 = a1;
  uint64_t v45 = a9;
  uint64_t v11 = sub_1000A42E0();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v46 = *(void *)(v43 + 64);
  __chkstk_darwin(v11);
  int v53 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008704(&qword_1000CA3B0);
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v44 + 64);
  __chkstk_darwin(v16);
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_1000A4C40(38);
  swift_bridgeObjectRelease();
  strcpy((char *)v54, "sharingURL: ");
  BYTE5(v54[1]) = 0;
  HIWORD(v54[1]) = -5120;
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v39 = v11;
  v55._countAndFlagsBits = sub_1000A4D50();
  sub_1000A4880(v55);
  swift_bridgeObjectRelease();
  v56._countAndFlagsBits = 0x3A6572616873202CLL;
  v56._object = (void *)0xE900000000000020;
  sub_1000A4880(v56);
  id v18 = a2;
  id v19 = [v18 description];
  uint64_t v20 = sub_1000A4800();
  char v22 = v21;

  v57._countAndFlagsBits = v20;
  v57._object = v22;
  sub_1000A4880(v57);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 0x5255656C6966202CLL;
  v58._object = (void *)0xEB00000000203A4CLL;
  sub_1000A4880(v58);
  sub_10001F904(a3, (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000CA3B0);
  uint64_t v40 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59._countAndFlagsBits = sub_1000A4810();
  sub_1000A4880(v59);
  swift_bridgeObjectRelease();
  sub_1000818F0(v54[0], v54[1], 0xD000000000000048, 0x80000001000AD030);
  swift_bridgeObjectRelease();
  os_log_t v41 = v15;
  sub_1000A49A0();
  uint64_t v23 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
  uint64_t v24 = v43;
  (*(void (**)(char *, id, uint64_t))(v43 + 16))(v53, v42, v11);
  sub_10001F904(a3, (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000CA3B0);
  sub_1000A4990();
  id v42 = v18;
  id v47 = v47;
  uint64_t v25 = v45;
  swift_retain();
  uint64_t v26 = v48;
  unint64_t v27 = v49;
  sub_100093744(v48, v49);
  uint64_t v28 = v50;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1000A4980();
  unint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v31 = (v46 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (*(unsigned __int8 *)(v44 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  os_log_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v29;
  *((void *)v33 + 3) = &protocol witness table for MainActor;
  uint64_t v34 = v51;
  *((void *)v33 + 4) = v47;
  *((void *)v33 + 5) = v34;
  *((void *)v33 + 6) = v25;
  *((void *)v33 + 7) = v26;
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  *((void *)v33 + 8) = v27;
  *((void *)v33 + 9) = v36;
  *((void *)v33 + 10) = v28;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v33[v30], v35, v39);
  *(void *)&v33[v31] = v42;
  sub_1000409B0(v40, (uint64_t)&v33[v32], &qword_1000CA3B0);
  sub_1000210F4((uint64_t)v41, (uint64_t)&unk_1000CBB08, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_100069D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 496) = v15;
  *(_OWORD *)(v8 + 464) = v13;
  *(_OWORD *)(v8 + 480) = v14;
  *(void *)(v8 + 448) = a7;
  *(void *)(v8 + 456) = a8;
  *(void *)(v8 + 432) = a5;
  *(void *)(v8 + 440) = a6;
  *(void *)(v8 + 424) = a4;
  sub_1000A4990();
  *(void *)(v8 + 504) = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  *(void *)(v8 + 512) = v10;
  *(void *)(v8 + 520) = v9;
  return _swift_task_switch(sub_100069DC8, v10, v9);
}

uint64_t sub_100069DC8()
{
  uint64_t v2 = v0[58];
  uint64_t v1 = v0[59];
  uint64_t v4 = v0[56];
  unint64_t v3 = v0[57];
  uint64_t v6 = v0[54];
  uint64_t v5 = v0[55];
  v0[51] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  uint64_t v7 = sub_100047828();
  v0[66] = v7;
  id v8 = objc_allocWithZone((Class)UIImage);
  sub_100093744(v4, v3);
  Class isa = sub_1000A42F0().super.isa;
  id v10 = [v8 initWithData:isa];
  sub_10000E60C(v4, v3);

  uint64_t v11 = *(void **)(v7 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appIcon);
  *(void *)(v7 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appIcon) = v10;

  uint64_t v12 = (void *)(v7 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
  *uint64_t v12 = v2;
  v12[1] = v1;
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  v0[67] = v13;
  *(void *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  long long v14 = (void *)swift_task_alloc();
  v0[68] = v14;
  void *v14 = v0;
  v14[1] = sub_100069F88;
  uint64_t v15 = v0[61];
  uint64_t v16 = v0[62];
  uint64_t v17 = v0[60];
  return sub_10004B170(v17, v15, v16, (uint64_t)sub_100093B00, v13);
}

uint64_t sub_100069F88()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 520);
  uint64_t v3 = *(void *)(v1 + 512);
  return _swift_task_switch(sub_10006A0CC, v3, v2);
}

uint64_t sub_10006A0CC()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  *(void *)(v0 + 552) = v2;
  if (!v2) {
    return sub_1000A4CD0();
  }
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  *(void *)(v0 + 560) = v3;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0xE000000000000000;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_itemUTI + 8);
  if (v5)
  {
    *(void *)(v3 + 16) = v6;
    *(void *)(v3 + 24) = v5;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 568) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10006A3E8;
    return sub_10000C678();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 424);
    swift_retain();
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    id v10 = sub_100096858(0xD000000000000023, 0x80000001000AD080);
    id v11 = v9;
    sub_100087988(0xD000000000000048, 0x80000001000AD030, (void (*)(void, void))0xD000000000000023, 0x80000001000AD080, v0 + 16, v10, v11, v4, (uint64_t)v11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 408);
    uint64_t v13 = v12 + 1;
    if (v12 == -1)
    {
      __break(1u);
    }
    else
    {
      long long v14 = *(void (**)(uint64_t, void, uint64_t, void, id))(v0 + 432);
      *(void *)(v0 + 408) = v13;
      id v15 = v10;
      v14(v6, 0, v6, 0, v10);

      swift_release();
      swift_release();
      swift_release();
      uint64_t v16 = *(void (**)(void, void, void, void, void))(v0 + 432);
      uint64_t v17 = *(void *)(v0 + 440);
      swift_retain();
      sub_10008D0A4(v13, 0xD000000000000048, 0x80000001000AD030, v16, v17);
      swift_release();
      id v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
  return result;
}

uint64_t sub_10006A3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[72] = a1;
  v5[73] = a2;
  v5[74] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[65];
  uint64_t v7 = v4[64];
  if (v2) {
    id v8 = sub_10006A6F8;
  }
  else {
    id v8 = sub_10006A534;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10006A534()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void **)(v0 + 424);
  swift_release();
  uint64_t v3 = sub_10000DE90(0);
  uint64_t v5 = v4;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(void *)(v0 + 240) = 0;
  *(unsigned char *)(v0 + 248) = -1;
  id v6 = v2;
  sub_100087988(0xD000000000000048, 0x80000001000AD030, (void (*)(void, void))0x73736563637573, 0xE700000000000000, v0 + 208, 0, v6, v1, (uint64_t)v6);

  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 408);
  uint64_t v9 = v8 + 1;
  if (v8 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 584);
    uint64_t v11 = *(void *)(v0 + 576);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v0 + 432);
    *(void *)(v0 + 408) = v9;
    v12(v3, v5, v11, v10, 0);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = *(void (**)(void, void, void, void, void))(v0 + 432);
    uint64_t v14 = *(void *)(v0 + 440);
    swift_retain();
    sub_10008D0A4(v9, 0xD000000000000048, 0x80000001000AD030, v13, v14);
    swift_release();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  return result;
}

uint64_t sub_10006A6F8()
{
  uint64_t v1 = *(void *)(v0 + 592);
  swift_release();
  *(void *)(v0 + 400) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v37 = (_OWORD *)(v0 + 64);
    swift_errorRelease();
    sub_1000A4C40(22);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1000A48D0();
    uint64_t v17 = v16;
    if ((0x80000001000AD030 & 0x2000000000000000) != 0) {
      unint64_t v18 = (0x80000001000AD030 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v18 = 288;
    }
    if ((((unint64_t)"upInfo:withReply:)" >> 61) & ((0x80000001000AD030 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      uint64_t v24 = (void *)0xE000000000000000;
    }
    else
    {
      uint64_t v19 = v15;
      while (sub_1000A48D0() != v19 || v20 != v17)
      {
        char v22 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_17;
        }
        if (v18 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v23 = sub_1000A4830();
      uint64_t v24 = v25;
      swift_bridgeObjectRelease();
    }
    uint64_t v26 = *(void *)(v0 + 592);
    uint64_t v27 = *(void *)(v0 + 560);
    uint64_t v28 = *(void **)(v0 + 424);
    v39._countAndFlagsBits = v23;
    v39._object = v24;
    sub_1000A4880(v39);
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = 8250;
    v40._object = (void *)0xE200000000000000;
    sub_1000A4880(v40);
    *(void *)(v0 + 416) = v26;
    swift_errorRetain();
    v41._countAndFlagsBits = sub_1000A4810();
    sub_1000A4880(v41);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = 0;
    *uint64_t v37 = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(unsigned char *)(v0 + 104) = -1;
    id v29 = sub_100096858(0xD000000000000010, 0x80000001000AD0B0);
    id v30 = v28;
    sub_100087988(0xD000000000000048, 0x80000001000AD030, (void (*)(void, void))0xD000000000000010, 0x80000001000AD0B0, (uint64_t)v37, v29, v30, v27, (uint64_t)v30);

    uint64_t result = swift_beginAccess();
    uint64_t v31 = *(void *)(v0 + 408);
    uint64_t v10 = v31 + 1;
    if (v31 != -1)
    {
      unint64_t v32 = *(void (**)(void, void, void, void, id))(v0 + 432);
      *(void *)(v0 + 408) = v10;
      id v33 = v29;
      v32(0, 0, 0, 0, v29);

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void **)(v0 + 424);
  swift_errorRelease();
  sub_100092640(v0 + 256, v0 + 160);
  uint64_t v4 = *(void *)(v0 + 288);
  char v5 = *(unsigned char *)(v0 + 296);
  long long v6 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 128) = v6;
  *(void *)(v0 + 144) = v4;
  *(unsigned char *)(v0 + 152) = v5;
  id v7 = v3;
  sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
  sub_100087988(0xD000000000000048, 0x80000001000AD030, (void (*)(void, void))0xD000000000000015, 0x80000001000ACD30, v0 + 112, 0, v7, v2, (uint64_t)v7);

  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 408);
  uint64_t v10 = v9 + 1;
  if (v9 == -1)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v11 = *(void (**)(void, void, void, void, id))(v0 + 432);
  *(void *)(v0 + 408) = v10;
  sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
  id v12 = sub_100094F20(0xD000000000000048, 0x80000001000AD030);
  uint64_t v13 = (void *)sub_1000A4230();
  id v14 = (id)CKXPCSuitableError();

  v11(0, 0, 0, 0, v14);
  sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
  swift_release();
  swift_release();
  sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
  sub_100093174(v0 + 160, (void (*)(void, void, void, void, void, void))sub_10003E804);
LABEL_20:
  swift_errorRelease();
  swift_release();
  uint64_t v35 = *(void (**)(void, void, void, void, void))(v0 + 432);
  uint64_t v34 = *(void *)(v0 + 440);
  swift_retain();
  sub_10008D0A4(v10, 0xD000000000000048, 0x80000001000AD030, v35, v34);
  swift_release();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_10006AC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void, void, void, void, void), uint64_t a7)
{
  uint64_t v10 = sub_1000A4460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5) {
    a5 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v14 = a5;
  uint64_t v15 = sub_1000A4450();
  int v16 = sub_1000A4A20();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v43 = v16;
    os_log_t v44 = v15;
    uint64_t v45 = v11;
    id v46 = v14;
    id v47 = a5;
    uint64_t v39 = v10;
    uint64_t v40 = a7;
    Swift::String v41 = a6;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v49 = v42;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = sub_1000A48D0();
    uint64_t v20 = v19;
    if ((0x80000001000AD030 & 0x2000000000000000) != 0) {
      unint64_t v21 = (0x80000001000AD030 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v21 = 288;
    }
    if ((((unint64_t)"upInfo:withReply:)" >> 61) & ((0x80000001000AD030 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    else
    {
      uint64_t v22 = v18;
      while (sub_1000A48D0() != v22 || v23 != v20)
      {
        char v25 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_18;
        }
        if (v21 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v26 = sub_1000A4830();
      unint64_t v27 = v28;
      swift_bridgeObjectRelease();
    }
    a6 = v41;
    uint64_t v29 = v39;
    id v14 = v46;
    id v30 = v47;
    uint64_t v48 = sub_10003CFA4(v26, v27, &v49);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    if (v30)
    {
      id v31 = v14;
      id v32 = [v31 description];
      uint64_t v33 = sub_1000A4800();
      unint64_t v35 = v34;

      id v14 = v46;
    }
    else
    {
      unint64_t v35 = 0xEE00646569666963;
      uint64_t v33 = 0x65707320656E6F6ELL;
    }
    uint64_t v48 = sub_10003CFA4(v33, v35, &v49);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v36 = v44;
    _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v43, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v29);
    a5 = v47;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  a6(0, 0, 0, 0, a5);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

void sub_10006B318(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  NSString v8 = a4;
  if (a2)
  {
    NSString v9 = sub_1000A47C0();
    if (!v8) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  NSString v9 = 0;
  if (a4) {
LABEL_3:
  }
    NSString v8 = sub_1000A47C0();
LABEL_4:
  if (a5) {
    uint64_t v10 = sub_1000A4230();
  }
  else {
    uint64_t v10 = 0;
  }
  id v11 = (id)v10;
  (*(void (**)(uint64_t, NSString, NSString))(a6 + 16))(a6, v9, v8);
}

uint64_t sub_10006B3D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a3;
  uint64_t v35 = a8;
  uint64_t v32 = a4;
  uint64_t v33 = a7;
  id v30 = a2;
  uint64_t v11 = sub_1000A42E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v14 - 8);
  int v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v36, "sharingURL: ");
  BYTE5(v36[1]) = 0;
  HIWORD(v36[1]) = -5120;
  sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
  v37._countAndFlagsBits = sub_1000A4D50();
  sub_1000A4880(v37);
  swift_bridgeObjectRelease();
  sub_1000818F0(v36[0], v36[1], a5, a6);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v17 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  sub_1000A4990();
  id v18 = v30;
  id v19 = v30;
  id v20 = v31;
  uint64_t v21 = v32;
  swift_retain();
  uint64_t v22 = sub_1000A4980();
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v22;
  *((void *)v25 + 3) = &protocol witness table for MainActor;
  uint64_t v26 = v34;
  *((void *)v25 + 4) = v20;
  *((void *)v25 + 5) = v26;
  *((void *)v25 + 6) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v25[v23], v29, v11);
  *(void *)&v25[v24] = v18;
  sub_100055948((uint64_t)v16, v35, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_10006B6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[52] = a7;
  v8[53] = a8;
  v8[50] = a5;
  v8[51] = a6;
  v8[49] = a4;
  sub_1000A4990();
  v8[54] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v8[55] = v10;
  v8[56] = v9;
  return _swift_task_switch(sub_10006B740, v10, v9);
}

uint64_t sub_10006B740()
{
  uint64_t v2 = v0[50];
  uint64_t v1 = v0[51];
  v0[47] = 0;
  uint64_t v3 = swift_allocObject();
  v0[57] = v3;
  *(void *)(v3 + 16) = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[58] = sub_100047828();
  uint64_t v4 = swift_allocObject();
  v0[59] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  char v5 = (void *)swift_task_alloc();
  v0[60] = v5;
  *char v5 = v0;
  v5[1] = sub_10006B868;
  uint64_t v7 = v0[52];
  uint64_t v6 = v0[53];
  return sub_10004BBD0(v7, v6, (uint64_t)sub_100093734, v4);
}

uint64_t sub_10006B868()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 448);
  uint64_t v3 = *(void *)(v1 + 440);
  return _swift_task_switch(sub_10006B9AC, v3, v2);
}

uint64_t sub_10006B9AC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 464) + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  *(void *)(v0 + 488) = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + 392) + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 352) = v4;
    *(void *)(v0 + 360) = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10006BDA8;
    uint64_t v8 = *(void *)(v0 + 416);
    uint64_t v7 = *(void *)(v0 + 424);
    return sub_100032B08(v8, v7);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 456);
    uint64_t v9 = *(void *)(v0 + 464);
    uint64_t v11 = *(void **)(v0 + 392);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v12 = objc_allocWithZone((Class)NSError);
    NSString v13 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithDomain:v13 code:10 userInfo:0];

    id v15 = v11;
    swift_retain();
    sub_100088B5C(0xD000000000000042, 0x80000001000ACFE0, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v14, v15, (uint64_t)v15, v10, v9);
    swift_release();

    uint64_t result = swift_beginAccess();
    uint64_t v16 = *(void *)(v0 + 376);
    uint64_t v17 = v16 + 1;
    if (v16 == -1)
    {
      __break(1u);
    }
    else
    {
      id v18 = *(void (**)(void, id))(v0 + 400);
      *(void *)(v0 + 376) = v17;
      id v19 = v14;
      v18(0, v14);

      swift_release();
      swift_release();
      swift_release();
      id v20 = *(uint64_t **)(v0 + 400);
      uint64_t v21 = *(void *)(v0 + 408);
      swift_retain();
      sub_10008D62C(v17, 0xD000000000000042, 0x80000001000ACFE0, v20, v21, 41011);
      swift_release();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
  }
  return result;
}

uint64_t sub_10006BDA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 504) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 448);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    uint64_t v5 = sub_10006C110;
  }
  else {
    uint64_t v5 = sub_10006BEE4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006BEE4()
{
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(void **)(v0 + 392);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(v0 + 368);

  *(void *)(v3 + 16) = v5;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS12SharingModel_ckMetadata);
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = -1;
  id v7 = v6;
  id v8 = v4;
  swift_retain();
  sub_100088B5C(0xD000000000000042, 0x80000001000ACFE0, 0x73736563637573, 0xE700000000000000, v0 + 160, 0, v8, (uint64_t)v8, v3, v2);
  swift_release();

  uint64_t result = swift_beginAccess();
  uint64_t v10 = *(void *)(v0 + 376);
  uint64_t v11 = v10 + 1;
  if (v10 == -1)
  {
    __break(1u);
  }
  else
  {
    id v12 = *(void (**)(void *, void))(v0 + 400);
    *(void *)(v0 + 376) = v11;
    v12(v6, 0);
    swift_release();

    swift_release();
    swift_release();
    id v14 = *(uint64_t **)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008D62C(v11, 0xD000000000000042, 0x80000001000ACFE0, v14, v13, 41011);
    swift_release();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  return result;
}

uint64_t sub_10006C110()
{
  uint64_t v1 = *(void *)(v0 + 504);
  swift_release();
  *(void *)(v0 + 384) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v2 = *(void *)(v0 + 464);
    uint64_t v4 = *(void **)(v0 + 392);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v5 = *(void *)(v0 + 240);
    char v6 = *(unsigned char *)(v0 + 248);
    long long v7 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v7;
    *(void *)(v0 + 96) = v5;
    *(unsigned char *)(v0 + 104) = v6;
    id v8 = v4;
    swift_retain_n();
    id v9 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100088B5C(0xD000000000000042, 0x80000001000ACFE0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v9, (uint64_t)v9, v3, v2);
    swift_release_n();

    uint64_t result = swift_beginAccess();
    uint64_t v11 = *(void *)(v0 + 376);
    uint64_t v12 = v11 + 1;
    if (v11 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void (**)(void, id))(v0 + 400);
    *(void *)(v0 + 376) = v12;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v14 = sub_100094F20(0xD000000000000042, 0x80000001000ACFE0);
    id v15 = (void *)sub_1000A4230();
    id v16 = (id)CKXPCSuitableError();

    v13(0, v16);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_release();
    uint64_t v17 = *(uint64_t **)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 408);
    swift_retain();
    sub_10008D62C(v12, 0xD000000000000042, 0x80000001000ACFE0, v17, v18, 41011);
    swift_release();
    id v19 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v21 = *(uint64_t **)(v0 + 400);
    uint64_t v20 = *(void *)(v0 + 408);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_release();
    swift_beginAccess();
    uint64_t v22 = *(void *)(v0 + 376);
    swift_retain();
    sub_10008D62C(v22, 0xD000000000000042, 0x80000001000ACFE0, v21, v20, 41011);
    swift_release();
    id v19 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v19();
}

uint64_t sub_10006C478(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v7 = sub_1000A4460();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    a2 = (void *)sub_1000A4230();
  }
  sub_1000A4440();
  id v11 = a2;
  uint64_t v12 = sub_1000A4450();
  int v13 = sub_1000A4A20();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v40 = v13;
    os_log_t v41 = v12;
    uint64_t v42 = v8;
    id v43 = v11;
    os_log_t v44 = a2;
    uint64_t v36 = v7;
    uint64_t v37 = a4;
    uint64_t v38 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = sub_1000A48D0();
    uint64_t v17 = v16;
    if ((0x80000001000ACFE0 & 0x2000000000000000) != 0) {
      unint64_t v18 = (0x80000001000ACFE0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v18 = 264;
    }
    if ((((unint64_t)"ntainerSetupInfo:withReply:)" >> 61) & ((0x80000001000ACFE0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    else
    {
      uint64_t v19 = v15;
      while (sub_1000A48D0() != v19 || v20 != v17)
      {
        char v22 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_18;
        }
        if (v18 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v23 = sub_1000A4830();
      unint64_t v24 = v25;
      swift_bridgeObjectRelease();
    }
    a3 = v38;
    uint64_t v26 = v36;
    id v11 = v43;
    unint64_t v27 = v44;
    uint64_t v45 = sub_10003CFA4(v23, v24, &v46);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (v27)
    {
      id v28 = v11;
      id v29 = [v28 description];
      uint64_t v30 = sub_1000A4800();
      unint64_t v32 = v31;

      id v11 = v43;
    }
    else
    {
      unint64_t v32 = 0xEE00646569666963;
      uint64_t v30 = 0x65707320656E6F6ELL;
    }
    uint64_t v45 = sub_10003CFA4(v30, v32, &v46);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v33 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v26);
    a2 = v44;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  a3(0, a2);

  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_10006C8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = a1;
  sub_1000409B0(a1, (uint64_t)v34, &qword_1000CB378);
  uint64_t v10 = v34[0];
  uint64_t v11 = v34[1];
  uint64_t v13 = v34[2];
  uint64_t v12 = v34[3];
  uint64_t v33 = v34[4];
  char v32 = v35;
  a5[3] = type metadata accessor for SPIAnalyticsEvent();
  a5[4] = (uint64_t)&off_1000C2B58;
  uint64_t v14 = sub_1000931B4(a5);
  swift_beginAccess();
  uint64_t v15 = *(void **)(a3 + 16);
  if (v15)
  {
    uint64_t v16 = a4 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName;
    uint64_t v17 = *(void *)(a4 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
    uint64_t v18 = *(void *)(v16 + 8);
    swift_bridgeObjectRetain();
    uint64_t v31 = v12;
    uint64_t v19 = v8;
    uint64_t v20 = v13;
    uint64_t v21 = v11;
    uint64_t v22 = a2;
    uint64_t v23 = v10;
    id v24 = v15;
    unint64_t v25 = sub_10004E490((uint64_t)v24, v17, v18);
    unint64_t v27 = v26;

    uint64_t v10 = v23;
    a2 = v22;
    uint64_t v11 = v21;
    uint64_t v13 = v20;
    uint64_t v8 = v19;
    uint64_t v12 = v31;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v25 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  uint64_t v28 = *(void *)(a2 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v29 = *(void *)(a2 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  uint64_t *v14 = v25;
  v14[1] = v27;
  v14[2] = v28;
  v14[3] = v29;
  void v14[4] = v10;
  v14[5] = v11;
  v14[6] = v13;
  v14[7] = v12;
  v14[8] = v33;
  *((unsigned char *)v14 + 72) = v32;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_100093174(v8, (void (*)(void, void, void, void, void, void))sub_100093160);
}

void sub_10006CBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1000A4230();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_10006CC50(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000818F0(0x6168732068746977, 0xEA00000000006572, 0xD00000000000002CLL, 0x80000001000ACFB0);
  sub_1000A49A0();
  uint64_t v12 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  sub_1000A4990();
  id v13 = a2;
  id v14 = v4;
  swift_retain();
  id v15 = a1;
  uint64_t v16 = sub_1000A4980();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v14;
  v17[5] = a3;
  v17[6] = a4;
  unsigned char v17[7] = v15;
  v17[8] = a2;
  sub_100055948((uint64_t)v11, (uint64_t)&unk_1000CBAE8, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_10006CDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[55] = a7;
  v8[56] = a8;
  v8[53] = a5;
  v8[54] = a6;
  v8[52] = a4;
  v8[57] = sub_100008704(&qword_1000CA3B0);
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  sub_1000A4990();
  v8[62] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v8[63] = v10;
  v8[64] = v9;
  return _swift_task_switch(sub_10006CEDC, v10, v9);
}

uint64_t sub_10006CEDC()
{
  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  v0[49] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[65] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[66] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[67] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006CFEC;
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  return sub_100048D58(v6, v5, (uint64_t)sub_1000935A8, v3, 0);
}

uint64_t sub_10006CFEC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 512);
  uint64_t v3 = *(void *)(v1 + 504);
  return _swift_task_switch(sub_10006D130, v3, v2);
}

uint64_t sub_10006D130()
{
  uint64_t v1 = *(void *)(v0[65] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[68] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[52] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[47] = v4;
    v0[48] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  v0[69] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[70] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10006D2E4;
  return sub_100054C04();
}

uint64_t sub_10006D2E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 504);
    uint64_t v4 = *(void *)(v2 + 512);
    uint64_t v5 = sub_10006DE2C;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 504);
    uint64_t v4 = *(void *)(v2 + 512);
    uint64_t v5 = sub_10006D400;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006D400()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10006D778;
    return sub_100034038();
  }
  else
  {
    uint64_t v1 = *(void **)(v0 + 440);
    uint64_t v2 = *(void **)(v0 + 416);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v3 = objc_allocWithZone((Class)NSError);
    NSString v4 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v5 = [v3 initWithDomain:v4 code:10 userInfo:0];

    id v6 = v1;
    id v7 = v2;
    sub_10008AE20(0xD00000000000002CLL, 0x80000001000ACFB0, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v5, v7, v6, (uint64_t)v7, 9);

    uint64_t result = swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 392);
    BOOL v10 = __CFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 488);
      id v13 = *(void (**)(uint64_t, void, id))(v0 + 424);
      *(void *)(v0 + 392) = v11;
      uint64_t v14 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
      id v15 = v5;
      v13(v12, 0, v5);

      sub_10000B988(v12, &qword_1000CA3B0);
      swift_release();
      swift_release();
      uint64_t v17 = *(void (**)(void, void, void))(v0 + 424);
      uint64_t v16 = *(void *)(v0 + 432);
      uint64_t v18 = *(void *)(v0 + 392);
      swift_retain();
      sub_10008BF84(v18, 0xD00000000000002CLL, 0x80000001000ACFB0, v17, v16);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
      return v19();
    }
  }
  return result;
}

uint64_t sub_10006D778()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 584) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 512);
  uint64_t v4 = *(void *)(v2 + 504);
  if (v0) {
    id v5 = sub_10006E258;
  }
  else {
    id v5 = sub_10006D8B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006D8B4()
{
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10006D990;
  uint64_t v4 = *(void *)(v0 + 480);
  return sub_100035D30(v4);
}

uint64_t sub_10006D990()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 480);
  *(void *)(*v1 + 600) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 512);
  uint64_t v5 = *(void *)(v2 + 504);
  if (v0) {
    uint64_t v6 = sub_10006E680;
  }
  else {
    uint64_t v6 = sub_10006DAF0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10006DAF0()
{
  uint64_t v20 = v0;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v2 = *(void **)(v0 + 400);
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(void **)(v0 + 416);
  *(void *)(v0 + 192) = 0;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 200) = -1;
  strcpy((char *)v19, "sharingURL: ");
  BYTE5(v19[1]) = 0;
  HIWORD(v19[1]) = -5120;
  sub_10001F904(v4, v3, &qword_1000CA3B0);
  id v6 = v2;
  v22._countAndFlagsBits = sub_1000A4810();
  sub_1000A4880(v22);
  swift_bridgeObjectRelease();
  id v7 = v5;
  id v8 = v6;
  sub_10008AE20(0xD00000000000002CLL, 0x80000001000ACFB0, v19[0], v19[1], v0 + 160, 0, v7, v8, (uint64_t)v7, 9);

  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 392);
  BOOL v10 = __CFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(v0 + 472);
  id v13 = *(void (**)(uint64_t, id, void))(v0 + 424);
  *(void *)(v0 + 392) = v11;
  id v14 = [v8 _copyWithoutPersonalInfo];
  v13(v12, v14, 0);

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  sub_10000B988(v12, &qword_1000CA3B0);
  swift_beginAccess();
  uint64_t v16 = *(void (**)(void, void, void))(v0 + 424);
  uint64_t v15 = *(void *)(v0 + 432);
  uint64_t v17 = *(void *)(v0 + 392);
  swift_retain();
  sub_10008BF84(v17, 0xD00000000000002CLL, 0x80000001000ACFB0, v16, v15);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_10006DE2C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 568);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 440);
    uint64_t v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD00000000000002CLL, 0x80000001000ACFB0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 9);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 392);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 464);
    uint64_t v16 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD00000000000002CLL, 0x80000001000ACFB0);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v23, 0xD00000000000002CLL, 0x80000001000ACFB0, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v25 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v27, 0xD00000000000002CLL, 0x80000001000ACFB0, v25, v26);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_10006E258()
{
  uint64_t v1 = *(void *)(v0 + 584);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 440);
    uint64_t v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD00000000000002CLL, 0x80000001000ACFB0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 9);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 392);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 464);
    uint64_t v16 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD00000000000002CLL, 0x80000001000ACFB0);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v23, 0xD00000000000002CLL, 0x80000001000ACFB0, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v25 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v27, 0xD00000000000002CLL, 0x80000001000ACFB0, v25, v26);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_10006E680()
{
  uint64_t v1 = *(void *)(v0 + 600);
  swift_release();
  *(void *)(v0 + 408) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 440);
    uint64_t v3 = *(void **)(v0 + 416);
    swift_errorRelease();
    sub_100092640(v0 + 208, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 240);
    char v5 = *(unsigned char *)(v0 + 248);
    long long v6 = *(_OWORD *)(v0 + 224);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD00000000000002CLL, 0x80000001000ACFB0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 9);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 392);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 464);
    uint64_t v16 = *(void (**)(uint64_t, void, id))(v0 + 424);
    *(void *)(v0 + 392) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD00000000000002CLL, 0x80000001000ACFB0);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v23, 0xD00000000000002CLL, 0x80000001000ACFB0, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v25 = *(void (**)(void, void, void))(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 432);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 392);
    swift_retain();
    sub_10008BF84(v27, 0xD00000000000002CLL, 0x80000001000ACFB0, v25, v26);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_10006EAA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    uint64_t v15 = (void *)sub_1000A4230();
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  id v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    os_log_t v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    uint64_t v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000ACFB0 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000ACFB0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 176;
    }
    if ((((unint64_t)"rticipant that isn't an admin" >> 61) & ((0x80000001000ACFB0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    id v10 = v41;
    uint64_t v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      uint64_t v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

void sub_10006EFBC(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, void *, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v17 = a3;
  id v15 = a4;
  id v16 = a1;
  a8(v17, a4, a7, v14);
  swift_release();
}

uint64_t sub_10006F08C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  id v11 = [v10 description];
  uint64_t v12 = sub_1000A4800();
  unint64_t v14 = v13;

  sub_1000818F0(v12, v14, 0xD000000000000029, 0x80000001000ACED0);
  swift_bridgeObjectRelease();
  sub_1000A49A0();
  uint64_t v15 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  sub_1000A4990();
  id v16 = v10;
  id v17 = v3;
  swift_retain();
  uint64_t v18 = sub_1000A4980();
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v17;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = v16;
  sub_100055948((uint64_t)v9, (uint64_t)&unk_1000CBAD8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_10006F23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[52] = a6;
  v7[53] = a7;
  v7[50] = a4;
  v7[51] = a5;
  uint64_t v8 = sub_1000A4460();
  v7[54] = v8;
  v7[55] = *(void *)(v8 - 8);
  v7[56] = swift_task_alloc();
  sub_1000A4990();
  v7[57] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v7[58] = v10;
  v7[59] = v9;
  return _swift_task_switch(sub_10006F334, v10, v9);
}

uint64_t sub_10006F334()
{
  v0[47] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[60] = sub_100047828();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[61] = v1;
  void *v1 = v0;
  v1[1] = sub_10006F3F4;
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[53];
  uint64_t v4 = v0[51];
  return sub_10004BD2C(v3, v4, v2);
}

uint64_t sub_10006F3F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 472);
  uint64_t v3 = *(void *)(v1 + 464);
  return _swift_task_switch(sub_10006F514, v3, v2);
}

uint64_t sub_10006F514()
{
  uint64_t v1 = *(void *)(v0[60] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[62] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  v0[63] = *(void *)(v1 + 16);
  swift_retain();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[64] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10006F63C;
  return sub_100054C04();
}

uint64_t sub_10006F63C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 464);
    uint64_t v4 = *(void *)(v2 + 472);
    uint64_t v5 = sub_10006FCD0;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 464);
    uint64_t v4 = *(void *)(v2 + 472);
    uint64_t v5 = sub_10006F758;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006F758()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57) == 1)
  {
    sub_1000A4440();
    uint64_t v1 = sub_1000A4450();
    os_log_type_t v2 = sub_1000A4A40();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "currentUser is owner", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 440);
    uint64_t v4 = *(void *)(v0 + 448);
    uint64_t v6 = *(void *)(v0 + 432);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = 1;
    goto LABEL_14;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v8 = *(unsigned __int8 *)(v0 + 58);
  swift_release();
  if (v8 == 1)
  {
    uint64_t v7 = 4;
LABEL_14:
    uint64_t v21 = *(void **)(v0 + 424);
    uint64_t v22 = *(void **)(v0 + 400);
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(void *)(v0 + 192) = 0;
    *(unsigned char *)(v0 + 200) = -1;
    *(void *)(v0 + 384) = v7;
    type metadata accessor for CSUICurrentUserCKShareStatus(0);
    uint64_t v23 = sub_1000A4810();
    uint64_t v25 = v24;
    id v26 = v21;
    id v27 = v22;
    sub_100089CC4(0xD000000000000029, 0x80000001000ACED0, v23, v25, v0 + 160, 0, v27, v26, v7, (uint64_t)v27);

    uint64_t result = swift_beginAccess();
    uint64_t v28 = *(void *)(v0 + 376);
    uint64_t v18 = v28 + 1;
    if (v28 != -1)
    {
      unint64_t v29 = *(void (**)(uint64_t, void))(v0 + 408);
      *(void *)(v0 + 376) = v18;
      v29(v7, 0);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_22;
  }
  id v9 = [*(id *)(v0 + 424) currentUserParticipant];
  if (v9)
  {
    uint64_t v10 = v9;
    if ([v9 role] == (id)3)
    {

      uint64_t v7 = 3;
    }
    else
    {
      id v20 = [v10 role];
      if (v20 != (id)sub_1000A4AB0())
      {
        id v33 = *(void **)(v0 + 424);
        uint64_t v34 = *(void **)(v0 + 400);
        *(_OWORD *)(v0 + 112) = 0u;
        *(_OWORD *)(v0 + 128) = 0u;
        *(void *)(v0 + 144) = 0;
        *(unsigned char *)(v0 + 152) = -1;
        id v35 = sub_100096858(0xD00000000000003DLL, 0x80000001000ACF70);
        id v36 = v33;
        id v37 = v34;
        sub_100089CC4(0xD000000000000029, 0x80000001000ACED0, 0xD00000000000003DLL, 0x80000001000ACF70, v0 + 112, v35, v37, v36, 0, (uint64_t)v37);

        uint64_t result = swift_beginAccess();
        uint64_t v38 = *(void *)(v0 + 376);
        uint64_t v18 = v38 + 1;
        if (v38 != -1)
        {
          uint64_t v39 = *(void (**)(void, id))(v0 + 408);
          *(void *)(v0 + 376) = v18;
          v39(0, v35);

          goto LABEL_16;
        }
LABEL_23:
        __break(1u);
        return result;
      }

      uint64_t v7 = 2;
    }
    goto LABEL_14;
  }
  id v11 = *(void **)(v0 + 424);
  uint64_t v12 = *(void **)(v0 + 400);
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = -1;
  id v13 = sub_100096858(0xD000000000000031, 0x80000001000ACF30);
  id v14 = v11;
  id v15 = v12;
  sub_100089CC4(0xD000000000000029, 0x80000001000ACED0, 0xD000000000000031, 0x80000001000ACF30, v0 + 64, v13, v15, v14, 0, (uint64_t)v15);

  uint64_t result = swift_beginAccess();
  uint64_t v17 = *(void *)(v0 + 376);
  uint64_t v18 = v17 + 1;
  if (v17 == -1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v19 = *(void (**)(void, id))(v0 + 408);
  *(void *)(v0 + 376) = v18;
  v19(0, v13);

LABEL_16:
  swift_release();
  swift_release();
  uint64_t v31 = *(uint64_t **)(v0 + 408);
  uint64_t v30 = *(void *)(v0 + 416);
  swift_retain();
  sub_10008D62C(v18, 0xD000000000000029, 0x80000001000ACED0, v31, v30, 2952);
  swift_release();
  swift_task_dealloc();
  id v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_10006FCD0()
{
  uint64_t v1 = *(void *)(v0 + 520);
  swift_release();
  swift_release();
  *(void *)(v0 + 392) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_type_t v2 = *(void **)(v0 + 424);
    uint64_t v3 = *(void **)(v0 + 400);
    swift_errorRelease();
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void **)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v8 = *(void *)(v0 + 240);
    unsigned __int8 v9 = *(unsigned char *)(v0 + 248);
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v6;
    *(void *)(v0 + 40) = v7;
    *(void *)(v0 + 48) = v8;
    *(unsigned char *)(v0 + 56) = v9;
    id v10 = v2;
    id v11 = v3;
    sub_10003E7A4(v4, v5, v6, v7, v8, v9);
    sub_100089CC4(0xD000000000000029, 0x80000001000ACED0, 0xD00000000000002CLL, 0x80000001000ACF00, v0 + 16, 0, v11, v10, 0, (uint64_t)v11);

    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v14 = v13 + 1;
    if (v13 == -1)
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = v13 + 1;
    id v15 = *(void (**)(void, void))(v0 + 408);
    *(void *)(v0 + 376) = v14;
    v15(0, 0);
    swift_release();
    swift_release();
    sub_10003E804(v4, v5, v6, v7, v8, v9);
    sub_10003E804(v4, v5, v6, v7, v8, v9);
    swift_errorRelease();
    uint64_t v17 = *(uint64_t **)(v0 + 408);
    uint64_t v16 = *(void *)(v0 + 416);
    swift_retain();
    sub_10008D62C(v22, 0xD000000000000029, 0x80000001000ACED0, v17, v16, 2952);
    swift_release();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    id v20 = *(uint64_t **)(v0 + 408);
    uint64_t v19 = *(void *)(v0 + 416);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = *(void *)(v0 + 376);
    swift_retain();
    sub_10008D62C(v21, 0xD000000000000029, 0x80000001000ACED0, v20, v19, 2952);
    swift_release();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_10007007C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000818F0(0x6F6974706F206F6ELL, 0xEA0000000000736ELL, 0xD000000000000053, 0x80000001000ACE70);
  sub_1000A49A0();
  uint64_t v16 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  sub_1000A4990();
  id v17 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v6;
  swift_retain();
  id v19 = a1;
  uint64_t v20 = sub_1000A4980();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v18;
  void v21[5] = a5;
  v21[6] = a6;
  v21[7] = v19;
  v21[8] = a2;
  v21[9] = a3;
  v21[10] = a4;
  sub_100055948((uint64_t)v15, (uint64_t)&unk_1000CBAC8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100070230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[68] = v15;
  v8[67] = v14;
  v8[66] = a8;
  v8[65] = a7;
  v8[63] = a5;
  v8[64] = a6;
  v8[62] = a4;
  uint64_t v9 = sub_1000A4460();
  v8[69] = v9;
  v8[70] = *(void *)(v9 - 8);
  v8[71] = swift_task_alloc();
  v8[72] = sub_100008704(&qword_1000CA3B0);
  v8[73] = swift_task_alloc();
  v8[74] = swift_task_alloc();
  v8[75] = swift_task_alloc();
  v8[76] = swift_task_alloc();
  sub_1000A4990();
  v8[77] = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  v8[78] = v11;
  v8[79] = v10;
  return _swift_task_switch(sub_1000703A0, v11, v10);
}

uint64_t sub_1000703A0()
{
  uint64_t v2 = v0[63];
  uint64_t v1 = v0[64];
  v0[61] = 0;
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[80] = sub_100047828();
  uint64_t v3 = swift_allocObject();
  v0[81] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[82] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000704B4;
  uint64_t v5 = v0[66];
  uint64_t v6 = v0[65];
  return sub_100048D58(v6, v5, (uint64_t)sub_10009338C, v3, 0);
}

uint64_t sub_1000704B4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 632);
  uint64_t v3 = *(void *)(v1 + 624);
  return _swift_task_switch(sub_1000705F8, v3, v2);
}

uint64_t sub_1000705F8()
{
  uint64_t v1 = *(void *)(v0[80] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[83] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = (uint64_t *)(v0[62] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[56] = v4;
    v0[57] = v3;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v8 = v0[67];
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10008179C(v6);
  sub_10009D81C(v8);
  swift_bridgeObjectRelease();
  v0[84] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[85] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1000707E4;
  return sub_100054C04();
}

uint64_t sub_1000707E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 632);
    uint64_t v4 = *(void *)(v2 + 624);
    uint64_t v5 = sub_100072040;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 632);
    uint64_t v4 = *(void *)(v2 + 624);
    uint64_t v5 = sub_100070908;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100070908()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 57) & 1) == 0)
  {
    uint64_t v1 = (void *)(v0 + 328);
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v4 = objc_allocWithZone((Class)NSError);
    NSString v5 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithDomain:v5 code:10 userInfo:0];

    id v7 = v2;
    id v8 = v3;
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v6, v8, v7, (uint64_t)v8, 11);

    swift_beginAccess();
    uint64_t v9 = *(void *)(v0 + 488);
    BOOL v10 = __CFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (!v10)
    {
      uint64_t v12 = *(void *)(v0 + 608);
      uint64_t v13 = *(void (**)(uint64_t, void, id))(v0 + 504);
      *(void *)(v0 + 488) = v11;
      uint64_t v14 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
      id v15 = v6;
      v13(v12, 0, v6);

      sub_10000B988(v12, &qword_1000CA3B0);
      swift_release();
LABEL_17:
      swift_release();
      id v36 = *(void (**)(void, void, void))(v0 + 504);
      uint64_t v35 = *(void *)(v0 + 512);
      uint64_t v37 = *(void *)(v0 + 488);
      swift_retain();
      sub_10008BF84(v37, 0xD000000000000053, 0x80000001000ACE70, v36, v35);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
    __break(1u);
    goto LABEL_30;
  }
  if ([*(id *)(v0 + 520) publicPermission] == (id)1
    && (*(void *)(*(void *)(v0 + 536) + 16) || *(void *)(*(void *)(v0 + 544) + 16)))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    uint64_t v1 = *(void **)(v0 + 480);
    if (!v1)
    {
      swift_release();
LABEL_26:
      swift_retain();
      char v49 = sub_100051768();
      swift_release();
      uint64_t v50 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v50;
      *uint64_t v50 = v0;
      v50[1] = sub_10007180C;
      return sub_1000309E8(v49 & 1);
    }
    id v16 = [*(id *)(v0 + 480) participants];
    sub_10001F798(0, &qword_1000CB098);
    unint64_t v17 = sub_1000A4910();

    if (!(v17 >> 62))
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);

      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000A4CE0();
    swift_bridgeObjectRelease_n();

LABEL_10:
    swift_release();
    if (v18 == 1)
    {
      uint64_t v19 = *(void *)(v0 + 664);
      uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000CBA78 + dword_1000CBA78);
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 696) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_1000711C4;
      return v51(v19, 1, 3, 1);
    }
    goto LABEL_26;
  }
  if ([*(id *)(v0 + 520) publicPermission] == (id)1)
  {
    uint64_t v22 = *(void **)(v0 + 520);
    uint64_t v23 = *(void **)(v0 + 496);
    swift_release();
    *(void *)(v0 + 240) = 0;
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
    *(unsigned char *)(v0 + 248) = -1;
    sub_1000A4800();
    id v24 = objc_allocWithZone((Class)NSError);
    NSString v25 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v26 = [v24 initWithDomain:v25 code:12 userInfo:0];

    id v27 = v22;
    id v28 = v23;
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD00000000000007FLL, 0x80000001000ACD90, v0 + 208, v26, v28, v27, (uint64_t)v28, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v29 = *(void *)(v0 + 488);
    BOOL v10 = __CFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v10)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 608);
    id v32 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v30;
    uint64_t v33 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
    id v34 = v26;
    v32(v31, 0, v26);

    sub_10000B988(v31, &qword_1000CA3B0);
    swift_release();

    goto LABEL_17;
  }
  sub_1000A4440();
  uint64_t v39 = sub_1000A4450();
  os_log_type_t v40 = sub_1000A4A20();
  if (os_log_type_enabled(v39, v40))
  {
    os_log_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_t v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "provided share is public, and you can only add participants to a private share--will still return sharingURL and share", v41, 2u);
    swift_slowDealloc();
  }
  uint64_t v42 = *(void *)(v0 + 568);
  uint64_t v43 = *(void *)(v0 + 560);
  uint64_t v44 = *(void *)(v0 + 552);

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  uint64_t v45 = *(void *)(v0 + 600);
  uint64_t v46 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 744) = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_100071B90;
  uint64_t v48 = *(void *)(v0 + 600);
  return sub_100035D30(v48);
}

uint64_t sub_1000711C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 704) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 632);
  uint64_t v4 = *(void *)(v2 + 624);
  if (v0) {
    NSString v5 = sub_1000713C0;
  }
  else {
    NSString v5 = sub_100071300;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100071300()
{
  swift_retain();
  char v1 = sub_100051768();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10007180C;
  return sub_1000309E8(v1 & 1);
}

uint64_t sub_1000713C0()
{
  uint64_t v1 = *(void *)(v0 + 704);
  swift_release();
  *(void *)(v0 + 472) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 488);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 584);
    id v16 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD000000000000053, 0x80000001000ACE70);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v22 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v23 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v23, 0xD000000000000053, 0x80000001000ACE70, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    id v26 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 512);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v27, 0xD000000000000053, 0x80000001000ACE70, v26, v25);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_10007180C()
{
  uint64_t v2 = (void *)*v1;
  v2[90] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[79];
    uint64_t v4 = v2[78];
    return _swift_task_switch(sub_100072498, v4, v3);
  }
  else
  {
    char v5 = (void *)swift_task_alloc();
    v2[91] = v5;
    *char v5 = v2;
    v5[1] = sub_100071978;
    return sub_100034038();
  }
}

uint64_t sub_100071978()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 736) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 632);
  uint64_t v4 = *(void *)(v2 + 624);
  if (v0) {
    char v5 = sub_1000728E4;
  }
  else {
    char v5 = sub_100071AB4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100071AB4()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = sub_1000A42E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 744) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100071B90;
  uint64_t v4 = *(void *)(v0 + 600);
  return sub_100035D30(v4);
}

uint64_t sub_100071B90()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 600);
  *(void *)(*v1 + 752) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 632);
  uint64_t v5 = *(void *)(v2 + 624);
  if (v0) {
    uint64_t v6 = sub_100072D30;
  }
  else {
    uint64_t v6 = sub_100071CF0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100071CF0()
{
  uint64_t v20 = v0;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v2 = *(void **)(v0 + 464);
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void **)(v0 + 496);
  *(void *)(v0 + 192) = 0;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 200) = -1;
  strcpy((char *)v19, "sharingURL: ");
  BYTE5(v19[1]) = 0;
  HIWORD(v19[1]) = -5120;
  sub_10001F904(v4, v3, &qword_1000CA3B0);
  id v6 = v2;
  v22._countAndFlagsBits = sub_1000A4810();
  sub_1000A4880(v22);
  swift_bridgeObjectRelease();
  id v7 = v5;
  id v8 = v6;
  sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, v19[0], v19[1], v0 + 160, 0, v7, v8, (uint64_t)v7, 11);

  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 488);
  BOOL v10 = __CFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(v0 + 592);
  BOOL v13 = *(void (**)(uint64_t, id, void))(v0 + 504);
  *(void *)(v0 + 488) = v11;
  id v14 = [v8 _copyWithoutPersonalInfo];
  v13(v12, v14, 0);

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  sub_10000B988(v12, &qword_1000CA3B0);
  swift_beginAccess();
  id v16 = *(void (**)(void, void, void))(v0 + 504);
  uint64_t v15 = *(void *)(v0 + 512);
  uint64_t v17 = *(void *)(v0 + 488);
  swift_retain();
  sub_10008BF84(v17, 0xD000000000000053, 0x80000001000ACE70, v16, v15);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100072040()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 688);
  swift_release();
  *(void *)(v0 + 472) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 488);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 584);
    id v16 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD000000000000053, 0x80000001000ACE70);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v23 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v23, 0xD000000000000053, 0x80000001000ACE70, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v26 = *(void *)(v0 + 512);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v27, 0xD000000000000053, 0x80000001000ACE70, v25, v26);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_100072498()
{
  uint64_t v1 = *(void *)(v0 + 720);
  swift_release();
  *(void *)(v0 + 472) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 488);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 584);
    id v16 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD000000000000053, 0x80000001000ACE70);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v23 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v23, 0xD000000000000053, 0x80000001000ACE70, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v26 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 512);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v27, 0xD000000000000053, 0x80000001000ACE70, v26, v25);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_1000728E4()
{
  uint64_t v1 = *(void *)(v0 + 736);
  swift_release();
  *(void *)(v0 + 472) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 488);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 584);
    id v16 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD000000000000053, 0x80000001000ACE70);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v23 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v23, 0xD000000000000053, 0x80000001000ACE70, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v26 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 512);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v27, 0xD000000000000053, 0x80000001000ACE70, v26, v25);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_100072D30()
{
  uint64_t v1 = *(void *)(v0 + 752);
  swift_release();
  *(void *)(v0 + 472) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 496);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v4 = *(void *)(v0 + 288);
    char v5 = *(unsigned char *)(v0 + 296);
    long long v6 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v6;
    *(void *)(v0 + 96) = v4;
    *(unsigned char *)(v0 + 104) = v5;
    id v7 = v2;
    id v8 = v3;
    id v9 = v7;
    id v10 = v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_10008AE20(0xD000000000000053, 0x80000001000ACE70, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, v10, v9, (uint64_t)v10, 11);

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *(void *)(v0 + 488);
    BOOL v13 = __CFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v15 = *(void *)(v0 + 584);
    id v16 = *(void (**)(uint64_t, void, id))(v0 + 504);
    *(void *)(v0 + 488) = v14;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v17 = sub_100094F20(0xD000000000000053, 0x80000001000ACE70);
    uint64_t v18 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    uint64_t v19 = (void *)sub_1000A4230();
    id v20 = (id)CKXPCSuitableError();

    v16(v15, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v15, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_errorRelease();
    swift_beginAccess();
    Swift::String v22 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v23 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v23, 0xD000000000000053, 0x80000001000ACE70, v22, v21);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v26 = *(void (**)(void, void, void))(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 512);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v0 + 488);
    swift_retain();
    sub_10008BF84(v27, 0xD000000000000053, 0x80000001000ACE70, v26, v25);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v24();
}

uint64_t sub_10007317C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    uint64_t v15 = (void *)sub_1000A4230();
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  id v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    os_log_t v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    char v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000ACE70 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000ACE70 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 332;
    }
    if ((((unint64_t)"@\"NSDictionary\"8@?0" >> 61) & ((0x80000001000ACE70 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    id v10 = v41;
    uint64_t v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      uint64_t v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_100073774(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  int v28 = a7;
  uint64_t v27 = a6;
  uint64_t v16 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v16 - 8);
  int v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000818F0(0x74706F2068746977, 0xEC000000736E6F69, 0xD000000000000085, 0x80000001000ACCA0);
  sub_1000A49A0();
  uint64_t v19 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_1000A4990();
  id v20 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = v9;
  swift_retain();
  id v22 = a1;
  id v23 = a2;
  uint64_t v24 = sub_1000A4980();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = &protocol witness table for MainActor;
  *(void *)(v25 + 32) = v21;
  *(void *)(v25 + 40) = a8;
  *(void *)(v25 + 48) = a9;
  *(void *)(v25 + 56) = a1;
  *(void *)(v25 + 64) = a2;
  *(void *)(v25 + 72) = a3;
  *(void *)(v25 + 80) = a4;
  *(void *)(v25 + 88) = a5;
  *(void *)(v25 + 96) = v27;
  *(unsigned char *)(v25 + 104) = v28;
  sub_100055948((uint64_t)v18, (uint64_t)&unk_1000CBAA8, v25);
  return swift_release();
}

uint64_t sub_100073BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 60) = v19;
  *(void *)(v8 + 544) = v18;
  *(void *)(v8 + 536) = v17;
  *(_OWORD *)(v8 + 520) = v16;
  *(void *)(v8 + 504) = a7;
  *(void *)(v8 + 512) = a8;
  *(void *)(v8 + 488) = a5;
  *(void *)(v8 + 496) = a6;
  *(void *)(v8 + 480) = a4;
  uint64_t v9 = sub_1000A4460();
  *(void *)(v8 + 552) = v9;
  *(void *)(v8 + 560) = *(void *)(v9 - 8);
  *(void *)(v8 + 568) = swift_task_alloc();
  uint64_t v10 = sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 576) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 584) = v11;
  *(void *)(v8 + 592) = *(void *)(v11 + 64);
  *(void *)(v8 + 600) = swift_task_alloc();
  *(void *)(v8 + 608) = swift_task_alloc();
  *(void *)(v8 + 616) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 624) = sub_1000A4980();
  uint64_t v13 = sub_1000A4950();
  *(void *)(v8 + 632) = v13;
  *(void *)(v8 + 640) = v12;
  return _swift_task_switch(sub_100073D64, v13, v12);
}

uint64_t sub_100073D64()
{
  uint64_t v1 = (void *)v0[63];
  v0[58] = 0;
  uint64_t v2 = v0[77];
  if (v1)
  {
    id v3 = [v1 url];
    sub_1000A42A0();

    uint64_t v4 = sub_1000A42E0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  }
  else
  {
    uint64_t v5 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  }
  uint64_t v7 = v0[61];
  uint64_t v6 = v0[62];
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[81] = sub_100047828();
  uint64_t v8 = swift_allocObject();
  v0[82] = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[83] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100073F18;
  uint64_t v10 = v0[77];
  uint64_t v11 = v0[65];
  uint64_t v12 = v0[64];
  return sub_1000486A8(v10, v12, v11, (uint64_t)sub_100092EA0, v8);
}

uint64_t sub_100073F18()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 640);
  uint64_t v3 = *(void *)(v1 + 632);
  return _swift_task_switch(sub_10007405C, v3, v2);
}

uint64_t sub_10007405C()
{
  uint64_t v1 = *(void *)(v0[81] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[84] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[64];
  uint64_t v9 = v0[66];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10008179C(v2);
  sub_10009D81C(v9);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = (void *)v0[64];
    v0[88] = v4;
    v0[87] = v4;
    v0[89] = *(void *)(v0[84] + 16);
    id v5 = v4;
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[90] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100074570;
    return sub_100054C04();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v0[85] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100074260;
    return sub_100031EC0();
  }
}

uint64_t sub_100074260()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 688) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 640);
  uint64_t v4 = *(void *)(v2 + 632);
  if (v0) {
    id v5 = sub_100075DC4;
  }
  else {
    id v5 = sub_10007439C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007439C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 472);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v0 + 58) != 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 59) = 2;
    swift_retain();
    uint64_t result = sub_1000A4570();
  }
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 512);
    *(void *)(v0 + 704) = v1;
    *(void *)(v0 + 696) = v1;
    *(void *)(v0 + 712) = *(void *)(*(void *)(v0 + 672) + 16);
    id v4 = v3;
    swift_retain();
    id v5 = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 720) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100074570;
    return sub_100054C04();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100074570()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 728) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 640);
  uint64_t v4 = *(void *)(v2 + 632);
  if (v0) {
    id v5 = sub_100076260;
  }
  else {
    id v5 = sub_1000746C8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000746C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 57) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 696);
    uint64_t v2 = *(void *)(v0 + 616);
    uint64_t v3 = *(void *)(v0 + 608);
    uint64_t v4 = *(void *)(v0 + 592);
    uint64_t v57 = *(void *)(v0 + 584);
    id v60 = *(void **)(v0 + 480);
    swift_release();
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 56) = -1;
    sub_1000A4800();
    id v5 = objc_allocWithZone((Class)NSError);
    id v58 = v1;
    NSString v6 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithDomain:v6 code:10 userInfo:0];

    sub_10001F904(v2, v3, &qword_1000CA3B0);
    unint64_t v8 = (*(unsigned __int8 *)(v57 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v9 = (v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    *(void *)(v10 + 24) = 0;
    *(unsigned char *)(v10 + 32) = 0;
    sub_1000409B0(v3, v10 + v8, &qword_1000CA3B0);
    *(void *)(v10 + v9) = v1;
    *(void *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)) = v60;
    id v11 = v58;
    v60;
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD00000000000003DLL, 0x80000001000ACD50, v0 + 16, v7, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v10);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v13 = *(void *)(v0 + 464);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14)
    {
      uint64_t v62 = *(void **)(v0 + 704);
      long long v16 = *(void **)(v0 + 696);
      uint64_t v17 = *(void *)(v0 + 616);
      uint64_t v18 = *(void *)(v0 + 608);
      char v19 = *(void (**)(uint64_t, void, id))(v0 + 488);
      *(void *)(v0 + 464) = v15;
      uint64_t v20 = sub_1000A42E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
      id v21 = v7;
      v19(v18, 0, v7);

      sub_10000B988(v18, &qword_1000CA3B0);
      swift_release();

LABEL_13:
      swift_release();

      sub_10000B988(v17, &qword_1000CA3B0);
      uint64_t v46 = *(void (**)(void, void, void))(v0 + 488);
      uint64_t v45 = *(void *)(v0 + 496);
      uint64_t v47 = *(void *)(v0 + 464);
      swift_retain();
      sub_10008BF84(v47, 0xD000000000000085, 0x80000001000ACCA0, v46, v45);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
      return v48();
    }
    __break(1u);
    goto LABEL_22;
  }
  if ([*(id *)(v0 + 696) publicPermission] == (id)1
    && (*(void *)(*(void *)(v0 + 528) + 16) || *(void *)(*(void *)(v0 + 536) + 16)))
  {
    uint64_t v22 = *(void *)(v0 + 672);
    uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1000CBAB0 + dword_1000CBAB0);
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 736) = v23;
    *id v23 = v0;
    v23[1] = sub_100074EF8;
    char v24 = *(unsigned char *)(v0 + 60);
    uint64_t v25 = *(void *)(v0 + 544);
    return v63(v22, v25, v24);
  }
  else
  {
    if ([*(id *)(v0 + 696) publicPermission] == (id)1)
    {
      uint64_t v26 = *(void **)(v0 + 696);
      uint64_t v27 = *(void *)(v0 + 616);
      uint64_t v28 = *(void *)(v0 + 608);
      uint64_t v29 = *(void *)(v0 + 592);
      uint64_t v30 = *(void *)(v0 + 584);
      unsigned __int8 v61 = *(void **)(v0 + 480);
      swift_release();
      *(void *)(v0 + 240) = 0;
      *(_OWORD *)(v0 + 208) = 0u;
      *(_OWORD *)(v0 + 224) = 0u;
      *(unsigned char *)(v0 + 248) = -1;
      sub_1000A4800();
      id v31 = objc_allocWithZone((Class)NSError);
      id v59 = v26;
      NSString v32 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v33 = [v31 initWithDomain:v32 code:12 userInfo:0];

      sub_10001F904(v27, v28, &qword_1000CA3B0);
      unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      unint64_t v35 = (v29 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0;
      *(void *)(v36 + 24) = 0;
      *(unsigned char *)(v36 + 32) = 0;
      sub_1000409B0(v28, v36 + v34, &qword_1000CA3B0);
      *(void *)(v36 + v35) = v26;
      *(void *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
      id v37 = v59;
      v61;
      sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD00000000000007FLL, 0x80000001000ACD90, v0 + 208, v33, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v36);
      swift_release();
      uint64_t result = swift_beginAccess();
      uint64_t v38 = *(void *)(v0 + 464);
      BOOL v14 = __CFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (!v14)
      {
        uint64_t v62 = *(void **)(v0 + 704);
        id v40 = *(void **)(v0 + 696);
        uint64_t v17 = *(void *)(v0 + 616);
        uint64_t v41 = *(void *)(v0 + 608);
        uint64_t v42 = *(void (**)(uint64_t, void, id))(v0 + 488);
        *(void *)(v0 + 464) = v39;
        uint64_t v43 = sub_1000A42E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 1, 1, v43);
        id v44 = v33;
        v42(v41, 0, v33);

        sub_10000B988(v41, &qword_1000CA3B0);
        swift_release();
        goto LABEL_13;
      }
LABEL_22:
      __break(1u);
      return result;
    }
    sub_1000A4440();
    char v49 = sub_1000A4450();
    os_log_type_t v50 = sub_1000A4A20();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "provided share is public, and you can only add participants to a private share--will still return sharingURL and share", v51, 2u);
      swift_slowDealloc();
    }
    uint64_t v52 = *(void *)(v0 + 568);
    uint64_t v53 = *(void *)(v0 + 560);
    uint64_t v54 = *(void *)(v0 + 552);

    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    Swift::String v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 784) = v55;
    *Swift::String v55 = v0;
    v55[1] = sub_100075880;
    uint64_t v56 = *(void *)(v0 + 616);
    return sub_100035D30(v56);
  }
}

uint64_t sub_100074EF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 744) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 640);
  uint64_t v4 = *(void *)(v2 + 632);
  if (v0) {
    id v5 = sub_100075260;
  }
  else {
    id v5 = sub_100075034;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100075034()
{
  swift_retain();
  char v1 = sub_100051768();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 752) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000750F4;
  return sub_1000309E8(v1 & 1);
}

uint64_t sub_1000750F4()
{
  uint64_t v2 = (void *)*v1;
  v2[95] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[80];
    uint64_t v4 = v2[79];
    return _swift_task_switch(sub_10007670C, v4, v3);
  }
  else
  {
    id v5 = (void *)swift_task_alloc();
    v2[96] = v5;
    *id v5 = v2;
    v5[1] = sub_10007570C;
    return sub_100034038();
  }
}

uint64_t sub_100075260()
{
  char v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 696);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 744);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 584);
    uint64_t v7 = *(void **)(v0 + 512);
    unint64_t v8 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v9 = *(void *)(v0 + 288);
    char v10 = *(unsigned char *)(v0 + 296);
    long long v11 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v11;
    *(void *)(v0 + 96) = v9;
    *(unsigned char *)(v0 + 104) = v10;
    sub_10001F904(v3, v4, &qword_1000CA3B0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 32) = 0;
    sub_1000409B0(v4, v14 + v12, &qword_1000CA3B0);
    *(void *)(v14 + v13) = v7;
    *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    id v15 = v7;
    v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v14);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v0 + 464);
    BOOL v18 = __CFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 608);
    id v21 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v19;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v22 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v23 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    v21(v20, 0, v22);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v20, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v31, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v26 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v26, 0xD000000000000085, 0x80000001000ACCA0, v25, v24);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v29 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v30 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v30, 0xD000000000000085, 0x80000001000ACCA0, v28, v29);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_10007570C()
{
  uint64_t v2 = (void *)*v1;
  v2[97] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[80];
    uint64_t v4 = v2[79];
    return _swift_task_switch(sub_100076BB8, v4, v3);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[98] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_100075880;
    uint64_t v6 = v2[77];
    return sub_100035D30(v6);
  }
}

uint64_t sub_100075880()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 792) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 640);
  uint64_t v4 = *(void *)(v2 + 632);
  if (v0) {
    uint64_t v5 = sub_100077064;
  }
  else {
    uint64_t v5 = sub_1000759BC;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_1000759BC()
{
  char v1 = *(void **)(v0 + 704);
  swift_release();
  unint64_t v30 = sub_10009A5DC();
  uint64_t v33 = v2;
  char v31 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v4 = *(void **)(v0 + 448);
  if (!v4) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(v0 + 616);
  uint64_t v6 = *(void *)(v0 + 608);
  uint64_t v7 = *(void *)(v0 + 600);
  uint64_t v8 = *(void *)(v0 + 592);
  uint64_t v9 = *(void *)(v0 + 584);
  uint64_t v29 = *(void **)(v0 + 480);
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 200) = -1;
  sub_10001F904(v7, v6, &qword_1000CA3B0);
  id v27 = v4;
  uint64_t v28 = sub_1000A4810();
  unint64_t v32 = v10;
  sub_10001F904(v5, v6, &qword_1000CA3B0);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v30 & 0x101FFFFFFFFFFLL;
  *(void *)(v13 + 24) = v33;
  *(unsigned char *)(v13 + 32) = v31 & 1;
  sub_1000409B0(v6, v13 + v11, &qword_1000CA3B0);
  *(void *)(v13 + v12) = v4;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  v29;
  id v14 = v27;
  swift_bridgeObjectRetain();
  sub_100058054(0xD000000000000085, 0x80000001000ACCA0, v28, v32, v0 + 160, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v13);
  swift_release();
  swift_beginAccess();
  uint64_t v15 = *(void *)(v0 + 464);
  BOOL v16 = __CFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  BOOL v18 = *(void **)(v0 + 696);
  uint64_t v19 = *(void *)(v0 + 616);
  uint64_t v20 = *(void *)(v0 + 600);
  id v21 = *(void (**)(uint64_t, id, void))(v0 + 488);
  *(void *)(v0 + 464) = v17;
  id v22 = [v14 _copyWithoutPersonalInfo];
  v21(v20, v22, 0);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  sub_10000B988(v20, &qword_1000CA3B0);
  sub_10000B988(v19, &qword_1000CA3B0);
  swift_beginAccess();
  uint64_t v24 = *(void (**)(void, void, void))(v0 + 488);
  uint64_t v23 = *(void *)(v0 + 496);
  uint64_t v25 = *(void *)(v0 + 464);
  swift_retain();
  sub_10008BF84(v25, 0xD000000000000085, 0x80000001000ACCA0, v24, v23);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(void (**)(void))(v0 + 8);
  v26();
}

uint64_t sub_100075DC4()
{
  swift_release();
  *(void *)(v0 + 456) = *(void *)(v0 + 688);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 616);
    uint64_t v2 = *(void *)(v0 + 608);
    uint64_t v3 = *(void *)(v0 + 592);
    uint64_t v4 = *(void *)(v0 + 584);
    uint64_t v5 = *(void **)(v0 + 512);
    uint64_t v6 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v7 = *(void *)(v0 + 288);
    char v8 = *(unsigned char *)(v0 + 296);
    long long v9 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v9;
    *(void *)(v0 + 96) = v7;
    *(unsigned char *)(v0 + 104) = v8;
    sub_10001F904(v1, v2, &qword_1000CA3B0);
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    *(unsigned char *)(v12 + 32) = 0;
    sub_1000409B0(v2, v12 + v10, &qword_1000CA3B0);
    *(void *)(v12 + v11) = v5;
    *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
    id v13 = v5;
    v6;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v12);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v15 = *(void *)(v0 + 464);
    BOOL v16 = __CFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16)
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = *(void *)(v0 + 616);
    uint64_t v18 = *(void *)(v0 + 608);
    uint64_t v19 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v17;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v20 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v21 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    v19(v18, 0, v20);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v18, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v29, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v23 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v22 = *(void *)(v0 + 496);
    uint64_t v24 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v24, 0xD000000000000085, 0x80000001000ACCA0, v23, v22);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v26 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v27 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v28 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v28, 0xD000000000000085, 0x80000001000ACCA0, v26, v27);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v25();
}

uint64_t sub_100076260()
{
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 696);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 728);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 584);
    uint64_t v7 = *(void **)(v0 + 512);
    char v8 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v9 = *(void *)(v0 + 288);
    char v10 = *(unsigned char *)(v0 + 296);
    long long v11 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v11;
    *(void *)(v0 + 96) = v9;
    *(unsigned char *)(v0 + 104) = v10;
    sub_10001F904(v3, v4, &qword_1000CA3B0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 32) = 0;
    sub_1000409B0(v4, v14 + v12, &qword_1000CA3B0);
    *(void *)(v14 + v13) = v7;
    *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    id v15 = v7;
    v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v14);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v0 + 464);
    BOOL v18 = __CFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 608);
    uint64_t v21 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v19;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v22 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v23 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    v21(v20, 0, v22);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v20, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v31, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v26 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v26, 0xD000000000000085, 0x80000001000ACCA0, v25, v24);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v29 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v30 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v30, 0xD000000000000085, 0x80000001000ACCA0, v28, v29);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_10007670C()
{
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 696);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 760);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 584);
    uint64_t v7 = *(void **)(v0 + 512);
    char v8 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v9 = *(void *)(v0 + 288);
    char v10 = *(unsigned char *)(v0 + 296);
    long long v11 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v11;
    *(void *)(v0 + 96) = v9;
    *(unsigned char *)(v0 + 104) = v10;
    sub_10001F904(v3, v4, &qword_1000CA3B0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 32) = 0;
    sub_1000409B0(v4, v14 + v12, &qword_1000CA3B0);
    *(void *)(v14 + v13) = v7;
    *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    id v15 = v7;
    v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v14);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v0 + 464);
    BOOL v18 = __CFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 608);
    uint64_t v21 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v19;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v22 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v23 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    v21(v20, 0, v22);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v20, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v31, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v26 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v26, 0xD000000000000085, 0x80000001000ACCA0, v25, v24);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v29 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v30 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v30, 0xD000000000000085, 0x80000001000ACCA0, v28, v29);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_100076BB8()
{
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 696);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 776);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 584);
    uint64_t v7 = *(void **)(v0 + 512);
    char v8 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v9 = *(void *)(v0 + 288);
    char v10 = *(unsigned char *)(v0 + 296);
    long long v11 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v11;
    *(void *)(v0 + 96) = v9;
    *(unsigned char *)(v0 + 104) = v10;
    sub_10001F904(v3, v4, &qword_1000CA3B0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 32) = 0;
    sub_1000409B0(v4, v14 + v12, &qword_1000CA3B0);
    *(void *)(v14 + v13) = v7;
    *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    id v15 = v7;
    v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v14);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v0 + 464);
    BOOL v18 = __CFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 608);
    uint64_t v21 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v19;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v22 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v23 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    v21(v20, 0, v22);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v20, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v31, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v26 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v26, 0xD000000000000085, 0x80000001000ACCA0, v25, v24);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v29 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v30 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v30, 0xD000000000000085, 0x80000001000ACCA0, v28, v29);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_100077064()
{
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 696);
  swift_release();

  *(void *)(v0 + 456) = *(void *)(v0 + 792);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 608);
    uint64_t v5 = *(void *)(v0 + 592);
    uint64_t v6 = *(void *)(v0 + 584);
    uint64_t v7 = *(void **)(v0 + 512);
    char v8 = *(void **)(v0 + 480);
    swift_errorRelease();
    sub_100092640(v0 + 256, v0 + 112);
    uint64_t v9 = *(void *)(v0 + 288);
    char v10 = *(unsigned char *)(v0 + 296);
    long long v11 = *(_OWORD *)(v0 + 272);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 80) = v11;
    *(void *)(v0 + 96) = v9;
    *(unsigned char *)(v0 + 104) = v10;
    sub_10001F904(v3, v4, &qword_1000CA3B0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(unsigned char *)(v14 + 32) = 0;
    sub_1000409B0(v4, v14 + v12, &qword_1000CA3B0);
    *(void *)(v14 + v13) = v7;
    *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v8;
    id v15 = v7;
    v8;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100058054(0xD000000000000085, 0x80000001000ACCA0, 0xD000000000000015, 0x80000001000ACD30, v0 + 64, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100092EAC, v14);
    swift_release();
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *(void *)(v0 + 464);
    BOOL v18 = __CFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v31 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 608);
    uint64_t v21 = *(void (**)(uint64_t, void, id))(v0 + 488);
    *(void *)(v0 + 464) = v19;
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    id v22 = sub_100094F20(0xD000000000000085, 0x80000001000ACCA0);
    uint64_t v23 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    v21(v20, 0, v22);
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);

    sub_10000B988(v20, &qword_1000CA3B0);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    swift_release();
    sub_100093174(v0 + 112, (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v31, &qword_1000CA3B0);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v25 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v24 = *(void *)(v0 + 496);
    uint64_t v26 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v26, 0xD000000000000085, 0x80000001000ACCA0, v25, v24);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void, void))(v0 + 488);
    uint64_t v29 = *(void *)(v0 + 496);
    sub_10000B988(*(void *)(v0 + 616), &qword_1000CA3B0);
    swift_release();
    swift_release();
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v30 = *(void *)(v0 + 464);
    swift_retain();
    sub_10008BF84(v30, 0xD000000000000085, 0x80000001000ACCA0, v28, v29);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_100077510(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    id v15 = (void *)sub_1000A4230();
  }
  else {
    id v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  uint64_t v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    uint64_t v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    char v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000ACCA0 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000ACCA0 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 532;
    }
    if ((((unint64_t)"File(_:withReply:)" >> 61) & ((0x80000001000ACCA0 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    char v10 = v41;
    id v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      id v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_1000779F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _UNKNOWN **a3@<X2>, uint64_t a4@<X4>, void *a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  if (a3)
  {
    uint64_t v9 = a3;
    unint64_t v21 = HIDWORD(a2);
    unint64_t v22 = a2 >> 24;
    swift_bridgeObjectRetain();
  }
  else
  {
    LOBYTE(v21) = 0;
    LOBYTE(v22) = 0;
    uint64_t v9 = &off_1000C1BB0;
  }
  a7[3] = type metadata accessor for SPIAnalyticsEvent();
  a7[4] = (uint64_t)&off_1000C2B58;
  char v10 = sub_1000931B4(a7);
  uint64_t v11 = (int *)sub_100008704(&qword_1000CB360);
  uint64_t v12 = v11[12];
  uint64_t v13 = v11[16];
  uint64_t v14 = v11[20];
  uint64_t v15 = v11[24];
  id v16 = (uint64_t *)((char *)v10 + v11[28]);
  uint64_t v17 = (uint64_t)v10 + v11[32];
  sub_10001F904(a4, (uint64_t)v10, &qword_1000CA3B0);
  *(uint64_t *)((char *)v10 + v12) = (uint64_t)a5;
  *((unsigned char *)v10 + v13) = v22;
  *((unsigned char *)v10 + v14) = v21;
  *(uint64_t *)((char *)v10 + v15) = (uint64_t)v9;
  uint64_t v18 = *(void *)(a6 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *id v16 = *(void *)(a6 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  v16[1] = v18;
  sub_1000409B0(a1, v17, &qword_1000CB378);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  id v19 = a5;
  return sub_100093174(a1, (void (*)(void, void, void, void, void, void))sub_100093160);
}

uint64_t sub_100077B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[25] = a5;
  v6[26] = a6;
  v6[24] = a4;
  uint64_t v7 = sub_1000A4460();
  v6[27] = v7;
  v6[28] = *(void *)(v7 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = sub_100008704(&qword_1000CA3B0);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  sub_1000A4990();
  v6[37] = sub_1000A4980();
  uint64_t v9 = sub_1000A4950();
  v6[38] = v9;
  v6[39] = v8;
  return _swift_task_switch(sub_100077CC4, v9, v8);
}

uint64_t sub_100077CC4()
{
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[24];
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[40] = sub_100047828();
  uint64_t v5 = sub_1000A42E0();
  v0[41] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v0[42] = v7;
  v0[43] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v4, v5);
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  v0[44] = v8;
  v0[45] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v8(v1, 0, 1, v5);
  uint64_t v9 = swift_allocObject();
  v0[46] = v9;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v2;
  swift_retain();
  char v10 = (void *)swift_task_alloc();
  v0[47] = v10;
  *char v10 = v0;
  v10[1] = sub_100077E78;
  uint64_t v11 = v0[36];
  return sub_1000479C0(v11, (uint64_t)sub_100092D18, v9);
}

uint64_t sub_100077E78(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 288);
  *(void *)(*v1 + 384) = a1;
  swift_task_dealloc();
  swift_release();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 312);
  uint64_t v5 = *(void *)(v2 + 304);
  return _swift_task_switch(sub_100077FE8, v5, v4);
}

uint64_t sub_100077FE8()
{
  uint64_t v1 = (void *)v0[48];
  if (v1)
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[44];
    uint64_t v3 = v0[41];
    uint64_t v4 = v0[36];
    uint64_t v5 = (void (*)(uint64_t, void, id))v0[25];
    id v6 = v1;
    swift_release();
    v2(v4, 1, 1, v3);
    sub_1000A4800();
    id v7 = objc_allocWithZone((Class)NSError);
    NSString v8 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v9 = [v7 initWithDomain:v8 code:12 userInfo:0];

    v5(v4, 0, v9);
    swift_release();
    sub_10000B988(v4, &qword_1000CA3B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v12 = *(void *)(v0[40] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
    v0[49] = v12;
    if (v12)
    {
      swift_retain();
      uint64_t v13 = (void *)swift_task_alloc();
      v0[50] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_100078288;
      return sub_100031EC0();
    }
    else
    {
      return sub_1000A4CD0();
    }
  }
}

uint64_t sub_100078288()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_100078B28;
  }
  else {
    uint64_t v5 = sub_1000783C4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000783C4()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 280);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 336))(v3, *(void *)(v0 + 192), v2);
  v1(v3, 0, 1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000784A0;
  uint64_t v5 = *(void *)(v0 + 280);
  return sub_100035D30(v5);
}

uint64_t sub_1000784A0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 280);
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 312);
  uint64_t v5 = *(void *)(v2 + 304);
  if (v0) {
    id v6 = sub_1000791E0;
  }
  else {
    id v6 = sub_100078600;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100078600()
{
  uint64_t v23 = v0;
  swift_release();
  sub_1000A4440();
  swift_retain_n();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v19 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v21 = *(void *)(v0 + 248);
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = sub_1000A4810();
    *(void *)(v0 + 184) = sub_10003CFA4(v4, v5, &v22);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished existingShareForFile shareURL: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 224);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  id v9 = *(void **)(v0 + 168);
  if (!v9) {
    goto LABEL_9;
  }
  self;
  char v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
  {

    goto LABEL_9;
  }
  id v11 = [v10 originalShare];

  if (!v11)
  {
LABEL_9:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v15 = *(void **)(v0 + 176);
    if (v15)
    {
      id v16 = [*(id *)(v0 + 176) _copyWithoutPersonalInfo];
    }
    else
    {
      id v16 = 0;
    }
    uint64_t v12 = *(void *)(v0 + 272);
    (*(void (**)(uint64_t, id, void))(v0 + 200))(v12, v16, 0);
    swift_release();
    swift_release();

    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(v0 + 288);
  uint64_t v13 = *(void (**)(uint64_t, id, void))(v0 + 200);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  id v14 = [v11 _copyWithoutPersonalInfo];
  v13(v12, v14, 0);
  swift_release();

  swift_release();
LABEL_13:
  sub_10000B988(v12, &qword_1000CA3B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

void sub_100078B28()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v41 = *(void *)(v0 + 216);
    uint64_t v43 = *(void *)(v0 + 240);
    uint64_t v39 = v5;
    uint64_t v40 = v2;
    uint64_t v38 = v6;
    if (v9)
    {
      uint64_t v35 = *(void *)(v0 + 224);
      uint64_t v11 = v6;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing existingShareForFile: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    if (v7 != 4)
    {
      if (v7 != 1)
      {
LABEL_12:
        unsigned __int8 typea = v7;
        uint64_t v42 = v4;
        uint64_t v44 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        uint64_t v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "existingShareForFile returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v21 = v20;
        }
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
        uint64_t v26 = *(void *)(v0 + 328);
        uint64_t v27 = *(void *)(v0 + 264);
        uint64_t v28 = *(void *)(v0 + 232);
        uint64_t v29 = *(void *)(v0 + 216);
        id v33 = *(void (**)(uint64_t, void, id))(v0 + 200);

        v15(v28, v29);
        v25(v27, 1, 1, v26);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v33(v27, 0, v32);
        swift_release();

        swift_release();
        sub_10003E804(v44, v40, v42, v39, v38, typea);
        sub_10000B988(v27, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_16;
      }

      if (v4)
      {
LABEL_11:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_12;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = *(void (**)(void))(v0 + 8);
LABEL_16:
  v16();
}

void sub_1000791E0()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 424);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v41 = *(void *)(v0 + 216);
    uint64_t v43 = *(void *)(v0 + 240);
    uint64_t v39 = v5;
    uint64_t v40 = v2;
    uint64_t v38 = v6;
    if (v9)
    {
      uint64_t v35 = *(void *)(v0 + 224);
      uint64_t v11 = v6;
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing existingShareForFile: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    if (v7 != 4)
    {
      if (v7 != 1)
      {
LABEL_12:
        unsigned __int8 typea = v7;
        uint64_t v42 = v4;
        uint64_t v44 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        uint64_t v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "existingShareForFile returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v21 = v20;
        }
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
        uint64_t v26 = *(void *)(v0 + 328);
        uint64_t v27 = *(void *)(v0 + 264);
        uint64_t v28 = *(void *)(v0 + 232);
        uint64_t v29 = *(void *)(v0 + 216);
        id v33 = *(void (**)(uint64_t, void, id))(v0 + 200);

        v15(v28, v29);
        v25(v27, 1, 1, v26);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v33(v27, 0, v32);
        swift_release();

        swift_release();
        sub_10003E804(v44, v40, v42, v39, v38, typea);
        sub_10000B988(v27, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_16;
      }

      if (v4)
      {
LABEL_11:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_12;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = *(void (**)(void))(v0 + 8);
LABEL_16:
  v16();
}

uint64_t sub_100079898(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    uint64_t v15 = (void *)sub_1000A4230();
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  id v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    uint64_t v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    char v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000ACC70 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000ACC70 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 136;
    }
    if ((((unint64_t)"SPIHelper_iOS/SPIHelper.swift" >> 61) & ((0x80000001000ACC70 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v41;
    uint64_t v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      uint64_t v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_100079E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  uint64_t v8 = sub_1000A4460();
  v7[14] = v8;
  v7[15] = *(void *)(v8 - 8);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  sub_1000A4990();
  v7[18] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v7[19] = v10;
  v7[20] = v9;
  return _swift_task_switch(sub_100079F94, v10, v9);
}

uint64_t sub_100079F94()
{
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[21] = sub_100047828();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  void *v1 = v0;
  v1[1] = sub_10007A050;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  return sub_1000499E0(v5, v4, v2, v3);
}

uint64_t sub_10007A050()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_10007A170, v3, v2);
}

uint64_t sub_10007A170()
{
  uint64_t v1 = *(void *)(v0[21] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[23] = v1;
  if (!v1) {
    return sub_1000A4CD0();
  }
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10007A28C;
  return sub_1000399A0();
}

uint64_t sub_10007A28C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v5 = sub_10007A6F4;
  }
  else {
    uint64_t v5 = sub_10007A3C8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007A3C8()
{
  uint64_t v21 = v0;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  unint64_t v3 = v0[5];
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1000A4450();
  os_log_type_t v6 = sub_1000A4A40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[14];
    uint64_t v18 = v0[17];
    uint64_t v19 = v4;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[8] = sub_10003CFA4(v1, v2, &v20);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[9] = sub_10003CFA4(v19, v3, &v20);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Finished user name (%s) & email (%s)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[14];
    uint64_t v10 = v0[15];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = (void (*)(NSString, NSString, void))v0[12];
  NSString v12 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  NSString v13 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  v11(v12, v13, 0);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10007A6F4()
{
  uint64_t v24 = v0;
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[15];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[16];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v23 = v6;
    v0[6] = v3;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    v0[7] = sub_10003CFA4(v7, v8, &v23);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error finishing userNameAndEmail %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v21);
  }
  else
  {
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  NSString v12 = (void (*)(void, void, id))v0[12];
  sub_1000A4800();
  id v13 = objc_allocWithZone((Class)NSError);
  NSString v14 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithDomain:v14 code:12 userInfo:0];

  id v16 = v15;
  uint64_t v17 = (void *)sub_1000A4230();

  id v18 = (id)CKXPCSuitableError();
  v12(0, 0, v18);
  swift_release();
  swift_release();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_10007AB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_1000A4230();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);
}

uint64_t sub_10007AC08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v52 = a8;
  uint64_t v53 = a7;
  int v56 = a6;
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v11 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v11 - 8);
  id v58 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000A42E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v57 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v16;
  __chkstk_darwin(v15);
  id v18 = (char *)v43 - v17;
  uint64_t v48 = sub_1000A4460();
  uint64_t v19 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4440();
  char v49 = *(void (**)(char *, void *, uint64_t))(v14 + 16);
  id v50 = a1;
  v49(v18, a1, v13);
  uint64_t v22 = sub_1000A4450();
  os_log_type_t v23 = sub_1000A4A40();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    os_log_t v45 = v8;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v62 = v44;
    uint64_t v46 = v14;
    *(_DWORD *)uint64_t v25 = 136315138;
    v43[1] = v25 + 4;
    sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v26 = sub_1000A4D50();
    uint64_t v61 = sub_10003CFA4(v26, v27, &v62);
    uint64_t v14 = v46;
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Begin forciblyShareFolder, folderURL: %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v45;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v48);
  uint64_t v47 = v13;
  uint64_t v28 = v58;
  sub_1000A49A0();
  uint64_t v29 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  v49(v57, v50, v13);
  sub_1000A4990();
  uint64_t v30 = v52;
  swift_retain();
  id v50 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v49 = (void (*)(char *, void *, uint64_t))sub_1000A4980();
  unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v32 = (v51 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v49;
  *(void *)(v37 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v37 + v31, v57, v47);
  uint64_t v38 = (void *)(v37 + v32);
  *uint64_t v38 = v53;
  v38[1] = v30;
  *(void *)(v37 + v33) = v50;
  uint64_t v39 = (uint64_t)v58;
  *(void *)(v37 + v34) = v59;
  *(void *)(v37 + v35) = v60;
  uint64_t v40 = v55;
  *(void *)(v37 + v36) = v54;
  unint64_t v41 = v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v41 = v40;
  *(unsigned char *)(v41 + 8) = v56 & 1;
  sub_100055948(v39, (uint64_t)&unk_1000CBA40, v37);
  return swift_release();
}

uint64_t sub_10007B124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 105) = v19;
  *(void *)(v8 + 304) = v18;
  *(_OWORD *)(v8 + 288) = v17;
  *(void *)(v8 + 272) = a7;
  *(void *)(v8 + 280) = a8;
  *(void *)(v8 + 256) = a5;
  *(void *)(v8 + 264) = a6;
  *(void *)(v8 + 248) = a4;
  uint64_t v9 = sub_1000A4700();
  *(void *)(v8 + 312) = v9;
  *(void *)(v8 + 320) = *(void *)(v9 - 8);
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v10 = sub_1000A4720();
  *(void *)(v8 + 336) = v10;
  *(void *)(v8 + 344) = *(void *)(v10 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v11 = sub_1000A4740();
  *(void *)(v8 + 360) = v11;
  *(void *)(v8 + 368) = *(void *)(v11 - 8);
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  uint64_t v12 = sub_1000A4460();
  *(void *)(v8 + 392) = v12;
  *(void *)(v8 + 400) = *(void *)(v12 - 8);
  *(void *)(v8 + 408) = swift_task_alloc();
  *(void *)(v8 + 416) = swift_task_alloc();
  *(void *)(v8 + 424) = swift_task_alloc();
  *(void *)(v8 + 432) = swift_task_alloc();
  *(void *)(v8 + 440) = swift_task_alloc();
  *(void *)(v8 + 448) = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 456) = swift_task_alloc();
  *(void *)(v8 + 464) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 472) = sub_1000A4980();
  uint64_t v14 = sub_1000A4950();
  *(void *)(v8 + 480) = v14;
  *(void *)(v8 + 488) = v13;
  return _swift_task_switch(sub_10007B3E0, v14, v13);
}

uint64_t sub_10007B3E0()
{
  uint64_t v1 = v0[58];
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v4 = v0[31];
  type metadata accessor for ModelDelegateSPI();
  swift_allocObject();
  v0[62] = sub_100047828();
  uint64_t v5 = sub_1000A42E0();
  v0[63] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  v0[64] = v7;
  v0[65] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v7(v1, 0, 1, v5);
  uint64_t v8 = swift_allocObject();
  v0[66] = v8;
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v2;
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[67] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10007B58C;
  uint64_t v10 = v0[58];
  return sub_1000479C0(v10, (uint64_t)sub_100081794, v8);
}

uint64_t sub_10007B58C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 464);
  *(void *)(*v1 + 544) = a1;
  swift_task_dealloc();
  swift_release();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 488);
  uint64_t v5 = *(void *)(v2 + 480);
  return _swift_task_switch(sub_10007B6FC, v5, v4);
}

uint64_t sub_10007B6FC()
{
  uint64_t v1 = (void *)v0[68];
  if (v1)
  {
    uint64_t v2 = v0[63];
    uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[64];
    uint64_t v4 = v0[58];
    uint64_t v5 = (void (*)(uint64_t, void, id))v0[32];
    id v6 = v1;
    swift_release();
    v3(v4, 1, 1, v2);
    sub_1000A4800();
    id v7 = objc_allocWithZone((Class)NSError);
    NSString v8 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v9 = [v7 initWithDomain:v8 code:12 userInfo:0];

    v5(v4, 0, v9);
    swift_release();

LABEL_3:
    sub_10000B988(v4, &qword_1000CA3B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  uint64_t v12 = *(void *)(v0[62] + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  v0[69] = v12;
  if (!v12) {
    return sub_1000A4CD0();
  }
  uint64_t v13 = (uint64_t *)(v0[34] + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v14 = v13[1];
  if (v14)
  {
    uint64_t v15 = *v13;
    swift_getKeyPath();
    swift_getKeyPath();
    v0[23] = v15;
    v0[24] = v14;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1000A4570();
  }
  else
  {
    swift_retain();
  }
  uint64_t v35 = v0[35];
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_10008179C(v16);
  sub_10009D81C(v35);
  swift_bridgeObjectRelease();
  if (!sub_100091D38())
  {
    swift_release();
    sub_1000A4440();
    uint64_t v24 = sub_1000A4450();
    os_log_type_t v25 = sub_1000A4A20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "forciblyShareFolder does not seem valid", v26, 2u);
      swift_slowDealloc();
    }
    uint64_t v27 = v0[63];
    uint64_t v28 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[64];
    uint64_t v4 = v0[58];
    uint64_t v29 = v0[56];
    uint64_t v31 = v0[49];
    uint64_t v30 = v0[50];
    unint64_t v34 = (void (*)(uint64_t, void, id))v0[32];

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    v28(v4, 1, 1, v27);
    sub_1000A4800();
    id v32 = objc_allocWithZone((Class)NSError);
    NSString v33 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v9 = [v32 initWithDomain:v33 code:12 userInfo:0];

    v34(v4, 0, v9);
    swift_release();
    swift_release();
    goto LABEL_3;
  }
  sub_1000A4440();
  long long v17 = sub_1000A4450();
  os_log_type_t v18 = sub_1000A4A40();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "starting folder remove subitem shares", v19, 2u);
    swift_slowDealloc();
  }
  uint64_t v20 = v0[55];
  uint64_t v21 = v0[49];
  uint64_t v22 = v0[50];

  os_log_type_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v0[70] = v23;
  v0[71] = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v23(v20, v21);
  return _swift_task_switch(sub_10007BC68, 0, 0);
}

uint64_t sub_10007BC68()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = swift_task_alloc();
  v0[72] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[73] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10007BD58;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0xD00000000000002ALL, 0x80000001000AAC10, sub_10001F45C, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10007BD58()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10007C2BC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10007BE74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007BE74()
{
  return _swift_task_switch(sub_10007BE8C, *(void *)(v0 + 480), *(void *)(v0 + 488));
}

uint64_t sub_10007BE8C()
{
  swift_release();
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "successfully completed forcible clean, delaying before prep as bird seems to require that", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[70];
  uint64_t v21 = v0[69];
  uint64_t v22 = v0[62];
  uint64_t v5 = v0[54];
  uint64_t v6 = v0[49];
  uint64_t v23 = v0[48];
  uint64_t v7 = v0[46];
  uint64_t v8 = v0[47];
  uint64_t v31 = v0[45];
  uint64_t v24 = v0[44];
  uint64_t v29 = v0[43];
  uint64_t v30 = v0[42];
  uint64_t v25 = v0[41];
  uint64_t v28 = v0[40];
  uint64_t v27 = v0[39];
  char v20 = *((unsigned char *)v0 + 105);
  uint64_t v18 = v0[37];
  uint64_t v19 = v0[38];
  uint64_t v9 = v0[33];
  uint64_t v16 = v0[32];
  long long v17 = (void *)v0[34];

  v4(v5, v6);
  sub_10001F798(0, (unint64_t *)&qword_1000CA630);
  uint64_t v10 = (void *)sub_1000A4A80();
  sub_1000A4730();
  sub_1000A4750();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v26(v8, v31);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v21;
  *(void *)(v11 + 24) = v17;
  *(void *)(v11 + 32) = v16;
  *(void *)(v11 + 40) = v9;
  *(void *)(v11 + 48) = v22;
  *(void *)(v11 + 56) = v18;
  *(void *)(v11 + 64) = v19;
  *(unsigned char *)(v11 + 72) = v20;
  v0[6] = sub_100092454;
  v0[7] = v11;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100050C2C;
  v0[5] = &unk_1000C2F50;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_retain();
  swift_retain();
  id v13 = v17;
  swift_retain();
  sub_1000A4710();
  v0[29] = _swiftEmptyArrayStorage;
  sub_100094E4C(&qword_1000CB868, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008704(&qword_1000CB870);
  sub_100092484();
  sub_1000A4C20();
  sub_1000A4A60();
  _Block_release(v12);
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v24, v30);
  v26(v23, v31);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10007C2BC()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  return _swift_task_switch(sub_10007C320, v1, v2);
}

void sub_10007C320()
{
  uint64_t v56 = v0;
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  uint64_t v54 = (void *)(v0 + 224);
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 216) = v5;
    sub_1000A4BC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "forciblyShareFolder forcibly unshare subitems error: %@", v3, 0xCu);
    sub_100008704(&qword_1000CAAF0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 408);
  uint64_t v8 = *(void *)(v0 + 392);

  v6(v7, v8);
  uint64_t v9 = sub_1000A4230();
  sub_100008C08();
  uint64_t v10 = swift_allocError();
  *(void *)uint64_t v11 = 0xD00000000000006BLL;
  *(void *)(v11 + 8) = 0x80000001000ACB30;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 16) = v9;
  *(unsigned char *)(v11 + 40) = 3;
  swift_willThrow();
  swift_errorRelease();
  *(void *)(v0 + 240) = v10;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v15 = *(void **)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 144);
    int v17 = *(unsigned __int8 *)(v0 + 152);
    sub_1000A4440();
    sub_10003E7A4(v12, v13, v15, v14, v16, v17);
    sub_10003E7A4(v12, v13, v15, v14, v16, v17);
    uint64_t v18 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A20();
    BOOL v19 = os_log_type_enabled(v18, type);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    uint64_t v49 = *(void *)(v0 + 392);
    uint64_t v50 = *(void *)(v0 + 424);
    uint64_t v47 = v13;
    uint64_t v48 = v12;
    uint64_t v45 = v16;
    uint64_t v46 = v14;
    if (v19)
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)char v20 = 136315138;
      *(void *)(v0 + 64) = v12;
      *(void *)(v0 + 72) = v13;
      *(void *)(v0 + 80) = v15;
      *(void *)(v0 + 88) = v14;
      *(void *)(v0 + 96) = v16;
      *(unsigned char *)(v0 + 104) = v17;
      sub_10003E7A4(v12, v13, v15, v14, v16, v17);
      uint64_t v21 = sub_1000A4810();
      *(void *)(v0 + 208) = sub_10003CFA4(v21, v22, &v55);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v12, v13, v15, v14, v16, v17);
      sub_10003E804(v12, v13, v15, v14, v16, v17);
      _os_log_impl((void *)&_mh_execute_header, v18, type, "Initial error finishing forciblyShareFolder folderPrepError: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003E804(v12, v13, v15, v14, v16, v17);
      sub_10003E804(v12, v13, v15, v14, v16, v17);
    }

    v51(v50, v49);
    sub_1000A4800();
    id v24 = objc_allocWithZone((Class)NSError);
    NSString v25 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v26 = [v24 initWithDomain:v25 code:12 userInfo:0];

    *uint64_t v54 = v26;
    if (v17 != 4)
    {
      if (v17 != 1)
      {
LABEL_15:
        unsigned __int8 v52 = v17;
        uint64_t v53 = v15;
        sub_1000A4440();
        uint64_t v27 = v26;
        uint64_t v28 = sub_1000A4450();
        os_log_type_t v29 = sub_1000A4A20();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          uint64_t v31 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 138412290;
          *(void *)(v0 + 200) = v27;
          uint64_t v32 = v27;
          sub_1000A4BC0();
          *uint64_t v31 = v27;

          uint64_t v42 = v28;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "forciblyShareFolder returning mapped error: %@", v30, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v42 = v27;
        }
        NSString v33 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        uint64_t v35 = *(void *)(v0 + 504);
        unint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 512);
        uint64_t v36 = *(void *)(v0 + 456);
        uint64_t v37 = *(void *)(v0 + 416);
        uint64_t v38 = *(void *)(v0 + 392);
        uint64_t v43 = *(void (**)(uint64_t, void, id))(v0 + 256);

        v33(v37, v38);
        v34(v36, 1, 1, v35);
        swift_beginAccess();
        id v39 = *(id *)(v0 + 224);
        uint64_t v40 = (void *)sub_1000A4230();

        id v41 = (id)CKXPCSuitableError();
        v43(v36, 0, v41);

        swift_release();
        swift_release();
        sub_10003E804(v48, v47, v53, v46, v45, v52);
        sub_10000B988(v36, &qword_1000CA3B0);

        swift_errorRelease();
        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v23 = *(void (**)(void))(v0 + 8);
        goto LABEL_19;
      }

      if (v15)
      {
LABEL_14:
        *uint64_t v54 = v15;
        id v26 = v15;
        goto LABEL_15;
      }
      __break(1u);
    }

    if (!v15)
    {
      __break(1u);
      return;
    }
    goto LABEL_14;
  }
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(void (**)(void))(v0 + 8);
LABEL_19:
  v23();
}

uint64_t sub_10007CC0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000A4460();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    uint64_t v15 = (void *)sub_1000A4230();
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1000A4440();
  id v16 = v15;
  int v17 = sub_1000A4450();
  int v18 = sub_1000A4A20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v44 = v18;
    os_log_t v45 = v17;
    uint64_t v46 = v12;
    id v40 = v16;
    id v41 = v10;
    uint64_t v47 = v11;
    uint64_t v48 = a4;
    uint64_t v49 = v15;
    uint64_t v42 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v20 = sub_1000A48D0();
    uint64_t v22 = v21;
    if ((0x80000001000ACB30 & 0x2000000000000000) != 0) {
      unint64_t v23 = (0x80000001000ACB30 & 0xF00000000000000) >> 54;
    }
    else {
      unint64_t v23 = 428;
    }
    if ((((unint64_t)"SPIHelper_iOS.SPIHelper" >> 61) & ((0x80000001000ACB30 & 0xF00000000000000) >> 54 == 0)) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v24 = v20;
      while (sub_1000A48D0() != v24 || v25 != v22)
      {
        char v27 = sub_1000A4D70();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_19;
        }
        if (v23 == (unint64_t)sub_1000A4860() >> 14) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1000A48E0();
      uint64_t v28 = sub_1000A4830();
      unint64_t v29 = v30;
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v41;
    uint64_t v15 = v49;
    uint64_t v31 = v40;
    uint64_t v50 = sub_10003CFA4(v28, v29, &v51);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (v15)
    {
      id v32 = v31;
      id v33 = [v32 description];
      uint64_t v34 = sub_1000A4800();
      unint64_t v36 = v35;

      uint64_t v15 = v49;
    }
    else
    {
      unint64_t v36 = 0xEE00646569666963;
      uint64_t v34 = 0x65707320656E6F6ELL;
    }
    uint64_t v50 = sub_10003CFA4(v34, v36, &v51);
    sub_1000A4BC0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "%s: model concluded SPI unexpectedly, deferCheckReplyCount() will reply then fatalError(). Error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    id v16 = v31;
    a4 = v48;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v38 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  a4(v10, 0, v15);

  sub_10000B988((uint64_t)v10, &qword_1000CA3B0);
  uint64_t result = sub_1000A4CD0();
  __break(1u);
  return result;
}

uint64_t sub_10007D0EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v24 = a8;
  uint64_t v15 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v15 - 8);
  int v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A49A0();
  uint64_t v18 = sub_1000A49C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  sub_1000A4990();
  swift_retain();
  id v19 = a2;
  swift_retain();
  swift_retain();
  uint64_t v20 = sub_1000A4980();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  *(void *)(v21 + 32) = a1;
  *(void *)(v21 + 40) = v19;
  *(void *)(v21 + 48) = a3;
  *(void *)(v21 + 56) = a4;
  *(void *)(v21 + 64) = a5;
  *(void *)(v21 + 72) = a6;
  *(void *)(v21 + 80) = a7;
  *(unsigned char *)(v21 + 88) = v24;
  sub_100055948((uint64_t)v17, (uint64_t)&unk_1000CBA50, v21);
  return swift_release();
}

uint64_t sub_10007D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 57) = v16;
  *(void *)(v8 + 320) = v14;
  *(void *)(v8 + 328) = v15;
  *(void *)(v8 + 304) = a7;
  *(void *)(v8 + 312) = a8;
  *(void *)(v8 + 288) = a5;
  *(void *)(v8 + 296) = a6;
  *(void *)(v8 + 280) = a4;
  sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  uint64_t v9 = sub_1000A4460();
  *(void *)(v8 + 352) = v9;
  *(void *)(v8 + 360) = *(void *)(v9 - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  *(void *)(v8 + 376) = swift_task_alloc();
  *(void *)(v8 + 384) = swift_task_alloc();
  sub_1000A4990();
  *(void *)(v8 + 392) = sub_1000A4980();
  uint64_t v11 = sub_1000A4950();
  *(void *)(v8 + 400) = v11;
  *(void *)(v8 + 408) = v10;
  return _swift_task_switch(sub_10007D3E0, v11, v10);
}

uint64_t sub_10007D3E0()
{
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "starting folder sharing prep", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[44];
  uint64_t v6 = v0[45];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[52] = v7;
  v0[53] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[54] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10007D520;
  return sub_100033BF8(1);
}

uint64_t sub_10007D520()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  uint64_t v4 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v5 = sub_10007DCF8;
  }
  else {
    uint64_t v5 = sub_10007D65C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007D65C()
{
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "successfully completed folder sharing prep", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[52];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[44];

  v4(v5, v6);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000CBA58 + dword_1000CBA58);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[56] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10007D7A4;
  uint64_t v8 = v0[35];
  return v10(300, v8);
}

uint64_t sub_10007D7A4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  uint64_t v4 = *(void *)(v2 + 400);
  return _swift_task_switch(sub_10007D8CC, v4, v3);
}

uint64_t sub_10007D8CC()
{
  uint64_t v1 = *(void *)(v0 + 456);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v3 = *(void (**)(uint64_t, void, id))(v0 + 296);
    swift_release();
    *(void *)(v0 + 264) = v1;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    swift_dynamicCast();
    sub_100092640(v0 + 112, v0 + 64);
    id v4 = sub_100094F20(0xD000000000000013, 0x80000001000ACBB0);
    sub_100093174(v0 + 64, (void (*)(void, void, void, void, void, void))sub_10003E804);
    uint64_t v5 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    id v6 = v4;
    uint64_t v7 = (void *)sub_1000A4230();

    id v8 = (id)CKXPCSuitableError();
    v3(v2, 0, v8);

    swift_errorRelease();
    sub_10000B988(v2, &qword_1000CA3B0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v11;
    void *v11 = v0;
    v11[1] = sub_10007DB3C;
    char v12 = *(unsigned char *)(v0 + 57);
    uint64_t v13 = *(void *)(v0 + 320);
    uint64_t v14 = *(void *)(v0 + 328);
    uint64_t v15 = *(void *)(v0 + 304);
    uint64_t v16 = *(void *)(v0 + 312);
    uint64_t v17 = *(void *)(v0 + 296);
    return sub_10007E12C(v16, v13, v14, v12, v17, v15);
  }
}

uint64_t sub_10007DB3C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 408);
  uint64_t v3 = *(void *)(v1 + 400);
  return _swift_task_switch(sub_10007DC5C, v3, v2);
}

uint64_t sub_10007DC5C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007DCF8()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[55];
  swift_release();
  v0[34] = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_100092640((uint64_t)(v0 + 20), (uint64_t)(v0 + 2));
    sub_1000A4440();
    sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E7A4);
    uint64_t v2 = sub_1000A4450();
    os_log_type_t v3 = sub_1000A4A20();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[52];
    uint64_t v6 = v0[46];
    uint64_t v7 = v0[44];
    if (v4)
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)id v8 = 136315138;
      sub_100092640((uint64_t)(v0 + 2), (uint64_t)(v0 + 26));
      sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E7A4);
      uint64_t v9 = sub_1000A4810();
      v0[32] = sub_10003CFA4(v9, v10, &v19);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E804);
      sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E804);
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Initial error finishing forciblyShareFolder: %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v5(v6, v7);
    }
    else
    {
      sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E804);
      sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E804);

      v5(v6, v7);
    }
    uint64_t v12 = v0[42];
    uint64_t v13 = (void (*)(uint64_t, void, id))v0[37];
    id v14 = sub_100094F20(0xD000000000000013, 0x80000001000ACBB0);
    uint64_t v15 = sub_1000A42E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    uint64_t v16 = (void *)sub_1000A4230();
    id v17 = (id)CKXPCSuitableError();

    v13(v12, 0, v17);
    sub_100093174((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void, void))sub_10003E804);
    sub_10000B988(v12, &qword_1000CA3B0);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
  }
  return v11();
}

uint64_t sub_10007E12C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = v6;
  *(unsigned char *)(v7 + 112) = a4;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  sub_100008704(&qword_1000CAB08);
  *(void *)(v7 + 64) = swift_task_alloc();
  uint64_t v8 = sub_1000A4460();
  *(void *)(v7 + 72) = v8;
  *(void *)(v7 + 80) = *(void *)(v8 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  *(void *)(v7 + 96) = sub_1000A4990();
  *(void *)(v7 + 104) = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  return _swift_task_switch(sub_10007E260, v10, v9);
}

uint64_t sub_10007E260()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_sharingModel);
  if (!v2) {
    return sub_1000A4CD0();
  }
  uint64_t v3 = *(void *)(v0 + 24);
  swift_retain();
  if (v3 == 1)
  {
    uint64_t v10 = 1;
  }
  else
  {
    sub_1000A4440();
    BOOL v4 = sub_1000A4450();
    os_log_type_t v5 = sub_1000A4A20();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "share is public, and you can only add participants to a private share--will still create the share and return sharingURL and share", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v9 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = *(void *)(v0 + 24);
  }
  uint64_t v24 = v10;
  BOOL v12 = v3 != 1;
  id v14 = *(void **)(v0 + 56);
  uint64_t v13 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  char v17 = *(unsigned char *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 32);
  sub_1000A49A0();
  uint64_t v19 = sub_1000A49C0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 0, 1, v19);
  swift_retain();
  id v20 = v14;
  swift_retain();
  uint64_t v21 = sub_1000A4980();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = &protocol witness table for MainActor;
  *(void *)(v22 + 32) = v20;
  *(void *)(v22 + 40) = v2;
  *(void *)(v22 + 48) = v24;
  *(void *)(v22 + 56) = v18;
  *(unsigned char *)(v22 + 64) = v17;
  *(unsigned char *)(v22 + 65) = v12;
  *(void *)(v22 + 72) = v16;
  *(void *)(v22 + 80) = v15;
  sub_100055948(v13, (uint64_t)&unk_1000CBA70, v22);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10007E574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, const void *a9, uint64_t a10, uint64_t a11, void (*a12)(char *, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  unsigned int v26 = a8;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v23 = a12;
  uint64_t v13 = sub_1000A42E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = _Block_copy(a9);
  sub_1000A42A0();
  uint64_t v18 = sub_1000A4910();
  uint64_t v19 = sub_1000A4910();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  id v21 = a1;
  v23(v16, v18, v19, v24, v25, v26, a11, v20);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_10007E710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 192) = v19;
  *(void *)(v8 + 200) = v20;
  *(unsigned char *)(v8 + 57) = v18;
  *(void *)(v8 + 184) = a5;
  uint64_t v13 = sub_1000A4460();
  *(void *)(v8 + 208) = v13;
  *(void *)(v8 + 216) = *(void *)(v13 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  *(void *)(v8 + 232) = swift_task_alloc();
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = sub_100008704(&qword_1000CA3B0);
  *(void *)(v8 + 256) = swift_task_alloc();
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = swift_task_alloc();
  *(void *)(v8 + 280) = swift_task_alloc();
  *(void *)(v8 + 288) = sub_1000A4990();
  *(void *)(v8 + 296) = sub_1000A4980();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000CBA78 + dword_1000CBA78);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 304) = v14;
  void *v14 = v8;
  v14[1] = sub_10007E8E4;
  return v16(a5, a6, a7, a8);
}

uint64_t sub_10007E8E4()
{
  uint64_t v2 = (void *)*v1;
  v2[39] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_1000A4950();
  v2[40] = v4;
  v2[41] = v3;
  if (v0) {
    os_log_type_t v5 = sub_10007EB6C;
  }
  else {
    os_log_type_t v5 = sub_10007EA44;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007EA44()
{
  if (*(unsigned char *)(v0 + 57))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v1;
    void *v1 = v0;
    v1[1] = sub_10007FA34;
    return sub_100034038();
  }
  else
  {
    swift_retain();
    char v3 = sub_100051768();
    swift_release();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007F21C;
    return sub_1000309E8(v3 & 1);
  }
}

void sub_10007EB6C()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 312);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v43 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v40 = v2;
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    if (v9)
    {
      uint64_t v33 = *(void *)(v0 + 216);
      uint64_t v11 = v6;
      BOOL v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)BOOL v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing completeForciblyShareFolder: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    unsigned __int8 v37 = v7;
    int v44 = v15;
    if (v7 != 1 && v7 != 3)
    {
      if (v7 != 4)
      {
LABEL_13:
        unsigned __int8 typea = v4;
        uint64_t v42 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        id v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "completeForciblyShareFolder returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v21 = v20;
        }
        uint64_t v25 = *(void *)(v0 + 256);
        uint64_t v26 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 208);
        uint64_t v28 = *(void (**)(uint64_t, void, id))(v0 + 192);

        v44(v26, v27);
        uint64_t v29 = sub_1000A42E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v28(v25, 0, v32);

        sub_10003E804(v42, v40, typea, v39, v38, v37);
        sub_10000B988(v25, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_17;
      }

      if (v4)
      {
LABEL_12:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_13;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(void (**)(void))(v0 + 8);
LABEL_17:
  v16();
}

uint64_t sub_10007F21C()
{
  uint64_t v2 = (void *)*v1;
  v2[43] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[40];
    uint64_t v4 = v2[41];
    return _swift_task_switch(sub_10007F384, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[44] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_10007FA34;
    return sub_100034038();
  }
}

void sub_10007F384()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 344);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v43 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v40 = v2;
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    if (v9)
    {
      uint64_t v33 = *(void *)(v0 + 216);
      uint64_t v11 = v6;
      BOOL v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)BOOL v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing completeForciblyShareFolder: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    unsigned __int8 v37 = v7;
    int v44 = v15;
    if (v7 != 1 && v7 != 3)
    {
      if (v7 != 4)
      {
LABEL_13:
        unsigned __int8 typea = v4;
        uint64_t v42 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        id v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "completeForciblyShareFolder returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v21 = v20;
        }
        uint64_t v25 = *(void *)(v0 + 256);
        uint64_t v26 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 208);
        uint64_t v28 = *(void (**)(uint64_t, void, id))(v0 + 192);

        v44(v26, v27);
        uint64_t v29 = sub_1000A42E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v28(v25, 0, v32);

        sub_10003E804(v42, v40, typea, v39, v38, v37);
        sub_10000B988(v25, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_17;
      }

      if (v4)
      {
LABEL_12:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_13;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(void (**)(void))(v0 + 8);
LABEL_17:
  v16();
}

uint64_t sub_10007FA34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 328);
  uint64_t v4 = *(void *)(v2 + 320);
  if (v0) {
    uint64_t v5 = sub_10007FDBC;
  }
  else {
    uint64_t v5 = sub_10007FB70;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007FB70()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v1;
  void *v1 = v0;
  v1[1] = sub_10007FC5C;
  uint64_t v2 = *(void *)(v0 + 280);
  return sub_100035D30(v2);
}

uint64_t sub_10007FC5C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 280);
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  sub_10000B988(v3, &qword_1000CA3B0);
  uint64_t v4 = *(void *)(v2 + 328);
  uint64_t v5 = *(void *)(v2 + 320);
  if (v0) {
    uint64_t v6 = sub_100080838;
  }
  else {
    uint64_t v6 = sub_10008046C;
  }
  return _swift_task_switch(v6, v5, v4);
}

void sub_10007FDBC()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v43 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v40 = v2;
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    if (v9)
    {
      uint64_t v33 = *(void *)(v0 + 216);
      uint64_t v11 = v6;
      BOOL v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)BOOL v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing completeForciblyShareFolder: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    unsigned __int8 v37 = v7;
    int v44 = v15;
    if (v7 != 1 && v7 != 3)
    {
      if (v7 != 4)
      {
LABEL_13:
        unsigned __int8 typea = v4;
        uint64_t v42 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        id v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "completeForciblyShareFolder returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v21 = v20;
        }
        uint64_t v25 = *(void *)(v0 + 256);
        uint64_t v26 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 208);
        uint64_t v28 = *(void (**)(uint64_t, void, id))(v0 + 192);

        v44(v26, v27);
        uint64_t v29 = sub_1000A42E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v28(v25, 0, v32);

        sub_10003E804(v42, v40, typea, v39, v38, v37);
        sub_10000B988(v25, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_17;
      }

      if (v4)
      {
LABEL_12:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_13;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(void (**)(void))(v0 + 8);
LABEL_17:
  v16();
}

uint64_t sub_10008046C()
{
  uint64_t v18 = v0;
  swift_release();
  sub_1000A4440();
  swift_retain_n();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v15 = *(void *)(v0 + 208);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1000A4560();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = sub_1000A4810();
    *(void *)(v0 + 176) = sub_10003CFA4(v4, v5, &v17);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished forciblyShareFolder shareURL: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 216);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  BOOL v9 = *(void **)(v0 + 168);
  if (v9)
  {
    id v10 = [*(id *)(v0 + 168) _copyWithoutPersonalInfo];
  }
  else
  {
    id v10 = 0;
  }
  uint64_t v11 = *(void *)(v0 + 264);
  (*(void (**)(uint64_t, id, void))(v0 + 192))(v11, v10, 0);

  sub_10000B988(v11, &qword_1000CA3B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_100080838()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 376);
  swift_release();
  *(void *)(v0 + 152) = v1;
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if (swift_dynamicCast())
  {
    os_log_t v45 = (void *)(v0 + 136);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    int v7 = *(unsigned __int8 *)(v0 + 104);
    sub_1000A4440();
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    sub_10003E7A4(v3, v2, v4, v5, v6, v7);
    uint64_t v8 = sub_1000A4450();
    os_log_type_t type = sub_1000A4A40();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v43 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v40 = v2;
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    if (v9)
    {
      uint64_t v33 = *(void *)(v0 + 216);
      uint64_t v11 = v6;
      BOOL v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)BOOL v12 = 136315138;
      *(void *)(v0 + 16) = v3;
      *(void *)(v0 + 24) = v2;
      *(void *)(v0 + 32) = v4;
      *(void *)(v0 + 40) = v5;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v7;
      sub_10003E7A4(v3, v2, v4, v5, v11, v7);
      uint64_t v13 = sub_1000A4810();
      *(void *)(v0 + 160) = sub_10003CFA4(v13, v14, &v46);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      sub_10003E804(v3, v2, v4, v5, v11, v7);
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Initial error finishing completeForciblyShareFolder: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v15(v43, v41);
    }
    else
    {
      sub_10003E804(v3, v2, v4, v5, v6, v7);
      sub_10003E804(v3, v2, v4, v5, v6, v7);

      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v15(v43, v41);
    }
    sub_1000A4800();
    id v17 = objc_allocWithZone((Class)NSError);
    NSString v18 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithDomain:v18 code:12 userInfo:0];

    *os_log_t v45 = v19;
    unsigned __int8 v37 = v7;
    int v44 = v15;
    if (v7 != 1 && v7 != 3)
    {
      if (v7 != 4)
      {
LABEL_13:
        unsigned __int8 typea = v4;
        uint64_t v42 = v3;
        sub_1000A4440();
        uint64_t v20 = v19;
        id v21 = sub_1000A4450();
        os_log_type_t v22 = sub_1000A4A20();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)(v0 + 144) = v20;
          uint64_t v24 = v20;
          sub_1000A4BC0();
          void *v34 = v20;

          _os_log_impl((void *)&_mh_execute_header, v21, v22, "completeForciblyShareFolder returning mapped error: %@", v23, 0xCu);
          sub_100008704(&qword_1000CAAF0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v21 = v20;
        }
        uint64_t v25 = *(void *)(v0 + 256);
        uint64_t v26 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 208);
        uint64_t v28 = *(void (**)(uint64_t, void, id))(v0 + 192);

        v44(v26, v27);
        uint64_t v29 = sub_1000A42E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
        swift_beginAccess();
        id v30 = *(id *)(v0 + 136);
        uint64_t v31 = (void *)sub_1000A4230();

        id v32 = (id)CKXPCSuitableError();
        v28(v25, 0, v32);

        sub_10003E804(v42, v40, typea, v39, v38, v37);
        sub_10000B988(v25, &qword_1000CA3B0);

        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v16 = *(void (**)(void))(v0 + 8);
        goto LABEL_17;
      }

      if (v4)
      {
LABEL_12:
        *os_log_t v45 = v4;
        id v19 = v4;
        goto LABEL_13;
      }
      __break(1u);
    }

    if (!v4)
    {
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(void (**)(void))(v0 + 8);
LABEL_17:
  v16();
}

id sub_100080F18()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SPIHelper()
{
  return self;
}

uint64_t sub_100080F88()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100080FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100060BC4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100080FDC()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 9, v5);
}

uint64_t sub_100081110(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = *(void *)(v1 + v5 + 8);
  BOOL v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *BOOL v12 = v2;
  v12[1] = sub_10001FD88;
  return sub_10007B124(a1, v15, v14, v7, v10, v11, v8, v9);
}

uint64_t sub_1000812B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100008704(qword_1000CA3F0);
    uint64_t v5 = swift_allocError();
    *unint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    type metadata accessor for NSFileProviderServiceName(0);
    sub_10001F798(0, &qword_1000CBBC0);
    sub_100094E4C(&qword_1000CA158, type metadata accessor for NSFileProviderServiceName);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1000A4770();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1000813DC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008145C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1000A4570();
}

uint64_t sub_1000814D4()
{
  return sub_1000814E8();
}

uint64_t sub_1000814E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();

  return swift_release();
}

uint64_t sub_100081560(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CA3B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v9 - v6;
  sub_10001F904(a1, (uint64_t)&v9 - v6, &qword_1000CA3B0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001F904((uint64_t)v7, (uint64_t)v5, &qword_1000CA3B0);
  swift_retain();
  sub_1000A4570();
  return sub_10000B988((uint64_t)v7, &qword_1000CA3B0);
}

double sub_100081670@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000816F8()
{
  return sub_1000A4570();
}

uint64_t sub_100081794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007CC0C(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_10008179C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10009E91C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

uint64_t sub_1000818F0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1000A4460();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  BOOL v12 = sub_1000A4450();
  int v13 = sub_1000A4A40();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v26 = v13;
    uint64_t v27 = a1;
    uint64_t v28 = v9;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v15 = sub_1000A48D0();
    sub_10003C8F4(v15, v16, a3, a4);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if (v18)
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0xE000000000000000;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000A48E0();
      uint64_t v24 = v8;
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1000A4830();
      unint64_t v21 = v20;
      uint64_t v8 = v24;
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = sub_10003CFA4(v19, v21, &v30);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10003CFA4(v27, a2, &v30);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v26, "Begin %s, %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_100081C20(uint64_t a1)
{
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v37 = type metadata accessor for SPIAnalyticsEvent();
  uint64_t v38 = &off_1000C2B58;
  uint64_t v9 = sub_1000931B4(v36);
  sub_100042890(a1, (uint64_t)v9);
  sub_1000A4440();
  sub_1000930FC((uint64_t)v36, (uint64_t)aBlock);
  uint64_t v10 = sub_1000A4450();
  os_log_type_t v11 = sub_1000A4A40();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v29 = v2;
  if (v12)
  {
    uint64_t v13 = swift_slowAlloc();
    *(void *)&v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_100046174(aBlock, (uint64_t)v32);
    unint64_t v14 = sub_10004248C();
    uint64_t v30 = sub_10003CFA4(v14, v15, (uint64_t *)v35);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    sub_100041414((uint64_t)aBlock);
    *(_WORD *)(v13 + 12) = 1024;
    LODWORD(v30) = 1;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Analytics event is: %s, will be built and sent: %{BOOL}d", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    uint64_t v2 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100041414((uint64_t)aBlock);
  }

  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v8, v2);
  sub_100046174(v36, v37);
  sub_10004248C();
  NSString v17 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  sub_1000930FC((uint64_t)v36, (uint64_t)v35);
  uint64_t v18 = swift_allocObject();
  sub_1000930E4(v35, v18 + 16);
  uint64_t v33 = sub_100093250;
  uint64_t v34 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100055AD0;
  id v32 = &unk_1000C31D0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v19);

  sub_1000A4440();
  sub_1000930FC((uint64_t)v36, (uint64_t)aBlock);
  unint64_t v20 = sub_1000A4450();
  os_log_type_t v21 = sub_1000A4A40();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    *(void *)&v35[0] = swift_slowAlloc();
    uint64_t v28 = v3;
    *(_DWORD *)os_log_type_t v22 = 136315138;
    sub_100046174(aBlock, (uint64_t)v32);
    unint64_t v23 = sub_10004248C();
    uint64_t v30 = sub_10003CFA4(v23, v24, (uint64_t *)v35);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    sub_100041414((uint64_t)aBlock);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Analytics event: %s sent lazily", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v25 = v29;
    int v26 = v6;
  }
  else
  {
    sub_100041414((uint64_t)aBlock);

    int v26 = v6;
    uint64_t v25 = v2;
  }
  v16(v26, v25);
  return sub_100041414((uint64_t)v36);
}

uint64_t sub_1000820DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_21;
    }
    int64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      goto LABEL_28;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v11;
    if (!v13)
    {
      int64_t v11 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_28;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v11);
      if (!v13)
      {
        int64_t v11 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_28;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v11);
        if (!v13)
        {
          int64_t v11 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_28;
          }
          uint64_t v13 = *(void *)(v5 + 8 * v11);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v9)
            {
LABEL_28:
              swift_release();
              return 0;
            }
            uint64_t v13 = *(void *)(v5 + 8 * v14);
            int64_t v11 = v14;
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    uint64_t v8 = (v13 - 1) & v13;
LABEL_21:
    if (sub_1000A4800() == a2 && v15 == a3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    char v17 = sub_1000A4D70();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17)
    {
      swift_release();
      return 1;
    }
  }
  while (1)
  {
    int64_t v11 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_28;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v11);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100082298(uint64_t a1)
{
  v1[20] = a1;
  uint64_t v2 = sub_1000A42E0();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_1000A4460();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  return _swift_task_switch(sub_1000823C4, 0, 0);
}

uint64_t sub_1000823C4()
{
  id v1 = [self defaultManager];
  v0[28] = v1;
  sub_1000A4270(v2);
  uint64_t v4 = v3;
  v0[29] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100082504;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000812B4;
  v0[13] = &unk_1000C3A90;
  v0[14] = v5;
  [v1 getFileProviderServicesForItemAtURL:v4 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100082504()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_1000828F4;
  }
  else {
    uint64_t v2 = sub_100082614;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100082614()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 120);

  sub_1000A4440();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1000A4450();
  os_log_type_t v4 = sub_1000A4A40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 216);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for NSFileProviderServiceName(0);
    sub_10001F798(0, &qword_1000CBBC0);
    sub_100094E4C(&qword_1000CA158, type metadata accessor for NSFileProviderServiceName);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000A4780();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 152) = sub_10003CFA4(v6, v8, &v18);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "services returned: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 200);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  char v12 = sub_1000820DC(v2, 0xD00000000000001DLL, 0x80000001000AD5E0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13(v12 & 1);
}

uint64_t sub_1000828F4()
{
  uint64_t v30 = v0;
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = (void *)v0[28];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v6 = v0[20];
  uint64_t v5 = v0[21];
  swift_willThrow();

  sub_1000A4440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v7 = sub_1000A4450();
  os_log_type_t v8 = sub_1000A4A20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[30];
    uint64_t v26 = v0[25];
    uint64_t v27 = v0[24];
    uint64_t v28 = v0[26];
    os_log_type_t type = v8;
    uint64_t v11 = v0[22];
    uint64_t v10 = v0[23];
    uint64_t v12 = v0[21];
    uint64_t v13 = swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = sub_1000A4D50();
    v0[16] = sub_10003CFA4(v14, v15, v29);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v13 + 12) = 2080;
    v0[17] = v9;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v16 = sub_1000A4810();
    v0[18] = sub_10003CFA4(v16, v17, v29);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "Failed to fetch FP services for %s: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    uint64_t v19 = v0[25];
    uint64_t v18 = v0[26];
    uint64_t v20 = v0[24];
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  uint64_t v21 = sub_1000A4230();
  sub_100008C08();
  swift_allocError();
  *(void *)uint64_t v22 = 0xD000000000000011;
  *(void *)(v22 + 8) = 0x80000001000AD5C0;
  *(void *)(v22 + 24) = 0;
  *(void *)(v22 + 32) = 0;
  *(void *)(v22 + 16) = v21;
  *(unsigned char *)(v22 + 40) = 9;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23(0);
}

uint64_t sub_100082C9C(uint64_t a1)
{
  v1[12] = a1;
  uint64_t v2 = sub_1000A4180();
  v1[13] = v2;
  v1[14] = *(void *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_100082D6C, 0, 0);
}

uint64_t sub_100082D6C()
{
  uint64_t v1 = v0[16];
  sub_100008704(&qword_1000CA678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6410;
  *(void *)(inited + 32) = NSURLIsPackageKey;
  uint64_t v3 = NSURLIsPackageKey;
  uint64_t v4 = (uint64_t)sub_10003DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)(v4, v1);
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v7 = v0[14];
  swift_bridgeObjectRelease();
  LOBYTE(v4) = sub_1000A4170();
  os_log_type_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  if (v4) {
    goto LABEL_3;
  }
  uint64_t v9 = v0[15];
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A6410;
  *(void *)(v10 + 32) = NSURLIsDirectoryKey;
  uint64_t v11 = NSURLIsDirectoryKey;
  uint64_t v12 = (uint64_t)sub_10003DA44(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)(v12, v9);
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[13];
  swift_bridgeObjectRelease();
  LOBYTE(v12) = sub_1000A4110();
  v8(v13, v14);
  if (v12)
  {
    uint64_t v17 = v0[12];
    uint64_t v18 = swift_task_alloc();
    v0[17] = v18;
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = 0;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[18] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100083048;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v19, 0, 0, 0xD00000000000002ALL, 0x80000001000AAC10, sub_100094F18, v18, (char *)&type metadata for () + 8);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15(0);
  }
}

uint64_t sub_100083048()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000831D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100083164;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100083164()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1000831D0()
{
  swift_task_dealloc();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_100083250(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void *a7, unint64_t a8, _UNKNOWN **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unint64_t v140 = a8;
  id v134 = a7;
  unint64_t v135 = a4;
  uint64_t v142 = a3;
  uint64_t v132 = a5;
  sub_1000409B0(a5, (uint64_t)v162, &qword_1000CB378);
  uint64_t v153 = v162[1];
  unint64_t v154 = v162[0];
  uint64_t v16 = v162[4];
  v151 = (void *)v162[2];
  uint64_t v152 = v162[3];
  int v17 = v163;
  uint64_t v18 = sub_1000A4460();
  uint64_t v149 = *(void *)(v18 - 8);
  uint64_t v150 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v143 = (char *)&v129 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  Swift::String v138 = (char *)&v129 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v133 = (char *)&v129 - v27;
  __chkstk_darwin(v26);
  uint64_t v136 = ((char *)&v129 - v28);
  uint64_t v29 = sub_1000A48D0();
  sub_10003C8F4(v29, v30, a1, a2);
  char v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v144 = a2;
  unint64_t v137 = a1;
  if (v32)
  {
    uint64_t v141 = 0;
    unint64_t v35 = 0xE000000000000000;
    int v33 = v17;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v141 = sub_1000A4830();
    int v33 = v17;
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
  }
  uint64_t v139 = a9;
  unint64_t v145 = v35;
  uint64_t v146 = a12;
  unint64_t v36 = v151;
  uint64_t v37 = v154;
  if (a6)
  {
    unint64_t v38 = v135;
    if (v135)
    {
      id v39 = a6;
      unint64_t v40 = v38;
    }
    else
    {
      id v54 = a6;
      id v55 = [v54 description];
      uint64_t v142 = sub_1000A4800();
      unint64_t v40 = v56;
    }
    uint64_t v57 = v136;
    swift_bridgeObjectRetain();
    id v58 = [a6 code];
    unint64_t v59 = 0x80000001000ACE30;
    unint64_t v60 = 0x206C6172656E6567;
    if (v58 == (id)12) {
      int v61 = 12;
    }
    else {
      int v61 = 11;
    }
    if (v58 == (id)12) {
      unint64_t v60 = 0xD000000000000018;
    }
    else {
      unint64_t v59 = 0xED0000726F727265;
    }
    if (v58 == (id)10) {
      int v61 = 13;
    }
    int v147 = v61;
    if (v58 == (id)10) {
      unint64_t v62 = 0xD000000000000019;
    }
    else {
      unint64_t v62 = v60;
    }
    unint64_t v154 = v62;
    if (v58 == (id)10) {
      unint64_t v63 = 0x80000001000ACE10;
    }
    else {
      unint64_t v63 = v59;
    }
    uint64_t v64 = v144;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v65 = a6;
    swift_bridgeObjectRetain_n();
    id v66 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v67 = sub_1000A4450();
    os_log_type_t v68 = sub_1000A4A20();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v148 = v40;
    if (v69)
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v153 = swift_slowAlloc();
      v166[0] = v153;
      *(_DWORD *)uint64_t v70 = 136315906;
      swift_bridgeObjectRetain();
      v164[0] = sub_10003CFA4(v141, v35, v166);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 12) = 2080;
      swift_bridgeObjectRetain();
      v164[0] = sub_10003CFA4(v142, v40, v166);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 22) = 2080;
      swift_bridgeObjectRetain();
      v164[0] = sub_10003CFA4(v154, v63, v166);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 32) = 2080;
      id v71 = v66;
      id v72 = [v71 description];
      uint64_t v73 = sub_1000A4800();
      unint64_t v75 = v74;

      v164[0] = sub_10003CFA4(v73, v75, v166);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v70, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(NSObject *, uint64_t))(v149 + 8))(v136, v150);
      unint64_t v36 = 0;
      uint64_t v153 = v144;
      unint64_t v154 = v137;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(NSObject *, uint64_t))(v149 + 8))(v57, v150);
      unint64_t v36 = 0;
      uint64_t v153 = v64;
      unint64_t v154 = v137;
    }
    uint64_t v152 = v142;
  }
  else
  {
    uint64_t v41 = (uint64_t)v21;
    uint64_t v42 = v132;
    sub_1000409B0(v132, (uint64_t)v164, &qword_1000CB378);
    uint64_t v148 = v16;
    int v147 = v33;
    if (v165 != 255)
    {
      sub_100092640((uint64_t)v164, (uint64_t)v166);
      uint64_t v43 = v16;
      sub_10003E7A4(v37, v153, v36, v152, v16, v33);
      sub_1000A4440();
      unint64_t v44 = v135;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v42, (void (*)(void, void, void, void, void, void))sub_100093160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v42, (void (*)(void, void, void, void, void, void))sub_100093160);
      os_log_t v45 = sub_1000A4450();
      os_log_type_t v46 = sub_1000A4A20();
      uint64_t v136 = v45;
      int v131 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        v160[0] = v130;
        *(_DWORD *)uint64_t v47 = 136315650;
        swift_bridgeObjectRetain();
        v155[0] = sub_10003CFA4(v141, v35, v160);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v47 + 12) = 2080;
        if (v44) {
          uint64_t v48 = v142;
        }
        else {
          uint64_t v48 = 0;
        }
        uint64_t v142 = v41;
        if (v44) {
          unint64_t v49 = v44;
        }
        else {
          unint64_t v49 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        v155[0] = sub_10003CFA4(v48, v49, v160);
        unint64_t v36 = v151;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 22) = 2080;
        sub_100092640((uint64_t)v166, (uint64_t)v155);
        sub_10003E7A4(v154, v153, v36, v152, v43, v147);
        uint64_t v50 = sub_1000A4810();
        v155[0] = sub_10003CFA4(v50, v51, v160);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        uint64_t v52 = v132;
        sub_100093174(v132, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v52, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        uint64_t v53 = v136;
        _os_log_impl((void *)&_mh_execute_header, v136, (os_log_type_t)v131, "SharingError in %s %s, error: %s", (uint8_t *)v47, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        LOBYTE(v33) = v147;
        sub_100093174(v52, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v142, v150);
      }
      else
      {
        sub_100093174(v42, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100093174(v42, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v42, (void (*)(void, void, void, void, void, void))sub_1000428F4);

        (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v41, v150);
      }
      sub_10003E7A4(v154, v153, v36, v152, v43, v33);
    }
  }
  uint64_t v76 = a11;
  unint64_t v77 = v140 >> 24;
  unint64_t v78 = HIDWORD(v140);
  if (v139) {
    uint64_t v79 = v139;
  }
  else {
    uint64_t v79 = &off_1000C1A98;
  }
  if (!v139) {
    LODWORD(v78) = 0;
  }
  LODWORD(v142) = v78;
  if (!v139) {
    LODWORD(v77) = 0;
  }
  LODWORD(v140) = v77;
  v155[3] = type metadata accessor for SPIAnalyticsEvent();
  v155[4] = (uint64_t)&off_1000C2B58;
  os_log_type_t v80 = sub_1000931B4(v155);
  BOOL v81 = v36;
  if (v146)
  {
    uint64_t v82 = *(void *)(a13 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
    uint64_t v83 = *(void *)(a13 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v84 = (id)v146;
    uint64_t v85 = v82;
    uint64_t v76 = a11;
    unint64_t v86 = sub_10004E490((uint64_t)v84, v85, v83);
    unint64_t v88 = v87;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v86 = 0;
    unint64_t v88 = 0xE000000000000000;
  }
  char v89 = v142;
  char v90 = v140;
  uint64_t v91 = *(void *)(v76 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v92 = *(void *)(v76 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *os_log_type_t v80 = v86;
  v80[1] = v88;
  *((unsigned char *)v80 + 16) = v90;
  *((unsigned char *)v80 + 17) = v89;
  v80[3] = (uint64_t)v79;
  v80[4] = v91;
  uint64_t v94 = v153;
  uint64_t v93 = v154;
  v80[5] = v92;
  v80[6] = v93;
  v80[7] = v94;
  v80[8] = (uint64_t)v81;
  uint64_t v95 = v152;
  uint64_t v96 = v148;
  v80[9] = v152;
  v80[10] = v96;
  unsigned __int8 v97 = v147;
  *((unsigned char *)v80 + 88) = v147;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v155, (uint64_t)&v158, &qword_1000CBAB8);
  v151 = v81;
  if (v159)
  {
    sub_1000930E4(&v158, (uint64_t)v160);
    swift_bridgeObjectRetain();
    sub_100093160(v93, v94, v81, v95, v96, v97);
    unint64_t v98 = v133;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v160, (uint64_t)&v158);
    unint64_t v99 = v145;
    swift_bridgeObjectRetain_n();
    uint64_t v100 = sub_1000A4450();
    os_log_type_t v101 = sub_1000A4A40();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = swift_slowAlloc();
      v156[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v102 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v157 = sub_10003CFA4(v141, v99, v156);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v102 + 12) = 2080;
      sub_100046174(&v158, v159);
      unint64_t v103 = sub_10004248C();
      uint64_t v157 = sub_10003CFA4(v103, v104, v156);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v158);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "Finishing %s, sending event %s", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v158);
    }

    uint64_t v108 = *(void (**)(char *, uint64_t))(v149 + 8);
    v108(v98, v150);
    uint64_t v109 = v138;
    uint64_t v110 = sub_100046174(v160, v161);
    sub_100081C20((uint64_t)v110);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v160, (uint64_t)&v158);
    unint64_t v111 = v144;
    swift_bridgeObjectRetain_n();
    int v112 = (char *)v134;
    uint64_t v113 = sub_1000A4450();
    os_log_type_t v114 = sub_1000A4A40();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v115 = swift_slowAlloc();
      uint64_t v146 = (uint64_t)v108;
      uint64_t v116 = v115;
      uint64_t v142 = swift_slowAlloc();
      uint64_t v157 = v142;
      *(_DWORD *)uint64_t v116 = 136315650;
      uint64_t v117 = *(void *)&v112[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v156[0] = *(void *)&v112[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v156[1] = v117;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v118 = sub_1000A4810();
      v156[0] = sub_10003CFA4(v118, v119, &v157);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v116 + 12) = 2080;
      sub_100046174(&v158, v159);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v120 = sub_1000A4780();
      unint64_t v122 = v121;
      swift_bridgeObjectRelease();
      v156[0] = sub_10003CFA4(v120, v122, &v157);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v158);
      *(_WORD *)(v116 + 22) = 2080;
      swift_bridgeObjectRetain();
      v156[0] = sub_10003CFA4(v137, v111, &v157);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v116, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v146)(v138, v150);
    }
    else
    {

      sub_100041414((uint64_t)&v158);
      swift_bridgeObjectRelease_n();
      v108(v109, v150);
    }
    os_log_type_t v106 = v143;
    unint64_t v107 = v145;
    sub_100046174(v160, v161);
    BOOL v123 = sub_100043358();
    uint64_t v124 = 0x73736563637553;
    if (v123) {
      uint64_t v124 = 0x7272652068746957;
    }
    uint64_t v146 = v124;
    if (v123) {
      unint64_t v105 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v105 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v160);
    uint64_t v96 = v148;
  }
  else
  {
    uint64_t v146 = 0x73736563637553;
    swift_bridgeObjectRetain();
    sub_100093160(v93, v94, v81, v95, v96, v97);
    sub_10000B988((uint64_t)&v158, &qword_1000CBAB8);
    unint64_t v105 = 0xE700000000000000;
    os_log_type_t v106 = v143;
    unint64_t v107 = v145;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v125 = sub_1000A4450();
  os_log_type_t v126 = sub_1000A4A40();
  if (os_log_type_enabled(v125, v126))
  {
    uint64_t v127 = swift_slowAlloc();
    v160[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v127 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v158 = sub_10003CFA4(v141, v107, v160);
    uint64_t v148 = v96;
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v127 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v158 = sub_10003CFA4(v146, v105, v160);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v125, v126, "Finished %s: %s.", (uint8_t *)v127, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v154, v153, v151, v152, v148, v147);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v143, v150);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v154, v153, v151, v152, v96, v147);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v106, v150);
  }
  return sub_10000B988((uint64_t)v155, &qword_1000CBAB8);
}

uint64_t sub_100084474(uint64_t a1, unint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5, void *a6, void *a7, unint64_t a8, _UNKNOWN **a9, unsigned __int8 a10, uint64_t a11)
{
  unint64_t v127 = a8;
  id v119 = a7;
  unint64_t v120 = a4;
  os_log_t v129 = a3;
  uint64_t v126 = a11;
  int v125 = a10;
  uint64_t v124 = a9;
  uint64_t v118 = a5;
  sub_1000409B0(a5, (uint64_t)v148, &qword_1000CB378);
  uint64_t v138 = v148[0];
  uint64_t v133 = (void *)v148[2];
  os_log_t v134 = (os_log_t)v148[3];
  uint64_t v135 = v148[4];
  uint64_t v136 = v148[1];
  int v14 = v149;
  uint64_t v15 = sub_1000A4460();
  uint64_t v139 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  int v131 = (char *)&v116 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  BOOL v123 = (char *)&v116 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v132 = (char *)&v116 - v24;
  __chkstk_darwin(v23);
  unint64_t v121 = (char *)&v116 - v25;
  uint64_t v26 = sub_1000A48D0();
  sub_10003C8F4(v26, v27, a1, a2);
  char v29 = v28;
  uint64_t v30 = v15;
  swift_bridgeObjectRelease();
  uint64_t v140 = v15;
  uint64_t v122 = a1;
  if (v29)
  {
    uint64_t v128 = 0;
    unint64_t v32 = 0xE000000000000000;
    uint64_t v33 = a2;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v128 = sub_1000A4830();
    unint64_t v32 = v31;
    uint64_t v33 = a2;
    uint64_t v30 = v140;
    swift_bridgeObjectRelease();
  }
  unint64_t v34 = v132;
  unint64_t v130 = v32;
  if (a6)
  {
    unint64_t v35 = v120;
    uint64_t v36 = v33;
    if (v120)
    {
      id v37 = a6;
      unint64_t v38 = v35;
    }
    else
    {
      id v58 = a6;
      id v59 = [v58 description];
      os_log_t v129 = (os_log_t)sub_1000A4800();
      unint64_t v61 = v60;

      unint64_t v38 = v61;
    }
    unint64_t v62 = v121;
    swift_bridgeObjectRetain();
    id v63 = [a6 code];
    unint64_t v64 = 0x80000001000ACE30;
    unint64_t v65 = 0x206C6172656E6567;
    if (v63 == (id)12) {
      int v66 = 12;
    }
    else {
      int v66 = 11;
    }
    if (v63 == (id)12) {
      unint64_t v65 = 0xD000000000000018;
    }
    else {
      unint64_t v64 = 0xED0000726F727265;
    }
    if (v63 == (id)10) {
      int v66 = 13;
    }
    int v137 = v66;
    if (v63 == (id)10) {
      unint64_t v67 = 0xD000000000000019;
    }
    else {
      unint64_t v67 = v65;
    }
    uint64_t v138 = v67;
    if (v63 == (id)10) {
      unint64_t v68 = 0x80000001000ACE10;
    }
    else {
      unint64_t v68 = v64;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v69 = a6;
    swift_bridgeObjectRetain_n();
    id v70 = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v71 = sub_1000A4450();
    os_log_type_t v72 = sub_1000A4A20();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v136 = v36;
      uint64_t v74 = v73;
      uint64_t v135 = swift_slowAlloc();
      v152[0] = v135;
      *(_DWORD *)uint64_t v74 = 136315906;
      swift_bridgeObjectRetain();
      v151[0] = sub_10003CFA4(v128, v32, v152);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      os_log_t v134 = v71;
      *(_WORD *)(v74 + 12) = 2080;
      swift_bridgeObjectRetain();
      v151[0] = sub_10003CFA4((uint64_t)v129, v38, v152);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 22) = 2080;
      swift_bridgeObjectRetain();
      v151[0] = sub_10003CFA4(v138, v68, v152);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v74 + 32) = 2080;
      id v75 = v70;
      id v76 = [v75 description];
      uint64_t v77 = sub_1000A4800();
      unint64_t v78 = v38;
      unint64_t v80 = v79;

      v151[0] = sub_10003CFA4(v77, v80, v152);
      unint64_t v32 = v130;
      sub_1000A4BC0();

      unint64_t v38 = v78;
      swift_bridgeObjectRelease();
      os_log_t v81 = v134;
      _os_log_impl((void *)&_mh_execute_header, v134, v72, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v74, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v139 + 8))(v121, v140);
      uint64_t v41 = 0;
      uint64_t v82 = v122;
      uint64_t v33 = v136;
      uint64_t v52 = v136;
      uint64_t v83 = v129;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v139 + 8))(v62, v140);
      uint64_t v41 = 0;
      uint64_t v82 = v122;
      uint64_t v52 = v36;
      uint64_t v83 = v129;
      uint64_t v33 = v36;
    }
    id v84 = v131;
    int v14 = v137;
  }
  else
  {
    id v39 = v18;
    uint64_t v40 = v118;
    sub_1000409B0(v118, (uint64_t)v150, &qword_1000CB378);
    if (v150[40] == 255)
    {
      id v84 = v131;
      unint64_t v38 = v135;
      uint64_t v52 = v136;
      uint64_t v41 = v133;
      uint64_t v83 = v134;
      uint64_t v82 = v138;
      goto LABEL_39;
    }
    sub_100092640((uint64_t)v150, (uint64_t)v151);
    uint64_t v41 = v133;
    sub_10003E7A4(v138, v136, v133, (uint64_t)v134, v135, v14);
    sub_1000A4440();
    unint64_t v42 = v120;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v137 = v14;
    sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_100093160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_100093160);
    uint64_t v43 = sub_1000A4450();
    os_log_type_t v44 = sub_1000A4A20();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      int v117 = v45;
      uint64_t v47 = v46;
      uint64_t v116 = swift_slowAlloc();
      v147[0] = v116;
      *(_DWORD *)uint64_t v47 = 136315650;
      swift_bridgeObjectRetain();
      v152[0] = sub_10003CFA4(v128, v32, v147);
      unint64_t v121 = v39;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2080;
      if (v42) {
        os_log_t v48 = v129;
      }
      else {
        os_log_t v48 = 0;
      }
      os_log_t v129 = v43;
      uint64_t v49 = v33;
      if (v42) {
        unint64_t v50 = v42;
      }
      else {
        unint64_t v50 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v152[0] = sub_10003CFA4((uint64_t)v48, v50, v147);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      uint64_t v33 = v49;
      uint64_t v51 = v140;
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2080;
      sub_100092640((uint64_t)v151, (uint64_t)v152);
      uint64_t v52 = v136;
      sub_10003E7A4(v138, v136, v133, (uint64_t)v134, v135, v137);
      uint64_t v53 = sub_1000A4810();
      uint64_t v54 = v40;
      v152[0] = sub_10003CFA4(v53, v55, v147);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      os_log_t v56 = v129;
      _os_log_impl((void *)&_mh_execute_header, v129, (os_log_type_t)v117, "SharingError in %s %s, error: %s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v41 = v133;
      sub_100093174(v54, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v121, v51);
      uint64_t v57 = v138;
    }
    else
    {
      sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v40, (void (*)(void, void, void, void, void, void))sub_1000428F4);

      (*(void (**)(char *, uint64_t))(v139 + 8))(v39, v30);
      uint64_t v57 = v138;
      uint64_t v52 = v136;
    }
    uint64_t v85 = v33;
    os_log_t v86 = v134;
    unint64_t v38 = v135;
    int v14 = v137;
    sub_10003E7A4(v57, v52, v41, (uint64_t)v134, v135, v137);
    uint64_t v82 = v57;
    uint64_t v83 = v86;
    uint64_t v33 = v85;
    unint64_t v32 = v130;
    id v84 = v131;
  }
  unint64_t v34 = v132;
LABEL_39:
  v152[0] = v82;
  v152[1] = v52;
  v152[2] = (uint64_t)v41;
  v152[3] = (uint64_t)v83;
  os_log_t v134 = v83;
  v152[4] = v38;
  char v153 = v14;
  sub_100063BC8((uint64_t)v152, v127, v124, v126, v147);
  sub_10001F904((uint64_t)v147, (uint64_t)&v143, &qword_1000CBAB8);
  uint64_t v135 = v38;
  uint64_t v136 = v52;
  int v137 = v14;
  uint64_t v133 = v41;
  uint64_t v138 = v82;
  if (v144)
  {
    sub_1000930E4(&v143, (uint64_t)v145);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v145, (uint64_t)&v143);
    swift_bridgeObjectRetain_n();
    unint64_t v87 = v34;
    unint64_t v88 = sub_1000A4450();
    os_log_type_t v89 = sub_1000A4A40();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = swift_slowAlloc();
      v141[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v90 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v142 = (char *)sub_10003CFA4(v128, v32, v141);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v90 + 12) = 2080;
      sub_100046174(&v143, v144);
      unint64_t v91 = sub_10004248C();
      uint64_t v142 = (char *)sub_10003CFA4(v91, v92, v141);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v143);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Finishing %s, sending event %s", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v93 = *(NSObject **)(v139 + 8);
      uint64_t v94 = v132;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v143);

      uint64_t v93 = *(NSObject **)(v139 + 8);
      uint64_t v94 = v87;
    }
    uint64_t v97 = v140;
    ((void (*)(char *, uint64_t))v93)(v94, v140);
    unint64_t v98 = v123;
    unint64_t v99 = sub_100046174(v145, v146);
    sub_100081C20((uint64_t)v99);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v145, (uint64_t)&v143);
    swift_bridgeObjectRetain_n();
    uint64_t v100 = (char *)v119;
    os_log_type_t v101 = sub_1000A4450();
    os_log_type_t v102 = sub_1000A4A40();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v132 = (char *)swift_slowAlloc();
      uint64_t v142 = v132;
      *(_DWORD *)uint64_t v103 = 136315650;
      uint64_t v104 = *(void *)&v100[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v141[0] = *(void *)&v100[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v141[1] = v104;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v105 = sub_1000A4810();
      v141[0] = sub_10003CFA4(v105, v106, (uint64_t *)&v142);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2080;
      sub_100046174(&v143, v144);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v107 = sub_1000A4780();
      os_log_t v129 = v93;
      unint64_t v108 = v33;
      unint64_t v110 = v109;
      swift_bridgeObjectRelease();
      v141[0] = sub_10003CFA4(v107, v110, (uint64_t *)&v142);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v143);
      *(_WORD *)(v103 + 22) = 2080;
      swift_bridgeObjectRetain();
      v141[0] = sub_10003CFA4(v122, v108, (uint64_t *)&v142);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v103, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v129)(v123, v140);
    }
    else
    {

      sub_100041414((uint64_t)&v143);
      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v93)(v98, v97);
    }
    id v84 = v131;
    uint64_t v82 = v138;
    uint64_t v52 = v136;
    sub_100046174(v145, v146);
    BOOL v111 = sub_100043358();
    if (v111) {
      uint64_t v95 = 0x7272652068746957;
    }
    else {
      uint64_t v95 = 0x73736563637553;
    }
    if (v111) {
      unint64_t v96 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v96 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v145);
    unint64_t v32 = v130;
  }
  else
  {
    uint64_t v95 = 0x73736563637553;
    sub_10000B988((uint64_t)&v143, &qword_1000CBAB8);
    unint64_t v96 = 0xE700000000000000;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v112 = sub_1000A4450();
  os_log_type_t v113 = sub_1000A4A40();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v114 = swift_slowAlloc();
    v145[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v114 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v143 = sub_10003CFA4(v128, v32, v145);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v114 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v143 = sub_10003CFA4(v95, v96, v145);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v112, v113, "Finished %s: %s.", (uint8_t *)v114, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v138, v136, v133, (uint64_t)v134, v135, v137);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v131, v140);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v82, v52, v133, (uint64_t)v134, v135, v137);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v84, v140);
  }
  return sub_10000B988((uint64_t)v147, &qword_1000CBAB8);
}

uint64_t sub_1000855E8(uint64_t a1, unint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v132 = a8;
  id v125 = a7;
  os_log_t v134 = a3;
  uint64_t v131 = a9;
  sub_1000409B0(a5, (uint64_t)v152, &qword_1000CB378);
  os_log_t v137 = (os_log_t)v152[1];
  uint64_t v138 = v152[0];
  uint64_t v139 = v152[3];
  uint64_t v140 = (void *)v152[2];
  unint64_t v143 = v152[4];
  int v144 = v153;
  uint64_t v15 = sub_1000A4460();
  uint64_t v141 = *(void *)(v15 - 8);
  uint64_t v142 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  BOOL v123 = &v121[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v121[-v19];
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v130 = &v121[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v124 = &v121[-v24];
  __chkstk_darwin(v23);
  unint64_t v127 = &v121[-v25];
  uint64_t v26 = sub_1000A48D0();
  sub_10003C8F4(v26, v27, a1, a2);
  char v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v129 = a1;
  uint64_t v136 = v20;
  if (v29)
  {
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000A4830();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v33 = v144;
  unint64_t v135 = v32;
  uint64_t v128 = v30;
  unint64_t v126 = a2;
  uint64_t v133 = a10;
  if (a6)
  {
    if (a4)
    {
      id v34 = a6;
      unint64_t v35 = a4;
    }
    else
    {
      id v49 = a6;
      id v50 = [v49 description];
      os_log_t v134 = (os_log_t)sub_1000A4800();
      unint64_t v35 = v51;
    }
    swift_bridgeObjectRetain();
    id v52 = [a6 code];
    unint64_t v53 = 0x80000001000ACE30;
    unint64_t v54 = 0x206C6172656E6567;
    if (v52 == (id)12) {
      int v55 = 12;
    }
    else {
      int v55 = 11;
    }
    if (v52 == (id)12) {
      unint64_t v54 = 0xD000000000000018;
    }
    else {
      unint64_t v53 = 0xED0000726F727265;
    }
    if (v52 == (id)10) {
      int v56 = 13;
    }
    else {
      int v56 = v55;
    }
    if (v52 == (id)10) {
      unint64_t v57 = 0xD000000000000019;
    }
    else {
      unint64_t v57 = v54;
    }
    uint64_t v139 = v57;
    if (v52 == (id)10) {
      unint64_t v58 = 0x80000001000ACE10;
    }
    else {
      unint64_t v58 = v53;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v59 = v127;
    sub_1000A4440();
    id v60 = a6;
    unint64_t v61 = v135;
    swift_bridgeObjectRetain_n();
    id v62 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v63 = a2;
    unint64_t v64 = sub_1000A4450();
    os_log_type_t v65 = sub_1000A4A20();
    LODWORD(v140) = v65;
    BOOL v66 = os_log_type_enabled(v64, v65);
    int v144 = v56;
    unint64_t v143 = v35;
    if (v66)
    {
      uint64_t v67 = swift_slowAlloc();
      os_log_t v137 = v64;
      unint64_t v68 = v61;
      uint64_t v69 = v67;
      uint64_t v138 = swift_slowAlloc();
      v156[0] = v138;
      *(_DWORD *)uint64_t v69 = 136315906;
      swift_bridgeObjectRetain();
      v154[0] = sub_10003CFA4(v30, v68, v156);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 12) = 2080;
      swift_bridgeObjectRetain();
      v154[0] = sub_10003CFA4((uint64_t)v134, v35, v156);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 22) = 2080;
      swift_bridgeObjectRetain();
      v154[0] = sub_10003CFA4((uint64_t)v139, v58, v156);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 32) = 2080;
      id v70 = v63;
      id v71 = v62;
      id v72 = [v71 description];
      uint64_t v73 = sub_1000A4800();
      unint64_t v75 = v74;

      v154[0] = sub_10003CFA4(v73, v75, v156);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      os_log_t v76 = v137;
      _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v140, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v69, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v127, v142);
      uint64_t v77 = 0;
      uint64_t v37 = v129;
      uint64_t v36 = v70;
      os_log_t v78 = v134;
      unint64_t v32 = v68;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v59, v142);
      uint64_t v77 = 0;
      uint64_t v37 = v129;
      uint64_t v36 = v63;
      os_log_t v78 = v134;
      unint64_t v32 = v61;
    }
    goto LABEL_36;
  }
  sub_1000409B0(a5, (uint64_t)v154, &qword_1000CB378);
  if (v155 == 255)
  {
    os_log_t v78 = v139;
    uint64_t v77 = v140;
    uint64_t v36 = v137;
    uint64_t v37 = v138;
LABEL_36:
    uint64_t v80 = v131;
    uint64_t v79 = v132;
    goto LABEL_39;
  }
  sub_100092640((uint64_t)v154, (uint64_t)v156);
  uint64_t v36 = v137;
  uint64_t v37 = v138;
  sub_10003E7A4(v138, (uint64_t)v137, v140, (uint64_t)v139, v143, v33);
  unint64_t v38 = v123;
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_100093160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_100093160);
  id v39 = sub_1000A4450();
  os_log_type_t v40 = sub_1000A4A20();
  int v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = swift_slowAlloc();
    unint64_t v127 = (unsigned char *)swift_slowAlloc();
    v150[0] = (uint64_t)v127;
    *(_DWORD *)uint64_t v42 = 136315650;
    int v122 = v41;
    swift_bridgeObjectRetain();
    v145[0] = sub_10003CFA4(v128, v32, v150);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    if (a4) {
      os_log_t v43 = v134;
    }
    else {
      os_log_t v43 = 0;
    }
    os_log_t v134 = v39;
    uint64_t v44 = (uint64_t)v36;
    if (a4) {
      unint64_t v45 = a4;
    }
    else {
      unint64_t v45 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v145[0] = sub_10003CFA4((uint64_t)v43, v45, v150);
    unint64_t v32 = v135;
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    uint64_t v36 = v44;
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 22) = 2080;
    sub_100092640((uint64_t)v156, (uint64_t)v145);
    sub_10003E7A4(v37, v44, v140, (uint64_t)v139, v143, v144);
    uint64_t v46 = sub_1000A4810();
    v145[0] = sub_10003CFA4(v46, v47, v150);
    unsigned __int8 v33 = v144;
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
    os_log_t v48 = v134;
    _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v122, "SharingError in %s %s, error: %s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v123, v142);
  }
  else
  {
    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
    sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);

    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v38, v142);
  }
  uint64_t v81 = (uint64_t)v139;
  uint64_t v77 = v140;
  sub_10003E7A4(v37, (uint64_t)v36, v140, (uint64_t)v139, v143, v33);
  uint64_t v80 = v131;
  uint64_t v79 = v132;
  os_log_t v78 = (os_log_t)v81;
LABEL_39:
  uint64_t v82 = *(void *)(v79 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
  uint64_t v83 = *(void *)(v79 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName + 8);
  swift_bridgeObjectRetain();
  unint64_t v84 = sub_10004E490(v80, v82, v83);
  uint64_t v86 = v85;
  swift_bridgeObjectRelease();
  uint64_t v145[3] = type metadata accessor for SPIAnalyticsEvent();
  v145[4] = (uint64_t)&off_1000C2B58;
  unint64_t v87 = sub_1000931B4(v145);
  uint64_t v88 = *(void *)(v133 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v89 = *(void *)(v133 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  uint64_t *v87 = v84;
  v87[1] = v86;
  v87[2] = v88;
  v87[3] = v89;
  v87[4] = v37;
  v87[5] = (uint64_t)v36;
  v87[6] = (uint64_t)v77;
  v87[7] = (uint64_t)v78;
  v87[8] = v143;
  *((unsigned char *)v87 + 72) = v144;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v145, (uint64_t)&v148, &qword_1000CBAB8);
  uint64_t v139 = v78;
  uint64_t v140 = v77;
  os_log_t v137 = v36;
  uint64_t v138 = v37;
  if (v149)
  {
    sub_1000930E4(&v148, (uint64_t)v150);
    swift_bridgeObjectRetain();
    sub_100093160(v37, (uint64_t)v36, v77, (uint64_t)v78, v143, v144);
    uint64_t v90 = v124;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v150, (uint64_t)&v148);
    swift_bridgeObjectRetain_n();
    unint64_t v91 = sub_1000A4450();
    os_log_type_t v92 = sub_1000A4A40();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      v146[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v147 = sub_10003CFA4(v128, v32, v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v93 + 12) = 2080;
      sub_100046174(&v148, v149);
      unint64_t v94 = sub_10004248C();
      uint64_t v147 = sub_10003CFA4(v94, v95, v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v148);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Finishing %s, sending event %s", (uint8_t *)v93, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v148);
    }

    unint64_t v96 = *(NSObject **)(v141 + 8);
    ((void (*)(unsigned char *, uint64_t))v96)(v90, v142);
    unint64_t v102 = v126;
    uint64_t v103 = v130;
    uint64_t v104 = sub_100046174(v150, v151);
    sub_100081C20((uint64_t)v104);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v150, (uint64_t)&v148);
    swift_bridgeObjectRetain_n();
    uint64_t v105 = (char *)v125;
    unint64_t v106 = sub_1000A4450();
    os_log_type_t v107 = sub_1000A4A40();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = swift_slowAlloc();
      os_log_t v134 = v96;
      uint64_t v109 = v108;
      uint64_t v133 = swift_slowAlloc();
      uint64_t v147 = v133;
      *(_DWORD *)uint64_t v109 = 136315650;
      uint64_t v110 = *(void *)&v105[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v146[0] = *(void *)&v105[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v146[1] = v110;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v111 = sub_1000A4810();
      v146[0] = sub_10003CFA4(v111, v112, &v147);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2080;
      sub_100046174(&v148, v149);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v113 = sub_1000A4780();
      unint64_t v115 = v114;
      swift_bridgeObjectRelease();
      v146[0] = sub_10003CFA4(v113, v115, &v147);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v148);
      *(_WORD *)(v109 + 22) = 2080;
      swift_bridgeObjectRetain();
      v146[0] = sub_10003CFA4(v129, v102, &v147);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v109, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(unsigned char *, uint64_t))v134)(v130, v142);
    }
    else
    {

      sub_100041414((uint64_t)&v148);
      swift_bridgeObjectRelease_n();
      ((void (*)(unsigned char *, uint64_t))v96)(v103, v142);
    }
    os_log_type_t v101 = v136;
    int v99 = v144;
    uint64_t v77 = v140;
    sub_100046174(v150, v151);
    BOOL v116 = sub_100043358();
    if (v116) {
      uint64_t v97 = 0x7272652068746957;
    }
    else {
      uint64_t v97 = 0x73736563637553;
    }
    if (v116) {
      unint64_t v100 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v100 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v150);
    unint64_t v32 = v135;
  }
  else
  {
    uint64_t v97 = 0x73736563637553;
    swift_bridgeObjectRetain();
    uint64_t v98 = (uint64_t)v78;
    int v99 = v144;
    sub_100093160(v37, (uint64_t)v36, v77, v98, v143, v144);
    sub_10000B988((uint64_t)&v148, &qword_1000CBAB8);
    unint64_t v100 = 0xE700000000000000;
    os_log_type_t v101 = v136;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v117 = sub_1000A4450();
  os_log_type_t v118 = sub_1000A4A40();
  if (os_log_type_enabled(v117, v118))
  {
    uint64_t v119 = swift_slowAlloc();
    v150[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v119 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v148 = sub_10003CFA4(v128, v32, v150);
    int v144 = v99;
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v119 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v148 = sub_10003CFA4(v97, v100, v150);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v117, v118, "Finished %s: %s.", (uint8_t *)v119, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v138, (uint64_t)v137, v140, (uint64_t)v139, v143, v144);
    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v136, v142);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v138, (uint64_t)v137, v77, (uint64_t)v139, v143, v99);
    (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v101, v142);
  }
  return sub_10000B988((uint64_t)v145, &qword_1000CBAB8);
}

uint64_t sub_1000867AC(uint64_t a1, unint64_t a2, void (*a3)(void, void), unint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, void *a9, uint64_t a10, int a11)
{
  uint64_t v127 = a8;
  id v122 = a7;
  unint64_t v130 = a3;
  sub_1000409B0(a5, (uint64_t)v148, &qword_1000CB378);
  uint64_t v138 = v148[1];
  uint64_t v139 = v148[0];
  uint64_t v140 = (void *)v148[2];
  uint64_t v136 = v148[4];
  os_log_t v137 = (void (*)(void, void))v148[3];
  int v16 = v149;
  uint64_t v17 = sub_1000A4460();
  uint64_t v134 = *(void *)(v17 - 8);
  uint64_t v135 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  unint64_t v120 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v131 = (char *)&v117 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v124 = (char *)&v117 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v121 = (char *)&v117 - v25;
  __chkstk_darwin(v24);
  BOOL v123 = (char *)&v117 - v26;
  uint64_t v27 = sub_1000A48D0();
  sub_10003C8F4(v27, v28, a1, a2);
  char v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v128 = a1;
  if (v30)
  {
    uint64_t v129 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v129 = sub_1000A4830();
    unint64_t v32 = v31;
    a1 = v128;
    swift_bridgeObjectRelease();
  }
  unsigned __int8 v33 = a9;
  uint64_t v34 = v136;
  unint64_t v133 = v32;
  uint64_t v125 = a2;
  int v126 = a11;
  if (a6)
  {
    uint64_t v119 = a9;
    if (a4)
    {
      id v35 = a6;
      uint64_t v34 = a4;
    }
    else
    {
      id v50 = a6;
      id v51 = [v50 description];
      unint64_t v130 = (void (*)(void, void))sub_1000A4800();
      uint64_t v34 = v52;
    }
    swift_bridgeObjectRetain();
    id v53 = [a6 code];
    unint64_t v54 = 0x80000001000ACE30;
    unint64_t v55 = 0x206C6172656E6567;
    if (v53 == (id)12) {
      int v56 = 12;
    }
    else {
      int v56 = 11;
    }
    if (v53 == (id)12) {
      unint64_t v55 = 0xD000000000000018;
    }
    else {
      unint64_t v54 = 0xED0000726F727265;
    }
    if (v53 == (id)10) {
      int v56 = 13;
    }
    int v132 = v56;
    if (v53 == (id)10) {
      unint64_t v57 = (void *)0xD000000000000019;
    }
    else {
      unint64_t v57 = (void *)v55;
    }
    uint64_t v140 = v57;
    if (v53 == (id)10) {
      unint64_t v58 = 0x80000001000ACE10;
    }
    else {
      unint64_t v58 = v54;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v59 = v123;
    sub_1000A4440();
    id v60 = a6;
    swift_bridgeObjectRetain_n();
    id v61 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v62 = a2;
    id v63 = sub_1000A4450();
    os_log_type_t v64 = sub_1000A4A20();
    int v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      v152[0] = v139;
      *(_DWORD *)uint64_t v66 = 136315906;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4(v129, v133, v152);
      LODWORD(v138) = v65;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2080;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4((uint64_t)v130, v34, v152);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 22) = 2080;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4((uint64_t)v140, v58, v152);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 32) = 2080;
      id v67 = v61;
      id v68 = [v67 description];
      uint64_t v69 = sub_1000A4800();
      unint64_t v71 = v70;

      v150[0] = sub_10003CFA4(v69, v71, v152);
      unint64_t v32 = v133;
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v138, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v66, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v134 + 8))(v123, v135);
      uint64_t v36 = 0;
      uint64_t v138 = v125;
      uint64_t v139 = v128;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v134 + 8))(v59, v135);
      uint64_t v138 = v62;
      uint64_t v139 = a1;
      uint64_t v36 = 0;
    }
    os_log_t v137 = v130;
    int v16 = v132;
    unsigned __int8 v33 = v119;
  }
  else
  {
    sub_1000409B0(a5, (uint64_t)v150, &qword_1000CB378);
    if (v151 == 255)
    {
      uint64_t v36 = v140;
    }
    else
    {
      sub_100092640((uint64_t)v150, (uint64_t)v152);
      uint64_t v36 = v140;
      sub_10003E7A4(v139, v138, v140, (uint64_t)v137, v34, v16);
      sub_1000A4440();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_100093160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_100093160);
      uint64_t v37 = sub_1000A4450();
      os_log_type_t v38 = sub_1000A4A20();
      LODWORD(v123) = v38;
      int v39 = v16;
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v40 = swift_slowAlloc();
        os_log_t v117 = v37;
        uint64_t v41 = v40;
        uint64_t v118 = swift_slowAlloc();
        v146[0] = v118;
        *(_DWORD *)uint64_t v41 = 136315650;
        swift_bridgeObjectRetain();
        v141[0] = sub_10003CFA4(v129, v32, v146);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 12) = 2080;
        if (a4) {
          uint64_t v42 = v130;
        }
        else {
          uint64_t v42 = 0;
        }
        if (a4) {
          unint64_t v43 = a4;
        }
        else {
          unint64_t v43 = 0xE000000000000000;
        }
        int v132 = v39;
        swift_bridgeObjectRetain();
        v141[0] = sub_10003CFA4((uint64_t)v42, v43, v146);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        uint64_t v34 = v136;
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 22) = 2080;
        sub_100092640((uint64_t)v152, (uint64_t)v141);
        sub_10003E7A4(v139, v138, v36, (uint64_t)v137, v34, v132);
        uint64_t v44 = sub_1000A4810();
        v141[0] = sub_10003CFA4(v44, v45, v146);
        unint64_t v32 = v133;
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        os_log_t v46 = v117;
        _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v123, "SharingError in %s %s, error: %s", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v47 = v138;
        swift_slowDealloc();

        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v120, v135);
        uint64_t v48 = v139;
        uint64_t v49 = (uint64_t)v137;
        int v39 = v132;
      }
      else
      {
        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(a5, (void (*)(void, void, void, void, void, void))sub_1000428F4);

        (*(void (**)(char *, uint64_t))(v134 + 8))(v120, v135);
        uint64_t v47 = v138;
        uint64_t v48 = v139;
        uint64_t v49 = (uint64_t)v137;
      }
      sub_10003E7A4(v48, v47, v36, v49, v34, v39);
      int v16 = v39;
    }
  }
  uint64_t v140 = v36;
  v141[3] = type metadata accessor for SPIAnalyticsEvent();
  v141[4] = (uint64_t)&off_1000C2B58;
  id v72 = sub_1000931B4(v141);
  if (v33)
  {
    int v73 = v16;
    uint64_t v74 = *(void *)(a10 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName);
    uint64_t v75 = *(void *)(a10 + OBJC_IVAR____TtC13SPIHelper_iOS16ModelDelegateSPI_appName + 8);
    swift_bridgeObjectRetain();
    id v76 = v33;
    uint64_t v77 = v74;
    int v16 = v73;
    unint64_t v78 = sub_10004E490((uint64_t)v76, v77, v75);
    unint64_t v80 = v79;
    swift_bridgeObjectRelease();

    unint64_t v32 = v133;
  }
  else
  {
    unint64_t v78 = 0;
    unint64_t v80 = 0xE000000000000000;
  }
  uint64_t v81 = (uint64_t)v137;
  uint64_t v82 = v138;
  uint64_t v83 = *(void *)(v127 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v84 = *(void *)(v127 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *id v72 = v78;
  v72[1] = v80;
  v72[2] = v83;
  v72[3] = v84;
  uint64_t v86 = v139;
  uint64_t v85 = v140;
  v72[4] = v139;
  v72[5] = v82;
  v72[6] = (uint64_t)v85;
  v72[7] = v81;
  v72[8] = v34;
  *((unsigned char *)v72 + 72) = v16;
  uint64_t v87 = v81;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v141, (uint64_t)&v144, &qword_1000CBAB8);
  uint64_t v136 = v34;
  int v132 = v16;
  if (v145)
  {
    sub_1000930E4(&v144, (uint64_t)v146);
    swift_bridgeObjectRetain();
    sub_100093160(v86, v82, v85, v87, v34, v16);
    uint64_t v88 = v121;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v146, (uint64_t)&v144);
    swift_bridgeObjectRetain_n();
    uint64_t v89 = sub_1000A4450();
    os_log_type_t v90 = sub_1000A4A40();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = swift_slowAlloc();
      v142[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v91 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v143 = sub_10003CFA4(v129, v32, v142);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v91 + 12) = 2080;
      sub_100046174(&v144, v145);
      unint64_t v92 = sub_10004248C();
      uint64_t v143 = sub_10003CFA4(v92, v93, v142);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v144);
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "Finishing %s, sending event %s", (uint8_t *)v91, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v144);
    }

    uint64_t v97 = *(void (**)(char *, uint64_t))(v134 + 8);
    v97(v88, v135);
    unint64_t v98 = v125;
    int v99 = sub_100046174(v146, v147);
    sub_100081C20((uint64_t)v99);
    unint64_t v100 = v124;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v146, (uint64_t)&v144);
    swift_bridgeObjectRetain_n();
    os_log_type_t v101 = (char *)v122;
    unint64_t v102 = sub_1000A4450();
    os_log_type_t v103 = sub_1000A4A40();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      unint64_t v130 = (void (*)(void, void))v97;
      uint64_t v105 = v104;
      uint64_t v127 = swift_slowAlloc();
      uint64_t v143 = v127;
      *(_DWORD *)uint64_t v105 = 136315650;
      uint64_t v106 = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v142[0] = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v142[1] = v106;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v107 = sub_1000A4810();
      v142[0] = sub_10003CFA4(v107, v108, &v143);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      sub_100046174(&v144, v145);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v109 = sub_1000A4780();
      unint64_t v111 = v110;
      swift_bridgeObjectRelease();
      v142[0] = sub_10003CFA4(v109, v111, &v143);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v144);
      *(_WORD *)(v105 + 22) = 2080;
      swift_bridgeObjectRetain();
      v142[0] = sub_10003CFA4(v128, v98, &v143);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v105, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v130(v124, v135);
    }
    else
    {

      sub_100041414((uint64_t)&v144);
      swift_bridgeObjectRelease_n();
      v97(v100, v135);
    }
    unint64_t v96 = v131;
    LOBYTE(v16) = v132;
    unint64_t v32 = v133;
    sub_100046174(v146, v147);
    BOOL v112 = sub_100043358();
    if (v112) {
      uint64_t v94 = 0x7272652068746957;
    }
    else {
      uint64_t v94 = 0x73736563637553;
    }
    if (v112) {
      unint64_t v95 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v95 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v146);
  }
  else
  {
    uint64_t v94 = 0x73736563637553;
    swift_bridgeObjectRetain();
    sub_100093160(v86, v82, v85, v87, v34, v16);
    sub_10000B988((uint64_t)&v144, &qword_1000CBAB8);
    unint64_t v95 = 0xE700000000000000;
    unint64_t v96 = v131;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v113 = sub_1000A4450();
  os_log_type_t v114 = sub_1000A4A40();
  if (os_log_type_enabled(v113, v114))
  {
    uint64_t v115 = swift_slowAlloc();
    v146[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v115 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v144 = sub_10003CFA4(v129, v32, v146);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v115 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v144 = sub_10003CFA4(v94, v95, v146);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v113, v114, "Finished %s: %s.", (uint8_t *)v115, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v139, v138, v140, (uint64_t)v137, v136, v132);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v131, v135);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v139, v138, v140, (uint64_t)v137, v136, v16);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v96, v135);
  }
  return sub_10000B988((uint64_t)v141, &qword_1000CBAB8);
}

uint64_t sub_100087988(uint64_t a1, unint64_t a2, void (*a3)(void, void), unint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v136 = a8;
  id v130 = a7;
  unint64_t v131 = a4;
  uint64_t v139 = a3;
  uint64_t v128 = a5;
  sub_1000409B0(a5, (uint64_t)v156, &qword_1000CB378);
  uint64_t v141 = v156[1];
  os_log_t v142 = (os_log_t)v156[0];
  long long v148 = (void *)v156[2];
  unint64_t v12 = v156[4];
  long long v144 = (void (*)(void, void))v156[3];
  LODWORD(v145) = v157;
  uint64_t v13 = sub_1000A4460();
  uint64_t v146 = *(void *)(v13 - 8);
  uint64_t v147 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  int v16 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v134 = (char *)&v124 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v133 = (char *)&v124 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v129 = (char *)&v124 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v124 - v23;
  uint64_t v25 = sub_1000A48D0();
  sub_10003C8F4(v25, v26, a1, a2);
  char v28 = v27;
  swift_bridgeObjectRelease();
  unint64_t v140 = a2;
  int v132 = a1;
  if (v28)
  {
    uint64_t v137 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v137 = sub_1000A4830();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
  }
  unint64_t v31 = v148;
  unint64_t v143 = v30;
  uint64_t v135 = a9;
  if (a6)
  {
    unint64_t v32 = v131;
    if (v131)
    {
      id v33 = a6;
      unint64_t v12 = v32;
    }
    else
    {
      id v53 = a6;
      id v54 = [v53 description];
      uint64_t v139 = (void (*)(void, void))sub_1000A4800();
      unint64_t v12 = v55;
    }
    uint64_t v56 = (uint64_t)v24;
    swift_bridgeObjectRetain();
    id v57 = [a6 code];
    unint64_t v58 = 0x80000001000ACE30;
    unint64_t v59 = 0x206C6172656E6567;
    if (v57 == (id)12) {
      int v60 = 12;
    }
    else {
      int v60 = 11;
    }
    if (v57 == (id)12) {
      unint64_t v59 = 0xD000000000000018;
    }
    else {
      unint64_t v58 = 0xED0000726F727265;
    }
    if (v57 == (id)10) {
      int v61 = 13;
    }
    else {
      int v61 = v60;
    }
    if (v57 == (id)10) {
      uint64_t v62 = (void *)0xD000000000000019;
    }
    else {
      uint64_t v62 = (void *)v59;
    }
    long long v148 = v62;
    if (v57 == (id)10) {
      unint64_t v63 = 0x80000001000ACE10;
    }
    else {
      unint64_t v63 = v58;
    }
    uint64_t v64 = v140;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v65 = a6;
    swift_bridgeObjectRetain_n();
    id v66 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v67 = sub_1000A4450();
    os_log_type_t v68 = sub_1000A4A20();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      v160[0] = v145;
      *(_DWORD *)uint64_t v69 = 136315906;
      swift_bridgeObjectRetain();
      v158[0] = sub_10003CFA4(v137, v143, v160);
      os_log_t v142 = v67;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      long long v144 = (void (*)(void, void))v56;
      *(_WORD *)(v69 + 12) = 2080;
      swift_bridgeObjectRetain();
      v158[0] = sub_10003CFA4((uint64_t)v139, v12, v160);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 22) = 2080;
      swift_bridgeObjectRetain();
      v158[0] = sub_10003CFA4((uint64_t)v148, v63, v160);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 32) = 2080;
      long long v148 = (void *)(v69 + 34);
      id v70 = v66;
      id v71 = [v70 description];
      uint64_t v72 = sub_1000A4800();
      os_log_type_t v73 = v68;
      int v74 = v61;
      unint64_t v76 = v75;

      v158[0] = sub_10003CFA4(v72, v76, v160);
      sub_1000A4BC0();

      int v48 = v74;
      swift_bridgeObjectRelease();
      os_log_t v77 = v142;
      _os_log_impl((void *)&_mh_execute_header, v142, v73, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v69, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v146 + 8))((uint64_t)v144, v147);
      long long v148 = 0;
      os_log_type_t v38 = v132;
      uint64_t v39 = v140;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v56, v147);
      long long v148 = 0;
      os_log_type_t v38 = v132;
      uint64_t v39 = v64;
      int v48 = v61;
    }
    uint64_t v52 = v139;
  }
  else
  {
    uint64_t v34 = (void (*)(void, void))v16;
    uint64_t v35 = v128;
    sub_1000409B0(v128, (uint64_t)v158, &qword_1000CB378);
    if (v159 == 255)
    {
      int v48 = v145;
      uint64_t v39 = v141;
      os_log_type_t v38 = v142;
      uint64_t v52 = v144;
    }
    else
    {
      sub_100092640((uint64_t)v158, (uint64_t)v160);
      uint64_t v36 = v31;
      unint64_t v37 = v30;
      uint64_t v39 = v141;
      os_log_type_t v38 = v142;
      sub_10003E7A4((uint64_t)v142, v141, v36, (uint64_t)v144, v12, v145);
      sub_1000A4440();
      unint64_t v40 = v131;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_100093160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_100093160);
      uint64_t v41 = sub_1000A4450();
      os_log_type_t v42 = sub_1000A4A20();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        int v127 = v43;
        uint64_t v45 = v44;
        uint64_t v126 = swift_slowAlloc();
        v154[0] = v126;
        *(_DWORD *)uint64_t v45 = 136315650;
        os_log_t v125 = v41;
        swift_bridgeObjectRetain();
        v149[0] = sub_10003CFA4(v137, v37, v154);
        unint64_t v138 = v12;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        if (v40) {
          os_log_t v46 = v139;
        }
        else {
          os_log_t v46 = 0;
        }
        uint64_t v139 = v34;
        if (v40) {
          unint64_t v47 = v40;
        }
        else {
          unint64_t v47 = 0xE000000000000000;
        }
        uint64_t v124 = v45 + 14;
        swift_bridgeObjectRetain();
        v149[0] = sub_10003CFA4((uint64_t)v46, v47, v154);
        unint64_t v12 = v138;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 22) = 2080;
        sub_100092640((uint64_t)v160, (uint64_t)v149);
        int v48 = v145;
        sub_10003E7A4((uint64_t)v38, v39, v148, (uint64_t)v144, v12, v145);
        uint64_t v49 = sub_1000A4810();
        v149[0] = sub_10003CFA4(v49, v50, v154);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        os_log_t v51 = v125;
        _os_log_impl((void *)&_mh_execute_header, v125, (os_log_type_t)v127, "SharingError in %s %s, error: %s", (uint8_t *)v45, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        (*(void (**)(void, uint64_t))(v146 + 8))(v139, v147);
        uint64_t v52 = v144;
      }
      else
      {
        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v35, (void (*)(void, void, void, void, void, void))sub_1000428F4);

        (*(void (**)(void, uint64_t))(v146 + 8))(v34, v147);
        uint64_t v52 = v144;
        int v48 = v145;
      }
      sub_10003E7A4((uint64_t)v38, v39, v148, (uint64_t)v52, v12, v48);
    }
  }
  uint64_t v78 = v136;
  v149[3] = type metadata accessor for SPIAnalyticsEvent();
  v149[4] = (uint64_t)&off_1000C2B58;
  unint64_t v79 = sub_1000931B4(v149);
  swift_beginAccess();
  uint64_t v80 = *(void *)(v78 + 16);
  uint64_t v81 = *(void *)(v78 + 24);
  uint64_t v82 = *(void *)(v135 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v83 = *(void *)(v135 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  *unint64_t v79 = v80;
  v79[1] = v81;
  v79[2] = v82;
  v79[3] = v83;
  v79[4] = (uint64_t)v38;
  v79[5] = v39;
  v79[6] = (uint64_t)v148;
  v79[7] = (uint64_t)v52;
  v79[8] = v12;
  *((unsigned char *)v79 + 72) = v48;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v149, (uint64_t)&v152, &qword_1000CBAB8);
  unint64_t v138 = v12;
  LODWORD(v145) = v48;
  uint64_t v141 = v39;
  os_log_t v142 = v38;
  long long v144 = v52;
  if (v153)
  {
    sub_1000930E4(&v152, (uint64_t)v154);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093160((uint64_t)v38, v39, v148, (uint64_t)v52, v12, v48);
    uint64_t v84 = v129;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v154, (uint64_t)&v152);
    unint64_t v85 = v143;
    swift_bridgeObjectRetain_n();
    uint64_t v86 = sub_1000A4450();
    os_log_type_t v87 = sub_1000A4A40();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      v150[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v151 = sub_10003CFA4(v137, v85, v150);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v88 + 12) = 2080;
      sub_100046174(&v152, v153);
      unint64_t v89 = sub_10004248C();
      uint64_t v151 = sub_10003CFA4(v89, v90, v150);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v152);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Finishing %s, sending event %s", (uint8_t *)v88, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v152);
    }

    uint64_t v91 = *(void (**)(char *, uint64_t))(v146 + 8);
    v91(v84, v147);
    unint64_t v98 = v133;
    int v99 = sub_100046174(v154, v155);
    sub_100081C20((uint64_t)v99);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v154, (uint64_t)&v152);
    unint64_t v100 = v140;
    swift_bridgeObjectRetain_n();
    os_log_type_t v101 = (char *)v130;
    unint64_t v102 = sub_1000A4450();
    os_log_type_t v103 = sub_1000A4A40();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v139 = (void (*)(void, void))v91;
      uint64_t v105 = v104;
      uint64_t v136 = swift_slowAlloc();
      uint64_t v151 = v136;
      *(_DWORD *)uint64_t v105 = 136315650;
      uint64_t v106 = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v150[0] = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v150[1] = v106;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v107 = sub_1000A4810();
      v150[0] = sub_10003CFA4(v107, v108, &v151);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      sub_100046174(&v152, v153);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v109 = sub_1000A4780();
      unint64_t v111 = v110;
      swift_bridgeObjectRelease();
      v150[0] = sub_10003CFA4(v109, v111, &v151);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v152);
      *(_WORD *)(v105 + 22) = 2080;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4((uint64_t)v132, v100, &v151);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v105, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v139(v133, v147);
    }
    else
    {

      sub_100041414((uint64_t)&v152);
      swift_bridgeObjectRelease_n();
      v91(v98, v147);
    }
    uint64_t v94 = v134;
    unsigned __int8 v97 = v145;
    unint64_t v96 = v143;
    sub_100046174(v154, v155);
    BOOL v112 = sub_100043358();
    if (v112) {
      uint64_t v92 = 0x7272652068746957;
    }
    else {
      uint64_t v92 = 0x73736563637553;
    }
    if (v112) {
      unint64_t v93 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v93 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v154);
    os_log_t v95 = v142;
  }
  else
  {
    uint64_t v92 = 0x73736563637553;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093160((uint64_t)v38, v39, v148, (uint64_t)v52, v12, v48);
    sub_10000B988((uint64_t)&v152, &qword_1000CBAB8);
    unint64_t v93 = 0xE700000000000000;
    uint64_t v94 = v134;
    os_log_t v95 = v38;
    unint64_t v96 = v143;
    unsigned __int8 v97 = v48;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v113 = sub_1000A4450();
  os_log_type_t v114 = sub_1000A4A40();
  if (os_log_type_enabled(v113, v114))
  {
    uint64_t v115 = swift_slowAlloc();
    unint64_t v140 = v92;
    uint64_t v116 = v115;
    v154[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v152 = sub_10003CFA4(v137, v96, v154);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v116 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v152 = sub_10003CFA4(v140, v93, v154);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v113, v114, "Finished %s: %s.", (uint8_t *)v116, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v118 = v141;
    os_log_t v117 = v142;
    uint64_t v119 = v148;
    uint64_t v120 = (uint64_t)v144;
    uint64_t v121 = v138;
    unsigned __int8 v122 = v145;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    os_log_t v117 = v95;
    uint64_t v118 = v141;
    uint64_t v119 = v148;
    uint64_t v120 = (uint64_t)v144;
    uint64_t v121 = v138;
    unsigned __int8 v122 = v97;
  }
  sub_1000428F4((uint64_t)v117, v118, v119, v120, v121, v122);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v94, v147);
  return sub_10000B988((uint64_t)v149, &qword_1000CBAB8);
}

uint64_t sub_100088B5C(uint64_t a1, unint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v126 = a8;
  id v119 = a7;
  unint64_t v120 = a4;
  os_log_t v128 = a3;
  uint64_t v125 = a10;
  uint64_t v124 = a9;
  uint64_t v118 = a5;
  sub_1000409B0(a5, (uint64_t)v147, &qword_1000CB378);
  uint64_t v137 = v147[0];
  int v132 = (void *)v147[2];
  os_log_t v133 = (os_log_t)v147[3];
  uint64_t v134 = v147[4];
  uint64_t v135 = v147[1];
  int v13 = v148;
  uint64_t v14 = sub_1000A4460();
  uint64_t v138 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  id v130 = (char *)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  BOOL v123 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v131 = (char *)&v115 - v23;
  __chkstk_darwin(v22);
  uint64_t v121 = (char *)&v115 - v24;
  uint64_t v25 = sub_1000A48D0();
  sub_10003C8F4(v25, v26, a1, a2);
  char v28 = v27;
  uint64_t v29 = v14;
  swift_bridgeObjectRelease();
  uint64_t v139 = v14;
  uint64_t v122 = a1;
  if (v28)
  {
    uint64_t v127 = 0;
    unint64_t v31 = 0xE000000000000000;
    uint64_t v32 = a2;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v127 = sub_1000A4830();
    unint64_t v31 = v30;
    uint64_t v32 = a2;
    uint64_t v29 = v139;
    swift_bridgeObjectRelease();
  }
  id v33 = v131;
  unint64_t v129 = v31;
  if (a6)
  {
    unint64_t v34 = v120;
    uint64_t v35 = v32;
    if (v120)
    {
      id v36 = a6;
      unint64_t v37 = v34;
    }
    else
    {
      id v57 = a6;
      id v58 = [v57 description];
      os_log_t v128 = (os_log_t)sub_1000A4800();
      unint64_t v60 = v59;

      unint64_t v37 = v60;
    }
    int v61 = v121;
    swift_bridgeObjectRetain();
    id v62 = [a6 code];
    unint64_t v63 = 0x80000001000ACE30;
    unint64_t v64 = 0x206C6172656E6567;
    if (v62 == (id)12) {
      int v65 = 12;
    }
    else {
      int v65 = 11;
    }
    if (v62 == (id)12) {
      unint64_t v64 = 0xD000000000000018;
    }
    else {
      unint64_t v63 = 0xED0000726F727265;
    }
    if (v62 == (id)10) {
      int v65 = 13;
    }
    int v136 = v65;
    if (v62 == (id)10) {
      unint64_t v66 = 0xD000000000000019;
    }
    else {
      unint64_t v66 = v64;
    }
    uint64_t v137 = v66;
    if (v62 == (id)10) {
      unint64_t v67 = 0x80000001000ACE10;
    }
    else {
      unint64_t v67 = v63;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v68 = a6;
    swift_bridgeObjectRetain_n();
    id v69 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v70 = sub_1000A4450();
    os_log_type_t v71 = sub_1000A4A20();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v135 = v35;
      uint64_t v73 = v72;
      uint64_t v134 = swift_slowAlloc();
      v151[0] = v134;
      *(_DWORD *)uint64_t v73 = 136315906;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4(v127, v31, v151);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      os_log_t v133 = v70;
      *(_WORD *)(v73 + 12) = 2080;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4((uint64_t)v128, v37, v151);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v73 + 22) = 2080;
      swift_bridgeObjectRetain();
      v150[0] = sub_10003CFA4(v137, v67, v151);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v73 + 32) = 2080;
      id v74 = v69;
      id v75 = [v74 description];
      uint64_t v76 = sub_1000A4800();
      unint64_t v77 = v37;
      unint64_t v79 = v78;

      v150[0] = sub_10003CFA4(v76, v79, v151);
      unint64_t v31 = v129;
      sub_1000A4BC0();

      unint64_t v37 = v77;
      swift_bridgeObjectRelease();
      os_log_t v80 = v133;
      _os_log_impl((void *)&_mh_execute_header, v133, v71, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v73, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v138 + 8))(v121, v139);
      unint64_t v40 = 0;
      uint64_t v81 = v122;
      uint64_t v32 = v135;
      uint64_t v51 = v135;
      uint64_t v82 = v128;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v138 + 8))(v61, v139);
      unint64_t v40 = 0;
      uint64_t v81 = v122;
      uint64_t v51 = v35;
      uint64_t v82 = v128;
      uint64_t v32 = v35;
    }
    uint64_t v83 = v130;
    int v13 = v136;
  }
  else
  {
    os_log_type_t v38 = v17;
    uint64_t v39 = v118;
    sub_1000409B0(v118, (uint64_t)v149, &qword_1000CB378);
    if (v149[40] == 255)
    {
      uint64_t v83 = v130;
      unint64_t v37 = v134;
      uint64_t v51 = v135;
      unint64_t v40 = v132;
      uint64_t v82 = v133;
      uint64_t v81 = v137;
      goto LABEL_39;
    }
    sub_100092640((uint64_t)v149, (uint64_t)v150);
    unint64_t v40 = v132;
    sub_10003E7A4(v137, v135, v132, (uint64_t)v133, v134, v13);
    sub_1000A4440();
    unint64_t v41 = v120;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v136 = v13;
    sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_100093160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_100093160);
    os_log_type_t v42 = sub_1000A4450();
    os_log_type_t v43 = sub_1000A4A20();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      int v117 = v44;
      uint64_t v46 = v45;
      uint64_t v116 = swift_slowAlloc();
      v146[0] = v116;
      *(_DWORD *)uint64_t v46 = 136315650;
      swift_bridgeObjectRetain();
      v151[0] = sub_10003CFA4(v127, v31, v146);
      uint64_t v121 = v38;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      if (v41) {
        os_log_t v47 = v128;
      }
      else {
        os_log_t v47 = 0;
      }
      os_log_t v128 = v42;
      uint64_t v48 = v32;
      if (v41) {
        unint64_t v49 = v41;
      }
      else {
        unint64_t v49 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v151[0] = sub_10003CFA4((uint64_t)v47, v49, v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      uint64_t v32 = v48;
      uint64_t v50 = v139;
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 22) = 2080;
      sub_100092640((uint64_t)v150, (uint64_t)v151);
      uint64_t v51 = v135;
      sub_10003E7A4(v137, v135, v132, (uint64_t)v133, v134, v136);
      uint64_t v52 = sub_1000A4810();
      uint64_t v53 = v39;
      v151[0] = sub_10003CFA4(v52, v54, v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      os_log_t v55 = v128;
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v117, "SharingError in %s %s, error: %s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v40 = v132;
      sub_100093174(v53, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v121, v50);
      uint64_t v56 = v137;
    }
    else
    {
      sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v39, (void (*)(void, void, void, void, void, void))sub_1000428F4);

      (*(void (**)(char *, uint64_t))(v138 + 8))(v38, v29);
      uint64_t v56 = v137;
      uint64_t v51 = v135;
    }
    uint64_t v84 = v32;
    os_log_t v85 = v133;
    unint64_t v37 = v134;
    int v13 = v136;
    sub_10003E7A4(v56, v51, v40, (uint64_t)v133, v134, v136);
    uint64_t v81 = v56;
    uint64_t v82 = v85;
    uint64_t v32 = v84;
    unint64_t v31 = v129;
    uint64_t v83 = v130;
  }
  id v33 = v131;
LABEL_39:
  v151[0] = v81;
  v151[1] = v51;
  v151[2] = (uint64_t)v40;
  v151[3] = (uint64_t)v82;
  os_log_t v133 = v82;
  v151[4] = v37;
  char v152 = v13;
  sub_10006C8B0((uint64_t)v151, v126, v124, v125, v146);
  sub_10001F904((uint64_t)v146, (uint64_t)&v142, &qword_1000CBAB8);
  uint64_t v134 = v37;
  uint64_t v135 = v51;
  int v136 = v13;
  int v132 = v40;
  uint64_t v137 = v81;
  if (v143)
  {
    sub_1000930E4(&v142, (uint64_t)v144);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v144, (uint64_t)&v142);
    swift_bridgeObjectRetain_n();
    uint64_t v86 = v33;
    os_log_type_t v87 = sub_1000A4450();
    os_log_type_t v88 = sub_1000A4A40();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      v140[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v141 = (char *)sub_10003CFA4(v127, v31, v140);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v89 + 12) = 2080;
      sub_100046174(&v142, v143);
      unint64_t v90 = sub_10004248C();
      uint64_t v141 = (char *)sub_10003CFA4(v90, v91, v140);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v142);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Finishing %s, sending event %s", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v92 = *(NSObject **)(v138 + 8);
      unint64_t v93 = v131;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v142);

      uint64_t v92 = *(NSObject **)(v138 + 8);
      unint64_t v93 = v86;
    }
    uint64_t v96 = v139;
    ((void (*)(char *, uint64_t))v92)(v93, v139);
    unsigned __int8 v97 = v123;
    unint64_t v98 = sub_100046174(v144, v145);
    sub_100081C20((uint64_t)v98);
    sub_1000A4440();
    sub_1000930FC((uint64_t)v144, (uint64_t)&v142);
    swift_bridgeObjectRetain_n();
    int v99 = (char *)v119;
    unint64_t v100 = sub_1000A4450();
    os_log_type_t v101 = sub_1000A4A40();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = swift_slowAlloc();
      unint64_t v131 = (char *)swift_slowAlloc();
      uint64_t v141 = v131;
      *(_DWORD *)uint64_t v102 = 136315650;
      uint64_t v103 = *(void *)&v99[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v140[0] = *(void *)&v99[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v140[1] = v103;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v104 = sub_1000A4810();
      v140[0] = sub_10003CFA4(v104, v105, (uint64_t *)&v141);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 12) = 2080;
      sub_100046174(&v142, v143);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v106 = sub_1000A4780();
      os_log_t v128 = v92;
      unint64_t v107 = v32;
      unint64_t v109 = v108;
      swift_bridgeObjectRelease();
      v140[0] = sub_10003CFA4(v106, v109, (uint64_t *)&v141);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v142);
      *(_WORD *)(v102 + 22) = 2080;
      swift_bridgeObjectRetain();
      v140[0] = sub_10003CFA4(v122, v107, (uint64_t *)&v141);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v102, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v128)(v123, v139);
    }
    else
    {

      sub_100041414((uint64_t)&v142);
      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v92)(v97, v96);
    }
    uint64_t v83 = v130;
    uint64_t v81 = v137;
    uint64_t v51 = v135;
    sub_100046174(v144, v145);
    BOOL v110 = sub_100043358();
    if (v110) {
      uint64_t v94 = 0x7272652068746957;
    }
    else {
      uint64_t v94 = 0x73736563637553;
    }
    if (v110) {
      unint64_t v95 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v95 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v144);
    unint64_t v31 = v129;
  }
  else
  {
    uint64_t v94 = 0x73736563637553;
    sub_10000B988((uint64_t)&v142, &qword_1000CBAB8);
    unint64_t v95 = 0xE700000000000000;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v111 = sub_1000A4450();
  os_log_type_t v112 = sub_1000A4A40();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = swift_slowAlloc();
    v144[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v113 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v142 = sub_10003CFA4(v127, v31, v144);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v113 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v142 = sub_10003CFA4(v94, v95, v144);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v111, v112, "Finished %s: %s.", (uint8_t *)v113, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v137, v135, v132, (uint64_t)v133, v134, v136);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v130, v139);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v81, v51, v132, (uint64_t)v133, v134, v136);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v83, v139);
  }
  return sub_10000B988((uint64_t)v146, &qword_1000CBAB8);
}

uint64_t sub_100089CC4(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  unint64_t v131 = a8;
  uint64_t v132 = a3;
  id v124 = a7;
  uint64_t v126 = a4;
  sub_1000409B0(a5, (uint64_t)v151, &qword_1000CB378);
  uint64_t v139 = v151[1];
  unint64_t v140 = (void *)v151[2];
  uint64_t v138 = v151[3];
  uint64_t v136 = v151[0];
  os_log_t v137 = (os_log_t)v151[4];
  int v143 = v152;
  uint64_t v14 = sub_1000A4460();
  uint64_t v141 = *(void *)(v14 - 8);
  uint64_t v142 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v122 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v118 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v127 = (char *)&v118 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  BOOL v123 = (char *)&v118 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v118 - v24;
  uint64_t v26 = sub_1000A48D0();
  sub_10003C8F4(v26, v27, a1, a2);
  char v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v135 = a2;
  uint64_t v128 = a1;
  os_log_t v133 = v19;
  if (v29)
  {
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000A4830();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = v136;
  unint64_t v134 = v32;
  uint64_t v125 = v30;
  uint64_t v129 = a10;
  uint64_t v130 = a9;
  if (a6)
  {
    unint64_t v34 = v126;
    if (v126)
    {
      id v35 = a6;
      id v36 = v34;
    }
    else
    {
      id v52 = a6;
      id v53 = [v52 description];
      uint64_t v132 = sub_1000A4800();
      id v36 = v54;
    }
    os_log_t v55 = v25;
    swift_bridgeObjectRetain();
    id v56 = [a6 code];
    unint64_t v57 = 0x80000001000ACE30;
    unint64_t v58 = 0x206C6172656E6567;
    if (v56 == (id)12) {
      int v59 = 12;
    }
    else {
      int v59 = 11;
    }
    if (v56 == (id)12) {
      unint64_t v58 = 0xD000000000000018;
    }
    else {
      unint64_t v57 = 0xED0000726F727265;
    }
    if (v56 == (id)10) {
      int v60 = 13;
    }
    else {
      int v60 = v59;
    }
    if (v56 == (id)10) {
      int v61 = (void *)0xD000000000000019;
    }
    else {
      int v61 = (void *)v58;
    }
    unint64_t v140 = v61;
    if (v56 == (id)10) {
      unint64_t v62 = 0x80000001000ACE10;
    }
    else {
      unint64_t v62 = v57;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v63 = a6;
    swift_bridgeObjectRetain_n();
    id v64 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v65 = v55;
    unint64_t v66 = sub_1000A4450();
    os_log_type_t v67 = sub_1000A4A20();
    int v68 = v67;
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v69 = swift_slowAlloc();
      LODWORD(v138) = v68;
      uint64_t v70 = v69;
      uint64_t v139 = swift_slowAlloc();
      v155[0] = v139;
      *(_DWORD *)uint64_t v70 = 136315906;
      os_log_t v137 = v66;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4(v30, v32, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      int v143 = v60;
      *(_WORD *)(v70 + 12) = 2080;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4(v132, (unint64_t)v36, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 22) = 2080;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4((uint64_t)v140, v62, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 32) = 2080;
      id v71 = v64;
      id v72 = [v71 description];
      uint64_t v73 = v36;
      uint64_t v74 = sub_1000A4800();
      unint64_t v76 = v75;

      uint64_t v77 = v74;
      id v36 = v73;
      v153[0] = sub_10003CFA4(v77, v76, v155);
      sub_1000A4BC0();

      int v60 = v143;
      swift_bridgeObjectRelease();
      os_log_t v78 = v137;
      _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v138, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v70, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v141 + 8))(v65, v142);
    os_log_t v47 = 0;
    uint64_t v33 = v128;
    uint64_t v38 = v135;
    uint64_t v48 = v132;
  }
  else
  {
    uint64_t v37 = a5;
    sub_1000409B0(a5, (uint64_t)v153, &qword_1000CB378);
    if (v154 == 255)
    {
      id v36 = v137;
      uint64_t v48 = v138;
      int v60 = v143;
      uint64_t v38 = v139;
      os_log_t v47 = v140;
    }
    else
    {
      sub_100092640((uint64_t)v153, (uint64_t)v155);
      uint64_t v38 = v139;
      sub_10003E7A4(v33, v139, v140, v138, (uint64_t)v137, v143);
      uint64_t v39 = v122;
      sub_1000A4440();
      unint64_t v40 = (unint64_t)v126;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v37, (void (*)(void, void, void, void, void, void))sub_100093160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100093174(v37, (void (*)(void, void, void, void, void, void))sub_100093160);
      unint64_t v41 = sub_1000A4450();
      os_log_type_t v42 = sub_1000A4A20();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        v149[0] = v121;
        *(_DWORD *)uint64_t v44 = 136315650;
        int v120 = v43;
        swift_bridgeObjectRetain();
        v144[0] = sub_10003CFA4(v30, v32, v149);
        uint64_t v119 = v37;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        if (v40) {
          uint64_t v45 = v132;
        }
        else {
          uint64_t v45 = 0;
        }
        if (v40) {
          unint64_t v46 = v40;
        }
        else {
          unint64_t v46 = 0xE000000000000000;
        }
        swift_bridgeObjectRetain();
        v144[0] = sub_10003CFA4(v45, v46, v149);
        uint64_t v33 = v136;
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 22) = 2080;
        sub_100092640((uint64_t)v155, (uint64_t)v144);
        os_log_t v47 = v140;
        uint64_t v48 = v138;
        sub_10003E7A4(v33, v139, v140, v138, (uint64_t)v137, v143);
        uint64_t v49 = sub_1000A4810();
        v144[0] = sub_10003CFA4(v49, v50, v149);
        sub_1000A4BC0();
        swift_bridgeObjectRelease();
        uint64_t v51 = v119;
        sub_100093174(v119, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v51, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v120, "SharingError in %s %s, error: %s", (uint8_t *)v44, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v38 = v139;
        swift_slowDealloc();

        sub_100093174(v51, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v142);
      }
      else
      {
        sub_100093174(v37, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100093174(v37, (void (*)(void, void, void, void, void, void))sub_1000428F4);
        sub_100093174(v37, (void (*)(void, void, void, void, void, void))sub_1000428F4);

        (*(void (**)(char *, uint64_t))(v141 + 8))(v39, v142);
        uint64_t v48 = v138;
        os_log_t v47 = v140;
      }
      id v36 = v137;
      int v60 = v143;
      sub_10003E7A4(v33, v38, v47, v48, (uint64_t)v137, v143);
    }
  }
  uint64_t v144[3] = type metadata accessor for SPIAnalyticsEvent();
  v144[4] = (uint64_t)&off_1000C2B58;
  unint64_t v79 = sub_1000931B4(v144);
  uint64_t v80 = *(void *)(v129 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v81 = *(void *)(v129 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  uint64_t v82 = v130;
  uint64_t v83 = v131;
  *unint64_t v79 = (uint64_t)v131;
  v79[1] = v82;
  v79[2] = v80;
  v79[3] = v81;
  v79[4] = v33;
  v79[5] = v38;
  v79[6] = (uint64_t)v47;
  v79[7] = v48;
  v79[8] = (uint64_t)v36;
  *((unsigned char *)v79 + 72) = v60;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v144, (uint64_t)&v147, &qword_1000CBAB8);
  os_log_t v137 = v36;
  uint64_t v138 = v48;
  int v143 = v60;
  uint64_t v139 = v38;
  unint64_t v140 = v47;
  if (v148)
  {
    sub_1000930E4(&v147, (uint64_t)v149);
    swift_bridgeObjectRetain();
    id v84 = v83;
    sub_100093160(v33, v38, v47, v48, (uint64_t)v36, v60);
    os_log_t v85 = v123;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v149, (uint64_t)&v147);
    unint64_t v86 = v134;
    swift_bridgeObjectRetain_n();
    os_log_type_t v87 = sub_1000A4450();
    os_log_type_t v88 = sub_1000A4A40();
    BOOL v89 = os_log_type_enabled(v87, v88);
    uint64_t v136 = v33;
    if (v89)
    {
      uint64_t v90 = swift_slowAlloc();
      v145[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v90 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v146 = sub_10003CFA4(v125, v86, v145);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v90 + 12) = 2080;
      sub_100046174(&v147, v148);
      unint64_t v91 = sub_10004248C();
      uint64_t v146 = sub_10003CFA4(v91, v92, v145);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v147);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Finishing %s, sending event %s", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v147);
    }

    unsigned __int8 v97 = *(void (**)(char *, uint64_t))(v141 + 8);
    v97(v85, v142);
    unint64_t v98 = v135;
    int v99 = sub_100046174(v149, v150);
    sub_100081C20((uint64_t)v99);
    unint64_t v100 = v127;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v149, (uint64_t)&v147);
    swift_bridgeObjectRetain_n();
    os_log_type_t v101 = (char *)v124;
    uint64_t v102 = sub_1000A4450();
    os_log_type_t v103 = sub_1000A4A40();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v135 = (uint64_t)v97;
      uint64_t v105 = v104;
      uint64_t v132 = swift_slowAlloc();
      uint64_t v146 = v132;
      *(_DWORD *)uint64_t v105 = 136315650;
      uint64_t v106 = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v145[0] = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v145[1] = v106;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v107 = sub_1000A4810();
      v145[0] = sub_10003CFA4(v107, v108, &v146);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      sub_100046174(&v147, v148);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v109 = sub_1000A4780();
      unint64_t v111 = v110;
      swift_bridgeObjectRelease();
      v145[0] = sub_10003CFA4(v109, v111, &v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v147);
      *(_WORD *)(v105 + 22) = 2080;
      swift_bridgeObjectRetain();
      v145[0] = sub_10003CFA4(v128, v98, &v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v105, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v135)(v127, v142);
    }
    else
    {

      sub_100041414((uint64_t)&v147);
      swift_bridgeObjectRelease_n();
      v97(v100, v142);
    }
    unint64_t v95 = v133;
    unint64_t v96 = v134;
    os_log_t v47 = v140;
    uint64_t v48 = v138;
    sub_100046174(v149, v150);
    BOOL v112 = sub_100043358();
    uint64_t v113 = 0x73736563637553;
    if (v112) {
      uint64_t v113 = 0x7272652068746957;
    }
    uint64_t v135 = v113;
    if (v112) {
      unint64_t v94 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v94 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v149);
    uint64_t v33 = v136;
    uint64_t v38 = v139;
  }
  else
  {
    uint64_t v135 = 0x73736563637553;
    swift_bridgeObjectRetain();
    id v93 = v83;
    sub_100093160(v33, v38, v47, v48, (uint64_t)v36, v60);
    sub_10000B988((uint64_t)&v147, &qword_1000CBAB8);
    unint64_t v94 = 0xE700000000000000;
    unint64_t v95 = v133;
    unint64_t v96 = v134;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v114 = sub_1000A4450();
  os_log_type_t v115 = sub_1000A4A40();
  if (os_log_type_enabled(v114, v115))
  {
    uint64_t v116 = swift_slowAlloc();
    v149[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v147 = sub_10003CFA4(v125, v96, v149);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v116 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v147 = sub_10003CFA4(v135, v94, v149);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v114, v115, "Finished %s: %s.", (uint8_t *)v116, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v33, v139, v140, v138, (uint64_t)v137, v143);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v133, v142);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v33, v38, v47, v48, (uint64_t)v137, v143);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v95, v142);
  }
  return sub_10000B988((uint64_t)v144, &qword_1000CBAB8);
}

uint64_t sub_10008AE20(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, int a10)
{
  unint64_t v131 = a8;
  uint64_t v132 = a3;
  id v124 = a7;
  uint64_t v127 = a4;
  int v130 = a10;
  sub_1000409B0(a5, (uint64_t)v151, &qword_1000CB378);
  uint64_t v139 = v151[1];
  unint64_t v140 = (void *)v151[2];
  uint64_t v138 = v151[3];
  uint64_t v136 = v151[0];
  os_log_t v137 = (os_log_t)v151[4];
  int v143 = v152;
  uint64_t v14 = sub_1000A4460();
  uint64_t v141 = *(void *)(v14 - 8);
  uint64_t v142 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v122 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v118 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v128 = (char *)&v118 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  BOOL v123 = (char *)&v118 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v118 - v24;
  uint64_t v26 = sub_1000A48D0();
  sub_10003C8F4(v26, v27, a1, a2);
  char v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v135 = a2;
  uint64_t v129 = a1;
  os_log_t v133 = v19;
  if (v29)
  {
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000A48E0();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000A4830();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = a9;
  uint64_t v34 = v136;
  unint64_t v134 = v32;
  uint64_t v126 = v30;
  if (a6)
  {
    id v35 = v127;
    uint64_t v125 = a9;
    if (v127)
    {
      id v36 = a6;
      uint64_t v37 = v35;
    }
    else
    {
      id v53 = a6;
      id v54 = [v53 description];
      uint64_t v132 = sub_1000A4800();
      uint64_t v37 = v55;
    }
    id v56 = v25;
    swift_bridgeObjectRetain();
    id v57 = [a6 code];
    unint64_t v58 = 0x80000001000ACE30;
    unint64_t v59 = 0x206C6172656E6567;
    if (v57 == (id)12) {
      int v60 = 12;
    }
    else {
      int v60 = 11;
    }
    if (v57 == (id)12) {
      unint64_t v59 = 0xD000000000000018;
    }
    else {
      unint64_t v58 = 0xED0000726F727265;
    }
    if (v57 == (id)10) {
      int v61 = 13;
    }
    else {
      int v61 = v60;
    }
    if (v57 == (id)10) {
      unint64_t v62 = (void *)0xD000000000000019;
    }
    else {
      unint64_t v62 = (void *)v59;
    }
    unint64_t v140 = v62;
    if (v57 == (id)10) {
      unint64_t v63 = 0x80000001000ACE10;
    }
    else {
      unint64_t v63 = v58;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A4440();
    id v64 = a6;
    swift_bridgeObjectRetain_n();
    id v65 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v66 = v56;
    os_log_type_t v67 = sub_1000A4450();
    os_log_type_t v68 = sub_1000A4A20();
    int v69 = v68;
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v70 = swift_slowAlloc();
      LODWORD(v138) = v69;
      uint64_t v71 = v70;
      uint64_t v139 = swift_slowAlloc();
      v155[0] = v139;
      *(_DWORD *)uint64_t v71 = 136315906;
      os_log_t v137 = v67;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4(v30, v32, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      int v143 = v61;
      *(_WORD *)(v71 + 12) = 2080;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4(v132, (unint64_t)v37, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v71 + 22) = 2080;
      swift_bridgeObjectRetain();
      v153[0] = sub_10003CFA4((uint64_t)v140, v63, v155);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v71 + 32) = 2080;
      id v72 = v65;
      id v73 = [v72 description];
      uint64_t v74 = v37;
      uint64_t v75 = sub_1000A4800();
      unint64_t v77 = v76;

      uint64_t v78 = v75;
      uint64_t v37 = v74;
      v153[0] = sub_10003CFA4(v78, v77, v155);
      sub_1000A4BC0();

      int v61 = v143;
      swift_bridgeObjectRelease();
      os_log_t v79 = v137;
      _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v138, "Error in %s %s, reporting as %s, NSError: %s", (uint8_t *)v71, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v141 + 8))(v66, v142);
    uint64_t v48 = 0;
    uint64_t v34 = v129;
    uint64_t v39 = v135;
    uint64_t v49 = v132;
  }
  else
  {
    uint64_t v38 = a5;
    sub_1000409B0(a5, (uint64_t)v153, &qword_1000CB378);
    if (v154 == 255)
    {
      uint64_t v37 = v137;
      uint64_t v49 = v138;
      int v61 = v143;
      uint64_t v39 = v139;
      uint64_t v48 = v140;
      goto LABEL_40;
    }
    uint64_t v125 = a9;
    sub_100092640((uint64_t)v153, (uint64_t)v155);
    uint64_t v39 = v139;
    sub_10003E7A4(v34, v139, v140, v138, (uint64_t)v137, v143);
    unint64_t v40 = v122;
    sub_1000A4440();
    unint64_t v41 = (unint64_t)v127;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093174(v38, (void (*)(void, void, void, void, void, void))sub_100093160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100093174(v38, (void (*)(void, void, void, void, void, void))sub_100093160);
    os_log_type_t v42 = sub_1000A4450();
    os_log_type_t v43 = sub_1000A4A20();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      v149[0] = v121;
      *(_DWORD *)uint64_t v45 = 136315650;
      int v120 = v44;
      swift_bridgeObjectRetain();
      v144[0] = sub_10003CFA4(v30, v32, v149);
      uint64_t v119 = v38;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2080;
      if (v41) {
        uint64_t v46 = v132;
      }
      else {
        uint64_t v46 = 0;
      }
      if (v41) {
        unint64_t v47 = v41;
      }
      else {
        unint64_t v47 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v144[0] = sub_10003CFA4(v46, v47, v149);
      uint64_t v34 = v136;
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 22) = 2080;
      sub_100092640((uint64_t)v155, (uint64_t)v144);
      uint64_t v48 = v140;
      uint64_t v49 = v138;
      sub_10003E7A4(v34, v139, v140, v138, (uint64_t)v137, v143);
      uint64_t v50 = sub_1000A4810();
      v144[0] = sub_10003CFA4(v50, v51, v149);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      uint64_t v52 = v119;
      sub_100093174(v119, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v52, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v120, "SharingError in %s %s, error: %s", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v39 = v139;
      swift_slowDealloc();

      sub_100093174(v52, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v142);
    }
    else
    {
      sub_100093174(v38, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_100093174(v38, (void (*)(void, void, void, void, void, void))sub_1000428F4);
      sub_100093174(v38, (void (*)(void, void, void, void, void, void))sub_1000428F4);

      (*(void (**)(char *, uint64_t))(v141 + 8))(v40, v142);
      uint64_t v49 = v138;
      uint64_t v48 = v140;
    }
    uint64_t v37 = v137;
    int v61 = v143;
    sub_10003E7A4(v34, v39, v48, v49, (uint64_t)v137, v143);
  }
  uint64_t v33 = v125;
LABEL_40:
  uint64_t v144[3] = type metadata accessor for SPIAnalyticsEvent();
  v144[4] = (uint64_t)&off_1000C2B58;
  uint64_t v80 = sub_1000931B4(v144);
  uint64_t v81 = *(void *)(v33 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier);
  uint64_t v82 = *(void *)(v33 + OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8);
  uint64_t v83 = v131;
  *uint64_t v80 = (uint64_t)v131;
  v80[1] = v81;
  v80[2] = v82;
  v80[3] = v34;
  v80[4] = v39;
  v80[5] = (uint64_t)v48;
  v80[6] = v49;
  v80[7] = (uint64_t)v37;
  *((unsigned char *)v80 + 64) = v61;
  swift_storeEnumTagMultiPayload();
  sub_10001F904((uint64_t)v144, (uint64_t)&v147, &qword_1000CBAB8);
  os_log_t v137 = v37;
  uint64_t v138 = v49;
  int v143 = v61;
  uint64_t v139 = v39;
  unint64_t v140 = v48;
  if (v148)
  {
    sub_1000930E4(&v147, (uint64_t)v149);
    swift_bridgeObjectRetain();
    id v84 = v83;
    sub_100093160(v34, v39, v48, v49, (uint64_t)v37, v61);
    os_log_t v85 = v123;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v149, (uint64_t)&v147);
    unint64_t v86 = v134;
    swift_bridgeObjectRetain_n();
    os_log_type_t v87 = sub_1000A4450();
    os_log_type_t v88 = sub_1000A4A40();
    BOOL v89 = os_log_type_enabled(v87, v88);
    uint64_t v136 = v34;
    if (v89)
    {
      uint64_t v90 = swift_slowAlloc();
      v145[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v90 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v146 = sub_10003CFA4(v126, v86, v145);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v90 + 12) = 2080;
      sub_100046174(&v147, v148);
      unint64_t v91 = sub_10004248C();
      uint64_t v146 = sub_10003CFA4(v91, v92, v145);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v147);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Finishing %s, sending event %s", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100041414((uint64_t)&v147);
    }

    unsigned __int8 v97 = *(void (**)(char *, uint64_t))(v141 + 8);
    v97(v85, v142);
    unint64_t v98 = v135;
    int v99 = sub_100046174(v149, v150);
    sub_100081C20((uint64_t)v99);
    unint64_t v100 = v128;
    sub_1000A4440();
    sub_1000930FC((uint64_t)v149, (uint64_t)&v147);
    swift_bridgeObjectRetain_n();
    os_log_type_t v101 = (char *)v124;
    uint64_t v102 = sub_1000A4450();
    os_log_type_t v103 = sub_1000A4A40();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v135 = (uint64_t)v97;
      uint64_t v105 = v104;
      uint64_t v132 = swift_slowAlloc();
      uint64_t v146 = v132;
      *(_DWORD *)uint64_t v105 = 136315650;
      uint64_t v106 = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier + 8];
      v145[0] = *(void *)&v101[OBJC_IVAR____TtC13SPIHelper_iOS9SPIHelper_requestingProcessBundleIdentifier];
      v145[1] = v106;
      swift_bridgeObjectRetain();
      sub_100008704(&qword_1000CA880);
      uint64_t v107 = sub_1000A4810();
      v145[0] = sub_10003CFA4(v107, v108, &v146);
      sub_1000A4BC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v105 + 12) = 2080;
      sub_100046174(&v147, v148);
      sub_100042964();
      sub_10001F798(0, &qword_1000CB018);
      uint64_t v109 = sub_1000A4780();
      unint64_t v111 = v110;
      swift_bridgeObjectRelease();
      v145[0] = sub_10003CFA4(v109, v111, &v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100041414((uint64_t)&v147);
      *(_WORD *)(v105 + 22) = 2080;
      swift_bridgeObjectRetain();
      v145[0] = sub_10003CFA4(v129, v98, &v146);
      sub_1000A4BC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "Requester: %s, event detail is: %s\n%s", (uint8_t *)v105, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v135)(v128, v142);
    }
    else
    {

      sub_100041414((uint64_t)&v147);
      swift_bridgeObjectRelease_n();
      v97(v100, v142);
    }
    unint64_t v95 = v133;
    unint64_t v96 = v134;
    uint64_t v48 = v140;
    uint64_t v49 = v138;
    sub_100046174(v149, v150);
    BOOL v112 = sub_100043358();
    uint64_t v113 = 0x73736563637553;
    if (v112) {
      uint64_t v113 = 0x7272652068746957;
    }
    uint64_t v135 = v113;
    if (v112) {
      unint64_t v94 = 0xEA0000000000726FLL;
    }
    else {
      unint64_t v94 = 0xE700000000000000;
    }
    sub_100041414((uint64_t)v149);
    uint64_t v34 = v136;
    uint64_t v39 = v139;
  }
  else
  {
    uint64_t v135 = 0x73736563637553;
    swift_bridgeObjectRetain();
    id v93 = v83;
    sub_100093160(v34, v39, v48, v49, (uint64_t)v37, v61);
    sub_10000B988((uint64_t)&v147, &qword_1000CBAB8);
    unint64_t v94 = 0xE700000000000000;
    unint64_t v95 = v133;
    unint64_t v96 = v134;
  }
  sub_1000A4440();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v114 = sub_1000A4450();
  os_log_type_t v115 = sub_1000A4A40();
  if (os_log_type_enabled(v114, v115))
  {
    uint64_t v116 = swift_slowAlloc();
    v149[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v147 = sub_10003CFA4(v126, v96, v149);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v116 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v147 = sub_10003CFA4(v135, v94, v149);
    sub_1000A4BC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v114, v115, "Finished %s: %s.", (uint8_t *)v116, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000428F4(v34, v139, v140, v138, (uint64_t)v137, v143);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v133, v142);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_1000428F4(v34, v39, v48, v49, (uint64_t)v137, v143);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v95, v142);
  }
  return sub_10000B988((uint64_t)v144, &qword_1000CBAB8);
}

uint64_t sub_10008BF84(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v10 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000A4460();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v45 - v19;
  if (a1 != 1)
  {
    if (a1)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      unint64_t v31 = sub_1000A4450();
      int v32 = sub_1000A4A20();
      if (os_log_type_enabled(v31, (os_log_type_t)v32))
      {
        LODWORD(v49) = v32;
        uint64_t v50 = v13;
        uint64_t v33 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v51 = a1;
        uint64_t v52 = v48;
        *(_DWORD *)uint64_t v33 = 134218242;
        unint64_t v47 = &v52;
        sub_1000A4BC0();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v34 = sub_1000A48D0();
        sub_10003C8F4(v34, v35, a2, a3);
        char v37 = v36;
        swift_bridgeObjectRelease();
        if (v37)
        {
          uint64_t v38 = 0;
          unint64_t v40 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v38 = sub_1000A4830();
          unint64_t v40 = v39;
          swift_bridgeObjectRelease();
        }
        uint64_t v51 = sub_10003CFA4(v38, v40, &v52);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v49, "Reply called too many (%lu) times in: %s. Behavior undefined.", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v50);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      }
    }
    else
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v21 = sub_1000A4450();
      int v22 = sub_1000A4A20();
      if (os_log_type_enabled(v21, (os_log_type_t)v22))
      {
        LODWORD(v47) = v22;
        uint64_t v48 = a5;
        uint64_t v49 = a4;
        uint64_t v50 = v13;
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v52 = v46;
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v24 = sub_1000A48D0();
        sub_10003C8F4(v24, v25, a2, a3);
        char v27 = v26;
        swift_bridgeObjectRelease();
        if (v27)
        {
          uint64_t v28 = 0;
          unint64_t v30 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v28 = sub_1000A4830();
          unint64_t v30 = v29;
          swift_bridgeObjectRelease();
        }
        uint64_t v51 = sub_10003CFA4(v28, v30, &v52);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v47, "Reply never called in: %s. Replying with defaults and internalError", v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v50);
        a4 = v49;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      }
      uint64_t v41 = sub_1000A42E0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v12, 1, 1, v41);
      sub_1000A4800();
      id v42 = objc_allocWithZone((Class)NSError);
      NSString v43 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v44 = [v42 initWithDomain:v43 code:1 userInfo:0];

      a4(v12, 0, v44);
      return sub_10000B988((uint64_t)v12, &qword_1000CA3B0);
    }
  }
  return result;
}

void sub_10008C5A8(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v10 = sub_1000A4460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  if (a1 != 1)
  {
    if (a1)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      char v27 = sub_1000A4450();
      int v28 = sub_1000A4A20();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        LODWORD(v42) = v28;
        uint64_t v43 = v10;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v44 = a1;
        uint64_t v45 = v41;
        *(_DWORD *)uint64_t v29 = 134218242;
        unint64_t v40 = &v45;
        sub_1000A4BC0();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v30 = sub_1000A48D0();
        sub_10003C8F4(v30, v31, a2, a3);
        char v33 = v32;
        swift_bridgeObjectRelease();
        if (v33)
        {
          uint64_t v34 = 0;
          unint64_t v36 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v34 = sub_1000A4830();
          unint64_t v36 = v35;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v34, v36, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v42, "Reply called too many (%lu) times in: %s. Behavior undefined.", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v43);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
    }
    else
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_1000A4450();
      uint64_t v18 = sub_1000A4A20();
      if (os_log_type_enabled(v17, (os_log_type_t)v18))
      {
        uint64_t v41 = a5;
        id v42 = a4;
        uint64_t v43 = v10;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        unint64_t v40 = (uint64_t *)swift_slowAlloc();
        uint64_t v45 = (uint64_t)v40;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v20 = sub_1000A48D0();
        sub_10003C8F4(v20, v21, a2, a3);
        char v23 = v22;
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v24 = 0;
          unint64_t v26 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_1000A4830();
          unint64_t v26 = v25;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v24, v26, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Reply never called in: %s. Replying with defaults and internalError", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v43);
        a4 = v42;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      }
      sub_1000A4800();
      id v37 = objc_allocWithZone((Class)NSError);
      NSString v38 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v39 = [v37 initWithDomain:v38 code:1 userInfo:0];

      a4(0, 0, v39);
    }
  }
}

void sub_10008CB28(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v10 = sub_1000A4460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  if (a1 != 1)
  {
    if (a1)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      char v27 = sub_1000A4450();
      int v28 = sub_1000A4A20();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        LODWORD(v42) = v28;
        uint64_t v43 = v10;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v44 = a1;
        uint64_t v45 = v41;
        *(_DWORD *)uint64_t v29 = 134218242;
        unint64_t v40 = &v45;
        sub_1000A4BC0();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v30 = sub_1000A48D0();
        sub_10003C8F4(v30, v31, a2, a3);
        char v33 = v32;
        swift_bridgeObjectRelease();
        if (v33)
        {
          uint64_t v34 = 0;
          unint64_t v36 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v34 = sub_1000A4830();
          unint64_t v36 = v35;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v34, v36, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v42, "Reply called too many (%lu) times in: %s. Behavior undefined.", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v43);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
    }
    else
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_1000A4450();
      uint64_t v18 = sub_1000A4A20();
      if (os_log_type_enabled(v17, (os_log_type_t)v18))
      {
        uint64_t v41 = a5;
        id v42 = a4;
        uint64_t v43 = v10;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        unint64_t v40 = (uint64_t *)swift_slowAlloc();
        uint64_t v45 = (uint64_t)v40;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v20 = sub_1000A48D0();
        sub_10003C8F4(v20, v21, a2, a3);
        char v23 = v22;
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v24 = 0;
          unint64_t v26 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_1000A4830();
          unint64_t v26 = v25;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v24, v26, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Reply never called in: %s. Replying with defaults and internalError", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v43);
        a4 = v42;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      }
      sub_1000A4800();
      id v37 = objc_allocWithZone((Class)NSError);
      NSString v38 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v39 = [v37 initWithDomain:v38 code:1 userInfo:0];

      a4(0, v39);
    }
  }
}

void sub_10008D0A4(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void, void, void, void, void), uint64_t a5)
{
  uint64_t v10 = sub_1000A4460();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  if (a1 != 1)
  {
    if (a1)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      char v27 = sub_1000A4450();
      int v28 = sub_1000A4A20();
      if (os_log_type_enabled(v27, (os_log_type_t)v28))
      {
        LODWORD(v42) = v28;
        uint64_t v43 = v10;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v44 = a1;
        uint64_t v45 = v41;
        *(_DWORD *)uint64_t v29 = 134218242;
        unint64_t v40 = &v45;
        sub_1000A4BC0();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v30 = sub_1000A48D0();
        sub_10003C8F4(v30, v31, a2, a3);
        char v33 = v32;
        swift_bridgeObjectRelease();
        if (v33)
        {
          uint64_t v34 = 0;
          unint64_t v36 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v34 = sub_1000A4830();
          unint64_t v36 = v35;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v34, v36, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v42, "Reply called too many (%lu) times in: %s. Behavior undefined.", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v43);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
    }
    else
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_1000A4450();
      uint64_t v18 = sub_1000A4A20();
      if (os_log_type_enabled(v17, (os_log_type_t)v18))
      {
        uint64_t v41 = a5;
        id v42 = a4;
        uint64_t v43 = v10;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        unint64_t v40 = (uint64_t *)swift_slowAlloc();
        uint64_t v45 = (uint64_t)v40;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v20 = sub_1000A48D0();
        sub_10003C8F4(v20, v21, a2, a3);
        char v23 = v22;
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v24 = 0;
          unint64_t v26 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_1000A4830();
          unint64_t v26 = v25;
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = sub_10003CFA4(v24, v26, &v45);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Reply never called in: %s. Replying with defaults and internalError", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v43);
        a4 = v42;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      }
      sub_1000A4800();
      id v37 = objc_allocWithZone((Class)NSError);
      NSString v38 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v39 = [v37 initWithDomain:v38 code:1 userInfo:0];

      a4(0, 0, 0, 0, v39);
    }
  }
}

void sub_10008D62C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000A4460();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v42 - v17;
  if (a1 != 1)
  {
    if (a1)
    {
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v29 = sub_1000A4450();
      int v30 = sub_1000A4A20();
      if (os_log_type_enabled(v29, (os_log_type_t)v30))
      {
        LODWORD(v47) = v30;
        uint64_t v46 = v12;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v48 = a1;
        uint64_t v49 = v45;
        *(_DWORD *)uint64_t v31 = 134218242;
        uint64_t v44 = &v49;
        sub_1000A4BC0();
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v32 = sub_1000A48D0();
        sub_10003C8F4(v32, v33, a2, a3);
        char v35 = v34;
        swift_bridgeObjectRelease();
        if (v35)
        {
          uint64_t v36 = 0;
          unint64_t v38 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v36 = sub_1000A4830();
          unint64_t v38 = v37;
          swift_bridgeObjectRelease();
        }
        uint64_t v48 = sub_10003CFA4(v36, v38, &v49);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v47, "Reply called too many (%lu) times in: %s. Behavior undefined.", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v46);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      }
    }
    else
    {
      uint64_t v47 = a5;
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      uint64_t v19 = sub_1000A4450();
      os_log_type_t v20 = sub_1000A4A20();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v44 = a4;
        uint64_t v45 = a6;
        uint64_t v46 = v12;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v49 = v43;
        *(_DWORD *)uint64_t v21 = 136315138;
        uint64_t v22 = sub_1000A48D0();
        sub_10003C8F4(v22, v23, a2, a3);
        char v25 = v24;
        swift_bridgeObjectRelease();
        if (v25)
        {
          uint64_t v26 = 0;
          unint64_t v28 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_1000A4830();
          unint64_t v28 = v27;
          swift_bridgeObjectRelease();
        }
        a4 = v44;
        uint64_t v48 = sub_10003CFA4(v26, v28, &v49);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Reply never called in: %s. Replying with defaults and internalError", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v46);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      }
      sub_1000A4800();
      id v39 = objc_allocWithZone((Class)NSError);
      NSString v40 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      id v41 = [v39 initWithDomain:v40 code:1 userInfo:0];

      ((void (*)(void, id))a4)(0, v41);
    }
  }
}

uint64_t sub_10008DBB0(uint64_t a1)
{
  v1[16] = a1;
  sub_100008704(&qword_1000CAB08);
  v1[17] = swift_task_alloc();
  uint64_t v2 = sub_1000A4460();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = sub_1000A4990();
  v1[25] = sub_1000A4980();
  uint64_t v4 = sub_1000A4950();
  v1[26] = v4;
  v1[27] = v3;
  return _swift_task_switch(sub_10008DD00, v4, v3);
}

uint64_t sub_10008DD00()
{
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "running fetchShareAndToleratePreshareErrors() for SPI", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[28] = v9;
  v0[29] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v5);
  sub_1000A49A0();
  uint64_t v10 = sub_1000A49C0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  swift_retain();
  uint64_t v11 = sub_1000A4980();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  uint64_t v12[3] = &protocol witness table for MainActor;
  v12[4] = v8;
  uint64_t v13 = sub_100055948(v7, (uint64_t)&unk_1000CBB30, (uint64_t)v12);
  v0[30] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[31] = v14;
  uint64_t v15 = sub_100008704(qword_1000CA3F0);
  v0[32] = v15;
  void *v14 = v0;
  v14[1] = sub_10008DF24;
  return Task.value.getter(v15, v13, (char *)&type metadata for () + 8, v15, &protocol self-conformance witness table for Error);
}

uint64_t sub_10008DF24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_10008E114;
  }
  else {
    uint64_t v5 = sub_10008E060;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008E060()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v2 = *(void *)(v0 + 264) == 0;
  return v1(v2);
}

uint64_t sub_10008E114()
{
  uint64_t v74 = v0;
  *(void *)(v0 + 112) = *(void *)(v0 + 264);
  swift_errorRetain();
  if (!swift_dynamicCast())
  {
    swift_release();
    swift_errorRelease();
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD00000000000002BLL;
    *(void *)(v14 + 8) = 0x80000001000AD120;
    *(_OWORD *)(v14 + 16) = xmmword_1000A8500;
    *(void *)(v14 + 32) = 0x80000001000AD150;
    *(unsigned char *)(v14 + 40) = 11;
    swift_willThrow();
    swift_errorRelease();
    swift_release();
LABEL_45:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v61 = *(uint64_t (**)(BOOL))(v0 + 8);
    BOOL v62 = 0;
    goto LABEL_46;
  }
  uint64_t result = swift_errorRelease();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  *(void *)(v0 + 272) = v2;
  *(void *)(v0 + 280) = v3;
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v0 + 288) = v5;
  *(void *)(v0 + 296) = v4;
  uint64_t v6 = *(void *)(v0 + 48);
  *(void *)(v0 + 304) = v6;
  int v7 = *(unsigned __int8 *)(v0 + 56);
  if (v7 != 5)
  {
    swift_release();
    sub_1000A4440();
    sub_10003E7A4(v2, v3, v5, v4, v6, v7);
    sub_10003E7A4(v2, v3, v5, v4, v6, v7);
    uint64_t v15 = sub_1000A4450();
    os_log_type_t typea = sub_1000A4A20();
    BOOL v16 = os_log_type_enabled(v15, typea);
    uint64_t v70 = *(void *)(v0 + 160);
    id v72 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    uint64_t v69 = *(void *)(v0 + 144);
    if (v16)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      *(void *)(v0 + 64) = v2;
      *(void *)(v0 + 72) = v3;
      *(void *)(v0 + 80) = v5;
      *(void *)(v0 + 88) = v4;
      *(void *)(v0 + 96) = v6;
      *(unsigned char *)(v0 + 104) = v7;
      sub_10003E7A4(v2, v3, v5, v4, v6, v7);
      uint64_t v18 = sub_1000A4810();
      *(void *)(v0 + 120) = sub_10003CFA4(v18, v19, &v73);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_10003E804(v2, v3, v5, v4, v6, v7);
      sub_10003E804(v2, v3, v5, v4, v6, v7);
      _os_log_impl((void *)&_mh_execute_header, v15, typea, "fetchShareAndToleratePreshareErrors error: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v72(v70, v69);
    }
    else
    {
      sub_10003E804(v2, v3, v5, v4, v6, v7);
      sub_10003E804(v2, v3, v5, v4, v6, v7);

      v72(v70, v69);
    }
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v20 = 0xD00000000000002BLL;
    *(void *)(v20 + 8) = 0x80000001000AD120;
    *(_OWORD *)(v20 + 16) = xmmword_1000A8510;
    *(void *)(v20 + 32) = 0x80000001000AD1A0;
    *(unsigned char *)(v20 + 40) = 11;
    swift_willThrow();
    swift_release();
    uint64_t v21 = v2;
    uint64_t v22 = v3;
    uint64_t v23 = v5;
    uint64_t v24 = v4;
    uint64_t v25 = v6;
    unsigned __int8 v26 = v7;
    goto LABEL_44;
  }
  *(void *)os_log_type_t type = v4;
  if (!v5)
  {
    __break(1u);
    return result;
  }
  uint64_t v65 = v6;
  swift_bridgeObjectRetain();
  uint64_t v71 = v5;
  id v8 = v5;
  swift_bridgeObjectRetain();
  id v9 = [v8 domain];
  uint64_t v10 = sub_1000A4800();
  uint64_t v12 = v11;

  uint64_t v66 = v2;
  if (v10 == sub_1000A4800() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v27 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {

      goto LABEL_16;
    }
  }
  id v28 = [v8 code];

  if (v28 == (id)20)
  {
    BOOL v29 = 1;
    goto LABEL_22;
  }
LABEL_16:
  id v30 = v8;
  id v31 = [v30 domain];
  uint64_t v32 = sub_1000A4800();
  uint64_t v34 = v33;

  if (v32 == sub_1000A4800() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v36 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {

      BOOL v29 = 0;
      goto LABEL_22;
    }
  }
  id v37 = [v30 code];

  BOOL v29 = v37 == (id)7;
LABEL_22:
  id v38 = v8;
  id v39 = [v38 domain];
  uint64_t v40 = sub_1000A4800();
  uint64_t v42 = v41;

  if (v40 == sub_1000A4800() && v42 == v43)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v44 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
    {

      char v46 = 2;
      goto LABEL_30;
    }
  }
  id v45 = [v38 code];

  if (v45 == (id)20) {
    char v46 = 1;
  }
  else {
    char v46 = 2;
  }
LABEL_30:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 57) != 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 58) = v46;
    swift_retain();
    sub_1000A4570();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  int v47 = *(unsigned __int8 *)(v0 + 59);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 60) == 1 && v47 == 1)
  {
    uint64_t v48 = v71;
    if (v29)
    {
      sub_1000A4440();
      uint64_t v49 = sub_1000A4450();
      os_log_type_t v50 = sub_1000A4A40();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "starting folder sharing prep", v51, 2u);
        swift_slowDealloc();
      }
      uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
      uint64_t v53 = *(void *)(v0 + 176);
      uint64_t v54 = *(void *)(v0 + 144);

      v52(v53, v54);
      os_log_t v55 = (void *)swift_task_alloc();
      *(void *)(v0 + 312) = v55;
      *os_log_t v55 = v0;
      v55[1] = sub_10008EBF4;
      return sub_100033BF8(0);
    }
    swift_release();
    goto LABEL_43;
  }
  swift_release();
  uint64_t v48 = v71;
  if (!v29)
  {
LABEL_43:
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v63 = v66;
    *(void *)(v63 + 8) = v3;
    *(void *)(v63 + 16) = v48;
    *(void *)(v63 + 24) = *(void *)type;
    *(void *)(v63 + 32) = v65;
    *(unsigned char *)(v63 + 40) = 5;
    swift_bridgeObjectRetain();
    id v64 = v38;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v66;
    uint64_t v22 = v3;
    uint64_t v23 = v48;
    uint64_t v24 = *(void *)type;
    uint64_t v25 = v65;
    unsigned __int8 v26 = 5;
LABEL_44:
    sub_10003E804(v21, v22, v23, v24, v25, v26);
    swift_errorRelease();
    goto LABEL_45;
  }
  uint64_t v56 = *(void *)(v0 + 296);
  uint64_t v57 = *(void *)(v0 + 304);
  uint64_t v59 = *(void *)(v0 + 280);
  unint64_t v58 = *(void **)(v0 + 288);
  uint64_t v60 = *(void *)(v0 + 272);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v60, v59, v58, v56, v57, 5u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v61 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v62 = *(void *)(v0 + 264) == 0;
LABEL_46:
  return v61(v62);
}

uint64_t sub_10008EBF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_10008EEC0;
  }
  else {
    uint64_t v5 = sub_10008ED30;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008ED30()
{
  swift_release();
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "successfully completed folder sharing prep", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[28];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[18];

  v4(v5, v6);
  uint64_t v7 = v0[37];
  uint64_t v8 = v0[38];
  uint64_t v10 = v0[35];
  id v9 = (void *)v0[36];
  uint64_t v11 = v0[34];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v11, v10, v9, v7, v8, 5u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(BOOL))v0[1];
  BOOL v13 = v0[33] == 0;
  return v12(v13);
}

uint64_t sub_10008EEC0()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[38];
  uint64_t v4 = v0[35];
  uint64_t v3 = (void *)v0[36];
  uint64_t v5 = v0[34];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10003E804(v5, v4, v3, v1, v2, 5u);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6(0);
}

uint64_t sub_10008EFBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 120) = a4;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_10008EFE4, 0, 0);
}

uint64_t sub_10008EFE4()
{
  *(void *)(v0 + 40) = sub_1000A4990();
  *(void *)(v0 + 48) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10008F07C, v2, v1);
}

uint64_t sub_10008F07C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_release();
  v0[7] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008F148;
  uint64_t v4 = v0[2];
  if (v2 == 1) {
    char v5 = 2;
  }
  else {
    char v5 = 1;
  }
  return sub_100051F44(v5, v4, 0);
}

uint64_t sub_10008F148()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10008F614;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10008F264;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008F264()
{
  *(void *)(v0 + 80) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10008F2F0, v2, v1);
}

uint64_t sub_10008F2F0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  swift_release();
  v0[11] = *(void *)(v2 + 16);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008F3C4;
  uint64_t v4 = v0[2];
  if (v1 == 3) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  return sub_1000529E4(v5, v4, 0, 1);
}

uint64_t sub_10008F3C4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10008F678;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10008F4E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008F4E0()
{
  *(void *)(v0 + 112) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10008F56C, v2, v1);
}

uint64_t sub_10008F56C()
{
  int v1 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  if (v1) {
    uint64_t v2 = &off_1000C1AE8;
  }
  else {
    uint64_t v2 = &off_1000C1B10;
  }
  swift_retain();
  sub_100051318((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10008F614()
{
  swift_release();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008F678()
{
  swift_release();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008F6DC(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 80) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return _swift_task_switch(sub_10008F700, 0, 0);
}

uint64_t sub_10008F700()
{
  *(void *)(v0 + 32) = sub_1000A4990();
  *(void *)(v0 + 40) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10008F798, v2, v1);
}

uint64_t sub_10008F798()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_release();
  v0[6] = *(void *)(v1 + 16);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008F868;
  uint64_t v4 = v0[2];
  if (v2 == 3) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  return sub_1000529E4(v5, v4, 0, 0);
}

uint64_t sub_10008F868()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10008FAB8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10008F984;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008F984()
{
  *(void *)(v0 + 72) = sub_1000A4980();
  uint64_t v2 = sub_1000A4950();
  return _swift_task_switch(sub_10008FA10, v2, v1);
}

uint64_t sub_10008FA10()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  swift_release();
  if (v1) {
    uint64_t v2 = &off_1000C1B38;
  }
  else {
    uint64_t v2 = &off_1000C1B60;
  }
  swift_retain();
  sub_100051318((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10008FAB8()
{
  swift_release();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008FB1C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = sub_1000A4460();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  sub_1000A4990();
  v2[20] = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  v2[21] = v5;
  v2[22] = v4;
  return _swift_task_switch(sub_10008FC38, v5, v4);
}

void sub_10008FC38()
{
  uint64_t v1 = v0[12];
  if (v1 < 1)
  {
    __break(1u);
  }
  else
  {
    v0[23] = BRCloudDocsErrorDomain;
    v0[24] = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[25] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10008FCE8;
    sub_10002EFE0();
  }
}

uint64_t sub_10008FCE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v5 = sub_10008FF78;
  }
  else {
    uint64_t v5 = sub_10008FE24;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008FE24()
{
  swift_release();
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[24];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[11] = v3;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "createShare completed with this many retries left: %ld", v4, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[15];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8(0);
}

uint64_t sub_10008FF78()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 208);
  swift_errorRetain();
  sub_100008704(qword_1000CA3F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
LABEL_9:
    sub_1000A4440();
    BOOL v13 = sub_1000A4450();
    os_log_type_t v14 = sub_1000A4A20();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = *(void *)(v0 + 192);
      BOOL v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)BOOL v16 = 134217984;
      *(void *)(v0 + 72) = v15;
      sub_1000A4BC0();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "tryToCreateShare error: unexpected error--retries left: %ld", v16, 0xCu);
      swift_slowDealloc();
    }
    uint64_t v18 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v19 = *(void *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_100008C08();
    uint64_t v20 = swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000023;
    *(void *)(v21 + 8) = 0x80000001000ACBD0;
    *(_OWORD *)(v21 + 16) = xmmword_1000A8520;
    *(void *)(v21 + 32) = 0x80000001000ACC00;
    *(unsigned char *)(v21 + 40) = 11;
    goto LABEL_26;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 216) = v1;
  *(void *)(v0 + 224) = v2;
  uint64_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v0 + 232) = v3;
  *(void *)(v0 + 240) = v4;
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 248) = v5;
  int v6 = *(unsigned __int8 *)(v0 + 56);
  if (v6 != 1)
  {
    swift_release();
    sub_10003E804(v1, v2, v3, v4, v5, v6);
    goto LABEL_9;
  }
  uint64_t v41 = v1;
  if (v3)
  {
    swift_bridgeObjectRetain();
    id v7 = v3;
    swift_bridgeObjectRetain();
    id v8 = [v7 domain];
    uint64_t v9 = sub_1000A4800();
    uint64_t v11 = v10;

    if (v9 == sub_1000A4800() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
LABEL_14:
      id v23 = [v7 code];

      if (v23 == (id)7 && *(uint64_t *)(v0 + 192) >= 2)
      {
        sub_1000A4440();
        uint64_t v24 = sub_1000A4450();
        os_log_type_t v25 = sub_1000A4A40();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = *(void *)(v0 + 192);
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 134217984;
          *(void *)(v27 + 4) = v26;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "About to retry createShare--retries left including this one: %ld", (uint8_t *)v27, 0xCu);
          swift_slowDealloc();
        }
        uint64_t v28 = *(void *)(v0 + 144);
        uint64_t v29 = *(void *)(v0 + 112);
        uint64_t v30 = *(void *)(v0 + 120);

        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
        return _swift_task_switch(sub_10009050C, 0, 0);
      }
      goto LABEL_23;
    }
    char v22 = sub_1000A4D70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_14;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_release();
  sub_1000A4440();
  id v31 = sub_1000A4450();
  os_log_type_t v32 = sub_1000A4A20();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134217984;
    *(void *)(v0 + 80) = v33;
    sub_1000A4BC0();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "tryToCreateShare error: failed to create share--retries left: %ld", v34, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v37 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  sub_100008C08();
  uint64_t v20 = swift_allocError();
  *(void *)uint64_t v38 = v41;
  *(void *)(v38 + 8) = v2;
  *(void *)(v38 + 16) = v3;
  *(void *)(v38 + 24) = v4;
  *(void *)(v38 + 32) = v5;
  *(unsigned char *)(v38 + 40) = 1;
  sub_10003E804(v41, v2, v3, v4, v5, 1u);
LABEL_26:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v39 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v39(v20);
}

uint64_t sub_10009050C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  void *v1 = v0;
  v1[1] = sub_1000905A4;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_1000905A4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 168);
    uint64_t v4 = *(void *)(v2 + 176);
    uint64_t v5 = sub_100094F14;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 168);
    uint64_t v4 = *(void *)(v2 + 176);
    uint64_t v5 = sub_1000906C8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000906C8()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v3 = (void *)v0[29];
  uint64_t v5 = v0[27];
  swift_errorRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t result = sub_10003E804(v5, v4, v3, v1, v2, 1u);
  uint64_t v7 = v0[24];
  if (v7 < 2)
  {
    __break(1u);
  }
  else
  {
    v0[24] = v7 - 1;
    id v8 = (void *)swift_task_alloc();
    v0[25] = v8;
    *id v8 = v0;
    v8[1] = sub_10008FCE8;
    return sub_10002EFE0();
  }
  return result;
}

uint64_t sub_1000907C0(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 57) = a3;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a2;
  sub_100008704(&qword_1000CAB08);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = sub_1000A4990();
  *(void *)(v3 + 112) = sub_1000A4980();
  uint64_t v5 = sub_1000A4950();
  *(void *)(v3 + 120) = v5;
  *(void *)(v3 + 128) = v4;
  return _swift_task_switch(sub_100090890, v5, v4);
}

uint64_t sub_100090890()
{
  uint64_t v1 = *(void *)(v0 + 96);
  char v2 = *(unsigned char *)(v0 + 57);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1000A49A0();
  uint64_t v4 = sub_1000A49C0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  swift_retain();
  uint64_t v5 = sub_1000A4980();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = &protocol witness table for MainActor;
  *(void *)(v6 + 32) = v3;
  *(unsigned char *)(v6 + 40) = v2;
  uint64_t v7 = sub_100055948(v1, (uint64_t)&unk_1000CBB98, v6);
  *(void *)(v0 + 136) = v7;
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v8;
  uint64_t v9 = sub_100008704(qword_1000CA3F0);
  *(void *)(v0 + 152) = v9;
  *id v8 = v0;
  v8[1] = sub_100090A0C;
  return Task.value.getter(v9, v7, (char *)&type metadata for () + 8, v9, &protocol self-conformance witness table for Error);
}

uint64_t sub_100090A0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_100090BD4;
  }
  else {
    uint64_t v5 = sub_100090B48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100090B48()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  swift_task_dealloc();
  *(void *)(v1 + 32) = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 40) = -1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100090BD4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_release();
  *(void *)(v0 + 64) = v1;
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    swift_release();
    swift_errorRelease();
    unint64_t v3 = *(void *)(v0 + 16);
    unint64_t v2 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    unint64_t v6 = *(void *)(v0 + 48);
    char v7 = *(unsigned char *)(v0 + 56);
    swift_errorRelease();
  }
  else
  {
    unint64_t v3 = 0xD00000000000003DLL;
    uint64_t v8 = *(void *)(v0 + 160);
    swift_errorRelease();
    sub_1000A4C40(68);
    v13._countAndFlagsBits = 0xD000000000000042;
    v13._object = (void *)0x80000001000AD470;
    sub_1000A4880(v13);
    *(void *)(v0 + 72) = v8;
    swift_errorRetain();
    v14._countAndFlagsBits = sub_1000A4810();
    sub_1000A4880(v14);
    swift_bridgeObjectRelease();
    swift_release();
    swift_errorRelease();
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
    unint64_t v2 = 0x80000001000AD430;
    char v7 = 11;
  }
  uint64_t v9 = *(void *)(v0 + 80);
  swift_task_dealloc();
  *(void *)uint64_t v9 = v3;
  *(void *)(v9 + 8) = v2;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = v7;
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100090D7C(uint64_t a1, const void *a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v4 - 8);
  uint64_t v102 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008704(&qword_1000CA3B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v110 = (char *)&v96 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v103 = (uint64_t)&v96 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v105 = (char *)&v96 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v106 = (char *)&v96 - v17;
  __chkstk_darwin(v16);
  uint64_t v107 = (char *)&v96 - v18;
  uint64_t v19 = sub_1000A42E0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v100 = v22;
  os_log_type_t v101 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v96 - v23;
  uint64_t v25 = sub_1000A4460();
  uint64_t v113 = *(void *)(v25 - 8);
  uint64_t v114 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v104 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v108 = (char *)&v96 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v111 = (char *)&v96 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v96 - v32;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a2;
  _Block_copy(a2);
  sub_1000A4440();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v116 = a1;
  unint64_t v98 = v35;
  uint64_t v99 = v20 + 16;
  v35(v24, a1, v19);
  uint64_t v36 = sub_1000A4450();
  os_log_type_t v37 = sub_1000A4A40();
  BOOL v38 = os_log_type_enabled(v36, v37);
  BOOL v112 = (void (**)(const void *, void *, void, void *))a2;
  uint64_t v115 = v20;
  uint64_t v109 = v9;
  if (v38)
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v97 = v34;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v118 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    unint64_t v96 = v40 + 4;
    sub_100094E4C((unint64_t *)&qword_1000CA680, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v41 = sub_1000A4D50();
    uint64_t v117 = sub_10003CFA4(v41, v42, &v118);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v20 + 8);
    v43(v24, v19);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Begin existingShareForFile, fileURL: %s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v34 = v97;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v43 = *(void (**)(char *, uint64_t))(v20 + 8);
    v43(v24, v19);
  }

  uint64_t v44 = v114;
  id v45 = *(void (**)(char *, uint64_t))(v113 + 8);
  v45(v33, v114);
  uint64_t v46 = v19;
  BOOL v47 = sub_1000A42B0();
  sub_1000A4270(v48);
  os_log_type_t v50 = v49;
  unsigned int v51 = objc_msgSend(v49, "br_isInSyncedLocation");

  if (v47) {
    sub_1000A4290();
  }
  uint64_t v52 = v115;
  if (!v51)
  {
    os_log_type_t v67 = v111;
    sub_1000A4440();
    os_log_type_t v68 = sub_1000A4450();
    os_log_type_t v69 = sub_1000A4A40();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Finished existingShareForFile: not in synced (iCloud Drive) location", v70, 2u);
      os_log_type_t v67 = v111;
      swift_slowDealloc();
    }

    v45(v67, v44);
    uint64_t v71 = v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v110, 1, 1, v46);
    sub_1000A4800();
    id v72 = objc_allocWithZone((Class)NSError);
    NSString v73 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v74 = [v72 initWithDomain:v73 code:12 userInfo:0];

    uint64_t v75 = (uint64_t)v71;
    uint64_t v76 = (uint64_t)v109;
    goto LABEL_20;
  }
  uint64_t v53 = shareStatus(url:)();
  if ((v53 & 0x10000) != 0)
  {
    unint64_t v77 = v108;
    sub_1000A4440();
    uint64_t v78 = sub_1000A4450();
    os_log_type_t v79 = sub_1000A4A20();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "Error getting status in existingShareForFile, reporting as CKError.invalidArguments", v80, 2u);
      unint64_t v77 = v108;
      swift_slowDealloc();
    }

    v45(v77, v44);
    uint64_t v71 = v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v107, 1, 1, v46);
    sub_1000A4800();
    id v81 = objc_allocWithZone((Class)NSError);
    NSString v82 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v74 = [v81 initWithDomain:v82 code:12 userInfo:0];

    uint64_t v75 = (uint64_t)v71;
    uint64_t v76 = (uint64_t)v106;
LABEL_20:
    sub_10001F904(v75, v76, &qword_1000CA3B0);
    id v84 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v76, 1, v46) != 1)
    {
      sub_1000A4270(v83);
      id v84 = v85;
      v43((char *)v76, v46);
    }
    unint64_t v86 = (void *)sub_1000A4230();
    v112[2](v112, v84, 0, v86);

    uint64_t v66 = (uint64_t)v71;
    goto LABEL_23;
  }
  if (v53)
  {
    uint64_t v88 = (uint64_t)v102;
    sub_1000A49A0();
    uint64_t v89 = sub_1000A49C0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v88, 0, 1, v89);
    uint64_t v90 = v101;
    v98(v101, v116, v46);
    sub_1000A4990();
    swift_retain();
    uint64_t v91 = sub_1000A4980();
    unint64_t v92 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v93 = (v100 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v94 = swift_allocObject();
    *(void *)(v94 + 16) = v91;
    *(void *)(v94 + 24) = &protocol witness table for MainActor;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v94 + v92, v90, v46);
    unint64_t v95 = (void *)(v94 + v93);
    *unint64_t v95 = sub_100094F1C;
    v95[1] = v34;
    sub_100055948(v88, (uint64_t)&unk_1000CBA98, v94);
    swift_release();
    return swift_release();
  }
  sub_1000A4440();
  uint64_t v54 = sub_1000A4450();
  os_log_type_t v55 = sub_1000A4A40();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Finished existingShareForFile: item not shared", v56, 2u);
    swift_slowDealloc();
  }

  v45(v104, v44);
  uint64_t v57 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v105, 1, 1, v46);
  sub_1000A4800();
  id v58 = objc_allocWithZone((Class)NSError);
  NSString v59 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  id v60 = [v58 initWithDomain:v59 code:12 userInfo:0];

  uint64_t v61 = v103;
  sub_10001F904(v57, v103, &qword_1000CA3B0);
  uint64_t v63 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v61, 1, v46) != 1)
  {
    sub_1000A4270(v62);
    uint64_t v63 = v64;
    v43((char *)v61, v46);
  }
  uint64_t v65 = (void *)sub_1000A4230();
  v112[2](v112, v63, 0, v65);

  uint64_t v66 = (uint64_t)v105;
LABEL_23:
  sub_10000B988(v66, &qword_1000CA3B0);
  return swift_release();
}

uint64_t sub_1000918EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v42 = a2;
  uint64_t v43 = a3;
  uint64_t v6 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008704(&qword_1000CA3B0);
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v40 + 64);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v39 = sub_1000A4460();
  uint64_t v14 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4440();
  sub_10001F904(a1, (uint64_t)v13, &qword_1000CA3B0);
  uint64_t v17 = sub_1000A4450();
  os_log_type_t v18 = sub_1000A4A40();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = a4;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = a1;
    uint64_t v45 = v21;
    uint64_t v36 = v9;
    *(_DWORD *)uint64_t v20 = 136315138;
    v35[1] = v20 + 4;
    sub_10001F904((uint64_t)v13, (uint64_t)v11, &qword_1000CA3B0);
    uint64_t v22 = sub_1000A4810();
    uint64_t v44 = sub_10003CFA4(v22, v23, &v45);
    uint64_t v9 = v36;
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    sub_10000B988((uint64_t)v13, &qword_1000CA3B0);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Begin userNameAndEmail fileURL: %s", v20, 0xCu);
    swift_arrayDestroy();
    a1 = v37;
    swift_slowDealloc();
    a4 = v38;
    swift_slowDealloc();
  }
  else
  {
    sub_10000B988((uint64_t)v13, &qword_1000CA3B0);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v39);
  uint64_t v24 = (uint64_t)v41;
  sub_1000A49A0();
  uint64_t v25 = sub_1000A49C0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  sub_10001F904(a1, (uint64_t)v11, &qword_1000CA3B0);
  sub_1000A4990();
  id v26 = v42;
  id v27 = v42;
  swift_retain();
  uint64_t v28 = sub_1000A4980();
  uint64_t v29 = (uint64_t)v11;
  unint64_t v30 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v28;
  *(void *)(v32 + 24) = &protocol witness table for MainActor;
  sub_1000409B0(v29, v32 + v30, &qword_1000CA3B0);
  *(void *)(v32 + v31) = v26;
  uint64_t v33 = (void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v33 = v43;
  v33[1] = a4;
  sub_1000210F4(v24, (uint64_t)&unk_1000CBA88, v32);
  return swift_release();
}

BOOL sub_100091D38()
{
  uint64_t v0 = sub_1000A4460();
  uint64_t v48 = *(void *)(v0 - 8);
  uint64_t v49 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  BOOL v47 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v44 - v4;
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = sub_1000A4180();
  uint64_t v45 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008704(&qword_1000CA678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6410;
  *(void *)(inited + 32) = NSURLIsDirectoryKey;
  uint64_t v17 = NSURLIsDirectoryKey;
  os_log_type_t v18 = sub_10003DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v18, (uint64_t)v15);
  uint64_t v44 = v8;
  uint64_t v19 = v5;
  swift_bridgeObjectRelease();
  LODWORD(inited) = sub_1000A4110();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v13);
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  LODWORD(v47) = inited;
  uint64_t v22 = v46;
  if ((inited & 1) == 0)
  {
    sub_1000A4440();
    unint64_t v23 = sub_1000A4450();
    os_log_type_t v24 = sub_1000A4A20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "folderURL is not actually a folder, reporting as CKError.invalidArguments", v25, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
  }
  BOOL v26 = sub_1000A42B0();
  sub_1000A4270(v27);
  uint64_t v29 = v28;
  unsigned int v30 = objc_msgSend(v28, "br_isInSyncedLocation");

  if (v26) {
    sub_1000A4290();
  }
  if ((v30 & 1) == 0)
  {
    sub_1000A4440();
    unint64_t v31 = sub_1000A4450();
    os_log_type_t v32 = sub_1000A4A20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "folderURL is not in a synced location (someplace in iCloud Drive), reporting as CKError.invalidArguments", v33, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
  }
  int v34 = shareStatus(url:)();
  uint64_t v35 = v19;
  if ((v34 & 0x10000) != 0)
  {
    uint64_t v36 = v44;
    sub_1000A4440();
    uint64_t v37 = sub_1000A4450();
    os_log_type_t v38 = sub_1000A4A20();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Error getting status in forciblyShareFolder, reporting as CKError.invalidArguments", v39, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v20);
  }
  if (v34)
  {
    sub_1000A4440();
    uint64_t v40 = sub_1000A4450();
    os_log_type_t v41 = sub_1000A4A20();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "folderURL in forciblyShareFolder is already shared, reporting as CKError.invalidArguments", v42, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v20);
  }
  return (v47 & v30) == 1 && (v34 & 0x10001) == 0;
}

uint64_t sub_100092404()
{
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_100092454()
{
  return sub_10007D0EC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_10009246C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009247C()
{
  return swift_release();
}

unint64_t sub_100092484()
{
  unint64_t result = qword_1000CB878;
  if (!qword_1000CB878)
  {
    sub_1000086BC(&qword_1000CB870);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CB878);
  }
  return result;
}

uint64_t sub_1000924E8()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_100092540(uint64_t a1)
{
  uint64_t v13 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v11 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001FD88;
  return sub_10007D274(a1, v13, v11, v4, v5, v6, v7, v8);
}

uint64_t sub_100092640(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009269C()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1000926EC(uint64_t a1)
{
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  char v8 = *(unsigned char *)(v1 + 64);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001FD88;
  return sub_10007E710(a1, v13, v11, v4, v5, v6, v7, v8);
}

uint64_t sub_1000927F0()
{
  return sub_1000814E8();
}

uint64_t sub_10009281C()
{
  return sub_1000814E8();
}

void sub_100092850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10007AB88(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100092858()
{
  uint64_t v1 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v2 | 7);
}

uint64_t sub_1000929B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_10001FD88;
  return sub_100079E8C(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_100092B00()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100092BEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_10001FD88;
  return sub_100077B54(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100092D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100079898(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100092D20()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 105, 7);
}

uint64_t sub_100092D90(uint64_t a1)
{
  uint64_t v13 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v11 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001FD88;
  return sub_100073BBC(a1, v13, v11, v4, v5, v6, v7, v8);
}

uint64_t sub_100092EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100077510(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100092EC4()
{
  uint64_t v1 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 33) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1000A42E0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  return _swift_deallocObject(v0, v8 + 8, v2 | 7);
}

uint64_t sub_100093018@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(_UNKNOWN ***)(v2 + 24);
  uint64_t v10 = *(void **)(v2 + v7);
  uint64_t v11 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000779F0(a1, v8, v9, v2 + v6, v10, v11, a2);
}

uint64_t sub_1000930E4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000930FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_100093160(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF) {
    sub_10003E7A4(a1, a2, a3, a4, a5, a6);
  }
}

uint64_t sub_100093174(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t *sub_1000931B4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100093218()
{
  sub_100041414(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

void *sub_100093250()
{
  return sub_100045F08((void *)(v0 + 16));
}

uint64_t sub_100093258()
{
  return sub_100094390(88);
}

uint64_t sub_100093260(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001FD88;
  return sub_100070230(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100093354()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009338C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007317C(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100093394()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000933E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001FD88;
  return sub_10006F23C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1000934CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10001FD88;
  return sub_10006CDE0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000935A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006EAA8(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

void sub_1000935B0(uint64_t a1, uint64_t a2)
{
  sub_10006CBE0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000935BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_10001FD88;
  return sub_10006B6A0(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1000936FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100093734(uint64_t a1, void *a2)
{
  return sub_10006C478(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

void sub_10009373C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_10006B318(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_100093744(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10009379C()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_100008704(&qword_1000CA3B0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v11 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();

  swift_release();
  sub_10000E60C(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1)) {
    v9(v0 + v8, v1);
  }

  return _swift_deallocObject(v0, v8 + v11, v3 | v7 | 7);
}

uint64_t sub_100093950(uint64_t a1)
{
  sub_1000A42E0();
  sub_100008704(&qword_1000CA3B0);
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v3 = v1[5];
  uint64_t v9 = v1[4];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000B7A4;
  return sub_100069D10(a1, v11, v10, v9, v3, v4, v5, v6);
}

uint64_t sub_100093B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_10006AC6C(a1, a2, a3, a4, a5, *(void (**)(void, void, void, void, void))(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_100093B08()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100093B40(char a1, uint64_t a2)
{
  sub_100065CDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100093B4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10001FD88;
  return sub_1000678AC(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100093C5C(uint64_t a1, void *a2)
{
  return sub_100069294(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100093C64()
{
  return sub_10004121C(40);
}

uint64_t sub_100093C6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10001FD88;
  return sub_1000591AC(a1, v4, v5, v6);
}

uint64_t sub_100093D2C()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100093D84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10001FD88;
  return sub_100065F10(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100093E60(uint64_t a1, void *a2)
{
  return sub_100067188(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100093E6C()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100093F64(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_10001FD88;
  return sub_100063F34(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1000940A4(uint64_t a1, void *a2)
{
  return sub_10006571C(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

void sub_1000940AC(char a1, uint64_t a2, uint64_t a3)
{
  sub_100063EB4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000940B4()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 9, v5);
}

uint64_t sub_1000941E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = v1[3];
  uint64_t v13 = v1[2];
  uint64_t v5 = v1[5];
  uint64_t v11 = v1[4];
  uint64_t v6 = v1[6];
  uint64_t v7 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (uint64_t)v1 + v4;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000B7A4;
  return sub_100061090(a1, v13, v12, v11, v5, v6, v8, v7);
}

uint64_t sub_100094380(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10006378C(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100094388()
{
  return sub_100094390(105);
}

uint64_t sub_100094390(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100094404(uint64_t a1)
{
  uint64_t v13 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v11 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10001FD88;
  return sub_10005DA24(a1, v13, v11, v4, v5, v6, v7, v8);
}

uint64_t sub_100094514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000605A8(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_10009451C()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100094634(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[4];
  uint64_t v12 = v1[3];
  uint64_t v13 = v1[2];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001FD88;
  return sub_1000599B4(a1, v13, v12, v5, v6, v7, v9, v8);
}

uint64_t sub_1000947BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005C3DC(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1000947C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CA3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094848()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100094930@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(_UNKNOWN ***)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10005CD90(a1, v7, v8, v2 + v6, v9, a2);
}

uint64_t sub_1000949E4()
{
  return sub_10004121C(41);
}

uint64_t sub_1000949EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001FD88;
  return sub_10005CF60(a1, v4, v5, v6, v7);
}

void sub_100094AB0(uint64_t a1, uint64_t a2)
{
  sub_10006CBE0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100094AD0()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100094BAC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1000A42E0() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10001FD88;
  return sub_100056194(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100094CE8()
{
  uint64_t v1 = sub_1000A42E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100094D94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1000A42E0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100057F24(a1, v2 + v6, v8, v9, a2);
}

uint64_t sub_100094E4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100094F20(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000A4460();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4800();
  id v10 = objc_allocWithZone((Class)NSError);
  NSString v11 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithDomain:v11 code:12 userInfo:0];

  id v48 = v12;
  sub_100092640(v3, (uint64_t)v49);
  switch(v53)
  {
    case 1:
    case 2:
    case 3:
      if (!v50)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000954A0);
      }
      id v13 = v50;

      id v48 = v13;
      id v12 = v13;
      goto LABEL_13;
    case 4:
      id v14 = v50;

      if (!v14) {
        goto LABEL_24;
      }
      id v48 = v14;
      swift_bridgeObjectRetain();
      id v12 = v14;
      swift_bridgeObjectRetain();
      char v15 = sub_100095D7C(32);

      if (v15)
      {
        uint64_t v16 = a1;
        id v17 = v12;
        id v12 = (id)sub_1000954CC();

        swift_bridgeObjectRelease();
        if (!v12)
        {

          swift_bridgeObjectRelease();
          return v17;
        }
        swift_bridgeObjectRelease();

        id v48 = v12;
        a1 = v16;
      }
      else
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
LABEL_13:
      sub_1000A4440();
      swift_bridgeObjectRetain_n();
      id v27 = v12;
      uint64_t v28 = sub_1000A4450();
      os_log_type_t v29 = sub_1000A4A20();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v43 = v9;
        uint64_t v44 = v7;
        uint64_t v45 = v6;
        uint64_t v30 = swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v47[0] = v42;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v32 = sub_1000A48D0();
        sub_10003C8F4(v32, v33, a1, a2);
        char v35 = v34;
        swift_bridgeObjectRelease();
        if (v35)
        {
          uint64_t v36 = 0;
          unint64_t v38 = 0xE000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000A48E0();
          swift_bridgeObjectRelease();
          uint64_t v36 = sub_1000A4830();
          unint64_t v38 = v37;
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = sub_10003CFA4(v36, v38, v47);
        sub_1000A4BC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2112;
        uint64_t v46 = (uint64_t)v27;
        id v39 = v27;
        sub_1000A4BC0();
        *unint64_t v31 = v27;

        _os_log_impl((void *)&_mh_execute_header, v28, v29, "returning %s mapped error: %@", (uint8_t *)v30, 0x16u);
        sub_100008704(&qword_1000CAAF0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      swift_beginAccess();
      return v48;
    case 5:
      id v18 = v50;

      if (v18) {
        goto LABEL_12;
      }
      goto LABEL_25;
    case 8:
      id v18 = v50;

      if (v18)
      {
LABEL_12:
        id v48 = v18;
        id v12 = v18;
      }
      else
      {
        __break(1u);
LABEL_10:
        uint64_t v19 = a1;
        unint64_t v20 = a2;
        id v21 = v50;
        uint64_t v22 = v51;
        uint64_t v23 = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v24 = v21;
        a2 = v20;
        id v25 = v24;
        id v26 = sub_100096858(v22, v23);

        swift_bridgeObjectRelease();
        a1 = v19;
        swift_bridgeObjectRelease();
        id v48 = v26;
        id v12 = v26;
      }
      goto LABEL_13;
    case 11:
      goto LABEL_10;
    default:
      goto LABEL_13;
  }
}

uint64_t sub_1000954CC()
{
  swift_willThrow();
  id v1 = v0;
  sub_100008704(qword_1000CA3F0);
  type metadata accessor for BRError(0);
  if (swift_dynamicCast())
  {
    sub_1000964D8(&qword_1000CA118, type metadata accessor for BRError);
    sub_1000A4200();
    if (v17 == 17)
    {
      id v2 = v18;
      uint64_t v3 = (void *)sub_1000A4230();

      id v4 = [v3 underlyingErrors];
      uint64_t v5 = sub_1000A4910();

      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        uint64_t v7 = (uint64_t *)(v5 + 32);
        do
        {
          uint64_t v8 = *v7;
          swift_errorRetain();
          uint64_t v9 = (void *)sub_1000A4230();
          char v10 = sub_100095D7C(32);

          if (v10)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_100096520(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v12 = _swiftEmptyArrayStorage[2];
            unint64_t v11 = _swiftEmptyArrayStorage[3];
            if (v12 >= v11 >> 1) {
              sub_100096520(v11 > 1, v12 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v12 + 1;
            _swiftEmptyArrayStorage[v12 + 4] = v8;
          }
          else
          {
            swift_errorRelease();
          }
          ++v7;
          --v6;
        }
        while (v6);
      }
      swift_bridgeObjectRelease();
      if (_swiftEmptyArrayStorage[2])
      {
        swift_errorRetain();
        swift_release();
        uint64_t v15 = sub_1000A4230();

        swift_errorRelease();
      }
      else
      {
        swift_release();

        uint64_t v15 = 0;
      }
      goto LABEL_22;
    }
  }
  swift_errorRelease();
  type metadata accessor for CKError(0);
  id v13 = v1;
  if (swift_dynamicCast())
  {
    sub_1000964D8(&qword_1000CA150, type metadata accessor for CKError);
    sub_1000A4200();
    if (v17 == 32)
    {
      id v14 = v18;
      uint64_t v15 = sub_1000A4230();

LABEL_22:
      swift_errorRelease();
      return v15;
    }
  }
  swift_errorRelease();
  return 0;
}

void *sub_1000957FC()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_100095824()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100095854(uint64_t *a1)
{
  sub_100092640(v1, (uint64_t)&v59);
  switch(v62)
  {
    case 1:
      long long v33 = v60;
      long long v46 = v59;
      uint64_t v6 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v7 = swift_allocObject();
      *a1 = v7;
      *(_OWORD *)(v7 + 16) = v46;
      *(_OWORD *)(v7 + 32) = v33;
      *(void *)(v7 + 48) = v6;
      uint64_t v4 = 1;
      break;
    case 2:
      long long v34 = v60;
      long long v47 = v59;
      uint64_t v8 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v9 = swift_allocObject();
      *a1 = v9;
      *(_OWORD *)(v9 + 16) = v47;
      *(_OWORD *)(v9 + 32) = v34;
      *(void *)(v9 + 48) = v8;
      uint64_t v4 = 2;
      break;
    case 3:
      long long v35 = v60;
      long long v48 = v59;
      uint64_t v10 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v11 = swift_allocObject();
      *a1 = v11;
      *(_OWORD *)(v11 + 16) = v48;
      *(_OWORD *)(v11 + 32) = v35;
      *(void *)(v11 + 48) = v10;
      uint64_t v4 = 3;
      break;
    case 4:
      long long v36 = v60;
      long long v49 = v59;
      uint64_t v12 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v13 = swift_allocObject();
      *a1 = v13;
      *(_OWORD *)(v13 + 16) = v49;
      *(_OWORD *)(v13 + 32) = v36;
      *(void *)(v13 + 48) = v12;
      uint64_t v4 = 4;
      break;
    case 5:
      long long v37 = v60;
      long long v50 = v59;
      uint64_t v14 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v15 = swift_allocObject();
      *a1 = v15;
      *(_OWORD *)(v15 + 16) = v50;
      *(_OWORD *)(v15 + 32) = v37;
      *(void *)(v15 + 48) = v14;
      uint64_t v4 = 5;
      break;
    case 6:
      long long v38 = v60;
      long long v51 = v59;
      uint64_t v16 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v17 = swift_allocObject();
      *a1 = v17;
      *(_OWORD *)(v17 + 16) = v51;
      *(_OWORD *)(v17 + 32) = v38;
      *(void *)(v17 + 48) = v16;
      uint64_t v4 = 6;
      break;
    case 7:
      long long v39 = v60;
      long long v52 = v59;
      uint64_t v18 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v4 = 7;
      uint64_t v19 = swift_allocObject();
      *a1 = v19;
      *(_OWORD *)(v19 + 16) = v52;
      *(_OWORD *)(v19 + 32) = v39;
      *(void *)(v19 + 48) = v18;
      break;
    case 8:
      long long v40 = v60;
      long long v53 = v59;
      uint64_t v20 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v21 = swift_allocObject();
      *a1 = v21;
      *(_OWORD *)(v21 + 16) = v53;
      *(_OWORD *)(v21 + 32) = v40;
      *(void *)(v21 + 48) = v20;
      uint64_t v4 = 8;
      break;
    case 9:
      long long v41 = v60;
      long long v54 = v59;
      uint64_t v22 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v23 = swift_allocObject();
      *a1 = v23;
      *(_OWORD *)(v23 + 16) = v54;
      *(_OWORD *)(v23 + 32) = v41;
      *(void *)(v23 + 48) = v22;
      uint64_t v4 = 9;
      break;
    case 10:
      long long v42 = v60;
      long long v55 = v59;
      uint64_t v24 = v61;
      a1[3] = (uint64_t)&type metadata for NSErrorContext;
      a1[4] = (uint64_t)&off_1000C3C98;
      uint64_t v25 = swift_allocObject();
      *a1 = v25;
      *(_OWORD *)(v25 + 16) = v55;
      *(_OWORD *)(v25 + 32) = v42;
      *(void *)(v25 + 48) = v24;
      uint64_t v4 = 10;
      break;
    case 11:
      long long v43 = v60;
      long long v56 = v59;
      uint64_t v26 = v61;
      a1[3] = (uint64_t)&type metadata for ErrorMessage;
      a1[4] = (uint64_t)&off_1000C3CC0;
      uint64_t v27 = swift_allocObject();
      *a1 = v27;
      *(_OWORD *)(v27 + 16) = v56;
      *(_OWORD *)(v27 + 32) = v43;
      *(void *)(v27 + 48) = v26;
      uint64_t v4 = 11;
      break;
    case 12:
      long long v44 = v60;
      long long v57 = v59;
      uint64_t v28 = v61;
      a1[3] = (uint64_t)&type metadata for ErrorMessage;
      a1[4] = (uint64_t)&off_1000C3CC0;
      uint64_t v29 = swift_allocObject();
      *a1 = v29;
      *(_OWORD *)(v29 + 16) = v57;
      *(_OWORD *)(v29 + 32) = v44;
      *(void *)(v29 + 48) = v28;
      uint64_t v4 = 12;
      break;
    case 13:
      long long v45 = v60;
      long long v58 = v59;
      uint64_t v30 = v61;
      a1[3] = (uint64_t)&type metadata for ErrorMessage;
      a1[4] = (uint64_t)&off_1000C3CC0;
      uint64_t v31 = swift_allocObject();
      *a1 = v31;
      *(_OWORD *)(v31 + 16) = v58;
      *(_OWORD *)(v31 + 32) = v45;
      *(void *)(v31 + 48) = v30;
      uint64_t v4 = 13;
      break;
    default:
      a1[3] = (uint64_t)&type metadata for ErrorMessage;
      a1[4] = (uint64_t)&off_1000C3CC0;
      uint64_t v3 = swift_allocObject();
      uint64_t v4 = 0;
      *a1 = v3;
      long long v5 = v60;
      *(_OWORD *)(v3 + 16) = v59;
      *(_OWORD *)(v3 + 32) = v5;
      *(void *)(v3 + 48) = v61;
      break;
  }
  sub_10009698C(v1);
  return v4;
}

uint64_t sub_100095D7C(uint64_t a1)
{
  swift_willThrow();
  id v3 = v1;
  sub_100008704(qword_1000CA3F0);
  type metadata accessor for BRError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    swift_errorRelease();
    type metadata accessor for CKError(0);
    id v13 = v3;
    if (swift_dynamicCast())
    {
      sub_1000964D8(&qword_1000CA150, type metadata accessor for CKError);
      sub_1000A4200();

      swift_errorRelease();
      if (v18 == a1) {
        return 1;
      }
    }
    else
    {
      swift_errorRelease();
    }
    return 0;
  }
  sub_1000964D8(&qword_1000CA118, type metadata accessor for BRError);
  sub_1000A4200();
  if (v18 != 17)
  {

    goto LABEL_7;
  }
  id v4 = v19;
  long long v5 = (void *)sub_1000A4230();

  id v6 = [v5 underlyingErrors];
  uint64_t v7 = sub_1000A4910();

  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();

LABEL_19:
    uint64_t v12 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v9 = (void *)sub_1000A4230();
  char v10 = sub_100095D7C(a1);

  uint64_t result = swift_errorRelease();
  if (v10)
  {
LABEL_5:

    swift_bridgeObjectRelease_n();
    uint64_t v12 = 1;
LABEL_20:
    swift_errorRelease();
    return v12;
  }
  if (v8 == 1)
  {
LABEL_18:

    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  uint64_t v14 = 5;
  while (1)
  {
    uint64_t v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1)) {
      break;
    }
    swift_errorRetain();
    uint64_t v16 = (void *)sub_1000A4230();
    char v17 = sub_100095D7C(a1);

    uint64_t result = swift_errorRelease();
    if (v17) {
      goto LABEL_5;
    }
    ++v14;
    if (v15 == v8) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100096058(id a1)
{
  swift_willThrow();
  id v3 = v1;
  sub_100008704(qword_1000CA3F0);
  type metadata accessor for BRError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_errorRelease();
    type metadata accessor for CKError(0);
    id v16 = v3;
    if (swift_dynamicCast())
    {
      sub_1000964D8(&qword_1000CA150, type metadata accessor for CKError);
      sub_1000A4200();
      if (v36 == CKErrorCodeForUnderlyingErrorCode())
      {
        id v4 = v37;
        char v17 = (void *)sub_1000A4230();

        id v18 = [v17 underlyingErrors];
        uint64_t v19 = sub_1000A4910();

        uint64_t v20 = *(void *)(v19 + 16);
        if (v20)
        {
          swift_bridgeObjectRetain();
          swift_errorRetain();
          uint64_t v21 = (void *)sub_1000A4230();
          char v22 = sub_100096058(a1);

          uint64_t result = swift_errorRelease();
          if ((v22 & 1) == 0)
          {
            if (v20 != 1)
            {
              uint64_t v32 = 5;
              while (1)
              {
                uint64_t v33 = v32 - 3;
                if (__OFADD__(v32 - 4, 1)) {
                  goto LABEL_35;
                }
                swift_errorRetain();
                long long v34 = (void *)sub_1000A4230();
                char v35 = sub_100096058(a1);

                uint64_t result = swift_errorRelease();
                if (v35) {
                  goto LABEL_16;
                }
                ++v32;
                if (v33 == v20) {
                  goto LABEL_30;
                }
              }
            }
            goto LABEL_30;
          }
LABEL_16:

          swift_bridgeObjectRelease_n();
          uint64_t v23 = 1;
LABEL_32:
          swift_errorRelease();
          return v23;
        }
LABEL_23:
        swift_bridgeObjectRelease();

LABEL_31:
        uint64_t v23 = 0;
        goto LABEL_32;
      }
    }
    swift_errorRelease();
    id v24 = v16;
    id v25 = [v24 domain];
    uint64_t v26 = sub_1000A4800();
    uint64_t v28 = v27;

    if (v26 == sub_1000A4800() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {

        return 0;
      }
    }
    id v31 = [v24 code];

    return v31 == a1;
  }
  sub_1000964D8(&qword_1000CA118, type metadata accessor for BRError);
  sub_1000A4200();
  if (v36 != 17)
  {

    goto LABEL_12;
  }
  id v4 = v37;
  long long v5 = (void *)sub_1000A4230();

  id v6 = [v5 underlyingErrors];
  uint64_t v7 = sub_1000A4910();

  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v9 = (void *)sub_1000A4230();
  char v10 = sub_100096058(a1);

  uint64_t result = swift_errorRelease();
  if (v10) {
    goto LABEL_16;
  }
  if (v8 == 1)
  {
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  uint64_t v12 = 5;
  while (1)
  {
    uint64_t v13 = v12 - 3;
    if (__OFADD__(v12 - 4, 1)) {
      break;
    }
    swift_errorRetain();
    uint64_t v14 = (void *)sub_1000A4230();
    char v15 = sub_100096058(a1);

    uint64_t result = swift_errorRelease();
    if (v15) {
      goto LABEL_16;
    }
    ++v12;
    if (v13 == v8) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000964D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100096520(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100096560(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_100096540(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000966EC(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100096560(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008704(&qword_1000CBBC8);
    char v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_100008704(qword_1000CA3F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

uint64_t sub_1000966EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008704(&qword_1000CBBD8);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

id sub_100096858(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100008704(&qword_1000CBBD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A6410;
    *(void *)(inited + 32) = sub_1000A4800();
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_100020014(inited);
  }
  else
  {
    unint64_t v6 = 0;
  }
  sub_1000A4800();
  NSString v7 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  if (v6)
  {
    v8.super.Class isa = sub_1000A4760().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.Class isa = 0;
  }
  id v9 = [objc_allocWithZone((Class)NSError) initWithDomain:v7 code:1 userInfo:v8.super.isa];

  return v9;
}

uint64_t sub_10009698C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000969C8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

__n128 initializeWithTake for ErrorMessage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NSErrorContext()
{
  return &type metadata for NSErrorContext;
}

uint64_t initializeBufferWithCopyOfBuffer for ErrorMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s13SPIHelper_iOS12ErrorMessageVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13SPIHelper_iOS12ErrorMessageVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13SPIHelper_iOS12ErrorMessageVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13SPIHelper_iOS12ErrorMessageVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13SPIHelper_iOS12ErrorMessageVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100096C3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorMessage()
{
  return &type metadata for ErrorMessage;
}

uint64_t destroy for SharingError(uint64_t a1)
{
  return sub_10003E804(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_10003E7A4(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_10003E7A4(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  int64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_10003E804(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for SharingError(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SharingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_10003E804(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF3 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 243);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 0xD) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 243;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100096EB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_100096EB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharingError()
{
  return &type metadata for SharingError;
}

unsigned char *storeEnumTagSinglePayload for SharingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100096FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingMode()
{
  return &type metadata for SharingMode;
}

uint64_t getEnumTagSinglePayload for SharePermission(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharePermission(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009713CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharePermission()
{
  return &type metadata for SharePermission;
}

ValueMetadata *type metadata accessor for SharingOptions()
{
  return &type metadata for SharingOptions;
}

void *sub_100097184@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100097190(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_100097198@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1000971AC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1000971C0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1000971D4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_100097204@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100097230@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100097254(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_100097268(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_10009727C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_100097290@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000972A4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000972B8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1000972CC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000972E0()
{
  return *v0 == 0;
}

uint64_t sub_1000972F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_100097308(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_10009731C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1000974C0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_100097364()
{
  unint64_t result = qword_1000CBBE0;
  if (!qword_1000CBBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBBE0);
  }
  return result;
}

unint64_t sub_1000973BC()
{
  unint64_t result = qword_1000CBBE8;
  if (!qword_1000CBBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBBE8);
  }
  return result;
}

unint64_t sub_100097414()
{
  unint64_t result = qword_1000CBBF0;
  if (!qword_1000CBBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBBF0);
  }
  return result;
}

uint64_t sub_100097470(char a1)
{
  return *(void *)&aNone_5[8 * a1];
}

uint64_t sub_100097490()
{
  return sub_100097470(*v0);
}

uint64_t sub_100097498(char a1)
{
  return *(void *)&aNone_6[8 * a1];
}

uint64_t sub_1000974B8()
{
  return sub_100097498(*v0);
}

uint64_t sub_1000974C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void URL.evictionSafeResourceValues(forKeys:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_100008704(&qword_1000CBBF8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v22 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v20 - v6;
  id v24 = 0;
  uint64_t v8 = sub_1000A4180();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  id v10 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  sub_1000A4270(v11);
  uint64_t v13 = v12;
  unsigned __int8 v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = a1;
  void v14[4] = &v24;
  char v15 = (void *)swift_allocObject();
  v15[2] = sub_100097A00;
  v15[3] = v14;
  aBlock[4] = sub_100097A1C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100097A44;
  void aBlock[3] = &unk_1000C3E80;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  [v10 coordinateReadingItemAtURL:v13 options:4 error:aBlock byAccessor:v16];
  _Block_release(v16);

  id v17 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16) {
    __break(1u);
  }
  if (v17)
  {
    id v18 = v17;
    swift_willThrow();
    sub_100097BA8((uint64_t)v7);

    swift_release();
  }
  else if (v24)
  {
    v24;
    swift_willThrow();
    sub_100097BA8((uint64_t)v7);

    swift_release();
  }
  else
  {
    uint64_t v19 = v22;
    sub_100097B40((uint64_t)v7, v22);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v19, 1, v8) == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v21, v19, v8);
      sub_100097BA8((uint64_t)v7);

      swift_release();
    }
  }
}

uint64_t sub_100097888(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100008704(&qword_1000CBBF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A4280();
  uint64_t v6 = sub_1000A4180();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  return sub_100097C08((uint64_t)v5, a2);
}

uint64_t sub_1000979C8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100097A00(uint64_t a1)
{
  return sub_100097888(a1, *(void *)(v1 + 16));
}

uint64_t sub_100097A0C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100097A1C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100097A44(uint64_t a1)
{
  uint64_t v2 = sub_1000A42E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1000A42A0();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100097B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100097B38()
{
  return swift_release();
}

uint64_t sub_100097B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CBBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100097BA8(uint64_t a1)
{
  uint64_t v2 = sub_100008704(&qword_1000CBBF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100097C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CBBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100097C70(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100097CFC(a1, (uint64_t)sub_100098008, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100097CFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100098054();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  long long v54 = v9;
  uint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_10003D684(v7, v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      uint64_t v21 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_100043CB8();
      uint64_t v21 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v21[(v14 >> 6) + 8] |= 1 << v14;
    id v25 = (uint64_t *)(v21[6] + 16 * v14);
    *id v25 = v10;
    v25[1] = v11;
    *(void *)(v21[7] + 8 * v14) = v54;
    uint64_t v26 = v21[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v28;
LABEL_13:
    sub_100098054();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      long long v34 = v31;
      do
      {
        long long v41 = (void *)*a5;
        unint64_t v42 = sub_10003D684(v32, v33);
        uint64_t v44 = v41[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v27 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v27) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v41[3] < v46)
        {
          sub_100043838(v46, 1);
          unint64_t v42 = sub_10003D684(v32, v33);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        long long v49 = (void *)*a5;
        if (v47)
        {
          uint64_t v35 = 8 * v42;
          id v36 = *(id *)(v49[7] + 8 * v42);
          swift_bridgeObjectRelease();

          uint64_t v37 = v49[7];
          *(void *)(v37 + v35) = v36;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          long long v50 = (uint64_t *)(v49[6] + 16 * v42);
          *long long v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_25;
          }
          v49[2] = v52;
        }
        sub_100098054();
        uint64_t v32 = v38;
        uint64_t v33 = v39;
        long long v34 = v40;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_100099B94();
    return swift_release();
  }
  sub_100043838(v17, a4 & 1);
  unint64_t v19 = sub_10003D684(v10, v11);
  if ((v18 & 1) == (v20 & 1))
  {
    unint64_t v14 = v19;
    uint64_t v21 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v22 = 8 * v14;
    id v23 = *(id *)(v21[7] + 8 * v14);
    swift_bridgeObjectRelease();

    uint64_t v24 = v21[7];
    *(void *)(v24 + v22) = v23;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_1000A4D90();
  __break(1u);
  return result;
}

id sub_100098008@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

void sub_100098054()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  char v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      BOOL v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        BOOL v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          char v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          BOOL v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            char v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            BOOL v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            char v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              BOOL v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              char v18 = v3 + 6;
              while (v14 != v18)
              {
                BOOL v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  char v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_1000981E8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000A4460();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      if ((a2 & 1) == 0)
      {
        sub_1000A4440();
        uint64_t v12 = sub_1000A4450();
        os_log_type_t v13 = sub_1000A4A20();
        if (os_log_type_enabled(v12, v13))
        {
          unint64_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "SPIAnalyticsEvent unknown sharing status but no error", v14, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
      return 1;
    case 1:
      return 1;
    case 2:
      return 3;
    case 3:
      return result;
    case 4:
      return 2;
    case 5:
      return 4;
    case 6:
      return 5;
    default:
      sub_1000A4440();
      uint64_t v15 = sub_1000A4450();
      os_log_type_t v16 = sub_1000A4A20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "SPIAnalyticsEvent unknown CSUIShareItemStatus", v17, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return 1;
  }
}

uint64_t sub_10009843C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000A4420();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100008704((uint64_t *)&unk_1000CBC30);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  os_log_type_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  switch(a1)
  {
    case 1:
      if (!a3) {
        return 3;
      }
      if (a2 == 0x7365676170 && a3 == 0xE500000000000000 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      sub_1000A4430();
      sub_10001F904((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1000CBC30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
      {
        sub_10000B988((uint64_t)v15, (uint64_t *)&unk_1000CBC30);
        uint64_t v18 = (uint64_t)v13;
LABEL_31:
        sub_10000B988(v18, (uint64_t *)&unk_1000CBC30);
        return 3;
      }
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
      uint64_t v19 = sub_1000A4380();
      if (!v20)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v18 = (uint64_t)v15;
        goto LABEL_31;
      }
      uint64_t v16 = 2;
      if (v19 != 0x7365676170 || v20 != 0xE500000000000000)
      {
        if (sub_1000A4D70()) {
          uint64_t v16 = 2;
        }
        else {
          uint64_t v16 = 3;
        }
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_10000B988((uint64_t)v15, (uint64_t *)&unk_1000CBC30);
      swift_bridgeObjectRelease();
      return v16;
    case 2:
      swift_bridgeObjectRelease();
      return 1;
    case 3:
      swift_bridgeObjectRelease();
      return 0;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      return 3;
    case 7:
      swift_bridgeObjectRelease();
      return 4;
    case 8:
      swift_bridgeObjectRelease();
      return 10;
    case 9:
      swift_bridgeObjectRelease();
      return 5;
    case 10:
      swift_bridgeObjectRelease();
      return 6;
    case 11:
      swift_bridgeObjectRelease();
      return 7;
    case 12:
    case 13:
      swift_bridgeObjectRelease();
      return 8;
    default:
      swift_bridgeObjectRelease();
      return 9;
  }
}

uint64_t sub_1000987E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a2)
  {
    uint64_t v6 = sub_1000A4820();
    uint64_t v7 = v5;
    if (v6 == 0xD000000000000010 && v5 == 0x80000001000AD6B0 || (sub_1000A4D70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = 1;
      goto LABEL_10;
    }
    if (v6 == 0xD000000000000016 && v7 == 0x80000001000AD6D0 || (sub_1000A4D70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = 2;
      goto LABEL_10;
    }
    if (v6 == 0xD000000000000011 && v7 == 0x80000001000AD6F0 || (sub_1000A4D70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = 3;
      goto LABEL_10;
    }
    if (v7)
    {
      if (v6 == 0x6C7070612E6D6F63 && v7 == 0xEF73656761702E65 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 4;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000011 && v7 == 0x80000001000AD690 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 5;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000015 && v7 == 0x80000001000ABD80 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 6;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000013 && v7 == 0x80000001000ABD60 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 7;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000016 && v7 == 0x80000001000ABD20 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 8;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000012 && v7 == 0x80000001000ABCE0 || (sub_1000A4D70() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = 9;
        goto LABEL_10;
      }
      if (v6 == 0xD000000000000013 && v7 == 0x80000001000AD670)
      {
        swift_bridgeObjectRelease();
LABEL_44:
        swift_bridgeObjectRelease();
        uint64_t v4 = 11;
        goto LABEL_10;
      }
      char v9 = sub_1000A4D70();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_44;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1000A42E0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a3, 1, v10) == 1) {
      uint64_t v4 = 10;
    }
    else {
      uint64_t v4 = 0;
    }
  }
LABEL_10:
  sub_10000B988(a3, &qword_1000CA3B0);
  return v4;
}

void *sub_100098C88(uint64_t a1)
{
  sub_100099B9C(a1, (uint64_t)v27);
  uint64_t v2 = v27[0];
  uint64_t v3 = v27[1];
  uint64_t v4 = (void *)v27[2];
  uint64_t v5 = v27[3];
  uint64_t v6 = v27[4];
  unsigned __int8 v7 = v28;
  sub_100099B9C(a1, (uint64_t)v29);
  if (v29[40] != 255)
  {
    sub_100092640((uint64_t)v29, (uint64_t)v30);
    sub_100095854(v24);
    sub_10003E7A4(v2, v3, v4, v5, v6, v7);
    Class isa = sub_1000A49F0().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100043B48((uint64_t)isa, 0x707954726F727265, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    uint64_t v10 = v25;
    uint64_t v11 = v26;
    sub_100046174(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    NSString v12 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_100043B48((uint64_t)v12, 0xD000000000000014, 0x80000001000AD650, v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    sub_100046174(v24, v25);
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    if (v16)
    {
      uint64_t v17 = v16;
      [v16 code];
      Class v18 = sub_1000A49F0().super.super.isa;
      char v19 = swift_isUniquelyReferenced_nonNull_native();
      sub_100043B48((uint64_t)v18, 0x646F43726F727265, 0xE900000000000065, v19);
      swift_bridgeObjectRelease();
      id v20 = [v17 domain];
      sub_1000A4800();

      NSString v21 = sub_1000A47C0();
      swift_bridgeObjectRelease();
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      sub_100043B48((uint64_t)v21, 0x6D6F44726F727265, 0xEB000000006E6961, v22);

      swift_bridgeObjectRelease();
    }
    sub_100043800(a1);
    sub_100041414((uint64_t)v24);
  }
  return &_swiftEmptyDictionarySingleton;
}

void *sub_100098F3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v60 = a6;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v63 = a3;
  uint64_t v10 = sub_1000A4460();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  __chkstk_darwin(v10);
  uint64_t v61 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008704(&qword_1000CA3B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  char v62 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = sub_1000A42E0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  sub_10001F904(a1, (uint64_t)v16, &qword_1000CA3B0);
  char v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v22(v16, 1, v17) == 1)
  {
    sub_10000B988((uint64_t)v16, &qword_1000CA3B0);
    if (a2)
    {
      id v23 = a2;
      sub_1000A4B50();
      uint64_t v24 = sub_1000A4B60();

      swift_bridgeObjectRelease();
      if (v24)
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          uint64_t v25 = sub_1000A4800();
          a7 = v26;
          unint64_t v27 = v25;
          swift_unknownObjectRelease();

          goto LABEL_10;
        }
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v27 = v60;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    unint64_t v27 = sub_10009BD7C(v20, a2);
    a7 = v28;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
LABEL_10:
  uint64_t v29 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v29 = v27 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    if (v22((char *)v21, 1, v17) == 1) {
      char v30 = sub_10009CC70(v27, a7);
    }
    else {
      char v30 = sub_10009C6AC(v27, a7, v21);
    }
    uint64_t v45 = v64;
    uint64_t v46 = v65;
    uint64_t v48 = (uint64_t)v62;
    uint64_t v47 = v63;
    sub_10009843C(v30, v27, a7);
    sub_10001F904(v21, v48, &qword_1000CA3B0);
    swift_bridgeObjectRetain();
    sub_1000987E4(v47, v45, v48);
    sub_100008704(&qword_1000CBC00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A6A50;
    *(void *)(inited + 32) = 0x54676E6972616873;
    *(void *)(inited + 40) = 0xEB00000000657079;
    *(NSNumber *)(inited + 48) = sub_1000A49F0();
    *(void *)(inited + 56) = 0x70704174736F68;
    *(void *)(inited + 64) = 0xE700000000000000;
    *(NSNumber *)(inited + 72) = sub_1000A49F0();
    unint64_t v50 = sub_10001FEF0(inited);
    uint64_t v51 = sub_100098C88(v46);
    return (void *)sub_100097C70((uint64_t)v51, v50);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v31 = v61;
    sub_1000A4440();
    uint64_t v32 = sub_1000A4450();
    int v33 = sub_1000A4A20();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      LODWORD(v65) = v33;
      long long v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v67 = v64;
      *(_DWORD *)long long v34 = 136315138;
      uint64_t v35 = sub_1000A48D0();
      uint64_t v37 = v36;
      if ((0x80000001000AD620 & 0x2000000000000000) != 0) {
        unint64_t v38 = (0x80000001000AD620 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v38 = 140;
      }
      if ((((unint64_t)"Fatal error" >> 61) & ((0x80000001000AD620 & 0xF00000000000000) >> 54 == 0)) != 0)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v43 = 0;
        unint64_t v44 = 0xE000000000000000;
      }
      else
      {
        uint64_t v39 = v35;
        while (sub_1000A48D0() != v39 || v40 != v37)
        {
          char v42 = sub_1000A4D70();
          swift_bridgeObjectRelease();
          if (v42) {
            goto LABEL_32;
          }
          if (v38 == (unint64_t)sub_1000A4860() >> 14) {
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
LABEL_32:
        swift_bridgeObjectRelease();
        sub_1000A48E0();
        uint64_t v43 = sub_1000A4830();
        unint64_t v44 = v53;
        swift_bridgeObjectRelease();
      }
      uint64_t v55 = v58;
      uint64_t v54 = v59;
      long long v56 = v61;
      os_log_type_t v57 = v65;
      uint64_t v66 = sub_10003CFA4(v43, v44, &v67);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v57, "%s: couldn't determine UTI", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v59);
    }
    return &_swiftEmptyDictionarySingleton;
  }
}

uint64_t sub_1000995AC(char a1, char a2)
{
  uint64_t v4 = sub_1000A4460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    return a1 == 1;
  }
  if ((a2 & 1) == 0)
  {
    sub_1000A4440();
    char v9 = sub_1000A4450();
    os_log_type_t v10 = sub_1000A4A20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "SPIAnalyticsEvent sharingMode is none but no error", v11, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return 2;
}

uint64_t sub_100099708(char a1, char a2)
{
  uint64_t v4 = sub_1000A4460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      uint64_t result = 2;
      break;
    default:
      if ((a2 & 1) == 0)
      {
        sub_1000A4440();
        char v9 = sub_1000A4450();
        os_log_type_t v10 = sub_1000A4A20();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "SPIAnalyticsEvent sharePermission is none but no error", v11, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      uint64_t result = 3;
      break;
  }
  return result;
}

uint64_t sub_100099894(uint64_t result, uint64_t a2)
{
  if (!(_BYTE)result)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2)
  {
    __break(1u);
    goto LABEL_17;
  }
  int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 == 1)
  {
    if (v2 != 1)
    {
      if (*(unsigned char *)(a2 + 33) == 1)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      int v4 = 0;
      goto LABEL_13;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  if (v2 == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int v4 = *(unsigned __int8 *)(a2 + 33);
LABEL_13:
  swift_bridgeObjectRelease();
  if (v3 != v4) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_100099950(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000A4460();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v18 - v9;
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      if ((a2 & 1) == 0)
      {
        sub_1000A4440();
        uint64_t v12 = sub_1000A4450();
        os_log_type_t v13 = sub_1000A4A20();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "SPIAnalyticsEvent unknown user share status but no error", v14, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
      goto LABEL_12;
    case 1:
      return result;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      uint64_t result = 2;
      break;
    case 4:
      uint64_t result = 3;
      break;
    default:
      sub_1000A4440();
      uint64_t v15 = sub_1000A4450();
      os_log_type_t v16 = sub_1000A4A20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "SPIAnalyticsEvent unknown CSUICurrentUserCKShareStatus", v17, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_12:
      uint64_t result = 4;
      break;
  }
  return result;
}

uint64_t sub_100099B94()
{
  return swift_release();
}

uint64_t sub_100099B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008704(&qword_1000CB378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ShareSaveStatus()
{
  return &type metadata for ShareSaveStatus;
}

ValueMetadata *type metadata accessor for FolderShareStage()
{
  return &type metadata for FolderShareStage;
}

uint64_t getEnumTagSinglePayload for SaveStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100099CDCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 3;
  if (v8 <= 3) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SaveStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100099DC4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_100099DEC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_100099E08(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SaveStage()
{
  return &type metadata for SaveStage;
}

uint64_t getEnumTagSinglePayload for AddAddressesStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AddAddressesStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100099F8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddAddressesStage()
{
  return &type metadata for AddAddressesStage;
}

uint64_t getEnumTagSinglePayload for CreateOrLoadStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CreateOrLoadStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009A120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateOrLoadStage()
{
  return &type metadata for CreateOrLoadStage;
}

uint64_t destroy for ShareAddress()
{
  return sub_10003E620();
}

uint64_t _s13SPIHelper_iOS12ShareAddressOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10003E618();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ShareAddress(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10003E618();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10003E620();
  return a1;
}

__n128 initializeWithTake for ShareAddress(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ShareAddress(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10003E620();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareAddress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10009A2F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_10009A300(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ShareAddress()
{
  return &type metadata for ShareAddress;
}

uint64_t getEnumTagSinglePayload for SharingStage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharingStage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009A478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingStage()
{
  return &type metadata for SharingStage;
}

unsigned char *_s13SPIHelper_iOS13ExecutionModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009A57CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutionMode()
{
  return &type metadata for ExecutionMode;
}

uint64_t sub_10009A5B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009A5C8()
{
  return sub_10003CBAC();
}

unint64_t sub_10009A5DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = 0x10000000000;
  if (!v3) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = 0x1000000000000;
  if (!v3) {
    uint64_t v1 = 0;
  }
  return v3 | ((unint64_t)v3 << 8) | ((unint64_t)v3 << 16) | ((unint64_t)v3 << 24) | ((unint64_t)v3 << 32) | v0 | v1;
}

uint64_t sub_10009A944@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009A958()
{
  return sub_10003CBAC();
}

uint64_t sub_10009A96C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009A980()
{
  return sub_10003CBAC();
}

uint64_t sub_10009A994@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009A9A8()
{
  return sub_10003CBAC();
}

uint64_t sub_10009A9BC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10009AA3C()
{
  return sub_1000A4570();
}

uint64_t sub_10009AAB8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AACC()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AAE0(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 3:
      if (v2 != 3) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 4:
      if (v2 != 4) {
        goto LABEL_11;
      }
      goto LABEL_9;
    case 5:
      if (v2 != 5) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 2) >= 4) {
        uint64_t result = (((*a1 & 1) == 0) ^ v2) & 1;
      }
      else {
LABEL_11:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_10009AB8C()
{
  unint64_t result = qword_1000CBC08;
  if (!qword_1000CBC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC08);
  }
  return result;
}

unint64_t sub_10009ABE4()
{
  unint64_t result = qword_1000CBC10;
  if (!qword_1000CBC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC10);
  }
  return result;
}

unint64_t sub_10009AC3C()
{
  unint64_t result = qword_1000CBC18;
  if (!qword_1000CBC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC18);
  }
  return result;
}

unint64_t sub_10009AC94()
{
  unint64_t result = qword_1000CBC20;
  if (!qword_1000CBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC20);
  }
  return result;
}

unint64_t sub_10009ACEC()
{
  unint64_t result = qword_1000CBC28;
  if (!qword_1000CBC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC28);
  }
  return result;
}

uint64_t sub_10009AD40@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AD68()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AD98@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009ADAC()
{
  return sub_10003CBAC();
}

uint64_t sub_10009ADC8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009ADF0()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AE18@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AE40()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AE68@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AE90()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AEB8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AEE0()
{
  return sub_10003CBAC();
}

uint64_t sub_10009AF10@<X0>(unsigned char *a1@<X8>)
{
  return sub_10003CB30(a1);
}

uint64_t sub_10009AF38()
{
  return sub_10003CBAC();
}

uint64_t getEnumTagSinglePayload for SharingType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7)
  {
    unsigned int v2 = a2 + 9;
    if (a2 + 9 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 9;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10009B010);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 8) {
    unsigned int v8 = v7 - 7;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SharingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 9;
  if (a3 + 9 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF7) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v7 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10009B0F8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_10009B120(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 8) {
    return v1 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *sub_10009B134(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingType()
{
  return &type metadata for SharingType;
}

uint64_t sub_10009B154(char a1)
{
  return byte_1000A93BE[a1];
}

BOOL sub_10009B168(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 8;
  BOOL v5 = v3 == 9;
  int v6 = v3 & 0xFE;
  BOOL v8 = v3 == 7 || v2 == v3;
  if (v2 == 7) {
    BOOL v8 = 1;
  }
  if (v6 == 8) {
    BOOL v8 = 0;
  }
  if (v2 == 9) {
    BOOL v8 = v5;
  }
  if (v2 == 8) {
    return v4;
  }
  else {
    return v8;
  }
}

uint64_t sub_10009B1B8()
{
  return *(void *)&aUnspeciNotes_0[8 * *v0];
}

uint64_t sub_10009B1DC(char a1)
{
  if (a1 == 8) {
    return 0x6E776F6E6B6E752ELL;
  }
  if (a1 == 9) {
    return 0x6E656D75636F642ELL;
  }
  sub_1000A4C40(19);
  swift_bridgeObjectRelease();
  uint64_t v3 = 8 * a1;
  v4._countAndFlagsBits = *(void *)&aUnspeciNotes_0[v3];
  v4._object = *(void **)&aFied_0[v3];
  sub_1000A4880(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  sub_1000A4880(v5);
  return 0xD000000000000010;
}

uint64_t sub_10009B2CC()
{
  return sub_10009B1DC(*v0);
}

uint64_t sub_10009B2D4(char a1)
{
  return *(void *)&aFolder_2[8 * a1];
}

uint64_t sub_10009B2F4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_10009B2D4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10009B2D4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000A4D70();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10009B380()
{
  char v1 = *v0;
  sub_1000A4E10();
  sub_10009B2D4(v1);
  sub_1000A4840();
  swift_bridgeObjectRelease();
  return sub_1000A4E30();
}

uint64_t sub_10009B3E4()
{
  sub_10009B2D4(*v0);
  sub_1000A4840();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10009B438()
{
  char v1 = *v0;
  sub_1000A4E10();
  sub_10009B2D4(v1);
  sub_1000A4840();
  swift_bridgeObjectRelease();
  return sub_1000A4E30();
}

uint64_t sub_10009B498@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10009D7D0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10009B4C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009B2D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10009B4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0xD000000000000018;
  uint64_t v5 = sub_1000A4340();
  __chkstk_darwin(v5 - 8);
  unint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000A4460();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v61 = (char *)&v54 - v10;
  uint64_t v11 = sub_100008704((uint64_t *)&unk_1000CBC30);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v54 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_1000A4420();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  id v31 = (char *)&v54 - v30;
  if (a1 == 0x726464756F6C6369 && a2 == 0xEB00000000657669) {
    return 0xD00000000000001BLL;
  }
  uint64_t v55 = v29;
  uint64_t v56 = v28;
  uint64_t v57 = v27;
  uint64_t v58 = v26;
  if (sub_1000A4D70()) {
    return 0xD00000000000001BLL;
  }
  unint64_t v32 = 0xD000000000000014;
  if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1000A4D70() & 1) != 0) {
    return v32;
  }
  if ((a1 != 0x7265646E696D6572 || a2 != 0xE900000000000073) && (sub_1000A4D70() & 1) == 0)
  {
    unint64_t v32 = 0xD000000000000019;
    if (a1 == 0xD000000000000011 && a2 == 0x80000001000AD730 || (sub_1000A4D70() & 1) != 0) {
      return v32;
    }
    if ((a1 != 0x6D726F6665657266 || a2 != 0xE800000000000000) && (sub_1000A4D70() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1000A4430();
      uint64_t v34 = v57;
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      if (v35(v19, 1, v58) == 1)
      {
        sub_10000B988((uint64_t)v19, (uint64_t *)&unk_1000CBC30);
        swift_bridgeObjectRetain();
        sub_1000A4330();
        uint64_t v36 = v58;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v14, 1, 1, v58);
        sub_1000A43A0();
        if (v35(v17, 1, v36) == 1)
        {
          sub_10000B988((uint64_t)v17, (uint64_t *)&unk_1000CBC30);
          swift_bridgeObjectRetain();
          return a1;
        }
        else
        {
          uint64_t v44 = v56;
          (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v56, v17, v36);
          uint64_t v45 = v59;
          sub_1000A4440();
          uint64_t v46 = v55;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v55, v44, v36);
          uint64_t v47 = sub_1000A4450();
          os_log_type_t v48 = sub_1000A4A40();
          if (os_log_type_enabled(v47, v48))
          {
            long long v49 = (uint8_t *)swift_slowAlloc();
            uint64_t v65 = swift_slowAlloc();
            *(_DWORD *)long long v49 = 136315138;
            uint64_t v50 = sub_1000A4350();
            uint64_t v64 = sub_10003CFA4(v50, v51, &v65);
            sub_1000A4BC0();
            swift_bridgeObjectRelease();
            uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
            v52(v46, v58);
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "utiOfItem(fromCKShareType)--type from filename extension: %s", v49, 0xCu);
            swift_arrayDestroy();
            uint64_t v36 = v58;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
            v52(v46, v36);
          }

          (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v63);
          uint64_t v53 = v56;
          uint64_t v4 = sub_1000A4350();
          v52(v53, v36);
        }
      }
      else
      {
        uint64_t v37 = v58;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v19, v58);
        sub_1000A43B0();
        char v38 = sub_1000A4410();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v25, v37);
        uint64_t v40 = v61;
        sub_1000A4440();
        long long v41 = sub_1000A4450();
        os_log_type_t v42 = sub_1000A4A40();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v43 = 67109120;
          LODWORD(v65) = v38 & 1;
          sub_1000A4BC0();
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "utiOfItem(fromCKShareType)--ckShareType is a UTType. Is file system item: %{BOOL}d", v43, 8u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
        uint64_t v4 = sub_1000A4350();
        v39(v31, v58);
      }
    }
  }
  return v4;
}

unint64_t sub_10009BD7C(char *a1, void *a2)
{
  id v41 = a2;
  uint64_t v3 = sub_1000A42E0();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  char v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_1000A4460();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_1000A4180();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008704(&qword_1000CA678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A6410;
  *(void *)(inited + 32) = NSURLTypeIdentifierKey;
  uint64_t v18 = NSURLTypeIdentifierKey;
  uint64_t v19 = sub_10003DA44(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.evictionSafeResourceValues(forKeys:)((uint64_t)v19, (uint64_t)v16);
  char v38 = a1;
  uint64_t v43 = v7;
  uint64_t v20 = v42;
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1000A4130();
  if (!v22)
  {
    uint64_t v37 = v16;
    uint64_t v27 = v12;
    sub_1000A4440();
    uint64_t v28 = v43;
    uint64_t v29 = v3;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v43, v38, v3);
    uint64_t v30 = sub_1000A4450();
    os_log_type_t v31 = sub_1000A4A20();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v44[0] = v36;
      char v38 = v27;
      *(_DWORD *)unint64_t v32 = 136315138;
      uint64_t v35 = v32 + 4;
      sub_10009CC18();
      uint64_t v33 = sub_1000A4D50();
      uint64_t v45 = sub_10003CFA4(v33, v34, v44);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v29);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "resourceValues(forKeys:) returned nil for typeIdentifier (UTI) for URL: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v40);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v37, v13);
    if (v41)
    {
      id v24 = v41;
      sub_1000A4B50();
      uint64_t v25 = sub_1000A4B60();

      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v45 = v25;
        sub_100008704(&qword_1000CA3D0);
        if (swift_dynamicCast())
        {
          unint64_t v23 = sub_10009B4F4(v44[0], v44[1]);

          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
    return 0;
  }
  unint64_t v23 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v23;
}

uint64_t sub_10009C4C4()
{
  uint64_t v0 = sub_1000A4420();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A43E0();
  char v4 = sub_1000A4400();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4) {
    return 0;
  }
  sub_1000A4370();
  char v7 = sub_1000A4400();
  v5(v3, v0);
  if (v7) {
    return 3;
  }
  sub_1000A4360();
  char v8 = sub_1000A4400();
  v5(v3, v0);
  if (v8) {
    return 2;
  }
  sub_1000A43C0();
  char v9 = sub_1000A4400();
  v5(v3, v0);
  if (v9) {
    return 4;
  }
  sub_1000A43D0();
  char v10 = sub_1000A4400();
  v5(v3, v0);
  if (v10) {
    return 5;
  }
  sub_1000A4390();
  char v11 = sub_1000A4400();
  v5(v3, v0);
  if (v11) {
    return 6;
  }
  else {
    return 1;
  }
}

uint64_t sub_10009C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v5 = sub_1000A4340();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008704((uint64_t *)&unk_1000CBC30);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v32 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = sub_1000A4420();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v32 - v22;
  uint64_t v24 = sub_1000A42E0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(a3, 1, v24) == 1)
  {
    uint64_t v25 = v33;
    if (v33 == 0xD000000000000014 && a2 == 0x80000001000AC800 || (sub_1000A4D70() & 1) != 0)
    {
      return 7;
    }
    else if (v25 == 0xD000000000000016 && a2 == 0x80000001000AD710 || (sub_1000A4D70() & 1) != 0)
    {
      return 8;
    }
    else if (v25 == 0xD000000000000018 && a2 == 0x80000001000AC7E0 || (sub_1000A4D70() & 1) != 0)
    {
      return 9;
    }
    else if (v25 == 0xD000000000000019 && a2 == 0x80000001000AC7C0 || (sub_1000A4D70() & 1) != 0)
    {
      return 10;
    }
    else if (v25 == 0x6C656D726163 && a2 == 0xE600000000000000)
    {
      return 11;
    }
    else
    {
      char v29 = sub_1000A4D70();
      BOOL v31 = v25 == 0xD000000000000018 && a2 == 0x80000001000AC7A0;
      uint64_t v26 = 11;
      if ((v29 & 1) == 0
        && !v31
        && (sub_1000A4D70() & 1) == 0
        && (v25 != 0x6D726F6665657266 || a2 != 0xE800000000000000))
      {
        if (sub_1000A4D70()) {
          return 11;
        }
        else {
          return 12;
        }
      }
    }
  }
  else
  {
    unint64_t v32 = v7;
    swift_bridgeObjectRetain();
    sub_1000A4430();
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v27(v16, 1, v17) == 1)
    {
      sub_10000B988((uint64_t)v16, (uint64_t *)&unk_1000CBC30);
      swift_bridgeObjectRetain();
      sub_1000A4330();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v17);
      sub_1000A43A0();
      if (v27(v14, 1, v17) == 1)
      {
        sub_10000B988((uint64_t)v14, (uint64_t *)&unk_1000CBC30);
        return 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v14, v17);
        uint64_t v26 = sub_10009C4C4();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
      uint64_t v26 = sub_10009C4C4();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    }
  }
  return v26;
}

unint64_t sub_10009CC18()
{
  unint64_t result = qword_1000CA680;
  if (!qword_1000CA680)
  {
    sub_1000A42E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA680);
  }
  return result;
}

uint64_t sub_10009CC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000A4340();
  __chkstk_darwin(v4 - 8);
  uint64_t v39 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v6 - 8);
  char v38 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008704((uint64_t *)&unk_1000CBC30);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v37 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = sub_1000A4420();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)v37 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v27 = (char *)v37 - v26;
  if (a1 == 0x726464756F6C6369 && a2 == 0xEB00000000657669) {
    return 1;
  }
  uint64_t v28 = v25;
  uint64_t v29 = v24;
  if (sub_1000A4D70()) {
    return 1;
  }
  if (a1 == 0x737265626D756ELL && a2 == 0xE700000000000000 || (sub_1000A4D70() & 1) != 0) {
    return 2;
  }
  if (a1 == 0x7365676170 && a2 == 0xE500000000000000 || (sub_1000A4D70() & 1) != 0) {
    return 1;
  }
  if (a1 == 0x65746F6E79656BLL && a2 == 0xE700000000000000 || (sub_1000A4D70() & 1) != 0) {
    return 3;
  }
  if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1000A4D70() & 1) != 0) {
    return 7;
  }
  if (a1 == 0xD000000000000016 && a2 == 0x80000001000AD710 || (sub_1000A4D70() & 1) != 0) {
    return 8;
  }
  if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073
    || (sub_1000A4D70() & 1) != 0
    || a1 == 0xD000000000000018 && a2 == 0x80000001000AC7E0
    || (sub_1000A4D70() & 1) != 0)
  {
    return 9;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x80000001000AD730 || (sub_1000A4D70() & 1) != 0) {
    return 10;
  }
  if (a1 == 0x6D726F6665657266 && a2 == 0xE800000000000000 || (sub_1000A4D70() & 1) != 0) {
    return 11;
  }
  swift_bridgeObjectRetain();
  sub_1000A4430();
  v37[0] = *(void *)(v28 + 48);
  v37[1] = v28 + 48;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v37[0])(v16, 1, v29) == 1)
  {
    sub_10000B988((uint64_t)v16, (uint64_t *)&unk_1000CBC30);
    swift_bridgeObjectRetain();
    sub_1000A4330();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v11, 1, 1, v29);
    sub_1000A43A0();
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v37[0])(v14, 1, v29) == 1)
    {
      sub_10000B988((uint64_t)v14, (uint64_t *)&unk_1000CBC30);
      return 12;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v20, v14, v29);
      uint64_t v30 = sub_10009C4C4();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v29);
    }
  }
  else
  {
    uint64_t v32 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v16, v29);
    sub_1000A43B0();
    char v33 = sub_1000A4410();
    unint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v23, v29);
    if (v33)
    {
      uint64_t v30 = sub_10009C4C4();
    }
    else
    {
      uint64_t v35 = sub_1000A42E0();
      uint64_t v36 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v38, 1, 1, v35);
      uint64_t v30 = sub_10009C6AC(a1, a2, v36);
      sub_10000B988(v36, &qword_1000CA3B0);
    }
    v34(v27, v29);
  }
  return v30;
}

ValueMetadata *type metadata accessor for UTISupport()
{
  return &type metadata for UTISupport;
}

uint64_t getEnumTagSinglePayload for UTISupport.SharingItemType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UTISupport.SharingItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009D554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTISupport.SharingItemType()
{
  return &type metadata for UTISupport.SharingItemType;
}

uint64_t getEnumTagSinglePayload for CloudKitAppType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CloudKitAppType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009D6E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudKitAppType()
{
  return &type metadata for CloudKitAppType;
}

unint64_t sub_10009D724()
{
  unint64_t result = qword_1000CBC40;
  if (!qword_1000CBC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC40);
  }
  return result;
}

unint64_t sub_10009D77C()
{
  unint64_t result = qword_1000CBC48;
  if (!qword_1000CBC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBC48);
  }
  return result;
}

uint64_t sub_10009D7D0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000C1BD8;
  v6._object = a2;
  unint64_t v4 = sub_1000A4D40(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

uint64_t sub_10009D81C(uint64_t a1)
{
  uint64_t v104 = sub_1000A4460();
  uint64_t v2 = *(void *)(v104 - 8);
  uint64_t v3 = __chkstk_darwin(v104);
  uint64_t v5 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v105 = (char *)v85 - v6;
  uint64_t v7 = sub_100008704(&qword_1000CA3B0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v101 = (uint64_t)v85 - v11;
  uint64_t v87 = *(void *)(a1 + 16);
  if (!v87)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_69:
    swift_getKeyPath();
    swift_getKeyPath();
    id v107 = v14;
    swift_retain();
    return sub_1000A4570();
  }
  uint64_t v86 = a1 + 32;
  uint64_t v103 = (void (**)(char *, uint64_t))(v2 + 8);
  v85[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = _swiftEmptyArrayStorage;
  *(void *)&long long v15 = 136315394;
  long long v95 = v15;
  uint64_t v94 = (char *)&type metadata for Any + 8;
  *(void *)&long long v15 = 67109120;
  long long v98 = v15;
  uint64_t v97 = v5;
  uint64_t v102 = v10;
  while (1)
  {
    uint64_t v17 = (uint64_t *)(v86 + 16 * v12);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    if ((v19 & 0x1000000000000000) != 0) {
      Swift::Int v20 = sub_1000A48A0();
    }
    else {
      Swift::Int v20 = sub_1000A48B0();
    }
    Swift::Int v21 = v20;
    id v22 = objc_allocWithZone((Class)NSDataDetector);
    id v107 = 0;
    swift_bridgeObjectRetain();
    id v23 = [v22 initWithTypes:32 error:&v107];
    if (!v23)
    {
      id v83 = v107;
      sub_1000A4240();

      swift_willThrow();
      goto LABEL_74;
    }
    uint64_t v24 = v23;
    id v25 = v107;
    NSString v26 = sub_1000A47C0();
    id v100 = v24;
    id v27 = objc_msgSend(v24, "matchesInString:options:range:", v26, 0, 0, v21);

    unint64_t v99 = sub_10009EA2C();
    unint64_t v28 = sub_1000A4910();

    swift_bridgeObjectRetain();
    uint64_t v91 = v18;
    unint64_t v29 = (unint64_t)sub_10009EA6C(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v92 = v19;
    uint64_t v90 = v14;
    uint64_t v89 = v12;
    uint64_t v93 = v13;
    uint64_t v96 = HIBYTE(v19) & 0xF;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1000A4CE0();
      if (v30)
      {
LABEL_10:
        uint64_t v31 = 4;
        while (1)
        {
          if ((v29 & 0xC000000000000001) != 0) {
            id v32 = (id)sub_1000A4C60();
          }
          else {
            id v32 = *(id *)(v29 + 8 * v31);
          }
          char v33 = v32;
          uint64_t v34 = v31 - 3;
          if (__OFADD__(v31 - 4, 1))
          {
            __break(1u);
LABEL_71:
            __break(1u);
          }
          id v35 = [v32 URL];
          if (v35)
          {
            uint64_t v36 = v35;
            sub_1000A42A0();

            uint64_t v37 = sub_1000A42E0();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 0, 1, v37);
          }
          else
          {
            uint64_t v37 = sub_1000A42E0();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 1, 1, v37);
          }
          uint64_t v38 = (uint64_t)v10;
          uint64_t v39 = v101;
          sub_10000B920(v38, v101);
          sub_1000A42E0();
          uint64_t v40 = *(void *)(v37 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v37) == 1)
          {
            sub_10000E36C(v39);
            char v41 = 0;
          }
          else
          {
            uint64_t v42 = sub_1000A42D0();
            uint64_t v43 = v39;
            uint64_t v44 = v42;
            uint64_t v46 = v45;
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v37);
            if (v46)
            {
              if (v44 == 0x6F746C69616DLL && v46 == 0xE600000000000000)
              {
                swift_bridgeObjectRelease();
                char v41 = 1;
              }
              else
              {
                char v41 = sub_1000A4D70();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              char v41 = 0;
            }
          }
          sub_1000A4440();
          uint64_t v47 = sub_1000A4450();
          os_log_type_t v48 = sub_1000A4A40();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = v98;
            *(_DWORD *)(v49 + 4) = v41 & 1;
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "isValid(address...) is link, valid email: %{BOOL}d", (uint8_t *)v49, 8u);
            swift_slowDealloc();
          }

          (*v103)(v105, v104);
          if (v41) {
            break;
          }
          ++v31;
          uint64_t v10 = v102;
          if (v34 == v30) {
            goto LABEL_30;
          }
        }

        swift_bridgeObjectRelease_n();
        uint64_t v74 = v91;
        unint64_t v75 = v92;
        uint64_t v76 = sub_10009E36C();
        uint64_t v10 = v102;
        if (v76[2])
        {
          uint64_t v74 = v76[4];
          unint64_t v77 = v76[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v78 = 0;
          unint64_t v75 = v77;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v78 = 0;
        }
        uint64_t v14 = v90;
        uint64_t v16 = v89;
        uint64_t v13 = v93;
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_10;
      }
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    uint64_t v50 = (void *)((v92 & 0x1000000000000000) != 0 ? sub_1000A48A0() : sub_1000A48B0());
    id v100 = v50;
    unint64_t v51 = v97;
    uint64_t v52 = v93;
    id v53 = objc_allocWithZone((Class)NSDataDetector);
    id v107 = 0;
    id v54 = [v53 initWithTypes:2048 error:&v107];
    if (!v54) {
      break;
    }
    uint64_t v55 = v54;
    id v56 = v107;
    NSString v57 = sub_1000A47C0();
    id v58 = objc_msgSend(v55, "matchesInString:options:range:", v57, 0, 0, v100);

    unint64_t v59 = sub_1000A4910();
    swift_bridgeObjectRetain();
    unint64_t v60 = (unint64_t)sub_10009EA6C(v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v93 = v52;
    id v88 = v55;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1000A4CE0();
      if (!v61) {
        goto LABEL_3;
      }
LABEL_36:
      unint64_t v99 = v60 & 0xC000000000000001;
      uint64_t v62 = 4;
      uint64_t v96 = v60;
      while (1)
      {
        if (v99) {
          id v63 = (id)sub_1000A4C60();
        }
        else {
          id v63 = *(id *)(v60 + 8 * v62);
        }
        uint64_t v64 = v63;
        uint64_t v65 = v62 - 3;
        if (__OFADD__(v62 - 4, 1)) {
          goto LABEL_71;
        }
        if ([v63 range]) {
          BOOL v67 = 0;
        }
        else {
          BOOL v67 = v66 == v100;
        }
        int v68 = v67;
        sub_1000A4440();
        os_log_type_t v69 = sub_1000A4450();
        os_log_type_t v70 = sub_1000A4A40();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = swift_slowAlloc();
          id v107 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v71 = v95;
          uint64_t v106 = 2048;
          type metadata accessor for CheckingType(0);
          uint64_t v72 = sub_1000A4810();
          *(void *)(v71 + 4) = sub_10003CFA4(v72, v73, (uint64_t *)&v107);
          unint64_t v51 = v97;
          swift_bridgeObjectRelease();
          *(_WORD *)(v71 + 12) = 1024;
          *(_DWORD *)(v71 + 14) = v68;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "isValid(address...) is %s, valid: %{BOOL}d", (uint8_t *)v71, 0x12u);
          swift_arrayDestroy();
          unint64_t v60 = v96;
          swift_slowDealloc();
          uint64_t v10 = v102;
          swift_slowDealloc();
        }

        (*v103)(v51, v104);
        if (v68) {
          break;
        }
        ++v62;
        if (v65 == v61) {
          goto LABEL_3;
        }
      }

      swift_bridgeObjectRelease_n();
      char v78 = 1;
      uint64_t v14 = v90;
      uint64_t v16 = v89;
      unint64_t v75 = v92;
      uint64_t v13 = v93;
      uint64_t v74 = v91;
LABEL_57:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_10009E7F8(0, v14[2] + 1, 1, v14);
      }
      unint64_t v80 = v14[2];
      unint64_t v79 = v14[3];
      if (v80 >= v79 >> 1) {
        uint64_t v14 = sub_10009E7F8((void *)(v79 > 1), v80 + 1, 1, v14);
      }
      v14[2] = v80 + 1;
      id v81 = &v14[3 * v80];
      v81[4] = v74;
      v81[5] = v75;
      *((unsigned char *)v81 + 48) = v78;
      goto LABEL_4;
    }
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v61) {
      goto LABEL_36;
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v90;
    uint64_t v16 = v89;
    uint64_t v13 = v93;
LABEL_4:
    uint64_t v12 = v16 + 1;
    if (v12 == v87)
    {
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
  }
  id v84 = v107;
  sub_1000A4240();

  swift_willThrow();
LABEL_74:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_10009E36C()
{
  uint64_t v0 = sub_1000A4460();
  __chkstk_darwin(v0);
  NSString v1 = sub_1000A47C0();
  id v2 = objc_allocWithZone((Class)NSRegularExpression);
  id v3 = sub_10009E71C(0xD00000000000002FLL, 0x80000001000AD7A0, 1);
  uint64_t v4 = sub_1000A4850();
  NSString v5 = sub_1000A47C0();
  id v6 = objc_msgSend(v3, "matchesInString:options:range:", v5, 1, 0, v4);

  sub_10009EA2C();
  unint64_t v7 = sub_1000A4910();

  id v8 = v1;
  uint64_t v9 = sub_10009EBFC(v7, v8);
  swift_bridgeObjectRelease();

  return v9;
}

id sub_10009E71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_1000A47C0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_1000A4240();

    swift_willThrow();
  }
  return v6;
}

void *sub_10009E7F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008704(&qword_1000CBC58);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10009EE84(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10009E91C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008704(&qword_1000CBBD8);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009ED90(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_10009EA2C()
{
  unint64_t result = qword_1000CBC50;
  if (!qword_1000CBC50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CBC50);
  }
  return result;
}

void *sub_10009EA6C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v11 = v1;
      unint64_t v3 = 0;
      unint64_t v4 = v1 & 0xC000000000000001;
      uint64_t v5 = v1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v12 = v1 & 0xC000000000000001;
      while (v4)
      {
        id v6 = (id)sub_1000A4C60();
LABEL_9:
        uint64_t v7 = v6;
        unint64_t v8 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        [v6 range];
        sub_1000A4A00();
        if (v9)
        {
        }
        else
        {
          sub_1000A4C80();
          sub_1000A4CA0();
          sub_1000A4CB0();
          sub_1000A4C90();
          unint64_t v1 = v11;
          unint64_t v4 = v12;
        }
        ++v3;
        if (v8 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v5 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1000A4CE0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(v1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10009EBFC(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    unint64_t result = (void *)sub_100096540(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    unint64_t v18 = v3;
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_1000A4C60();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      char v9 = v8;
      id v10 = objc_msgSend(v8, "range", v18);
      id v12 = objc_msgSend(a2, "substringWithRange:", v10, v11);
      uint64_t v13 = sub_1000A4800();
      uint64_t v15 = v14;

      unint64_t v3 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v3 >= v16 >> 1) {
        sub_100096540(v16 > 1, v3 + 1, 1);
      }
      ++v7;
      _swiftEmptyArrayStorage[2] = v3 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v3];
      v17[4] = v13;
      v17[5] = v15;
      if (v5 == v7) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1000A4CE0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10009ED90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

uint64_t sub_10009EE84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000A4D20();
  __break(1u);
  return result;
}

uint64_t sub_10009EF7C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();

  return swift_release();
}

uint64_t sub_10009EFF4()
{
  return sub_10009F044();
}

uint64_t sub_10009F008()
{
  return sub_10009F044();
}

uint64_t sub_10009F01C()
{
  return sub_10009F044();
}

uint64_t sub_10009F030()
{
  return sub_10009F044();
}

uint64_t sub_10009F044()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

void sub_10009F0B0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000A4460();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v38 - v11;
  if (!a1) {
    goto LABEL_12;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  char v41 = a1;
  id v13 = a1;
  swift_retain();
  sub_1000A4570();
  uint64_t v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel_accountID);
  if (*(void *)(v3 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel_accountID + 8)) {
    goto LABEL_12;
  }
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  id v40 = v13;
  id v15 = [v40 containerIdentifier];
  uint64_t v16 = sub_1000A4800();
  uint64_t v18 = v17;

  sub_1000A4800();
  uint64_t v19 = sub_1000A4820();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v16 == v19 && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_7;
  }
  char v22 = sub_1000A4D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_7:
    if (swift_weakLoadStrong())
    {
      uint64_t v23 = sub_1000A01A8();
      uint64_t v25 = v24;
      swift_release();
      if (v25)
      {
        uint64_t *v14 = v23;
        v14[1] = v25;
        swift_bridgeObjectRelease();
        sub_1000A4440();
        NSString v26 = sub_1000A4450();
        os_log_type_t v27 = sub_1000A4A40();
        if (os_log_type_enabled(v26, v27))
        {
          unint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "found accountID for URL", v28, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
LABEL_12:
        if (!a2) {
          return;
        }
        goto LABEL_13;
      }
      if (a2)
      {

LABEL_13:
        swift_getKeyPath();
        swift_getKeyPath();
        char v41 = a2;
        id v29 = a2;
        swift_retain();
        sub_1000A4570();
        return;
      }
      if (swift_weakLoadStrong())
      {
        uint64_t v30 = sub_10001EE0C();
        uint64_t v32 = v31;
        swift_release();
        uint64_t v34 = v38;
        uint64_t v33 = v39;
        if (v32)
        {
          uint64_t *v14 = v30;
          v14[1] = v32;
          swift_bridgeObjectRelease();
          sub_1000A4440();
          id v35 = sub_1000A4450();
          os_log_type_t v36 = sub_1000A4A40();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v37 = 0;
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "found accountID for an EDS account", v37, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
        }
        else
        {
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }

  if (a2) {
    goto LABEL_13;
  }
}

void sub_10009F4CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000A4460();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v39 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  id v9 = v46;
  if (v46)
  {
    id v10 = [objc_allocWithZone((Class)CKContainer) initWithContainerSetupInfo:v46];
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v10;
    swift_retain();
    sub_1000A4570();

    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  id v11 = v46;
  if (v46)
  {
    if (!*(void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel_accountID + 8))
    {
      id v30 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v46];
      swift_getKeyPath();
      swift_getKeyPath();
      id v46 = v30;
      swift_retain();
      sub_1000A4570();

      goto LABEL_16;
    }
    uint64_t v44 = v3;
    id v12 = objc_allocWithZone((Class)CKContainerOptions);
    swift_bridgeObjectRetain();
    id v13 = [v12 init];
    id v45 = v11;
    uint64_t v14 = v13;
    id v15 = objc_allocWithZone((Class)CKAccountOverrideInfo);
    NSString v16 = sub_1000A47C0();
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithAccountID:v16];

    [v14 setAccountOverrideInfo:v17];
    id v18 = objc_allocWithZone((Class)CKContainer);
    id v19 = [v18 initWithContainerID:v45 options:v14];
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v19;
    swift_retain();
    sub_1000A4570();
    sub_1000A4440();
    swift_retain_n();
    uint64_t v20 = sub_1000A4450();
    int v21 = sub_1000A4A40();
    if (!os_log_type_enabled(v20, (os_log_type_t)v21))
    {

      swift_release_n();
LABEL_15:
      uint64_t v3 = v44;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v2);
      goto LABEL_16;
    }
    int v40 = v21;
    id v41 = v14;
    os_log_t v42 = v20;
    id v43 = v17;
    char v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v48 = v23;
    *(_DWORD *)char v22 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();
    swift_release();
    id v24 = v46;
    v39[1] = v23;
    if (v46
      && (id v25 = [v46 options],
          v24,
          id v24 = [v25 accountOverrideInfo],
          v25,
          v24))
    {
      id v26 = [v24 accountID];

      os_log_type_t v27 = v22;
      if (v26)
      {
        id v24 = (id)sub_1000A4800();
        uint64_t v29 = v28;

LABEL_14:
        id v46 = v24;
        uint64_t v47 = v29;
        sub_100008704(&qword_1000CA880);
        uint64_t v31 = sub_1000A4810();
        id v46 = (id)sub_10003CFA4(v31, v32, &v48);
        sub_1000A4BC0();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v33 = v42;
        _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v40, "replaceContainer container.options.accountOverrideInfo.accountID: %s", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_15;
      }
      id v24 = 0;
    }
    else
    {
      os_log_type_t v27 = v22;
    }
    uint64_t v29 = 0;
    goto LABEL_14;
  }
LABEL_16:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  id v34 = v46;

  if (!v34)
  {
    sub_1000A4440();
    id v35 = sub_1000A4450();
    uint64_t v36 = sub_1000A4A20();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "replaceContainer throwing as it didn't build a container", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_100008C08();
    swift_allocError();
    *(void *)uint64_t v38 = 0xD000000000000012;
    *(void *)(v38 + 8) = 0x80000001000AD900;
    *(_OWORD *)(v38 + 16) = xmmword_1000A9580;
    *(void *)(v38 + 32) = 0x80000001000AAAB0;
    *(unsigned char *)(v38 + 40) = 10;
    swift_willThrow();
  }
}

void sub_10009FBE8(void *a1)
{
  if (!a1 || !swift_weakLoadStrong()) {
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  swift_retain();
  sub_1000A4560();
  swift_release();
  swift_release();
  swift_release();
  if ([v2 publicPermission] != (id)1) {
    goto LABEL_21;
  }
  p_name = &stru_1000C8FF8.name;
  id v4 = [v2 participants];
  sub_10001F798(0, &qword_1000CB098);
  unint64_t v5 = sub_1000A4910();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000A4CE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_21:
    [v2 publicPermission];
    swift_release();

    return;
  }
  id v7 = [v2 participants];
  unint64_t v8 = sub_1000A4910();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000A4CE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_55;
    }
    id v10 = v2;
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)sub_1000A4C60();
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      id v13 = v12;
      if ([v12 role] == (id)1 || objc_msgSend(v13, "permission") != (id)2)
      {
      }
      else
      {
        sub_1000A4C80();
        sub_1000A4CA0();
        sub_1000A4CB0();
        sub_1000A4C90();
      }
    }
    swift_bridgeObjectRelease();
    id v2 = v10;
    p_name = (char **)(&stru_1000C8FF8 + 8);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_42;
    }
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v14 = _swiftEmptyArrayStorage[2];
    goto LABEL_27;
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000A4CE0();
  swift_release();
LABEL_27:
  swift_release();
  id v15 = objc_msgSend(v2, p_name[169]);
  unint64_t v16 = sub_1000A4910();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000A4CE0();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_29:
      id v22 = v2;
      if (v17 >= 1)
      {
        for (uint64_t j = 0; j != v17; ++j)
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v19 = (id)sub_1000A4C60();
          }
          else {
            id v19 = *(id *)(v16 + 8 * j + 32);
          }
          uint64_t v20 = v19;
          if ([v19 role] == (id)1 || objc_msgSend(v20, "permission") != (id)3)
          {
          }
          else
          {
            sub_1000A4C80();
            sub_1000A4CA0();
            sub_1000A4CB0();
            sub_1000A4C90();
          }
        }
        swift_bridgeObjectRelease();
        id v2 = v22;
        goto LABEL_45;
      }
LABEL_55:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
LABEL_45:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000A4CE0();
    swift_release();
  }
  else
  {
    uint64_t v21 = _swiftEmptyArrayStorage[2];
  }
  swift_release();
  if (v14 <= 0 || v21 < 1)
  {
    swift_release();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1000A4560();
    swift_release();

    swift_release();
    swift_release();
  }
}

uint64_t sub_1000A0134()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000A01A8()
{
  uint64_t v24 = sub_1000A4460();
  uint64_t v0 = *(void *)(v24 - 8);
  uint64_t v1 = __chkstk_darwin(v24);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  unint64_t v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_100008704(&qword_1000CA3B0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000A42E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000E36C((uint64_t)v8);
    sub_1000A4440();
    id v13 = sub_1000A4450();
    os_log_type_t v14 = sub_1000A4A20();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "can't get the user iCloud account ID without a document/folder sharing URL--may get here from SPI with no fileURL, will try userICloudEDSAccountID then fall back on signed-in account w. accountID == nil", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v24);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v16 = sub_10001EC50((uint64_t)v12);
  if (!v17)
  {
    sub_1000A4440();
    id v19 = sub_1000A4450();
    os_log_type_t v20 = sub_1000A4A20();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "accountID must be non-nil for document/folder sharing", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v5, v24);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  uint64_t v18 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v18;
}

uint64_t sub_1000A0554()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008704(&qword_1000CBE08);
  uint64_t v107 = *(void *)(v2 - 8);
  uint64_t v108 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v105 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v106 = (char *)v69 - v5;
  uint64_t v101 = sub_100008704(&qword_1000CAB88);
  uint64_t v98 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  long long v95 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100008704(&qword_1000CAB90);
  __chkstk_darwin(v102);
  uint64_t v96 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100008704(&qword_1000CBE10);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100008704(&qword_1000CBE18);
  __chkstk_darwin(v93);
  unint64_t v92 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100008704(&qword_1000CBE20);
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100008704(&qword_1000CBE28);
  uint64_t v103 = *(void *)(v11 - 8);
  uint64_t v104 = v11;
  __chkstk_darwin(v11);
  id v100 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100008704(&qword_1000CAC58);
  uint64_t v88 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v87 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100008704(&qword_1000CBE00);
  uint64_t v86 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  os_log_t v85 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100008704(&qword_1000CBDF8);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  NSString v82 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100008704(&qword_1000CAF48);
  uint64_t v81 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  unint64_t v80 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100008704(&qword_1000CBDF0);
  uint64_t v79 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  char v78 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100008704(&qword_1000CAE28);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  unint64_t v75 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100008704(&qword_1000CAD08);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100008704(&qword_1000CA3B0);
  uint64_t v20 = __chkstk_darwin(v71);
  id v22 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v69 - v23;
  uint64_t v25 = sub_100008704(&qword_1000CAD70);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100008704(&qword_1000CAE10);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckShare;
  BOOL v112 = 0;
  sub_100008704(&qword_1000CBCE8);
  sub_1000A4530();
  id v34 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v69[0] = v33;
  v69[1] = v29;
  v34(v33, v32, v29);
  uint64_t v35 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__currentUserIsOwner;
  LOBYTE(v112) = 1;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v35, v28, v25);
  uint64_t v36 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__sharingURL;
  uint64_t v37 = sub_1000A42E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v24, 1, 1, v37);
  sub_10000B690((uint64_t)v24, (uint64_t)v22);
  uint64_t v38 = v72;
  sub_1000A4530();
  sub_10000E36C((uint64_t)v24);
  uint64_t v39 = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v36, v38, v74);
  uint64_t v40 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckShareParticipantsCoOwnersState;
  BOOL v112 = &off_1000C1A48;
  id v41 = v75;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v40, v41, v77);
  uint64_t v42 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__containerID;
  BOOL v112 = 0;
  sub_100008704(&qword_1000CBCF8);
  id v43 = v78;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v42, v43, v109);
  uint64_t v44 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__containerSetupInfo;
  BOOL v112 = 0;
  sub_100008704(&qword_1000CAF60);
  id v45 = v80;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v44, v45, v110);
  id v46 = (void *)(v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel_accountID);
  *id v46 = 0;
  v46[1] = 0;
  uint64_t v47 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__container;
  BOOL v112 = 0;
  sub_100008704(&qword_1000CBD10);
  uint64_t v48 = v82;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v47, v48, v84);
  uint64_t v49 = v1 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckSystemSharingUIObserver;
  BOOL v112 = 0;
  uint64_t v50 = sub_100008704((uint64_t *)&unk_1000CBD20);
  unint64_t v51 = v85;
  sub_1000A4530();
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v49, v51, v111);
  swift_weakInit();
  uint64_t v84 = v50;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1000A4CE0()) {
    uint64_t v52 = (void *)sub_10003E9F0((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v52 = &_swiftEmptySetSingleton;
  }
  uint64_t v53 = v70;
  *(void *)(v39 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel_store) = v52;
  swift_beginAccess();
  id v54 = v87;
  sub_1000A4540();
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  sub_1000406A8(&qword_1000CAE18, &qword_1000CAC58);
  sub_1000A45E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v53);
  swift_beginAccess();
  sub_1000A44F0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v55 = v89;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CBE30, &qword_1000CBE10);
  sub_1000A3D28();
  uint64_t v56 = v91;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v56);
  swift_beginAccess();
  NSString v57 = v95;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CAF50, &qword_1000CAB88);
  sub_1000405AC();
  uint64_t v58 = v101;
  sub_1000A45D0();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v57, v58);
  sub_1000406A8(&qword_1000CBE48, &qword_1000CBE18);
  sub_1000406A8(&qword_1000CAF80, &qword_1000CAB90);
  unint64_t v59 = v94;
  sub_1000A4470();
  uint64_t v60 = swift_allocObject();
  swift_weakInit();
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_1000A3E04;
  *(void *)(v61 + 24) = v60;
  sub_1000406A8(&qword_1000CBE50, &qword_1000CBE20);
  uint64_t v62 = v99;
  id v63 = v100;
  sub_1000A45A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v62);
  swift_beginAccess();
  uint64_t v64 = v106;
  sub_1000A4540();
  swift_endAccess();
  sub_1000406A8(&qword_1000CBE58, &qword_1000CBE28);
  uint64_t v65 = v104;
  sub_1000A45F0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v65);
  uint64_t v67 = v107;
  uint64_t v66 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v64, v108);
  swift_beginAccess();
  sub_1000A4550();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
  return v39;
}

void sub_1000A1628(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (!v1)
    {
      swift_release();
      return;
    }
    id v2 = v1;
    id v3 = [v2 currentUserParticipant];
    id v4 = [v2 owner];
    id v5 = v4;
    if (v3)
    {
      if (!v4)
      {
LABEL_9:

LABEL_10:
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        sub_1000A4570();
        swift_release();

        return;
      }
      sub_10001F798(0, &qword_1000CB098);
      id v6 = v3;
      sub_1000A4B70();
    }
    else if (!v4)
    {
      goto LABEL_10;
    }
    id v3 = v5;
    goto LABEL_9;
  }
}

id sub_1000A178C(id a1, void *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2)
    {
      id v4 = &selRef_initWithContainerSetupInfo_;
      a1 = a2;
    }
    else
    {
      if (!a1) {
        goto LABEL_9;
      }
      id v4 = &selRef_initWithContainerID_;
    }
    a1 = objc_msgSend(objc_allocWithZone((Class)CKContainer), *v4, a1);
    if (a1)
    {
      id v5 = objc_allocWithZone((Class)CKSystemSharingUIObserver);
      id v6 = a1;
      a1 = [v5 initWithContainer:v6];
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = a2;
      id v9 = a2;
      swift_retain();
      sub_1000A4B00();
      swift_release();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1000A4B10();
      swift_release();
      swift_release();

      return a1;
    }
LABEL_9:
    swift_release();
    return a1;
  }
  return 0;
}

uint64_t sub_1000A1954(uint64_t a1, void *a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_1000A4460();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    sub_1000A4440();
    swift_errorRetain();
    swift_errorRetain();
    id v22 = sub_1000A4450();
    os_log_type_t v23 = sub_1000A4A20();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      v28[1] = v24 + 4;
      v29[0] = v25;
      uint64_t v30 = (uint64_t)a2;
      swift_errorRetain();
      sub_100008704(qword_1000CA3F0);
      uint64_t v26 = sub_1000A4810();
      uint64_t v30 = sub_10003CFA4(v26, v27, v29);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100008FA0(a2, 1);
      sub_100008FA0(a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckShareModel systemSharingUIDidSaveShareBlock error: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100008FA0(a2, 1);
    }
    else
    {
      sub_100008FA0(a2, 1);
      sub_100008FA0(a2, 1);
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v15 = sub_1000A49C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    id v17 = a2;
    swift_release();
    sub_1000A4990();
    sub_1000A3FDC(a2, 0);
    id v18 = a5;
    swift_retain();
    uint64_t v19 = sub_1000A4980();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v16;
    v20[5] = v17;
    v20[6] = a5;
    swift_release();
    sub_1000210F4((uint64_t)v14, (uint64_t)&unk_1000CBE80, (uint64_t)v20);
    sub_100008FA0(a2, 0);
    return swift_release();
  }
}

uint64_t sub_1000A1D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = sub_1000A4460();
  v6[13] = v7;
  v6[14] = *(void *)(v7 - 8);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  sub_100008704(&qword_1000CA3B0);
  v6[18] = swift_task_alloc();
  uint64_t v8 = sub_1000A42E0();
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = sub_1000A4990();
  v6[24] = sub_1000A4980();
  uint64_t v10 = sub_1000A4950();
  v6[25] = v10;
  v6[26] = v9;
  return _swift_task_switch(sub_1000A1EEC, v10, v9);
}

uint64_t sub_1000A1EEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 216) = Strong;
  if (!Strong) {
    goto LABEL_16;
  }
  uint64_t v2 = swift_weakLoadStrong();
  *(void *)(v0 + 224) = v2;
  if (!v2)
  {
LABEL_15:
    swift_release();
LABEL_16:
    swift_release();
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  id v3 = [*(id *)(v0 + 88) recordID];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  id v4 = *(void **)(v0 + 40);
  if (!v4)
  {
    if (!v3) {
      goto LABEL_20;
    }
    goto LABEL_11;
  }
  id v5 = [*(id *)(v0 + 40) recordID];

  if (!v3)
  {
    if (!v5) {
      goto LABEL_20;
    }

LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  if (!v5)
  {
LABEL_11:

    goto LABEL_14;
  }
  sub_10001F798(0, &qword_1000CBE70);
  id v6 = v3;
  char v7 = sub_1000A4B70();

  if ((v7 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_20:
  id v10 = [*(id *)(v0 + 88) URL];
  if (!v10)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 160) + 56))(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 152));
    goto LABEL_26;
  }
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 152);
  sub_1000A42A0();

  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  v16(v15, v12, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) == 1)
  {
LABEL_26:
    uint64_t v18 = *(void *)(v0 + 144);
    swift_release();
    swift_release();
    swift_release();
    sub_10000E36C(v18);
    goto LABEL_17;
  }
  v16(*(void *)(v0 + 176), *(void *)(v0 + 144), *(void *)(v0 + 152));
  *(void *)(v0 + 232) = sub_1000A4980();
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v17;
  *id v17 = v0;
  v17[1] = sub_1000A2284;
  return sub_100031EC0();
}

uint64_t sub_1000A2284()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1000A4950();
  if (v0) {
    id v4 = sub_1000A27C0;
  }
  else {
    id v4 = sub_1000A23E0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000A23E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return _swift_task_switch(sub_1000A2444, v1, v2);
}

uint64_t sub_1000A2444()
{
  sub_1000A4440();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel calling notifyClientShareDidChange()", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];

  char v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[32] = v7;
  v0[33] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[34] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000A25A8;
  uint64_t v9 = v0[22];
  uint64_t v10 = v0[12];
  return sub_100032B08(v9, v10);
}

uint64_t sub_1000A25A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_1000A2B14;
  }
  else {
    uint64_t v5 = sub_1000A26E4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A26E4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000A27C0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return _swift_task_switch(sub_1000A2824, v1, v2);
}

uint64_t sub_1000A2824()
{
  os_log_type_t v23 = v0;
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[31];
    uint64_t v19 = v0[19];
    uint64_t v20 = v0[22];
    uint64_t v17 = v0[16];
    uint64_t v18 = v0[20];
    uint64_t v4 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v22 = v6;
    v0[6] = v3;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    v0[7] = sub_10003CFA4(v7, v8, &v22);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel systemSharingUIDidSaveShareBlock failed to refetch share: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    uint64_t v21 = v0[22];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[16];
    uint64_t v13 = v0[13];
    uint64_t v12 = v0[14];

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1000A2B14()
{
  os_log_type_t v23 = v0;
  swift_release();
  sub_1000A4440();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000A4450();
  os_log_type_t v2 = sub_1000A4A20();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[35];
    uint64_t v20 = v0[22];
    uint64_t v4 = v0[20];
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v19 = v0[19];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v22 = v6;
    v0[8] = v3;
    swift_errorRetain();
    sub_100008704(qword_1000CA3F0);
    uint64_t v7 = sub_1000A4810();
    v0[9] = sub_10003CFA4(v7, v8, &v22);
    sub_1000A4BC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ckShareModel systemSharingUIDidSaveShareBlock failed to fetch share metadata: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_release();
    swift_errorRelease();
    v18(v17, v16);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20, v19);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v21 = v0[22];
    uint64_t v10 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[13];

    swift_release();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v9(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1000A2E00(void *a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_100008704(&qword_1000CAB08);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000A4460();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  if (a3)
  {
    swift_errorRetain();
    sub_1000A4440();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = sub_1000A4450();
    os_log_type_t v23 = sub_1000A4A20();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v37 = v9;
      uint64_t v38 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v39 = a2;
      swift_errorRetain();
      sub_100008704(qword_1000CA3F0);
      uint64_t v26 = sub_1000A4810();
      uint64_t v39 = sub_10003CFA4(v26, v27, (uint64_t *)&v38);
      sub_1000A4BC0();
      swift_bridgeObjectRelease();
      sub_100008BFC(a2, 1);
      sub_100008BFC(a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "ckShareModel systemSharingUIDidStopSharingBlock error: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100008BFC(a2, 1);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v37);
    }
    else
    {
      sub_100008BFC(a2, 1);
      sub_100008BFC(a2, 1);
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    sub_1000A4440();
    uint64_t v16 = a1;
    uint64_t v17 = sub_1000A4450();
    os_log_type_t v18 = sub_1000A4A40();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v37 = v9;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v36 = v10;
      id v34 = (void *)v20;
      uint64_t v35 = v8;
      *(_DWORD *)uint64_t v19 = 138412290;
      uint64_t v38 = v16;
      uint64_t v21 = v16;
      uint64_t v9 = v37;
      unint64_t v8 = v35;
      sub_1000A4BC0();
      void *v34 = v16;

      _os_log_impl((void *)&_mh_execute_header, v17, v18, "ckShareModel systemSharingUIDidStopSharingBlock stopped sharing: %@", v19, 0xCu);
      sub_100008704(&qword_1000CAAF0);
      swift_arrayDestroy();
      uint64_t v10 = v36;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v17 = v16;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v29 = sub_1000A49C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    uint64_t v30 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    sub_1000A4990();
    uint64_t v31 = v16;
    swift_retain();
    uint64_t v32 = sub_1000A4980();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = &protocol witness table for MainActor;
    v33[4] = v30;
    v33[5] = v31;
    swift_release();
    sub_1000210F4((uint64_t)v8, (uint64_t)&unk_1000CBE68, (uint64_t)v33);
    return swift_release();
  }
}

uint64_t sub_1000A334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_1000A4460();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1000A4990();
  v5[11] = sub_1000A4980();
  uint64_t v8 = sub_1000A4950();
  return _swift_task_switch(sub_1000A3440, v8, v7);
}

uint64_t sub_1000A3440()
{
  swift_release();
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    goto LABEL_12;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_11:
    swift_release();
    goto LABEL_12;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000A4560();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)v0[5];
  if (!v1) {
    goto LABEL_10;
  }
  id v2 = [v1 recordID];

  if (!v2
    || (uint64_t v3 = (void *)v0[7],
        sub_10001F798(0, &qword_1000CBE70),
        id v4 = v3,
        char v5 = sub_1000A4B70(),
        v2,
        v4,
        v4,
        (v5 & 1) == 0))
  {
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  sub_1000A4440();
  uint64_t v6 = sub_1000A4450();
  os_log_type_t v7 = sub_1000A4A40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ckShareModel systemSharingUIDidStopSharingBlock dismissing", v8, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v11 = v0[8];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_release();
  swift_release();
  if (Strong) {
    swift_unknownObjectRelease();
  }
LABEL_12:
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1000A3690()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckShare;
  uint64_t v2 = sub_100008704(&qword_1000CAE10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__currentUserIsOwner;
  uint64_t v4 = sub_100008704(&qword_1000CAD70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__sharingURL;
  uint64_t v6 = sub_100008704(&qword_1000CAD08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckShareParticipantsCoOwnersState;
  uint64_t v8 = sub_100008704(&qword_1000CAE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__containerID;
  uint64_t v10 = sub_100008704(&qword_1000CBDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__containerSetupInfo;
  uint64_t v12 = sub_100008704(&qword_1000CAF48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__container;
  uint64_t v14 = sub_100008704(&qword_1000CBDF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v0 + OBJC_IVAR____TtC13SPIHelper_iOS12CKShareModel__ckSystemSharingUIObserver;
  uint64_t v16 = sub_100008704(&qword_1000CBE00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000A3924()
{
  sub_1000A3690();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A397C()
{
  return type metadata accessor for CKShareModel();
}

uint64_t type metadata accessor for CKShareModel()
{
  uint64_t result = qword_1000CBCD0;
  if (!qword_1000CBCD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A39D0()
{
  sub_10003E444(319, &qword_1000CBCE0, &qword_1000CBCE8);
  if (v0 <= 0x3F)
  {
    sub_10003E3A4(319, &qword_1000CA7F0);
    if (v1 <= 0x3F)
    {
      sub_10003E444(319, &qword_1000CA878, &qword_1000CA3B0);
      if (v2 <= 0x3F)
      {
        sub_10003E3A4(319, &qword_1000CB908);
        if (v3 <= 0x3F)
        {
          sub_10003E444(319, &qword_1000CBCF0, &qword_1000CBCF8);
          if (v4 <= 0x3F)
          {
            sub_10003E444(319, &qword_1000CBD00, &qword_1000CAF60);
            if (v5 <= 0x3F)
            {
              sub_10003E444(319, &qword_1000CBD08, &qword_1000CBD10);
              if (v6 <= 0x3F)
              {
                sub_10003E444(319, &qword_1000CBD18, (uint64_t *)&unk_1000CBD20);
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000A3CE8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A3D20(void **a1)
{
}

unint64_t sub_1000A3D28()
{
  unint64_t result = qword_1000CBE38;
  if (!qword_1000CBE38)
  {
    sub_1000086BC(&qword_1000CBCF8);
    sub_1000A3DB4(&qword_1000CBE40, &qword_1000CA8B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CBE38);
  }
  return result;
}

uint64_t sub_1000A3DB4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001F798(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000A3E04(id a1, void *a2)
{
  return sub_1000A178C(a1, a2);
}

uint64_t sub_1000A3E0C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A3E44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1000A3E7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A3EBC(uint64_t a1, void *a2, char a3)
{
  return sub_1000A1954(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1000A3EC8(void *a1, uint64_t a2, char a3)
{
  return sub_1000A2E00(a1, a2, a3 & 1);
}

uint64_t sub_1000A3ED4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000A3F1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001FD88;
  return sub_1000A334C(a1, v4, v5, v7, v6);
}

id sub_1000A3FDC(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_1000A3FE8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000A4038(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000B7A4;
  return sub_1000A1D38(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000A4100(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_1000A4110()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t sub_1000A4120()
{
  return URLResourceValues.localizedName.getter();
}

uint64_t sub_1000A4130()
{
  return URLResourceValues.typeIdentifier.getter();
}

uint64_t sub_1000A4140()
{
  return URLResourceValues.parentDirectory.getter();
}

uint64_t sub_1000A4150()
{
  return URLResourceValues.ubiquitousItemIsShared.getter();
}

uint64_t sub_1000A4160()
{
  return URLResourceValues.ubiquitousSharedItemCurrentUserRole.getter();
}

uint64_t sub_1000A4170()
{
  return URLResourceValues.isPackage.getter();
}

uint64_t sub_1000A4180()
{
  return type metadata accessor for URLResourceValues();
}

Class sub_1000A4190()
{
  return PersonNameComponents._bridgeToObjectiveC()().super.isa;
}

uint64_t sub_1000A41A0()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A41B0()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t sub_1000A4200()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t sub_1000A4220()
{
  return _BridgedStoredNSError.errorCode.getter();
}

uint64_t sub_1000A4230()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1000A4240()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1000A4250()
{
  return URL.pathExtension.getter();
}

uint64_t sub_1000A4260()
{
  return URL.lastPathComponent.getter();
}

void sub_1000A4270(NSURL *retstr@<X8>)
{
}

uint64_t sub_1000A4280()
{
  return URL.promisedItemResourceValues(forKeys:)();
}

void sub_1000A4290()
{
}

uint64_t sub_1000A42A0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_1000A42B0()
{
  return URL.startAccessingSecurityScopedResource()();
}

uint64_t sub_1000A42C0()
{
  return URL.path.getter();
}

uint64_t sub_1000A42D0()
{
  return URL.scheme.getter();
}

uint64_t sub_1000A42E0()
{
  return type metadata accessor for URL();
}

NSData sub_1000A42F0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000A4300()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A4310()
{
  return UUID.init()();
}

uint64_t sub_1000A4320()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1000A4330()
{
  return static UTTagClass.filenameExtension.getter();
}

uint64_t sub_1000A4340()
{
  return type metadata accessor for UTTagClass();
}

uint64_t sub_1000A4350()
{
  return UTType.identifier.getter();
}

uint64_t sub_1000A4360()
{
  return static UTType.spreadsheet.getter();
}

uint64_t sub_1000A4370()
{
  return static UTType.presentation.getter();
}

uint64_t sub_1000A4380()
{
  return UTType.preferredFilenameExtension.getter();
}

uint64_t sub_1000A4390()
{
  return static UTType.pdf.getter();
}

uint64_t sub_1000A43A0()
{
  return UTType.init(tag:tagClass:conformingTo:)();
}

uint64_t sub_1000A43B0()
{
  return static UTType.item.getter();
}

uint64_t sub_1000A43C0()
{
  return static UTType.image.getter();
}

uint64_t sub_1000A43D0()
{
  return static UTType.movie.getter();
}

uint64_t sub_1000A43E0()
{
  return static UTType.folder.getter();
}

uint64_t sub_1000A43F0()
{
  return static UTType.content.getter();
}

uint64_t sub_1000A4400()
{
  return UTType.conforms(to:)();
}

uint64_t sub_1000A4410()
{
  return UTType.isSubtype(of:)();
}

uint64_t sub_1000A4420()
{
  return type metadata accessor for UTType();
}

uint64_t sub_1000A4430()
{
  return UTType.init(_:)();
}

uint64_t sub_1000A4440()
{
  return static Logger.general.getter();
}

uint64_t sub_1000A4450()
{
  return Logger.logObject.getter();
}

uint64_t sub_1000A4460()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1000A4470()
{
  return Publishers.CombineLatest.init(_:_:)();
}

uint64_t sub_1000A4480()
{
  return type metadata accessor for Publishers.CombineLatest3();
}

uint64_t sub_1000A4490()
{
  return Publishers.CombineLatest3.init(_:_:_:)();
}

uint64_t sub_1000A44A0()
{
  return type metadata accessor for Publishers.CombineLatest4();
}

uint64_t sub_1000A44B0()
{
  return Publishers.CombineLatest4.init(_:_:_:_:)();
}

uint64_t sub_1000A44C0()
{
  return Publishers.Map.receive<A>(subscriber:)();
}

uint64_t sub_1000A44D0()
{
  return type metadata accessor for Publishers.Map();
}

uint64_t sub_1000A44E0()
{
  return static Subscribers.Demand.unlimited.getter();
}

uint64_t sub_1000A44F0()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_1000A4500()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t sub_1000A4510()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_1000A4520()
{
  return Future.init(_:)();
}

uint64_t sub_1000A4530()
{
  return Published.init(initialValue:)();
}

uint64_t sub_1000A4540()
{
  return Published.projectedValue.getter();
}

uint64_t sub_1000A4550()
{
  return Published.projectedValue.setter();
}

uint64_t sub_1000A4560()
{
  return static Published.subscript.getter();
}

uint64_t sub_1000A4570()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000A4580()
{
  return type metadata accessor for Published();
}

uint64_t sub_1000A4590()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_1000A45A0()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_1000A45B0()
{
  return Publisher.flatMap<A, B>(maxPublishers:_:)();
}

uint64_t sub_1000A45C0()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_1000A45D0()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t sub_1000A45E0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_1000A45F0()
{
  return Publisher<>.assign(to:)();
}

uint64_t sub_1000A4600()
{
  return NWPathMonitor.pathUpdateHandler.setter();
}

uint64_t sub_1000A4610()
{
  return NWPathMonitor.start(queue:)();
}

uint64_t sub_1000A4620()
{
  return NWPathMonitor.init()();
}

uint64_t sub_1000A4630()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t sub_1000A4640()
{
  return static NWPath.Status.== infix(_:_:)();
}

uint64_t sub_1000A4650()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t sub_1000A4660()
{
  return NWPath.status.getter();
}

uint64_t sub_1000A4670()
{
  return type metadata accessor for NWPath();
}

uint64_t sub_1000A4680()
{
  return type metadata accessor for ButtonRole();
}

uint64_t sub_1000A4690()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t sub_1000A46A0()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_1000A46B0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_1000A46C0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_1000A46D0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1000A46E0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_1000A46F0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1000A4700()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1000A4710()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1000A4720()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_1000A4730()
{
  return static DispatchTime.now()();
}

uint64_t sub_1000A4740()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_1000A4750()
{
  return + infix(_:_:)();
}

NSDictionary sub_1000A4760()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1000A4770()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A4780()
{
  return Dictionary.description.getter();
}

uint64_t sub_1000A4790()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1000A47A0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1000A47B0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1000A47C0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000A47D0()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_1000A47E0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A47F0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1000A4800()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A4810()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1000A4820()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_1000A4830()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_1000A4840()
{
  return String.hash(into:)();
}

uint64_t sub_1000A4850()
{
  return String.count.getter();
}

uint64_t sub_1000A4860()
{
  return String.index(after:)();
}

uint64_t sub_1000A4870()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_1000A4880(Swift::String a1)
{
}

Swift::Int sub_1000A4890()
{
  return String.UTF8View._foreignCount()();
}

Swift::Int sub_1000A48A0()
{
  return String.UTF16View._foreignCount()();
}

uint64_t sub_1000A48B0()
{
  return String.UTF16View._nativeGetOffset(for:)();
}

BOOL sub_1000A48C0(Swift::String a1)
{
  return String.hasSuffix(_:)(a1);
}

uint64_t sub_1000A48D0()
{
  return String.subscript.getter();
}

uint64_t sub_1000A48E0()
{
  return String.subscript.getter();
}

uint64_t sub_1000A48F0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1000A4900()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1000A4910()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000A4920()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1000A4930()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1000A4940()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1000A4950()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1000A4960()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1000A4970()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1000A4980()
{
  return static MainActor.shared.getter();
}

uint64_t sub_1000A4990()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_1000A49A0()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_1000A49B0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_1000A49C0()
{
  return type metadata accessor for TaskPriority();
}

NSNumber sub_1000A49F0()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_1000A4A00()
{
  return Range<>.init(_:in:)();
}

uint64_t sub_1000A4A10()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1000A4A20()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1000A4A30()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1000A4A40()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1000A4A50()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1000A4A60()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_1000A4A70()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1000A4A80()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_1000A4A90()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1000A4AA0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1000A4AB0()
{
  return static CKShareParticipantRole.administrator.getter();
}

uint64_t sub_1000A4AC0()
{
  return CKModifyRecordsOperation.modifyRecordsResultBlock.setter();
}

CKModifyRecordsOperation sub_1000A4AD0(Swift::OpaquePointer_optional recordsToSave, Swift::OpaquePointer_optional recordIDsToDelete)
{
  return CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(recordsToSave, recordIDsToDelete);
}

uint64_t sub_1000A4AE0()
{
  return CKModifyRecordsOperation.perRecordSaveBlock.setter();
}

uint64_t sub_1000A4AF0()
{
  return CKModifyRecordsOperation.perRecordDeleteBlock.setter();
}

uint64_t sub_1000A4B00()
{
  return CKSystemSharingUIObserver.systemSharingUIDidSaveShareBlock.setter();
}

uint64_t sub_1000A4B10()
{
  return CKSystemSharingUIObserver.systemSharingUIDidStopSharingBlock.setter();
}

uint64_t sub_1000A4B20()
{
  return CKFetchShareMetadataOperation.perShareMetadataResultBlock.setter();
}

uint64_t sub_1000A4B30()
{
  return static CKShare.SystemFieldKey.thumbnailImageData.getter();
}

uint64_t sub_1000A4B40()
{
  return static CKShare.SystemFieldKey.title.getter();
}

uint64_t sub_1000A4B50()
{
  return static CKShare.SystemFieldKey.shareType.getter();
}

uint64_t sub_1000A4B60()
{
  return CKRecord.subscript.getter();
}

uint64_t sub_1000A4B70()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1000A4B80()
{
  return NSObject.hashValue.getter();
}

uint64_t sub_1000A4B90()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t sub_1000A4BA0()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_1000A4BB0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1000A4BC0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1000A4BD0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1000A4BE0()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t sub_1000A4BF0()
{
  return StringProtocol.capitalized.getter();
}

uint64_t sub_1000A4C00()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t sub_1000A4C20()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1000A4C30()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_1000A4C40(Swift::Int a1)
{
}

uint64_t sub_1000A4C50()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1000A4C60()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1000A4C70()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1000A4C80()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1000A4C90()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1000A4CA0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1000A4CB0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1000A4CC0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000A4CD0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000A4CE0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1000A4CF0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1000A4D00()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1000A4D10()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1000A4D20()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1000A4D40(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1000A4D50()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1000A4D70()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000A4D90()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1000A4DC0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1000A4DD0()
{
  return Error._code.getter();
}

uint64_t sub_1000A4DE0()
{
  return Error._domain.getter();
}

uint64_t sub_1000A4DF0()
{
  return Error._userInfo.getter();
}

NSNumber sub_1000A4E00()
{
  return Int32._bridgeToObjectiveC()();
}

uint64_t sub_1000A4E10()
{
  return Hasher.init(_seed:)();
}

void sub_1000A4E20(Swift::UInt a1)
{
}

Swift::Int sub_1000A4E30()
{
  return Hasher._finalize()();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t BRSharingCopyCurrentUserNameAndDisplayHandle()
{
  return _BRSharingCopyCurrentUserNameAndDisplayHandle();
}

uint64_t BRSharingCopyCurrentUserNameAndDisplayHandleForURL()
{
  return _BRSharingCopyCurrentUserNameAndDisplayHandleForURL();
}

uint64_t BRSharingCreateShareForItemAtURL()
{
  return _BRSharingCreateShareForItemAtURL();
}

uint64_t CKErrorCodeForUnderlyingErrorCode()
{
  return _CKErrorCodeForUnderlyingErrorCode();
}

uint64_t CKXPCSuitableError()
{
  return _CKXPCSuitableError();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithRecordType_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:zoneID:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_participants(void *a1, const char *a2, ...)
{
  return _[a1 participants];
}

id objc_msgSend_publicPermission(void *a1, const char *a2, ...)
{
  return _[a1 publicPermission];
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return _[a1 recordName];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_setAllParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllParticipants:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_userIdentity(void *a1, const char *a2, ...)
{
  return _[a1 userIdentity];
}

id objc_msgSend_userRecordID(void *a1, const char *a2, ...)
{
  return _[a1 userRecordID];
}