BOOL sub_25424BA40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s23IntelligentTrackingCore15DKFaceDirectionO9hashValueSivg_0()
{
  return sub_25436D930();
}

uint64_t sub_25424BA9C()
{
  return sub_25436D900();
}

uint64_t sub_25424BAC8()
{
  return sub_25436D930();
}

BOOL sub_25424BB0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_25424BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6 = v5;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v36 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_25436C6F0();
  sub_25436C6F0();
  sub_25436C6F0();
  sub_25436C6F0();
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming) = 0;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(a3 + 32);
  uint64_t v13 = *(void *)(a3 + 40);
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v39 = a3;
  LOBYTE(a3) = *(unsigned char *)(a3 + 48);
  objc_allocWithZone((Class)type metadata accessor for DKPIDController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_pid) = DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(v11, v14, v12, v13, v15, a3);
  *((unsigned char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_controlMethod) = 0;
  v16 = sub_2542584E0(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v18 = *((void *)v16 + 2);
  unint64_t v17 = *((void *)v16 + 3);
  int64_t v19 = v17 >> 1;
  unint64_t v20 = v18 + 1;
  if (v17 >> 1 <= v18)
  {
    v16 = sub_2542584E0((char *)(v17 > 1), v18 + 1, 1, v16);
    unint64_t v17 = *((void *)v16 + 3);
    int64_t v19 = v17 >> 1;
  }
  *((void *)v16 + 2) = v20;
  v21 = &v16[3 * v18];
  *((_WORD *)v21 + 16) = 256;
  v21[34] = 1;
  unint64_t v22 = v18 + 2;
  if (v19 < (uint64_t)(v18 + 2)) {
    v16 = sub_2542584E0((char *)(v17 > 1), v18 + 2, 1, v16);
  }
  *((void *)v16 + 2) = v22;
  v23 = &v16[3 * v20];
  *((_WORD *)v23 + 16) = 1;
  v23[34] = 0;
  unint64_t v24 = *((void *)v16 + 3);
  if ((uint64_t)(v18 + 3) > (uint64_t)(v24 >> 1)) {
    v16 = sub_2542584E0((char *)(v24 > 1), v18 + 3, 1, v16);
  }
  *((void *)v16 + 2) = v18 + 3;
  v25 = &v16[3 * v22];
  *((_WORD *)v25 + 16) = 256;
  v25[34] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7820);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(void *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM) = sub_25424EED0(0, (uint64_t)v16);
  swift_allocObject();
  *(void *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM) = sub_25424EED0(0, (uint64_t)v16);
  uint64_t v26 = v41 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27 = v36;
  v35(v36, v41 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v8);
  type metadata accessor for DKAccelerationLimiter();
  uint64_t v28 = swift_allocObject();
  sub_25436C6E0();
  long long v34 = xmmword_25436E680;
  *(_OWORD *)(v28 + 16) = xmmword_25436E680;
  *(void *)(v28 + 32) = 0;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v29(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v27, v8);
  *(unsigned char *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = 1;
  *(unsigned char *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  *(void *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter) = v28;
  v35(v27, v26, v8);
  uint64_t v30 = swift_allocObject();
  sub_25436C6E0();
  *(_OWORD *)(v30 + 16) = v34;
  *(void *)(v30 + 32) = 0;
  v29(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v27, v8);
  *(unsigned char *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = 1;
  *(unsigned char *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  *(void *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalAccelerationFilter) = v30;
  swift_release();
  sub_25436C9E0();
  uint64_t v31 = v38;
  v6[2] = v37;
  v6[3] = v31;
  uint64_t v32 = v40;
  v6[4] = v39;
  v6[5] = v32;
  v6[6] = v41;
  return v6;
}

uint64_t sub_25424C038()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25424C0F8, 0, 0);
}

uint64_t sub_25424C0F8()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[2];
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_controlMethod)) {
    return sub_25436D4F0();
  }
  uint64_t v3 = swift_retain();
  sub_25424C2FC(v3, &v13);
  swift_release();
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v6 = v0[4];
    uint64_t v5 = v0[5];
    uint64_t v8 = v0[2];
    uint64_t v7 = v0[3];
    uint64_t v9 = *(void *)(v1 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v7);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v5, v7);
    uint64_t v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(void *)uint64_t v11 = v4;
    *(void *)(v11 + 8) = 0;
    *(_WORD *)(v11 + 16) = 0;
    *(void *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v10;
    swift_release();
    *(void *)(*(void *)(v8 + 40)
              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand) = *(void *)(*(void *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    swift_retain();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(1);
}

uint64_t sub_25424C2FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v127 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v128 = (SEL *)((char *)&v117 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v123 = (char *)&v117 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v122 = (char *)&v117 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v133 = (char *)&v117 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v117 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v19 - 8);
  v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = 0;
  uint64_t v22 = type metadata accessor for DKCamera();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v124 = (double *)((char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v126 = (double *)((char *)&v117 - v27);
  MEMORY[0x270FA5388](v26);
  v29 = (char *)&v117 - v28;
  sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v21, &qword_269DD7808);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v125 = v22;
  if (v30(v21, 1, v22) == 1)
  {
    uint64_t result = sub_25425042C((uint64_t)v21, &qword_269DD7808);
    *a2 = 0;
    return result;
  }
  sub_2542502F0((uint64_t)v21, (uint64_t)v29);
  char v32 = sub_254250488(a1);
  v132 = (void *)a1;
  char v33 = sub_2542506F4(a1);
  char v34 = v33;
  v121 = a2;
  v129 = v29;
  if (v32)
  {
    uint64_t v35 = v131;
    sub_25424DD7C();
    int v118 = v36;
    if (v34)
    {
      sub_25424E06C();
      int v117 = v37;
    }
    else
    {
      int v117 = 0;
    }
    uint64_t v39 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
    v134 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v134(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v5);
    uint64_t v40 = v133;
    sub_25436C6F0();
    char v41 = sub_25436C780();
    v42 = *(void (**)(char *, uint64_t))(v6 + 8);
    v42(v40, v5);
    v42(v18, v5);
    if (v41) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v39, (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    }
    sub_25436C6F0();
    v43 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 40);
    v43(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v18, v5);
  }
  else
  {
    uint64_t v35 = v131;
    if (v33)
    {
      sub_25424E06C();
      int v117 = v38;
    }
    else
    {
      int v117 = 0;
    }
    uint64_t v44 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime;
    v134 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v134(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v5);
    v45 = v133;
    sub_25436C6F0();
    char v46 = sub_25436C780();
    v42 = *(void (**)(char *, uint64_t))(v6 + 8);
    v42(v45, v5);
    v42(v18, v5);
    if (v46) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v44, (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    }
    sub_25436C6F0();
    v43 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 40);
    v43(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v18, v5);
    int v118 = 0;
  }
  uint64_t v131 = v6 + 16;
  if ((v34 & 1) == 0)
  {
    uint64_t v52 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime;
    v134(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v5);
    v53 = v133;
    sub_25436C6F0();
    char v54 = sub_25436C780();
    v42(v53, v5);
    v42(v18, v5);
    if (v54)
    {
      uint64_t v50 = (uint64_t)v132;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v52, (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
      v51 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime;
      goto LABEL_24;
    }
    v51 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime;
LABEL_23:
    uint64_t v50 = (uint64_t)v132;
    goto LABEL_24;
  }
  uint64_t v47 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime;
  v134(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v5);
  v48 = v133;
  sub_25436C6F0();
  char v49 = sub_25436C780();
  v42(v48, v5);
  v42(v18, v5);
  if ((v49 & 1) == 0)
  {
    v51 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime;
    goto LABEL_23;
  }
  uint64_t v50 = (uint64_t)v132;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v47, (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
  v51 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime;
LABEL_24:
  sub_25436C6F0();
  uint64_t v55 = v35 + *v51;
  uint64_t v119 = v6 + 40;
  v120 = v43;
  v43(v55, v18, v5);
  int v56 = *(unsigned __int8 *)(v50
                           + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
  v57 = (void *)&unk_269DDA000;
  uint64_t v58 = v50;
  if (v56 == 4
    || v56 == *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming))
  {
    int v59 = *(unsigned __int8 *)(v50
                             + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    if (v59 == 3)
    {
      LODWORD(v123) = 0;
      goto LABEL_44;
    }
    int v60 = 0;
    v61 = (unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming);
    if (v59 == *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming))
    {
      LODWORD(v123) = 0;
      goto LABEL_44;
    }
  }
  else
  {
    *(unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming) = v56;
    uint64_t v62 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter);
    v134(v18, v58 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    swift_retain();
    v63 = v122;
    sub_25436C710();
    v42(v18, v5);
    if (*(unsigned char *)(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
    {
      *(unsigned char *)(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 0;
      v64 = (char *)(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout);
      v42((char *)(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout), v5);
      v134(v64, (uint64_t)v63, v5);
    }
    swift_release();
    v42(v63, v5);
    int v59 = *(unsigned __int8 *)(v58
                             + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    if (v59 == 3
      || (v61 = (unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming),
          v59 == *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming)))
    {
      LODWORD(v123) = 0;
      goto LABEL_39;
    }
    int v60 = 1;
    v57 = &unk_269DDA000;
  }
  unsigned char *v61 = v59;
  uint64_t v65 = *(void *)(v35 + v57[199]);
  v134(v18, v58 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
  swift_retain();
  v66 = v123;
  sub_25436C710();
  v42(v18, v5);
  if (*(unsigned char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    *(unsigned char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 0;
    v67 = (char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout);
    v42((char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout), v5);
    v134(v67, (uint64_t)v66, v5);
  }
  swift_release();
  v42(v66, v5);
  LODWORD(v123) = 1;
  if (!v60)
  {
LABEL_44:
    uint64_t v73 = v58 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v83 = v134;
    v134(v18, v58 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    v84 = v133;
    v83(v133, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v5);
    sub_25436C700();
    double v2 = v85;
    v42(v84, v5);
    v42(v18, v5);
    v77 = v126;
    sub_254250968((uint64_t)v129, (uint64_t)v126);
    if (v2 <= 1.0)
    {
      sub_254250354((uint64_t)v77);
    }
    else
    {
      v78 = (void *)((char *)v77 + *(int *)(v125 + 32));
      uint64_t v86 = *(void *)((char *)v78 + *(int *)(type metadata accessor for DKMotion3() + 24));
      if (!*(void *)(v86 + 16))
      {
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      double v2 = fabs(*(double *)(v86 + 32));
      sub_254250354((uint64_t)v77);
      if (v2 < *(double *)(*(void *)(v35 + 32) + 176))
      {
        uint64_t v87 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
        v88 = *(void **)(v87 + 32);
        swift_retain();
        v70 = (SEL *)&unk_2653A7000;
        objc_msgSend(v88, sel_lock);
        v89 = &unk_2703B1BD0;
        goto LABEL_51;
      }
    }
    uint64_t v90 = v73;
    v91 = v134;
    v134(v18, v90, v5);
    v92 = v133;
    v91(v133, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v5);
    sub_25436C700();
    double v2 = v93;
    v42(v92, v5);
    v42(v18, v5);
    if (v2 <= 0.0)
    {
      uint64_t v71 = v130;
      if ((v118 & 1) == 0)
      {
        v72 = (SEL *)&unk_2653A7000;
        v70 = (SEL *)&unk_2653A7000;
        if (v123) {
          goto LABEL_55;
        }
        goto LABEL_40;
      }
      uint64_t v95 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
      v88 = *(void **)(v95 + 32);
      swift_retain();
      v70 = (SEL *)&unk_2653A7000;
      objc_msgSend(v88, sel_lock);
      v89 = &unk_2703B1C20;
      uint64_t v94 = v95;
      goto LABEL_54;
    }
    uint64_t v87 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
    v88 = *(void **)(v87 + 32);
    swift_retain();
    v70 = (SEL *)&unk_2653A7000;
    objc_msgSend(v88, sel_lock);
    v89 = &unk_2703B1BF8;
LABEL_51:
    uint64_t v94 = v87;
    uint64_t v71 = v130;
LABEL_54:
    sub_254290A30(v94, (uint64_t)v89);
    v72 = (SEL *)&unk_2653A7000;
    objc_msgSend(v88, sel_unlock);
    swift_release();
    if (v123) {
      goto LABEL_55;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v68 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
  v69 = *(void **)(v68 + 32);
  swift_retain();
  v70 = (SEL *)&unk_2653A7000;
  objc_msgSend(v69, sel_lock);
  uint64_t v71 = v130;
  sub_254290A30(v68, (uint64_t)&unk_2703B1BA8);
  v72 = (SEL *)&unk_2653A7000;
  objc_msgSend(v69, sel_unlock);
  swift_release();
  sub_25436C6F0();
  v120(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v18, v5);
  if (v123)
  {
LABEL_55:
    uint64_t v96 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
    v97 = *(void **)(v96 + 32);
    swift_retain();
    [v97 v70[439]];
    sub_254290A30(v96, (uint64_t)&unk_2703B1C48);
    [v97 v72[440]];
    swift_release();
    sub_25436C6F0();
    v120(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v18, v5);
    goto LABEL_63;
  }
LABEL_40:
  uint64_t v130 = v71;
  uint64_t v73 = (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v74 = v134;
  v134(v18, (uint64_t)v132 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
  v75 = v133;
  v74(v133, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v5);
  sub_25436C700();
  double v2 = v76;
  v42(v75, v5);
  v42(v18, v5);
  v77 = v124;
  sub_254250968((uint64_t)v129, (uint64_t)v124);
  if (v2 <= 1.0)
  {
    sub_254250354((uint64_t)v77);
  }
  else
  {
    v78 = (void *)((char *)v77 + *(int *)(v125 + 32));
    uint64_t v79 = *(void *)((char *)v78 + *(int *)(type metadata accessor for DKMotion3() + 24));
    if (*(void *)(v79 + 16) < 2uLL)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    double v2 = fabs(*(double *)(v79 + 40));
    sub_254250354((uint64_t)v77);
    if (v2 < *(double *)(*(void *)(v35 + 32) + 176))
    {
      uint64_t v80 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
      v81 = *(void **)(v80 + 32);
      swift_retain();
      v70 = (SEL *)&unk_2653A7000;
      objc_msgSend(v81, sel_lock);
      v82 = &unk_2703B1C70;
LABEL_59:
      uint64_t v102 = v80;
      goto LABEL_62;
    }
  }
  uint64_t v98 = v73;
  v99 = v134;
  v134(v18, v98, v5);
  v100 = v133;
  v99(v133, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v5);
  sub_25436C700();
  double v2 = v101;
  v42(v100, v5);
  v42(v18, v5);
  if (v2 > 0.0)
  {
    uint64_t v80 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
    v81 = *(void **)(v80 + 32);
    swift_retain();
    v70 = (SEL *)&unk_2653A7000;
    objc_msgSend(v81, sel_lock);
    v82 = &unk_2703B1C98;
    goto LABEL_59;
  }
  v70 = (SEL *)&unk_2653A7000;
  if ((v117 & 1) == 0) {
    goto LABEL_63;
  }
  uint64_t v103 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
  v81 = *(void **)(v103 + 32);
  swift_retain();
  objc_msgSend(v81, sel_lock);
  v82 = &unk_2703B1CC0;
  uint64_t v102 = v103;
LABEL_62:
  sub_254290A30(v102, (uint64_t)v82);
  [v81 v72[440]];
  swift_release();
LABEL_63:
  sub_25424D5E0((uint64_t)v132, (uint64_t *)&v135);
  uint64_t v104 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
  v78 = *(void **)(v104 + 32);
  swift_retain();
  [v78 v70[439]];
  uint64_t v73 = *(unsigned __int8 *)(v104 + 16);
  [v78 v72[440]];
  swift_release();
  if (v73) {
    goto LABEL_67;
  }
  v77 = v135;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v77 = (double *)sub_2543631E4(v77);
    if (*((void *)v77 + 2)) {
      goto LABEL_66;
    }
LABEL_93:
    __break(1u);
LABEL_94:
    v77 = (double *)sub_2543631E4(v77);
    goto LABEL_69;
  }
  if (!*((void *)v77 + 2)) {
    goto LABEL_93;
  }
LABEL_66:
  v77[4] = 0.0;
  v135 = v77;
LABEL_67:
  uint64_t v105 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
  v106 = *(void **)(v105 + 32);
  swift_retain();
  [v106 v70[439]];
  uint64_t v73 = *(unsigned __int8 *)(v105 + 16);
  [v106 v72[440]];
  swift_release();
  v78 = v132;
  v72 = v128;
  if (v73) {
    goto LABEL_71;
  }
  v77 = v135;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_94;
  }
LABEL_69:
  if (*((void *)v77 + 2) < 2uLL)
  {
    __break(1u);
    goto LABEL_96;
  }
  v77[5] = 0.0;
  v135 = v77;
LABEL_71:
  uint64_t v73 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter);
  v77 = (double *)((char *)v78 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
  v107 = (char *)v78 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v108 = v134;
  v134((char *)v72, (uint64_t)v107, v5);
  if (*(unsigned char *)(v73 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    v108(v18, v73 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
    swift_retain();
    sub_25436C700();
    double v2 = v109;
    v42(v18, v5);
    if (v2 > 0.0)
    {
      int v110 = *(unsigned __int8 *)(v73 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
      swift_release();
      v42((char *)v72, v5);
      if (v110) {
        goto LABEL_80;
      }
      v78 = v135;
      if (*((void *)v135 + 2))
      {
        double v2 = v135[4];
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          if (v78[2])
          {
LABEL_77:
            *((double *)v78 + 4) = v2 * 0.5;
            v135 = (double *)v78;
            goto LABEL_80;
          }
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
LABEL_99:
        v78 = sub_2543631E4(v78);
        if (v78[2]) {
          goto LABEL_77;
        }
        goto LABEL_100;
      }
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    swift_release();
  }
  v42((char *)v72, v5);
LABEL_80:
  uint64_t v111 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalAccelerationFilter);
  v112 = v127;
  v113 = v77;
  v114 = v134;
  v134(v127, (uint64_t)v113, v5);
  if (*(unsigned char *)(v111 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) != 1)
  {
LABEL_88:
    v42(v112, v5);
    v78 = v121;
    uint64_t v73 = (uint64_t)v129;
    goto LABEL_89;
  }
  v114(v18, v111 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
  swift_retain();
  sub_25436C700();
  double v2 = v115;
  v42(v18, v5);
  if (v2 <= 0.0)
  {
    swift_release();
    goto LABEL_88;
  }
  int v116 = *(unsigned __int8 *)(v111 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
  swift_release();
  v42(v112, v5);
  v78 = v121;
  uint64_t v73 = (uint64_t)v129;
  if (v116)
  {
LABEL_89:
    uint64_t result = sub_254250354(v73);
    void *v78 = v135;
    return result;
  }
  v77 = v135;
  if (*((void *)v135 + 2) >= 2uLL)
  {
    double v2 = v135[5];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result) {
      goto LABEL_85;
    }
    goto LABEL_102;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  uint64_t result = (uint64_t)sub_2543631E4(v77);
  v77 = (double *)result;
LABEL_85:
  if (*((void *)v77 + 2) >= 2uLL)
  {
    v77[5] = v2 * 0.5;
    v135 = v77;
    goto LABEL_89;
  }
  __break(1u);
  return result;
}

void sub_25424D5E0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DKCamera();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v15 = (double *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32)) {
    goto LABEL_47;
  }
  CGFloat v18 = v16[2];
  CGFloat v17 = v16[3];
  CGFloat v20 = *v16;
  CGFloat v19 = v16[1];
  sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v11, &qword_269DD7808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_25425042C((uint64_t)v11, &qword_269DD7808);
LABEL_47:
    *a2 = (uint64_t)&unk_2703B1B70;
    return;
  }
  sub_2542502F0((uint64_t)v11, (uint64_t)v15);
  unint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v21)
  {
LABEL_46:
    sub_254250354((uint64_t)v15);
    goto LABEL_47;
  }
  int v56 = a2;
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_7;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    a2 = v56;
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  if (!sub_25436D530()) {
    goto LABEL_45;
  }
LABEL_7:
  if ((v21 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = MEMORY[0x25A275A00](0, v21);
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    uint64_t v23 = *(void *)(v21 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_2542503C8(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, (uint64_t)v9, &qword_269DD7810);
  swift_release();
  uint64_t v24 = type metadata accessor for DKMotion3();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v9, 1, v24);
  a2 = v56;
  if (v25)
  {
    sub_25425042C((uint64_t)v9, &qword_269DD7810);
    goto LABEL_46;
  }
  uint64_t v26 = *(void **)&v9[*(int *)(v24 + 24)];
  swift_bridgeObjectRetain();
  sub_25425042C((uint64_t)v9, &qword_269DD7810);
  uint64_t v55 = (void (*)(char *, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
  uint64_t inited = swift_initStackObject();
  long long v53 = xmmword_25436E690;
  *(_OWORD *)(inited + 16) = xmmword_25436E690;
  v58.origin.x = v20;
  v58.origin.y = v19;
  v58.size.width = v18;
  v58.size.height = v17;
  double MidX = CGRectGetMidX(v58);
  uint64_t v28 = *(void *)((char *)v15 + *(int *)(v12 + 32) + *(int *)(v24 + 20));
  if (!*(void *)(v28 + 16)) {
    goto LABEL_50;
  }
  double v29 = MidX - *(double *)(v28 + 32);
  if (v29 <= 3.14159265)
  {
    uint64_t v30 = inited;
  }
  else
  {
    uint64_t v30 = inited;
    do
      double v29 = v29 + -6.28318531;
    while (v29 > 3.14159265);
  }
  for (; v29 < -3.14159265; double v29 = v29 + 6.28318531)
    ;
  *(double *)(v30 + 32) = v29;
  v59.origin.x = v20;
  v59.origin.y = v19;
  v59.size.width = v18;
  v59.size.height = v17;
  double MidY = CGRectGetMidY(v59);
  if (*(void *)(v28 + 16) < 2uLL) {
    goto LABEL_51;
  }
  for (double i = MidY - *(double *)(v28 + 40); i > 3.14159265; double i = i + -6.28318531)
    ;
  for (; i < -3.14159265; double i = i + 6.28318531)
    ;
  double v33 = -i;
  *(double *)(v30 + 40) = -i;
  if (i < 0.0)
  {
    if (*(void *)(v30 + 16) < 2uLL)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    double v34 = 1.0 - fabs(*(double *)(v30 + 32)) / v15[1];
    if (v34 < 0.0) {
      double v34 = 0.0;
    }
    *(double *)(v30 + 40) = v34 * v33;
  }
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = v53;
  uint64_t v36 = v26[2];
  if (!v36) {
    goto LABEL_52;
  }
  int v37 = (void *)v35;
  *(void *)(v35 + 32) = v26[4];
  if (v36 == 1)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v38 = v26[5];
  swift_bridgeObjectRelease();
  v37[5] = v38;
  id v39 = *(id *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_pid);
  uint64_t v40 = (double *)sub_2543415F8(v30, v37);
  swift_setDeallocating();

  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_25436E6A0;
  *(void *)(v41 + 48) = 0;
  uint64_t v42 = *((void *)v40 + 2);
  if (!v42)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v43 = v41;
  double v44 = v40[4];
  *(double *)(v41 + 32) = v44;
  if (*(unsigned char *)v15 == 1)
  {
    if (v42 == 1)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    double v45 = v40[5];
    swift_bridgeObjectRelease();
LABEL_38:
    *(double *)(v43 + 40) = v45;
    if (*((unsigned char *)v15 + 1) == 1)
    {
      double v44 = v44 * 1.5;
      *(double *)(v43 + 32) = v44;
    }
    uint64_t v47 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v55(v7, v47, v4);
    swift_retain();
    double v48 = sub_2542A1DA8((uint64_t)v7, v44);
    swift_release();
    char v49 = *(void (**)(char *, uint64_t))(v5 + 8);
    *(void *)&long long v53 = v5 + 8;
    v49(v7, v4);
    uint64_t v50 = *(void *)(v43 + 16);
    if (v50)
    {
      *(double *)(v43 + 32) = v48;
      if (v50 != 1)
      {
        double v51 = *(double *)(v43 + 40);
        v55(v7, v47, v4);
        swift_retain();
        double v52 = sub_2542A1DA8((uint64_t)v7, v51);
        swift_release();
        v49(v7, v4);
        if (*(void *)(v43 + 16) >= 2uLL)
        {
          *(double *)(v43 + 40) = v52;
          sub_254250354((uint64_t)v15);
          swift_setDeallocating();
          *a2 = v43;
          return;
        }
        goto LABEL_57;
      }
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v42 != 1)
  {
    double v46 = v40[5];
    swift_bridgeObjectRelease();
    double v45 = -v46;
    goto LABEL_38;
  }
LABEL_60:
  __break(1u);
}

void sub_25424DD7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388]();
  double v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DKCamera();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = (CGFloat *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) == 0)
  {
    CGFloat v10 = v8[2];
    CGFloat v9 = v8[3];
    CGFloat v12 = *v8;
    CGFloat v11 = v8[1];
    sub_2542503C8(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v2, &qword_269DD7808);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_25425042C((uint64_t)v2, &qword_269DD7808);
      return;
    }
    sub_2542502F0((uint64_t)v2, (uint64_t)v6);
    uint64_t v13 = *(void *)(*(void *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand);
    if (!v13
      || (uint64_t v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command),
          unsigned int v15 = *(unsigned __int16 *)(v13
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command
                                    + 16),
          v15 >= 0x4000))
    {
LABEL_15:
      sub_254250354((uint64_t)v6);
      return;
    }
    uint64_t v17 = *v14;
    uint64_t v16 = v14[1];
    CGFloat v18 = &v6[*(int *)(v3 + 32)];
    uint64_t v19 = *(void *)&v18[*(int *)(type metadata accessor for DKMotion3() + 20)];
    if (*(void *)(v19 + 16))
    {
      double v20 = *(double *)(v19 + 32);
      swift_retain();
      sub_2542503B0(v17, v16, v15);
      v23.origin.x = v12;
      v23.origin.y = v11;
      v23.size.width = v10;
      v23.size.height = v9;
      if (v20 - CGRectGetMidX(v23) <= 0.0)
      {
LABEL_11:
        double v21 = *(double *)(v19 + 32);
        v24.origin.x = v12;
        v24.origin.y = v11;
        v24.size.width = v10;
        v24.size.height = v9;
        if (v21 - CGRectGetMidX(v24) < 0.0)
        {
          if (*(void *)(v17 + 16))
          {
            swift_release();
            sub_2542503BC(v17, v16, v15);
            sub_254250354((uint64_t)v6);
            return;
          }
          goto LABEL_19;
        }
        swift_release();
        sub_2542503BC(v17, v16, v15);
        goto LABEL_15;
      }
      if (*(void *)(v17 + 16))
      {
        if (*(double *)(v17 + 32) > 0.0)
        {
          sub_254250354((uint64_t)v6);
          sub_2542503BC(v17, v16, v15);
          swift_release();
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
}

void sub_25424E06C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388]();
  double v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DKCamera();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (unsigned __int8 *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = (CGFloat *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) == 0)
  {
    CGFloat v10 = v8[2];
    CGFloat v9 = v8[3];
    CGFloat v12 = *v8;
    CGFloat v11 = v8[1];
    sub_2542503C8(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v2, &qword_269DD7808);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_25425042C((uint64_t)v2, &qword_269DD7808);
      return;
    }
    sub_2542502F0((uint64_t)v2, (uint64_t)v6);
    uint64_t v13 = *(void *)(*(void *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand);
    if (!v13) {
      goto LABEL_23;
    }
    uint64_t v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
    unsigned int v15 = *(unsigned __int16 *)(v13
                              + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command
                              + 16);
    if (v15 >= 0x4000) {
      goto LABEL_23;
    }
    uint64_t v17 = *v14;
    uint64_t v16 = v14[1];
    int v18 = *v6;
    uint64_t v19 = &v6[*(int *)(v3 + 32)];
    uint64_t v20 = *(void *)&v19[*(int *)(type metadata accessor for DKMotion3() + 20)];
    unint64_t v21 = *(void *)(v20 + 16);
    if (v18 == 1)
    {
      if (v21 >= 2)
      {
        double v22 = *(double *)(v20 + 40);
        swift_retain();
        sub_2542503B0(v17, v16, v15);
        v27.origin.x = v12;
        v27.origin.y = v11;
        v27.size.width = v10;
        v27.size.height = v9;
        if (v22 - CGRectGetMidY(v27) <= 0.0) {
          goto LABEL_11;
        }
        if (*(void *)(v17 + 16) >= 2uLL)
        {
          if (*(double *)(v17 + 40) >= 0.0)
          {
LABEL_11:
            double v23 = *(double *)(v20 + 40);
            v28.origin.x = v12;
            v28.origin.y = v11;
            v28.size.width = v10;
            v28.size.height = v9;
            if (v23 - CGRectGetMidY(v28) < 0.0)
            {
              if (*(void *)(v17 + 16) >= 2uLL)
              {
LABEL_13:
                swift_release();
                sub_2542503BC(v17, v16, v15);
                sub_254250354((uint64_t)v6);
                return;
              }
              goto LABEL_29;
            }
            goto LABEL_22;
          }
LABEL_18:
          sub_254250354((uint64_t)v6);
          sub_2542503BC(v17, v16, v15);
          swift_release();
          return;
        }
        goto LABEL_27;
      }
      __break(1u);
    }
    else if (v21 >= 2)
    {
      double v24 = *(double *)(v20 + 40);
      swift_retain();
      sub_2542503B0(v17, v16, v15);
      v29.origin.x = v12;
      v29.origin.y = v11;
      v29.size.width = v10;
      v29.size.height = v9;
      if (v24 - CGRectGetMidY(v29) > 0.0)
      {
        if (*(void *)(v17 + 16) < 2uLL)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (*(double *)(v17 + 40) > 0.0) {
          goto LABEL_18;
        }
      }
      double v25 = *(double *)(v20 + 40);
      v30.origin.x = v12;
      v30.origin.y = v11;
      v30.size.width = v10;
      v30.size.height = v9;
      if (v25 - CGRectGetMidY(v30) < 0.0)
      {
        if (*(void *)(v17 + 16) >= 2uLL) {
          goto LABEL_13;
        }
        goto LABEL_30;
      }
LABEL_22:
      swift_release();
      sub_2542503BC(v17, v16, v15);
LABEL_23:
      sub_254250354((uint64_t)v6);
      return;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t sub_25424E444()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_25424E568()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v4);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_25424E6EC()
{
  sub_25424E568();
  return swift_deallocClassInstance();
}

uint64_t sub_25424E744()
{
  return type metadata accessor for DKControlTask();
}

uint64_t type metadata accessor for DKControlTask()
{
  uint64_t result = qword_269DD76D0;
  if (!qword_269DD76D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25424E798()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for DKPIDConfig(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_25424E8F4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25424E914(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DKIdentityConfidence(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DKIdentityConfidence(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for espresso_network_t(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DKPersonSelectionFilter.SelectionCriteria(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKControlTask.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25424EB60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25424EB88(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25424EB94(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DKControlTask.Event()
{
  return &type metadata for DKControlTask.Event;
}

ValueMetadata *type metadata accessor for DKControlTask.State()
{
  return &type metadata for DKControlTask.State;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23IntelligentTrackingCore13DKControlTaskC13ControlMethodOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25424ED20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25424ED48(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DKControlTask.ControlMethod()
{
  return &type metadata for DKControlTask.ControlMethod;
}

void type metadata accessor for ThermalState(uint64_t a1)
{
}

void type metadata accessor for AVVideoCodecType(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DKBodyKeyPoint(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DKBodyKeyPoint(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
}

void type metadata accessor for CMFormatDescription(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_25424EE70(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25424EE90(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_25424EED0(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v5 = a1 & 1;
  *(void *)(v3 + 24) = sub_254268D04(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(unsigned char *)(v3 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  BOOL v7 = 0;
  int v8 = 0;
  if (v6)
  {
    long long v9 = (char *)(a2 + 34);
    uint64_t v37 = v3;
    while (1)
    {
      uint64_t v10 = *(v9 - 2);
      char v11 = *(v9 - 1);
      char v38 = *v9;
      sub_2542509EC((uint64_t)v7);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_25424F7DC;
      *(void *)(v12 + 24) = 0;
      sub_2542509EC((uint64_t)v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = *(void *)(v3 + 24);
      *(void *)(v3 + 24) = 0x8000000000000000;
      unint64_t v16 = sub_254351600(v10);
      uint64_t v17 = *(void *)(v14 + 16);
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      char v20 = v15;
      if (*(void *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25429B528();
        }
      }
      else
      {
        sub_25429775C(v19, isUniquelyReferenced_nonNull_native);
        uint64_t v21 = sub_254351600(v10);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_20;
        }
        unint64_t v16 = v21;
      }
      *(void *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      double v23 = *(void **)(v3 + 24);
      uint64_t v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        uint64_t v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(unsigned char *)(v23[6] + v16) = v10;
        *(void *)(v23[7] + 8 * v16) = v25;
        uint64_t v26 = v23[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_19;
        }
        v23[2] = v28;
      }
      char v29 = v11;
      uint64_t v30 = v23[7];
      swift_bridgeObjectRelease();
      uint64_t v31 = *(char **)(v30 + 8 * v16);
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v16) = v31;
      if ((v32 & 1) == 0)
      {
        uint64_t v31 = sub_2542584E0(0, *((void *)v31 + 2) + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      unint64_t v34 = *((void *)v31 + 2);
      unint64_t v33 = *((void *)v31 + 3);
      if (v34 >= v33 >> 1)
      {
        uint64_t v31 = sub_2542584E0((char *)(v33 > 1), v34 + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      v9 += 3;
      *((void *)v31 + 2) = v34 + 1;
      uint64_t v35 = &v31[3 * v34];
      v35[32] = v10;
      v35[33] = v29;
      v35[34] = v38;
      int v8 = sub_254250C54;
      BOOL v7 = sub_25424F7DC;
      --v6;
      uint64_t v3 = v37;
      if (!v6) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_25436D850();
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_2542509EC((uint64_t)v7);
    sub_2542509EC((uint64_t)v8);
    return v3;
  }
  return result;
}

uint64_t sub_25424F1D4(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 24) = sub_254268FC4(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(unsigned char *)(v3 + 16) = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  BOOL v7 = 0;
  int v8 = 0;
  if (v6)
  {
    long long v9 = (char *)(a2 + 34);
    uint64_t v37 = v3;
    while (1)
    {
      uint64_t v10 = *(v9 - 2);
      char v11 = *(v9 - 1);
      char v38 = *v9;
      sub_2542509EC((uint64_t)v7);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_25424F7DC;
      *(void *)(v12 + 24) = 0;
      sub_2542509EC((uint64_t)v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = *(void *)(v3 + 24);
      *(void *)(v3 + 24) = 0x8000000000000000;
      unint64_t v16 = sub_2543517E0(v10);
      uint64_t v17 = *(void *)(v14 + 16);
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      char v20 = v15;
      if (*(void *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25429B6E8();
        }
      }
      else
      {
        sub_254297A34(v19, isUniquelyReferenced_nonNull_native);
        uint64_t v21 = sub_2543517E0(v10);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_20;
        }
        unint64_t v16 = v21;
      }
      *(void *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      double v23 = *(void **)(v3 + 24);
      uint64_t v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        uint64_t v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(unsigned char *)(v23[6] + v16) = v10;
        *(void *)(v23[7] + 8 * v16) = v25;
        uint64_t v26 = v23[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_19;
        }
        v23[2] = v28;
      }
      char v29 = v11;
      uint64_t v30 = v23[7];
      swift_bridgeObjectRelease();
      uint64_t v31 = *(char **)(v30 + 8 * v16);
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v16) = v31;
      if ((v32 & 1) == 0)
      {
        uint64_t v31 = sub_254258C4C(0, *((void *)v31 + 2) + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      unint64_t v34 = *((void *)v31 + 2);
      unint64_t v33 = *((void *)v31 + 3);
      if (v34 >= v33 >> 1)
      {
        uint64_t v31 = sub_254258C4C((char *)(v33 > 1), v34 + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      v9 += 3;
      *((void *)v31 + 2) = v34 + 1;
      uint64_t v35 = &v31[3 * v34];
      v35[32] = v10;
      v35[33] = v29;
      v35[34] = v38;
      int v8 = sub_254250A0C;
      BOOL v7 = sub_25424F7DC;
      --v6;
      uint64_t v3 = v37;
      if (!v6) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_25436D850();
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_2542509EC((uint64_t)v7);
    sub_2542509EC((uint64_t)v8);
    return v3;
  }
  return result;
}

uint64_t sub_25424F4D8(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 24) = sub_254268FE4(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(unsigned char *)(v3 + 16) = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  BOOL v7 = 0;
  int v8 = 0;
  if (v6)
  {
    long long v9 = (char *)(a2 + 34);
    uint64_t v37 = v3;
    while (1)
    {
      uint64_t v10 = *(v9 - 2);
      char v11 = *(v9 - 1);
      char v38 = *v9;
      sub_2542509EC((uint64_t)v7);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_25424F7DC;
      *(void *)(v12 + 24) = 0;
      sub_2542509EC((uint64_t)v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = *(void *)(v3 + 24);
      *(void *)(v3 + 24) = 0x8000000000000000;
      unint64_t v16 = sub_2543517E0(v10);
      uint64_t v17 = *(void *)(v14 + 16);
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        break;
      }
      char v20 = v15;
      if (*(void *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_25429B6F4();
        }
      }
      else
      {
        sub_254297A40(v19, isUniquelyReferenced_nonNull_native);
        uint64_t v21 = sub_2543517E0(v10);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_20;
        }
        unint64_t v16 = v21;
      }
      *(void *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      double v23 = *(void **)(v3 + 24);
      uint64_t v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        uint64_t v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(unsigned char *)(v23[6] + v16) = v10;
        *(void *)(v23[7] + 8 * v16) = v25;
        uint64_t v26 = v23[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_19;
        }
        v23[2] = v28;
      }
      char v29 = v11;
      uint64_t v30 = v23[7];
      swift_bridgeObjectRelease();
      uint64_t v31 = *(char **)(v30 + 8 * v16);
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v16) = v31;
      if ((v32 & 1) == 0)
      {
        uint64_t v31 = sub_254258C58(0, *((void *)v31 + 2) + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      unint64_t v34 = *((void *)v31 + 2);
      unint64_t v33 = *((void *)v31 + 3);
      if (v34 >= v33 >> 1)
      {
        uint64_t v31 = sub_254258C58((char *)(v33 > 1), v34 + 1, 1, v31);
        *(void *)(v30 + 8 * v16) = v31;
      }
      v9 += 3;
      *((void *)v31 + 2) = v34 + 1;
      uint64_t v35 = &v31[3 * v34];
      v35[32] = v10;
      v35[33] = v29;
      v35[34] = v38;
      int v8 = sub_254250C54;
      BOOL v7 = sub_25424F7DC;
      --v6;
      uint64_t v3 = v37;
      if (!v6) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_25436D850();
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_2542509EC((uint64_t)v7);
    sub_2542509EC((uint64_t)v8);
    return v3;
  }
  return result;
}

uint64_t sub_25424F7DC()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_25424F7E8()
{
  return sub_25436C890();
}

uint64_t sub_25424F834()
{
  return sub_25436C880();
}

uint64_t sub_25424F88C()
{
  return sub_25424FC08();
}

BOOL sub_25424F8A4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25424F8B8()
{
  swift_getWitnessTable();
  return sub_25436C870();
}

uint64_t sub_25424F924(uint64_t a1, uint64_t a2)
{
  return sub_25424FF34(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_25424F948(uint64_t a1, uint64_t a2)
{
  return sub_25424FF34(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_25424F968(uint64_t a1, id *a2)
{
  uint64_t result = sub_25436CBE0();
  *a2 = 0;
  return result;
}

uint64_t sub_25424F9E0(uint64_t a1, id *a2)
{
  char v3 = sub_25436CBF0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25424FA60@<X0>(uint64_t *a1@<X8>)
{
  sub_25436CC00();
  uint64_t v2 = sub_25436CBD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_25424FAA4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_25424FAB4(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_25424FAC0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_25424FAD0()
{
  swift_getWitnessTable();
  return sub_25436C870();
}

void sub_25424FB40(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25424FB4C()
{
  return sub_25436C890();
}

uint64_t sub_25424FB98()
{
  return sub_25436C880();
}

uint64_t sub_25424FBF0()
{
  return sub_25424FC08();
}

uint64_t sub_25424FC08()
{
  return sub_25436D930();
}

uint64_t sub_25424FC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25436CC00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25424FC9C(uint64_t a1)
{
  uint64_t v2 = sub_25424FEEC(&qword_269DD7878, type metadata accessor for VNImageOption);
  uint64_t v3 = sub_25424FEEC((unint64_t *)&unk_269DD7880, type metadata accessor for VNImageOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25424FD58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25436CBD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25424FDA0(uint64_t a1)
{
  uint64_t v2 = sub_25424FEEC(&qword_269DD77F8, type metadata accessor for AVVideoCodecType);
  uint64_t v3 = sub_25424FEEC(&qword_269DD7800, type metadata accessor for AVVideoCodecType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25424FE5C()
{
  return sub_25424FEEC(&qword_269DD77B8, type metadata accessor for AVVideoCodecType);
}

uint64_t sub_25424FEA4()
{
  return sub_25424FEEC(&qword_269DD77C0, type metadata accessor for AVVideoCodecType);
}

uint64_t sub_25424FEEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25424FF34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_25436CC00();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25424FF78()
{
  sub_25436CC00();
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25424FFCC()
{
  sub_25436CC00();
  sub_25436D8F0();
  sub_25436CC90();
  uint64_t v0 = sub_25436D930();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_254250040()
{
  uint64_t v0 = sub_25436CC00();
  uint64_t v2 = v1;
  if (v0 == sub_25436CC00() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2542500CC()
{
  return sub_25424FEEC(&qword_269DD77C8, type metadata accessor for AVVideoCodecType);
}

unint64_t sub_254250118()
{
  unint64_t result = qword_269DD77D0;
  if (!qword_269DD77D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD77D0);
  }
  return result;
}

unint64_t sub_254250170()
{
  unint64_t result = qword_269DD77D8;
  if (!qword_269DD77D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD77D8);
  }
  return result;
}

unint64_t sub_2542501C8()
{
  unint64_t result = qword_269DD77E0;
  if (!qword_269DD77E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD77E0);
  }
  return result;
}

uint64_t sub_25425021C()
{
  return sub_25424FEEC(&qword_269DD77E8, type metadata accessor for CVBuffer);
}

uint64_t sub_254250264()
{
  return sub_25424FEEC(&qword_269DD77F0, type metadata accessor for CVBuffer);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2542502F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254250354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2542503B0(uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x8000) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2542503BC(uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x8000) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2542503C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25425042C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_254250488(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DKCamera();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v25 - v9;
  char v11 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32)) {
    return 0;
  }
  CGFloat v14 = v11[2];
  CGFloat v13 = v11[3];
  CGFloat v16 = *v11;
  CGFloat v15 = v11[1];
  sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v3, &qword_269DD7808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_25425042C((uint64_t)v3, &qword_269DD7808);
    return 0;
  }
  sub_2542502F0((uint64_t)v3, (uint64_t)v10);
  uint64_t v17 = &v10[*(int *)(v4 + 32)];
  uint64_t result = type metadata accessor for DKMotion3();
  uint64_t v19 = *(void *)&v17[*(int *)(result + 20)];
  if (*(void *)(v19 + 16))
  {
    uint64_t v20 = result;
    double v21 = *(double *)(v19 + 32);
    v26.origin.x = v16;
    v26.origin.y = v15;
    v26.size.width = v14;
    v26.size.height = v13;
    double MinX = CGRectGetMinX(v26);
    uint64_t result = sub_254250968((uint64_t)v10, (uint64_t)v8);
    if (MinX >= v21)
    {
      BOOL v12 = 0;
      goto LABEL_10;
    }
    uint64_t v23 = *(void *)&v8[*(int *)(v4 + 32) + *(int *)(v20 + 20)];
    if (*(void *)(v23 + 16))
    {
      double v24 = *(double *)(v23 + 32);
      v27.origin.x = v16;
      v27.origin.y = v15;
      v27.size.width = v14;
      v27.size.height = v13;
      BOOL v12 = v24 < CGRectGetMaxX(v27);
LABEL_10:
      sub_254250354((uint64_t)v8);
      sub_254250354((uint64_t)v10);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2542506F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DKCamera();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v26 - v10;
  BOOL v12 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32)) {
    return 0;
  }
  CGFloat v15 = v12[2];
  CGFloat v14 = v12[3];
  CGFloat v17 = *v12;
  CGFloat v16 = v12[1];
  sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v4, &qword_269DD7808);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_25425042C((uint64_t)v4, &qword_269DD7808);
    return 0;
  }
  sub_2542502F0((uint64_t)v4, (uint64_t)v11);
  BOOL v18 = &v11[*(int *)(v5 + 32)];
  uint64_t result = type metadata accessor for DKMotion3();
  uint64_t v20 = *(void *)&v18[*(int *)(result + 20)];
  if (*(void *)(v20 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = result;
    double v22 = *(double *)(v20 + 40);
    v27.origin.x = v17;
    v27.origin.y = v16;
    v27.size.width = v15;
    v27.size.height = v14;
    double MinY = CGRectGetMinY(v27);
    uint64_t result = sub_254250968((uint64_t)v11, (uint64_t)v9);
    if (MinY >= v22)
    {
      BOOL v13 = 0;
      goto LABEL_10;
    }
    uint64_t v24 = *(void *)&v9[*(int *)(v5 + 32) + *(int *)(v21 + 20)];
    if (*(void *)(v24 + 16) >= 2uLL)
    {
      double v25 = *(double *)(v24 + 40);
      v28.origin.x = v17;
      v28.origin.y = v16;
      v28.size.width = v15;
      v28.size.height = v14;
      BOOL v13 = v25 < CGRectGetMaxY(v28);
LABEL_10:
      sub_254250354((uint64_t)v9);
      sub_254250354((uint64_t)v11);
      return v13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254250968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542509CC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2542509DC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2542509EC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2542509FC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_254250A0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

void type metadata accessor for espresso_return_status_t(uint64_t a1)
{
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_254250AA0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_254250AE8()
{
  return sub_25424FEEC(&qword_269DD7850, type metadata accessor for VNImageOption);
}

uint64_t sub_254250B30()
{
  return sub_25424FEEC(&qword_269DD7858, type metadata accessor for VNImageOption);
}

uint64_t sub_254250B78()
{
  return sub_25424FEEC((unint64_t *)&qword_269DD7860, type metadata accessor for CFString);
}

uint64_t sub_254250BC0()
{
  return sub_25424FEEC(&qword_269DD7868, type metadata accessor for CFString);
}

uint64_t sub_254250C08()
{
  return sub_25424FEEC(&qword_269DD7870, type metadata accessor for VNImageOption);
}

uint64_t DKConstantAccelerationFilter.Measurement.__allocating_init(time:)(char *a1)
{
  uint64_t v2 = swift_allocObject();
  DKConstantAccelerationFilter.Measurement.init(time:)(a1);
  return v2;
}

uint64_t DKConstantAccelerationFilter.Measurement.init(time:)(char *a1)
{
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  *(void *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices) = MEMORY[0x263F8EE88];
  v7((char *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time), v6, v3);
  uint64_t v8 = (void *)sub_25436CE40();
  v8[2] = 3;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement) = v8;
  uint64_t v9 = (void *)sub_25436CE40();
  v9[2] = 3;
  v9[5] = 0;
  v9[6] = 0;
  v9[4] = 0;
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  *(void *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance) = v9;
  v10(a1, v3);
  return v1;
}

void *static DKConstantAccelerationFilter.Index.allCases.getter()
{
  return &unk_2703B1D20;
}

uint64_t sub_254250E68(unsigned __int8 *a1, double a2, double a3)
{
  sub_25434EE84(*a1, a2, a3);
  return swift_retain();
}

uint64_t DKConstantAccelerationFilter.Index.rawValue.getter()
{
  return *v0;
}

uint64_t DKConstantAccelerationFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantAccelerationFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional __swiftcall DKConstantAccelerationFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional sub_254251038(Swift::Int *a1)
{
  return DKConstantAccelerationFilter.Index.init(rawValue:)(*a1);
}

void sub_254251040(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_25425104C(void *a1@<X8>)
{
  *a1 = &unk_2703B1D48;
}

double sub_25425105C()
{
  return *(double *)(v0 + 56);
}

void sub_254251064(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t (*sub_25425106C())()
{
  return nullsub_1;
}

double sub_25425108C()
{
  return *(double *)(v0 + 64);
}

void sub_254251094(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*sub_25425109C())()
{
  return nullsub_1;
}

uint64_t sub_2542510BC(uint64_t a1)
{
  sub_25425269C(a1);
  return swift_retain();
}

uint64_t sub_2542510E4(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_254251B00(a2, a3 & 1, a4, a5 & 1, v11, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14;
  swift_bridgeObjectRelease();
  return swift_retain();
}

uint64_t DKConstantAccelerationFilter.Configuration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantAccelerationFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKConstantAccelerationFilter.__allocating_init(configuration:)(uint64_t a1)
{
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = a1;
  uint64_t v1 = swift_retain();
  sub_254353F8C(v1, 3);
  uint64_t v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKConstantAccelerationFilter.init(configuration:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = a1;
  uint64_t v2 = swift_retain();
  sub_254353F8C(v2, 3);
  uint64_t v4 = v3;
  swift_release();
  return v4;
}

uint64_t sub_2542512A8(unsigned __int8 *a1, unsigned __int8 *a2, double a3)
{
  return sub_25425178C(*a1, *a2, a3);
}

unsigned __int8 *sub_2542512E0(unsigned __int8 *result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(void *)(v2 + 16) <= (uint64_t)*result || *(uint64_t *)(v2 + 24) < 1)
  {
    uint64_t result = (unsigned __int8 *)sub_25436D4F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25425136C(unsigned __int8 *a1, double a2)
{
  return sub_25434F188(*a1, a2);
}

uint64_t sub_254251374(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v9(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_25436C700();
  double v11 = v10;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  uint64_t v13 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F;
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  uint64_t v15 = v14[2];
  if (v15 < 1) {
    goto LABEL_29;
  }
  uint64_t v16 = v14[3];
  if (v16 <= 1) {
    goto LABEL_29;
  }
  uint64_t v17 = v14[4];
  *(double *)(v17 + 8 * v15) = v11;
  if (v16 == 2) {
    goto LABEL_29;
  }
  if (v15 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  *(double *)(v17 + 16 * v15) = v11 * (v11 * 0.5);
  if ((unint64_t)v15 <= 1) {
    goto LABEL_29;
  }
  *(double *)(v17 + ((16 * v15) | 8)) = v11;
  ((void (*)(char *, uint64_t, uint64_t))v9)(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v4);
  sub_25436C700();
  double v19 = v18;
  v12(v8, v4);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration);
  if (*(double *)(v20 + 56) >= v19)
  {
    uint64_t v30 = *(void **)(v2 + v13);
    uint64_t v31 = v30[2];
    if (v31 < 3) {
      goto LABEL_29;
    }
    uint64_t v32 = v30[3];
    if (v32 <= 1) {
      goto LABEL_29;
    }
    if (!__OFADD__(v31, 2))
    {
      uint64_t v25 = v30[4];
      *(void *)(v25 + 8 * (v31 + 2)) = 0;
      if ((unint64_t)v32 > 2)
      {
        if (v31 + 0x4000000000000000 >= 0)
        {
          uint64_t v33 = 2 * v31;
          BOOL v27 = __OFADD__(v33, 2);
          uint64_t v28 = v33 + 2;
          if (!v27)
          {
            double v29 = 1.0;
            goto LABEL_21;
          }
          goto LABEL_28;
        }
        goto LABEL_26;
      }
      goto LABEL_29;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v21 = *(void **)(v2 + v13);
  uint64_t v22 = v21[2];
  if (v22 < 3) {
    goto LABEL_29;
  }
  uint64_t v23 = v21[3];
  if (v23 <= 1) {
    goto LABEL_29;
  }
  if (__OFADD__(v22, 2))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v24 = *(void *)(v20 + 64);
  uint64_t v25 = v21[4];
  *(void *)(v25 + 8 * (v22 + 2)) = v24;
  if ((unint64_t)v23 > 2)
  {
    if (v22 + 0x4000000000000000 >= 0)
    {
      uint64_t v26 = 2 * v22;
      BOOL v27 = __OFADD__(v26, 2);
      uint64_t v28 = v26 + 2;
      if (!v27)
      {
        double v29 = 0.0;
LABEL_21:
        *(double *)(v25 + 8 * v28) = v29;
        return sub_25434F220(a1);
      }
      goto LABEL_27;
    }
    goto LABEL_25;
  }
LABEL_29:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

void DKConstantAccelerationFilter.__allocating_init(configuration:stateSize:)()
{
}

void DKConstantAccelerationFilter.init(configuration:stateSize:)()
{
}

uint64_t sub_2542516D0()
{
  return swift_release();
}

uint64_t DKConstantAccelerationFilter.deinit()
{
  uint64_t v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKConstantAccelerationFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25425178C(uint64_t result, uint64_t a2, double a3)
{
  uint64_t v4 = v3[2];
  if (v4 > result && ((a2 | result) & 0x8000000000000000) == 0 && v3[3] > a2)
  {
    uint64_t v5 = a2 * v4;
    if ((unsigned __int128)(a2 * (__int128)v4) >> 64 == (a2 * v4) >> 63)
    {
      if (!__OFADD__(v5, result))
      {
        *(double *)(v3[4] + 8 * (v5 + result)) = a3;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t sub_25425182C(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_25436CE40();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_254251920(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_25436CE40();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_254251A0C(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_25436CE40();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_254251B00(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  int32x4_t v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_254351604(a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= result && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 32 * v16;
      *(void *)uint64_t v23 = a1;
      *(unsigned char *)(v23 + 8) = a2 & 1;
      *(void *)(v23 + 16) = a3;
      *(unsigned char *)(v23 + 24) = a4 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25429B534();
    goto LABEL_7;
  }
  sub_254297768(result, a6 & 1);
  uint64_t result = sub_254351604(a5);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25429B0F4(v16, a5, a1, a2 & 1, a3, a4 & 1, v22);
}

uint64_t sub_254251C6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_254351890(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
      return sub_254252DD4(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25429BEBC();
    goto LABEL_7;
  }
  sub_2542986AC(v17, a3 & 1);
  unint64_t v24 = sub_254351890(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25429B214(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_254251E40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_254351890(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for DKPersonGroup(0);
      return sub_254252DD4(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for DKPersonGroup);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25429BE88();
    goto LABEL_7;
  }
  sub_254298678(v17, a3 & 1);
  unint64_t v24 = sub_254351890(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25429B1E8(v14, (uint64_t)v11, a1, v20);
}

void sub_254252014(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2543516FC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_25429C75C();
    goto LABEL_7;
  }
  sub_2542993FC(v15, a4 & 1);
  unint64_t v20 = sub_2543516FC(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_25436D850();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_25429B334(v12, a2, a3, a1, v18);
  swift_bridgeObjectRetain();
}

uint64_t sub_254252154(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_254351604(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25429C910();
      goto LABEL_7;
    }
    sub_25429970C(v13, a3 & 1);
    unint64_t v24 = sub_254351604(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_25436C7B0();
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_25429B37C(v10, a2, a1, v16);
}

uint64_t sub_2542522BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_254351604(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25429D020();
    goto LABEL_7;
  }
  sub_25429A1F4(result, a3 & 1);
  uint64_t result = sub_254351604(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25429B428(v10, a2, a1, v16);
}

unint64_t sub_2542523D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_254351604(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_25429D4FC();
    goto LABEL_7;
  }
  sub_25429AA14(v13, a3 & 1);
  unint64_t v19 = sub_254351604(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_25429B428(v10, a2, a1, v16);
}

uint64_t sub_254252500(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_254351890(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25429D6A0();
    goto LABEL_7;
  }
  sub_25429ACCC(result, a3 & 1);
  uint64_t result = sub_254351890(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_25429B470(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_25425269C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_2542E27F8(0, v2, 0);
    uint64_t v4 = v14;
    unint64_t v5 = (unsigned __int8 *)(a1 + 32);
    unint64_t v6 = *(void *)(v14 + 16);
    do
    {
      unsigned int v8 = *v5++;
      uint64_t v7 = v8;
      uint64_t v14 = v4;
      unint64_t v9 = *(void *)(v4 + 24);
      unint64_t v10 = v6 + 1;
      if (v6 >= v9 >> 1)
      {
        sub_2542E27F8(v9 > 1, v6 + 1, 1);
        uint64_t v4 = v14;
      }
      *(void *)(v4 + 16) = v10;
      *(void *)(v4 + 8 * v6++ + 32) = v7;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    unint64_t v10 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v10) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  do
  {
    uint64_t v12 = *(void *)(v4 + 8 * v11++ + 32);
    sub_2542683B0(&v14, v12);
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_2542527BC()
{
  unint64_t result = qword_269DD7950;
  if (!qword_269DD7950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7950);
  }
  return result;
}

unint64_t sub_254252814()
{
  unint64_t result = qword_269DD7958;
  if (!qword_269DD7958)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7958);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

double sub_2542528B8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2542528C8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 56) = *a1;
  return result;
}

double sub_2542528D8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 64);
  *a2 = result;
  return result;
}

double sub_2542528E8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 64) = *a1;
  return result;
}

uint64_t sub_2542528F8()
{
  return type metadata accessor for DKConstantAccelerationFilter(0);
}

uint64_t type metadata accessor for DKConstantAccelerationFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD7968);
}

uint64_t sub_254252920()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for DKConstantAccelerationFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKConstantAccelerationFilter);
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.updateQ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.getState(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.setState(index:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.update(measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t sub_254252A44()
{
  return type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
}

uint64_t type metadata accessor for DKConstantAccelerationFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD7978);
}

uint64_t sub_254252A6C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254252AA4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for DKConstantAccelerationFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKConstantAccelerationFilter.Measurement);
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Measurement.__allocating_init(time:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Measurement.set(index:value:variance:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

unsigned char *storeEnumTagSinglePayload for DKConstantAccelerationFilter.Index(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254252BF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKConstantAccelerationFilter.Index()
{
  return &type metadata for DKConstantAccelerationFilter.Index;
}

uint64_t type metadata accessor for DKConstantAccelerationFilter.Configuration()
{
  return self;
}

uint64_t method lookup function for DKConstantAccelerationFilter.Configuration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKConstantAccelerationFilter.Configuration);
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.setAngleIndices(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.setLimits(index:min:max:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)v5 + 336))(a1, a2, a3 & 1, a4, a5 & 1);
}

uint64_t sub_254252DD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t DKMatrix.rows.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t DKMatrix.columns.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_254252E4C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_254252E54(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 32) = result;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t DKMatrix.__allocating_init(rows:columns:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DKMatrix.init(rows:columns:)(a1, a2);
  return v4;
}

uint64_t DKMatrix.init(rows:columns:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    v2[4] = sub_25436D160();
    v2[5] = v5;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DKMatrix.__allocating_init(repeating:rows:columns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_allocObject();
  uint64_t v8 = sub_254256340(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a1);
  return v8;
}

uint64_t DKMatrix.init(repeating:rows:columns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v6 = sub_254256340(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t DKMatrix.__allocating_init(rows:columns:array:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  DKMatrix.init(rows:columns:array:)(a1, a2, a3);
  return v6;
}

uint64_t *DKMatrix.init(rows:columns:array:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v4;
  v4[2] = a1;
  v4[3] = a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = a3;
  uint64_t v3 = *(void *)(v6 + 80);
  v4[4] = sub_25436D160();
  v4[5] = v7;
  if (sub_25436D150())
  {
    swift_bridgeObjectRetain();
    if ((_swift_isClassOrObjCExistentialType() & 1) == 0
      || (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
    {
      swift_bridgeObjectRelease();
      _swift_isClassOrObjCExistentialType();
      goto LABEL_8;
    }
LABEL_16:
    if (MEMORY[0x25A275580](v5, v3))
    {
      sub_25436D330();
      swift_getWitnessTable();
      sub_25436D400();
      swift_unknownObjectRetain();
      sub_25436D730();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_13:
      sub_25436D120();
      swift_unknownObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    if ((_swift_isClassOrObjCExistentialType() & 1) != 0 && (v5 < 0 || (v5 & 0x4000000000000000) != 0))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      _swift_isClassOrObjCExistentialType();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t DKMatrix.__allocating_init(rows:columns:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_254256450(a1, a2);
  sub_2542564BC(a3, a4);
  return v6;
}

uint64_t DKMatrix.init(rows:columns:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_2542563B4(a1, a2);
  sub_2542564BC(a3, a4);
  return v6;
}

uint64_t DKMatrix.deinit()
{
  sub_25436D140();
  return v0;
}

uint64_t DKMatrix.__deallocating_deinit()
{
  sub_25436D140();
  return swift_deallocClassInstance();
}

uint64_t sub_254253418(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v8 - v1;
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  (*(void (**)(char *))(v6 + 16))((char *)&v8 - v1);
  return sub_2542535F4((uint64_t)v2, v4, v5);
}

uint64_t sub_2542534F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3[2];
  if (v4 <= a1 || (a2 | a1) < 0 || v3[3] <= a2) {
    goto LABEL_11;
  }
  uint64_t v5 = a2 * v4;
  if ((unsigned __int128)(a2 * (__int128)v4) >> 64 != (a2 * v4) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (__OFADD__(v5, a1))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    uint64_t result = sub_25436D4F0();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(*(void *)(*v3 + 80) - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v3[4] + *(void *)(v6 + 72) * (v5 + a1);
  return v7(a3, v8);
}

uint64_t sub_2542535F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[2];
  if (v4 <= a2 || (a3 | a2) < 0 || v3[3] <= a3) {
    goto LABEL_11;
  }
  uint64_t v5 = a3 * v4;
  if ((unsigned __int128)(a3 * (__int128)v4) >> 64 != (a3 * v4) >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (__OFADD__(v5, a2))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    uint64_t result = sub_25436D4F0();
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(*(void *)(*v3 + 80) - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 40);
  uint64_t v9 = v3[4] + *(void *)(v7 + 72) * (v5 + a2);
  return v8(v9, a1);
}

void (*sub_2542536FC(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t v8 = *(void *)(*(void *)v3 + 80);
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  sub_2542534F0(a2, a3, (uint64_t)v11);
  return sub_2542537EC;
}

void sub_2542537EC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  if (a2)
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    uint64_t v7 = v2[1];
    uint64_t v8 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_2542535F4((uint64_t)v3, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_2542535F4((*a1)[6], *v2, v2[1]);
  }
  free(v4);
  free(v3);
  free(v2);
}

void static DKMatrix.* infix(_:_:)()
{
}

{
  sub_25436D4F0();
  __break(1u);
}

void static DKMatrix.+ infix(_:_:)()
{
}

void static DKMatrix.- infix(_:_:)()
{
}

void static DKMatrix./ infix(_:_:)()
{
}

void static DKMatrix.+= infix(_:_:)()
{
}

void static DKMatrix.-= infix(_:_:)()
{
}

uint64_t sub_254253B3C()
{
  type metadata accessor for DKMatrix();
  uint64_t v0 = swift_retain();
  uint64_t v1 = sub_254256660(v0);
  swift_release();
  return v1;
}

BOOL sub_254253BB0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 16) <= a1) {
    return 0;
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if ((a2 | a1) >= 0)
  {
    BOOL v6 = __OFSUB__(v3, a2);
    BOOL v4 = v3 == a2;
    BOOL v5 = v3 - a2 < 0;
  }
  else
  {
    BOOL v6 = 0;
    BOOL v4 = 1;
    BOOL v5 = 0;
  }
  return !(v5 ^ v6 | v4);
}

uint64_t static DKMatrix.zeros(rows:columns:)(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result * a2;
  if ((unsigned __int128)(result * (__int128)a2) >> 64 == (result * a2) >> 63)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(*(void *)(*(void *)(v2 + 80) - 8) + 64);
    uint64_t result = v3 * v5;
    if ((unsigned __int128)(v3 * (__int128)v5) >> 64 == (v3 * v5) >> 63)
    {
      uint64_t v7 = sub_254256138(result);
      unint64_t v9 = v8;
      type metadata accessor for DKMatrix();
      uint64_t v10 = sub_254256450(v4, a2);
      sub_2542564BC(v7, v9);
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static DKMatrix.ones(rows:columns:)(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result * a2;
  if ((unsigned __int128)(result * (__int128)a2) >> 64 == (result * a2) >> 63)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(*(void *)(*(void *)(v2 + 80) - 8) + 64);
    uint64_t result = v3 * v5;
    if ((unsigned __int128)(v3 * (__int128)v5) >> 64 == (v3 * v5) >> 63)
    {
      uint64_t v9 = sub_254256138(result);
      unint64_t v10 = v7;
      MEMORY[0x270FA5388](v9);
      sub_2542555F8(sub_2542566A4);
      type metadata accessor for DKMatrix();
      uint64_t v8 = sub_254256450(v4, a2);
      sub_2542564BC(v9, v10);
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_254253DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedConformanceWitness = a4;
  uint64_t v9 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v23 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 16) + 16) + 8) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (a1)
  {
    uint64_t v14 = *(void *)(v9 + 72);
    if (!v14)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
      goto LABEL_19;
    }
  }
  uint64_t result = sub_25436D150();
  uint64_t v22 = result;
  if (!result) {
    return result;
  }
  uint64_t v15 = a3 * AssociatedConformanceWitness;
  if ((unsigned __int128)(a3 * (__int128)AssociatedConformanceWitness) >> 64 != (a3 * AssociatedConformanceWitness) >> 63) {
    goto LABEL_16;
  }
  uint64_t v16 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v16 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = 0;
  char v18 = v23;
  while (1)
  {
    sub_25436D800();
    sub_25436D7A0();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(v22 + *(void *)(v9 + 72) * v17, v18, a5);
    if (v16 == v17) {
      break;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

uint64_t static DKMatrix.identity(_:)(uint64_t result)
{
  uint64_t v2 = result * result;
  if ((unsigned __int128)(result * (__int128)result) >> 64 == (result * result) >> 63)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)(*(void *)(*(void *)(v1 + 80) - 8) + 64);
    uint64_t result = v2 * v4;
    if ((unsigned __int128)(v2 * (__int128)v4) >> 64 == (v2 * v4) >> 63)
    {
      uint64_t v7 = sub_254256138(result);
      unint64_t v8 = v5;
      MEMORY[0x270FA5388](v7);
      sub_2542555F8(sub_2542566C4);
      type metadata accessor for DKMatrix();
      uint64_t v6 = sub_254256450(v3, v3);
      sub_2542564BC(v7, v8);
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_254254140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 16) + 16) + 8) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v27 = v8;
  if (a1)
  {
    uint64_t v14 = *(void *)(v8 + 72);
    if (!v14)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
      goto LABEL_24;
    }
  }
  uint64_t result = sub_25436D150();
  if (!result) {
    return result;
  }
  uint64_t v15 = a3 * a3;
  if ((unsigned __int128)(a3 * (__int128)a3) >> 64 != (a3 * a3) >> 63) {
    goto LABEL_21;
  }
  BOOL v16 = __OFADD__(a3, 1);
  uint64_t v17 = a3 + 1;
  if (v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!v17)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  BOOL v18 = v15 >= 0;
  uint64_t v25 = v15;
  if (v17 > 0) {
    BOOL v18 = v15 < 1;
  }
  if (!v18)
  {
    uint64_t v19 = result;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int64_t v21 = 0;
    v24[2] = v27 + 40;
    v24[3] = AssociatedConformanceWitness;
    do
    {
      if (__OFADD__(v21, v17)) {
        int64_t v22 = ((v21 + v17) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v22 = v21 + v17;
      }
      sub_25436D800();
      sub_25436D7A0();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 40))(v19 + *(void *)(v27 + 72) * v21, v10, a4);
      BOOL v23 = v25 >= v22;
      if (v17 > 0) {
        BOOL v23 = v22 >= v25;
      }
      int64_t v21 = v22;
    }
    while (!v23);
  }
  return result;
}

uint64_t static DKMatrix.diagonal(_:)(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = static DKMatrix.zeros(rows:columns:)(v4, v4);
  uint64_t v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v6 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t v8 = 0;
  while (1)
  {
    sub_2542534F0(v8, 0, (uint64_t)v3);
    sub_2542535F4((uint64_t)v3, v8, v8);
    if (v6 == v8) {
      break;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      return v7;
    }
  }
  return v7;
}

uint64_t sub_2542544CC(uint64_t result)
{
  uint64_t v2 = v1[2];
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 - 1 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v3 = v1[3];
  uint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(*v1 + 80);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      uint64_t result = v9(v1[4] + v10 * v6, v5, v7);
      if (v4) {
        break;
      }
LABEL_11:
      if (v6 == v2 - 1) {
        return result;
      }
      BOOL v13 = __OFADD__(v6++, 1);
      uint64_t v4 = v3 - 1;
      if (v13)
      {
        __break(1u);
        return result;
      }
    }
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v12 = v11 * v2;
      if ((unsigned __int128)(v11 * (__int128)v2) >> 64 != (v11 * v2) >> 63) {
        break;
      }
      BOOL v13 = __OFADD__(v12, v6);
      uint64_t v14 = v12 + v6;
      if (v13) {
        goto LABEL_17;
      }
      uint64_t result = v9(v1[4] + v14 * v10, v5, v7);
      if (v3 == ++v11) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_25425461C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v16 - v5;
  type metadata accessor for DKMatrix();
  uint64_t v8 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v9 = swift_allocObject();
  uint64_t result = DKMatrix.init(rows:columns:)(v7, v8);
  uint64_t v17 = v7 - 1;
  if (__OFSUB__(v7, 1)) {
    goto LABEL_20;
  }
  uint64_t v11 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v11 | v17) < 0)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v12 = 0;
  uint64_t v16 = v8;
  while (2)
  {
    uint64_t v13 = v12 * v8;
    if ((unsigned __int128)(v12 * (__int128)v8) >> 64 != (v12 * v8) >> 63)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v14 = 0;
    while (1)
    {
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2[4] + *(void *)(v4 + 72) * (v13 + v14), v3);
      uint64_t result = sub_2542535F4((uint64_t)v6, v12, v14);
      if (v11 == v14) {
        break;
      }
      BOOL v15 = __OFADD__(v14++, 1);
      if (v15) {
        goto LABEL_18;
      }
    }
    if (v12 != v17)
    {
      BOOL v15 = __OFADD__(v12++, 1);
      uint64_t v8 = v16;
      if (!v15) {
        continue;
      }
      __break(1u);
    }
    return v9;
  }
}

uint64_t DKMatrix<>.inverse()()
{
  return sub_254255138(&qword_269DD7988, (uint64_t (*)(uint64_t))sub_254354310, (void (*)(int *, uint64_t))sub_254254890);
}

{
  uint64_t vars8;

  return sub_254255138(qword_269DD7990, (uint64_t (*)(uint64_t))sub_254354BF4, (void (*)(int *, uint64_t))sub_254255258);
}

uint64_t sub_254254890(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = sub_254251920(0, v2);
  uint64_t v4 = (void *)sub_25425182C(v2, 0.0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_254258704(0, *(void *)(v3 + 16), 0, (char *)v3);
  }
  dgetrf_NEWLAPACK();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_2542585F4(0, v4[2], 0, v4);
  }
  dgetri_NEWLAPACK();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DKMatrix<>.transpose()()
{
  int64_t v2 = v0[2];
  int64_t v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  int64_t v4 = v1 * v2;
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v3;
  uint64_t v6 = (double *)swift_slowAlloc();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v4;
  uint64_t v7 = (const double *)v0[4];
  if (!v7) {
    return v5;
  }
  if ((v2 & 0x8000000000000000) == 0 && (v1 & 0x8000000000000000) == 0)
  {
    vDSP_mtransD(v7, 1, v6, 1, v2, v1);
    return v5;
  }
LABEL_10:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

{
  void *v0;
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  float *v6;
  const float *v7;
  uint64_t result;

  int64_t v2 = v0[2];
  int64_t v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7990);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  int64_t v4 = v1 * v2;
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v4 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v3;
  uint64_t v6 = (float *)swift_slowAlloc();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v4;
  uint64_t v7 = (const float *)v0[4];
  if (!v7) {
    return v5;
  }
  if ((v2 & 0x8000000000000000) == 0 && (v1 & 0x8000000000000000) == 0)
  {
    vDSP_mtrans(v7, 1, v6, 1, v2, v1);
    return v5;
  }
LABEL_10:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t DKMatrix<>.dot(matrix:)(uint64_t a1)
{
  if (!*(void *)(v1 + 32) || !*(void *)(a1 + 32)) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    sub_25436D4F0();
    __break(1u);
    return MEMORY[0x270EDE320]();
  }
  return MEMORY[0x270EDE320]();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t vars8;

  if (!*(void *)(v1 + 32) || !*(void *)(a1 + 32)) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    sub_25436D4F0();
    __break(1u);
    return MEMORY[0x270EDE428]();
  }
  return MEMORY[0x270EDE428]();
}

void DKMatrix<>.fill(repeating:)(double a1)
{
  __A[1] = *(double *)MEMORY[0x263EF8340];
  __A[0] = a1;
  uint64_t v2 = (double *)v1[4];
  if (v2)
  {
    uint64_t v3 = v1[2];
    uint64_t v4 = v1[3];
    vDSP_Length v5 = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63) {
      __break(1u);
    }
    if ((v5 & 0x8000000000000000) != 0)
    {
      sub_25436D4E0();
      __break(1u);
    }
    else
    {
      vDSP_vfillD(__A, v2, 1, v5);
    }
  }
}

uint64_t static DKMatrix<>.* infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7990);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v6;
  v6[4] = swift_slowAlloc();
  v8[5] = v7;
  if (!a1[4] || !a2[4]) {
    goto LABEL_23;
  }
  if (v4 > 0x7FFFFFFF) {
    goto LABEL_16;
  }
  if (v4 < (uint64_t)0xFFFFFFFF80000000 || v5 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_17;
  }
  if (v5 > 0x7FFFFFFF)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = a1[3];
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = a2[2];
  if (v10 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v10 <= 0x7FFFFFFF)
    {
      cblas_sgemm_NEWLAPACK();
      return (uint64_t)v8;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t static DKMatrix<>.+ infix(_:_:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7990);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (float *)swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = (const float *)a1[4];
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = *(const float **)(a2 + 32);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = a1[3];
  vDSP_Length v13 = v4 * v12;
  if ((unsigned __int128)(v4 * (__int128)v12) >> 64 != (v4 * v12) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_25436D4F0();
    __break(1u);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    vDSP_vadd(v10, 1, v11, 1, v9, 1, v13);
    return v8;
  }
LABEL_12:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t static DKMatrix<>.- infix(_:_:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7990);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v6;
  uint64_t v9 = swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = (const float *)a1[4];
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = (float *)v9;
  uint64_t v12 = *(const float **)(a2 + 32);
  if (!v12) {
    goto LABEL_11;
  }
  uint64_t v13 = a1[3];
  vDSP_Length v14 = v4 * v13;
  if ((unsigned __int128)(v4 * (__int128)v13) >> 64 != (v4 * v13) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_25436D4F0();
    __break(1u);
    goto LABEL_12;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    vDSP_vsub(v12, 1, v10, 1, v11, 1, v14);
    return v8;
  }
LABEL_12:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254255138(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(int *, uint64_t))
{
  uint64_t v6 = v3;
  uint64_t v12 = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_allocObject();
  uint64_t v7 = swift_retain();
  uint64_t v8 = a2(v7);
  swift_release();
  if (*(void *)(v8 + 32))
  {
    uint64_t v9 = *(void *)(v6 + 16);
    if (v9 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v9 <= 0x7FFFFFFF)
    {
      int v11 = *(void *)(v6 + 16);
      a3(&v11, v6);
      return v8;
    }
    __break(1u);
  }
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t sub_254255258(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = sub_254251920(0, v2);
  uint64_t v4 = sub_254251A0C(v2, 0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_254258704(0, *(void *)(v3 + 16), 0, (char *)v3);
  }
  sgetrf_NEWLAPACK();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_254258814(0, *(void *)(v4 + 16), 0, (char *)v4);
  }
  sgetri_NEWLAPACK();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void DKMatrix<>.fill(repeating:)(float a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  float __A = a1;
  unint64_t v2 = (float *)v1[4];
  if (v2)
  {
    uint64_t v3 = v1[2];
    uint64_t v4 = v1[3];
    vDSP_Length v5 = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63) {
      __break(1u);
    }
    if ((v5 & 0x8000000000000000) != 0)
    {
      sub_25436D4E0();
      __break(1u);
    }
    else
    {
      vDSP_vfill(&__A, v2, 1, v5);
    }
  }
}

uint64_t sub_2542555F8(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_254255B48(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25436C620();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_25436C4B0();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x254255834);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_25436C4E0();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_25436C4D0();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      void *v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      void *v1 = v4;
      v1[1] = v5;
      return result;
  }
}

char *sub_254255844(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_25436F0A0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_25436C4B0() && __OFSUB__((int)v4, sub_25436C4E0())) {
        goto LABEL_24;
      }
      sub_25436C4F0();
      swift_allocObject();
      uint64_t v13 = sub_25436C490();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_254255BF8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        uint64_t *v5 = v4;
        goto LABEL_19;
      }
      uint64_t *v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25436C620();
      uint64_t result = sub_254255BF8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        uint64_t *v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        uint64_t *v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      uint64_t *v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

uint64_t sub_254255B48(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_25436C640();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_25436C4B0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_25436C4E0();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_25436C4D0();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

char *sub_254255BF8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_25436C4B0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_25436C4E0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_25436C4D0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v6;
  v6[4] = swift_slowAlloc();
  v8[5] = v7;
  if (!a1[4] || !a2[4]) {
    goto LABEL_23;
  }
  if (v4 > 0x7FFFFFFF) {
    goto LABEL_16;
  }
  if (v4 < (uint64_t)0xFFFFFFFF80000000 || v5 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_17;
  }
  if (v5 > 0x7FFFFFFF)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = a1[3];
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = a2[2];
  if (v10 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v10 <= 0x7FFFFFFF)
    {
      cblas_dgemm_NEWLAPACK();
      return (uint64_t)v8;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGSd_AEtFZ_0(void *a1, double a2)
{
  __B[1] = *(double *)MEMORY[0x263EF8340];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (double *)swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = (const double *)a1[4];
  if (v10)
  {
    __B[0] = a2;
    if ((v7 & 0x8000000000000000) == 0)
    {
      vDSP_vsmulD(v10, 1, __B, v9, 1, v4 * v5);
      return v8;
    }
  }
  else
  {
    sub_25436D4F0();
    __break(1u);
  }
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (double *)swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = (const double *)a1[4];
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = *(const double **)(a2 + 32);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = a1[3];
  vDSP_Length v13 = v4 * v12;
  if ((unsigned __int128)(v4 * (__int128)v12) >> 64 != (v4 * v12) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_25436D4F0();
    __break(1u);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    vDSP_vaddD(v10, 1, v11, 1, v9, 1, v13);
    return v8;
  }
LABEL_12:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254256138(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_25436C4F0();
      swift_allocObject();
      sub_25436C4C0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_25436C650();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v6;
  uint64_t v9 = swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = (const double *)a1[4];
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = (double *)v9;
  uint64_t v12 = *(const double **)(a2 + 32);
  if (!v12) {
    goto LABEL_11;
  }
  uint64_t v13 = a1[3];
  vDSP_Length v14 = v4 * v13;
  if ((unsigned __int128)(v4 * (__int128)v13) >> 64 != (v4 * v13) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_25436D4F0();
    __break(1u);
    goto LABEL_12;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    vDSP_vsubD(v12, 1, v10, 1, v11, 1, v14);
    return v8;
  }
LABEL_12:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254256340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  uint64_t result = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    v3[4] = sub_25436D160();
    v3[5] = v6;
    sub_2542544CC(a1);
    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2542563B4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    v2[4] = sub_25436D160();
    v2[5] = v5;
    sub_25436C6D0();
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_254256450(uint64_t a1, uint64_t a2)
{
  return sub_2542563B4(a1, a2);
}

uint64_t sub_2542564BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for DKMatrix()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25425652C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(a1 + 16);
  v1[2] = v3;
  uint64_t v4 = *(void *)(a1 + 24);
  v1[3] = v4;
  uint64_t v5 = v3 * v4;
  if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(v2 + 80);
  v1[4] = sub_25436D160();
  v1[5] = v7;
  uint64_t v8 = (const void *)sub_25436D150();
  uint64_t v9 = (void *)sub_25436D150();
  if (v9) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10) {
    return (uint64_t)v1;
  }
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v12 = v5 * v11;
  if ((unsigned __int128)(v5 * (__int128)v11) >> 64 != (v5 * v11) >> 63) {
    goto LABEL_11;
  }
  if ((v12 & 0x8000000000000000) == 0)
  {
    memmove(v9, v8, v12);
    return (uint64_t)v1;
  }
LABEL_12:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_254256660(uint64_t a1)
{
  return sub_25425652C(a1);
}

uint64_t sub_2542566A4(uint64_t a1, uint64_t a2)
{
  return sub_254253DC0(a1, a2, v2[4], v2[5], v2[2]);
}

uint64_t sub_2542566C4(uint64_t a1, uint64_t a2)
{
  return sub_254254140(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASfRszrlE1moiyACySfGSf_AEtFZ_0(void *a1, float a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7990);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_7;
  }
  uint64_t v8 = v6;
  uint64_t v9 = (float *)swift_slowAlloc();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v7;
  BOOL v10 = (const float *)a1[4];
  if (v10)
  {
    float __B = a2;
    if ((v7 & 0x8000000000000000) == 0)
    {
      vDSP_vsmul(v10, 1, &__B, v9, 1, v4 * v5);
      return v8;
    }
  }
  else
  {
    sub_25436D4F0();
    __break(1u);
  }
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254256864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_254252E4C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_254256890(uint64_t *a1)
{
  return sub_254252E54(*a1, a1[1]);
}

uint64_t sub_2542568C0()
{
  return 16;
}

__n128 sub_2542568CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2542568D8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2542534F0(*a1, a1[1], a2);
}

uint64_t sub_254256904()
{
  return 16;
}

__n128 sub_254256910(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_254256920()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKMatrix(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKMatrix);
}

uint64_t dispatch thunk of DKMatrix.buffer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(repeating:rows:columns:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:array:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:buffer:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DKMatrix.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKMatrix.subscript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKMatrix.subscript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKMatrix.copy()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKMatrix.fill(repeating:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKMatrix.transpose()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

double sub_254256B68(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  double MinX = CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  double v11 = fmin(MinX - CGRectGetWidth(v15) * a1 * 0.5, 1.0);
  if (v11 < 0.0) {
    double v12 = 0.0;
  }
  else {
    double v12 = v11;
  }
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinY(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetHeight(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetWidth(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetHeight(v19);
  return v12;
}

double CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  return Width * CGRectGetHeight(v10);
}

CGFloat CGRect.bottomRight.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGFloat v8 = CGRectGetWidth(*(CGRect *)&a1) + a1;
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetHeight(v10);
  return v8;
}

__C::CGRect __swiftcall CGRect.init(topLeft:bottomRight:)(CGPoint topLeft, CGPoint bottomRight)
{
  double v2 = bottomRight.x - topLeft.x;
  double v3 = bottomRight.y - topLeft.y;
  result.origin.y = topLeft.y;
  result.origin.x = topLeft.x;
  result.size.height = v3;
  result.size.width = v2;
  return result;
}

Swift::Double __swiftcall CGRect.iouGeneralized(rect2:)(__C::CGRect rect2)
{
  CGFloat v5 = v4;
  CGFloat height = rect2.size.height;
  CGFloat r1 = v4;
  CGFloat v6 = v3;
  CGFloat v7 = v2;
  CGFloat v8 = v1;
  CGFloat y = rect2.origin.y;
  CGFloat width = rect2.size.width;
  CGFloat x = rect2.origin.x;
  v38.origin.CGFloat x = v8;
  v38.origin.CGFloat y = v7;
  v38.size.CGFloat width = v6;
  v38.size.CGFloat height = v5;
  CGRect v39 = CGRectIntersection(v38, (CGRect)rect2);
  CGFloat v9 = v39.origin.x;
  CGFloat v10 = v39.origin.y;
  CGFloat v11 = v39.size.width;
  CGFloat v12 = v39.size.height;
  double v13 = CGRectGetWidth(v39);
  v40.origin.CGFloat x = v9;
  v40.origin.CGFloat y = v10;
  v40.size.CGFloat width = v11;
  v40.size.CGFloat height = v12;
  double v37 = v13 * CGRectGetHeight(v40);
  v41.origin.CGFloat x = v8;
  CGFloat v31 = v7;
  v41.origin.CGFloat y = v7;
  v41.size.CGFloat width = v6;
  v41.size.CGFloat height = r1;
  double v14 = CGRectGetWidth(v41);
  v42.origin.CGFloat x = v8;
  v42.origin.CGFloat y = v7;
  v42.size.CGFloat width = v6;
  v42.size.CGFloat height = r1;
  double v15 = v14 * CGRectGetHeight(v42);
  v43.origin.CGFloat x = x;
  v43.origin.CGFloat y = y;
  v43.size.CGFloat width = width;
  v43.size.CGFloat height = height;
  double v16 = CGRectGetWidth(v43);
  v44.origin.CGFloat x = x;
  v44.origin.CGFloat y = y;
  v44.size.CGFloat width = width;
  v44.size.CGFloat height = height;
  CGFloat v17 = CGRectGetHeight(v44);
  CGFloat v18 = x;
  double v19 = v15 + v16 * v17 - v37;
  if (v19 > 2.22044605e-16) {
    double v20 = v19;
  }
  else {
    double v20 = 2.22044605e-16;
  }
  v45.origin.CGFloat x = v8;
  v45.origin.CGFloat y = v31;
  v45.size.CGFloat width = v6;
  v45.size.CGFloat height = r1;
  CGFloat v21 = y;
  CGFloat v22 = width;
  CGFloat v23 = height;
  CGRect v46 = CGRectUnion(v45, *(CGRect *)&v18);
  CGFloat v24 = v46.origin.x;
  CGFloat v25 = v46.origin.y;
  CGFloat v26 = v46.size.width;
  CGFloat v27 = v46.size.height;
  double v28 = CGRectGetWidth(v46);
  v47.origin.CGFloat x = v24;
  v47.origin.CGFloat y = v25;
  v47.size.CGFloat width = v26;
  v47.size.CGFloat height = v27;
  double v29 = v28 * CGRectGetHeight(v47);
  if (v29 <= 2.22044605e-16) {
    double v29 = 2.22044605e-16;
  }
  return v37 / v20 - (v29 - v20) / v29;
}

Swift::Double __swiftcall CGRect.minSizeNormalizedDistance(rect2:)(__C::CGRect rect2)
{
  CGFloat v26 = v4;
  CGFloat v5 = v3;
  CGFloat v6 = v2;
  CGFloat v7 = v1;
  CGFloat height = rect2.size.height;
  CGFloat y = rect2.origin.y;
  CGFloat v22 = rect2.size.height;
  CGFloat width = rect2.size.width;
  CGFloat v10 = rect2.origin.y;
  CGFloat x = rect2.origin.x;
  v27.origin.CGFloat x = v1;
  v27.origin.CGFloat y = v2;
  v27.size.CGFloat width = v3;
  v27.size.CGFloat height = v4;
  double v12 = CGRectGetWidth(v27);
  v28.origin.CGFloat x = x;
  v28.origin.CGFloat y = v10;
  v28.size.CGFloat width = width;
  v28.size.CGFloat height = height;
  double v13 = CGRectGetWidth(v28);
  if (v13 >= v12) {
    double v13 = v12;
  }
  double v24 = fmax(v13, 0.01);
  v29.origin.CGFloat x = v7;
  v29.origin.CGFloat y = v6;
  v29.size.CGFloat width = v5;
  v29.size.CGFloat height = v26;
  double v14 = CGRectGetHeight(v29);
  v30.origin.CGFloat x = x;
  v30.origin.CGFloat y = y;
  v30.size.CGFloat width = width;
  v30.size.CGFloat height = v22;
  double v15 = CGRectGetHeight(v30);
  if (v15 >= v14) {
    double v15 = v14;
  }
  double v23 = fmax(v15, 0.01);
  v31.origin.CGFloat x = v7;
  v31.origin.CGFloat y = v6;
  v31.size.CGFloat width = v5;
  v31.size.CGFloat height = v26;
  double MidX = CGRectGetMidX(v31);
  v32.origin.CGFloat x = x;
  v32.origin.CGFloat y = y;
  v32.size.CGFloat width = width;
  v32.size.CGFloat height = v22;
  CGFloat v17 = CGRectGetMidX(v32);
  v33.size.CGFloat height = v26;
  double v25 = (MidX - v17) / v24;
  v33.origin.CGFloat x = v7;
  v33.origin.CGFloat y = v6;
  v33.size.CGFloat width = v5;
  double MidY = CGRectGetMidY(v33);
  v34.origin.CGFloat x = x;
  v34.origin.CGFloat y = y;
  v34.size.CGFloat width = width;
  v34.size.CGFloat height = v22;
  CGFloat v19 = CGRectGetMidY(v34);
  return sqrt(v25 * v25 + (MidY - v19) / v23 * ((MidY - v19) / v23));
}

double static CGPoint.+ infix(_:_:)(double a1, double a2, double a3)
{
  return a1 + a3;
}

double static CGPoint.- infix(_:_:)(double a1, double a2, double a3)
{
  return a1 - a3;
}

CGPoint __swiftcall CGPoint.mirrored(xAxis:yAxis:)(Swift::Bool xAxis, Swift::Bool yAxis)
{
  if (xAxis) {
    double v2 = 1.0 - v2;
  }
  if (yAxis) {
    double v3 = 1.0 - v3;
  }
  result.CGFloat y = v3;
  result.CGFloat x = v2;
  return result;
}

uint64_t sub_2542570EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    double v3 = *(double *)(result + 32);
    uint64_t v4 = v2 - 1;
    if (v2 == 1)
    {
      double v5 = *(double *)(result + 40);
      double v6 = v5;
      double v7 = *(double *)(result + 32);
    }
    else
    {
      CGFloat v10 = (double *)(result + 48);
      uint64_t v11 = v2 - 1;
      double v7 = *(double *)(result + 32);
      double v12 = v7;
      do
      {
        double v13 = *v10;
        v10 += 2;
        double v14 = v13;
        if (v13 < v12)
        {
          double v7 = v14;
          double v12 = v14;
        }
        --v11;
      }
      while (v11);
      double v5 = *(double *)(result + 40);
      double v15 = (double *)(result + 56);
      uint64_t v16 = v2 - 1;
      double v6 = v5;
      double v17 = v5;
      do
      {
        double v18 = *v15;
        v15 += 2;
        double v19 = v18;
        if (v18 < v17)
        {
          double v6 = v19;
          double v17 = v19;
        }
        --v16;
      }
      while (v16);
      double v20 = (double *)(result + 48);
      uint64_t v21 = v2 - 1;
      do
      {
        double v22 = *v20;
        v20 += 2;
        double v23 = v22;
        if (v3 < v22) {
          double v3 = v23;
        }
        --v21;
      }
      while (v21);
      double v24 = (double *)(result + 56);
      do
      {
        double v25 = *v24;
        v24 += 2;
        double v26 = v25;
        if (v5 < v25) {
          double v5 = v26;
        }
        --v4;
      }
      while (v4);
    }
    double v8 = v3 - v7;
    double v9 = v5 - v6;
  }
  else
  {
    double v7 = 0.0;
    double v6 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
  }
  *(double *)a2 = v7;
  *(double *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = v8;
  *(double *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v2 == 0;
  return result;
}

double Array<A>.average()(uint64_t a1)
{
  return (double)*(uint64_t *)(a1 + 16);
}

uint64_t sub_2542571E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25436C9C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25436C610();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254257A74(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_254257ADC((uint64_t)v11);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  float v16 = (float)a2 / 100.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A30);
  uint64_t inited = swift_initStackObject();
  long long v39 = xmmword_25436F130;
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  double v18 = (void *)*MEMORY[0x263F0EFE8];
  *(void *)(inited + 32) = *MEMORY[0x263F0EFE8];
  *(float *)(inited + 40) = v16;
  id v19 = v18;
  sub_254264118(inited);
  type metadata accessor for CFString(0);
  sub_254257B3C();
  double v20 = (void *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CFMutableDataRef Mutable = CFDataCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  if (!Mutable)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A38);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v39;
    *(void *)(v33 + 56) = MEMORY[0x263F8D310];
    *(void *)(v33 + 32) = 0xD000000000000014;
    *(void *)(v33 + 40) = 0x800000025437A400;
    sub_25436D8D0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  double v22 = Mutable;
  CFDictionaryRef v37 = (CFDictionaryRef)v20;
  CGRect v38 = v15;
  double v23 = v2;
  sub_25436C990();
  sub_25436C980();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  double v24 = (__CFString *)sub_25436CBD0();
  swift_bridgeObjectRelease();
  double v25 = CGImageDestinationCreateWithData(v22, v24, 1uLL, 0);

  if (!v25)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A38);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v39;
    *(void *)(v34 + 56) = MEMORY[0x263F8D310];
    *(void *)(v34 + 32) = 0xD000000000000020;
    *(void *)(v34 + 40) = 0x800000025437A420;
    sub_25436D8D0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
    return 0;
  }
  double v26 = v23;
  CFDictionaryRef v27 = v37;
  CGImageDestinationAddImage(v25, v26, v37);
  if (!CGImageDestinationFinalize(v25))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);

    return 0;
  }
  CGRect v28 = v22;
  uint64_t v29 = sub_25436C6B0();
  unint64_t v31 = v30;

  CGRect v32 = v38;
  sub_25436C6C0();
  sub_2542564BC(v29, v31);
  uint64_t v36 = sub_25436C580();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
  return v36;
}

int64_t sub_25425770C(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v6 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time;
  uint64_t v7 = sub_25436C7B0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  int64_t Width = CVPixelBufferGetWidth(a1);
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_width) = Width;
  int64_t result = CVPixelBufferGetHeight(a1);
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_height) = result;
  unint64_t v11 = Width * result;
  if ((unsigned __int128)(Width * (__int128)result) >> 64 == (Width * result) >> 63)
  {
    uint64_t v12 = sub_254251A0C(Width * result, 0);
    uint64_t v13 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer);
    *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer) = v12;
    uint64_t v14 = sub_254251A0C(v11, 0);
    double v15 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer);
    *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer) = v14;
    uint64_t v16 = sub_254251A0C(v11, 0);
    double v17 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_blueBuffer);
    *double v17 = (char *)v16;
    sub_2542A3500(a1, v13, v15, v17);
    if (v3) {
      swift_release();
    }

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2542578A0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_254257970()
{
  return type metadata accessor for DKImageRGBBufferStamped();
}

uint64_t type metadata accessor for DKImageRGBBufferStamped()
{
  uint64_t result = qword_269DD7A18;
  if (!qword_269DD7A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2542579C4()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_254257A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254257ADC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_254257B3C()
{
  unint64_t result = qword_269DD7860;
  if (!qword_269DD7860)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7860);
  }
  return result;
}

uint64_t DKStatisticsFilter.__allocating_init(maxNumElements:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 32) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(unsigned char *)(result + 40) = 1;
  *(void *)(result + 48) = v3;
  *(void *)(result + 56) = v3;
  *(void *)(result + 16) = a1;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t DKStatisticsFilter.init(maxNumElements:)(uint64_t a1)
{
  *(void *)(v1 + 32) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 0;
  return v1;
}

uint64_t DKStatisticsFilter.__allocating_init(maxTimeInterval:)(double a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(unsigned char *)(result + 24) = 1;
  *(void *)(result + 48) = v3;
  *(void *)(result + 56) = v3;
  *(double *)(result + 32) = a1;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t DKStatisticsFilter.init(maxTimeInterval:)(double a1)
{
  uint64_t result = v1;
  *(void *)(v1 + 16) = 0;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v3;
  *(double *)(v1 + 32) = a1;
  *(unsigned char *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_254257C84()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(v1 + 16)) {
    return *(void *)(v1 + 32);
  }
  else {
    return 0;
  }
}

uint64_t sub_254257CA8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2) {
    return *(void *)(v1 + 8 * v2 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_254257CD0(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  CFDictionaryRef v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  CGRect v40 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t)&v33 - v13;
  uint64_t v15 = v2 + 48;
  uint64_t v16 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 48) = v16;
  if ((result & 1) == 0) {
    goto LABEL_37;
  }
  while (1)
  {
    unint64_t v19 = (unint64_t)v16[2];
    unint64_t v18 = (unint64_t)v16[3];
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_2542585F4((void *)(v18 > 1), v19 + 1, 1, v16);
      uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))result;
    }
    v16[2] = (unsigned int (*)(char *, uint64_t, uint64_t))(v19 + 1);
    *(double *)&v16[v19 + 4] = a1;
    *(void *)(v2 + 48) = v16;
    if (*(unsigned char *)(v2 + 24)) {
      break;
    }
    uint64_t v8 = *(char **)(v2 + 16);
    if ((uint64_t)v8 > (uint64_t)v19) {
      return result;
    }
    while (1)
    {
      int64_t v32 = (int64_t)v16[2];
      if (!v32) {
        break;
      }
      *(void *)uint64_t v15 = v16;
      if (v32 - 1 > (unint64_t)v16[3] >> 1)
      {
        uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))sub_2542585F4((void *)1, v32, 1, v16);
        *(void *)uint64_t v15 = v16;
        uint64_t v14 = (uint64_t)v16[2];
        if (!v14)
        {
LABEL_27:
          sub_25436D570();
          __break(1u);
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v14 = (uint64_t)v16[2];
        if (!v14) {
          goto LABEL_27;
        }
      }
      uint64_t result = (uint64_t)memmove(v16 + 4, v16 + 5, 8 * v14 - 8);
      v16[2] = (unsigned int (*)(char *, uint64_t, uint64_t))(v14 - 1);
      *(void *)uint64_t v15 = v16;
      if ((uint64_t)v8 >= v14 - 1) {
        return result;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = (uint64_t)sub_2542585F4(0, (int64_t)v16[2] + 1, 1, v16);
    uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))result;
    *(void *)uint64_t v15 = result;
  }
  if ((*(unsigned char *)(v2 + 40) & 1) == 0)
  {
    a1 = *(double *)(v2 + 32);
    sub_25436C7A0();
    unint64_t v21 = *(void *)(v2 + 56);
    v2 += 56;
    unint64_t v20 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v20 = sub_254258958(0, *(void *)(v20 + 16) + 1, 1, v20, &qword_269DD7BB0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
      *(void *)uint64_t v2 = v20;
    }
    unint64_t v24 = *(void *)(v20 + 16);
    unint64_t v23 = *(void *)(v20 + 24);
    if (v24 >= v23 >> 1)
    {
      unint64_t v20 = sub_254258958(v23 > 1, v24 + 1, 1, v20, &qword_269DD7BB0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
      *(void *)uint64_t v2 = v20;
    }
    *(void *)(v20 + 16) = v24 + 1;
    double v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    unint64_t v39 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v26 = v20 + v39 + *(void *)(v10 + 72) * v24;
    uint64_t v35 = v25;
    uint64_t v36 = v10 + 32;
    v25((char *)v26, (char *)v14, v9);
    uint64_t v27 = *(void *)v2;
    if (*(void *)(*(void *)v2 + 16))
    {
      CGRect v38 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      uint64_t v28 = v10 + 16;
      v10 += 56;
      uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 32);
      unint64_t v33 = v10 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v28 - 8);
      while (1)
      {
        v38(v8, v27 + v39, v9);
        uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v10;
        (*(void (**)(char *, void, uint64_t, uint64_t))v10)(v8, 0, 1, v9);
        unint64_t v30 = *v16;
        if ((*v16)(v8, 1, v9) == 1) {
          break;
        }
        uint64_t v14 = (uint64_t)v40;
        v35(v40, v8, v9);
        sub_25436C760();
        if (a1 >= fabs(v31)) {
          return (*v34)(v40, v9);
        }
        if (!*(void *)(*(void *)v2 + 16)) {
          goto LABEL_34;
        }
        uint64_t v14 = (uint64_t)v37;
        v38(v37, *(void *)v2 + v39, v9);
        v29((char *)v14, 0, 1, v9);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(v14, 1, v9);
        if (result == 1)
        {
          __break(1u);
          return result;
        }
        sub_254258BD8(v14);
        if (!*(void *)(*(void *)v2 + 16)) {
          goto LABEL_35;
        }
        uint64_t v14 = v2;
        sub_25425A9D0(0, 1);
        if (!*(void *)(*(void *)v15 + 16)) {
          goto LABEL_36;
        }
        sub_25425ABE8(0, 1);
        (*v34)(v40, v9);
        uint64_t v27 = *(void *)v2;
        if (!*(void *)(*(void *)v2 + 16)) {
          goto LABEL_29;
        }
      }
    }
    else
    {
LABEL_28:
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_29:
      v29(v8, 1, 1, v9);
    }
    return sub_254258BD8((uint64_t)v8);
  }
  return result;
}

uint64_t sub_254258294()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  double v3 = *(double *)(v1 + 32);
  uint64_t v4 = v2 - 1;
  if (v2 != 1)
  {
    uint64_t v5 = (double *)(v1 + 40);
    do
    {
      double v6 = *v5++;
      double v7 = v6;
      if (v3 < v6) {
        double v3 = v7;
      }
      --v4;
    }
    while (v4);
  }
  return *(void *)&v3;
}

uint64_t sub_2542582DC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  double v3 = *(double *)(v1 + 32);
  uint64_t v4 = v2 - 1;
  if (v2 != 1)
  {
    uint64_t v5 = (double *)(v1 + 40);
    do
    {
      double v6 = *v5++;
      double v7 = v6;
      if (v6 < v3) {
        double v3 = v7;
      }
      --v4;
    }
    while (v4);
  }
  return *(void *)&v3;
}

uint64_t sub_254258324()
{
  uint64_t v4 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain_n();
  sub_254259D84(&v4);
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(*(void *)(v0 + 48) + 16) >> 1;
  if (v1 >= *(void *)(v4 + 16))
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v4 + 8 * v1 + 32);
    swift_release();
    return v2;
  }
  return result;
}

double sub_2542583BC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    double v4 = 0.0;
    return v4 / (double)v2;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    double v4 = 0.0;
LABEL_8:
    uint64_t v7 = v2 - v3;
    uint64_t v8 = (double *)(v1 + 8 * v3 + 32);
    do
    {
      double v9 = *v8++;
      double v4 = v4 + v9;
      --v7;
    }
    while (v7);
    return v4 / (double)v2;
  }
  uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v5 = (double *)(v1 + 40);
  double v4 = 0.0;
  uint64_t v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v4 = v4 + *(v5 - 1) + *v5;
    v5 += 2;
    v6 -= 2;
  }
  while (v6);
  if (v2 != v3) {
    goto LABEL_8;
  }
  return v4 / (double)v2;
}

uint64_t DKStatisticsFilter.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKStatisticsFilter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2542584AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_254258958(a1, a2, a3, a4, &qword_269DD7AF8, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

char *sub_2542584E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B88);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 3);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 32]) {
          memmove(v12, a4 + 32, 3 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425A6F4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2542585F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425A7E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_254258704(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BB8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_25425A8E4(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_254258814(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B18);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_25425A8E4(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_254258924(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_254258958(a1, a2, a3, a4, &qword_269DD7BB0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_254258958(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25425BEEC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_254258BD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_254258C38(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258DC8(a1, a2, a3, a4, &qword_269DD7BA0, &qword_269DD7BA8);
}

char *sub_254258C4C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_254258C64(a1, a2, a3, a4, &qword_269DD7B98);
}

char *sub_254258C58(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_254258C64(a1, a2, a3, a4, &qword_269DD7B90);
}

char *sub_254258C64(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 3);
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 32]) {
          memmove(v13, a4 + 32, 3 * v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425A6F4(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_254258D74(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2542597C4(a1, a2, a3, a4, &qword_269DD7B80);
}

uint64_t sub_254258D80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_254258958(a1, a2, a3, a4, &qword_269DD7AB0, type metadata accessor for DKDataLogStamped, type metadata accessor for DKDataLogStamped);
}

void *sub_254258DB4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258DC8(a1, a2, a3, a4, &qword_269DD7B70, &qword_269DD7B78);
}

void *sub_254258DC8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425BCD4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_254258EF8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254259448(a1, a2, a3, a4, &qword_269DD7B28);
}

void *sub_254258F04(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258F2C(a1, a2, a3, a4, &qword_269DD7B60, &qword_269DD7B68);
}

void *sub_254258F18(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258F2C(a1, a2, a3, a4, &qword_269DD7B50, &qword_269DD7B58);
}

void *sub_254258F2C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4]) {
          memmove(v15, a4 + 4, 24 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425BAD4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_254259060(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258F2C(a1, a2, a3, a4, &qword_269DD7B38, &qword_269DD7B40);
}

uint64_t sub_254259074(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AE8);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25425B188(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_2542592E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25425958C(a1, a2, a3, a4, &qword_269DD7AD8, &qword_269DD7AE0);
}

uint64_t sub_2542592F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_254258958(a1, a2, a3, a4, &qword_269DD7B30, type metadata accessor for DKPersonGroupFilter.Track, type metadata accessor for DKPersonGroupFilter.Track);
}

void *sub_25425932C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A58);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425B2E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25425943C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254259448(a1, a2, a3, a4, &qword_269DD7A60);
}

void *sub_254259448(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425B3D8(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_25425956C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254259448(a1, a2, a3, a4, &qword_269DD7A68);
}

void *sub_254259578(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25425958C(a1, a2, a3, a4, &qword_269DD7A48, &qword_269DD7A50);
}

void *sub_25425958C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425B9CC(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2542596A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B20);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425B7F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2542597B8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2542597C4(a1, a2, a3, a4, &qword_269DD7A98);
}

char *sub_2542597C4(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425B8E4(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_2542598BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A90);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25425B3D8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2542599E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_25425958C(a1, a2, a3, a4, &qword_269DD7A80, &qword_269DD7A88);
}

void *sub_2542599F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258F2C(a1, a2, a3, a4, &qword_269DD7A70, &qword_269DD7A78);
}

void *sub_254259A0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B10);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425A7E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_254259B1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AA0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425BBE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_254259C2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_254258DC8(a1, a2, a3, a4, &qword_269DD7B00, &qword_269DD7B08);
}

void *sub_254259C40(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AB8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25425BDE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_254259D50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_254258958(a1, a2, a3, a4, &qword_269DD7AA8, (uint64_t (*)(void))type metadata accessor for DKMotion3, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_254259D84(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_254345398(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_254259DF0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_254259DF0(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          v88 = v11;
          v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_25425A484((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v88 = sub_254345370((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          v92 = &v88[16 * v87 + 32];
          *(void *)v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          int64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_25436CE40();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  int64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          unint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              uint64_t *v21 = *v18;
              *unint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      unint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          double *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_254344E28(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_254344E28((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      int64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    double v31 = v11 + 32;
    int64_t v32 = &v11[16 * v30 + 32];
    *(void *)int64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          CGRect v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          CGRect v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        double v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        v75 = v31;
        double v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_25425A484((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        double v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_25425A484(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  unint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      unint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          unint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            unint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      unint64_t v24 = v7;
    }
LABEL_42:
    sub_254344F24((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

char *sub_25425A6F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 3 * a1 + 32);
    size_t v6 = 3 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

char *sub_25425A7E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425A8CC(uint64_t a1, uint64_t a2)
{
  return sub_25425B4E0(a1, a2, (void (*)(void))type metadata accessor for DKPersonTrackerState);
}

char *sub_25425A8E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425A9D0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_254258958(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_269DD7BB0, MEMORY[0x263F07490], MEMORY[0x263F07490]);
  }
  uint64_t v12 = *(void *)(sub_25436C7B0() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

char *sub_25425ABE8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_2542585F4(result, v11, 1, v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[8 * a1 + 32];
    uint64_t v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 8 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKStatisticsFilter()
{
  return self;
}

uint64_t method lookup function for DKStatisticsFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKStatisticsFilter);
}

uint64_t dispatch thunk of DKStatisticsFilter.__allocating_init(maxNumElements:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DKStatisticsFilter.__allocating_init(maxTimeInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getFirst()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getLast()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKStatisticsFilter.add(newValue:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMax()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMin()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMedian()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getAverage()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_25425AF7C(uint64_t a1, uint64_t a2)
{
  return sub_25425B4E0(a1, a2, (void (*)(void))type metadata accessor for DKLockActor.ContinuationWrapper);
}

uint64_t sub_25425AF94(uint64_t a1, uint64_t a2)
{
  return sub_25425B4E0(a1, a2, (void (*)(void))type metadata accessor for DKObservationMetadata);
}

uint64_t sub_25425AFAC(uint64_t a1, uint64_t a2)
{
  return sub_25425AFD0(a1, a2, &qword_269DD7AD0);
}

uint64_t sub_25425AFB8(uint64_t a1, uint64_t a2)
{
  return sub_25425AFD0(a1, a2, &qword_269DD7B48);
}

uint64_t sub_25425AFC4(uint64_t a1, uint64_t a2)
{
  return sub_25425AFD0(a1, a2, &qword_269DD7AC8);
}

uint64_t sub_25425AFD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a1 - a2;
  if (__OFSUB__(0, v8))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = v6 - v8;
  if (__OFADD__(v6, v9))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      v6 += v9;
    }
    swift_bridgeObjectRetain();
    *uint64_t v3 = MEMORY[0x25A275A10](isUniquelyReferenced_nonNull_native, v6, 1, v5);
    swift_bridgeObjectRelease();
    uint64_t v5 = *v3;
  }
  uint64_t v13 = v5 + 32;
  uint64_t v14 = (char *)(v5 + 32 + 8 * a1);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayDestroy();
  if (!v8) {
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)(*v3 + 16);
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_27;
  }
  if (v17 < 0)
  {
LABEL_29:
    uint64_t result = sub_25436D570();
    __break(1u);
    return result;
  }
  uint64_t v18 = (char *)(v13 + 8 * a2);
  if (a1 != a2 || v14 >= &v18[8 * v17]) {
    memmove(v14, v18, 8 * v17);
  }
  uint64_t v19 = *(void *)(*v3 + 16);
  BOOL v16 = __OFADD__(v19, v9);
  uint64_t v20 = v19 - v8;
  if (v16)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(*v3 + 16) = v20;
LABEL_19:
  return sub_25436CDE0();
}

uint64_t sub_25425B188(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425B2E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

char *sub_25425B3D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425B4C8(uint64_t a1, uint64_t a2)
{
  return sub_25425B4E0(a1, a2, (void (*)(void))type metadata accessor for DKImageRGBBufferStamped);
}

uint64_t sub_25425B4E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    size_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25436D530();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + v7;
    if (!__OFADD__(v9, v7)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25436D530();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x25A275A10](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = v13 + 32;
  BOOL v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_25436D530();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_25436D570();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = v20 + v7;
          if (!__OFADD__(v20, v7))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_25436D530();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_25436CDE0();
}

char *sub_25425B7F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

char *sub_25425B8E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425B9CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425BAD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 24 * a1 + 32;
    unint64_t v7 = a3 + 24 * v5;
    if (v6 >= v7 || v6 + 24 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425BBE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425BCD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425BDE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AC0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25425BEEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t static DKConversions.convert(time:metadata:image:camera:)(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 *a4)
{
  v106 = a3;
  v107 = a4;
  uint64_t v95 = sub_25436C800();
  uint64_t v99 = *(char **)(v95 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v95);
  unint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v103 = (char *)&v85 - v8;
  uint64_t v9 = sub_25436C7B0();
  v100 = *(void **)(v9 - 8);
  uint64_t v10 = v100;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v102 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v85 - v13;
  uint64_t v15 = (void (*)(char *, uint64_t, uint64_t))v10[2];
  uint64_t v96 = a1;
  v15((char *)&v85 - v13, a1, v9);
  BOOL v16 = (objc_class *)type metadata accessor for DKObservationMetadata(0);
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  uint64_t v20 = &v17[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v21 = &v17[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  BOOL v22 = &v17[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(void *)BOOL v22 = 0;
  v22[8] = 1;
  unint64_t v93 = v15;
  uint64_t v94 = (char *)(v10 + 2);
  v15(&v17[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], (uint64_t)v14, v9);
  *(void *)&v17[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = MEMORY[0x263F8EE78];
  uint64_t v23 = v106;
  *(void *)&v17[v18] = v106;
  uint64_t v24 = (char *)v100;
  *(void *)&v17[v19] = 0;
  v112.receiver = v17;
  v112.super_class = v16;
  id v25 = v23;
  double v101 = (char *)objc_msgSendSuper2(&v112, sel_init);
  uint64_t v26 = (void (*)(char *, uint64_t))*((void *)v24 + 1);
  uint64_t v86 = v14;
  uint64_t v104 = v9;
  v26(v14, v9);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v27 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)v101;
  }
  uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_31;
  }
LABEL_3:
  if (v27 >= 1)
  {
    uint64_t v29 = 0;
    unint64_t v91 = a2;
    uint64_t v92 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
    unint64_t v105 = a2 & 0xC000000000000001;
    v88 = (void (**)(uint64_t, char *, uint64_t))(v99 + 32);
    v89 = (void (**)(uint64_t, char *, uint64_t))(v24 + 32);
    unint64_t v30 = (SEL *)&unk_2653A7000;
    uint64_t v90 = v27;
    while (1)
    {
      if (v105) {
        id v32 = (id)MEMORY[0x25A275A00](v29, a2);
      }
      else {
        id v32 = *(id *)(a2 + 8 * v29 + 32);
      }
      double v31 = v32;
      self;
      uint64_t v33 = swift_dynamicCastObjCClass();
      if (v33)
      {
        uint64_t v34 = (void *)v33;
        id v35 = v31;
        [v34 v30[442]];
        LOBYTE(v108) = v107[1];
        unsigned __int8 v111 = *v107;
        sub_25425DBE0(&v108, &v111, (uint64_t)v113, v36, v37, v38, v39);
        sub_25425E0DC((uint64_t)v113, (uint64_t)v119, &qword_269DD7BC0);
        if (v120 != 1)
        {
          long long v121 = v119[0];
          long long v122 = v119[1];
          v93(v102, v96, v104);
          sub_25436C7F0();
          v100 = objc_msgSend(v34, sel_faceID);
          unsigned int v63 = objc_msgSend(v34, sel_hasYawAngle);
          uint64_t v64 = 0;
          uint64_t v65 = 0;
          if (v63)
          {
            objc_msgSend(v34, sel_yawAngle);
            uint64_t v65 = v66;
          }
          v106 = v31;
          LODWORD(v99) = v63 ^ 1;
          unsigned int v98 = objc_msgSend(v34, sel_hasRollAngle);
          if (v98)
          {
            objc_msgSend(v34, sel_rollAngle);
            uint64_t v64 = v67;
          }
          uint64_t v68 = type metadata accessor for DKFaceObservation(0);
          uint64_t v69 = swift_allocObject();
          uint64_t v70 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
          uint64_t v71 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
          uint64_t v72 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
          uint64_t v73 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
          uint64_t v74 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
          uint64_t v75 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
          uint64_t v97 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal;
          *(unsigned char *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
          *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
          *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
          uint64_t v76 = v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
          *(void *)uint64_t v76 = 0;
          *(unsigned char *)(v76 + 8) = 1;
          (*v89)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v102, v104);
          (*v88)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v103, v95);
          uint64_t v77 = (_OWORD *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
          long long v78 = v122;
          _OWORD *v77 = v121;
          v77[1] = v78;
          *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = MEMORY[0x263F8EE78];
          *(void *)uint64_t v70 = v100;
          *(unsigned char *)(v70 + 8) = 0;
          *(void *)uint64_t v71 = -1;
          *(unsigned char *)(v71 + 8) = 0;
          *(void *)uint64_t v72 = v65;
          *(unsigned char *)(v72 + 8) = (_BYTE)v99;
          *(void *)uint64_t v73 = 0;
          *(unsigned char *)(v73 + 8) = 1;
          *(void *)uint64_t v74 = v64;
          *(unsigned char *)(v74 + 8) = v98 ^ 1;
          *(void *)uint64_t v75 = 0;
          *(unsigned char *)(v75 + 8) = 1;
          *(unsigned char *)(v69 + v97) = 2;
          uint64_t v79 = v101;
          uint64_t v80 = v92;
          uint64_t v81 = *(void **)&v101[v92];
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v79[v80] = v81;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v81 = sub_254258C38(0, v81[2] + 1, 1, v81);
            *(void *)&v101[v92] = v81;
          }
          unint64_t v84 = v81[2];
          unint64_t v83 = v81[3];
          uint64_t v27 = v90;
          a2 = v91;
          if (v84 >= v83 >> 1)
          {
            uint64_t v81 = sub_254258C38((void *)(v83 > 1), v84 + 1, 1, v81);
            *(void *)&v101[v92] = v81;
          }
          uint64_t v109 = v68;
          uint64_t v110 = sub_25425DF98(&qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
          *(void *)&long long v108 = v69;
          v81[2] = v84 + 1;
          sub_25425DF80(&v108, (uint64_t)&v81[5 * v84 + 4]);
          double v31 = v106;
          goto LABEL_6;
        }
      }
      self;
      uint64_t v40 = swift_dynamicCastObjCClass();
      if (!v40) {
        goto LABEL_8;
      }
      uint64_t v41 = (void *)v40;
      id v42 = v31;
      [v41 v30[442]];
      LOBYTE(v108) = v107[1];
      unsigned __int8 v111 = *v107;
      sub_25425DBE0(&v108, &v111, (uint64_t)v114, v43, v44, v45, v46);
      sub_25425E0DC((uint64_t)v114, (uint64_t)v115, &qword_269DD7BC0);
      if ((v116 & 1) == 0)
      {
        v106 = v31;
        long long v117 = v115[0];
        long long v118 = v115[1];
        uint64_t v47 = v86;
        uint64_t v48 = v104;
        v93(v86, v96, v104);
        uint64_t v49 = v87;
        sub_25436C7F0();
        uint64_t v99 = (char *)objc_msgSend(v41, sel_bodyID);
        v100 = (void *)type metadata accessor for DKBodyObservation(0);
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
        uint64_t v52 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
        *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
        *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
        uint64_t v53 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
        *(void *)uint64_t v53 = 0;
        *(unsigned char *)(v53 + 8) = 1;
        uint64_t v54 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
        (*v89)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, v47, v48);
        (*v88)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v49, v95);
        uint64_t v55 = (_OWORD *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
        long long v56 = v118;
        *uint64_t v55 = v117;
        v55[1] = v56;
        *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = MEMORY[0x263F8EE78];
        *(void *)uint64_t v51 = v99;
        *(unsigned char *)(v51 + 8) = 0;
        *(void *)uint64_t v52 = -1;
        *(unsigned char *)(v52 + 8) = 0;
        *(void *)uint64_t v54 = 0;
        *(unsigned char *)(v54 + 8) = 1;
        uint64_t v57 = v101;
        uint64_t v58 = v92;
        uint64_t v59 = *(void **)&v101[v92];
        swift_retain();
        char v60 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v57[v58] = v59;
        if ((v60 & 1) == 0)
        {
          uint64_t v59 = sub_254258C38(0, v59[2] + 1, 1, v59);
          *(void *)&v101[v92] = v59;
        }
        unint64_t v62 = v59[2];
        unint64_t v61 = v59[3];
        uint64_t v27 = v90;
        a2 = v91;
        double v31 = v106;
        if (v62 >= v61 >> 1)
        {
          uint64_t v59 = sub_254258C38((void *)(v61 > 1), v62 + 1, 1, v59);
          *(void *)&v101[v92] = v59;
        }
        uint64_t v109 = (uint64_t)v100;
        uint64_t v110 = sub_25425DF98(&qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
        *(void *)&long long v108 = v50;
        v59[2] = v62 + 1;
        sub_25425DF80(&v108, (uint64_t)&v59[5 * v62 + 4]);
LABEL_6:
        swift_release();
        unint64_t v30 = (SEL *)&unk_2653A7000;
      }

LABEL_8:
      ++v29;

      if (v27 == v29) {
        goto LABEL_31;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t static DKConversions.convert(rect:orient:port:)@<X0>(unsigned char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  sub_25425DBE0(a1, a2, (uint64_t)v9, a4, a5, a6, a7);
  return sub_25425E0DC((uint64_t)v9, a3, &qword_269DD7BC0);
}

char *static DKConversions.convert(time:observationsDict:image:cameraPortType:cameraIntrinsics:referenceDimensions:orientation:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12 = sub_25436C800();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25436C7B0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  long long v121 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v122 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BD8);
  sub_25436CDC0();
  uint64_t v18 = v122;
  if (!(void)v122) {
    return 0;
  }
  DKCameraOrientation.init(rawValue:)(a7);
  if (v122 == 8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  int v117 = v122;
  static DKCamera.convertPort(portType:)(a4, a5, (char *)&v122);
  int v116 = v122;
  char v120 = a3;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v115 = a1;
  v20(v121, a1, v15);
  uint64_t v21 = (objc_class *)type metadata accessor for DKObservationMetadata(0);
  BOOL v22 = (char *)objc_allocWithZone(v21);
  uint64_t v23 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  uint64_t v119 = v18;
  objc_super v112 = v14;
  uint64_t v24 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  id v25 = &v22[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(void *)id v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  uint64_t v26 = &v22[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v27 = &v22[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(void *)uint64_t v27 = 0;
  v27[8] = 1;
  double v28 = v121;
  v113 = v20;
  uint64_t v114 = v16 + 16;
  v20(&v22[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], (uint64_t)v121, v15);
  *(void *)&v22[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = MEMORY[0x263F8EE78];
  uint64_t v29 = v120;
  *(void *)&v22[v23] = v120;
  *(void *)&v22[v24] = 0;
  uint64_t v30 = v119;
  v128.receiver = v22;
  v128.super_class = v21;
  id v31 = v29;
  char v120 = (char *)objc_msgSendSuper2(&v128, sel_init);
  id v32 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v111 = v15;
  v32(v28, v15);
  uint64_t v33 = *(void *)(v30 + 16);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(v30 + 32);
    uint64_t v118 = MEMORY[0x263F8EE58] + 8;
    uint64_t v110 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
    while (1)
    {
      uint64_t v35 = *v34;
      uint64_t v36 = *(void *)(*v34 + 16);
      swift_bridgeObjectRetain();
      if (v36)
      {
        unint64_t v37 = sub_2543516FC(0x444965636146, 0xE600000000000000);
        if (v38) {
          break;
        }
      }
      long long v122 = 0u;
      long long v123 = 0u;
      sub_25425DFE0((uint64_t)&v122);
      if (!*(void *)(v35 + 16) || (unint64_t v43 = sub_2543516FC(17481, 0xE200000000000000), (v44 & 1) == 0))
      {
        long long v122 = 0u;
        long long v123 = 0u;
LABEL_25:
        swift_bridgeObjectRelease();
        sub_25425DFE0((uint64_t)&v122);
        goto LABEL_9;
      }
      sub_25425E040(*(void *)(v35 + 56) + 32 * v43, (uint64_t)&v122);
      sub_25425DFE0((uint64_t)&v122);
      if (*(void *)(v35 + 16))
      {
        unint64_t v45 = sub_2543516FC(1952671058, 0xE400000000000000);
        if (v46)
        {
          sub_25425E040(*(void *)(v35 + 56) + 32 * v45, (uint64_t)&v122);
          sub_25425E09C();
          if (swift_dynamicCast())
          {
            uint64_t v41 = (void *)v126;
            *(void *)&long long v126 = 88;
            *((void *)&v126 + 1) = 0xE100000000000000;
            id v47 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
            swift_unknownObjectRelease();
            if (v47)
            {
              sub_25436D1E0();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v126 = 0u;
              long long v127 = 0u;
            }
            sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
            if (!*((void *)&v123 + 1))
            {
LABEL_72:

              goto LABEL_25;
            }
            if (swift_dynamicCast())
            {
              CGFloat v50 = v125;
              *(void *)&long long v126 = 89;
              *((void *)&v126 + 1) = 0xE100000000000000;
              id v51 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
              swift_unknownObjectRelease();
              if (v51)
              {
                sub_25436D1E0();
                swift_unknownObjectRelease();
              }
              else
              {
                long long v126 = 0u;
                long long v127 = 0u;
              }
              sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
              if (!*((void *)&v123 + 1)) {
                goto LABEL_72;
              }
              if (swift_dynamicCast())
              {
                CGFloat v54 = v125;
                *(void *)&long long v126 = 0x6874646957;
                *((void *)&v126 + 1) = 0xE500000000000000;
                id v55 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
                swift_unknownObjectRelease();
                if (v55)
                {
                  sub_25436D1E0();
                  swift_unknownObjectRelease();
                }
                else
                {
                  long long v126 = 0u;
                  long long v127 = 0u;
                }
                sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
                if (!*((void *)&v123 + 1)) {
                  goto LABEL_72;
                }
                if (swift_dynamicCast())
                {
                  CGFloat v58 = v125;
                  *(void *)&long long v126 = 0x746867696548;
                  *((void *)&v126 + 1) = 0xE600000000000000;
                  id v59 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
                  swift_unknownObjectRelease();
                  if (v59)
                  {
                    sub_25436D1E0();
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    long long v126 = 0u;
                    long long v127 = 0u;
                  }
                  sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
                  if (!*((void *)&v123 + 1)) {
                    goto LABEL_72;
                  }
                  if (swift_dynamicCast())
                  {
                    LOBYTE(v122) = v117;
                    LOBYTE(v126) = v116;
                    sub_25425DBE0(&v122, (unsigned __int8 *)&v126, (uint64_t)v130, v50, v54, v58, v125);
                    sub_25425E0DC((uint64_t)v130, (uint64_t)v131, &qword_269DD7BC0);
                    if (v132 != 1)
                    {
                      double v67 = *(double *)v131;
                      double v68 = *(double *)&v131[1];
                      double v69 = *(double *)&v131[2];
                      double v70 = *(double *)&v131[3];
                      if (*(void *)(v35 + 16)
                        && (unint64_t v71 = sub_2543516FC(0x444965636146, 0xE600000000000000), (v72 & 1) != 0)
                        && (sub_25425E040(*(void *)(v35 + 56) + 32 * v71, (uint64_t)&v122),
                            swift_dynamicCast()))
                      {
                        uint64_t v73 = v126;
                      }
                      else
                      {
                        uint64_t v73 = -1;
                      }
                      uint64_t v108 = v73;
                      if (*(void *)(v35 + 16)
                        && (unint64_t v85 = sub_2543516FC(0x444970756F7247, 0xE700000000000000), (v86 & 1) != 0))
                      {
                        sub_25425E040(*(void *)(v35 + 56) + 32 * v85, (uint64_t)&v122);
                      }
                      else
                      {
                        long long v122 = 0u;
                        long long v123 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      if (*((void *)&v123 + 1))
                      {
                        if (swift_dynamicCast())
                        {
                          uint64_t v87 = v126;
                          goto LABEL_108;
                        }
                      }
                      else
                      {
                        sub_25425DFE0((uint64_t)&v122);
                      }
                      uint64_t v87 = -1;
LABEL_108:
                      uint64_t v98 = (uint64_t)v121;
                      v113(v121, v115, v111);
                      uint64_t v99 = (uint64_t)v112;
                      sub_25436C7F0();
                      double v109 = COERCE_DOUBLE(type metadata accessor for DKBodyObservation(0));
                      swift_allocObject();
                      uint64_t v100 = DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(v98, v99, MEMORY[0x263F8EE78], v108, 0, v87, 0, 0, v67, v68, v69, v70, 1);
                      double v101 = v120;
                      uint64_t v102 = v110;
                      unint64_t v93 = *(void **)&v120[v110];
                      uint64_t v108 = v100;
                      swift_retain();
                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)&v101[v102] = v93;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      {
                        unint64_t v93 = sub_254258C38(0, v93[2] + 1, 1, v93);
                        *(void *)&v120[v110] = v93;
                      }
                      unint64_t v96 = v93[2];
                      unint64_t v104 = v93[3];
                      unint64_t v97 = v96 + 1;
                      if (v96 >= v104 >> 1)
                      {
                        unint64_t v93 = sub_254258C38((void *)(v104 > 1), v96 + 1, 1, v93);
                        *(void *)&v120[v110] = v93;
                      }
                      *((double *)&v123 + 1) = v109;
                      uint64_t v124 = sub_25425DF98(&qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
                      uint64_t v90 = v108;
LABEL_113:
                      *(void *)&long long v122 = v90;
                      v93[2] = v97;
                      sub_25425DF80(&v122, (uint64_t)&v93[5 * v96 + 4]);
                      swift_release();

                      goto LABEL_9;
                    }
                  }
                }
              }
            }
LABEL_7:
          }
        }
      }
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_9:
      ++v34;
      if (!--v33) {
        goto LABEL_114;
      }
    }
    sub_25425E040(*(void *)(v35 + 56) + 32 * v37, (uint64_t)&v122);
    sub_25425DFE0((uint64_t)&v122);
    if (!*(void *)(v35 + 16)) {
      goto LABEL_8;
    }
    unint64_t v39 = sub_2543516FC(1952671058, 0xE400000000000000);
    if ((v40 & 1) == 0) {
      goto LABEL_8;
    }
    sub_25425E040(*(void *)(v35 + 56) + 32 * v39, (uint64_t)&v122);
    sub_25425E09C();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v41 = (void *)v126;
    *(void *)&long long v126 = 88;
    *((void *)&v126 + 1) = 0xE100000000000000;
    id v42 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
    swift_unknownObjectRelease();
    if (v42)
    {
      sub_25436D1E0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v126 = 0u;
      long long v127 = 0u;
    }
    sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
    if (!*((void *)&v123 + 1)) {
      goto LABEL_72;
    }
    if (swift_dynamicCast())
    {
      CGFloat v48 = v125;
      *(void *)&long long v126 = 89;
      *((void *)&v126 + 1) = 0xE100000000000000;
      id v49 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
      swift_unknownObjectRelease();
      if (v49)
      {
        sub_25436D1E0();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v126 = 0u;
        long long v127 = 0u;
      }
      sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
      if (!*((void *)&v123 + 1)) {
        goto LABEL_72;
      }
      if (swift_dynamicCast())
      {
        CGFloat v52 = v125;
        *(void *)&long long v126 = 0x6874646957;
        *((void *)&v126 + 1) = 0xE500000000000000;
        id v53 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
        swift_unknownObjectRelease();
        if (v53)
        {
          sub_25436D1E0();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v126 = 0u;
          long long v127 = 0u;
        }
        sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
        if (!*((void *)&v123 + 1)) {
          goto LABEL_72;
        }
        if (swift_dynamicCast())
        {
          CGFloat v56 = v125;
          *(void *)&long long v126 = 0x746867696548;
          *((void *)&v126 + 1) = 0xE600000000000000;
          id v57 = objc_msgSend(v41, sel___swift_objectForKeyedSubscript_, sub_25436D810());
          swift_unknownObjectRelease();
          if (v57)
          {
            sub_25436D1E0();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v126 = 0u;
            long long v127 = 0u;
          }
          sub_25425E0DC((uint64_t)&v126, (uint64_t)&v122, &qword_269DD7BE0);
          if (!*((void *)&v123 + 1)) {
            goto LABEL_72;
          }
          if (swift_dynamicCast())
          {
            LOBYTE(v122) = v117;
            LOBYTE(v126) = v116;
            sub_25425DBE0(&v122, (unsigned __int8 *)&v126, (uint64_t)v129, v48, v52, v56, v125);
            sub_25425E0DC((uint64_t)v129, (uint64_t)v133, &qword_269DD7BC0);
            if (v134 != 1)
            {
              double v60 = *(double *)v133;
              double v61 = *(double *)&v133[1];
              double v62 = *(double *)&v133[2];
              double v63 = *(double *)&v133[3];
              if (*(void *)(v35 + 16)
                && (unint64_t v64 = sub_2543516FC(0x444965636146, 0xE600000000000000), (v65 & 1) != 0)
                && (sub_25425E040(*(void *)(v35 + 56) + 32 * v64, (uint64_t)&v122), swift_dynamicCast()))
              {
                uint64_t v66 = v126;
              }
              else
              {
                uint64_t v66 = -1;
              }
              uint64_t v106 = v66;
              if (*(void *)(v35 + 16)
                && (unint64_t v74 = sub_2543516FC(0x444970756F7247, 0xE700000000000000), (v75 & 1) != 0)
                && (sub_25425E040(*(void *)(v35 + 56) + 32 * v74, (uint64_t)&v122), swift_dynamicCast()))
              {
                uint64_t v76 = v126;
              }
              else
              {
                uint64_t v76 = -1;
              }
              uint64_t v105 = v76;
              if (*(void *)(v35 + 16)
                && (unint64_t v77 = sub_2543516FC(0x666E49656C676E41, 0xEC0000007761596FLL), (v78 & 1) != 0)
                && (sub_25425E040(*(void *)(v35 + 56) + 32 * v77, (uint64_t)&v122), (swift_dynamicCast() & 1) != 0))
              {
                int v79 = 0;
                double v80 = *(double *)&v126 * 3.14159265 / 180.0;
              }
              else
              {
                double v80 = 0.0;
                int v79 = 1;
              }
              if (*(void *)(v35 + 16)
                && (unint64_t v81 = sub_2543516FC(0x666E49656C676E41, 0xEE0068637469506FLL), (v82 & 1) != 0))
              {
                sub_25425E040(*(void *)(v35 + 56) + 32 * v81, (uint64_t)&v122);
              }
              else
              {
                long long v122 = 0u;
                long long v123 = 0u;
              }
              swift_bridgeObjectRelease();
              double v109 = v80;
              LODWORD(v108) = v79;
              if (*((void *)&v123 + 1))
              {
                if (swift_dynamicCast())
                {
                  char v83 = 0;
                  double v84 = *(double *)&v126 * 3.14159265 / 180.0;
LABEL_101:
                  uint64_t v88 = (uint64_t)v121;
                  v113(v121, v115, v111);
                  uint64_t v89 = (uint64_t)v112;
                  sub_25436C7F0();
                  uint64_t v107 = type metadata accessor for DKFaceObservation(0);
                  swift_allocObject();
                  uint64_t v90 = DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:isFrontal:)(v88, v89, MEMORY[0x263F8EE78], v106, 0, v105, 0, *(uint64_t *)&v109, v60, v61, v62, v63, v108, 0, 1, *(uint64_t *)&v84, v83, 0, 1,
                          2);
                  unint64_t v91 = v120;
                  uint64_t v92 = v110;
                  unint64_t v93 = *(void **)&v120[v110];
                  swift_retain();
                  char v94 = swift_isUniquelyReferenced_nonNull_native();
                  *(void *)&v91[v92] = v93;
                  if ((v94 & 1) == 0)
                  {
                    unint64_t v93 = sub_254258C38(0, v93[2] + 1, 1, v93);
                    *(void *)&v120[v110] = v93;
                  }
                  unint64_t v96 = v93[2];
                  unint64_t v95 = v93[3];
                  unint64_t v97 = v96 + 1;
                  if (v96 >= v95 >> 1)
                  {
                    unint64_t v93 = sub_254258C38((void *)(v95 > 1), v96 + 1, 1, v93);
                    *(void *)&v120[v110] = v93;
                  }
                  *((void *)&v123 + 1) = v107;
                  uint64_t v124 = sub_25425DF98(&qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
                  goto LABEL_113;
                }
              }
              else
              {
                sub_25425DFE0((uint64_t)&v122);
              }
              double v84 = 0.0;
              char v83 = 1;
              goto LABEL_101;
            }
          }
        }
      }
    }
    goto LABEL_7;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  return v120;
}

double static DKConversions.convert(point:orient:port:)(unsigned char *a1, unsigned char *a2, double a3)
{
  return sub_25425E140(a1, a2, a3);
}

uint64_t DKConversions.deinit()
{
  return v0;
}

uint64_t DKConversions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_25425DBE0(unsigned char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  int v12 = *a2;
  if (v12 == 1)
  {
    double MinY = 0.0;
    double MinX = 0.0;
    CGFloat Height = 0.0;
    double Width = 0.0;
    switch(*a1)
    {
      case 1:
        CGFloat v17 = a4;
        double MinY = CGRectGetMinY(*(CGRect *)(&a5 - 1));
        goto LABEL_12;
      case 2:
        CGFloat v19 = a4;
        double v20 = 1.0 - CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v31.origin.CGFloat x = a4;
        v31.origin.CGFloat y = a5;
        v31.size.CGFloat width = a6;
        v31.size.CGFloat height = a7;
        double MinY = v20 - CGRectGetHeight(v31);
        v32.origin.CGFloat x = a4;
        v32.origin.CGFloat y = a5;
        v32.size.CGFloat width = a6;
        v32.size.CGFloat height = a7;
        double v21 = 1.0 - CGRectGetMinX(v32);
        goto LABEL_14;
      case 3:
        CGFloat v22 = a4;
        double MinY = CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v33.origin.CGFloat x = a4;
        v33.origin.CGFloat y = a5;
        v33.size.CGFloat width = a6;
        v33.size.CGFloat height = a7;
        double v23 = 1.0 - CGRectGetMinY(v33);
        goto LABEL_17;
      case 4:
        CGFloat v24 = a4;
        double v25 = 1.0 - CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v34.origin.CGFloat x = a4;
        v34.origin.CGFloat y = a5;
        v34.size.CGFloat width = a6;
        v34.size.CGFloat height = a7;
        double MinY = v25 - CGRectGetWidth(v34);
        goto LABEL_9;
      case 5:
      case 6:
        break;
      case 7:
        goto LABEL_5;
      default:
        goto LABEL_10;
    }
  }
  else
  {
    LOBYTE(v12) = 1;
    double MinY = 0.0;
    double MinX = 0.0;
    CGFloat Height = 0.0;
    double Width = 0.0;
    switch(*a1)
    {
      case 1:
        CGFloat v26 = a4;
        double v27 = 1.0 - CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v36.origin.CGFloat x = a4;
        v36.origin.CGFloat y = a5;
        v36.size.CGFloat width = a6;
        v36.size.CGFloat height = a7;
        double MinY = v27 - CGRectGetHeight(v36);
LABEL_12:
        v37.origin.CGFloat x = a4;
        v37.origin.CGFloat y = a5;
        v37.size.CGFloat width = a6;
        v37.size.CGFloat height = a7;
        double MinX = CGRectGetMinX(v37);
        goto LABEL_15;
      case 2:
        CGFloat v28 = a4;
        double MinY = CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v38.origin.CGFloat x = a4;
        v38.origin.CGFloat y = a5;
        v38.size.CGFloat width = a6;
        v38.size.CGFloat height = a7;
        double v21 = 1.0 - CGRectGetMinX(v38);
LABEL_14:
        v39.origin.CGFloat x = a4;
        v39.origin.CGFloat y = a5;
        v39.size.CGFloat width = a6;
        v39.size.CGFloat height = a7;
        double MinX = v21 - CGRectGetWidth(v39);
LABEL_15:
        v40.origin.CGFloat x = a4;
        v40.origin.CGFloat y = a5;
        v40.size.CGFloat width = a6;
        v40.size.CGFloat height = a7;
        CGFloat Height = CGRectGetHeight(v40);
        v41.origin.CGFloat x = a4;
        v41.origin.CGFloat y = a5;
        v41.size.CGFloat width = a6;
        v41.size.CGFloat height = a7;
        double Width = CGRectGetWidth(v41);
        goto LABEL_19;
      case 3:
      case 7:
LABEL_5:
        CGFloat v18 = a4;
        double MinY = CGRectGetMinX(*(CGRect *)(&a5 - 1));
LABEL_9:
        v35.origin.CGFloat x = a4;
        v35.origin.CGFloat y = a5;
        v35.size.CGFloat width = a6;
        v35.size.CGFloat height = a7;
        double MinX = CGRectGetMinY(v35);
        goto LABEL_18;
      case 4:
        CGFloat v29 = a4;
        double v30 = 1.0 - CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v42.origin.CGFloat x = a4;
        v42.origin.CGFloat y = a5;
        v42.size.CGFloat width = a6;
        v42.size.CGFloat height = a7;
        double MinY = v30 - CGRectGetWidth(v42);
        v43.origin.CGFloat x = a4;
        v43.origin.CGFloat y = a5;
        v43.size.CGFloat width = a6;
        v43.size.CGFloat height = a7;
        double v23 = 1.0 - CGRectGetMinY(v43);
LABEL_17:
        v44.origin.CGFloat x = a4;
        v44.origin.CGFloat y = a5;
        v44.size.CGFloat width = a6;
        v44.size.CGFloat height = a7;
        double MinX = v23 - CGRectGetHeight(v44);
LABEL_18:
        v45.origin.CGFloat x = a4;
        v45.origin.CGFloat y = a5;
        v45.size.CGFloat width = a6;
        v45.size.CGFloat height = a7;
        CGFloat Height = CGRectGetWidth(v45);
        v46.origin.CGFloat x = a4;
        v46.origin.CGFloat y = a5;
        v46.size.CGFloat width = a6;
        v46.size.CGFloat height = a7;
        double Width = CGRectGetHeight(v46);
LABEL_19:
        LOBYTE(v12) = 0;
        break;
      case 5:
      case 6:
        break;
      default:
LABEL_10:
        double MinX = 0.0;
        CGFloat Height = 0.0;
        double Width = 0.0;
        break;
    }
  }
  *(double *)a3 = MinY;
  *(double *)(a3 + 8) = MinX;
  *(CGFloat *)(a3 + 16) = Height;
  *(double *)(a3 + 24) = Width;
  *(unsigned char *)(a3 + 32) = v12;
}

uint64_t sub_25425DF80(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25425DF98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25425DFE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25425E040(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_25425E09C()
{
  unint64_t result = qword_269DD7BE8;
  if (!qword_269DD7BE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DD7BE8);
  }
  return result;
}

uint64_t sub_25425E0DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_25425E140(unsigned char *a1, unsigned char *a2, double result)
{
  if (*a2 == 1)
  {
    switch(*a1)
    {
      case 2:
        double v3 = 1.0;
        goto LABEL_7;
      case 4:
        unint64_t result = 1.0 - result;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(*a1)
    {
      case 2:
        double v3 = 1.0;
LABEL_7:
        unint64_t result = v3 - result;
        break;
      case 4:
        unint64_t result = 1.0 - result;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t type metadata accessor for DKConversions()
{
  return self;
}

uint64_t method lookup function for DKConversions(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKConversions);
}

IntelligentTrackingCore::DKCameraOrientation_optional __swiftcall DKCameraOrientation.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 8;
  if ((unint64_t)rawValue < 8) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (IntelligentTrackingCore::DKCameraOrientation_optional)rawValue;
}

uint64_t static DKCamera.convertPort(portType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if (result == 0x6570795474726F50 && a2 == 0xEF6E776F6E6B6E55)
  {
    char v7 = 0;
  }
  else
  {
    uint64_t v6 = result;
    unint64_t result = sub_25436D7B0();
    char v7 = 0;
    if ((result & 1) == 0)
    {
      if (v6 == 0x6570795474726F50 && a2 == 0xED0000746E6F7246 || (unint64_t result = sub_25436D7B0(), (result & 1) != 0))
      {
        char v7 = 1;
      }
      else if (v6 == 0x6570795474726F50 && a2 == 0xEC0000006B636142 {
             || (unint64_t result = sub_25436D7B0(), (result & 1) != 0))
      }
      {
        char v7 = 2;
      }
      else if (v6 == 0xD000000000000015 && a2 == 0x800000025437A630 {
             || (unint64_t result = sub_25436D7B0(), (result & 1) != 0))
      }
      {
        char v7 = 3;
      }
      else
      {
        char v7 = 4;
        if (v6 != 0xD000000000000015 || a2 != 0x800000025437A650)
        {
          unint64_t result = sub_25436D7B0();
          if (result) {
            char v7 = 4;
          }
          else {
            char v7 = 1;
          }
        }
      }
    }
  }
  *a3 = v7;
  return result;
}

void DKCamera.port.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *DKCamera.port.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*DKCamera.port.modify())()
{
  return nullsub_1;
}

void DKCamera.orientation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *DKCamera.orientation.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*DKCamera.orientation.modify())()
{
  return nullsub_1;
}

double DKCamera.fov.getter()
{
  return *(double *)(v0 + 8);
}

void DKCamera.fov.setter(double a1, double a2)
{
  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*DKCamera.fov.modify())()
{
  return nullsub_1;
}

double DKCamera.fNormalized.getter()
{
  return *(double *)(v0 + 24);
}

void DKCamera.fNormalized.setter(double a1, double a2)
{
  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*DKCamera.fNormalized.modify())()
{
  return nullsub_1;
}

uint64_t DKCamera.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DKCamera();
  return sub_254261A9C(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t DKCamera.motion.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKCamera() + 32);
  return sub_25425FB74(a1, v3);
}

uint64_t (*DKCamera.motion.modify())()
{
  return nullsub_1;
}

uint64_t DKCamera.imageSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DKCamera() + 40));
}

uint64_t DKCamera.imageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for DKCamera();
  uint64_t v8 = v3 + *(int *)(result + 40);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*DKCamera.imageSize.modify())()
{
  return nullsub_1;
}

__n128 DKCamera.distortionCoefficients.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKCamera() + 44);
  uint64_t v4 = *(void *)(v3 + 32);
  char v5 = *(unsigned char *)(v3 + 40);
  __n128 result = *(__n128 *)v3;
  long long v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  return result;
}

__n128 DKCamera.distortionCoefficients.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for DKCamera() + 44);
  __n128 result = v6;
  *(_OWORD *)uint64_t v4 = v7;
  *(__n128 *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = v2;
  *(unsigned char *)(v4 + 40) = v3;
  return result;
}

uint64_t (*DKCamera.distortionCoefficients.modify())()
{
  return nullsub_1;
}

void DKCamera.init(port:orientation:f:o:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, double a3@<X2>, double a4@<X3>, int a5@<W4>, double a6@<X5>, double a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, long long *a10)
{
  double v58 = a6;
  double v59 = a7;
  double v56 = a4;
  double v57 = a3;
  int v62 = a5 | a8;
  uint64_t v13 = sub_25436C7B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v63.f64[0] = *a1;
  int v17 = *a2;
  long long v18 = *a10;
  long long v60 = a10[1];
  long long v61 = v18;
  uint64_t v19 = *((void *)a10 + 4);
  char v20 = *((unsigned char *)a10 + 40);
  double v21 = (int *)type metadata accessor for DKCamera();
  uint64_t v22 = a9 + v21[8];
  sub_25436C7A0();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v22, v16, v13);
  double v23 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v22 + v23[5]) = &unk_2703B1E78;
  *(void *)(v22 + v23[6]) = &unk_2703B1EB0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *(void *)(v22 + v23[7]) = &unk_2703B1EE8;
  *(unsigned char *)(a9 + v21[9]) = 1;
  uint64_t v25 = a9 + v21[10];
  *(void *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 1;
  uint64_t v26 = a9 + v21[11];
  long long v27 = v60;
  *(_OWORD *)uint64_t v26 = v61;
  *(_OWORD *)(v26 + 16) = v27;
  *(void *)(v26 + 32) = v19;
  *(unsigned char *)(v26 + 40) = v20;
  if (v62)
  {
    float32x2_t v34 = (float32x2_t)0x44BC957044FBD91DLL;
    int v35 = 1160463942;
    uint32x4_t v36 = (uint32x4_t)xmmword_25436F200;
    switch(*(void *)&v63.f64[0])
    {
      case 2:
        float32x2_t v34 = (float32x2_t)0x44231929448F5D79;
        int v35 = 1154642043;
        uint32x4_t v36 = (uint32x4_t)xmmword_25436F290;
        break;
      case 3:
        float32x2_t v34 = (float32x2_t)0x44215B20448FD4E5;
        int v35 = 1146894262;
        uint32x4_t v36 = (uint32x4_t)xmmword_25436F260;
        break;
      case 4:
        float32x2_t v34 = (float32x2_t)0x4424A1D8448E7BBELL;
        int v35 = 1161757061;
        uint32x4_t v36 = (uint32x4_t)xmmword_25436F230;
        break;
      default:
        break;
    }
    v36.i32[1] = v35;
    int8x16_t v42 = (int8x16_t)vcvtq_f64_f32(*(float32x2_t *)v36.i8);
    int8x16_t v43 = (int8x16_t)vcvtq_f64_f32(v34);
    *(unsigned char *)a9 = LOBYTE(v63.f64[0]);
    *(unsigned char *)(a9 + 1) = v17;
    v36.i32[0] = 2;
    v24.i32[0] = v17 - 3;
    int8x16_t v44 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v36, v24), 0);
    float64x2_t v45 = (float64x2_t)vbslq_s8(v44, v43, vextq_s8(v43, v43, 8uLL));
    float64x2_t v46 = (float64x2_t)vbslq_s8(v44, v42, vextq_s8(v42, v42, 8uLL));
    __asm { FMOV            V2.2D, #0.5 }
    float64x2_t v52 = vdivq_f64(vmulq_f64(v46, _Q2), v45);
    float64x2_t v63 = v52;
    *(float64x2_t *)(a9 + 24) = v52;
    long double v53 = atan(0.5 / v52.f64[0]);
    long double v54 = v53 + v53;
    long double v55 = atan(0.5 / v63.f64[1]);
    *(long double *)(a9 + 8) = v54;
    *(long double *)(a9 + 16) = v55 + v55;
  }
  else
  {
    char v64 = v17;
    _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v57, v56, v58, v59);
    if ((v17 - 3) > 1)
    {
      double v32 = v29;
      double v33 = v31;
      double v29 = v28;
      double v31 = v30;
    }
    else
    {
      double v32 = v28;
      double v33 = v30;
    }
    double v37 = v32 * 0.5 / v33;
    double v38 = v29 * 0.5 / v31;
    *(double *)(a9 + 24) = v37;
    *(double *)(a9 + 32) = v38;
    long double v39 = atan(0.5 / v37);
    long double v40 = v39 + v39;
    long double v41 = atan(0.5 / v38);
    *(long double *)(a9 + 8) = v40;
    *(long double *)(a9 + 16) = v41 + v41;
    *(unsigned char *)a9 = LOBYTE(v63.f64[0]);
    *(unsigned char *)(a9 + 1) = v17;
  }
}

double static DKCamera.defaultIntrinsicsForCamera(port:orientation:)@<D0>(unsigned char *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25426199C(a1, v5);
  long long v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  double result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

void DKCamera.init(port:orientation:intrinsics:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  long double v53 = a3;
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  int v51 = *a2;
  int v52 = v13;
  long long v14 = *a4;
  long long v49 = a4[1];
  long long v50 = v14;
  uint64_t v15 = *((void *)a4 + 4);
  char v16 = *((unsigned char *)a4 + 40);
  int v17 = (int *)type metadata accessor for DKCamera();
  long long v18 = (double *)(a5 + v17[8]);
  sub_25436C7A0();
  (*(void (**)(double *, char *, uint64_t))(v10 + 16))(v18, v12, v9);
  uint64_t v19 = (int *)type metadata accessor for DKMotion3();
  *(void *)((char *)v18 + v19[5]) = &unk_2703B1E78;
  *(void *)((char *)v18 + v19[6]) = &unk_2703B1EB0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v20 = v53;
  *(void *)((char *)v18 + v19[7]) = &unk_2703B1EE8;
  *(unsigned char *)(a5 + v17[9]) = 1;
  uint64_t v21 = a5 + v17[10];
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 1;
  uint64_t v22 = a5 + v17[11];
  long long v23 = v49;
  *(_OWORD *)uint64_t v22 = v50;
  *(_OWORD *)(v22 + 16) = v23;
  *(void *)(v22 + 32) = v15;
  *(unsigned char *)(v22 + 40) = v16;
  int v24 = v51;
  *(unsigned char *)a5 = v52;
  *(unsigned char *)(a5 + 1) = v24;
  long double v55 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A50);
  sub_25436CDC0();
  if (!v55) {
    goto LABEL_9;
  }
  unint64_t v25 = v55[2];
  if (v25 > 3)
  {
    uint64_t v26 = (double *)v55[7];
    unint64_t v27 = *((void *)v26 + 2);
    if (v27)
    {
      if (v25 >= 5)
      {
        long long v18 = (double *)v55[8];
        if (*((void *)v18 + 2) >= 2uLL)
        {
          if (v27 >= 3)
          {
            double v28 = v26[4];
            double v29 = v18[5];
            double v30 = v26[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (*((void *)v18 + 2) < 3uLL)
            {
              __break(1u);
LABEL_9:
              sub_254261A48();
              swift_allocError();
              *(void *)uint64_t v31 = 0xD00000000000001BLL;
              *(void *)(v31 + 8) = 0x800000025437A670;
              *(unsigned char *)(v31 + 16) = 0;
              swift_willThrow();

              sub_254261B04((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DKMotion3);
              return;
            }
            goto LABEL_16;
          }
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  if (!v25)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  double v32 = (double *)v55[4];
  unint64_t v33 = *((void *)v32 + 2);
  if (!v33)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v25 < 2)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  long long v18 = (double *)v55[5];
  if (*((void *)v18 + 2) < 2uLL)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v33 < 3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  double v28 = v32[4];
  double v29 = v18[5];
  double v30 = v32[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*((void *)v18 + 2) < 3uLL)
  {
LABEL_35:
    __break(1u);
    return;
  }
LABEL_16:
  double v34 = v18[6];
  swift_bridgeObjectRelease();
  char v54 = v24;
  _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v28, v29, v30, v34);
  unsigned int v39 = v24 - 3;
  if ((v24 - 3) <= 1) {
    double v40 = v35;
  }
  else {
    double v40 = v36;
  }
  if (v39 <= 1) {
    double v41 = v37;
  }
  else {
    double v41 = v38;
  }
  if (v39 > 1)
  {
    double v42 = v37;
  }
  else
  {
    double v35 = v36;
    double v42 = v38;
  }
  double v43 = v40 * 0.5 / v41;
  double v44 = v35 * 0.5 / v42;
  *(double *)(a5 + 24) = v43;
  *(double *)(a5 + 32) = v44;

  long double v45 = atan(0.5 / v43);
  long double v46 = v45 + v45;
  long double v47 = atan(0.5 / v44);
  *(long double *)(a5 + 8) = v46;
  *(long double *)(a5 + 16) = v47 + v47;
}

void DKCamera.init(port:orientation:intrinsics:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  int v42 = *a2;
  int v43 = v13;
  long long v14 = *a4;
  long long v44 = a4[1];
  long long v45 = v14;
  uint64_t v15 = *((void *)a4 + 4);
  char v16 = *((unsigned char *)a4 + 40);
  int v17 = (int *)type metadata accessor for DKCamera();
  uint64_t v18 = a5 + v17[8];
  sub_25436C7A0();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v12, v9);
  uint64_t v19 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v18 + v19[5]) = &unk_2703B1E78;
  *(void *)(v18 + v19[6]) = &unk_2703B1EB0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = v46;
  *(void *)(v18 + v19[7]) = &unk_2703B1EE8;
  *(unsigned char *)(a5 + v17[9]) = 1;
  uint64_t v21 = a5 + v17[10];
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 1;
  uint64_t v22 = a5 + v17[11];
  long long v23 = v44;
  *(_OWORD *)uint64_t v22 = v45;
  *(_OWORD *)(v22 + 16) = v23;
  *(void *)(v22 + 32) = v15;
  *(unsigned char *)(v22 + 40) = v16;
  float v24 = *(float *)v20;
  if (*(float *)v20 >= COERCE_FLOAT(1)
    && (float v25 = *(float *)(v20 + 20), v25 >= COERCE_FLOAT(1))
    && (long long v26 = *(_OWORD *)(v20 + 32), *(float *)&v26 >= COERCE_FLOAT(1))
    && *((float *)&v26 + 1) >= COERCE_FLOAT(1))
  {
    int v28 = v42;
    char v47 = v42;
    _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v24, v25, *(float *)&v26, *((float *)&v26 + 1));
    unsigned int v33 = v28 - 3;
    if ((v28 - 3) <= 1) {
      double v34 = v29;
    }
    else {
      double v34 = v30;
    }
    if (v33 <= 1) {
      double v35 = v31;
    }
    else {
      double v35 = v32;
    }
    if (v33 > 1)
    {
      double v36 = v31;
    }
    else
    {
      double v29 = v30;
      double v36 = v32;
    }
    double v37 = v34 * 0.5 / v35;
    double v38 = v29 * 0.5 / v36;
    *(double *)(a5 + 24) = v37;
    *(double *)(a5 + 32) = v38;
    long double v39 = atan(0.5 / v37);
    long double v40 = v39 + v39;
    long double v41 = atan(0.5 / v38);
    *(long double *)(a5 + 8) = v40;
    *(long double *)(a5 + 16) = v41 + v41;
    *(unsigned char *)a5 = v43;
    *(unsigned char *)(a5 + 1) = v28;
  }
  else
  {
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v27 = 0xD00000000000001DLL;
    *(void *)(v27 + 8) = 0x800000025437A690;
    *(unsigned char *)(v27 + 16) = 0;
    swift_willThrow();
    sub_254261B04(v18, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  }
}

CGPoint __swiftcall DKCamera.cameraToWorldRelative(point:)(CGPoint point)
{
  sub_25425F308(5, point.x, point.y);
  double v3 = v2;
  long double v5 = atan2(-(v4 + -0.5), *(long double *)(v1 + 24));
  double v6 = atan2(v3 + -0.5, *(long double *)(v1 + 32));
  double v7 = v5;
  result.CGFloat y = v6;
  result.CGFloat x = v7;
  return result;
}

uint64_t sub_25425F308(uint64_t a1, float64_t a2, float64_t a3)
{
  uint64_t result = type metadata accessor for DKCamera();
  v7.f64[0] = a2;
  uint64_t v6 = v3 + *(int *)(result + 44);
  v7.f64[1] = a3;
  if ((*(unsigned char *)(v6 + 40) & 1) == 0)
  {
    if (a1 < 1)
    {
LABEL_9:
      __break(1u);
    }
    else
    {
      double v8 = *(double *)(v6 + 32);
      double v10 = *(double *)v6;
      double v9 = *(double *)(v6 + 8);
      float64x2_t v11 = *(float64x2_t *)(v6 + 16);
      float64x2_t v12 = vaddq_f64(v11, v11);
      float64x2_t v13 = (float64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)v11, 8uLL);
      uint64_t v14 = 1;
      while (1)
      {
        float64x2_t v15 = vmulq_f64(v7, v7);
        float64x2_t v16 = vaddq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1), v15);
        float64x2_t v17 = vmulq_f64(v16, v16);
        float64x2_t v7 = vdivq_f64(vsubq_f64(v7, vaddq_f64(vmulq_laneq_f64(vmulq_n_f64(v12, v7.f64[0]), v7, 1), vmulq_f64(v13, vaddq_f64((float64x2_t)vdupq_lane_s64(*(uint64_t *)&v16.f64[0], 0), vmulq_f64(v7, vaddq_f64(v7, v7)))))), (float64x2_t)vdupq_lane_s64(COERCE__INT64(v10 * vaddvq_f64(v15) + 1.0 + v9 * v17.f64[0] + v8* vmulq_f64(v16, v17).f64[0]), 0));
        if (a1 == v14) {
          break;
        }
        if (__OFADD__(v14++, 1))
        {
          __break(1u);
          goto LABEL_9;
        }
      }
    }
  }
  return result;
}

CGSize __swiftcall DKCamera.cameraToWorldRelative(size:distance:)(CGSize size, Swift::Double distance)
{
  CGFloat height = size.height;
  float64x2_t v4 = vdivq_f64(vmulq_n_f64(vmulq_f64(*(float64x2_t *)(v2 + 8), (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&size.width)), distance), *(float64x2_t *)(v2 + 24));
  double v5 = v4.f64[1];
  result.CGFloat width = v4.f64[0];
  result.CGFloat height = v5;
  return result;
}

__C::CGRect __swiftcall DKCamera.cameraToWorldRelative(rect:distance:)(__C::CGRect rect, Swift::Double distance)
{
  double height = rect.size.height;
  double width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  CGFloat MidX = CGRectGetMidX((CGRect)rect);
  v22.origin.CGFloat x = x;
  v22.origin.CGFloat y = y;
  v22.size.double width = width;
  v22.size.double height = height;
  CGFloat MidY = CGRectGetMidY(v22);
  sub_25425F308(5, MidX, MidY);
  double v11 = v10;
  long double v13 = v2[3];
  double v14 = atan2(-(v12 + -0.5), v13);
  long double v15 = v11 + -0.5;
  long double v16 = v2[4];
  long double v17 = atan2(v15, v16);
  double v18 = v2[1] * width * distance / v13;
  double v19 = v2[2] * height * distance / v16;
  double v20 = v17 + v19 * -0.5;
  double v21 = v14 + v18 * -0.5;
  result.size.double height = v19;
  result.size.double width = v18;
  result.origin.CGFloat y = v20;
  result.origin.CGFloat x = v21;
  return result;
}

void __swiftcall DKCamera.cameraToWorld(rect:distance:)(Swift::tuple_worldRect___C_CGRect_distance_Double *__return_ptr retstr, __C::CGRect rect, Swift::Double_optional distance)
{
  char v5 = v3;
  double v6 = *(double *)&distance.is_nil;
  CGFloat height = rect.size.height;
  CGFloat width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  uint64_t v12 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v12);
  double v14 = (double *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_254261A9C(v4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DKCamera);
  if (v5)
  {
    v26.origin.CGFloat x = x;
    v26.origin.CGFloat y = y;
    v26.size.CGFloat width = width;
    v26.size.CGFloat height = height;
    double v15 = 10.0;
    if (CGRectGetWidth(v26) >= 1.0e-10)
    {
      double v16 = v14[3] * 0.115;
      v27.origin.CGFloat x = x;
      v27.origin.CGFloat y = y;
      v27.size.CGFloat width = width;
      v27.size.CGFloat height = height;
      double v15 = v16 / CGRectGetWidth(v27);
    }
  }
  else
  {
    double v15 = v6;
  }
  sub_254261B04((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DKCamera);
  v28.origin.CGFloat x = x;
  v28.origin.CGFloat y = y;
  v28.size.CGFloat width = width;
  v28.size.CGFloat height = height;
  __C::CGRect v29 = DKCamera.cameraToWorldRelative(rect:distance:)(v28, v15);
  double v17 = v29.origin.x;
  double v18 = v29.origin.y;
  CGFloat v19 = v29.size.width;
  CGFloat v20 = v29.size.height;
  uint64_t v21 = v4 + *(int *)(v12 + 32);
  uint64_t v22 = *(void *)(v21 + *(int *)(type metadata accessor for DKMotion3() + 20));
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    if (v23 != 1)
    {
      CGFloat v24 = v18 + *(double *)(v22 + 40);
      retstr->worldRect.origin.CGFloat x = v17 + *(double *)(v22 + 32);
      retstr->worldRect.origin.CGFloat y = v24;
      retstr->worldRect.size.CGFloat width = v19;
      retstr->worldRect.size.CGFloat height = v20;
      retstr->distance = v15;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Double __swiftcall DKCamera.heuristicDistance(rect:type:)(__C::CGRect rect, IntelligentTrackingCore::DKObservationType type)
{
  CGFloat height = rect.size.height;
  CGFloat width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  int v7 = *(unsigned __int8 *)type;
  double v8 = CGRectGetWidth((CGRect)rect);
  Swift::Double result = 10.0;
  if (v8 >= 1.0e-10)
  {
    double v10 = 0.115;
    if (v7 == 1) {
      double v10 = 0.35;
    }
    double v11 = *(double *)(v2 + 24) * v10;
    v12.origin.CGFloat x = x;
    v12.origin.CGFloat y = y;
    v12.size.CGFloat width = width;
    v12.size.CGFloat height = height;
    return v11 / CGRectGetWidth(v12);
  }
  return result;
}

CGPoint __swiftcall DKCamera.worldToCameraRelative(point:)(CGPoint point)
{
  *(void *)&long double v2 = *(_OWORD *)&sub_25425F798(point.x, point.y);
  long double v4 = v3;
  long double v5 = 0.5 - tan(v2) * *(double *)(v1 + 24);
  double v6 = tan(v4) * *(double *)(v1 + 32) + 0.5;
  double v7 = v5;
  result.CGFloat y = v6;
  result.CGFloat x = v7;
  return result;
}

float64x2_t sub_25425F798(double a1, float64_t a2)
{
  uint64_t v3 = v2 + *(int *)(type metadata accessor for DKCamera() + 44);
  result.f64[0] = a1;
  result.f64[1] = a2;
  if ((*(unsigned char *)(v3 + 40) & 1) == 0)
  {
    *(double *)&uint64_t v5 = a1 * a1 + a2 * a2;
    return vaddq_f64(vaddq_f64(vmulq_f64(vaddq_f64(vmulq_f64(vaddq_f64(result, result), result), (float64x2_t)vdupq_lane_s64(v5, 0)), (float64x2_t)vextq_s8(*(int8x16_t *)(v3 + 16), *(int8x16_t *)(v3 + 16), 8uLL)), vmulq_laneq_f64(vmulq_n_f64(vaddq_f64(*(float64x2_t *)(v3 + 16), *(float64x2_t *)(v3 + 16)), a1), result, 1)), vmulq_n_f64(result, *(double *)&v5 * (*(double *)&v5 * *(double *)&v5) * *(double *)(v3 + 32)+ *(double *)&v5 * *(double *)&v5 * *(double *)(v3 + 8)+ *(double *)&v5 * *(double *)v3+ 1.0));
  }
  return result;
}

CGSize __swiftcall DKCamera.worldToCameraRelative(size:distance:)(CGSize size, Swift::Double distance)
{
  CGFloat height = size.height;
  float64x2_t v4 = vdivq_f64(vdivq_f64(vmulq_f64(*(float64x2_t *)(v2 + 24), (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&size.width)), (float64x2_t)vdupq_lane_s64(*(uint64_t *)&distance, 0)), *(float64x2_t *)(v2 + 8));
  double v5 = v4.f64[1];
  result.CGFloat width = v4.f64[0];
  result.CGFloat height = v5;
  return result;
}

__C::CGRect __swiftcall DKCamera.worldToCameraRelative(rect:distance:)(__C::CGRect rect, Swift::Double distance)
{
  double height = rect.size.height;
  double width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  double MidX = CGRectGetMidX((CGRect)rect);
  v23.origin.CGFloat x = x;
  v23.origin.CGFloat y = y;
  v23.size.double width = width;
  v23.size.double height = height;
  CGFloat MidY = CGRectGetMidY(v23);
  *(void *)&long double v10 = *(_OWORD *)&sub_25425F798(MidX, MidY);
  long double v12 = v11;
  long double v13 = tan(v10);
  double v14 = v2[3];
  long double v15 = 0.5 - v13 * v14;
  long double v16 = tan(v12);
  double v17 = v14 * width / distance / v2[1];
  double v18 = v2[4];
  long double v19 = v16 * v18 + 0.5;
  double v20 = v18 * height / distance / v2[2];
  double v21 = v15 - v17 * 0.5;
  double v22 = v19 - v20 * 0.5;
  result.size.double height = v20;
  result.size.double width = v17;
  result.origin.CGFloat y = v22;
  result.origin.CGFloat x = v21;
  return result;
}

__C::CGRect __swiftcall DKCamera.worldToCamera(rect:distance:clampToBorders:)(__C::CGRect rect, Swift::Double distance, Swift::Bool clampToBorders)
{
  double height = rect.size.height;
  double width = rect.size.width;
  CGFloat y = rect.origin.y;
  CGFloat x = rect.origin.x;
  double MidX = CGRectGetMidX((CGRect)rect);
  v35.origin.CGFloat x = x;
  v35.origin.CGFloat y = y;
  v35.size.double width = width;
  v35.size.double height = height;
  CGRectGetMidY(v35);
  uint64_t v11 = v3 + *(int *)(type metadata accessor for DKCamera() + 32);
  uint64_t v12 = *(void *)(v11 + *(int *)(type metadata accessor for DKMotion3() + 20));
  if (!*(void *)(v12 + 16))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto _$s23IntelligentTrackingCore8DKCameraV13worldToCamera4rect8distance05clampF7BordersSo6CGRectVAI_SdSbtF;
  }
  for (double i = MidX - *(double *)(v12 + 32); i > 3.14159265; double i = i + -6.28318531)
    ;
  for (; i < -3.14159265; double i = i + 6.28318531)
    ;
  double v33 = i;
  v36.origin.CGFloat x = x;
  v36.origin.CGFloat y = y;
  v36.size.double width = width;
  v36.size.double height = height;
  CGRectGetMidX(v36);
  v37.origin.CGFloat x = x;
  v37.origin.CGFloat y = y;
  v37.size.double width = width;
  v37.size.double height = height;
  double MidY = CGRectGetMidY(v37);
  if (*(void *)(v12 + 16) < 2uLL) {
    goto LABEL_20;
  }
  double v18 = MidY - *(double *)(v12 + 40);
  if (v18 > 3.14159265)
  {
    v19.f64[0] = v33;
    do
      double v18 = v18 + -6.28318531;
    while (v18 > 3.14159265);
    if (v18 >= -3.14159265) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  for (v19.f64[0] = v33; v18 < -3.14159265; double v18 = v18 + 6.28318531)
LABEL_13:
    ;
LABEL_14:
  v19.f64[1] = v18;
  if (clampToBorders)
  {
    float64x2_t v20 = *(float64x2_t *)(v3 + 8);
    __asm { FMOV            V1.2D, #-0.5 }
    float64x2_t v26 = vmulq_f64(v20, _Q1);
    __asm { FMOV            V2.2D, #0.5 }
    float64x2_t v28 = vmulq_f64(v20, _Q2);
    float64x2_t v29 = (float64x2_t)vbslq_s8((int8x16_t)vcgeq_f64(v19, v26), (int8x16_t)v19, (int8x16_t)v26);
    float64x2_t v19 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v29, v28), (int8x16_t)v28, (int8x16_t)v29);
  }
  double v30 = v19.f64[0] - width * 0.5;
  double v32 = width;
  v19.f64[0] = height;
  float64_t v31 = v19.f64[1] - height * 0.5;
  *(__C::CGRect *)&double MidY = DKCamera.worldToCameraRelative(rect:distance:)(*(__C::CGRect *)((char *)&v19 - 24), distance);
_$s23IntelligentTrackingCore8DKCameraV13worldToCamera4rect8distance05clampF7BordersSo6CGRectVAI_SdSbtF:
  result.size.double height = v16;
  result.size.double width = v15;
  result.origin.CGFloat y = v14;
  result.origin.CGFloat x = MidY;
  return result;
}

uint64_t type metadata accessor for DKCamera()
{
  uint64_t result = qword_269DD7C98;
  if (!qword_269DD7C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25425FB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CGImagePropertyOrientation __swiftcall DKCamera.getCGImagePropertyOrientation()()
{
  if ((v0[1] - 1) > 3u) {
    return 1;
  }
  uint64_t v1 = &unk_25436F2B0;
  if (*v0 == 1) {
    uint64_t v1 = &unk_25436F2A0;
  }
  return v1[(char)(v0[1] - 1)];
}

unint64_t sub_25425FC20(char a1)
{
  unint64_t result = 1953656688;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 2:
      unint64_t result = 7761766;
      break;
    case 3:
      unint64_t result = 0x696C616D726F4E66;
      break;
    case 4:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 5:
      unint64_t result = 0x6F69746174537369;
      break;
    case 6:
      unint64_t result = 0x7A69536567616D69;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25425FD30()
{
  return sub_25425FC20(*v0);
}

uint64_t sub_25425FD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254262EA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25425FD60()
{
  return 0;
}

void sub_25425FD6C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_25425FD78(uint64_t a1)
{
  unint64_t v2 = sub_254261BA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25425FDB4(uint64_t a1)
{
  unint64_t v2 = sub_254261BA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKCamera.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254261BA8();
  sub_25436D950();
  LOBYTE(v19) = *(unsigned char *)v3;
  char v23 = 0;
  sub_254261BFC();
  sub_25436D710();
  if (!v2)
  {
    LOBYTE(v19) = *(unsigned char *)(v3 + 1);
    char v23 = 1;
    sub_254261C50();
    sub_25436D710();
    long long v19 = *(_OWORD *)(v3 + 8);
    char v23 = 2;
    type metadata accessor for CGSize(0);
    sub_254261DF0(&qword_269DD7C18, type metadata accessor for CGSize);
    sub_25436D710();
    long long v19 = *(_OWORD *)(v3 + 24);
    char v23 = 3;
    type metadata accessor for CGPoint(0);
    sub_254261DF0(&qword_269DD7C20, type metadata accessor for CGPoint);
    sub_25436D710();
    uint64_t v18 = type metadata accessor for DKCamera();
    LOBYTE(v19) = 4;
    type metadata accessor for DKMotion3();
    sub_254261DF0(&qword_269DD7C28, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D710();
    uint64_t v9 = v18;
    LOBYTE(v19) = 5;
    sub_25436D6E0();
    long double v10 = (long long *)(v3 + *(int *)(v9 + 40));
    char v11 = *((unsigned char *)v10 + 16);
    long long v19 = *v10;
    LOBYTE(v20) = v11;
    char v23 = 6;
    sub_25436D6D0();
    uint64_t v12 = (long long *)(v3 + *(int *)(v9 + 44));
    uint64_t v13 = *((void *)v12 + 4);
    char v14 = *((unsigned char *)v12 + 40);
    long long v15 = v12[1];
    long long v19 = *v12;
    long long v20 = v15;
    uint64_t v21 = v13;
    char v22 = v14;
    char v23 = 7;
    sub_254261CA4();
    sub_25436D6D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKCamera.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = (int *)type metadata accessor for DKMotion3();
  MEMORY[0x270FA5388](v3);
  int v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7C38);
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25436C7B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long double v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DKCamera();
  uint64_t v12 = (int *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = &v14[v12[10]];
  sub_25436C7A0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v10, v7);
  *(void *)&v15[v3[5]] = &unk_2703B1E78;
  *(void *)&v15[v3[6]] = &unk_2703B1EB0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  long long v44 = v3;
  uint64_t v16 = v3[7];
  char v47 = a1;
  uint64_t v48 = (uint64_t)v15;
  *(void *)&v15[v16] = &unk_2703B1EE8;
  uint64_t v17 = v12[11];
  v14[v17] = 1;
  uint64_t v18 = &v14[v12[12]];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  long long v19 = &v14[v12[13]];
  *((void *)v19 + 4) = 0;
  *(_OWORD *)long long v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[40] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254261BA8();
  long long v45 = v6;
  long long v20 = v49;
  sub_25436D940();
  if (v20)
  {
    uint64_t v21 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    float64x2_t v26 = type metadata accessor for DKMotion3;
    uint64_t v27 = v21;
  }
  else
  {
    long double v39 = v18;
    uint64_t v40 = v17;
    double v38 = v19;
    long long v49 = v14;
    uint64_t v22 = (uint64_t)v43;
    uint64_t v23 = v42;
    char v54 = 0;
    sub_254261D48();
    sub_25436D650();
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    *long long v49 = v50;
    char v54 = 1;
    sub_254261D9C();
    sub_25436D650();
    v25[1] = v50;
    type metadata accessor for CGSize(0);
    char v54 = 2;
    sub_254261DF0(&qword_269DD7C50, type metadata accessor for CGSize);
    sub_25436D650();
    *(_OWORD *)(v25 + 8) = v50;
    type metadata accessor for CGPoint(0);
    char v54 = 3;
    sub_254261DF0(&qword_269DD7C58, type metadata accessor for CGPoint);
    sub_25436D650();
    *(_OWORD *)(v25 + 24) = v50;
    LOBYTE(v50) = 4;
    sub_254261DF0(&qword_269DD7C60, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D650();
    sub_25425FB74(v22, v24);
    LOBYTE(v50) = 5;
    v49[v40] = sub_25436D620() & 1;
    char v54 = 6;
    sub_25436D610();
    char v29 = v51;
    double v30 = v39;
    *(_OWORD *)long double v39 = v50;
    v30[16] = v29;
    char v54 = 7;
    sub_254261E38();
    float64_t v31 = v45;
    uint64_t v32 = v46;
    sub_25436D610();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v32);
    uint64_t v33 = v52;
    char v34 = v53;
    long long v35 = v51;
    CGRect v36 = v38;
    *(_OWORD *)double v38 = v50;
    *((_OWORD *)v36 + 1) = v35;
    *((void *)v36 + 4) = v33;
    v36[40] = v34;
    CGRect v37 = v49;
    sub_254261A9C((uint64_t)v49, v41, (uint64_t (*)(void))type metadata accessor for DKCamera);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    uint64_t v27 = (uint64_t)v37;
    float64x2_t v26 = type metadata accessor for DKCamera;
  }
  return sub_254261B04(v27, (uint64_t (*)(void))v26);
}

uint64_t sub_254260808@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKCamera.init(from:)(a1, a2);
}

uint64_t sub_254260820(void *a1)
{
  return DKCamera.encode(to:)(a1);
}

void __swiftcall DKCameraDistortionParameters.init(k1:k2:p1:p2:k3:)(IntelligentTrackingCore::DKCameraDistortionParameters *__return_ptr retstr, Swift::Double k1, Swift::Double k2, Swift::Double p1, Swift::Double p2, Swift::Double k3)
{
  retstr->k1 = k1;
  retstr->k2 = k2;
  retstr->p1 = p1;
  retstr->p2 = p2;
  retstr->k3 = k3;
}

uint64_t sub_254260850()
{
  return qword_25436F968[*v0];
}

uint64_t sub_254260868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25426321C(a1, a2);
  *a3 = result;
  return result;
}

void sub_254260890(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_25426089C(uint64_t a1)
{
  unint64_t v2 = sub_254261E8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542608D8(uint64_t a1)
{
  unint64_t v2 = sub_254261E8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKCameraDistortionParameters.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7C70);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254261E8C();
  sub_25436D950();
  char v13 = 0;
  sub_25436D6F0();
  if (!v1)
  {
    char v12 = 1;
    sub_25436D6F0();
    char v11 = 2;
    sub_25436D6F0();
    char v10 = 3;
    sub_25436D6F0();
    char v9 = 4;
    sub_25436D6F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKCameraDistortionParameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7C80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254261E8C();
  sub_25436D940();
  if (!v2)
  {
    v20[15] = 0;
    sub_25436D630();
    uint64_t v10 = v9;
    v20[14] = 1;
    sub_25436D630();
    uint64_t v12 = v11;
    v20[13] = 2;
    sub_25436D630();
    uint64_t v14 = v13;
    v20[12] = 3;
    sub_25436D630();
    uint64_t v17 = v16;
    v20[11] = 4;
    sub_25436D630();
    uint64_t v19 = v18;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
    a2[3] = v17;
    a2[4] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_254260D40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DKCameraDistortionParameters.init(from:)(a1, a2);
}

uint64_t sub_254260D58(void *a1)
{
  return DKCameraDistortionParameters.encode(to:)(a1);
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  BOOL v3 = rawValue._countAndFlagsBits == 0x6570795474726F50 && rawValue._object == (void *)0xEF6E776F6E6B6E55;
  if (v3 || (object = rawValue._object, uint64_t countAndFlagsBits = rawValue._countAndFlagsBits, (sub_25436D7B0() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x6570795474726F50 && object == (void *)0xED0000746E6F7246 {
         || (sub_25436D7B0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x6570795474726F50 && object == (void *)0xEC0000006B636142 {
         || (sub_25436D7B0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x800000025437A630 {
         || (sub_25436D7B0() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x800000025437A650)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 4;
  }
  else
  {
    char v8 = sub_25436D7B0();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 4;
    }
    else {
      char v7 = 5;
    }
  }
  *uint64_t v2 = v7;
  return result;
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(position:deviceType:)(AVCaptureDevicePosition position, AVCaptureDeviceType deviceType)
{
  uint64_t v4 = v2;
  if (position == AVCaptureDevicePositionFront)
  {

    char v6 = 1;
    goto LABEL_20;
  }
  uint64_t v7 = sub_25436CC00();
  uint64_t v9 = v8;
  if (v7 == sub_25436CC00() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v12 = sub_25436D7B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_17:

    char v6 = 4;
    goto LABEL_20;
  }
  uint64_t v13 = sub_25436CC00();
  uint64_t v15 = v14;
  if (v13 == sub_25436CC00() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v18 = sub_25436D7B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_19:

    char v6 = 3;
    goto LABEL_20;
  }
  uint64_t v19 = sub_25436CC00();
  uint64_t v21 = v20;
  if (v19 == sub_25436CC00() && v21 == v22)
  {

    char v6 = 2;
    result.value = swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_25436D7B0();

    swift_bridgeObjectRelease();
    result.value = swift_bridgeObjectRelease();
    if (v23) {
      char v6 = 2;
    }
    else {
      char v6 = 5;
    }
  }
LABEL_20:
  *uint64_t v4 = v6;
  return result;
}

unint64_t DKCameraPort.description.getter()
{
  unint64_t result = 0x6570795474726F50;
  switch(*v0)
  {
    case 3:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (IntelligentTrackingCore::DKCameraPort_optional)rawValue;
}

uint64_t DKCameraPort.rawValue.getter()
{
  return *v0;
}

IntelligentTrackingCore::DKCameraPort_optional sub_254261264(Swift::Int *a1)
{
  return DKCameraPort.init(rawValue:)(*a1);
}

uint64_t sub_254261270()
{
  return sub_25436CD90();
}

uint64_t sub_2542612D0()
{
  return sub_25436CD80();
}

unint64_t DKCameraOrientation.description.getter()
{
  unint64_t result = 0x6574636572726F43;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469617274726F50;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x70616373646E614CLL;
      break;
    case 5:
      unint64_t result = 0x705565636146;
      break;
    case 6:
      unint64_t result = 0x6E776F4465636146;
      break;
    case 7:
      return result;
    default:
      unint64_t result = 0x6E776F6E6B6E5528;
      break;
  }
  return result;
}

IntelligentTrackingCore::DKCameraOrientation_optional sub_254261434(Swift::Int *a1)
{
  return DKCameraOrientation.init(rawValue:)(*a1);
}

uint64_t sub_254261440()
{
  return sub_25436CD90();
}

uint64_t sub_2542614A0()
{
  return sub_25436CD80();
}

BOOL _s23IntelligentTrackingCore28DKCameraDistortionParametersV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t _s23IntelligentTrackingCore8DKCameraV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || *((unsigned __int8 *)a1 + 1) != *((unsigned __int8 *)a2 + 1)) {
    return 0;
  }
  if (a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  if (a1[3] != a2[3] || a1[4] != a2[4]) {
    return 0;
  }
  char v6 = (int *)type metadata accessor for DKCamera();
  uint64_t v7 = v6[8];
  uint64_t v8 = (unsigned __int8 *)a1 + v7;
  uint64_t v9 = (unsigned __int8 *)a2 + v7;
  if ((sub_25436C780() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = (int *)type metadata accessor for DKMotion3();
  if (!sub_2542ECE84(*(void *)&v8[v10[5]], *(void *)&v9[v10[5]])
    || !sub_2542ECE84(*(void *)&v8[v10[6]], *(void *)&v9[v10[6]])
    || !sub_2542ECE84(*(void *)&v8[v10[7]], *(void *)&v9[v10[7]])
    || *((unsigned __int8 *)a1 + v6[9]) != *((unsigned __int8 *)a2 + v6[9]))
  {
    return 0;
  }
  uint64_t v12 = v6[10];
  uint64_t v13 = (double *)((char *)a1 + v12);
  unsigned __int8 v14 = *((unsigned char *)a1 + v12 + 16);
  uint64_t v15 = (unsigned __int8 *)a2 + v12;
  if (v14)
  {
    if (!v15[16]) {
      return 0;
    }
    goto LABEL_26;
  }
  if (v15[16]) {
    return 0;
  }
  uint64_t result = 0;
  if (*v13 == *(double *)v15 && v13[1] == *((double *)v15 + 1))
  {
LABEL_26:
    uint64_t v16 = v6[11];
    uint64_t v17 = (float64x2_t *)((char *)a1 + v16);
    unsigned __int8 v18 = *((unsigned char *)a1 + v16 + 40);
    uint64_t v19 = (unsigned __int8 *)a2 + v16;
    if (v18)
    {
      if (v19[40]) {
        return 1;
      }
    }
    else if ((v19[40] & 1) == 0 {
           && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v17, *(float64x2_t *)v19), (int32x4_t)vceqq_f64(v17[1], *((float64x2_t *)v19 + 1)))), 0xFuLL))) & 1) != 0&& v17[2].f64[0] == *((double *)v19 + 4))
    }
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(double a1, double a2, double a3, double a4)
{
  if (a1 < 1.0e-10 || a2 < 1.0e-10 || a3 < 1.0e-10 || a4 < 1.0e-10)
  {
    sub_25436D290();
    sub_25436CCB0();
    sub_25436CCB0();
    type metadata accessor for CGPoint(0);
    sub_25436D460();
    sub_25436CCB0();
    sub_25436D460();
    sub_25436CCB0();
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    sub_25436D4F0();
    __break(1u);
    JUMPOUT(0x25426197CLL);
  }
}

unsigned char *sub_25426199C@<X0>(unsigned char *result@<X0>, long long *a2@<X8>)
{
  long long v2 = xmmword_25436F1E0;
  long long v3 = xmmword_25436F1F0;
  long long v4 = xmmword_25436F200;
  switch(*result)
  {
    case 2:
      long long v2 = xmmword_25436F270;
      long long v3 = xmmword_25436F280;
      long long v4 = xmmword_25436F290;
      break;
    case 3:
      long long v2 = xmmword_25436F240;
      long long v3 = xmmword_25436F250;
      long long v4 = xmmword_25436F260;
      break;
    case 4:
      long long v2 = xmmword_25436F210;
      long long v3 = xmmword_25436F220;
      long long v4 = xmmword_25436F230;
      break;
    default:
      break;
  }
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v2;
  return result;
}

unint64_t sub_254261A48()
{
  unint64_t result = qword_269DD7BF0;
  if (!qword_269DD7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7BF0);
  }
  return result;
}

uint64_t sub_254261A9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254261B04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_254261BA8()
{
  unint64_t result = qword_269DD7C00;
  if (!qword_269DD7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C00);
  }
  return result;
}

unint64_t sub_254261BFC()
{
  unint64_t result = qword_269DD7C08;
  if (!qword_269DD7C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C08);
  }
  return result;
}

unint64_t sub_254261C50()
{
  unint64_t result = qword_269DD7C10;
  if (!qword_269DD7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C10);
  }
  return result;
}

unint64_t sub_254261CA4()
{
  unint64_t result = qword_269DD7C30;
  if (!qword_269DD7C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C30);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_254261D48()
{
  unint64_t result = qword_269DD7C40;
  if (!qword_269DD7C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C40);
  }
  return result;
}

unint64_t sub_254261D9C()
{
  unint64_t result = qword_269DD7C48;
  if (!qword_269DD7C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C48);
  }
  return result;
}

uint64_t sub_254261DF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254261E38()
{
  unint64_t result = qword_269DD7C68;
  if (!qword_269DD7C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C68);
  }
  return result;
}

unint64_t sub_254261E8C()
{
  unint64_t result = qword_269DD7C78;
  if (!qword_269DD7C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C78);
  }
  return result;
}

unint64_t sub_254261EE4()
{
  unint64_t result = qword_269DD7C88;
  if (!qword_269DD7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C88);
  }
  return result;
}

unint64_t sub_254261F3C()
{
  unint64_t result = qword_269DD7C90;
  if (!qword_269DD7C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7C90);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DKCamera(uint64_t a1, uint64_t *a2, int *a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v7 = a3[8];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_25436C7B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for DKMotion3();
    *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
    *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
    *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
    uint64_t v12 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    v13[16] = *(unsigned char *)(v14 + 16);
    uint64_t v15 = a3[11];
    uint64_t v16 = (_OWORD *)((char *)v4 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    *(_OWORD *)((char *)v16 + 25) = *(_OWORD *)((char *)v17 + 25);
    long long v18 = v17[1];
    _OWORD *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DKCamera(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for DKMotion3();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  uint64_t v11 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v14 = a3[11];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = v14;
  uint64_t v15 = a3[11];
  uint64_t v16 = (_OWORD *)(a1 + v15);
  long long v17 = (long long *)(a2 + v15);
  long long v18 = *v17;
  long long v19 = v17[1];
  *(_OWORD *)((char *)v16 + 25) = *(long long *)((char *)v17 + 25);
  _OWORD *v16 = v18;
  v16[1] = v19;
  return a1;
}

uint64_t initializeWithTake for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  uint64_t v11 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v14 = a3[11];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t assignWithTake for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DKMotion3();
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  swift_bridgeObjectRelease();
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v14 = a3[11];
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKCamera(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254262658);
}

uint64_t sub_254262658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DKMotion3();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DKCamera(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254262740);
}

uint64_t sub_254262740(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DKMotion3();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
  }
  return result;
}

uint64_t sub_254262800()
{
  uint64_t result = type metadata accessor for DKMotion3();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DKCameraDistortionParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DKCameraDistortionParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DKCameraDistortionParameters()
{
  return &type metadata for DKCameraDistortionParameters;
}

ValueMetadata *type metadata accessor for DKCameraPort()
{
  return &type metadata for DKCameraPort;
}

ValueMetadata *type metadata accessor for DKCameraOrientation()
{
  return &type metadata for DKCameraOrientation;
}

uint64_t getEnumTagSinglePayload for LegacySubjectSelection.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23IntelligentTrackingCore12DKCameraPortOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254262ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKCameraDistortionParameters.CodingKeys()
{
  return &type metadata for DKCameraDistortionParameters.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKHandObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23IntelligentTrackingCore19DKCameraOrientationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254262C60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKCamera.CodingKeys()
{
  return &type metadata for DKCamera.CodingKeys;
}

unint64_t sub_254262C9C()
{
  unint64_t result = qword_269DD7CA8;
  if (!qword_269DD7CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CA8);
  }
  return result;
}

unint64_t sub_254262CF4()
{
  unint64_t result = qword_269DD7CB0;
  if (!qword_269DD7CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CB0);
  }
  return result;
}

unint64_t sub_254262D4C()
{
  unint64_t result = qword_269DD7CB8;
  if (!qword_269DD7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CB8);
  }
  return result;
}

unint64_t sub_254262DA4()
{
  unint64_t result = qword_269DD7CC0;
  if (!qword_269DD7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CC0);
  }
  return result;
}

unint64_t sub_254262DFC()
{
  unint64_t result = qword_269DD7CC8;
  if (!qword_269DD7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CC8);
  }
  return result;
}

unint64_t sub_254262E54()
{
  unint64_t result = qword_269DD7CD0;
  if (!qword_269DD7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CD0);
  }
  return result;
}

uint64_t sub_254262EA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953656688 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7761766 && a2 == 0xE300000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C616D726F4E66 && a2 == 0xEB0000000064657ALL || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F69746174537369 && a2 == 0xEC0000007972616ELL || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7A69536567616D69 && a2 == 0xE900000000000065 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000025437A6D0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_25426321C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12651 && a2 == 0xE200000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12907 && a2 == 0xE200000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12656 && a2 == 0xE200000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 12912 && a2 == 0xE200000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 13163 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_2542633C4()
{
  unint64_t result = qword_269DD7CD8;
  if (!qword_269DD7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CD8);
  }
  return result;
}

unint64_t sub_254263418()
{
  unint64_t result = qword_269DD7CE0;
  if (!qword_269DD7CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CE0);
  }
  return result;
}

void *static DKDifferential2DMotionFilter.Index.allCases.getter()
{
  return &unk_2703B1F20;
}

uint64_t DKDifferential2DMotionFilter.Index.rawValue.getter()
{
  return *v0;
}

uint64_t DKDifferential2DMotionFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional __swiftcall DKDifferential2DMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 6;
  if ((unint64_t)rawValue < 6) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional sub_254263628(Swift::Int *a1)
{
  return DKDifferential2DMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_254263630(void *a1@<X8>)
{
  *a1 = &unk_2703B1F20;
}

uint64_t DKDifferential2DMotionFilter.Configuration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKDifferential2DMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  swift_allocObject();
  sub_254263BB4(a1);
  uint64_t v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKDifferential2DMotionFilter.init(configuration:)(uint64_t a1)
{
  sub_254263BB4(a1);
  uint64_t v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_254263728(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4);
  sub_25436C700();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  uint64_t v11 = v10[2];
  if (v11 < 3) {
    goto LABEL_26;
  }
  if ((uint64_t)v10[3] <= 0) {
    goto LABEL_26;
  }
  if ((unint64_t)v11 < 6) {
    goto LABEL_26;
  }
  unsigned int v12 = (double *)v10[4];
  double v13 = v12[3];
  double v14 = v12[5];
  __double2 v15 = __sincos_stret(v12[2]);
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  uint64_t v17 = v16[2];
  if (v17 < 1) {
    goto LABEL_26;
  }
  uint64_t v18 = v16[3];
  if (v18 <= 3) {
    goto LABEL_26;
  }
  uint64_t v19 = 3 * v17;
  if ((unsigned __int128)(v17 * (__int128)3) >> 64 != (3 * v17) >> 63)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v20 = v16[4];
  *(double *)(v20 + 24 * v17) = v9 * v15.__cosval;
  if ((unint64_t)v18 <= 5) {
    goto LABEL_26;
  }
  uint64_t v21 = 5 * v17;
  if ((unsigned __int128)(v17 * (__int128)5) >> 64 != (5 * v17) >> 63) {
    goto LABEL_21;
  }
  *(double *)(v20 + 40 * v17) = v9 * (v9 * v15.__cosval * 0.5);
  if ((unint64_t)v17 <= 1) {
    goto LABEL_26;
  }
  BOOL v22 = __OFADD__(v19, 1);
  uint64_t v23 = v19 + 1;
  if (v22) {
    goto LABEL_22;
  }
  *(double *)(v20 + 8 * v23) = v9 * v15.__sinval;
  if (__OFADD__(v21, 1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  *(double *)(v20 + 8 * (v21 + 1)) = v9 * (v9 * v15.__sinval * 0.5);
  if ((unint64_t)v17 <= 2) {
    goto LABEL_26;
  }
  *(double *)(v20 + 32 * v17 + 16) = v9;
  if (v17 == 3) {
    goto LABEL_26;
  }
  if (__OFADD__(v21, 3)) {
    goto LABEL_24;
  }
  *(double *)(v20 + 8 * (v21 + 3)) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  swift_allocObject();
  uint64_t v24 = (void *)swift_retain();
  uint64_t v25 = sub_254354310(v24);
  swift_release();
  uint64_t v26 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v25;
  swift_release();
  uint64_t v27 = *(void **)(v2 + v26);
  uint64_t v28 = v27[2];
  if (v28 < 1 || (uint64_t)v27[3] <= 2) {
    goto LABEL_26;
  }
  if (v28 + 0x4000000000000000 < 0) {
    goto LABEL_25;
  }
  double v29 = v9 * (v9 * 0.5);
  uint64_t v30 = v27[4];
  *(double *)(v30 + 16 * v28) = v9 * -(v15.__sinval * v13) - v29 * (v14 * v15.__sinval);
  if ((unint64_t)v28 > 1)
  {
    *(double *)(v30 + ((16 * v28) | 8)) = v9 * (v15.__cosval * v13) + v29 * (v15.__cosval * v14);
    return sub_25434F220(a1);
  }
LABEL_26:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

void DKDifferential2DMotionFilter.__allocating_init(configuration:stateSize:)()
{
}

void DKDifferential2DMotionFilter.init(configuration:stateSize:)()
{
}

uint64_t sub_254263AF8()
{
  return swift_release();
}

uint64_t DKDifferential2DMotionFilter.deinit()
{
  uint64_t v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_254263BB4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKDifferential2DMotionFilter_differentialConfiguration) = a1;
  uint64_t v2 = swift_retain();
  sub_254353F8C(v2, 6);
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  unint64_t v5 = v4[2];
  if ((uint64_t)v5 < 1) {
    goto LABEL_43;
  }
  unint64_t v6 = v4[3];
  if ((uint64_t)v6 <= 0) {
    goto LABEL_43;
  }
  BOOL v7 = (void *)v4[4];
  *BOOL v7 = 0x3FAEB851EB851EB8;
  if (v5 < 2 || v6 == 1) {
    goto LABEL_43;
  }
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v7[v5 + 1] = 0x3FAEB851EB851EB8;
  if (v5 < 3 || v6 <= 2) {
    goto LABEL_43;
  }
  if ((uint64_t)(v5 + 0x4000000000000000) < 0) {
    goto LABEL_35;
  }
  if (__OFADD__(2 * v5, 2))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v7[2 * v5 + 2] = 0x3FAEB851EB851EB8;
  if (v5 < 4 || v6 <= 3) {
    goto LABEL_43;
  }
  uint64_t v11 = 3 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)3) >> 64 != (uint64_t)(3 * v5) >> 63) {
    goto LABEL_37;
  }
  BOOL v12 = __OFADD__(v11, 3);
  uint64_t v13 = v11 + 3;
  if (v12)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v7[v13] = 0x3F9999999999999ALL;
  if (v5 < 5 || v6 <= 4) {
    goto LABEL_43;
  }
  if ((v5 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_39;
  }
  if (__OFADD__(4 * v5, 4))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v7[4 * v5 + 4] = 0x3F947AE147AE147BLL;
  if (v5 < 6 || v6 <= 5) {
    goto LABEL_43;
  }
  uint64_t v15 = (unsigned __int128)((uint64_t)v5 * (__int128)5) >> 64;
  uint64_t v16 = 5 * v5;
  if (v15 == v16 >> 63)
  {
    BOOL v12 = __OFADD__(v16, 5);
    uint64_t v17 = v16 + 5;
    if (!v12)
    {
      v7[v17] = 0x3F847AE147AE147BLL;
      return;
    }
    goto LABEL_42;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_25436D4F0();
  __break(1u);
}

unint64_t sub_254263D94()
{
  unint64_t result = qword_269DD7CE8;
  if (!qword_269DD7CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CE8);
  }
  return result;
}

unint64_t sub_254263DEC()
{
  unint64_t result = qword_269DD7CF0;
  if (!qword_269DD7CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7CF0);
  }
  return result;
}

uint64_t sub_254263E48()
{
  return type metadata accessor for DKDifferential2DMotionFilter(0);
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD7D00);
}

uint64_t method lookup function for DKDifferential2DMotionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKDifferential2DMotionFilter);
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.updateQ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.getState(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.setState(index:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t sub_254263F20()
{
  return type metadata accessor for DKDifferential2DMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD7D10);
}

uint64_t method lookup function for DKDifferential2DMotionFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKDifferential2DMotionFilter.Measurement);
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingFSM.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKDifferential2DMotionFilter.Index(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542640BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKDifferential2DMotionFilter.Index()
{
  return &type metadata for DKDifferential2DMotionFilter.Index;
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter.Configuration()
{
  return self;
}

unint64_t sub_254264118(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E50);
  int v2 = (void *)sub_25436D560();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (id *)(a1 + 40);
  while (1)
  {
    int v5 = *(_DWORD *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_254351648((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_254264220(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F00);
  uint64_t v2 = sub_25436D560();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2542503C8(v6, (uint64_t)v15, &qword_269DD7F08);
    unint64_t result = sub_25435184C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_25426C668(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_254264364(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EE8);
  uint64_t v2 = (void *)sub_25436D560();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2543516FC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_254264488(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EE0);
  uint64_t v2 = (void *)sub_25436D560();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2543516FC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2542645A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7ED8);
  uint64_t v2 = (void *)sub_25436D560();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_2543516FC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2542646C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E20);
  uint64_t v2 = sub_25436D560();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2542503C8(v6, (uint64_t)&v13, &qword_269DD7E28);
    uint64_t v7 = v13;
    unint64_t result = sub_254351994(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_25426C668(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2542647F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E88);
  uint64_t v6 = sub_25436D560();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2542503C8(v12, (uint64_t)v5, &qword_269DD7E80);
    unint64_t result = sub_254351890((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_25436C800();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2542649E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E38);
  uint64_t v2 = sub_25436D560();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2542503C8(v6, (uint64_t)&v15, &qword_269DD7E40);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2543516FC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25426C668(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_254264B1C()
{
  return swift_retain();
}

uint64_t sub_254264B24(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_254264B34())()
{
  return nullsub_1;
}

unint64_t DKIntelligentTrackingSession.Signal.init(rawValue:)(unint64_t a1)
{
  return sub_254269878(a1);
}

BOOL sub_254264B74(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_254264B88@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_254269878(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_254264BBC()
{
  return sub_25436D930();
}

uint64_t sub_254264C04()
{
  return sub_25436D900();
}

uint64_t sub_254264C30()
{
  return sub_25436D930();
}

uint64_t DKIntelligentTrackingSession.__allocating_init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  swift_allocObject();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269DD7D28 + dword_269DD7D28);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_254264D50;
  return v9(a1, a2, a3);
}

uint64_t sub_254264D50(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t DKIntelligentTrackingSession.init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_269DD7D28 + dword_269DD7D28);
  uint64_t v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_25426C7E4;
  return v9(a1, a2, a3);
}

uint64_t sub_254264F54()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_254264F74, 0, 0);
}

uint64_t sub_254264F74()
{
  v0[3] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_254265018;
  return sub_2543026D0();
}

uint64_t sub_254265018()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254265130, 0, 0);
}

uint64_t sub_254265130()
{
  uint64_t v1 = v0[2];
  swift_retain();
  v0[5] = sub_254281EB4();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 40);
  v0[6] = v2;
  swift_retain();
  return MEMORY[0x270FA2498](sub_2542651C4, v2, 0);
}

uint64_t sub_2542651C4()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 40);
  return v1(v2);
}

uint64_t sub_254265230()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_254265250, 0, 0);
}

uint64_t sub_254265250()
{
  v0[3] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_2542652F4;
  return sub_2543026D0();
}

uint64_t sub_2542652F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_254265404()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_254265424, 0, 0);
}

uint64_t sub_254265424()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 40);
  *(void *)(v0 + 24) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426549C, v1, 0);
}

uint64_t sub_25426549C()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254265504(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_254265524, 0, 0);
}

uint64_t sub_254265524()
{
  v0[4] = *(void *)(v0[3] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_2542655C8;
  return sub_2543026D0();
}

uint64_t sub_2542655C8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2542656E0, 0, 0);
}

uint64_t sub_2542656E0()
{
  uint64_t v5 = v0;
  uint64_t v1 = v0[3];
  sub_2542684AC(&v4, v0[2]);
  uint64_t v2 = *(void *)(v1 + 40);
  v0[6] = v2;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426577C, v2, 0);
}

uint64_t sub_25426577C()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2542657E4(uint64_t result)
{
  *(unsigned char *)(*(void *)(v1 + 16)
           + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise) = result;
  return result;
}

uint64_t sub_2542657FC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25426581C, 0, 0);
}

uint64_t sub_25426581C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_retain();
  sub_254267F98(v1);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_2542658A8()
{
  swift_retain();
  id v0 = sub_2542681CC();
  swift_release();
}

uint64_t sub_25426590C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25426592C, 0, 0);
}

uint64_t sub_25426592C()
{
  v0[3] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_2542659D0;
  return sub_2543026D0();
}

uint64_t sub_2542659D0()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254265AE8, 0, 0);
}

uint64_t sub_254265AE8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[8];
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
    *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = 0;

    uint64_t v1 = *(void **)(v0 + 16);
  }
  uint64_t v4 = v1[7];
  if (v4)
  {
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
    *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = 0;

    uint64_t v1 = *(void **)(v0 + 16);
  }
  uint64_t v6 = v1[5];
  *(void *)(v0 + 40) = v6;
  swift_retain();
  return MEMORY[0x270FA2498](sub_254265BA8, v6, 0);
}

uint64_t sub_254265BA8()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254265C10(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 64) = *(unsigned char *)(a1 + 16);
  return MEMORY[0x270FA2498](sub_254265C40, 0, 0);
}

uint64_t sub_254265C40()
{
  v0[5] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_254265CE4;
  return sub_2543026D0();
}

uint64_t sub_254265CE4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254265DFC, 0, 0);
}

uint64_t sub_254265DFC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 128);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest;
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8);
    unsigned __int8 v8 = *(unsigned char *)(v0 + 64);
    *(void *)uint64_t v5 = v3;
    *(void *)(v5 + 8) = v4;
    unsigned __int8 v9 = *(unsigned char *)(v5 + 16);
    *(unsigned char *)(v5 + 16) = v8;
    sub_25426B2F0(v3, v4, v8);
    sub_25426B304(v7, v6, v9);
    uint64_t v1 = *(void *)(v0 + 16);
  }
  uint64_t v10 = *(void *)(v1 + 40);
  *(void *)(v0 + 56) = v10;
  swift_retain();
  return MEMORY[0x270FA2498](sub_254265EC4, v10, 0);
}

uint64_t sub_254265EC4()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254265F2C(double a1, double a2, double a3, double a4)
{
  *(void *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  return MEMORY[0x270FA2498](sub_254265F54, 0, 0);
}

uint64_t sub_254265F54()
{
  v0[7] = *(void *)(v0[6] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_254265FF8;
  return sub_2543026D0();
}

uint64_t sub_254265FF8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254266110, 0, 0);
}

uint64_t sub_254266110()
{
  uint64_t v1 = *((void *)v0 + 6);
  double v3 = v0[4];
  double v2 = v0[5];
  double v5 = v0[2];
  double v4 = v0[3];
  swift_retain();
  sub_25432F258(1, v5, v4, v3, v2);
  v0[9] = 0.0;
  swift_release();
  uint64_t v6 = *(void *)(v1 + 40);
  *((void *)v0 + 10) = v6;
  swift_retain();
  return MEMORY[0x270FA2498](sub_2542661FC, v6, 0);
}

uint64_t sub_2542661FC()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254266268()
{
  sub_2543038D4();
  swift_release();
  return MEMORY[0x270FA2498](sub_2542662D8, 0, 0);
}

uint64_t sub_2542662D8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254266344(unsigned char *a1, unsigned char *a2, unsigned char *a3)
{
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 48) = *a1;
  *(unsigned char *)(v4 + 49) = *a2;
  *(unsigned char *)(v4 + 50) = *a3;
  return MEMORY[0x270FA2498](sub_25426637C, 0, 0);
}

uint64_t sub_25426637C()
{
  v0[3] = *(void *)(v0[2] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_254266420;
  return sub_2543026D0();
}

uint64_t sub_254266420()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254266538, 0, 0);
}

uint64_t sub_254266538()
{
  uint64_t v6 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 49);
  *(unsigned char *)(*(void *)(*(void *)(*(void *)(v0 + 16) + 16)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine)
           + 41) = *(unsigned char *)(v0 + 48);
  if (v1 == 4)
  {
    swift_retain();
  }
  else
  {
    unsigned __int8 v5 = *(unsigned char *)(v0 + 49);
    swift_retain();
    sub_25432EC24(&v5);
  }
  if (*(unsigned char *)(v0 + 50) != 3)
  {
    unsigned __int8 v4 = *(unsigned char *)(v0 + 50);
    sub_25432EE30(&v4);
  }
  swift_release();
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 40);
  *(void *)(v0 + 40) = v2;
  swift_retain();
  return MEMORY[0x270FA2498](sub_254265BA8, v2, 0);
}

uint64_t sub_254266628(double a1, double a2, double a3, double a4)
{
  *(void *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  return MEMORY[0x270FA2498](sub_254266650, 0, 0);
}

uint64_t sub_254266650()
{
  v0[7] = *(void *)(v0[6] + 40);
  swift_retain();
  int v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_2542666F4;
  return sub_2543026D0();
}

uint64_t sub_2542666F4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25426680C, 0, 0);
}

uint64_t sub_25426680C()
{
  uint64_t v1 = *((void *)v0 + 6);
  CGFloat v3 = v0[4];
  CGFloat v2 = v0[5];
  CGFloat v5 = v0[2];
  CGFloat v4 = v0[3];
  swift_retain();
  sub_25432F464(0, v5, v4, v3, v2);
  v0[9] = 0.0;
  swift_release();
  uint64_t v6 = *(void *)(v1 + 40);
  *((void *)v0 + 10) = v6;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426C7F4, v6, 0);
}

uint64_t sub_2542668F8()
{
  sub_2543038D4();
  swift_release();
  return MEMORY[0x270FA2498](sub_25426C7F0, 0, 0);
}

uint64_t sub_254266968(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  uint64_t v3 = sub_25436C7B0();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254266A28, 0, 0);
}

uint64_t sub_254266A28()
{
  v0[14] = *(void *)(v0[10] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_254266ACC;
  return sub_2543026D0();
}

uint64_t sub_254266ACC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254266BE4, 0, 0);
}

uint64_t sub_254266BE4()
{
  char v82 = v0;
  uint64_t v1 = v0[12];
  uint64_t v77 = v0[13];
  CGFloat v2 = (void *)v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  swift_retain();
  sub_25431E1D8();
  swift_release();
  uint64_t v5 = v2[2] + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  swift_retain();
  v6(v5, v3);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v0[16] = v7;
  v0[17] = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  int v79 = v0;
  unint64_t v8 = (unint64_t)v2;
  v7(v5, v4, v3);
  swift_release();
  swift_retain();
  sub_254281F20(v4);
  swift_release();
  uint64_t v9 = v2[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  swift_retain();
  v6(v9, v3);
  v7(v9, v4, v3);
  swift_release();
  uint64_t v10 = v2[6];
  v7(v77, v2[2] + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v3);
  swift_retain();
  sub_25436C700();
  uint64_t v12 = v11;
  v6(v77, v3);
  uint64_t v13 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(void *)uint64_t v13 = v12;
  *(unsigned char *)(v13 + 8) = 0;
  swift_release();
  int v14 = *(unsigned __int8 *)(v2[3] + 89);
  if (v14 == 2)
  {
    uint64_t v15 = v79;
  }
  else
  {
    uint64_t v16 = v2[2];
    if (*(unsigned char *)(*(void *)(v16
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate)
                  + 72) != 1)
    {
      unint64_t v17 = *(void *)(*(void *)(v16
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      if (v17 >> 62) {
        goto LABEL_69;
      }
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
    LOBYTE(v14) = 1;
    uint64_t v15 = v79;
  }
  while (1)
  {
    *(unsigned char *)(*(void *)(v8 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = v14;
    uint64_t v19 = (char *)swift_retain();
    __int16 v20 = sub_2542CADCC(v19);
    *((_WORD *)v15 + 100) = v20;
    swift_release();
    switch(HIBYTE(v20))
    {
      case 1:
        if (v20 == 5)
        {
          char v81 = 8;
          os_log_type_t v22 = sub_25436D020();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v81, 0xD00000000000002CLL, 0x800000025437A8E0, v22);
          *(void *)(*(void *)(v8 + 16)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition) = 0;
          swift_bridgeObjectRelease();
        }
        uint64_t v21 = (unint64_t *)(v15[10] + 208);
        break;
      case 2:
        if (*(unsigned char *)(*(void *)(v8 + 48)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) == 1)
        {
          uint64_t v21 = (unint64_t *)(v15[10] + 224);
        }
        else if (*(unsigned char *)(*(void *)(v8 + 48) {
                           + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode))
        }
        {
          uint64_t v21 = (unint64_t *)(v15[10] + 232);
        }
        else
        {
          uint64_t v21 = (unint64_t *)(v15[10] + 216);
        }
        break;
      case 3:
        uint64_t v23 = v15[10];
        if (v20 != 3)
        {
          uint64_t v24 = *(void *)(v23 + 184);
          if (v24)
          {
            char v80 = 10;
            os_log_type_t v25 = sub_25436D000();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v80, 0xD000000000000012, 0x800000025437A8C0, v25);
            *(void *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) = -1;
            uint64_t v23 = v15[10];
          }
        }
        uint64_t v21 = (unint64_t *)(v23 + 248);
        break;
      case 4:
        uint64_t v26 = v15[10];
        if (v20 != 4)
        {
          uint64_t v27 = *(void *)(v26 + 176);
          if (v27)
          {
            *(unsigned char *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 0;
            uint64_t v26 = v15[10];
          }
        }
        uint64_t v21 = (unint64_t *)(v26 + 240);
        break;
      case 5:
        uint64_t v28 = v15[10];
        if (v20 != 5)
        {
          uint64_t v29 = *(void *)(v28 + 192);
          if (v29)
          {
            *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 0;
            uint64_t v28 = v15[10];
          }
        }
        uint64_t v21 = (unint64_t *)(v28 + 256);
        break;
      default:
        uint64_t v21 = (unint64_t *)(v15[10] + 200);
        break;
    }
    unint64_t v30 = *v21;
    v15[18] = *v21;
    swift_retain();
    swift_bridgeObjectRetain();
    float64_t v31 = (char *)sub_2542681CC();
    swift_release();
    if (v31)
    {
      uint64_t v32 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
      uint64_t v33 = *(void **)&v31[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image];
      if (!v33)
      {
LABEL_48:
        uint64_t v48 = v15[10];
        uint64_t v49 = *(void *)(v48 + 64);
        if (v49)
        {
          unint64_t v8 = *(void *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
          *(void *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = v31;
          long long v50 = v31;

          uint64_t v48 = v15[10];
        }
        uint64_t v51 = *(void *)(v48 + 56);
        if (v51)
        {
          uint64_t v52 = *(char **)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
          *(void *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = v31;
          float64_t v31 = v52;
        }

        goto LABEL_53;
      }
      id v34 = v33;
      if ((sub_25426B32C(v30) & 1) == 0)
      {
        unint64_t v8 = *(void *)&v31[v32];
        *(void *)&v31[v32] = 0;

        id v34 = (id)v8;
LABEL_47:

        goto LABEL_48;
      }
      int64_t Width = CVPixelBufferGetWidth((CVPixelBufferRef)v34);
      double v36 = (double)Width * 720.0 / (double)(uint64_t)CVPixelBufferGetHeight((CVPixelBufferRef)v34);
      if ((~*(void *)&v36 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        JUMPOUT(0x254267610);
      }
      if (v36 <= -2147483650.0) {
        goto LABEL_71;
      }
      if (v36 >= 2147483650.0) {
        goto LABEL_72;
      }
      unint64_t v8 = (int)v36;
      CGRect v37 = (CVPixelBufferRef *)(v15[10] + 280);
      if (*v37)
      {
        size_t v38 = CVPixelBufferGetWidth(*v37);
        size_t v39 = (int)v8;
        if (v38 == (int)v8)
        {
          if (!*v37) {
            goto LABEL_74;
          }
          size_t v39 = v38;
          if (CVPixelBufferGetHeight(*v37) == 720) {
            goto LABEL_44;
          }
        }
      }
      else
      {
        size_t v39 = (int)v8;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25436F130;
      *(void *)(inited + 32) = sub_25436CC00();
      *(void *)(inited + 40) = v41;
      *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
      sub_254264488(inited);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
      CFDictionaryRef v42 = (const __CFDictionary *)sub_25436CAA0();
      swift_bridgeObjectRelease();
      CVPixelBufferCreate(0, v39, 0x2D0uLL, 0x42475241u, v42, v37);

LABEL_44:
      CVPixelBufferRef v43 = *v37;
      if (!*v37) {
        goto LABEL_73;
      }
      long long v44 = v43;
      char v45 = _s23IntelligentTrackingCore11DKImageUtilC27resizeImageForCVPixelBuffer_06outputJ010dimensionsSbSo11CVBufferRefa_AHSgSo17CMVideoDimensionsatFZ_0((__CVBuffer *)v34, v43);

      if (v45)
      {
        CVPixelBufferRef v46 = *v37;
        unint64_t v8 = *(void *)&v31[v32];
        *(void *)&v31[v32] = *v37;
        char v47 = v46;
      }
      goto LABEL_47;
    }
LABEL_53:
    if (v30 >> 62) {
      break;
    }
    uint64_t v53 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15[19] = v53;
    if (!v53) {
      goto LABEL_63;
    }
LABEL_55:
    if (v53 >= 1)
    {
      v15[20] = 0;
      uint64_t v54 = v15[18];
      if ((v54 & 0xC000000000000001) != 0)
      {
        uint64_t v55 = MEMORY[0x25A275A00](0);
      }
      else
      {
        uint64_t v55 = *(void *)(v54 + 32);
        swift_retain();
      }
      v15[21] = v55;
      char v78 = (uint64_t (*)(void))(*(void *)(*(void *)v55 + 224) + **(int **)(*(void *)v55 + 224));
      double v56 = (void *)swift_task_alloc();
      v15[22] = v56;
      *double v56 = v15;
      v56[1] = sub_254267628;
      return v78();
    }
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25436D530();
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v15 = v79;
    LOBYTE(v14) = v18 < 2;
  }
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_25436D530();
  swift_bridgeObjectRelease();
  v15[19] = v53;
  if (v53) {
    goto LABEL_55;
  }
LABEL_63:
  char v58 = *((unsigned char *)v15 + 201);
  uint64_t v59 = v15[10];
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(v59 + 48);
  uint64_t v61 = v60 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(double *)uint64_t v61 = (double)*(uint64_t *)(*(void *)(*(void *)(v59 + 16)
                                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate)
                                      + 64);
  *(unsigned char *)(v61 + 8) = 0;
  uint64_t v62 = v15[10];
  *(unsigned char *)(v60 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = v58 + 1;
  swift_retain();
  swift_retain();
  sub_25431E370();
  uint64_t v64 = v63;
  swift_release();
  uint64_t v65 = v60 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(void *)uint64_t v65 = v64;
  *(unsigned char *)(v65 + 8) = 0;
  swift_release();
  uint64_t v66 = *(void *)(v62 + 16);
  uint64_t v67 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals;
  swift_bridgeObjectRelease();
  *(void *)(v66 + v67) = MEMORY[0x263F8EE88];
  uint64_t v68 = *(void *)(*(void *)(v62 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
  if (v68)
  {
    uint64_t v70 = v15[12];
    uint64_t v69 = v15[13];
    uint64_t v71 = v15[11];
    ((void (*)(uint64_t, uint64_t, uint64_t))v15[16])(v69, v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v71);
    uint64_t v72 = *(void *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
    uint64_t v73 = *(void *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
    __int16 v74 = *(_WORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    uint64_t v68 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v69, v71);
    uint64_t v15 = v79;
    uint64_t v75 = v68 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(void *)uint64_t v75 = v72;
    *(void *)(v75 + 8) = v73;
    *(_WORD *)(v75 + 16) = v74;
    sub_2542503B0(v72, v73, v74);
  }
  v15[23] = v68;
  uint64_t v76 = *(void *)(v15[10] + 40);
  v15[24] = v76;
  swift_retain();
  return MEMORY[0x270FA2498](sub_254267A7C, v76, 0);
}

uint64_t sub_254267628()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_254267724, 0, 0);
}

uint64_t sub_254267724()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 152);
  swift_release();
  if (v1 + 1 == v2)
  {
    char v3 = *(unsigned char *)(v0 + 201);
    uint64_t v4 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 48);
    uint64_t v6 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
    *(double *)uint64_t v6 = (double)*(uint64_t *)(*(void *)(*(void *)(v4 + 16)
                                                   + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate)
                                       + 64);
    *(unsigned char *)(v6 + 8) = 0;
    uint64_t v7 = *(void *)(v0 + 80);
    *(unsigned char *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = v3 + 1;
    swift_retain();
    swift_retain();
    sub_25431E370();
    uint64_t v9 = v8;
    swift_release();
    uint64_t v10 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
    *(void *)uint64_t v10 = v9;
    *(unsigned char *)(v10 + 8) = 0;
    swift_release();
    uint64_t v11 = *(void *)(v7 + 16);
    uint64_t v12 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals;
    swift_bridgeObjectRelease();
    *(void *)(v11 + v12) = MEMORY[0x263F8EE88];
    uint64_t v13 = *(void *)(*(void *)(v7 + 48)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    if (v13)
    {
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v14 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 88);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128))(v14, v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v16);
      uint64_t v17 = *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
      uint64_t v18 = *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
      __int16 v19 = *(_WORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16);
      type metadata accessor for DKIntelligentTrackingCommand(0);
      uint64_t v13 = swift_allocObject();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v14, v16);
      uint64_t v20 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
      *(void *)uint64_t v20 = v17;
      *(void *)(v20 + 8) = v18;
      *(_WORD *)(v20 + 16) = v19;
      sub_2542503B0(v17, v18, v19);
    }
    *(void *)(v0 + 184) = v13;
    uint64_t v21 = *(void *)(*(void *)(v0 + 80) + 40);
    *(void *)(v0 + 192) = v21;
    swift_retain();
    return MEMORY[0x270FA2498](sub_254267A7C, v21, 0);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 160) + 1;
    *(void *)(v0 + 160) = v22;
    uint64_t v23 = *(void *)(v0 + 144);
    if ((v23 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = MEMORY[0x25A275A00]();
    }
    else
    {
      uint64_t v24 = *(void *)(v23 + 8 * v22 + 32);
      swift_retain();
    }
    *(void *)(v0 + 168) = v24;
    uint64_t v27 = (uint64_t (*)(void))(*(void *)(*(void *)v24 + 224) + **(int **)(*(void *)v24 + 224));
    os_log_type_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v25;
    void *v25 = v0;
    v25[1] = sub_254267628;
    return v27();
  }
}

uint64_t sub_254267A7C()
{
  sub_2543038D4();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 184);
  return v1(v2);
}

uint64_t sub_254267AF4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_254267B14, 0, 0);
}

uint64_t sub_254267B14()
{
  v0[4] = *(void *)(v0[3] + 40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_254267BB8;
  return sub_2543026D0();
}

uint64_t sub_254267BB8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254267CD0, 0, 0);
}

uint64_t sub_254267CD0()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_retain();
  sub_254280368(v1);
  swift_release();
  uint64_t v3 = *(void *)(*(void *)(v2 + 32) + 24);
  uint64_t v4 = *(void **)(v3 + 32);
  swift_retain();
  objc_msgSend(v4, sel_lock);
  *(unsigned char *)(v3 + 16) = 1;
  objc_msgSend(v4, sel_unlock);
  swift_release();
  if (*(void *)(v2 + 88)) {
    sub_25426EB50();
  }
  uint64_t v5 = (void *)v0[3];
  uint64_t v6 = v5[22];
  if (v6)
  {
    *(unsigned char *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 0;
    uint64_t v5 = (void *)v0[3];
  }
  uint64_t v7 = v5[23];
  if (v7)
  {
    char v12 = 10;
    os_log_type_t v8 = sub_25436D000();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v12, 0xD000000000000012, 0x800000025437A8C0, v8);
    *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) = -1;
    uint64_t v5 = (void *)v0[3];
  }
  uint64_t v9 = v5[24];
  if (v9)
  {
    *(unsigned char *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 0;
    uint64_t v5 = (void *)v0[3];
  }
  uint64_t v10 = v5[5];
  v0[6] = v10;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426577C, v10, 0);
}

uint64_t DKIntelligentTrackingSession.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DKIntelligentTrackingSession.__deallocating_deinit()
{
  DKIntelligentTrackingSession.deinit();
  return swift_deallocClassInstance();
}

id *sub_254267F98(void *a1)
{
  uint64_t v2 = (void *)v1;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  uint64_t v5 = v2 + 3;
  id v6 = a1;
  MEMORY[0x25A275490]();
  if (*(void *)((v2[3] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[3] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  sub_25436CE60();
  sub_25436CDE0();
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2[4] >= v7) {
    goto LABEL_16;
  }
  unint64_t v8 = *v5;
  if (!(*v5 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_21;
  }
LABEL_8:
  unint64_t v8 = *v5;
  if (!(*v5 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_23;
  }
LABEL_10:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_24:
    unint64_t result = (id *)MEMORY[0x25A275A00](0, v8);
    goto LABEL_13;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_25436D530();
    unint64_t result = (id *)swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
LABEL_27:
    __break(1u);
    return result;
  }
  unint64_t result = (id *)*(id *)(v8 + 32);
LABEL_13:
  unint64_t v8 = (unint64_t)result;
  if (*v5 >> 62) {
    goto LABEL_26;
  }
  if (!*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_27;
  }
LABEL_15:
  sub_25425AF94(0, 1);

LABEL_16:
  uint64_t v10 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return (id *)swift_release();
}

id sub_2542681CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  uint64_t v3 = (void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 24);
  if (!(v4 >> 62))
  {
    if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_14:
    id v5 = 0;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v7 < 1) {
    goto LABEL_14;
  }
LABEL_3:
  id v5 = (id)*v3;
  if (!(*v3 >> 62))
  {
    if (*(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_17;
  }
LABEL_5:
  id v5 = (id)*v3;
  if (!(*v3 >> 62))
  {
    if (*(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_19;
  }
LABEL_7:
  if (((unint64_t)v5 & 0xC000000000000001) != 0)
  {
LABEL_20:
    id result = (id)MEMORY[0x25A275A00](0, v5);
    goto LABEL_10;
  }
  if (!*(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_25436D530();
    id result = (id)swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  id result = *((id *)v5 + 4);
LABEL_10:
  id v5 = result;
  if (*v3 >> 62) {
    goto LABEL_22;
  }
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    sub_25425AF94(0, 1);
LABEL_15:
    unint64_t v8 = *(os_unfair_lock_s **)(v1 + 16);
    swift_retain();
    os_unfair_lock_unlock(v8 + 4);
    swift_release();
    return v5;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2542683B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_25436D8E0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2542F6D00(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2542684AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_25436D8F0();
  sub_25436D900();
  uint64_t v6 = sub_25436D930();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2542F6E24(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2542685CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *v2;
  sub_25436D8F0();
  sub_25436C7B0();
  sub_25426C79C(&qword_269DD7E68, MEMORY[0x263F07490]);
  swift_bridgeObjectRetain();
  sub_25436CB50();
  sub_25436C800();
  sub_25426C79C(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  uint64_t v13 = sub_25436D930();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v21 = v11;
    uint64_t v22 = v2;
    uint64_t v23 = a1;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v24 + 72);
    do
    {
      sub_25426C678(*(void *)(v12 + 48) + v17 * v15, (uint64_t)v8);
      if (sub_25436C780() & 1) != 0 && (sub_25436C7D0())
      {
        sub_25426C6DC((uint64_t)v8);
        swift_bridgeObjectRelease();
        sub_25426C6DC(a2);
        sub_25426C678(*(void *)(*v22 + 48) + v17 * v15, v23);
        return 0;
      }
      sub_25426C6DC((uint64_t)v8);
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    uint64_t v3 = v22;
    a1 = v23;
    uint64_t v11 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_25426C678(a2, (uint64_t)v11);
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_2542F6F74((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  sub_25426C738(a2, a1);
  return 1;
}

uint64_t sub_2542688D0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_25426C79C(&qword_269DD7E70, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_25436CB40();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_25426C79C((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      char v21 = sub_25436CBB0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2542F7288((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_254268BF4(double *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_25436D8E0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2542F7528(v9, isUniquelyReferenced_nonNull_native, a2);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  double v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    uint64_t v13 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_8;
      }
      double v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  uint64_t result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

unint64_t sub_254268D04(uint64_t a1)
{
  return sub_254268EB0(a1, &qword_269DD7F10, sub_254351600);
}

unint64_t sub_254268D24(uint64_t a1)
{
  return sub_2542694AC(a1, &qword_269DD7E18, sub_2543517E0);
}

unint64_t sub_254268D44(uint64_t a1)
{
  return sub_254268DA4(a1, &qword_269DD7EB0, sub_2543517E0);
}

unint64_t sub_254268D64(uint64_t a1)
{
  return sub_254268EB0(a1, &qword_269DD7EC0, sub_254351600);
}

unint64_t sub_254268D84(uint64_t a1)
{
  return sub_254268DA4(a1, &qword_269DD7EA8, sub_2543517E0);
}

unint64_t sub_254268DA4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v6 = (void *)sub_25436D560();
    for (double i = (_OWORD *)(a1 + 40); ; double i = (_OWORD *)((char *)i + 24))
    {
      unsigned __int8 v8 = *((unsigned char *)i - 8);
      long long v14 = *i;
      unint64_t result = a3(v8);
      if (v10) {
        break;
      }
      *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v6[6] + result) = v8;
      *(_OWORD *)(v6[7] + 16 * result) = v14;
      uint64_t v11 = v6[2];
      BOOL v12 = __OFADD__(v11, 1);
      uint64_t v13 = v11 + 1;
      if (v12) {
        goto LABEL_10;
      }
      v6[2] = v13;
      if (!--v3) {
        return (unint64_t)v6;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_254268E90(uint64_t a1)
{
  return sub_254268EB0(a1, &qword_269DD7EB8, sub_254351600);
}

unint64_t sub_254268EB0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)sub_25436D560();
  LOBYTE(v7) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t result = a3(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v6;
  }
  uint64_t v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v6[6] + result) = v7;
    *(void *)(v6[7] + 8 * result) = v8;
    uint64_t v12 = v6[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v6[2] = v14;
    if (!--v3) {
      goto LABEL_8;
    }
    uint64_t v15 = v11 + 2;
    uint64_t v7 = *((unsigned __int8 *)v11 - 8);
    uint64_t v16 = *v11;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v7);
    uint64_t v11 = v15;
    uint64_t v8 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_254268FC4(uint64_t a1)
{
  return sub_254269004(a1, &qword_269DD7F20, sub_2543517E0);
}

unint64_t sub_254268FE4(uint64_t a1)
{
  return sub_254269004(a1, &qword_269DD7F18, sub_2543517E0);
}

unint64_t sub_254269004(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)sub_25436D560();
  LOBYTE(v7) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t result = a3(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v6;
  }
  uint64_t v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v6[6] + result) = v7;
    *(void *)(v6[7] + 8 * result) = v8;
    uint64_t v12 = v6[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v6[2] = v14;
    if (!--v3) {
      goto LABEL_8;
    }
    uint64_t v15 = v11 + 2;
    uint64_t v7 = *((unsigned __int8 *)v11 - 8);
    uint64_t v16 = *v11;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v7);
    uint64_t v11 = v15;
    uint64_t v8 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_254269118(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EF0);
    uint64_t v3 = (void *)sub_25436D560();
    for (double i = (_OWORD *)(a1 + 40); ; double i = (_OWORD *)((char *)i + 24))
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      long long v11 = *i;
      unint64_t result = sub_254351600(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_2542691F8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E90);
  uint64_t v3 = (void *)sub_25436D560();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_254351604(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_254351604(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2542692F8(uint64_t a1)
{
  return sub_2542694AC(a1, &qword_269DD7E58, sub_2543517E0);
}

unint64_t sub_254269318(uint64_t a1)
{
  return sub_254269378(a1, &qword_269DD7E60, sub_2543517E0);
}

unint64_t sub_254269338(uint64_t a1)
{
  return sub_254269378(a1, &qword_269DD7EC8, sub_2543517E0);
}

unint64_t sub_254269358(uint64_t a1)
{
  return sub_254269378(a1, &qword_269DD7ED0, sub_2543517E0);
}

unint64_t sub_254269378(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)sub_25436D560();
  LOBYTE(v7) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t result = a3(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v6;
  }
  BOOL v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v6[6] + result) = v7;
    *(void *)(v6[7] + 8 * result) = v8;
    uint64_t v12 = v6[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v6[2] = v14;
    if (!--v3) {
      goto LABEL_8;
    }
    char v15 = v11 + 2;
    uint64_t v7 = *((unsigned __int8 *)v11 - 8);
    uint64_t v16 = *v11;
    swift_retain();
    unint64_t result = a3(v7);
    BOOL v11 = v15;
    uint64_t v8 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_25426948C(uint64_t a1)
{
  return sub_2542694AC(a1, &qword_269DD7E48, sub_2543517E0);
}

unint64_t sub_2542694AC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v6 = (void *)sub_25436D560();
    for (double i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v8 = *((unsigned char *)i - 8);
      uint64_t v9 = *i;
      unint64_t result = a3(v8);
      if (v11) {
        break;
      }
      *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v6[6] + result) = v8;
      *(void *)(v6[7] + 8 * result) = v9;
      uint64_t v12 = v6[2];
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13) {
        goto LABEL_10;
      }
      v6[2] = v14;
      if (!--v3) {
        return (unint64_t)v6;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_254269590(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EA0);
  uint64_t v3 = (void *)sub_25436D560();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t result = sub_254351604(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 64;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v9 = v3[7] + 24 * result;
    *(_OWORD *)uint64_t v9 = v16;
    *(void *)(v9 + 16) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 32;
    uint64_t v4 = *(void *)v8;
    long long v16 = *(_OWORD *)(v8 + 8);
    uint64_t v14 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    unint64_t result = sub_254351604(v4);
    uint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2542696C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E98);
    uint64_t v3 = (void *)sub_25436D560();
    for (double i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_254351604(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_2542697A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E30);
    uint64_t v3 = (void *)sub_25436D560();
    for (double i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_254351604(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_254269878(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

uint64_t sub_254269888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[78] = v3;
  v4[77] = a3;
  v4[76] = a2;
  v4[75] = a1;
  uint64_t v5 = sub_25436C7B0();
  v4[79] = v5;
  v4[80] = *(void *)(v5 - 8);
  v4[81] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254269954, 0, 0);
}

uint64_t sub_254269954()
{
  uint64_t v1 = v0[78];
  type metadata accessor for DKLockActor();
  uint64_t v2 = swift_allocObject();
  v0[82] = v2;
  swift_defaultActor_initialize();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 112) = 1;
  *(void *)(v2 + 120) = v3;
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 264) = 0x2D000000500;
  *(unsigned char *)(v1 + 272) = 1;
  *(void *)(v1 + 280) = 0;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[83] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_254269A38;
  return sub_2543026D0();
}

uint64_t sub_254269A38()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254269B50, 0, 0);
}

uint64_t sub_254269B50()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = (void *)v0[78];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[76];
  uint64_t v5 = v0[75];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[80] + 16);
  uint64_t v104 = v0[79];
  v6(v1, v3);
  type metadata accessor for DKIntelligentTrackingInternalState(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_25428B020(v1, v5, v4);
  swift_release();
  swift_release();
  v2[2] = v7;
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v1, v3, v104);
  type metadata accessor for DKIntelligentTrackingState(0);
  swift_allocObject();
  v2[6] = DKIntelligentTrackingState.init(time:)(v1);
  v2[3] = v5;
  type metadata accessor for DKIntelligentTrackingFSM();
  swift_allocObject();
  swift_retain();
  uint64_t v8 = swift_retain();
  v2[4] = sub_2542CA6F4(v8);
  uint64_t v9 = v2[2];
  uint64_t v10 = v2[6];
  type metadata accessor for DKPreprocessTask();
  BOOL v11 = (void *)swift_allocObject();
  *(void *)((char *)v11 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v11[2] = 0x65636F7270657270;
  v11[3] = 0xEA00000000007373;
  v11[4] = v5;
  v11[5] = v9;
  v11[6] = v10;
  v2[7] = v11;
  uint64_t v12 = v2[2];
  uint64_t v13 = v2[6];
  type metadata accessor for DKPrepareInputTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v2[8] = sub_254271BC4(0x4965726170657270, 0xEC0000007475706ELL, v5, v12, v13);
  uint64_t v14 = v2[2];
  uint64_t v15 = v2[6];
  type metadata accessor for DKSubjectGroupingTask();
  long long v16 = (void *)swift_allocObject();
  *(void *)((char *)v16 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKSubjectGroupingTask_handAssociationThreshold) = 0xBFE0000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v16[2] = 0x477463656A627573;
  void v16[3] = 0xEF676E6970756F72;
  v16[4] = v5;
  v16[5] = v14;
  v16[6] = v15;
  v2[10] = v16;
  uint64_t v17 = v2[2];
  uint64_t v18 = v2[6];
  type metadata accessor for DKTrackerTask();
  unint64_t v19 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v19[2] = 0x72656B63617274;
  v19[3] = 0xE700000000000000;
  v19[4] = v5;
  v19[5] = v17;
  v19[6] = v18;
  v2[12] = v19;
  uint64_t v20 = v2[2];
  uint64_t v21 = v2[6];
  type metadata accessor for DKSubjectSelectionTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v2[16] = sub_254332FE8(0xD000000000000010, 0x800000025437A9F0, v5, v20, v21);
  uint64_t v22 = v2[2];
  uint64_t v23 = v2[6];
  type metadata accessor for DKFramingTask();
  uint64_t v24 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v24[2] = 0x676E696D617266;
  v24[3] = 0xE700000000000000;
  void v24[4] = v5;
  v24[5] = v22;
  v24[6] = v23;
  v2[17] = v24;
  uint64_t v25 = v2[2];
  uint64_t v26 = v2[6];
  type metadata accessor for DKControlTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v2[18] = sub_25424BB24(0x6C6F72746E6F63, 0xE700000000000000, v5, v25, v26);
  uint64_t v27 = v2[2];
  uint64_t v28 = v2[6];
  type metadata accessor for DKLoggingTask();
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v30 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKLoggingTask_logRecorder;
  type metadata accessor for DKDataLogRecorder(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)((char *)v29 + v30) = DKDataLogRecorder.init()();
  sub_25436C9E0();
  v29[2] = 0x676E6967676F6CLL;
  v29[3] = 0xE700000000000000;
  v29[4] = v5;
  v29[5] = v27;
  v29[6] = v28;
  v2[19] = v29;
  uint64_t v31 = v2[2];
  uint64_t v32 = v2[6];
  type metadata accessor for DKUpdateStatesTask();
  uint64_t v33 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  strcpy((char *)(v33 + 16), "updateStates");
  *(unsigned char *)(v33 + 29) = 0;
  *(_WORD *)(v33 + 30) = -5120;
  *(void *)(v33 + 32) = v5;
  *(void *)(v33 + 40) = v31;
  *(void *)(v33 + 48) = v32;
  v2[15] = v33;
  uint64_t v34 = v2[2];
  uint64_t v35 = v2[6];
  type metadata accessor for DKCleanupTask();
  double v36 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v36[2] = 0x70756E61656C63;
  v36[3] = 0xE700000000000000;
  v36[4] = v5;
  v36[5] = v34;
  v36[6] = v35;
  v2[20] = v36;
  uint64_t v37 = v2[2];
  uint64_t v38 = v2[6];
  type metadata accessor for DKStartupTask();
  size_t v39 = (void *)swift_allocObject();
  *((unsigned char *)v39 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))((uint64_t)v39 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime, 1, 1, v104);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v39[2] = 0x70757472617473;
  v39[3] = 0xE700000000000000;
  v39[4] = v5;
  v39[5] = v37;
  v39[6] = v38;
  v2[21] = v39;
  uint64_t v40 = v2[2];
  uint64_t v41 = v2[6];
  type metadata accessor for DKReturnToBaseTask();
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  strcpy((char *)(v42 + 16), "returnToBase");
  *(unsigned char *)(v42 + 29) = 0;
  *(_WORD *)(v42 + 30) = -5120;
  *(void *)(v42 + 32) = v5;
  *(void *)(v42 + 40) = v40;
  *(void *)(v42 + 48) = v41;
  v2[22] = v42;
  uint64_t v43 = v2[2];
  uint64_t v44 = v2[6];
  type metadata accessor for DKSearchTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v2[23] = sub_254311478(0x686372616573, 0xE600000000000000, v5, v43, v44);
  uint64_t v45 = v2[2];
  uint64_t v46 = v2[6];
  type metadata accessor for DKFlip180Task();
  char v47 = (void *)swift_allocObject();
  *((unsigned char *)v47 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25436C9E0();
  v47[2] = 0x30383170696C66;
  v47[3] = 0xE700000000000000;
  v47[4] = v5;
  v47[5] = v45;
  v47[6] = v46;
  uint64_t v48 = v108;
  v2[24] = v47;
  uint64_t v49 = (void *)v108[78];
  uint64_t v107 = v2;
  if (*(unsigned char *)(v5 + 89))
  {
    long long v50 = 0;
    v49[9] = 0;
    v49[11] = 0;
    v49[14] = 0;
  }
  else
  {
    uint64_t v51 = v108[75];
    uint64_t v52 = v2[2];
    uint64_t v53 = v2[6];
    type metadata accessor for DKPrintExtractionTask();
    uint64_t v54 = (void *)swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_25436C9E0();
    v54[2] = 0x747845746E697270;
    v54[3] = 0xEF6E6F6974636172;
    v54[4] = v51;
    v54[5] = v52;
    v54[6] = v53;
    v49[9] = v54;
    uint64_t v55 = v2[2];
    uint64_t v56 = v2[6];
    type metadata accessor for DKVisualUnderstandingTask();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    v49[11] = sub_25426ED24(0xD000000000000013, 0x800000025437A9A0, v51, v55, v56);
    uint64_t v57 = v2[2];
    uint64_t v58 = v2[6];
    type metadata accessor for DKBodyPoseExtractionTask();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    v49[14] = sub_254312D00(0x65736F5079646F62, 0xE800000000000000, v51, v57, v58);
    uint64_t v59 = v2[2];
    uint64_t v60 = v2[6];
    type metadata accessor for DKSpeakerDetectionTask();
    long long v50 = (void *)swift_allocObject();
    *(void *)((char *)v50 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_cachedModel) = 0;
    *(void *)((char *)v50 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_timeoutDuration) = 0x4000000000000000;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_25436C9E0();
    v50[2] = 0xD000000000000010;
    v50[3] = 0x800000025437A9C0;
    v50[4] = v51;
    v50[5] = v59;
    uint64_t v48 = v108;
    v50[6] = v60;
  }
  uint64_t v105 = v48[78];
  *(void *)(v105 + 104) = v50;
  uint64_t v109 = MEMORY[0x263F8EE78];
  swift_retain_n();
  uint64_t v61 = swift_retain();
  MEMORY[0x25A275490](v61);
  if (*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  sub_25436CE60();
  sub_25436CDE0();
  uint64_t v62 = swift_retain();
  MEMORY[0x25A275490](v62);
  if (*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  uint64_t v63 = v48[78];
  sub_25436CE60();
  sub_25436CDE0();
  swift_release();
  swift_release();
  *(void *)(v63 + 200) = v109;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EF8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = v2[7];
  uint64_t v110 = inited;
  sub_25436CDE0();
  uint64_t v65 = v110;
  uint64_t v111 = MEMORY[0x263F8EE78];
  if (*(void *)(v65 + 32))
  {
    swift_retain();
    uint64_t v66 = swift_retain();
    MEMORY[0x25A275490](v66);
    if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
    uint64_t v67 = v111;
  }
  else
  {
    swift_retain();
    uint64_t v67 = MEMORY[0x263F8EE78];
  }
  uint64_t v68 = (void *)v48[78];
  swift_bridgeObjectRelease();
  v68[26] = v67;
  uint64_t v69 = swift_initStackObject();
  *(_OWORD *)(v69 + 16) = xmmword_25436FB10;
  *(void *)(v69 + 32) = v107[7];
  *(void *)(v69 + 40) = v107[8];
  *(void *)(v69 + 48) = v107[10];
  *(void *)(v69 + 56) = v68[9];
  *(void *)(v69 + 64) = v68[11];
  *(void *)(v69 + 72) = v107[12];
  *(void *)(v69 + 80) = *(void *)(v105 + 104);
  *(void *)(v69 + 88) = v68[14];
  *(void *)(v69 + 96) = v107[16];
  *(void *)(v69 + 104) = v107[15];
  *(void *)(v69 + 112) = v107[17];
  *(void *)(v69 + 120) = v107[18];
  *(void *)(v69 + 128) = v107[19];
  *(void *)(v69 + 136) = v107[20];
  uint64_t v112 = v69;
  sub_25436CDE0();
  uint64_t v70 = v112;
  uint64_t v113 = MEMORY[0x263F8EE78];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (uint64_t i = 32; i != 144; i += 8)
  {
    if (*(void *)(v70 + i))
    {
      uint64_t v72 = swift_retain();
      MEMORY[0x25A275490](v72);
      if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
    }
  }
  uint64_t v73 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v73 + 216) = v113;
  uint64_t v74 = swift_initStackObject();
  *(_OWORD *)(v74 + 16) = xmmword_25436FB20;
  *(void *)(v74 + 32) = v107[7];
  *(void *)(v74 + 40) = v107[8];
  *(void *)(v74 + 48) = v107[10];
  *(void *)(v74 + 56) = v107[12];
  *(void *)(v74 + 64) = *(void *)(v105 + 104);
  *(void *)(v74 + 72) = v107[16];
  *(void *)(v74 + 80) = v107[15];
  *(void *)(v74 + 88) = v107[17];
  *(void *)(v74 + 96) = v107[18];
  *(void *)(v74 + 104) = v107[19];
  *(void *)(v74 + 112) = v107[20];
  uint64_t v114 = v74;
  sub_25436CDE0();
  uint64_t v75 = v114;
  uint64_t v115 = MEMORY[0x263F8EE78];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (uint64_t j = 32; j != 120; j += 8)
  {
    if (*(void *)(v75 + j))
    {
      uint64_t v77 = swift_retain();
      MEMORY[0x25A275490](v77);
      if (*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
    }
  }
  uint64_t v78 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v78 + 224) = v115;
  uint64_t v79 = swift_initStackObject();
  *(_OWORD *)(v79 + 16) = xmmword_25436FB30;
  *(void *)(v79 + 32) = v107[7];
  *(void *)(v79 + 40) = v107[8];
  *(void *)(v79 + 48) = v107[10];
  *(void *)(v79 + 56) = v107[12];
  *(void *)(v79 + 64) = v107[16];
  *(void *)(v79 + 72) = v107[15];
  *(void *)(v79 + 80) = v107[17];
  *(void *)(v79 + 88) = v107[18];
  *(void *)(v79 + 96) = v107[19];
  *(void *)(v79 + 104) = v107[20];
  uint64_t v116 = v79;
  sub_25436CDE0();
  uint64_t v80 = v116;
  uint64_t v117 = MEMORY[0x263F8EE78];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (uint64_t k = 32; k != 112; k += 8)
  {
    if (*(void *)(v80 + k))
    {
      uint64_t v82 = swift_retain();
      MEMORY[0x25A275490](v82);
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
    }
  }
  uint64_t v83 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v83 + 232) = v117;
  uint64_t v84 = swift_initStackObject();
  *(_OWORD *)(v84 + 16) = xmmword_25436E6A0;
  *(void *)(v84 + 32) = v107[7];
  *(void *)(v84 + 40) = v107[22];
  *(void *)(v84 + 48) = v107[19];
  uint64_t v118 = (void *)v84;
  sub_25436CDE0();
  unint64_t v85 = v118;
  uint64_t v119 = MEMORY[0x263F8EE78];
  if (!v85[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v85[5]) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v86 = swift_retain();
  MEMORY[0x25A275490](v86);
  if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  sub_25436CE60();
  sub_25436CDE0();
  if (v85[5])
  {
LABEL_37:
    uint64_t v87 = swift_retain();
    MEMORY[0x25A275490](v87);
    if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
LABEL_40:
  if (v85[6])
  {
    uint64_t v88 = swift_retain();
    MEMORY[0x25A275490](v88);
    if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
  uint64_t v89 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v89 + 240) = v119;
  uint64_t v90 = swift_initStackObject();
  *(_OWORD *)(v90 + 16) = xmmword_25436E6A0;
  *(void *)(v90 + 32) = v107[7];
  *(void *)(v90 + 40) = v107[23];
  *(void *)(v90 + 48) = v107[19];
  char v120 = (void *)v90;
  sub_25436CDE0();
  unint64_t v91 = v120;
  uint64_t v121 = MEMORY[0x263F8EE78];
  if (!v91[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v91[5]) {
      goto LABEL_53;
    }
    goto LABEL_50;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v92 = swift_retain();
  MEMORY[0x25A275490](v92);
  if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  sub_25436CE60();
  sub_25436CDE0();
  if (v91[5])
  {
LABEL_50:
    uint64_t v93 = swift_retain();
    MEMORY[0x25A275490](v93);
    if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
LABEL_53:
  if (v91[6])
  {
    uint64_t v94 = swift_retain();
    MEMORY[0x25A275490](v94);
    if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
  uint64_t v95 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v95 + 248) = v121;
  uint64_t v96 = swift_initStackObject();
  *(_OWORD *)(v96 + 16) = xmmword_25436E6A0;
  *(void *)(v96 + 32) = v107[7];
  *(void *)(v96 + 40) = v107[24];
  *(void *)(v96 + 48) = v107[19];
  long long v122 = (void *)v96;
  sub_25436CDE0();
  unint64_t v97 = v122;
  uint64_t v123 = MEMORY[0x263F8EE78];
  if (!v97[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v97[5]) {
      goto LABEL_66;
    }
    goto LABEL_63;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v98 = swift_retain();
  MEMORY[0x25A275490](v98);
  if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_25436CE10();
  }
  sub_25436CE60();
  sub_25436CDE0();
  if (v97[5])
  {
LABEL_63:
    uint64_t v99 = swift_retain();
    MEMORY[0x25A275490](v99);
    if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
LABEL_66:
  if (v97[6])
  {
    uint64_t v100 = swift_retain();
    MEMORY[0x25A275490](v100);
    if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
  uint64_t v101 = v108[78];
  swift_bridgeObjectRelease();
  *(void *)(v101 + 256) = v123;
  uint64_t v102 = *(void *)(v101 + 40);
  v108[84] = v102;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426B1FC, v102, 0);
}

uint64_t sub_25426B1FC()
{
  sub_2543038D4();
  swift_release();
  return MEMORY[0x270FA2498](sub_25426B26C, 0, 0);
}

uint64_t sub_25426B26C()
{
  (*(void (**)(void, void))(v0[80] + 8))(v0[77], v0[79]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[78];
  return v1(v2);
}

uint64_t sub_25426B2F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25426B304(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_25426B318(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25426B318(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25426B32C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t result = sub_25436D530();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x25A275A00](0, a1);
    uint64_t v4 = v5;
LABEL_6:
    char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 232))(v5);
    swift_release();
    if (v6)
    {
      uint64_t v2 = 1;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = v2 - 1;
      while (1)
      {
        uint64_t v2 = v8 != v7;
        if (v8 == v7) {
          break;
        }
        unint64_t v9 = v7 + 1;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x25A275A00](v7 + 1, a1);
          if (__OFADD__(v9, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          if (v9 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_19;
          }
          uint64_t v10 = *(void *)(a1 + 8 * v7 + 40);
          swift_retain();
          if (__OFADD__(v9, 1))
          {
LABEL_18:
            __break(1u);
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        char v11 = (*(uint64_t (**)(void))(*(void *)v10 + 232))();
        swift_release();
        ++v7;
        if (v11) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_17;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_25426B4D0()
{
  unint64_t result = qword_269DD7DA8;
  if (!qword_269DD7DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7DA8);
  }
  return result;
}

uint64_t sub_25426B524@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 48);
  return swift_retain();
}

uint64_t sub_25426B534(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 48) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKIntelligentTrackingSession()
{
  return self;
}

uint64_t method lookup function for DKIntelligentTrackingSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKIntelligentTrackingSession);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.__allocating_init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 480) + **(int **)(v3 + 480));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_25426C7E8;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.getState()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 488) + **(int **)(*(void *)v0 + 488));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426C7E8;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.lockState()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 496) + **(int **)(*(void *)v0 + 496));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426C7EC;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.unlockState()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 504) + **(int **)(*(void *)v0 + 504));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426BA30;
  return v4();
}

uint64_t sub_25426BA30()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setSignal(signal:)(uint64_t a1)
{
  char v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 512) + **(int **)(*(void *)v1 + 512));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7EC;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setFlipDirection(clockwise:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.update(input:)(uint64_t a1)
{
  char v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 528) + **(int **)(*(void *)v1 + 528));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7EC;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.clearInput()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.clear()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 544) + **(int **)(*(void *)v0 + 544));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426C7EC;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.selectSubject(request:)(uint64_t a1)
{
  char v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 552) + **(int **)(*(void *)v1 + 552));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7EC;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setAspectRatio(aspectRatio:imageSize:)(double a1, double a2, double a3, double a4)
{
  long long v16 = (uint64_t (*)(__n128, __n128, __n128, __n128))(*(void *)(*(void *)v4 + 560)
                                                               + **(int **)(*(void *)v4 + 560));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25426BA30;
  v11.n128_f64[0] = a1;
  v12.n128_f64[0] = a2;
  v13.n128_f64[0] = a3;
  v14.n128_f64[0] = a4;
  return v16(v11, v12, v13, v14);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setFramingMode(mode:horizontalFraming:verticalFraming:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 568)
                                                          + **(int **)(*(void *)v3 + 568));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_25426C7EC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setROI(roi:)(double a1, double a2, double a3, double a4)
{
  long long v16 = (uint64_t (*)(__n128, __n128, __n128, __n128))(*(void *)(*(void *)v4 + 576)
                                                               + **(int **)(*(void *)v4 + 576));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25426C7EC;
  v11.n128_f64[0] = a1;
  v12.n128_f64[0] = a2;
  v13.n128_f64[0] = a3;
  v14.n128_f64[0] = a4;
  return v16(v11, v12, v13, v14);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.track(time:)(uint64_t a1)
{
  char v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 584) + **(int **)(*(void *)v1 + 584));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C424;
  return v6(a1);
}

uint64_t sub_25426C424(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.dumpLogs()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.reset(time:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 600) + **(int **)(*(void *)v1 + 600));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7EC;
  return v6(a1);
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingSession.Signal()
{
  return &type metadata for DKIntelligentTrackingSession.Signal;
}

_OWORD *sub_25426C668(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25426C678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25426C6DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25426C738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25426C79C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25426C7F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - v5;
  uint64_t v8 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery);
  if (!v9)
  {
    uint64_t v27 = v6;
    uint64_t v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v25((char *)&v21 - v5, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger, v2);
    __n128 v11 = sub_25436C9D0();
    os_log_type_t v12 = sub_25436D020();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v26 = v10;
    if (v13)
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v3;
      uint64_t v15 = (uint8_t *)v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v2;
      uint64_t v17 = v16;
      uint64_t v29 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v22 = (void (*)(char *, uint64_t))(v15 + 4);
      uint64_t v28 = sub_25431B720(0xD000000000000010, 0x800000025437AD30, &v29);
      sub_25436D180();
      _os_log_impl(&dword_254249000, v11, v12, "%s Initializing VU streaming gallery", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v2 = v24;
      MEMORY[0x25A276B10](v18, -1, -1);
      unint64_t v19 = v15;
      uint64_t v3 = v23;
      MEMORY[0x25A276B10](v19, -1, -1);
    }

    uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v7, v2);
    sub_25436C950();
    swift_allocObject();
    uint64_t v9 = sub_25436C8E0();
    *(void *)(v1 + v8) = v9;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v9;
}

uint64_t sub_25426CCB8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25426CCD8, 0, 0);
}

uint64_t sub_25426CCD8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  v0[3] = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  uint64_t v3 = *(void *)(v1 + v2);
  v0[4] = v3;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426CD5C, v3, 0);
}

uint64_t sub_25426CD5C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 112);
  BOOL v3 = v2 < 1;
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v5(1);
  }
  else
  {
    *(void *)(v1 + 112) = v4;
    swift_release();
    return MEMORY[0x270FA2498](sub_25426CE0C, 0, 0);
  }
}

uint64_t sub_25426CE0C()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  sub_25426CEF8();
  sub_25426EC4C();
  uint64_t v3 = *(void *)(v2 + v1);
  v0[5] = v3;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25426CE8C, v3, 0);
}

uint64_t sub_25426CE8C()
{
  sub_2543038D4();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_25426CEF8()
{
  uint64_t v210 = sub_25436C9F0();
  uint64_t v1 = *(void *)(v210 - 8);
  MEMORY[0x270FA5388](v210);
  uint64_t v3 = (char *)&v185 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_25436C920();
  uint64_t v4 = *(void *)(v237 - 8);
  MEMORY[0x270FA5388](v237);
  uint64_t v6 = (uint64_t *)((char *)&v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v7 - 8);
  v190 = (char *)&v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F50);
  MEMORY[0x270FA5388](v9 - 8);
  v236 = (char *)&v185 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_25436C8D0();
  uint64_t v196 = *(void *)(v239 - 8);
  MEMORY[0x270FA5388](v239);
  v238 = (char *)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  v205 = (char *)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v204 = (char *)&v185 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F48);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v195 = (uint64_t)&v185 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v194 = (uint64_t)&v185 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v203 = (char *)&v185 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v212 = (uint64_t)&v185 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v185 - v25;
  uint64_t v227 = v0;
  uint64_t v27 = sub_25426C7F8();
  uint64_t v28 = v27;
  if (!v27) {
    return v28 != 0;
  }
  uint64_t v217 = v27;
  if (*(void *)(*(void *)(v227 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups)) {
    uint64_t v29 = *(void *)(*(void *)(v227 + 48)
  }
                    + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
  else {
    uint64_t v29 = MEMORY[0x263F8EE78];
  }
  uint64_t v221 = *(void *)(v29 + 16);
  if (!v221)
  {
    swift_bridgeObjectRetain();
LABEL_139:
    uint64_t v28 = v217;
    swift_release();
    swift_bridgeObjectRelease();
    return v28 != 0;
  }
  v200 = v6;
  uint64_t v30 = v227 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext;
  uint64_t v211 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdentityConfidenceMap;
  uint64_t v202 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdentityConfidenceMap;
  uint64_t v189 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount;
  uint64_t v186 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap;
  uint64_t v185 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap;
  uint64_t v188 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount;
  uint64_t v193 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount;
  uint64_t v209 = v227 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v187 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate;
  uint64_t v220 = v29 + 32;
  v233 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v234 = v196 + 16;
  v222 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  v232 = (void (**)(char *, uint64_t))(v196 + 8);
  unsigned int v192 = *MEMORY[0x263F84C98];
  v191 = (void (**)(uint64_t *, void, uint64_t))(v4 + 104);
  v208 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v207 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v32 = 0;
  v231 = 0;
  *(void *)&long long v33 = 136315394;
  long long v199 = v33;
  uint64_t v198 = MEMORY[0x263F8EE58] + 8;
  v206 = v3;
  v216 = v26;
  uint64_t v218 = v29;
  uint64_t v219 = v30;
  while (v32 < *(void *)(v29 + 16))
  {
    uint64_t v34 = (void *)(v220 + 32 * v32);
    uint64_t v35 = v34[1];
    if (v35)
    {
      v225 = *(void (**)(void *@<X8>))(v35
                                                  + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
      int v36 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
    }
    else
    {
      v225 = 0;
      int v36 = 1;
    }
    int v230 = v36;
    uint64_t v37 = (char *)v34[2];
    if (v37)
    {
      uint64_t v223 = *(void *)&v37[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId];
      int v38 = v37[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8];
    }
    else
    {
      uint64_t v223 = 0;
      int v38 = 1;
    }
    int v228 = v38;
    uint64_t v235 = v34[3];
    unint64_t v226 = v32;
    v229 = v37;
    if (!v35 || !*(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint))
    {
      if (!v37) {
        goto LABEL_57;
      }
      if (!*(void *)&v37[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint])
      {
        swift_retain();
LABEL_57:
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      }
    }
    id v39 = objc_allocWithZone(MEMORY[0x263F1EED0]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v40 = objc_msgSend(v39, sel_init);
    if (v35)
    {
      uint64_t v41 = *(void **)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      id v42 = v41;
    }
    else
    {
      uint64_t v41 = 0;
    }
    objc_msgSend(v40, sel_setFaceprint_, v41);

    if (v37)
    {
      uint64_t v43 = *(void **)&v37[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint];
      id v44 = v43;
    }
    else
    {
      uint64_t v43 = 0;
    }
    objc_msgSend(v40, sel_setTorsoprint_, v43);

    if (v35)
    {
      uint64_t v45 = *(void **)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      id v46 = v45;
      if (!v37) {
        goto LABEL_29;
      }
LABEL_28:
      uint64_t v37 = *(char **)&v37[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint];
      char v47 = v37;
      goto LABEL_29;
    }
    uint64_t v45 = 0;
    if (v37) {
      goto LABEL_28;
    }
LABEL_29:
    id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1EED8]), sel_initWithFaceprint_torsoprint_, v45, v37);

    objc_msgSend(v40, sel_setFaceTorsoprint_, v48);
    uint64_t v49 = v212;
    sub_25426F2D4(v30, v212);
    uint64_t v50 = sub_25436C970();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
    uint64_t v214 = v51 + 48;
    v213 = v52;
    unsigned int v53 = v52(v49, 1, v50);
    id v224 = v40;
    uint64_t v215 = v51;
    if (v53 == 1)
    {
      sub_25425042C(v49, &qword_269DD7F48);
      uint64_t v54 = v204;
      sub_25436C7F0();
      uint64_t v55 = sub_25436C800();
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
      v56(v54, 0, 1, v55);
      uint64_t v57 = v205;
      v56(v205, 1, 1, v55);
      uint64_t v58 = (uint64_t)v203;
      uint64_t v59 = v54;
      uint64_t v30 = v219;
      uint64_t v60 = v57;
      id v40 = v224;
      uint64_t v26 = v216;
      MEMORY[0x25A275050](v59, v60);
      uint64_t v61 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56);
      v61(v58, 0, 1, v50);
      sub_25426F33C(v58, v30);
      sub_25426F2D4(v30, (uint64_t)v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v26, v49, v50);
      uint64_t v61 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56);
      v61((uint64_t)v26, 0, 1, v50);
    }
    uint64_t v62 = v231;
    uint64_t v63 = sub_25436C940();
    v231 = v62;
    if (v62)
    {
      sub_25425042C((uint64_t)v26, &qword_269DD7F48);
      goto LABEL_34;
    }
    uint64_t v77 = v63;
    sub_25425042C((uint64_t)v26, &qword_269DD7F48);
    uint64_t v201 = v50;
    if (!v77)
    {
      double v100 = 0.0;
      uint64_t v29 = v218;
      goto LABEL_84;
    }
    uint64_t v78 = v77;
    int64_t v79 = *(void *)(v77 + 16);
    if (v79)
    {
      v197 = v61;
      uint64_t v240 = MEMORY[0x263F8EE78];
      sub_2542E2AB8(0, v79, 0);
      unint64_t v80 = v78 + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80));
      uint64_t v81 = *(void *)(v196 + 72);
      uint64_t v82 = *(void (**)(char *, unint64_t, uint64_t))(v196 + 16);
      while (1)
      {
        v82(v238, v80, v239);
        uint64_t v83 = (uint64_t)v236;
        sub_25436C8B0();
        uint64_t v84 = v237;
        if ((*v233)(v83, 1, v237) == 1) {
          break;
        }
        uint64_t v85 = sub_25436C910();
        char v87 = v86;
        (*v222)(v83, v84);
        if (v87) {
          goto LABEL_44;
        }
LABEL_45:
        uint64_t v88 = v238;
        sub_25436C8C0();
        float v90 = v89;
        (*v232)(v88, v239);
        uint64_t v91 = v240;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2542E2AB8(0, *(void *)(v91 + 16) + 1, 1);
          uint64_t v91 = v240;
        }
        unint64_t v93 = *(void *)(v91 + 16);
        unint64_t v92 = *(void *)(v91 + 24);
        if (v93 >= v92 >> 1)
        {
          sub_2542E2AB8(v92 > 1, v93 + 1, 1);
          uint64_t v91 = v240;
        }
        *(void *)(v91 + 16) = v93 + 1;
        uint64_t v94 = v91 + 16 * v93;
        *(void *)(v94 + 32) = v85;
        *(double *)(v94 + 40) = v90;
        v80 += v81;
        if (!--v79)
        {
          swift_bridgeObjectRelease();
          uint64_t v3 = v206;
          uint64_t v26 = v216;
          uint64_t v30 = v219;
          id v40 = v224;
          uint64_t v61 = v197;
          goto LABEL_76;
        }
      }
      sub_25425042C(v83, &qword_269DD7F50);
LABEL_44:
      uint64_t v85 = -1;
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();
    uint64_t v91 = MEMORY[0x263F8EE78];
LABEL_76:
    uint64_t v101 = v227;
    swift_retain();
    uint64_t v102 = v231;
    uint64_t v103 = sub_25426F3A4(v91, v101);
    v231 = v102;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v29 = v218;
    if (v230)
    {
      if (v228) {
        goto LABEL_78;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v104 = v3;
      uint64_t v105 = v211;
      uint64_t v106 = v30;
      uint64_t v107 = v61;
      uint64_t v108 = v227;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v240 = *(void *)(v108 + v105);
      *(void *)(v108 + v105) = 0x8000000000000000;
      sub_2542523D8(v103, (uint64_t)v225, isUniquelyReferenced_nonNull_native);
      *(void *)(v108 + v105) = v240;
      uint64_t v61 = v107;
      uint64_t v30 = v106;
      uint64_t v3 = v104;
      id v40 = v224;
      swift_bridgeObjectRelease();
      if (v228)
      {
LABEL_78:
        if (!*(void *)(v103 + 16)) {
          goto LABEL_82;
        }
        goto LABEL_79;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v110 = v3;
    uint64_t v111 = v202;
    uint64_t v112 = v30;
    uint64_t v113 = v61;
    uint64_t v114 = v227;
    char v115 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v240 = *(void *)(v114 + v111);
    *(void *)(v114 + v111) = 0x8000000000000000;
    sub_2542523D8(v103, v223, v115);
    *(void *)(v114 + v111) = v240;
    uint64_t v61 = v113;
    uint64_t v30 = v112;
    uint64_t v3 = v110;
    id v40 = v224;
    swift_bridgeObjectRelease();
    if (!*(void *)(v103 + 16))
    {
LABEL_82:
      double v100 = 0.0;
      goto LABEL_83;
    }
LABEL_79:
    double v100 = *(double *)(v103 + 40);
LABEL_83:
    swift_bridgeObjectRelease();
LABEL_84:
    unint64_t v32 = v226;
    if (v100 < *(double *)(*(void *)(v227 + 32) + 112))
    {
      char v116 = v230;
      uint64_t result = sub_25426E848(v225, v230, v223, v228);
      if (result)
      {
        uint64_t v117 = *(void *)(v227 + v189);
        uint64_t v118 = v117 + 1;
        uint64_t v119 = v229;
        if (__OFADD__(v117, 1)) {
          goto LABEL_142;
        }
        *(void *)(v227 + v189) = v118;
        if (v35)
        {
          uint64_t v120 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
          char v121 = *(unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
        }
        else
        {
          uint64_t v120 = 0;
          char v121 = 1;
        }
        uint64_t v130 = v193;
        if (v119)
        {
          v197 = *(void (**)(uint64_t, void, uint64_t, uint64_t))&v119[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId];
          char v131 = v119[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8];
          if ((v121 & 1) == 0) {
            goto LABEL_98;
          }
        }
        else
        {
          v197 = 0;
          char v131 = 1;
          if ((v121 & 1) == 0)
          {
LABEL_98:
            uint64_t v132 = v186;
            v133 = v61;
            uint64_t v134 = v227;
            char v135 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v240 = *(void *)(v134 + v132);
            *(void *)(v134 + v132) = 0x8000000000000000;
            sub_2542522BC(v118, v120, v135);
            *(void *)(v134 + v132) = v240;
            uint64_t v61 = v133;
            swift_bridgeObjectRelease();
            uint64_t v130 = v193;
          }
        }
        if ((v131 & 1) == 0)
        {
          uint64_t v136 = v185;
          uint64_t v137 = v227;
          char v138 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v240 = *(void *)(v137 + v136);
          *(void *)(v137 + v136) = 0x8000000000000000;
          sub_2542522BC(v118, (uint64_t)v197, v138);
          *(void *)(v137 + v136) = v240;
          swift_bridgeObjectRelease();
          uint64_t v130 = v193;
        }
        uint64_t v26 = v216;
        uint64_t v29 = v218;
        uint64_t v139 = v188;
        if ((v230 & 1) == 0)
        {
          unint64_t v140 = sub_254351604((uint64_t)v225);
          uint64_t v130 = v193;
          if (v141)
          {
            unint64_t v142 = v140;
            v197 = v61;
            uint64_t v143 = v227;
            char v144 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v145 = *(void *)(v143 + v139);
            uint64_t v240 = v145;
            *(void *)(v143 + v139) = 0x8000000000000000;
            if ((v144 & 1) == 0)
            {
              sub_25429D020();
              uint64_t v145 = v240;
            }
            sub_2542F9E4C(v142, v145);
            *(void *)(v227 + v139) = v145;
            swift_bridgeObjectRelease();
            uint64_t v130 = v193;
            uint64_t v61 = v197;
          }
        }
        if (v228)
        {
          char v122 = 1;
        }
        else
        {
          uint64_t v146 = v130;
          unint64_t v147 = sub_254351604(v223);
          if (v148)
          {
            unint64_t v149 = v147;
            v197 = v61;
            uint64_t v150 = v227;
            char v151 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v152 = *(void *)(v150 + v146);
            uint64_t v240 = v152;
            *(void *)(v150 + v146) = 0x8000000000000000;
            if ((v151 & 1) == 0)
            {
              sub_25429D020();
              uint64_t v152 = v240;
            }
            sub_2542F9E4C(v149, v152);
            *(void *)(v227 + v146) = v152;
            swift_bridgeObjectRelease();
            char v122 = 0;
            unint64_t v32 = v226;
            char v123 = v230;
            uint64_t v3 = v206;
            uint64_t v61 = v197;
            goto LABEL_117;
          }
          char v122 = 0;
        }
        unint64_t v32 = v226;
      }
      else
      {
        if ((v116 & 1) == 0)
        {
          swift_retain();
          uint64_t v124 = v190;
          sub_25436C6E0();
          uint64_t v125 = sub_25436C7B0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 0, 1, v125);
          uint64_t v126 = (uint64_t)v124;
          uint64_t v29 = v218;
          sub_2542EBC2C(v126, (uint64_t)v225);
          unint64_t v32 = v226;
          swift_release();
        }
        if (v228)
        {
          char v122 = 1;
        }
        else
        {
          swift_retain();
          long long v127 = v190;
          sub_25436C6E0();
          uint64_t v128 = sub_25436C7B0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v127, 0, 1, v128);
          uint64_t v129 = (uint64_t)v127;
          uint64_t v29 = v218;
          sub_2542EBC2C(v129, v223);
          unint64_t v32 = v226;
          swift_release();
          char v122 = 0;
        }
      }
      char v123 = v230;
      uint64_t v3 = v206;
      goto LABEL_117;
    }
    char v122 = v228;
    char v123 = v230;
LABEL_117:
    uint64_t v153 = sub_25426E7B0((uint64_t)v225, v123, v223, v122);
    if (v154)
    {

      goto LABEL_54;
    }
    v155 = v200;
    uint64_t *v200 = v153;
    (*v191)(v155, v192, v237);
    uint64_t v156 = v195;
    sub_25426F2D4(v30, v195);
    uint64_t v157 = v201;
    if (v213(v156, 1, v201) == 1)
    {
      sub_25425042C(v156, &qword_269DD7F48);
      v158 = v204;
      sub_25436C7F0();
      uint64_t v159 = sub_25436C800();
      v160 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56);
      v160(v158, 0, 1, v159);
      v161 = v205;
      v160(v205, 1, 1, v159);
      uint64_t v162 = (uint64_t)v203;
      v163 = v158;
      uint64_t v30 = v219;
      uint64_t v26 = v216;
      MEMORY[0x25A275050](v163, v161);
      v61(v162, 0, 1, v157);
      sub_25426F33C(v162, v30);
      uint64_t v164 = v194;
      sub_25426F2D4(v30, v194);
    }
    else
    {
      uint64_t v164 = v194;
      (*(void (**)(void))(v215 + 32))();
      v61(v164, 0, 1, v157);
    }
    v165 = v200;
    v166 = v231;
    sub_25436C900();
    v231 = v166;
    if (!v166)
    {
      uint64_t result = sub_25425042C(v164, &qword_269DD7F48);
      uint64_t v167 = *(void *)(v227 + v187);
      BOOL v168 = __OFSUB__(v167, 1);
      uint64_t v169 = v167 - 1;
      if (v168) {
        goto LABEL_143;
      }
      *(void *)(v227 + v187) = v169;
      v170 = v200;
      uint64_t v171 = sub_25436C910();
      if ((v172 & 1) == 0)
      {
        uint64_t v173 = v171;
        uint64_t v37 = v229;
        id v174 = v224;
        if (v35)
        {
          uint64_t v175 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
          char v176 = *(unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
          if (v229) {
            goto LABEL_128;
          }
LABEL_136:
          uint64_t v177 = 0;
          char v178 = 1;
          if (v176) {
            goto LABEL_130;
          }
        }
        else
        {
          uint64_t v175 = 0;
          char v176 = 1;
          if (!v229) {
            goto LABEL_136;
          }
LABEL_128:
          uint64_t v177 = *(void *)&v229[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId];
          char v178 = v229[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8];
          if (v176)
          {
LABEL_130:
            if (v178)
            {
            }
            else
            {
              uint64_t v182 = v185;
              uint64_t v183 = v227;
              char v184 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v240 = *(void *)(v183 + v182);
              *(void *)(v183 + v182) = 0x8000000000000000;
              sub_2542522BC(v173, v177, v184);
              uint64_t v37 = v229;
              *(void *)(v183 + v182) = v240;

              swift_bridgeObjectRelease();
            }
            uint64_t v3 = v206;
            uint64_t v29 = v218;
            unint64_t v32 = v226;
            (*v222)((uint64_t)v200, v237);
            uint64_t v26 = v216;
            goto LABEL_58;
          }
        }
        uint64_t v179 = v186;
        uint64_t v180 = v227;
        char v181 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v240 = *(void *)(v180 + v179);
        *(void *)(v180 + v179) = 0x8000000000000000;
        sub_2542522BC(v173, v175, v181);
        uint64_t v37 = v229;
        *(void *)(v180 + v179) = v240;
        swift_bridgeObjectRelease();
        goto LABEL_130;
      }
      (*v222)((uint64_t)v170, v237);

      uint64_t v29 = v218;
      goto LABEL_53;
    }
    sub_25425042C(v164, &qword_269DD7F48);
    (*v222)((uint64_t)v165, v237);
LABEL_34:
    uint64_t v64 = v231;
    v231 = 0;
    uint64_t v65 = v210;
    (*v208)(v3, v209, v210);
    id v66 = v64;
    id v67 = v64;
    uint64_t v68 = sub_25436C9D0();
    os_log_type_t v69 = sub_25436D010();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v240 = v72;
      *(_DWORD *)uint64_t v70 = v199;
      *(void *)(v70 + 4) = sub_25431B720(0x28737365636F7270, 0xE900000000000029, &v240);
      *(_WORD *)(v70 + 12) = 2112;
      id v73 = v64;
      uint64_t v74 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v70 + 14) = v74;
      *uint64_t v71 = v74;

      _os_log_impl(&dword_254249000, v68, v69, "%s Error: Threw VU streaming gallery recognition error=%@", (uint8_t *)v70, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F60);
      swift_arrayDestroy();
      uint64_t v75 = v71;
      uint64_t v26 = v216;
      MEMORY[0x25A276B10](v75, -1, -1);
      swift_arrayDestroy();
      uint64_t v76 = v72;
      uint64_t v3 = v206;
      MEMORY[0x25A276B10](v76, -1, -1);
      MEMORY[0x25A276B10](v70, -1, -1);
    }
    else
    {
    }
    (*v207)(v3, v65);
    uint64_t v29 = v218;
    uint64_t v30 = v219;
LABEL_53:
    unint64_t v32 = v226;
LABEL_54:
    uint64_t v37 = v229;
LABEL_58:
    char v95 = v230;
    if (!v35) {
      char v95 = 1;
    }
    if ((v95 & 1) == 0)
    {
      if (*(void *)(*(void *)(v227 + v211) + 16))
      {
        sub_254351604((uint64_t)v225);
        uint64_t v96 = MEMORY[0x263F8EE78];
        if (v97) {
          uint64_t v96 = swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v96 = MEMORY[0x263F8EE78];
      }
      *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = v96;
      swift_bridgeObjectRelease();
      uint64_t v37 = v229;
    }
    if (v228)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else if (v37)
    {
      if (*(void *)(*(void *)(v227 + v202) + 16))
      {
        sub_254351604(v223);
        uint64_t v98 = MEMORY[0x263F8EE78];
        if (v99) {
          uint64_t v98 = swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v98 = MEMORY[0x263F8EE78];
      }
      *(void *)&v229[OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences] = v98;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v32 = v226;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v32;
    uint64_t result = swift_release();
    if (v32 == v221) {
      goto LABEL_139;
    }
  }
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
  return result;
}

uint64_t sub_25426E7B0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    if (a4) {
      return 0;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap);
  uint64_t v8 = *(void *)(v7 + 16);
  if ((a4 & 1) == 0)
  {
    if (v8)
    {
      unint64_t v9 = sub_254351604(a1);
      if (v10) {
        return *(void *)(*(void *)(v7 + 56) + 8 * v9);
      }
    }
LABEL_7:
    uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap);
    if (!*(void *)(v7 + 16)) {
      return 0;
    }
    a1 = a3;
    goto LABEL_10;
  }
  if (!v8) {
    return 0;
  }
LABEL_10:
  unint64_t v9 = sub_254351604(a1);
  if (v11) {
    return *(void *)(*(void *)(v7 + 56) + 8 * v9);
  }
  return 0;
}

uint64_t sub_25426E848(void (*a1)(void *a1@<X8>), char a2, uint64_t a3, char a4)
{
  uint64_t v8 = v4;
  LOBYTE(v9) = a4;
  if (a2)
  {
    a1 = 0;
    if ((a4 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_33:
    sub_2542509EC((uint64_t)a1);
    return 0;
  }
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v4 + v7);
  uint64_t v46 = *(void *)(v8 + v7);
  *(void *)(v8 + v7) = 0x8000000000000000;
  unint64_t v5 = sub_254351604((uint64_t)a1);
  uint64_t v15 = *(void *)(v13 + 16);
  BOOL v16 = (v14 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_36;
  }
  LOBYTE(v6) = v14;
  if (*(void *)(v13 + 24) < v17)
  {
    sub_25429A1F4(v17, isUniquelyReferenced_nonNull_native);
    uint64_t v13 = v46;
    unint64_t v18 = sub_254351604((uint64_t)a1);
    if ((v6 & 1) == (v19 & 1))
    {
      unint64_t v5 = v18;
      goto LABEL_12;
    }
LABEL_40:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_39;
  }
  while (1)
  {
LABEL_12:
    *(void *)(v8 + v7) = v13;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void **)(v8 + v7);
    swift_bridgeObjectRetain();
    if ((v6 & 1) == 0) {
      sub_25429B428(v5, (uint64_t)a1, 0, v29);
    }
    uint64_t v6 = v29[7];
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v6 + 8 * v5);
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    *(void *)(v6 + 8 * v5) = v32;
    uint64_t v33 = *(void *)(v8 + v7);
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      unint64_t v35 = sub_254351604((uint64_t)a1);
      if (v36) {
        uint64_t v34 = *(void *)(*(void *)(v33 + 56) + 8 * v35);
      }
      else {
        uint64_t v34 = 0;
      }
    }
    if (*(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures) < v34) {
      return 1;
    }
    a1 = sub_25426EB48;
    if (v9) {
      goto LABEL_33;
    }
LABEL_7:
    uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount;
    LOBYTE(v6) = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *(void *)(v8 + v20);
    uint64_t v46 = v21;
    *(void *)(v8 + v20) = 0x8000000000000000;
    unint64_t v9 = sub_254351604(a3);
    uint64_t v23 = *(void *)(v21 + 16);
    BOOL v24 = (v22 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      goto LABEL_37;
    }
    char v26 = v22;
    if (*(void *)(v21 + 24) >= v25)
    {
      if ((v6 & 1) == 0) {
        sub_25429D020();
      }
    }
    else
    {
      sub_25429A1F4(v25, v6);
      unint64_t v27 = sub_254351604(a3);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_40;
      }
      unint64_t v9 = v27;
    }
    *(void *)(v8 + v20) = v21;
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void **)(v8 + v20);
    swift_bridgeObjectRetain();
    if ((v26 & 1) == 0) {
      sub_25429B428(v9, a3, 0, v37);
    }
    unint64_t v5 = v37[7];
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void *)(v5 + 8 * v9);
    BOOL v31 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (!v31) {
      break;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    sub_25429D020();
    uint64_t v13 = v46;
  }
  *(void *)(v5 + 8 * v9) = v39;
  uint64_t v40 = *(void *)(v8 + v20);
  if (*(void *)(v40 + 16) && (unint64_t v41 = sub_254351604(a3), (v42 & 1) != 0)) {
    uint64_t v43 = *(void *)(*(void *)(v40 + 56) + 8 * v41);
  }
  else {
    uint64_t v43 = 0;
  }
  uint64_t v44 = *(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures);
  sub_2542509EC((uint64_t)a1);
  return v44 < v43;
}

void sub_25426EB48(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25426EB50()
{
  uint64_t v1 = v0;
  if (sub_25426C7F8())
  {
    sub_25436C930();
    swift_release();
  }
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount) = sub_2542697A0(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount) = sub_2542697A0(v2);
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap) = sub_2542697A0(v2);
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap) = sub_2542697A0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) = 100;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount) = 0;
  return result;
}

uint64_t sub_25426EC4C()
{
  uint64_t result = sub_25426C7F8();
  if (!result) {
    return result;
  }
  if (sub_25426C7F8())
  {
    uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate;
    if ((*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) & 0x8000000000000000) != 0)
    {
      swift_release();
    }
    else
    {
      uint64_t v3 = sub_25436C8F0();
      swift_release();
      if (v3 <= 1000) {
        goto LABEL_5;
      }
    }
    sub_25436C8A0();
    uint64_t result = swift_release();
    *(void *)(v0 + v2) = 100;
    return result;
  }
LABEL_5:
  return swift_release();
}

void *sub_25426ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery) = 0;
  char v11 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext;
  uint64_t v12 = sub_25436C970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = MEMORY[0x263F8EE80];
  *(void *)((char *)v5
            + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount) = MEMORY[0x263F8EE80];
  *(void *)((char *)v5
            + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount) = v13;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap) = v13;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap) = v13;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) = 100;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount) = 0;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures) = 10;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_minRecogntionSuccess) = 5;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_frameCount) = 0;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuMaxObservations) = 100;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuMaxIdentities) = 10;
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  type metadata accessor for DKLockActor();
  uint64_t v15 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  uint64_t v16 = MEMORY[0x263F8EE78];
  *(void *)(v15 + 112) = 1;
  *(void *)(v15 + 120) = v16;
  *(void *)((char *)v5 + v14) = v15;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdentityConfidenceMap) = v13;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdentityConfidenceMap) = v13;
  swift_release();
  sub_25436C9E0();
  long long v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_25426EF20()
{
  swift_release();
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext, &qword_269DD7F48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25426EFD8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext, &qword_269DD7F48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25426F0F8()
{
  sub_25426EFD8();
  return swift_deallocClassInstance();
}

uint64_t sub_25426F150()
{
  return type metadata accessor for DKVisualUnderstandingTask();
}

uint64_t type metadata accessor for DKVisualUnderstandingTask()
{
  uint64_t result = qword_269DD7F28;
  if (!qword_269DD7F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25426F1A4()
{
  sub_25426F27C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_25426F27C()
{
  if (!qword_269DD7F40)
  {
    sub_25436C970();
    unint64_t v0 = sub_25436D130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DD7F40);
    }
  }
}

uint64_t sub_25426F2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25426F33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25426F3A4(uint64_t result, uint64_t a2)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 40;
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v3 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = v3;
  }
  uint64_t v8 = (double *)(v5 + 16 * v3);
  unint64_t v9 = v7 + 1;
  while (1)
  {
    if (v4 == v3) {
      return v6;
    }
    if (v9 == ++v3) {
      break;
    }
    char v10 = v8 + 2;
    double v11 = *v8;
    BOOL v12 = *(double *)(*(void *)(a2 + 32) + 112) < *v8;
    v8 += 2;
    if (v12)
    {
      uint64_t v13 = *(v10 - 3);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_2542E2AB8(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1) {
        uint64_t result = sub_2542E2AB8(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(double *)(v16 + 40) = v11;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25426F4CC()
{
  v1[89] = v0;
  uint64_t v2 = sub_25436C800();
  v1[90] = v2;
  v1[91] = *(void *)(v2 - 8);
  v1[92] = swift_task_alloc();
  uint64_t v3 = sub_25436C9C0();
  v1[93] = v3;
  v1[94] = *(void *)(v3 - 8);
  v1[95] = swift_task_alloc();
  uint64_t v4 = sub_25436C610();
  v1[96] = v4;
  v1[97] = *(void *)(v4 - 8);
  v1[98] = swift_task_alloc();
  v1[99] = swift_task_alloc();
  v1[100] = swift_task_alloc();
  v1[101] = swift_task_alloc();
  v1[102] = swift_task_alloc();
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  v1[105] = swift_task_alloc();
  uint64_t v5 = sub_25436C7B0();
  v1[106] = v5;
  v1[107] = *(void *)(v5 - 8);
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DKCamera();
  v1[110] = v6;
  v1[111] = *(void *)(v6 - 8);
  v1[112] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25426F7C8, 0, 0);
}

uint64_t sub_25426F7C8()
{
  v353 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[114];
  uint64_t v3 = v0[111];
  uint64_t v4 = v1[110];
  uint64_t v5 = v1[89];
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
  uint64_t v7 = *(void *)(v5 + 48);
  uint64_t v8 = v6;
  swift_retain();
  swift_retain();
  sub_25428C38C(v2);
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v2, 0, 1, v4);
  sub_25427208C(v2, v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera);
  swift_release();
  if (v6)
  {
    uint64_t v9 = v1[113];
    uint64_t v10 = v1[111];
    uint64_t v11 = v1[110];
    uint64_t v12 = *(void *)(v5 + 48);
    sub_2542720F4(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v9);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11);
    uint64_t v14 = v1[113];
    if (v13 == 1)
    {

      sub_25425042C(v14, &qword_269DD7808);
      goto LABEL_190;
    }
    sub_2542502F0(v1[113], v1[112]);
    unint64_t v15 = *(void **)&v8[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image];
    uint64_t v16 = *(void **)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
    *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = v15;
    v273 = v8;
    id v17 = v15;

    uint64_t v348 = MEMORY[0x263F8EE78];
    uint64_t v349 = MEMORY[0x263F8EE78];
    uint64_t v350 = MEMORY[0x263F8EE78];
    unint64_t v18 = *(void **)(*(void *)(v5 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
    v318 = v1;
    uint64_t v319 = v5;
    uint64_t v19 = v5;
    if (v18)
    {
      uint64_t v20 = v1[89];
      if (*(unsigned char *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveImageToFile) == 1)
      {
        uint64_t v21 = v1[109];
        uint64_t v22 = v1[108];
        uint64_t v23 = v1[107];
        uint64_t v24 = v1[106];
        uint64_t v25 = &v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
        char v26 = v1;
        unint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 16);
        v27(v21, &v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], v24);
        char v28 = (char *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime);
        v27(v22, v28, v24);
        id v29 = v18;
        sub_25436C700();
        double v31 = v30;
        uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v32(v22, v24);
        v32(v21, v24);
        if (v31 <= 1.0)
        {

          uint64_t v1 = v26;
          uint64_t v19 = v319;
        }
        else
        {
          v346 = v25;
          uint64_t v33 = v26[105];
          uint64_t v34 = v26[104];
          uint64_t v35 = v26[97];
          uint64_t v36 = v26[96];
          uint64_t v37 = v26[95];
          uint64_t v38 = v26[94];
          uint64_t v39 = v26[93];
          sub_25436C5A0();
          sub_25436C9A0();
          sub_25436C5C0();
          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v36);
          _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0((__CVBuffer *)v29, v33);
          uint64_t v41 = v40;
          sub_25425042C(v33, &qword_269DD7A28);
          if (v41)
          {
            char v351 = 6;
            strcpy((char *)v352, "Saved image ");
            BYTE5(v352[1]) = 0;
            HIWORD(v352[1]) = -5120;
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            os_log_type_t v42 = sub_25436D000();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v351, v352[0], v352[1], v42);

            swift_bridgeObjectRelease();
          }
          else
          {
          }
          uint64_t v1 = v318;
          uint64_t v19 = v319;
          (*(void (**)(char *, char *, void))(v318[107] + 24))(v28, v346, v318[106]);
        }
      }
    }
    uint64_t v307 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
    uint64_t v43 = *(void *)&v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations];
    v352[0] = MEMORY[0x263F8EE78];
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      uint64_t v45 = (uint64_t)(v1 + 37);
      uint64_t v46 = v1 + 82;
      uint64_t v47 = v43 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_25427215C(v47, v45);
        sub_25427215C(v45, (uint64_t)(v1 + 32));
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
        type metadata accessor for DKFaceObservation(0);
        if ((swift_dynamicCast() & 1) == 0) {
          *uint64_t v46 = 0;
        }
        uint64_t v48 = __swift_destroy_boxed_opaque_existential_1(v45);
        if (*v46)
        {
          MEMORY[0x25A275490](v48);
          if (*(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
        }
        v47 += 40;
        --v44;
      }
      while (v44);
      unint64_t v49 = v352[0];
      uint64_t v1 = v318;
      uint64_t v19 = v319;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v49 = MEMORY[0x263F8EE78];
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v49 >> 62) {
      goto LABEL_111;
    }
    uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (2)
    {
      v347 = v1 + 51;
      if (v51)
      {
        if (v51 >= 1)
        {
          uint64_t v52 = 0;
          uint64_t v53 = (uint64_t)(v1 + 42);
          uint64_t v54 = v1 + 57;
          v314 = &v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
          uint64_t v310 = v1[89] + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime;
          uint64_t v55 = v1[107];
          unint64_t v56 = v49 & 0xC000000000000001;
          v303 = (void (**)(uint64_t, char *, uint64_t))(v55 + 16);
          v299 = (void (**)(uint64_t, uint64_t))(v55 + 8);
          v286 = (void (**)(uint64_t, uint64_t))(v1[94] + 8);
          uint64_t v342 = v1[112];
          uint64_t v328 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveFaceCropToFile;
          uint64_t v332 = v1[89];
          uint64_t v57 = v1[97];
          v291 = (void (**)(uint64_t, uint64_t))(v57 + 8);
          v295 = v1 + 57;
          v274 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56);
          v278 = (void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
          v282 = (void (**)(uint64_t, char *, void))(v55 + 24);
          uint64_t v320 = v51;
          unint64_t v324 = v49;
          v336 = v1 + 42;
          unint64_t v339 = v49 & 0xC000000000000001;
          while (1)
          {
            if (v56)
            {
              uint64_t v59 = MEMORY[0x25A275A00](v52, v49);
            }
            else
            {
              uint64_t v59 = *(void *)(v49 + 8 * v52 + 32);
              swift_retain();
            }
            uint64_t v60 = (unsigned char *)v1[112];
            uint64_t v61 = (_OWORD *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
            CGFloat v62 = *(double *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
            CGFloat v63 = *(double *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
            CGFloat v64 = *(double *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
            CGFloat v65 = *(double *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
            char v351 = *(unsigned char *)(v342 + 1);
            LOBYTE(v352[0]) = *v60;
            sub_25425DBE0(&v351, (unsigned __int8 *)v352, v53, v62, v63, v64, v65);
            sub_2542721C0(v53, (uint64_t)v54);
            if (v347[80] != 1) {
              break;
            }
LABEL_33:
            ++v52;
            swift_release();
            if (v51 == v52) {
              goto LABEL_56;
            }
          }
          long long v66 = v54[1];
          _OWORD *v61 = *v54;
          v61[1] = v66;
          id v67 = *(void **)(*(void *)(v19 + 48)
                         + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
          if (v67)
          {
            type metadata accessor for DKImageCrop();
            unint64_t v49 = swift_allocObject();
            *(void *)(v49 + 16) = 0;
            id v68 = v67;
            *(void *)(v49 + 56) = sub_2542645A4(MEMORY[0x263F8EE78]);
            os_log_type_t v69 = *(void **)(v49 + 16);
            *(void *)(v49 + 16) = v67;
            uint64_t v70 = (__CVBuffer *)v68;

            size_t Width = CVPixelBufferGetWidth(v70);
            size_t Height = CVPixelBufferGetHeight(v70);
            v355.origin.CGFloat x = v62;
            v355.origin.CGFloat y = v63;
            v355.size.double width = v64;
            v355.size.double height = v65;
            CGRect v356 = VNImageRectForNormalizedRect(v355, Width, Height);
            CGFloat x = v356.origin.x;
            CGFloat y = v356.origin.y;
            CGFloat v75 = v356.size.width;
            CGFloat v76 = v356.size.height;

            *(CGFloat *)(v49 + 24) = x;
            *(CGFloat *)(v49 + 32) = y;
            *(CGFloat *)(v49 + 40) = v75;
            *(CGFloat *)(v49 + 48) = v76;
            *(void *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = v49;
            swift_retain();
            swift_release();
            if (*(unsigned char *)(v332 + v328) == 1)
            {
              uint64_t v77 = v1[109];
              uint64_t v78 = v1[108];
              uint64_t v79 = v1[106];
              unint64_t v80 = *v303;
              (*v303)(v77, v314, v79);
              v80(v78, (char *)v310, v79);
              sub_25436C700();
              double v82 = v81;
              uint64_t v83 = *v299;
              (*v299)(v78, v79);
              v83(v77, v79);
              if (v82 <= 1.0)
              {

                swift_release();
                uint64_t v19 = v319;
                uint64_t v51 = v320;
                unint64_t v49 = v324;
                uint64_t v53 = (uint64_t)v336;
                uint64_t v54 = v295;
              }
              else
              {
                uint64_t v84 = v1[102];
                uint64_t v85 = v1[96];
                uint64_t v19 = v1[95];
                uint64_t v86 = v1[93];
                sub_25436C5A0();
                v352[0] = 1701011814;
                v352[1] = 0xE400000000000000;
                if (*(unsigned char *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8)) {
                  uint64_t v87 = 0;
                }
                else {
                  uint64_t v87 = *(void *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
                }
                v1[88] = v87;
                sub_25436D760();
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                sub_25436CCB0();
                uint64_t v1 = (void *)v352[1];
                sub_25436C9A0();
                sub_25436C5C0();
                swift_bridgeObjectRelease();
                (*v286)(v19, v86);
                uint64_t v88 = *v291;
                (*v291)(v84, v85);
                CGFloat v89 = *(double *)(v49 + 24);
                CGFloat v90 = *(double *)(v49 + 32);
                CGFloat v91 = *(double *)(v49 + 40);
                CGFloat v92 = *(double *)(v49 + 48);
                v357.origin.CGFloat x = v89;
                v357.origin.CGFloat y = v90;
                v357.size.double width = v91;
                v357.size.double height = v92;
                double v93 = CGRectGetWidth(v357);
                if ((~*(void *)&v93 & 0x7FF0000000000000) == 0)
                {
                  __break(1u);
LABEL_100:
                  __break(1u);
LABEL_101:
                  __break(1u);
LABEL_102:
                  __break(1u);
LABEL_103:
                  __break(1u);
LABEL_104:
                  __break(1u);
LABEL_105:
                  __break(1u);
LABEL_106:
                  __break(1u);
LABEL_107:
                  __break(1u);
LABEL_108:
                  __break(1u);
LABEL_109:
                  __break(1u);
LABEL_110:
                  __break(1u);
LABEL_111:
                  swift_bridgeObjectRetain();
                  uint64_t v51 = sub_25436D530();
                  uint64_t result = swift_bridgeObjectRelease();
                  continue;
                }
                if (v93 <= -9.22337204e18) {
                  goto LABEL_100;
                }
                uint64_t v19 = 0x43E0000000000000;
                if (v93 >= 9.22337204e18) {
                  goto LABEL_101;
                }
                v358.origin.CGFloat x = v89;
                v358.origin.CGFloat y = v90;
                v358.size.double width = v91;
                v358.size.double height = v92;
                double v94 = CGRectGetHeight(v358);
                if ((~*(void *)&v94 & 0x7FF0000000000000) == 0) {
                  goto LABEL_102;
                }
                if (v94 <= -9.22337204e18) {
                  goto LABEL_103;
                }
                if (v94 >= 9.22337204e18) {
                  goto LABEL_104;
                }
                char v95 = sub_25430D15C((__CVBuffer *)(uint64_t)v93, (uint64_t)v94);
                uint64_t v96 = v318[105];
                uint64_t v97 = v318[103];
                uint64_t v98 = v318[96];
                (*v278)(v96, v97, v98);
                (*v274)(v96, 0, 1, v98);
                _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v95, v96);
                uint64_t v100 = v99;

                sub_25425042C(v96, &qword_269DD7A28);
                v88(v97, v98);
                uint64_t v101 = v100;
                uint64_t v54 = v295;
                if (v101)
                {
                  char v351 = 6;
                  v352[0] = 0;
                  v352[1] = 0xE000000000000000;
                  sub_25436D290();
                  swift_bridgeObjectRelease();
                  v352[0] = 0xD000000000000010;
                  v352[1] = 0x800000025437AEC0;
                  sub_25436CCB0();
                  swift_bridgeObjectRelease();
                  uint64_t v102 = v352[0];
                  unint64_t v103 = v352[1];
                  os_log_type_t v104 = sub_25436D000();
                  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v351, v102, v103, v104);

                  swift_release();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_release();
                }
                uint64_t v1 = v318;
                uint64_t v19 = v319;
                uint64_t v53 = (uint64_t)v336;
                (*v282)(v310, v314, v318[106]);
                uint64_t v51 = v320;
                unint64_t v49 = v324;
              }
              goto LABEL_30;
            }

            swift_release();
            uint64_t v51 = v320;
            unint64_t v49 = v324;
          }
          uint64_t v53 = (uint64_t)v336;
LABEL_30:
          uint64_t v58 = swift_retain();
          MEMORY[0x25A275490](v58);
          if (*(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          unint64_t v56 = v339;
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_194;
      }
      break;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    uint64_t v105 = *(void *)&v273[v307];
    v352[0] = MEMORY[0x263F8EE78];
    uint64_t v106 = *(void *)(v105 + 16);
    if (v106)
    {
      uint64_t v107 = (uint64_t)(v1 + 2);
      uint64_t v108 = v1 + 85;
      uint64_t v109 = v105 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_25427215C(v109, v107);
        sub_25427215C(v107, (uint64_t)(v1 + 27));
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
        type metadata accessor for DKBodyObservation(0);
        if ((swift_dynamicCast() & 1) == 0) {
          *uint64_t v108 = 0;
        }
        uint64_t v110 = __swift_destroy_boxed_opaque_existential_1(v107);
        if (*v108)
        {
          MEMORY[0x25A275490](v110);
          if (*(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
        }
        v109 += 40;
        --v106;
      }
      while (v106);
      unint64_t v111 = v352[0];
      uint64_t v1 = v318;
      uint64_t v19 = v319;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v111 = MEMORY[0x263F8EE78];
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_25436D530();
      uint64_t result = swift_bridgeObjectRelease();
      if (v112) {
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v112)
      {
LABEL_69:
        if (v112 < 1)
        {
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
          goto LABEL_196;
        }
        uint64_t v113 = 0;
        uint64_t v114 = (uint64_t)(v1 + 52);
        char v115 = v1 + 62;
        v315 = &v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
        uint64_t v333 = v1[89];
        v311 = (char *)(v333 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime);
        uint64_t v116 = v1[107];
        unint64_t v117 = v111 & 0xC000000000000001;
        v300 = (void (**)(uint64_t, uint64_t))(v116 + 8);
        v304 = (void (**)(uint64_t, char *, uint64_t))(v116 + 16);
        uint64_t v118 = v1[97];
        v287 = (void (**)(uint64_t, uint64_t))(v1[94] + 8);
        v292 = (void (**)(uint64_t, uint64_t))(v118 + 8);
        v275 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56);
        v279 = (void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16);
        unint64_t v340 = v111 & 0xC000000000000001;
        uint64_t v343 = v1[112];
        unint64_t v325 = v111;
        uint64_t v329 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveBodyCropToFile;
        v283 = (void (**)(uint64_t, char *, void))(v116 + 24);
        uint64_t v321 = v112;
        v337 = v1 + 52;
        v296 = v1 + 62;
        while (1)
        {
          if (v117)
          {
            uint64_t v120 = MEMORY[0x25A275A00](v113, v111);
          }
          else
          {
            uint64_t v120 = *(void *)(v111 + 8 * v113 + 32);
            swift_retain();
          }
          char v121 = (unsigned char *)v1[112];
          char v122 = (_OWORD *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
          CGFloat v123 = *(double *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
          CGFloat v124 = *(double *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
          CGFloat v125 = *(double *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
          CGFloat v126 = *(double *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
          char v351 = *(unsigned char *)(v343 + 1);
          LOBYTE(v352[0]) = *v121;
          sub_25425DBE0(&v351, (unsigned __int8 *)v352, v114, v123, v124, v125, v126);
          sub_2542721C0(v114, (uint64_t)v115);
          if (v347[120] != 1) {
            break;
          }
LABEL_76:
          ++v113;
          swift_release();
          if (v112 == v113) {
            goto LABEL_113;
          }
        }
        long long v127 = v115[1];
        _OWORD *v122 = *v115;
        v122[1] = v127;
        uint64_t v128 = *(void **)(*(void *)(v19 + 48)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
        if (v128)
        {
          type metadata accessor for DKImageCrop();
          unint64_t v49 = swift_allocObject();
          *(void *)(v49 + 16) = 0;
          id v129 = v128;
          *(void *)(v49 + 56) = sub_2542645A4(MEMORY[0x263F8EE78]);
          uint64_t v130 = *(void **)(v49 + 16);
          *(void *)(v49 + 16) = v128;
          char v131 = (__CVBuffer *)v129;

          size_t v132 = CVPixelBufferGetWidth(v131);
          size_t v133 = CVPixelBufferGetHeight(v131);
          v359.origin.CGFloat x = v123;
          v359.origin.CGFloat y = v124;
          v359.size.double width = v125;
          v359.size.double height = v126;
          CGRect v360 = VNImageRectForNormalizedRect(v359, v132, v133);
          CGFloat v134 = v360.origin.x;
          CGFloat v135 = v360.origin.y;
          CGFloat v136 = v360.size.width;
          CGFloat v137 = v360.size.height;

          *(CGFloat *)(v49 + 24) = v134;
          *(CGFloat *)(v49 + 32) = v135;
          *(CGFloat *)(v49 + 40) = v136;
          *(CGFloat *)(v49 + 48) = v137;
          *(void *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = v49;
          swift_retain();
          swift_release();
          if (*(unsigned char *)(v333 + v329) == 1)
          {
            uint64_t v138 = v1[109];
            uint64_t v139 = v1[108];
            uint64_t v140 = v1[106];
            char v141 = *v304;
            (*v304)(v138, v315, v140);
            v141(v139, v311, v140);
            sub_25436C700();
            double v143 = v142;
            char v144 = *v300;
            (*v300)(v139, v140);
            v144(v138, v140);
            if (v143 <= 1.0)
            {

              swift_release();
              uint64_t v19 = v319;
              uint64_t v112 = v321;
              unint64_t v111 = v325;
              uint64_t v114 = (uint64_t)v337;
              char v115 = v296;
            }
            else
            {
              uint64_t v145 = v1[100];
              uint64_t v146 = v1[96];
              uint64_t v19 = v1[95];
              uint64_t v147 = v1[93];
              sub_25436C5A0();
              v352[0] = 2036625250;
              v352[1] = 0xE400000000000000;
              if (*(unsigned char *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8)) {
                uint64_t v148 = 0;
              }
              else {
                uint64_t v148 = *(void *)(v120 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
              }
              v1[87] = v148;
              sub_25436D760();
              sub_25436CCB0();
              swift_bridgeObjectRelease();
              sub_25436CCB0();
              uint64_t v1 = (void *)v352[1];
              sub_25436C9A0();
              sub_25436C5C0();
              swift_bridgeObjectRelease();
              (*v287)(v19, v147);
              unint64_t v149 = *v292;
              (*v292)(v145, v146);
              CGFloat v150 = *(double *)(v49 + 24);
              CGFloat v151 = *(double *)(v49 + 32);
              CGFloat v152 = *(double *)(v49 + 40);
              CGFloat v153 = *(double *)(v49 + 48);
              v361.origin.CGFloat x = v150;
              v361.origin.CGFloat y = v151;
              v361.size.double width = v152;
              v361.size.double height = v153;
              double v154 = CGRectGetWidth(v361);
              if ((~*(void *)&v154 & 0x7FF0000000000000) == 0) {
                goto LABEL_105;
              }
              if (v154 <= -9.22337204e18) {
                goto LABEL_106;
              }
              if (v154 >= 9.22337204e18) {
                goto LABEL_107;
              }
              v362.origin.CGFloat x = v150;
              v362.origin.CGFloat y = v151;
              v362.size.double width = v152;
              v362.size.double height = v153;
              double v155 = CGRectGetHeight(v362);
              if ((~*(void *)&v155 & 0x7FF0000000000000) == 0) {
                goto LABEL_108;
              }
              if (v155 <= -9.22337204e18) {
                goto LABEL_109;
              }
              if (v155 >= 9.22337204e18) {
                goto LABEL_110;
              }
              uint64_t v156 = sub_25430D15C((__CVBuffer *)(uint64_t)v154, (uint64_t)v155);
              uint64_t v157 = v318[105];
              uint64_t v158 = v318[101];
              uint64_t v159 = v318[96];
              (*v279)(v157, v158, v159);
              (*v275)(v157, 0, 1, v159);
              _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v156, v157);
              uint64_t v161 = v160;

              sub_25425042C(v157, &qword_269DD7A28);
              v149(v158, v159);
              uint64_t v162 = v161;
              char v115 = v296;
              if (v162)
              {
                char v351 = 6;
                v352[0] = 0;
                v352[1] = 0xE000000000000000;
                sub_25436D290();
                swift_bridgeObjectRelease();
                v352[0] = 0xD000000000000010;
                v352[1] = 0x800000025437AEA0;
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                uint64_t v163 = v352[0];
                unint64_t v164 = v352[1];
                os_log_type_t v165 = sub_25436D000();
                _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v351, v163, v164, v165);

                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();
              }
              uint64_t v1 = v318;
              uint64_t v19 = v319;
              uint64_t v114 = (uint64_t)v337;
              (*v283)((uint64_t)v311, v315, v318[106]);
              uint64_t v112 = v321;
              unint64_t v111 = v325;
            }
            goto LABEL_73;
          }

          swift_release();
          uint64_t v112 = v321;
          unint64_t v111 = v325;
        }
        uint64_t v114 = (uint64_t)v337;
LABEL_73:
        uint64_t v119 = swift_retain();
        MEMORY[0x25A275490](v119);
        if (*(void *)((v349 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v349 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
        unint64_t v117 = v340;
        goto LABEL_76;
      }
    }
LABEL_113:
    swift_bridgeObjectRelease();
    uint64_t v166 = *(void *)&v273[v307];
    v352[0] = MEMORY[0x263F8EE78];
    uint64_t v167 = *(void *)(v166 + 16);
    if (v167)
    {
      uint64_t v168 = (uint64_t)(v1 + 22);
      uint64_t v169 = v1 + 83;
      uint64_t v170 = v166 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_25427215C(v170, v168);
        sub_25427215C(v168, (uint64_t)(v1 + 17));
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
        type metadata accessor for DKHandObservation(0);
        if ((swift_dynamicCast() & 1) == 0) {
          *uint64_t v169 = 0;
        }
        uint64_t v171 = __swift_destroy_boxed_opaque_existential_1(v168);
        if (*v169)
        {
          MEMORY[0x25A275490](v171);
          if (*(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
        }
        v170 += 40;
        --v167;
      }
      while (v167);
      unint64_t v172 = v352[0];
      uint64_t v19 = v319;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v172 = MEMORY[0x263F8EE78];
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v172 >> 62) {
      goto LABEL_162;
    }
    uint64_t v173 = *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v174 = v318;
    if (v173)
    {
      while (2)
      {
        if (v173 < 1) {
          goto LABEL_195;
        }
        uint64_t v175 = 0;
        uint64_t v176 = (uint64_t)(v174 + 67);
        uint64_t v177 = v174 + 77;
        v316 = &v273[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
        uint64_t v334 = v174[89];
        v312 = (char *)(v334 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime);
        uint64_t v178 = v174[107];
        unint64_t v179 = v172 & 0xC000000000000001;
        v301 = (void (**)(uint64_t, uint64_t))(v178 + 8);
        v305 = (void (**)(uint64_t, char *, uint64_t))(v178 + 16);
        uint64_t v180 = v174[97];
        v288 = (void (**)(uint64_t, uint64_t))(v174[94] + 8);
        v293 = (void (**)(uint64_t, uint64_t))(v180 + 8);
        v276 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v180 + 56);
        v280 = (void (**)(uint64_t, uint64_t, uint64_t))(v180 + 16);
        unint64_t v341 = v172 & 0xC000000000000001;
        uint64_t v344 = v174[112];
        unint64_t v326 = v172;
        uint64_t v330 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveHandCropToFile;
        v284 = (void (**)(uint64_t, char *, void))(v178 + 24);
        uint64_t v322 = v173;
        v338 = v174 + 67;
        v297 = v174 + 77;
        while (1)
        {
          if (v179)
          {
            uint64_t v182 = MEMORY[0x25A275A00](v175, v172);
          }
          else
          {
            uint64_t v182 = *(void *)(v172 + 8 * v175 + 32);
            swift_retain();
          }
          uint64_t v183 = (unsigned char *)v174[112];
          char v184 = (_OWORD *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
          CGFloat v185 = *(double *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
          CGFloat v186 = *(double *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 8);
          CGFloat v187 = *(double *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
          CGFloat v188 = *(double *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 24);
          char v351 = *(unsigned char *)(v344 + 1);
          LOBYTE(v352[0]) = *v183;
          sub_25425DBE0(&v351, (unsigned __int8 *)v352, v176, v185, v186, v187, v188);
          sub_2542721C0(v176, (uint64_t)v177);
          if (v347[240] != 1) {
            break;
          }
LABEL_133:
          ++v175;
          swift_release();
          if (v173 == v175) {
            goto LABEL_163;
          }
        }
        long long v189 = v177[1];
        *char v184 = *v177;
        v184[1] = v189;
        v190 = *(void **)(*(void *)(v19 + 48)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
        if (v190)
        {
          type metadata accessor for DKImageCrop();
          unint64_t v172 = swift_allocObject();
          *(void *)(v172 + 16) = 0;
          id v191 = v190;
          *(void *)(v172 + 56) = sub_2542645A4(MEMORY[0x263F8EE78]);
          unsigned int v192 = *(void **)(v172 + 16);
          *(void *)(v172 + 16) = v190;
          uint64_t v193 = (__CVBuffer *)v191;

          size_t v194 = CVPixelBufferGetWidth(v193);
          size_t v195 = CVPixelBufferGetHeight(v193);
          v363.origin.CGFloat x = v185;
          v363.origin.CGFloat y = v186;
          v363.size.double width = v187;
          v363.size.double height = v188;
          CGRect v364 = VNImageRectForNormalizedRect(v363, v194, v195);
          CGFloat v196 = v364.origin.x;
          CGFloat v197 = v364.origin.y;
          CGFloat v198 = v364.size.width;
          CGFloat v199 = v364.size.height;

          *(CGFloat *)(v172 + 24) = v196;
          *(CGFloat *)(v172 + 32) = v197;
          *(CGFloat *)(v172 + 40) = v198;
          *(CGFloat *)(v172 + 48) = v199;
          *(void *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = v172;
          swift_retain();
          swift_release();
          if (*(unsigned char *)(v334 + v330) == 1)
          {
            uint64_t v200 = v174[109];
            uint64_t v201 = v174[108];
            uint64_t v202 = v174[106];
            v203 = *v305;
            (*v305)(v200, v316, v202);
            v203(v201, v312, v202);
            sub_25436C700();
            double v205 = v204;
            v206 = *v301;
            (*v301)(v201, v202);
            v206(v200, v202);
            if (v205 <= 1.0)
            {

              swift_release();
              uint64_t v19 = v319;
              uint64_t v173 = v322;
              unint64_t v172 = v326;
              uint64_t v176 = (uint64_t)v338;
              uint64_t v177 = v297;
            }
            else
            {
              uint64_t v207 = v174[98];
              uint64_t v208 = v174[96];
              uint64_t v19 = v174[95];
              uint64_t v209 = v174[93];
              sub_25436C5A0();
              v352[0] = 1684955496;
              v352[1] = 0xE400000000000000;
              if (*(unsigned char *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8)) {
                uint64_t v210 = 0;
              }
              else {
                uint64_t v210 = *(void *)(v182 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
              }
              v174[86] = v210;
              sub_25436D760();
              sub_25436CCB0();
              swift_bridgeObjectRelease();
              sub_25436CCB0();
              sub_25436C9A0();
              sub_25436C5C0();
              swift_bridgeObjectRelease();
              (*v288)(v19, v209);
              uint64_t v211 = *v293;
              (*v293)(v207, v208);
              CGFloat v212 = *(double *)(v172 + 24);
              CGFloat v213 = *(double *)(v172 + 32);
              CGFloat v214 = *(double *)(v172 + 40);
              CGFloat v215 = *(double *)(v172 + 48);
              v365.origin.CGFloat x = v212;
              v365.origin.CGFloat y = v213;
              v365.size.double width = v214;
              v365.size.double height = v215;
              double v216 = CGRectGetWidth(v365);
              if ((~*(void *)&v216 & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                swift_bridgeObjectRetain();
                uint64_t v173 = sub_25436D530();
                uint64_t result = swift_bridgeObjectRelease();
                id v174 = v318;
                if (!v173) {
                  goto LABEL_163;
                }
                continue;
              }
              if (v216 <= -9.22337204e18) {
                goto LABEL_157;
              }
              if (v216 >= 9.22337204e18) {
                goto LABEL_158;
              }
              v366.origin.CGFloat x = v212;
              v366.origin.CGFloat y = v213;
              v366.size.double width = v214;
              v366.size.double height = v215;
              double v217 = CGRectGetHeight(v366);
              if ((~*(void *)&v217 & 0x7FF0000000000000) == 0) {
                goto LABEL_159;
              }
              if (v217 <= -9.22337204e18) {
                goto LABEL_160;
              }
              if (v217 >= 9.22337204e18) {
                goto LABEL_161;
              }
              uint64_t v218 = sub_25430D15C((__CVBuffer *)(uint64_t)v216, (uint64_t)v217);
              uint64_t v219 = v318[105];
              uint64_t v220 = v318[99];
              uint64_t v221 = v318[96];
              (*v280)(v219, v220, v221);
              (*v276)(v219, 0, 1, v221);
              _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v218, v219);
              uint64_t v223 = v222;

              sub_25425042C(v219, &qword_269DD7A28);
              v211(v220, v221);
              uint64_t v224 = v223;
              uint64_t v177 = v297;
              if (v224)
              {
                char v351 = 6;
                v352[0] = 0;
                v352[1] = 0xE000000000000000;
                sub_25436D290();
                swift_bridgeObjectRelease();
                v352[0] = 0xD000000000000010;
                v352[1] = 0x800000025437AE80;
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                uint64_t v225 = v352[0];
                unint64_t v226 = v352[1];
                os_log_type_t v227 = sub_25436D000();
                _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v351, v225, v226, v227);

                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();
              }
              id v174 = v318;
              uint64_t v19 = v319;
              uint64_t v176 = (uint64_t)v338;
              (*v284)((uint64_t)v312, v316, v318[106]);
              uint64_t v173 = v322;
              unint64_t v172 = v326;
            }
            goto LABEL_130;
          }

          swift_release();
          uint64_t v173 = v322;
          unint64_t v172 = v326;
        }
        break;
      }
      uint64_t v176 = (uint64_t)v338;
LABEL_130:
      uint64_t v181 = swift_retain();
      MEMORY[0x25A275490](v181);
      if (*(void *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
      unint64_t v179 = v341;
      goto LABEL_133;
    }
LABEL_163:
    swift_bridgeObjectRelease();
    uint64_t v228 = *(void *)&v273[v307];
    v352[0] = MEMORY[0x263F8EE78];
    uint64_t v229 = *(void *)(v228 + 16);
    if (v229)
    {
      uint64_t v230 = (uint64_t)(v174 + 12);
      v231 = v174 + 84;
      uint64_t v232 = v228 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_25427215C(v232, v230);
        sub_25427215C(v230, (uint64_t)(v174 + 7));
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
        type metadata accessor for DKObjectObservation(0);
        if ((swift_dynamicCast() & 1) == 0) {
          void *v231 = 0;
        }
        uint64_t v233 = __swift_destroy_boxed_opaque_existential_1(v230);
        if (*v231)
        {
          MEMORY[0x25A275490](v233);
          if (*(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v352[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
        }
        v232 += 40;
        --v229;
      }
      while (v229);
      unint64_t v234 = v352[0];
      uint64_t v19 = v319;
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v234 = MEMORY[0x263F8EE78];
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v234 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v235 = sub_25436D530();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v1 = v318;
      if (!v235) {
        goto LABEL_189;
      }
    }
    else
    {
      uint64_t v235 = *(void *)((v234 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v1 = v318;
      if (!v235) {
        goto LABEL_189;
      }
    }
    if (v235 < 1)
    {
LABEL_196:
      __break(1u);
      return result;
    }
    uint64_t v236 = 0;
    uint64_t v237 = (char *)v1[112];
    uint64_t v302 = (uint64_t)(v1 + 72);
    uint64_t v306 = v235;
    v317 = v1 + 47;
    char v298 = v237[1];
    char v294 = *v237;
    uint64_t v238 = v1[107];
    uint64_t v239 = v1[91];
    v289 = (void (**)(uint64_t, uint64_t, uint64_t))(v238 + 16);
    unint64_t v290 = v234 & 0xC000000000000001;
    v281 = (void (**)(uint64_t, uint64_t, uint64_t))(v238 + 32);
    v285 = (void (**)(uint64_t, uint64_t, uint64_t))(v239 + 16);
    v277 = (void (**)(uint64_t, uint64_t, uint64_t))(v239 + 32);
    unint64_t v308 = v234;
    do
    {
      uint64_t v345 = v236;
      if (v290)
      {
        uint64_t v241 = MEMORY[0x25A275A00](v236, v234);
      }
      else
      {
        uint64_t v241 = *(void *)(v234 + 8 * v236 + 32);
        swift_retain();
      }
      uint64_t v242 = v1[109];
      uint64_t v243 = v1[106];
      uint64_t v244 = v1[92];
      uint64_t v245 = v1[90];
      uint64_t v327 = v245;
      (*v289)(v242, v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, v243);
      (*v285)(v244, v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v245);
      CGFloat v246 = *(double *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
      CGFloat v247 = *(double *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 8);
      CGFloat v248 = *(double *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 16);
      CGFloat v249 = *(double *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 24);
      uint64_t v335 = *(void *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
      char v331 = *(unsigned char *)(v241 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId + 8);
      type metadata accessor for DKFaceObservation(0);
      uint64_t v250 = swift_allocObject();
      uint64_t v251 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
      uint64_t v252 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      uint64_t v253 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
      uint64_t v254 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
      uint64_t v255 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
      uint64_t v256 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
      uint64_t v323 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal;
      uint64_t v313 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
      *(unsigned char *)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
      uint64_t v309 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop;
      *(void *)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      *(void *)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      uint64_t v257 = v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
      *(void *)uint64_t v257 = 0;
      *(unsigned char *)(v257 + 8) = 1;
      (*v281)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v242, v243);
      (*v277)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v244, v327);
      v258 = (CGFloat *)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
      CGFloat *v258 = v246;
      v258[1] = v247;
      v258[2] = v248;
      v258[3] = v249;
      *(void *)(v250 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = MEMORY[0x263F8EE78];
      *(void *)uint64_t v251 = v335;
      *(unsigned char *)(v251 + 8) = v331;
      *(void *)uint64_t v252 = 0;
      *(unsigned char *)(v252 + 8) = 1;
      *(void *)uint64_t v253 = 0;
      *(unsigned char *)(v253 + 8) = 1;
      *(void *)uint64_t v254 = 0;
      *(unsigned char *)(v254 + 8) = 1;
      *(void *)uint64_t v255 = 0;
      *(unsigned char *)(v255 + 8) = 1;
      *(void *)uint64_t v256 = 0x3FF0000000000000;
      *(unsigned char *)(v256 + 8) = 0;
      *(unsigned char *)(v250 + v323) = 2;
      char v351 = v298;
      LOBYTE(v352[0]) = v294;
      sub_25425DBE0(&v351, (unsigned __int8 *)v352, v302, v246, v247, v248, v249);
      sub_2542721C0(v302, (uint64_t)v317);
      uint64_t v19 = v319;
      if (*v347 != 1)
      {
        long long v259 = v317[1];
        *(_OWORD *)v258 = *v317;
        *((_OWORD *)v258 + 1) = v259;
        v260 = *(void **)(*(void *)(v319 + 48)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
        if (v260)
        {
          type metadata accessor for DKImageCrop();
          v261 = (CGFloat *)swift_allocObject();
          v261[2] = 0.0;
          id v262 = v260;
          *((void *)v261 + 7) = sub_2542645A4(MEMORY[0x263F8EE78]);
          v263 = (void *)*((void *)v261 + 2);
          *((void *)v261 + 2) = v260;
          v264 = (__CVBuffer *)v262;

          size_t v265 = CVPixelBufferGetWidth(v264);
          size_t v266 = CVPixelBufferGetHeight(v264);
          v367.origin.CGFloat x = v246;
          v367.origin.CGFloat y = v247;
          v367.size.double width = v248;
          v367.size.double height = v249;
          CGRect v368 = VNImageRectForNormalizedRect(v367, v265, v266);
          CGFloat v267 = v368.origin.x;
          CGFloat v268 = v368.origin.y;
          CGFloat v269 = v368.size.width;
          CGFloat v270 = v368.size.height;

          v261[3] = v267;
          v261[4] = v268;
          v261[5] = v269;
          v261[6] = v270;
          *(void *)(v250 + v309) = v261;

          swift_release();
        }
        *(unsigned char *)(v250 + v313) = 1;
        uint64_t v240 = swift_retain();
        MEMORY[0x25A275490](v240);
        if (*(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
      }
      uint64_t v236 = v345 + 1;
      swift_release();
      swift_release();
      unint64_t v234 = v308;
      uint64_t v1 = v318;
    }
    while (v306 != v345 + 1);
LABEL_189:
    uint64_t v271 = v1[112];
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = v348;
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = v349;
    swift_bridgeObjectRelease();
    *(void *)(*(void *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = v350;

    swift_bridgeObjectRelease();
    sub_254250354(v271);
  }
LABEL_190:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v272 = (uint64_t (*)(uint64_t))v1[1];
  return v272(1);
}

void *sub_254271BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveFaceCropToFile) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveBodyCropToFile) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveHandCropToFile) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveImageToFile) = 0;
  swift_retain();
  sub_25436C6E0();
  sub_25436C6E0();
  sub_25436C6E0();
  sub_25436C6E0();
  swift_release();
  sub_25436C9E0();
  long long v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_254271CF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v5)((void *)(v2 - 8), v1, v2);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime, v2);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime;
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t sub_254271DEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime, v4);
  return v0;
}

uint64_t sub_254271F30()
{
  sub_254271DEC();
  return swift_deallocClassInstance();
}

uint64_t sub_254271F88()
{
  return type metadata accessor for DKPrepareInputTask();
}

uint64_t type metadata accessor for DKPrepareInputTask()
{
  uint64_t result = qword_269DD7F68;
  if (!qword_269DD7F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254271FDC()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25427208C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542720F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25427215C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2542721C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254272228(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_25436CFA0();
  if (!v20) {
    return sub_25436CE30();
  }
  uint64_t v21 = v20;
  unint64_t v27 = v15;
  uint64_t v43 = sub_25436CA90();
  uint64_t v35 = sub_25436D3F0();
  sub_25436D390();
  uint64_t v41 = v19;
  uint64_t result = sub_25436CF90();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_25436CFC0();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_25436D3D0();
      sub_25436CFB0();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t DKBinaryProbabilityFilter.__allocating_init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  char v14 = a2 & 1;
  char v15 = a4 & 1;
  uint64_t v16 = swift_allocObject();
  DKBinaryProbabilityFilter.init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(a1, v14, a3, v15, a5, a6, a7, a8);
  return v16;
}

uint64_t DKBinaryProbabilityFilter.init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  uint64_t v9 = v8;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v21 = (char *)&v26 - v20;
  *(unsigned char *)(v9 + 49) = 0;
  double v22 = *(double *)&a1;
  if (a2) {
    double v22 = 0.5;
  }
  *(double *)(v9 + 24) = v22;
  uint64_t v23 = *(void *)&v22;
  sub_254272818(a5, (uint64_t)&v26 - v20);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  uint64_t v24 = sub_25435D778(v23, 0, *(uint64_t *)&a7, 0, 0, (uint64_t)v21, 0, 1, a6, 0, 1);
  sub_254258BD8(a5);
  *(void *)(v9 + 16) = v24;
  *(double *)(v9 + 32) = a8;
  *(void *)(v9 + 40) = a3;
  *(unsigned char *)(v9 + 48) = a4 & 1;
  return v9;
}

uint64_t sub_254272818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254272880(uint64_t a1, char a2, uint64_t a3, char a4, double a5)
{
  if (a2)
  {
    swift_retain();
    double v7 = a5;
    uint64_t v8 = 0x3FF0000000000000;
    char v9 = 0;
  }
  else
  {
    swift_retain();
    double v7 = a5;
    uint64_t v8 = a3;
    char v9 = (a4 & 1) != 0;
  }
  sub_25435D340(v8, v9, a1, v7);
  return swift_release();
}

uint64_t sub_25427291C@<X0>(uint64_t a1@<X8>)
{
  return sub_254272818(*(void *)(v1 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, a1);
}

double sub_254272938()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v1 + 33) != 1) {
    return *(double *)(v0 + 24);
  }
  if (*(unsigned char *)(v1 + 32) == 1) {
    return atan2(*(long double *)(v1 + 48), *(long double *)(v1 + 56));
  }
  return *(double *)(v1 + 40);
}

uint64_t sub_25427296C()
{
  *(unsigned char *)(v0 + 49) = 0;
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 33) = 0;
  uint64_t v2 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  swift_retain();
  sub_254258BD8(v2);
  uint64_t v3 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return swift_release();
}

uint64_t sub_254272A08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v1 + 33) == 1)
  {
    if (*(unsigned char *)(v1 + 32) == 1) {
      double v2 = atan2(*(long double *)(v1 + 48), *(long double *)(v1 + 56));
    }
    else {
      double v2 = *(double *)(v1 + 40);
    }
  }
  else
  {
    double v2 = *(double *)(v0 + 24);
  }
  double v3 = *(double *)(v0 + 32);
  if (*(unsigned char *)(v0 + 48))
  {
    if (v3 >= v2)
    {
LABEL_12:
      char v4 = 0;
      *(unsigned char *)(v0 + 49) = 0;
      goto LABEL_14;
    }
  }
  else if (v3 >= v2)
  {
    if (v2 >= *(double *)(v0 + 40))
    {
      char v4 = *(unsigned char *)(v0 + 49);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  char v4 = 1;
  *(unsigned char *)(v0 + 49) = 1;
LABEL_14:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F80);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v4;
  *(double *)(result + 24) = v2;
  return result;
}

uint64_t DKBinaryProbabilityFilter.deinit()
{
  swift_release();
  return v0;
}

uint64_t DKBinaryProbabilityFilter.__deallocating_deinit()
{
  return sub_254277314(MEMORY[0x263F8EED8]);
}

double sub_254272B04()
{
  return *(double *)(v0 + 32);
}

double sub_254272B0C()
{
  return *(double *)(v0 + 40);
}

uint64_t DKMultivariateProbabilityFilter.__allocating_init(variableNames:alpha:beta:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  DKMultivariateProbabilityFilter.init(variableNames:alpha:beta:)(a1, a2, a3);
  return v6;
}

uint64_t DKMultivariateProbabilityFilter.init(variableNames:alpha:beta:)(uint64_t a1, double a2, double a3)
{
  char v4 = v3;
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v49 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v8 + 80);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v50 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v48 = (char *)&v38 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = type metadata accessor for DKSmoothingFilter();
  swift_getTupleTypeMetadata2();
  sub_25436CE30();
  uint64_t v46 = *(void *)(v8 + 104);
  uint64_t v47 = v19;
  *((void *)v4 + 2) = sub_25436CAC0();
  v4[3] = 0.5;
  v4[4] = a2;
  v4[5] = a3;
  uint64_t v45 = v4 + 2;
  uint64_t v20 = MEMORY[0x25A275560](a1, v12);
  if (v20 >= 1)
  {
    uint64_t v21 = v20;
    if (MEMORY[0x25A275580](a1, v12))
    {
      uint64_t v38 = v13;
      uint64_t v39 = v4;
      uint64_t v22 = 0;
      double v23 = 1.0 / (double)v21;
      uint64_t v52 = (void (**)(char *, uint64_t *, uint64_t))(v50 + 16);
      uint64_t v41 = (void (**)(char *, uint64_t))(v50 + 8);
      os_log_type_t v42 = (void (**)(char *, char *, uint64_t))(v50 + 32);
      long long v40 = xmmword_25436FDF0;
      uint64_t v43 = v18;
      uint64_t v44 = v12;
      uint64_t v24 = v48;
      while (1)
      {
        char v25 = sub_25436CE50();
        sub_25436CE00();
        if (v25)
        {
          uint64_t v26 = *(void (**)(char *, uint64_t *, uint64_t))(v50 + 16);
          v26(v18, (uint64_t *)(a1+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v22), v12);
          uint64_t v27 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t result = sub_25436D300();
          if (v38 != 8)
          {
            __break(1u);
            return result;
          }
          uint64_t v54 = result;
          uint64_t v26 = *v52;
          (*v52)(v18, &v54, v12);
          swift_unknownObjectRelease();
          uint64_t v27 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
LABEL_11:
            __break(1u);
            break;
          }
        }
        uint64_t v51 = v27;
        (*v42)(v24, v18, v12);
        v26(v53, (uint64_t *)v24, v12);
        uint64_t v28 = sub_25436C7B0();
        uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
        uint64_t v30 = v49;
        v29(v49, 1, 1, v28);
        uint64_t v31 = a1;
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 48) = v40;
        uint64_t v33 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
        v29((char *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v28);
        char v4 = (double *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold);
        *char v4 = 0.0;
        *((unsigned char *)v4 + 8) = 1;
        uint64_t v34 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
        *(void *)uint64_t v34 = 0;
        *(unsigned char *)(v34 + 8) = 1;
        *(unsigned char *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
        *(double *)(v32 + 16) = a2;
        *(double *)(v32 + 24) = a3;
        *(_WORD *)(v32 + 32) = 256;
        *(double *)(v32 + 40) = v23;
        uint64_t v35 = (uint64_t)v30;
        uint64_t v12 = v44;
        sub_254277464(v35, v33);
        *char v4 = 0.0;
        *((unsigned char *)v4 + 8) = 1;
        *(void *)uint64_t v34 = 0;
        *(unsigned char *)(v34 + 8) = 1;
        uint64_t v54 = v32;
        a1 = v31;
        uint64_t v18 = v43;
        sub_25436CAE0();
        sub_25436CB00();
        (*v41)(v24, v12);
        uint64_t v36 = MEMORY[0x25A275580](a1, v12);
        ++v22;
        if (v51 == v36)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v39;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t sub_254273064()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v52 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  CGFloat v63 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v49 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = sub_25436D130();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  unint64_t v14 = v0[2];
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = sub_25436D4B0();
    unint64_t v50 = 0;
    uint64_t v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = v15 | 0x8000000000000000;
  }
  else
  {
    uint64_t v19 = -1 << *(unsigned char *)(v14 + 32);
    uint64_t v16 = ~v19;
    uint64_t v20 = *(void *)(v14 + 64);
    unint64_t v50 = v14 + 64;
    uint64_t v21 = -v19;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v17 = v22 & v20;
    unint64_t v18 = v14;
  }
  uint64_t v53 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  CGFloat v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v49 = v16;
  int64_t v58 = (unint64_t)(v16 + 64) >> 6;
  uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v62 = v1 - 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v59 = 0;
  long long v57 = xmmword_25436E690;
  uint64_t v51 = MEMORY[0x263F8EE50] + 8;
  unint64_t v60 = v18;
  uint64_t v55 = v8;
  unint64_t v56 = v13;
  uint64_t v54 = TupleTypeMetadata2;
  while ((v18 & 0x8000000000000000) != 0)
  {
    if (!sub_25436D4C0()) {
      goto LABEL_35;
    }
    uint64_t v26 = v25;
    uint64_t v65 = v17;
    sub_25436D790();
    swift_unknownObjectRelease();
    uint64_t v27 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v66 = v26;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v28 = v67;
    swift_unknownObjectRelease();
    *(void *)&v13[v27] = v28;
    (*v64)(v13, 0, 1, TupleTypeMetadata2);
    uint64_t v29 = *(void *)(v1 - 8);
LABEL_28:
    uint64_t v34 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v35 = *(void *)&v13[v34];
    uint64_t v36 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v10, v13, v1);
    *(void *)&v10[v34] = v35;
    uint64_t v37 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    v38(v8, v10, v1);
    *(void *)&v8[v37] = v35;
    swift_retain();
    uint64_t v39 = MEMORY[0x263F8D6C8];
    if (swift_dynamicCast())
    {
      uint64_t v40 = v67;
      __swift_instantiateConcreteTypeFromMangledName(qword_269DD7F88);
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = v39;
      uint64_t v43 = (long double *)v41;
      *(_OWORD *)(v41 + 16) = v57;
      *(void *)(v41 + 56) = v42;
      *(void *)(v41 + 64) = MEMORY[0x263F8D750];
      *(void *)(v41 + 32) = v40;
      uint64_t v44 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v45 = v63;
      v38(v63, v10, v1);
      *(void *)&v45[v44] = v35;
      if (*(unsigned char *)(v35 + 33) == 1)
      {
        if (*(unsigned char *)(v35 + 32))
        {
          long double v46 = *(double *)(v35 + 48);
          long double v47 = *(double *)(v35 + 56);
          swift_release();
          long double v48 = atan2(v46, v47);
        }
        else
        {
          long double v48 = *(double *)(v35 + 40);
          swift_release();
        }
      }
      else
      {
        swift_release();
        long double v48 = 0.0;
      }
      uint64_t v8 = v55;
      uint64_t v13 = v56;
      TupleTypeMetadata2 = v54;
      unint64_t v18 = v60;
      unint64_t v17 = v65;
      *((void *)v43 + 12) = MEMORY[0x263F8D538];
      *((void *)v43 + 13) = MEMORY[0x263F8D5B8];
      v43[9] = v48;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v63, v1);
      sub_25436CC30();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      unint64_t v18 = v60;
      unint64_t v17 = v65;
    }
    uint64_t result = (*v61)(v10, TupleTypeMetadata2);
  }
  if (v17)
  {
    uint64_t v65 = (v17 - 1) & v17;
    unint64_t v24 = __clz(__rbit64(v17)) | (v59 << 6);
LABEL_27:
    uint64_t v29 = *(void *)(v1 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v13, *(void *)(v18 + 48) + *(void *)(v29 + 72) * v24, v1);
    *(void *)&v13[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v18 + 56) + 8 * v24);
    (*v64)(v13, 0, 1, TupleTypeMetadata2);
    swift_retain();
    goto LABEL_28;
  }
  int64_t v30 = v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v30 >= v58) {
    goto LABEL_35;
  }
  unint64_t v31 = *(void *)(v50 + 8 * v30);
  int64_t v32 = v59 + 1;
  if (v31) {
    goto LABEL_26;
  }
  int64_t v32 = v59 + 2;
  if (v59 + 2 >= v58) {
    goto LABEL_35;
  }
  unint64_t v31 = *(void *)(v50 + 8 * v32);
  if (v31)
  {
LABEL_26:
    uint64_t v65 = (v31 - 1) & v31;
    unint64_t v24 = __clz(__rbit64(v31)) + (v32 << 6);
    int64_t v59 = v32;
    goto LABEL_27;
  }
  int64_t v33 = v59 + 3;
  if (v59 + 3 >= v58)
  {
LABEL_35:
    (*v64)(v13, 1, 1, TupleTypeMetadata2);
    sub_2542774CC();
    return v68;
  }
  unint64_t v31 = *(void *)(v50 + 8 * v33);
  if (v31)
  {
    int64_t v32 = v59 + 3;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v58) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v50 + 8 * v32);
    ++v33;
    if (v31) {
      goto LABEL_26;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_254273724()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = sub_25436D130();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v24 - v4;
  uint64_t v6 = v0[2];
  uint64_t v7 = type metadata accessor for DKSmoothingFilter();
  uint64_t v28 = v0;
  uint64_t v8 = *(void *)(v1 + 104);
  if ((v6 & 0xC000000000000001) != 0)
  {
    unint64_t v9 = sub_25436D4B0() | 0x8000000000000000;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D480();
    unint64_t v9 = v29[1];
    uint64_t v11 = v29[3];
    uint64_t v26 = v29[2];
    uint64_t v27 = v29[4];
    unint64_t v12 = v29[5];
  }
  v24[1] = v11;
  int64_t v25 = (unint64_t)(v11 + 64) >> 6;
  while ((v9 & 0x8000000000000000) != 0)
  {
    if (!sub_25436D4D0()) {
      goto LABEL_29;
    }
    sub_25436D790();
    swift_unknownObjectRelease();
    uint64_t v15 = *(void *)(v2 - 8);
LABEL_27:
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v5, 0, 1, v2);
    uint64_t v20 = v28[2];
    swift_bridgeObjectRetain();
    MEMORY[0x25A2751E0](v29, v5, v20, v2, v7, v8);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v2);
    uint64_t v21 = v29[0];
    if (v29[0])
    {
      *(unsigned char *)(v29[0] + 33) = 0;
      uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      sub_254258BD8(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
      uint64_t v23 = sub_25436C7B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
      uint64_t result = swift_release();
    }
  }
  if (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v27 << 6);
LABEL_26:
    uint64_t v15 = *(void *)(v2 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v5, *(void *)(v9 + 48) + *(void *)(v15 + 72) * v14, v2);
    goto LABEL_27;
  }
  int64_t v16 = v27 + 1;
  if (!__OFADD__(v27, 1))
  {
    if (v16 >= v25) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v26 + 8 * v16);
    uint64_t v18 = v27 + 1;
    if (!v17)
    {
      uint64_t v18 = v27 + 2;
      if (v27 + 2 >= v25) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v18);
      if (!v17)
      {
        uint64_t v18 = v27 + 3;
        if (v27 + 3 >= v25) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v18);
        if (!v17)
        {
          uint64_t v18 = v27 + 4;
          if (v27 + 4 >= v25) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v18);
          if (!v17)
          {
            uint64_t v18 = v27 + 5;
            if (v27 + 5 >= v25) {
              goto LABEL_29;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v18);
            if (!v17)
            {
              uint64_t v19 = v27 + 6;
              while (v25 != v19)
              {
                unint64_t v17 = *(void *)(v26 + 8 * v19++);
                if (v17)
                {
                  uint64_t v18 = v19 - 1;
                  goto LABEL_25;
                }
              }
LABEL_29:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v5, 1, 1, v2);
              return sub_2542774CC();
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v18 << 6);
    uint64_t v27 = v18;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_254273B54(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v6 + 80);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v19 - v12, a1, v11);
  uint64_t v14 = *(void *)&a2;
  double v15 = v3[4];
  uint64_t v16 = *((void *)v3 + 5);
  uint64_t v17 = sub_25436C7B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v19[1] = sub_25435D778(v14, 0, v16, 0, 0, (uint64_t)v10, 0, 1, v15, 0, 1);
  sub_25436CAE0();
  return sub_25436CB00();
}

uint64_t sub_254273D74()
{
  return swift_release();
}

uint64_t sub_254273E10(char *a1, char a2, int a3)
{
  int v105 = a3;
  uint64_t v115 = *v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  os_log_type_t v104 = (char *)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v115 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v96 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  unint64_t v111 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v110 = (char *)v95 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  double v15 = (char *)v95 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v109 = (char *)v95 - v16;
  uint64_t v114 = type metadata accessor for DKSmoothingFilter();
  uint64_t v17 = a1;
  uint64_t v18 = swift_getTupleTypeMetadata2();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)v95 - v23;
  uint64_t v25 = sub_25436D130();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v118 = (char *)v95 - v26;
  CGFloat v124 = v17;
  uint64_t v112 = v3;
  if ((a2 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  int64_t v117 = (int64_t)v17;
  unint64_t v27 = v3[2];
  uint64_t v102 = v22;
  if ((v27 & 0xC000000000000001) != 0)
  {
    uint64_t v28 = sub_25436D4B0();
    unint64_t v97 = 0;
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    unint64_t v31 = v28 | 0x8000000000000000;
  }
  else
  {
    uint64_t v33 = -1 << *(unsigned char *)(v27 + 32);
    uint64_t v29 = ~v33;
    uint64_t v34 = *(void *)(v27 + 64);
    unint64_t v97 = v27 + 64;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v30 = v36 & v34;
    unint64_t v31 = v27;
  }
  uint64_t v99 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v95[1] = v29;
  int64_t v100 = (unint64_t)(v29 + 64) >> 6;
  int64_t v106 = v8 - 8;
  unint64_t v103 = (uint64_t (**)(char *, uint64_t))(v19 + 8);
  swift_bridgeObjectRetain();
  int64_t v37 = v117;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v101 = 0;
  uint64_t v98 = MEMORY[0x263F8EE50] + 8;
  uint64_t v113 = v15;
  uint64_t v107 = (uint64_t (**)(uint64_t, uint64_t))v31;
  uint64_t v108 = v24;
  while (1)
  {
    uint64_t v38 = v118;
    if ((v31 & 0x8000000000000000) != 0) {
      break;
    }
    if (v30)
    {
      uint64_t v119 = (v30 - 1) & v30;
      unint64_t v39 = __clz(__rbit64(v30)) | (v101 << 6);
    }
    else
    {
      int64_t v45 = v101 + 1;
      if (__OFADD__(v101, 1)) {
        goto LABEL_64;
      }
      if (v45 >= v100) {
        goto LABEL_32;
      }
      unint64_t v46 = *(void *)(v97 + 8 * v45);
      int64_t v47 = v101 + 1;
      if (!v46)
      {
        int64_t v47 = v101 + 2;
        if (v101 + 2 >= v100) {
          goto LABEL_32;
        }
        unint64_t v46 = *(void *)(v97 + 8 * v47);
        if (!v46)
        {
          int64_t v48 = v101 + 3;
          if (v101 + 3 >= v100) {
            goto LABEL_32;
          }
          unint64_t v46 = *(void *)(v97 + 8 * v48);
          if (!v46)
          {
            while (1)
            {
              int64_t v47 = v48 + 1;
              if (__OFADD__(v48, 1)) {
                goto LABEL_65;
              }
              if (v47 >= v100) {
                break;
              }
              unint64_t v46 = *(void *)(v97 + 8 * v47);
              ++v48;
              if (v46) {
                goto LABEL_28;
              }
            }
LABEL_32:
            (*v116)(v118, 1, 1, v18);
            goto LABEL_34;
          }
          int64_t v47 = v101 + 3;
        }
      }
LABEL_28:
      uint64_t v119 = (v46 - 1) & v46;
      unint64_t v39 = __clz(__rbit64(v46)) + (v47 << 6);
      int64_t v101 = v47;
    }
    uint64_t v44 = *(void *)(v8 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v118, *(void *)(v31 + 48) + *(void *)(v44 + 72) * v39, v8);
    *(void *)&v38[*(int *)(v18 + 48)] = *(void *)(*(void *)(v31 + 56) + 8 * v39);
    (*v116)(v38, 0, 1, v18);
    swift_retain();
LABEL_30:
    uint64_t v49 = v8;
    uint64_t v50 = *(int *)(v18 + 48);
    uint64_t v51 = *(void *)&v38[v50];
    uint64_t v52 = v44;
    uint64_t v53 = v38;
    uint64_t v54 = v108;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v108, v53, v49);
    *(void *)&v54[v50] = v51;
    uint64_t v55 = *(int *)(v18 + 48);
    unint64_t v56 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    long long v57 = v102;
    v56(v102, v54, v49);
    *(void *)&v57[v55] = v51;
    swift_retain();
    MEMORY[0x25A2751E0](&v121, v57, v37, v49, MEMORY[0x263F8D538]);
    int v58 = v122;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v49);
    if (v58 == 1)
    {
      uint64_t v59 = *(int *)(v18 + 48);
      v56(v57, v54, v49);
      swift_release();
      *(void *)&v57[v59] = v51;
      uint64_t v121 = 0;
      unsigned __int8 v122 = 0;
      sub_25436CAE0();
      sub_25436CB00();
      uint64_t result = (*v103)(v54, v18);
    }
    else
    {
      (*v103)(v54, v18);
      uint64_t result = swift_release();
    }
    uint64_t v8 = v49;
    double v15 = v113;
    int64_t v37 = v117;
    unint64_t v31 = (unint64_t)v107;
    unint64_t v30 = v119;
  }
  if (sub_25436D4C0())
  {
    uint64_t v41 = v40;
    uint64_t v119 = v30;
    sub_25436D790();
    swift_unknownObjectRelease();
    uint64_t v42 = *(int *)(v18 + 48);
    uint64_t v123 = v41;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v43 = v121;
    swift_unknownObjectRelease();
    *(void *)&v38[v42] = v43;
    (*v116)(v38, 0, 1, v18);
    uint64_t v44 = *(void *)(v8 - 8);
    goto LABEL_30;
  }
  (*v116)(v38, 1, 1, v18);
LABEL_34:
  uint64_t result = sub_2542774CC();
LABEL_35:
  int64_t v60 = 0;
  uint64_t v61 = *((void *)v124 + 8);
  unint64_t v103 = (uint64_t (**)(char *, uint64_t))(v124 + 64);
  uint64_t v113 = v124;
  uint64_t v62 = 1 << v124[32];
  uint64_t v63 = -1;
  if (v62 < 64) {
    uint64_t v63 = ~(-1 << v62);
  }
  unint64_t v64 = v63 & v61;
  int64_t v106 = (unint64_t)(v62 + 63) >> 6;
  uint64_t v108 = (char *)(v8 - 8);
  uint64_t v107 = (uint64_t (**)(uint64_t, uint64_t))(v96 + 8);
  uint64_t v65 = TupleTypeMetadata2;
  while (2)
  {
    if (v64)
    {
      uint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((v64 - 1) & v64);
      int64_t v117 = v60;
      unint64_t v66 = __clz(__rbit64(v64)) | (v60 << 6);
LABEL_54:
      uint64_t v71 = v113;
      uint64_t v72 = *(void *)(v8 - 8);
      id v73 = v109;
      uint64_t v74 = v72;
      CGFloat v75 = *(void (**)(char *, unint64_t, uint64_t))(v72 + 16);
      v75(v109, *((void *)v113 + 6) + *(void *)(v72 + 72) * v66, v8);
      uint64_t v76 = *(void *)(*((void *)v71 + 7) + 8 * v66);
      *(void *)&v73[*(int *)(v65 + 48)] = v76;
      uint64_t v77 = *(int *)(v65 + 48);
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v15, v73, v8);
      uint64_t v119 = v77;
      *(void *)&v15[v77] = v76;
      uint64_t v78 = *(int *)(v65 + 48);
      uint64_t v79 = v110;
      v75(v110, (unint64_t)v15, v8);
      *(void *)&v79[v78] = v76;
      uint64_t v80 = (uint64_t)v15;
      double v81 = v112;
      uint64_t v82 = v112[2];
      swift_bridgeObjectRetain();
      uint64_t v83 = v114;
      uint64_t v84 = *(void *)(v115 + 104);
      MEMORY[0x25A2751E0](&v121, v79, v82, v8, v114, v84);
      swift_bridgeObjectRelease();
      uint64_t v85 = v121;
      swift_release();
      uint64_t v118 = *(char **)(v74 + 8);
      ((void (*)(char *, uint64_t))v118)(v79, v8);
      if (!v85) {
        sub_254273B54(v80, 0.5);
      }
      uint64_t v86 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v87 = v111;
      v75(v111, v80, v8);
      uint64_t v88 = v119;
      *(void *)&v87[v86] = *(void *)(v80 + v119);
      uint64_t v89 = v81[2];
      swift_bridgeObjectRetain();
      MEMORY[0x25A2751E0](&v121, v87, v89, v8, v83, v84);
      swift_bridgeObjectRelease();
      if (v121)
      {
        ((void (*)(char *, uint64_t))v118)(v87, v8);
        double v90 = *(double *)(v80 + v88);
        uint64_t v91 = sub_25436C7B0();
        uint64_t v92 = (uint64_t)v104;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v104, 1, 1, v91);
        double v15 = (char *)v80;
        if (v105)
        {
          uint64_t v93 = 0x3FF0000000000000;
          char v94 = 0;
        }
        else
        {
          uint64_t v93 = 0;
          char v94 = 1;
        }
        sub_25435D340(v93, v94, v92, v90);
        swift_release();
        sub_254258BD8(v92);
        uint64_t v65 = TupleTypeMetadata2;
        uint64_t result = (*v107)(v80, TupleTypeMetadata2);
      }
      else
      {
        uint64_t v65 = TupleTypeMetadata2;
        (*v107)(v80, TupleTypeMetadata2);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v118)(v87, v8);
        double v15 = (char *)v80;
      }
      unint64_t v64 = (unint64_t)v116;
      int64_t v60 = v117;
      continue;
    }
    break;
  }
  int64_t v67 = v60 + 1;
  if (__OFADD__(v60, 1))
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v67 >= v106) {
    return swift_release();
  }
  unint64_t v68 = (unint64_t)v103[v67];
  int64_t v69 = v60 + 1;
  if (v68) {
    goto LABEL_53;
  }
  int64_t v69 = v60 + 2;
  if (v60 + 2 >= v106) {
    return swift_release();
  }
  unint64_t v68 = (unint64_t)v103[v69];
  if (v68)
  {
LABEL_53:
    uint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((v68 - 1) & v68);
    int64_t v117 = v69;
    unint64_t v66 = __clz(__rbit64(v68)) + (v69 << 6);
    goto LABEL_54;
  }
  uint64_t v70 = v60 + 3;
  if (v60 + 3 >= v106) {
    return swift_release();
  }
  unint64_t v68 = (unint64_t)v103[v70];
  if (v68)
  {
    int64_t v69 = v60 + 3;
    goto LABEL_53;
  }
  while (1)
  {
    int64_t v69 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      break;
    }
    if (v69 >= v106) {
      return swift_release();
    }
    unint64_t v68 = (unint64_t)v103[v69];
    ++v70;
    if (v68) {
      goto LABEL_53;
    }
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_254274A54(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  int v69 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v72 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v77 = a1;
  uint64_t v8 = v2[2];
  uint64_t v9 = *(void *)(v8 + 64);
  unint64_t v74 = v8 + 64;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v71 = ~v11;
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & v9;
  int64_t v75 = (unint64_t)(63 - v11) >> 6;
  if (a1 < 0) {
    uint64_t v13 = a1;
  }
  else {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v70 = v13;
  *(void *)&long long v73 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
    }
    else
    {
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_78;
      }
      if (v17 >= v75)
      {
LABEL_46:
        sub_2542774CC();
        unint64_t isUniquelyReferenced_nonNull_native = v77;
        if (!(v77 >> 62))
        {
          uint64_t v28 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v29 = (uint64_t)v72;
          if (v28)
          {
LABEL_48:
            unint64_t v74 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
            uint64_t v30 = 4;
            long long v73 = xmmword_25436FDF0;
            uint64_t v70 = v28;
            unint64_t v71 = isUniquelyReferenced_nonNull_native;
            do
            {
              uint64_t v31 = v30 - 4;
              if (v74)
              {
                uint64_t v32 = MEMORY[0x25A275A00](v30 - 4, isUniquelyReferenced_nonNull_native);
                uint64_t v33 = v30 - 3;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_77;
                }
              }
              else
              {
                uint64_t v32 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v30);
                swift_retain();
                uint64_t v33 = v30 - 3;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_77;
                }
              }
              uint64_t v34 = *(void *)(v32 + 16);
              if (!*(void *)(v4[2] + 16) || (sub_254351604(*(void *)(v32 + 16)), (v35 & 1) == 0))
              {
                int64_t v75 = v33;
                uint64_t v36 = v4[4];
                uint64_t v37 = v4[5];
                uint64_t v38 = sub_25436C7B0();
                unint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
                v39(v29, 1, 1, v38);
                type metadata accessor for DKSmoothingFilter();
                uint64_t v40 = v4;
                uint64_t v41 = v29;
                uint64_t v42 = swift_allocObject();
                *(_OWORD *)(v42 + 48) = v73;
                uint64_t v43 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                v39(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v38);
                uint64_t v44 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
                *(void *)uint64_t v44 = 0;
                *(unsigned char *)(v44 + 8) = 1;
                uint64_t v45 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
                *(void *)uint64_t v45 = 0;
                *(unsigned char *)(v45 + 8) = 1;
                *(unsigned char *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
                *(void *)(v42 + 16) = v36;
                *(void *)(v42 + 24) = v37;
                *(_WORD *)(v42 + 32) = 256;
                *(void *)(v42 + 40) = 0x3FE0000000000000;
                uint64_t v46 = v41;
                uint64_t v4 = v40;
                sub_254277464(v46, v43);
                *(void *)uint64_t v44 = 0;
                *(unsigned char *)(v44 + 8) = 1;
                *(void *)uint64_t v45 = 0;
                *(unsigned char *)(v45 + 8) = 1;
                unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v76 = (void *)v40[2];
                int64_t v47 = v76;
                v40[2] = 0x8000000000000000;
                unint64_t v49 = sub_254351604(v34);
                uint64_t v50 = v47[2];
                BOOL v51 = (v48 & 1) == 0;
                uint64_t v52 = v50 + v51;
                if (__OFADD__(v50, v51)) {
                  goto LABEL_79;
                }
                char v53 = v48;
                if (v47[3] >= v52)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_25429BA54();
                  }
                }
                else
                {
                  sub_25429801C(v52, isUniquelyReferenced_nonNull_native);
                  unint64_t v54 = sub_254351604(v34);
                  if ((v53 & 1) != (v55 & 1)) {
                    goto LABEL_87;
                  }
                  unint64_t v49 = v54;
                }
                unint64_t v56 = v76;
                unint64_t isUniquelyReferenced_nonNull_native = 8 * v49;
                if (v53)
                {
                  uint64_t v57 = v76[7];
                  swift_release();
                  *(void *)(v57 + isUniquelyReferenced_nonNull_native) = v42;
                }
                else
                {
                  v76[(v49 >> 6) + 8] |= 1 << v49;
                  *(void *)(v56[6] + 8 * v49) = v34;
                  *(void *)(v56[7] + 8 * v49) = v42;
                  uint64_t v58 = v56[2];
                  BOOL v59 = __OFADD__(v58, 1);
                  uint64_t v60 = v58 + 1;
                  if (v59) {
                    goto LABEL_80;
                  }
                  v56[2] = v60;
                }
                v40[2] = v56;
                swift_bridgeObjectRelease();
                unint64_t isUniquelyReferenced_nonNull_native = v71;
                uint64_t v29 = (uint64_t)v72;
                uint64_t v28 = v70;
                uint64_t v33 = v75;
              }
              if (*(void *)(v4[2] + 16) && (sub_254351604(*(void *)(v32 + 16)), (v61 & 1) != 0))
              {
                double v62 = *(double *)(v32 + 24);
                uint64_t v63 = sub_25436C7B0();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v29, 1, 1, v63);
                swift_retain();
                if (v69)
                {
                  uint64_t v64 = 0x3FF0000000000000;
                  char v65 = 0;
                }
                else
                {
                  uint64_t v64 = 0;
                  char v65 = 1;
                }
                sub_25435D340(v64, v65, v29, v62);
                swift_release();
                swift_release();
                sub_254258BD8(v29);
              }
              else
              {
                swift_release();
              }
              ++v30;
            }
            while (v33 != v28);
            return swift_bridgeObjectRelease();
          }
LABEL_83:
          return swift_bridgeObjectRelease();
        }
LABEL_82:
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_25436D530();
        swift_bridgeObjectRelease();
        uint64_t v29 = (uint64_t)v72;
        if (v28) {
          goto LABEL_48;
        }
        goto LABEL_83;
      }
      unint64_t v18 = *(void *)(v74 + 8 * v17);
      int64_t v19 = v14 + 1;
      if (!v18)
      {
        int64_t v19 = v14 + 2;
        if (v14 + 2 >= v75) {
          goto LABEL_46;
        }
        unint64_t v18 = *(void *)(v74 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v14 + 3;
          if (v14 + 3 >= v75) {
            goto LABEL_46;
          }
          unint64_t v18 = *(void *)(v74 + 8 * v19);
          if (!v18)
          {
            int64_t v20 = v14 + 4;
            if (v14 + 4 >= v75) {
              goto LABEL_46;
            }
            unint64_t v18 = *(void *)(v74 + 8 * v20);
            if (!v18)
            {
              while (1)
              {
                int64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_81;
                }
                if (v19 >= v75) {
                  goto LABEL_46;
                }
                unint64_t v18 = *(void *)(v74 + 8 * v19);
                ++v20;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            int64_t v19 = v14 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
      int64_t v14 = v19;
    }
    unint64_t isUniquelyReferenced_nonNull_native = *(void *)(*(void *)(v8 + 48) + 8 * v16);
    if ((unint64_t)a1 >> 62)
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_25436D530();
      if (!v21) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain_n();
      swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_34;
      }
    }
    if (!(void)v73)
    {
      if (*(void *)(*(void *)(a1 + 32) + 16) == isUniquelyReferenced_nonNull_native) {
        goto LABEL_7;
      }
      if (v21 != 1)
      {
        uint64_t v22 = 5;
        while (1)
        {
          uint64_t v23 = v22 - 3;
          if (__OFADD__(v22 - 4, 1)) {
            break;
          }
          if (*(void *)(*(void *)(a1 + 8 * v22) + 16) == isUniquelyReferenced_nonNull_native) {
            goto LABEL_7;
          }
          ++v22;
          if (v23 == v21) {
            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      goto LABEL_34;
    }
    uint64_t v25 = *(void *)(MEMORY[0x25A275A00](0, a1) + 16);
    swift_unknownObjectRelease();
    if (v25 == isUniquelyReferenced_nonNull_native)
    {
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_8;
    }
    if (v21 != 1) {
      break;
    }
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = isUniquelyReferenced_nonNull_native;
    *(void *)(v24 + 24) = 0;
    MEMORY[0x25A275490]();
    unint64_t isUniquelyReferenced_nonNull_native = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (isUniquelyReferenced_nonNull_native >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
LABEL_8:
    swift_release();
  }
  uint64_t v26 = 1;
  while (1)
  {
    uint64_t v27 = MEMORY[0x25A275A00](v26, a1);
    uint64_t v67 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    uint64_t v68 = *(void *)(v27 + 16);
    swift_unknownObjectRelease();
    if (v68 == isUniquelyReferenced_nonNull_native) {
      goto LABEL_7;
    }
    ++v26;
    if (v67 == v21) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_87:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_254275228(uint64_t (**a1)(void, void, void), int a2)
{
  uint64_t v3 = v2;
  int v81 = a2;
  int64_t v101 = (void *)*v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v80 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)v101[10];
  uint64_t v87 = *(v8 - 1);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v86 = (uint64_t)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (uint64_t)v78 - v11;
  uint64_t v12 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v84 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v93 = (char *)v78 - v18;
  MEMORY[0x270FA5388](v17);
  int64_t v20 = (char *)v78 - v19;
  uint64_t v21 = sub_25436D130();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)v78 - v22;
  uint64_t v96 = a1;
  int64_t v106 = (uint64_t (**)(char *, char *, void *))a1;
  unint64_t v24 = v3[2];
  if ((v24 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = sub_25436D4B0();
    unint64_t v79 = 0;
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    unint64_t v28 = v25 | 0x8000000000000000;
  }
  else
  {
    uint64_t v29 = -1 << *(unsigned char *)(v24 + 32);
    uint64_t v26 = ~v29;
    uint64_t v30 = *(void *)(v24 + 64);
    unint64_t v79 = v24 + 64;
    uint64_t v31 = -v29;
    if (v31 < 64) {
      uint64_t v32 = ~(-1 << v31);
    }
    else {
      uint64_t v32 = -1;
    }
    unint64_t v27 = v32 & v30;
    unint64_t v28 = v24;
  }
  uint64_t v83 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  char v95 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v78[1] = v26;
  int64_t v85 = (unint64_t)(v26 + 64) >> 6;
  uint64_t v98 = (uint64_t (**)(char *, char *, void *))(v87 + 16);
  double v90 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v91 = (void (**)(char *, char *, void *))(v87 + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v89 = 0;
  uint64_t v82 = MEMORY[0x263F8EE50] + 8;
  uint64_t v99 = v12;
  int64_t v100 = v3;
  unint64_t v92 = v28;
  char v94 = v23;
  while ((v28 & 0x8000000000000000) != 0)
  {
    uint64_t v103 = v27;
    if (!sub_25436D4C0()) {
      goto LABEL_31;
    }
    uint64_t v36 = v35;
    sub_25436D790();
    swift_unknownObjectRelease();
    uint64_t v37 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v104 = v36;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v38 = v105;
    swift_unknownObjectRelease();
    *(void *)&v23[v37] = v38;
    (*v95)(v23, 0, 1, TupleTypeMetadata2);
    unint64_t v39 = v98;
LABEL_25:
    uint64_t v43 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v44 = *(void *)&v23[v43];
    (*v91)(v20, v23, v8);
    *(void *)&v20[v43] = v44;
    int v105 = v96;
    uint64_t v45 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v46 = v93;
    unint64_t v97 = *v39;
    uint64_t v47 = v97(v93, v20, v8);
    uint64_t v102 = v78;
    *(void *)&v46[v45] = v44;
    MEMORY[0x270FA5388](v47);
    char v48 = v8;
    unint64_t v49 = v101;
    uint64_t v50 = v101[11];
    v78[-6] = v8;
    v78[-5] = v50;
    *(_OWORD *)&v78[-4] = *((_OWORD *)v49 + 6);
    v78[-2] = v46;
    type metadata accessor for DKProbabilityValue();
    sub_25436CEA0();
    swift_retain_n();
    swift_getWitnessTable();
    LOBYTE(v45) = sub_25436CD60();
    BOOL v51 = *v90;
    (*v90)(v46, TupleTypeMetadata2);
    if (v45)
    {
      v51(v20, TupleTypeMetadata2);
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t v52 = (uint64_t)v84;
      v97(v84, v20, v48);
      swift_release();
      uint64_t v104 = DKProbabilityValue.__allocating_init(variable:probability:)(v52, 0.0);
      sub_25436CE80();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v51)(v20, TupleTypeMetadata2);
    }
    uint64_t v8 = v48;
    uint64_t v12 = v99;
    uint64_t v3 = v100;
    uint64_t v23 = v94;
    unint64_t v28 = v92;
    unint64_t v27 = v103;
  }
  if (v27)
  {
    uint64_t v103 = (v27 - 1) & v27;
    unint64_t v34 = __clz(__rbit64(v27)) | (v89 << 6);
LABEL_24:
    unint64_t v39 = v98;
    (*(void (**)(char *, unint64_t, void *))(v87 + 16))(v23, *(void *)(v28 + 48) + *(void *)(v87 + 72) * v34, v8);
    *(void *)&v23[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v28 + 56) + 8 * v34);
    (*v95)(v23, 0, 1, TupleTypeMetadata2);
    swift_retain();
    goto LABEL_25;
  }
  int64_t v40 = v89 + 1;
  if (__OFADD__(v89, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v40 >= v85) {
    goto LABEL_31;
  }
  unint64_t v41 = *(void *)(v79 + 8 * v40);
  if (v41)
  {
LABEL_23:
    uint64_t v103 = (v41 - 1) & v41;
    unint64_t v34 = __clz(__rbit64(v41)) + (v40 << 6);
    int64_t v89 = v40;
    goto LABEL_24;
  }
  int64_t v42 = v89 + 2;
  if (v89 + 2 >= v85) {
    goto LABEL_31;
  }
  unint64_t v41 = *(void *)(v79 + 8 * v42);
  if (v41)
  {
LABEL_22:
    int64_t v40 = v42;
    goto LABEL_23;
  }
  int64_t v42 = v89 + 3;
  if (v89 + 3 < v85)
  {
    unint64_t v41 = *(void *)(v79 + 8 * v42);
    if (!v41)
    {
      while (1)
      {
        int64_t v40 = v42 + 1;
        if (__OFADD__(v42, 1)) {
          break;
        }
        if (v40 >= v85) {
          goto LABEL_31;
        }
        unint64_t v41 = *(void *)(v79 + 8 * v40);
        ++v42;
        if (v41) {
          goto LABEL_23;
        }
      }
LABEL_49:
      __break(1u);
      return result;
    }
    goto LABEL_22;
  }
LABEL_31:
  (*v95)(v23, 1, 1, TupleTypeMetadata2);
  sub_2542774CC();
  char v53 = v106;
  uint64_t v102 = v8;
  uint64_t v54 = type metadata accessor for DKProbabilityValue();
  if (!MEMORY[0x25A275580](v53, v54)) {
    return swift_bridgeObjectRelease();
  }
  char v55 = (void (**)(uint64_t, void *))(v87 + 8);
  uint64_t v56 = 4;
  unint64_t v97 = (uint64_t (*)(char *, char *, void *))v54;
  uint64_t v98 = v53;
  uint64_t v57 = v102;
  while (2)
  {
    uint64_t v61 = v56 - 4;
    char v62 = sub_25436CE50();
    sub_25436CE00();
    if (v62)
    {
      swift_retain();
      uint64_t v63 = v56 - 3;
      if (__OFADD__(v61, 1)) {
        break;
      }
      goto LABEL_37;
    }
    sub_25436D300();
    uint64_t v63 = v56 - 3;
    if (!__OFADD__(v61, 1))
    {
LABEL_37:
      uint64_t v103 = v63;
      uint64_t v64 = v88;
      sub_25436866C(v88);
      uint64_t v65 = v3[2];
      swift_bridgeObjectRetain();
      uint64_t v66 = v101[13];
      MEMORY[0x25A2751E0](&v105, v64, v65, v57, v12, v66);
      swift_bridgeObjectRelease();
      uint64_t v67 = v12;
      uint64_t v68 = *v55;
      (*v55)(v64, v57);
      int v69 = v105;
      swift_release();
      if (!v69)
      {
        uint64_t v70 = v88;
        sub_25436866C(v88);
        sub_254273B54(v70, 0.5);
        v68(v70, v57);
      }
      uint64_t v71 = v86;
      sub_25436866C(v86);
      uint64_t v72 = v3[2];
      swift_bridgeObjectRetain();
      MEMORY[0x25A2751E0](&v105, v71, v72, v57, v67, v66);
      swift_bridgeObjectRelease();
      v68(v71, v57);
      if (v105)
      {
        double v73 = sub_254368758();
        uint64_t v74 = sub_25436C7B0();
        uint64_t v75 = (uint64_t)v80;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v80, 1, 1, v74);
        BOOL v59 = (uint64_t (*)(void, void, void))v97;
        uint64_t v58 = (uint64_t (**)(void, void, void))v98;
        if (v81)
        {
          uint64_t v76 = 0x3FF0000000000000;
          char v77 = 0;
        }
        else
        {
          uint64_t v76 = 0;
          char v77 = 1;
        }
        sub_25435D340(v76, v77, v75, v73);
        swift_release();
        swift_release();
        sub_254258BD8(v75);
      }
      else
      {
        swift_release();
        BOOL v59 = (uint64_t (*)(void, void, void))v97;
        uint64_t v58 = (uint64_t (**)(void, void, void))v98;
      }
      uint64_t v60 = MEMORY[0x25A275580](v58, v59);
      ++v56;
      uint64_t v12 = v99;
      uint64_t v3 = v100;
      if (v103 == v60) {
        return swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_254275C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25436866C((uint64_t)v6);
  char v7 = sub_25436CBB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a3);
  return v7 & 1;
}

uint64_t sub_254275D88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v68 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v61 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v13 = sub_25436D130();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v71 = (char *)&v61 - v14;
  uint64_t v78 = v0[2];
  uint64_t v65 = v3;
  uint64_t v15 = sub_25436CAD0();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_254272228((void (*)(char *, char *))sub_2542774FC, (uint64_t)v0, v15, MEMORY[0x263F8D538], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19) {
    return swift_bridgeObjectRelease();
  }
  if (v19 == 1)
  {
    uint64_t v20 = 0;
    double v21 = 0.0;
  }
  else
  {
    uint64_t v20 = v19 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v23 = (double *)(v18 + 40);
    double v21 = 0.0;
    uint64_t v24 = v19 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v21 = v21 + *(v23 - 1) + *v23;
      v23 += 2;
      v24 -= 2;
    }
    while (v24);
    if (v19 == v20) {
      goto LABEL_10;
    }
  }
  uint64_t v25 = v19 - v20;
  uint64_t v26 = (double *)(v18 + 8 * v20 + 32);
  do
  {
    double v27 = *v26++;
    double v21 = v21 + v27;
    --v25;
  }
  while (v25);
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  if (v21 <= COERCE_DOUBLE(1)) {
    return result;
  }
  unint64_t v28 = v1[2];
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t v29 = sub_25436D4B0();
    unint64_t v62 = 0;
    uint64_t v30 = 0;
    unint64_t v31 = 0;
    unint64_t v32 = v29 | 0x8000000000000000;
  }
  else
  {
    uint64_t v33 = -1 << *(unsigned char *)(v28 + 32);
    uint64_t v30 = ~v33;
    uint64_t v34 = *(void *)(v28 + 64);
    unint64_t v62 = v28 + 64;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v31 = v36 & v34;
    unint64_t v32 = v28;
  }
  uint64_t v37 = v71;
  uint64_t v64 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v61 = v30;
  int64_t v67 = (unint64_t)(v30 + 64) >> 6;
  uint64_t v72 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v73 = v2 - 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v69 = 0;
  uint64_t v63 = MEMORY[0x263F8EE50] + 8;
  uint64_t v66 = v12;
  unint64_t v74 = v32;
  while (1)
  {
    if ((v32 & 0x8000000000000000) != 0)
    {
      if (sub_25436D4C0())
      {
        uint64_t v40 = v39;
        uint64_t v76 = v31;
        uint64_t v37 = v71;
        sub_25436D790();
        swift_unknownObjectRelease();
        uint64_t v41 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v77 = v40;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v42 = v78;
        swift_unknownObjectRelease();
        *(void *)&v37[v41] = v42;
        (*v75)(v37, 0, 1, TupleTypeMetadata2);
        uint64_t v43 = *(void *)(v2 - 8);
        goto LABEL_38;
      }
      (*v75)(v71, 1, 1, TupleTypeMetadata2);
      return sub_2542774CC();
    }
    if (!v31) {
      break;
    }
    uint64_t v76 = (v31 - 1) & v31;
    unint64_t v38 = __clz(__rbit64(v31)) | (v69 << 6);
LABEL_37:
    uint64_t v43 = *(void *)(v2 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v37, *(void *)(v32 + 48) + *(void *)(v43 + 72) * v38, v2);
    *(void *)&v37[*(int *)(TupleTypeMetadata2 + 48)] = *(void *)(*(void *)(v32 + 56) + 8 * v38);
    (*v75)(v37, 0, 1, TupleTypeMetadata2);
    swift_retain();
LABEL_38:
    uint64_t v48 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v49 = *(void *)&v37[v48];
    uint64_t v50 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v12, v37, v2);
    *(void *)&v12[v48] = v49;
    uint64_t v51 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v52(v10, v12, v2);
    *(void *)&v10[v51] = v49;
    if (*(unsigned char *)(v49 + 33) == 1)
    {
      if (*(unsigned char *)(v49 + 32) == 1) {
        double v53 = atan2(*(long double *)(v49 + 48), *(long double *)(v49 + 56));
      }
      else {
        double v53 = *(double *)(v49 + 40);
      }
      uint64_t v70 = *(void (**)(char *, uint64_t))(v50 + 8);
      uint64_t v54 = v70;
      swift_retain();
      v54(v10, v2);
      char v55 = v10;
      uint64_t v56 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v57 = v2;
      uint64_t v58 = TupleTypeMetadata2;
      BOOL v59 = v68;
      uint64_t v12 = v66;
      v52(v68, v66, v57);
      (*v72)(v12, v58);
      *(void *)&v59[v56] = v49;
      uint64_t v10 = v55;
      *(double *)(v49 + 40) = v53 / v21;
      swift_release();
      uint64_t v60 = v59;
      TupleTypeMetadata2 = v58;
      uint64_t v2 = v57;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v70)(v60, v57);
      uint64_t v37 = v71;
    }
    else
    {
      (*v72)(v12, TupleTypeMetadata2);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v10, v2);
    }
    unint64_t v32 = v74;
    unint64_t v31 = v76;
  }
  int64_t v44 = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v44 >= v67) {
    goto LABEL_43;
  }
  unint64_t v45 = *(void *)(v62 + 8 * v44);
  int64_t v46 = v69 + 1;
  if (v45) {
    goto LABEL_36;
  }
  int64_t v46 = v69 + 2;
  if (v69 + 2 >= v67) {
    goto LABEL_43;
  }
  unint64_t v45 = *(void *)(v62 + 8 * v46);
  if (v45) {
    goto LABEL_36;
  }
  int64_t v47 = v69 + 3;
  if (v69 + 3 >= v67)
  {
LABEL_43:
    (*v75)(v37, 1, 1, TupleTypeMetadata2);
    return sub_2542774CC();
  }
  unint64_t v45 = *(void *)(v62 + 8 * v47);
  if (v45)
  {
    int64_t v46 = v69 + 3;
LABEL_36:
    uint64_t v76 = (v45 - 1) & v45;
    unint64_t v38 = __clz(__rbit64(v45)) + (v46 << 6);
    int64_t v69 = v46;
    goto LABEL_37;
  }
  while (1)
  {
    int64_t v46 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v46 >= v67) {
      goto LABEL_43;
    }
    unint64_t v45 = *(void *)(v62 + 8 * v46);
    ++v47;
    if (v45) {
      goto LABEL_36;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

double sub_254276500(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = type metadata accessor for DKSmoothingFilter();
  uint64_t v7 = *(void *)(v3 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x25A2751E0](&v12, a1, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  double v8 = 0.0;
  if (v12)
  {
    if (*(unsigned char *)(v12 + 33) == 1)
    {
      if (*(unsigned char *)(v12 + 32) == 1)
      {
        long double v9 = *(double *)(v12 + 48);
        long double v10 = *(double *)(v12 + 56);
        swift_release();
        return atan2(v9, v10);
      }
      double v8 = *(double *)(v12 + 40);
    }
    swift_release();
  }
  return v8;
}

uint64_t sub_2542765F4@<X0>(double a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v72 = a2;
  double v71 = a1;
  uint64_t v5 = *(void *)(*v3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](*(void *)&a1);
  uint64_t v73 = (char *)&v71 - v7;
  uint64_t v87 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v76 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v95 = (char *)&v71 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v71 - v14;
  uint64_t v89 = v16;
  uint64_t v17 = sub_25436D130();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = sub_25436D130();
  uint64_t v83 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v90 = v6;
  uint64_t v24 = *(void (**)(void))(v6 + 56);
  uint64_t v82 = (char *)&v71 - v25;
  uint64_t v75 = v6 + 56;
  unint64_t v74 = v24;
  v24();
  unint64_t v26 = v3[2];
  uint64_t v78 = a3;
  uint64_t v81 = v20;
  uint64_t v77 = v23;
  if ((v26 & 0xC000000000000001) != 0)
  {
    uint64_t v27 = sub_25436D4B0();
    unint64_t v85 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    unint64_t v30 = v27 | 0x8000000000000000;
  }
  else
  {
    uint64_t v31 = -1 << *(unsigned char *)(v26 + 32);
    uint64_t v28 = ~v31;
    uint64_t v32 = *(void *)(v26 + 64);
    unint64_t v85 = v26 + 64;
    uint64_t v33 = -v31;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    else {
      uint64_t v34 = -1;
    }
    unint64_t v29 = v34 & v32;
    unint64_t v30 = v26;
  }
  uint64_t v35 = v89;
  uint64_t v88 = v30 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v97 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v79 = v28;
  int64_t v84 = (unint64_t)(v28 + 64) >> 6;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v90 + 16);
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v90 + 32);
  unint64_t v92 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v96 = (void (**)(char *, uint64_t))(v90 + 8);
  uint64_t v80 = (void (**)(char *, uint64_t))(v83 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v39 = v36;
  int64_t v91 = 0;
  double v40 = 0.0;
  uint64_t v86 = MEMORY[0x263F8EE50] + 8;
  unint64_t v94 = v30;
  uint64_t v98 = v36;
  while ((v30 & 0x8000000000000000) != 0)
  {
    uint64_t v99 = v29;
    if (!sub_25436D4C0())
    {
      unint64_t v62 = v78;
      uint64_t v63 = v81;
      uint64_t v64 = v77;
      goto LABEL_38;
    }
    uint64_t v43 = v42;
    sub_25436D790();
    swift_unknownObjectRelease();
    uint64_t v44 = *(int *)(v35 + 48);
    uint64_t v100 = v43;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v45 = v101;
    swift_unknownObjectRelease();
    *(void *)&v19[v44] = v45;
    (*v97)(v19, 0, 1, v35);
    int64_t v46 = v98;
LABEL_28:
    uint64_t v51 = *(int *)(v35 + 48);
    uint64_t v52 = *(void *)&v19[v51];
    double v53 = v19;
    uint64_t v54 = v37;
    uint64_t v93 = *v37;
    v93(v15, v19, v5);
    *(void *)&v15[v51] = v52;
    uint64_t v55 = *(int *)(v35 + 48);
    uint64_t v56 = v35;
    uint64_t v57 = v95;
    (*v46)(v95, v15, v5);
    *(void *)&v57[v55] = v52;
    if (*(unsigned char *)(v52 + 33) == 1)
    {
      if (*(unsigned char *)(v52 + 32) == 1) {
        double v58 = atan2(*(long double *)(v52 + 48), *(long double *)(v52 + 56));
      }
      else {
        double v58 = *(double *)(v52 + 40);
      }
      uint64_t v37 = v54;
      uint64_t v19 = v53;
      unint64_t v30 = v94;
      (*v96)(v57, v5);
      if (v40 < v58)
      {
        BOOL v59 = v82;
        (*v80)(v82, v81);
        uint64_t v60 = v76;
        uint64_t v61 = v93;
        v93(v76, v15, v5);
        swift_release();
        v61(v59, v60, v5);
        uint64_t result = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v74)(v59, 0, 1, v5);
        double v40 = v58;
        uint64_t v35 = v89;
      }
      else
      {
        uint64_t v35 = v89;
        uint64_t result = (*v92)(v15, v89);
      }
    }
    else
    {
      (*v92)(v15, v56);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v96)(v57, v5);
      uint64_t v37 = v54;
      uint64_t v35 = v56;
      uint64_t v19 = v53;
      unint64_t v30 = v94;
    }
    uint64_t v39 = v98;
    unint64_t v29 = v99;
  }
  if (v29)
  {
    uint64_t v99 = (v29 - 1) & v29;
    unint64_t v41 = __clz(__rbit64(v29)) | (v91 << 6);
LABEL_27:
    int64_t v46 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v90 + 16))(v19, *(void *)(v30 + 48) + *(void *)(v90 + 72) * v41, v5);
    *(void *)&v19[*(int *)(v35 + 48)] = *(void *)(*(void *)(v30 + 56) + 8 * v41);
    (*v97)(v19, 0, 1, v35);
    swift_retain();
    goto LABEL_28;
  }
  int64_t v47 = v91 + 1;
  if (__OFADD__(v91, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v47 >= v84)
  {
    unint64_t v62 = v78;
    uint64_t v63 = v81;
    uint64_t v64 = v77;
LABEL_38:
    (*v97)(v19, 1, 1, v35);
    sub_2542774CC();
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v64, v82, v63);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v64, 1, v5) == 1)
    {
      (*v80)(v64, v63);
    }
    else
    {
      uint64_t v66 = *v37;
      int64_t v67 = v73;
      (*v37)(v73, v64, v5);
      if ((v72 & 1) != 0 || v40 > v71)
      {
        uint64_t v68 = swift_getTupleTypeMetadata2();
        uint64_t v69 = v5;
        uint64_t v70 = *(int *)(v68 + 48);
        v66(v62, v67, v69);
        *(double *)&v62[v70] = v40;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v62, 0, 1, v68);
      }
      (*v96)(v67, v5);
    }
    uint64_t v65 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v62, 1, 1, v65);
  }
  unint64_t v48 = *(void *)(v85 + 8 * v47);
  int64_t v49 = v91 + 1;
  if (v48) {
    goto LABEL_26;
  }
  int64_t v49 = v91 + 2;
  if (v91 + 2 >= v84) {
    goto LABEL_36;
  }
  unint64_t v48 = *(void *)(v85 + 8 * v49);
  if (v48)
  {
LABEL_26:
    uint64_t v99 = (v48 - 1) & v48;
    unint64_t v41 = __clz(__rbit64(v48)) + (v49 << 6);
    int64_t v91 = v49;
    goto LABEL_27;
  }
  int64_t v50 = v91 + 3;
  if (v91 + 3 >= v84)
  {
LABEL_36:
    unint64_t v62 = v78;
    uint64_t v63 = v81;
    uint64_t v64 = v77;
    goto LABEL_38;
  }
  unint64_t v48 = *(void *)(v85 + 8 * v50);
  if (v48)
  {
    int64_t v49 = v91 + 3;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v49 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v49 >= v84) {
      goto LABEL_36;
    }
    unint64_t v48 = *(void *)(v85 + 8 * v49);
    ++v50;
    if (v48) {
      goto LABEL_26;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_254276F90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = *(void *)(*v0 + 88);
  uint64_t v4 = *(void *)(*v0 + 96);
  type metadata accessor for DKProbabilityDistribution();
  v12[7] = v0[2];
  v12[2] = v2;
  v12[3] = v3;
  v12[4] = v4;
  v12[5] = *(void *)(v1 + 104);
  type metadata accessor for DKSmoothingFilter();
  uint64_t v5 = sub_25436CAE0();
  uint64_t v6 = type metadata accessor for DKProbabilityValue();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_254272228((void (*)(char *, char *))sub_254277558, (uint64_t)v12, v5, v6, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = DKProbabilityDistribution.__allocating_init(variables:)(v9);
  sub_254369480();
  return v10;
}

uint64_t sub_25427710C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v23 = a5;
  v22[0] = a3;
  v22[1] = a4;
  type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = TupleTypeMetadata2 - 8;
  uint64_t v9 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = *(int *)(v8 + 56);
  uint64_t v15 = *(void *)(a2 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v16((char *)v22 - v12, a1, a2);
  uint64_t v17 = a1;
  uint64_t v18 = *(void *)(a1 + v14);
  *(void *)&v13[v14] = v18;
  uint64_t v19 = *(int *)(v8 + 56);
  v16(v11, v17, a2);
  *(void *)&v11[v19] = v18;
  double v20 = 0.0;
  if (*(unsigned char *)(v18 + 33) == 1)
  {
    if (*(unsigned char *)(v18 + 32) == 1) {
      double v20 = atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56));
    }
    else {
      double v20 = *(double *)(v18 + 40);
    }
  }
  type metadata accessor for DKProbabilityValue();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, a2);
  uint64_t result = DKProbabilityValue.__allocating_init(variable:probability:)((uint64_t)v13, v20);
  uint64_t *v23 = result;
  return result;
}

uint64_t DKMultivariateProbabilityFilter.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMultivariateProbabilityFilter.__deallocating_deinit()
{
  return sub_254277314(MEMORY[0x263F8EEA0]);
}

uint64_t sub_254277314(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_254277360(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_25436D3A0();
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      v4 += 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      *(void *)(v7 + 24) = v6;
      sub_25436D370();
      sub_25436D3B0();
      sub_25436D3C0();
      sub_25436D380();
      --v1;
    }
    while (v1);
    uint64_t v2 = v9;
  }
  sub_254274A54(v2, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_254277464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542774CC()
{
  return swift_release();
}

uint64_t sub_2542774D4(uint64_t a1)
{
  return sub_254275C8C(a1, *(void *)(v1 + 48), *(void *)(v1 + 16)) & 1;
}

void sub_2542774FC(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  double v4 = 0.5;
  if (*(unsigned char *)(*a1 + 33) == 1)
  {
    if (*(unsigned char *)(v3 + 32) == 1) {
      double v4 = atan2(*(long double *)(v3 + 48), *(long double *)(v3 + 56));
    }
    else {
      double v4 = *(double *)(v3 + 40);
    }
  }
  *a2 = v4;
}

uint64_t sub_254277558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25427710C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for DKBinaryProbabilityFilter()
{
  return self;
}

uint64_t method lookup function for DKBinaryProbabilityFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKBinaryProbabilityFilter);
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.__allocating_init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(v4 + 192))(a1, a2 & 1, a3, a4 & 1);
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.update(_:time:reset:weight:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v4 + 200))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.lastUpdateTime()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.probability()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.maximumLikelihood()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_25427768C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DKMultivariateProbabilityFilter()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DKMultivariateProbabilityFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKMultivariateProbabilityFilter);
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.__allocating_init(variableNames:alpha:beta:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.addVariable(name:probability:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.removeVariable(name:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.update(measurements:pad:reset:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.update(measurements:reset:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.normalize()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.probability(of:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.maximumLikelihood(threshold:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.getDistribution()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t sub_2542778C4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_2542778DC(a1, a2, a3);
}

uint64_t sub_2542778DC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_25436D530();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x25A275A00](i - 4, a3);
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * i);
          swift_retain();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v14 = v8;
        a1(&v13, &v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        uint64_t v10 = swift_release();
        if (v13)
        {
          MEMORY[0x25A275490](v10);
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void *sub_254277A90(uint64_t (*a1)(uint64_t *), void *a2, unint64_t a3)
{
  return sub_254277AA8(a1, a2, a3);
}

void *sub_254277AA8(uint64_t (*a1)(uint64_t *), void *a2, unint64_t a3)
{
  unint64_t v5 = a3;
  uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  if (a3 >> 62)
  {
LABEL_18:
    uint64_t v8 = sub_25436D530();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      unint64_t v9 = 0;
      uint64_t v15 = v5 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = v5 & 0xC000000000000001;
      unint64_t v14 = v5;
      while (1)
      {
        if (v16)
        {
          uint64_t v10 = MEMORY[0x25A275A00](v9, v5);
          unint64_t v11 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return v3;
          }
        }
        else
        {
          if (v9 >= *(void *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v10 = *(void *)(v5 + 8 * v9 + 32);
          swift_retain();
          unint64_t v11 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v17 = v10;
        uint64_t v3 = a2;
        char v12 = a1(&v17);
        if (v4) {
          goto LABEL_15;
        }
        if (v12)
        {
          sub_25436D370();
          sub_25436D3B0();
          unint64_t v5 = v14;
          sub_25436D3C0();
          uint64_t v3 = &v18;
          sub_25436D380();
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v11 == v8)
        {
          uint64_t v3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_254277C64()
{
  return swift_retain();
}

uint64_t sub_254277C6C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_254277C7C())()
{
  return nullsub_1;
}

uint64_t sub_254277C9C()
{
  return swift_retain();
}

uint64_t sub_254277CA4(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_254277CB4())()
{
  return nullsub_1;
}

uint64_t sub_254277CD4()
{
  return swift_retain();
}

uint64_t sub_254277CDC(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*sub_254277CEC())()
{
  return nullsub_1;
}

uint64_t sub_254277D0C()
{
  return swift_retain();
}

uint64_t sub_254277D14(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t (*sub_254277D24())()
{
  return nullsub_1;
}

uint64_t DKMultiSubjectTrackerConfiguration.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DKMultiSubjectTrackerConfiguration.init()();
  return v0;
}

void *DKMultiSubjectTrackerConfiguration.init()()
{
  type metadata accessor for DKFaceTrackerConfiguration();
  *(_OWORD *)(swift_allocObject() + 176) = xmmword_25436FEB0;
  v0[2] = DKTrackerConfiguration.init()();
  type metadata accessor for DKBodyTrackerConfiguration();
  swift_allocObject();
  v0[3] = DKTrackerConfiguration.init()();
  type metadata accessor for DKHandTrackerConfiguration();
  *(void *)(swift_allocObject() + 176) = 0x3FB999999999999ALL;
  v0[4] = DKTrackerConfiguration.init()();
  type metadata accessor for DKPersonTrackerConfiguration();
  swift_allocObject();
  v0[5] = DKPersonTrackerConfiguration.init()();
  type metadata accessor for DKPersonGroupConfiguration();
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v1[1] = xmmword_25436FEC0;
  v1[2] = xmmword_25436FED0;
  v1[3] = xmmword_25436FEE0;
  v0[6] = v1;
  return v0;
}

uint64_t DKMultiSubjectTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKMultiSubjectTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DKMultiSubjectTracker.__allocating_init(configuration:camera:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DKMultiSubjectTracker.init(configuration:camera:)(a1, a2);
  return v4;
}

uint64_t DKMultiSubjectTracker.init(configuration:camera:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId) = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers) = MEMORY[0x263F8EE78];
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers) = v5;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers) = v5;
  sub_25436C9E0();
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers) = v5;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration) = a1;
  sub_25427F768(a2, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v6 = *(void *)(a1 + 48);
  type metadata accessor for DKPersonGroupFilter();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8EE80];
  uint64_t v9 = MEMORY[0x263F8EE88];
  v7[4] = MEMORY[0x263F8EE80];
  v7[5] = v9;
  v7[6] = v8;
  v7[7] = v5;
  v7[8] = v9;
  v7[9] = v9;
  v7[10] = v9;
  v7[2] = v6;
  v7[3] = v8;
  swift_retain();
  sub_25427F7D0(a2, (uint64_t (*)(void))type metadata accessor for DKCamera);
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_groupFilter) = v7;
  return v2;
}

uint64_t sub_2542780BC(uint64_t a1)
{
  return sub_254278250(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers, (uint64_t (*)(uint64_t *))sub_25427F8B0);
}

uint64_t sub_2542780DC(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_2542780F4(a1, a2, a3);
}

uint64_t sub_2542780F4(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25436D530();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x25A275A00](v7 - 4, a3);
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a3 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v14 = v9;
        char v12 = a1(&v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v9;
        }
        if (v12)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_254278230(uint64_t a1)
{
  return sub_254278250(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers, (uint64_t (*)(uint64_t *))sub_25427DC68);
}

uint64_t sub_254278250(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_25436C800();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2542503C8(a1, (uint64_t)v9, &qword_269DD7F58);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_25425042C((uint64_t)v9, &qword_269DD7F58);
    return 0;
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v9, v10);
    unint64_t v16 = *(void *)(v3 + *a2);
    MEMORY[0x270FA5388](v15);
    *(void *)&v18[-16] = v13;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2542780F4(a3, (uint64_t)&v18[-32], v16);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

uint64_t sub_25427844C(uint64_t a1)
{
  return sub_254278250(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers, (uint64_t (*)(uint64_t *))sub_25427F8B0);
}

uint64_t sub_25427846C(uint64_t a1)
{
  return sub_254278250(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers, (uint64_t (*)(uint64_t *))sub_25427DCAC);
}

uint64_t sub_25427848C(uint64_t a1)
{
  return sub_2542784F4(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers, (uint64_t (*)(uint64_t *))sub_25427DCF0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_25427DD2C);
}

uint64_t sub_2542784C0(uint64_t a1)
{
  return sub_2542784F4(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers, (uint64_t (*)(uint64_t *))sub_25427DCF0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_25427DD70);
}

uint64_t sub_2542784F4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *), void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v22)(uint64_t *__return_ptr, uint64_t *);
  void v23[4];
  unint64_t v24;

  uint64_t v8 = *a2;
  unint64_t v9 = *(void *)(v4 + *a2);
  v23[2] = a1;
  swift_bridgeObjectRetain();
  *(void *)(v4 + v8) = sub_254277AA8(a3, v23, v9);
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v4 + v8);
  uint64_t v24 = MEMORY[0x263F8EE78];
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v18 = swift_bridgeObjectRelease();
LABEL_17:
    unint64_t v19 = v24;
    MEMORY[0x270FA5388](v18);
    v21[2] = a1;
    uint64_t v20 = sub_2542778DC(a4, (uint64_t)v21, v19);
    swift_release();
    return v20;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_25436D530();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v11 >= 1)
  {
    uint64_t v22 = a4;
    if ((v10 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v14 = MEMORY[0x25A275A00](i, v10);
        if (*(void *)(*(void *)(v14 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v14 + qword_269DDAA20)
                                                                                 + 80))
        {
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v16 = qword_269DDAA38;
      uint64_t v17 = qword_269DDAA20;
      do
      {
        if (*(void *)(*(void *)(*(void *)(v10 + 8 * v15 + 32) + v16) + 16) >= *(void *)(*(void *)(*(void *)(v10 + 8 * v15 + 32) + v17)
                                                                                                 + 80))
        {
          swift_retain();
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
          uint64_t v16 = qword_269DDAA38;
          uint64_t v17 = qword_269DDAA20;
        }
        ++v15;
      }
      while (v11 != v15);
    }
    uint64_t v18 = swift_bridgeObjectRelease();
    a4 = v22;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_254278750(uint64_t a1)
{
  return sub_2542784F4(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers, (uint64_t (*)(uint64_t *))sub_25427DCF0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_25427DDB4);
}

uint64_t sub_254278784(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v9[2] = a1;
  swift_bridgeObjectRetain();
  *(void *)(v1 + v3) = sub_254277AA8((uint64_t (*)(uint64_t *))sub_25427DDF8, v9, v4);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v1 + v3);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_2542778DC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_25427DE34, (uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_254278840()
{
  return (sub_25434989C() & 1) == 0;
}

uint64_t sub_254278878@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_254349BD4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2542788B8(double *a1)
{
  uint64_t v3 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (double *)((char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  sub_25427F768(v6, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DKCamera);
  char v7 = _s23IntelligentTrackingCore8DKCameraV2eeoiySbAC_ACtFZ_0(v5, a1);
  uint64_t result = sub_25427F7D0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DKCamera);
  if ((v7 & 1) == 0)
  {
    sub_25427F7D0(v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
    sub_25427F768((uint64_t)a1, v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_254278B60(v9, (uint64_t (*)(void))type metadata accessor for DKFaceTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_254278B60(v11, (uint64_t (*)(void))type metadata accessor for DKBodyTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    v24[0] = v10;
    sub_25427D648(v12);
    uint64_t v13 = v24[0];
    unint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_254278B60(v14, (uint64_t (*)(void))type metadata accessor for DKHandTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    v24[0] = v13;
    sub_25427D648(v15);
    uint64_t v16 = v24[0];
    unint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_254278B60(v17, (uint64_t (*)(void))type metadata accessor for DKPersonTracker, (uint64_t)&protocol witness table for DKPersonTracker);
    swift_bridgeObjectRelease();
    v24[0] = v16;
    sub_25427D648(v18);
    uint64_t v19 = *(void *)(v24[0] + 16);
    if (v19)
    {
      uint64_t v20 = v24[0] + 32;
      do
      {
        sub_25427215C(v20, (uint64_t)v24);
        uint64_t v21 = v25;
        uint64_t v22 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        (*(void (**)(double *, uint64_t, uint64_t))(v22 + 56))(a1, v21, v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        v20 += 40;
        --v19;
      }
      while (v19);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_254278B60(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6) {
    return v7;
  }
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E2820(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = MEMORY[0x25A275A00](v9, a1);
        uint64_t v20 = v7;
        unint64_t v12 = *(void *)(v7 + 16);
        unint64_t v11 = *(void *)(v7 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_2542E2820(v11 > 1, v12 + 1, 1);
          uint64_t v7 = v20;
        }
        ++v9;
        uint64_t v18 = a2(0);
        uint64_t v19 = a3;
        *(void *)&long long v17 = v10;
        *(void *)(v7 + 16) = v12 + 1;
        sub_25425DF80(&v17, v7 + 40 * v12 + 32);
      }
      while (v6 != v9);
    }
    else
    {
      uint64_t v13 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v14 = *v13;
        uint64_t v20 = v7;
        unint64_t v15 = *(void *)(v7 + 16);
        unint64_t v16 = *(void *)(v7 + 24);
        swift_retain();
        if (v15 >= v16 >> 1)
        {
          sub_2542E2820(v16 > 1, v15 + 1, 1);
          uint64_t v7 = v20;
        }
        uint64_t v18 = a2(0);
        uint64_t v19 = a3;
        *(void *)&long long v17 = v14;
        *(void *)(v7 + 16) = v15 + 1;
        sub_25425DF80(&v17, v7 + 40 * v15 + 32);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_254278D2C(uint64_t a1)
{
  return sub_2542794C0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2542E2850, &qword_269DD7B68, &qword_269DD8068);
}

uint64_t sub_254278D54(uint64_t a1)
{
  return sub_2542794C0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2542E2880, &qword_269DD7B58, &qword_269DD8060);
}

uint64_t sub_254278D7C(uint64_t a1)
{
  return sub_2542794C0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2542E28B0, &qword_269DD7B40, &qword_269DD8058);
}

uint64_t sub_254278DA4(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF0);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8038);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2542E28E0(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t v10 = v17;
    do
    {
      sub_2542503C8(v11, (uint64_t)v4, &qword_269DD7AF0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2542E28E0(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2542E28E0(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_25427F340((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_254278FE0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25436D3A0();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          MEMORY[0x25A275A00]();
          type metadata accessor for DKHandObservation(0);
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AC8);
          swift_dynamicCast();
          swift_release();
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        unint64_t v6 = a1 + 32;
        type metadata accessor for DKHandObservation(0);
        do
        {
          v6 += 8;
          swift_retain_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AC8);
          swift_dynamicCast();
          swift_release();
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
          --v2;
        }
        while (v2);
      }
      return v7;
    }
  }
  return result;
}

uint64_t sub_2542791C4(unint64_t a1)
{
  return sub_254279254(a1, type metadata accessor for DKFaceObservation, &qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
}

uint64_t sub_25427920C(unint64_t a1)
{
  return sub_254279254(a1, type metadata accessor for DKBodyObservation, &qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
}

uint64_t sub_254279254(unint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8) {
    return v9;
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E2988(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = MEMORY[0x25A275A00](v11, a1);
        uint64_t v22 = v9;
        unint64_t v14 = *(void *)(v9 + 16);
        unint64_t v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_2542E2988(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        ++v11;
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_25427F2F8(a3, a4);
        *(void *)&long long v19 = v12;
        *(void *)(v9 + 16) = v14 + 1;
        sub_25425DF80(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      unint64_t v15 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v16 = *v15;
        uint64_t v22 = v9;
        unint64_t v18 = *(void *)(v9 + 16);
        unint64_t v17 = *(void *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_2542E2988(v17 > 1, v18 + 1, 1);
          uint64_t v9 = v22;
        }
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_25427F2F8(a3, a4);
        *(void *)&long long v19 = v16;
        *(void *)(v9 + 16) = v18 + 1;
        sub_25425DF80(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_254279450(unint64_t a1)
{
  return sub_254279254(a1, type metadata accessor for DKHandObservation, &qword_269DD8028, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
}

uint64_t sub_254279498(uint64_t a1)
{
  return sub_2542794C0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2542E2A88, &qword_269DD7A78, &qword_269DD8030);
}

uint64_t sub_2542794C0(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    a2(0, v4, 0);
    uint64_t v5 = v18;
    uint64_t v9 = a1 + 48;
    do
    {
      swift_retain_n();
      swift_retain_n();
      __swift_instantiateConcreteTypeFromMangledName(a3);
      __swift_instantiateConcreteTypeFromMangledName(a4);
      swift_dynamicCast();
      swift_release();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v18;
      }
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        a2(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v18;
      }
      *(void *)(v5 + 16) = v11 + 1;
      uint64_t v12 = (void *)(v5 + 24 * v11);
      v12[4] = v15;
      v12[5] = v16;
      v12[6] = v17;
      v9 += 24;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_254279650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  unint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  v52[2] = a1;
  swift_bridgeObjectRetain();
  *uint64_t v4 = (unint64_t)sub_254277AA8((uint64_t (*)(uint64_t *))sub_25427F894, v52, v5);
  swift_bridgeObjectRelease();
  unint64_t v6 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  unint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  v51[2] = a1;
  swift_bridgeObjectRetain();
  int64_t v49 = v6;
  unint64_t *v6 = (unint64_t)sub_254277AA8((uint64_t (*)(uint64_t *))sub_25427F894, v51, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  unint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  v50[2] = a1;
  swift_bridgeObjectRetain();
  unint64_t v48 = v8;
  *uint64_t v8 = (unint64_t)sub_254277AA8((uint64_t (*)(uint64_t *))sub_25427F894, v50, v9);
  swift_bridgeObjectRelease();
  int64_t v47 = v4;
  unint64_t v10 = *v4;
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v11 = result;
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_64;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = MEMORY[0x25A275A00](i, v10);
      }
      else
      {
        uint64_t v14 = *(void *)(v10 + 8 * i + 32);
        swift_retain();
      }
      *(unsigned char *)(v14 + qword_269DDAA30) = 0;
      uint64_t v15 = sub_25427D5E8();
      uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for DKPersonGroupFilter.Track(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
      {
        *(void *)uint64_t v17 = 0;
        *(unsigned char *)(v17 + 8) = 1;
      }
      ((void (*)(unsigned char *, void))v15)(v58, 0);
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = *v49;
  if (*v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v20 = result;
    if (!result) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v20) {
      goto LABEL_24;
    }
  }
  if (v20 < 1)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  for (uint64_t j = 0; j != v20; ++j)
  {
    if ((v19 & 0xC000000000000001) != 0)
    {
      uint64_t v22 = MEMORY[0x25A275A00](j, v19);
    }
    else
    {
      uint64_t v22 = *(void *)(v19 + 8 * j + 32);
      swift_retain();
    }
    *(unsigned char *)(v22 + qword_269DDAA30) = 0;
    uint64_t v23 = sub_25427D5E8();
    uint64_t v25 = v24;
    uint64_t v26 = type metadata accessor for DKPersonGroupFilter.Track(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      *(void *)uint64_t v25 = 0;
      *(unsigned char *)(v25 + 8) = 1;
    }
    ((void (*)(unsigned char *, void))v23)(v58, 0);
    swift_release();
  }
LABEL_24:
  swift_bridgeObjectRelease();
  unint64_t v27 = *v8;
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v28 = result;
    if (result)
    {
LABEL_26:
      if (v28 >= 1)
      {
        for (uint64_t k = 0; k != v28; ++k)
        {
          if ((v27 & 0xC000000000000001) != 0)
          {
            uint64_t v30 = MEMORY[0x25A275A00](k, v27);
          }
          else
          {
            uint64_t v30 = *(void *)(v27 + 8 * k + 32);
            swift_retain();
          }
          *(unsigned char *)(v30 + qword_269DDAA30) = 0;
          uint64_t v31 = sub_25427D5E8();
          uint64_t v33 = v32;
          uint64_t v34 = type metadata accessor for DKPersonGroupFilter.Track(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34))
          {
            *(void *)uint64_t v33 = 0;
            *(unsigned char *)(v33 + 8) = 1;
          }
          ((void (*)(unsigned char *, void))v31)(v58, 0);
          swift_release();
        }
        goto LABEL_35;
      }
LABEL_65:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_26;
    }
  }
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v35 = MEMORY[0x263F8EE78];
  v59[0] = MEMORY[0x263F8EE78];
  uint64_t v36 = *(void *)(a2 + 16);
  if (v36)
  {
    uint64_t v37 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v38 = a2 + 32;
    uint64_t v39 = v36;
    do
    {
      sub_25427215C(v38, (uint64_t)v58);
      sub_25427215C((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
      type metadata accessor for DKFaceObservation(0);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v57 = 0;
      }
      uint64_t v40 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v57)
      {
        MEMORY[0x25A275490](v40);
        if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
      }
      v38 += 40;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    uint64_t v55 = v35;
    swift_bridgeObjectRetain();
    uint64_t v41 = a2 + 32;
    uint64_t v42 = v36;
    do
    {
      sub_25427215C(v41, (uint64_t)v58);
      sub_25427215C((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
      type metadata accessor for DKBodyObservation(0);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v54 = 0;
      }
      uint64_t v43 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v54)
      {
        MEMORY[0x25A275490](v43);
        if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
      }
      v41 += 40;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    uint64_t v57 = v55;
    uint64_t v54 = v35;
    swift_bridgeObjectRetain();
    do
    {
      sub_25427215C(v37, (uint64_t)v58);
      sub_25427215C((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
      type metadata accessor for DKHandObservation(0);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v53 = 0;
      }
      uint64_t v44 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v53)
      {
        MEMORY[0x25A275490](v44);
        if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
      }
      v37 += 40;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    uint64_t v45 = v54;
  }
  else
  {
    v59[0] = MEMORY[0x263F8EE78];
    uint64_t v57 = MEMORY[0x263F8EE78];
    uint64_t v45 = MEMORY[0x263F8EE78];
  }
  uint64_t v55 = v45;
  sub_25427B760(a1, v47, v59);
  swift_bridgeObjectRelease();
  sub_25427C004(a1, v49, &v57);
  swift_bridgeObjectRelease();
  sub_25427C760(a1, v48, &v55);
  swift_bridgeObjectRelease();
  return sub_254279E28(a1);
}

uint64_t sub_254279E28(uint64_t a1)
{
  uint64_t v164 = a1;
  uint64_t v2 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v159 = (uint64_t)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_25436C7B0();
  uint64_t v4 = *(char **)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v170 = (uint64_t)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v146 = (uint64_t)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v147 = (uint64_t)&v143 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v143 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v168 = (char *)&v143 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v162 = (char *)&v143 - v16;
  uint64_t v176 = sub_25436C800();
  uint64_t v17 = *(char **)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  CGFloat v151 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  CGFloat v152 = (char *)&v143 - v20;
  MEMORY[0x270FA5388](v21);
  id v174 = (char *)&v143 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v160 = (char *)&v143 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v175 = (char *)&v143 - v26;
  uint64_t v169 = (int *)type metadata accessor for DKPersonGroup(0);
  uint64_t v163 = *((void *)v169 - 1);
  MEMORY[0x270FA5388](v169);
  uint64_t v177 = (uint64_t)&v143 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v178 = (void (**)(void))((char *)&v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v143 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v143 - v34;
  uint64_t v36 = type metadata accessor for DKPersonGroupFilter.Track(0);
  uint64_t v173 = *(uint64_t **)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v165 = (uint64_t)&v143 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v155 = (uint64_t)&v143 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v166 = (void (**)(void (**)(void), uint64_t, uint64_t, uint64_t))((char *)&v143 - v41);
  MEMORY[0x270FA5388](v42);
  uint64_t v156 = (uint64_t)&v143 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v171 = (uint64_t)&v143 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v157 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v143 - v47);
  uint64_t v145 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers;
  unint64_t v48 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  if (v48 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_25436D530();
    uint64_t v49 = result;
  }
  else
  {
    uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  uint64_t v167 = v1;
  uint64_t v161 = v12;
  CGFloat v153 = v4;
  unint64_t v149 = v17;
  if (v49)
  {
    uint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t))v49;
    if (v49 < 1) {
      goto LABEL_169;
    }
    uint64_t v52 = 0;
    uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v173 + 7);
    uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 6);
    unint64_t v172 = (void *)MEMORY[0x263F8EE78];
    double v154 = v51;
    do
    {
      if ((v48 & 0xC000000000000001) != 0)
      {
        uint64_t v55 = MEMORY[0x25A275A00](v52, v48);
      }
      else
      {
        uint64_t v55 = *(void *)(v48 + 8 * (void)v52 + 32);
        swift_retain();
      }
      if (*(void *)(*(void *)(v55 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v55 + qword_269DDAA20)
                                                                               + 80))
        sub_2542503C8(v55 + *(void *)(*(void *)v55 + 232), (uint64_t)v35, &qword_269DD8040);
      else {
        (*v53)(v35, 1, 1, v36);
      }
      swift_release();
      if ((*v54)(v35, 1, v36) == 1)
      {
        sub_25425042C((uint64_t)v35, &qword_269DD8040);
      }
      else
      {
        uint64_t v56 = v157;
        sub_25427F830((uint64_t)v35, (uint64_t)v157);
        sub_25427F830((uint64_t)v56, v171);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v172 = (void *)sub_2542592F8(0, v172[2] + 1, 1, (unint64_t)v172);
        }
        unint64_t v58 = v172[2];
        unint64_t v57 = v172[3];
        if (v58 >= v57 >> 1) {
          unint64_t v172 = (void *)sub_2542592F8(v57 > 1, v58 + 1, 1, (unint64_t)v172);
        }
        uint64_t v60 = v172;
        BOOL v59 = v173;
        v172[2] = v58 + 1;
        sub_25427F830(v171, (uint64_t)v60+ ((*((unsigned __int8 *)v59 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v59 + 80))+ v59[9] * v58);
        uint64_t v51 = v154;
      }
      uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v52 + 1);
    }
    while (v51 != v52);
  }
  else
  {
    unint64_t v172 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease_n();
  uint64_t v144 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers;
  unint64_t v61 = *(void *)(v167 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  if (v61 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_25436D530();
    uint64_t v62 = result;
    if (result) {
      goto LABEL_23;
    }
LABEL_41:
    uint64_t v171 = MEMORY[0x263F8EE78];
    goto LABEL_42;
  }
  uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v62) {
    goto LABEL_41;
  }
LABEL_23:
  if (v62 < 1) {
    goto LABEL_170;
  }
  uint64_t v63 = 0;
  unint64_t v64 = v61 & 0xC000000000000001;
  uint64_t v157 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v173 + 7);
  uint64_t v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 6);
  uint64_t v171 = MEMORY[0x263F8EE78];
  do
  {
    if (v64)
    {
      uint64_t v66 = MEMORY[0x25A275A00](v63, v61);
    }
    else
    {
      uint64_t v66 = *(void *)(v61 + 8 * v63 + 32);
      swift_retain();
    }
    if (*(void *)(*(void *)(v66 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v66 + qword_269DDAA20) + 80)) {
      sub_2542503C8(v66 + *(void *)(*(void *)v66 + 232), (uint64_t)v32, &qword_269DD8040);
    }
    else {
      (*v157)(v32, 1, 1, v36);
    }
    swift_release();
    if ((*v65)(v32, 1, v36) == 1)
    {
      sub_25425042C((uint64_t)v32, &qword_269DD8040);
    }
    else
    {
      unint64_t v67 = v64;
      uint64_t v68 = v62;
      unint64_t v69 = v61;
      uint64_t v70 = v156;
      sub_25427F830((uint64_t)v32, v156);
      sub_25427F830(v70, (uint64_t)v166);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v171 = sub_2542592F8(0, *(void *)(v171 + 16) + 1, 1, v171);
      }
      unint64_t v72 = *(void *)(v171 + 16);
      unint64_t v71 = *(void *)(v171 + 24);
      if (v72 >= v71 >> 1) {
        uint64_t v171 = sub_2542592F8(v71 > 1, v72 + 1, 1, v171);
      }
      uint64_t v73 = v171;
      *(void *)(v171 + 16) = v72 + 1;
      sub_25427F830((uint64_t)v166, v73+ ((*((unsigned __int8 *)v173 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v173 + 80))+ v173[9] * v72);
      unint64_t v61 = v69;
      uint64_t v62 = v68;
      unint64_t v64 = v67;
    }
    ++v63;
  }
  while (v62 != v63);
LABEL_42:
  swift_bridgeObjectRelease_n();
  unint64_t v74 = *(void *)(v167 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_25436D530();
    uint64_t v75 = result;
    if (result) {
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t v75 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v75)
    {
LABEL_44:
      if (v75 < 1) {
        goto LABEL_171;
      }
      uint64_t v76 = 0;
      unint64_t v77 = v74 & 0xC000000000000001;
      uint64_t v166 = (void (**)(void (**)(void), uint64_t, uint64_t, uint64_t))(v173 + 7);
      uint64_t v78 = (unsigned int (**)(void (**)(void), uint64_t, uint64_t))(v173 + 6);
      uint64_t v79 = MEMORY[0x263F8EE78];
      do
      {
        if (v77)
        {
          uint64_t v80 = MEMORY[0x25A275A00](v76, v74);
        }
        else
        {
          uint64_t v80 = *(void *)(v74 + 8 * v76 + 32);
          swift_retain();
        }
        if (*(void *)(*(void *)(v80 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v80 + qword_269DDAA20)
                                                                                 + 80))
          sub_2542503C8(v80 + *(void *)(*(void *)v80 + 232), (uint64_t)v178, &qword_269DD8040);
        else {
          (*v166)(v178, 1, 1, v36);
        }
        swift_release();
        if ((*v78)(v178, 1, v36) == 1)
        {
          sub_25425042C((uint64_t)v178, &qword_269DD8040);
        }
        else
        {
          uint64_t v81 = v75;
          unint64_t v82 = v74;
          uint64_t v83 = v155;
          sub_25427F830((uint64_t)v178, v155);
          sub_25427F830(v83, v165);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v79 = sub_2542592F8(0, *(void *)(v79 + 16) + 1, 1, v79);
          }
          unint64_t v85 = *(void *)(v79 + 16);
          unint64_t v84 = *(void *)(v79 + 24);
          if (v85 >= v84 >> 1) {
            uint64_t v79 = sub_2542592F8(v84 > 1, v85 + 1, 1, v79);
          }
          *(void *)(v79 + 16) = v85 + 1;
          sub_25427F830(v165, v79+ ((*((unsigned __int8 *)v173 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v173 + 80))+ v173[9] * v85);
          unint64_t v74 = v82;
          uint64_t v75 = v81;
        }
        ++v76;
      }
      while (v75 != v76);
      goto LABEL_62;
    }
  }
  uint64_t v79 = MEMORY[0x263F8EE78];
LABEL_62:
  swift_bridgeObjectRelease_n();
  uint64_t v86 = v167;
  swift_retain();
  sub_2542EF29C(v164, (uint64_t)v172, v171, v79, v179);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v88 = v179[0];
  uint64_t v87 = v179[1];
  uint64_t v89 = (uint64_t *)(v86 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v90 = swift_bridgeObjectRetain();
  uint64_t v91 = sub_25427F3A8(v90, v88, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v173 = v89;
  uint64_t *v89 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v92 = v88;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v171 = *(void *)(v88 + 16);
  if (!v171) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v150 = 0;
  unint64_t v93 = 0;
  uint64_t v157 = (void (**)(char *, uint64_t, uint64_t, uint64_t))OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  uint64_t v156 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId;
  uint64_t v155 = v86 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  uint64_t v166 = (void (**)(void (**)(void), uint64_t, uint64_t, uint64_t))(v88
                                                                          + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80)));
  unint64_t v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48);
  uint64_t v178 = (void (**)(void))(v149 + 32);
  unint64_t v172 = v149 + 8;
  double v154 = (void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16);
  uint64_t v95 = (uint64_t)v161;
  uint64_t v96 = (uint64_t)v168;
  uint64_t v97 = (uint64_t)v162;
  uint64_t v98 = v176;
  CGFloat v153 = v149 + 48;
  uint64_t v165 = v92;
  while (1)
  {
    if (v93 >= *(void *)(v92 + 16)) {
      goto LABEL_165;
    }
    uint64_t v99 = v177;
    sub_25427F768((uint64_t)v166 + *(void *)(v163 + 72) * v93, v177, type metadata accessor for DKPersonGroup);
    uint64_t v100 = v99 + v169[7];
    sub_2542503C8(v100, v97, &qword_269DD7F58);
    uint64_t v101 = *v94;
    if ((*v94)(v97, 1, v98) != 1) {
      break;
    }
    sub_25425042C(v97, &qword_269DD7F58);
LABEL_85:
    (*v154)(v170, v164, v158);
    uint64_t v109 = (double *)(*(void **)((char *)v157 + v86))[5];
    sub_2542503C8(v100, v96, &qword_269DD7F58);
    if (v101(v96, 1, v98) == 1)
    {
      swift_retain();
      uint64_t v110 = (uint64_t)v160;
      sub_25436C7F0();
      sub_25425042C(v96, &qword_269DD7F58);
    }
    else
    {
      uint64_t v110 = (uint64_t)v160;
      (*v178)();
      swift_retain();
    }
    uint64_t v111 = v156;
    uint64_t v112 = *(uint64_t (**)())(v86 + v156);
    uint64_t v113 = v159;
    sub_25427F768(v155, v159, (uint64_t (*)(void))type metadata accessor for DKCamera);
    type metadata accessor for DKPersonTracker();
    swift_allocObject();
    sub_25434B830(v170, v109, v110, v112, v113);
    swift_release();
    uint64_t v114 = swift_retain();
    uint64_t v115 = v173;
    MEMORY[0x25A275490](v114);
    if (*(void *)((*v115 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v115 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    uint64_t result = sub_25436CDE0();
    uint64_t v116 = *(void *)(v86 + v111);
    BOOL v107 = __OFADD__(v116, 1);
    uint64_t v117 = v116 + 1;
    if (v107) {
      goto LABEL_166;
    }
    *(void *)(v86 + v111) = v117;
    unint64_t v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v153;
LABEL_92:
    swift_release();
    sub_2542503C8(v100, v95, &qword_269DD7F58);
    uint64_t v98 = v176;
    if (v101(v95, 1, v176) != 1)
    {
      uint64_t v118 = *v178;
      ((void (*)(char *, uint64_t, uint64_t))*v178)(v174, v95, v98);
      uint64_t v119 = *v115;
      if ((unint64_t)*v115 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v120 = sub_25436D530();
        if (v120) {
          goto LABEL_95;
        }
      }
      else
      {
        uint64_t v120 = *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v120)
        {
LABEL_95:
          if ((v119 & 0xC000000000000001) != 0) {
            MEMORY[0x25A275A00](0, v119);
          }
          else {
            swift_retain();
          }
          char v121 = sub_25436C7D0();
          uint64_t v122 = v176;
          if (v121) {
            goto LABEL_111;
          }
          swift_release();
          if (v120 != 1)
          {
            uint64_t v123 = 5;
            while (1)
            {
              uint64_t v124 = v123 - 4;
              if ((v119 & 0xC000000000000001) != 0)
              {
                uint64_t result = MEMORY[0x25A275A00](v123 - 4, v119);
                BOOL v107 = __OFADD__(v124, 1);
                uint64_t v125 = v123 - 3;
                if (v107) {
                  goto LABEL_164;
                }
              }
              else
              {
                uint64_t result = swift_retain();
                BOOL v107 = __OFADD__(v124, 1);
                uint64_t v125 = v123 - 3;
                if (v107) {
                  goto LABEL_164;
                }
              }
              if (sub_25436C7D0()) {
                break;
              }
              swift_release();
              ++v123;
              if (v125 == v120) {
                goto LABEL_107;
              }
            }
            uint64_t v86 = v167;
            uint64_t v122 = v176;
LABEL_111:
            swift_bridgeObjectRelease_n();
            unint64_t v149 = (char *)*v172;
            ((void (*)(char *, uint64_t))v149)(v174, v122);
            uint64_t v126 = v147;
            sub_2542503C8(v177 + v169[8], v147, &qword_269DD7F58);
            if (v101(v126, 1, v122) == 1)
            {
              sub_25425042C(v126, &qword_269DD7F58);
              uint64_t v127 = 0;
              goto LABEL_130;
            }
            ((void (*)(char *, uint64_t, uint64_t))v118)(v152, v126, v122);
            unint64_t v128 = *(void *)(v86 + v145);
            if (v128 >> 62)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v129 = sub_25436D530();
              if (!v129) {
                goto LABEL_127;
              }
LABEL_115:
              unint64_t v148 = v128 & 0xC000000000000001;
              if ((v128 & 0xC000000000000001) != 0)
              {
                uint64_t v127 = MEMORY[0x25A275A00](0, v128);
              }
              else
              {
                uint64_t v127 = *(void *)(v128 + 32);
                swift_retain();
              }
              if ((sub_25436C7D0() & 1) == 0)
              {
                swift_release();
                if (v129 == 1) {
                  goto LABEL_127;
                }
                uint64_t v130 = 5;
                while (1)
                {
                  uint64_t v131 = v130 - 4;
                  if (v148)
                  {
                    uint64_t result = MEMORY[0x25A275A00](v130 - 4, v128);
                    uint64_t v127 = result;
                    BOOL v107 = __OFADD__(v131, 1);
                    uint64_t v132 = v130 - 3;
                    if (v107) {
                      goto LABEL_167;
                    }
                  }
                  else
                  {
                    uint64_t v127 = *(void *)(v128 + 8 * v130);
                    uint64_t result = swift_retain();
                    BOOL v107 = __OFADD__(v131, 1);
                    uint64_t v132 = v130 - 3;
                    if (v107) {
                      goto LABEL_167;
                    }
                  }
                  if (sub_25436C7D0()) {
                    break;
                  }
                  swift_release();
                  ++v130;
                  if (v132 == v129) {
                    goto LABEL_127;
                  }
                }
                uint64_t v86 = v167;
              }
              swift_bridgeObjectRelease_n();
              uint64_t v122 = v176;
              ((void (*)(char *, uint64_t))v149)(v152, v176);
            }
            else
            {
              uint64_t v129 = *(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v129) {
                goto LABEL_115;
              }
LABEL_127:
              swift_bridgeObjectRelease_n();
              uint64_t v122 = v176;
              ((void (*)(char *, uint64_t))v149)(v152, v176);
              uint64_t v127 = 0;
              uint64_t v86 = v167;
            }
LABEL_130:
            uint64_t v133 = v146;
            sub_2542503C8(v177 + v169[9], v146, &qword_269DD7F58);
            if (v101(v133, 1, v122) == 1)
            {
              sub_25425042C(v133, &qword_269DD7F58);
              uint64_t v134 = 0;
LABEL_149:
              swift_retain();
              uint64_t v140 = swift_bridgeObjectRetain();
              uint64_t v141 = v150;
              uint64_t v142 = sub_25427E350(v140, v86);
              uint64_t v150 = v141;
              swift_bridgeObjectRelease();
              swift_release();
              sub_254348504(v164, v127, v134, v142);
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v95 = (uint64_t)v161;
              uint64_t v96 = (uint64_t)v168;
              uint64_t v97 = (uint64_t)v162;
              uint64_t v98 = v176;
              goto LABEL_66;
            }
            ((void (*)(char *, uint64_t, uint64_t))v118)(v151, v133, v122);
            unint64_t v135 = *(void *)(v86 + v144);
            if (!(v135 >> 62))
            {
              uint64_t v136 = *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v136) {
                goto LABEL_134;
              }
LABEL_146:
              swift_bridgeObjectRelease_n();
              ((void (*)(char *, uint64_t))v149)(v151, v176);
              uint64_t v134 = 0;
              uint64_t v86 = v167;
              goto LABEL_149;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v136 = sub_25436D530();
            if (!v136) {
              goto LABEL_146;
            }
LABEL_134:
            if ((v135 & 0xC000000000000001) != 0)
            {
              uint64_t v134 = MEMORY[0x25A275A00](0, v135);
            }
            else
            {
              uint64_t v134 = *(void *)(v135 + 32);
              swift_retain();
            }
            if ((sub_25436C7D0() & 1) == 0)
            {
              swift_release();
              if (v136 == 1) {
                goto LABEL_146;
              }
              uint64_t v137 = 5;
              while (1)
              {
                uint64_t v138 = v137 - 4;
                if ((v135 & 0xC000000000000001) != 0)
                {
                  uint64_t result = MEMORY[0x25A275A00](v137 - 4, v135);
                  uint64_t v134 = result;
                  BOOL v107 = __OFADD__(v138, 1);
                  uint64_t v139 = v137 - 3;
                  if (v107) {
                    goto LABEL_168;
                  }
                }
                else
                {
                  uint64_t v134 = *(void *)(v135 + 8 * v137);
                  uint64_t result = swift_retain();
                  BOOL v107 = __OFADD__(v138, 1);
                  uint64_t v139 = v137 - 3;
                  if (v107) {
                    goto LABEL_168;
                  }
                }
                if (sub_25436C7D0()) {
                  break;
                }
                swift_release();
                ++v137;
                if (v139 == v136) {
                  goto LABEL_146;
                }
              }
              uint64_t v86 = v167;
            }
            swift_bridgeObjectRelease_n();
            ((void (*)(char *, uint64_t))v149)(v151, v176);
            goto LABEL_149;
          }
        }
      }
LABEL_107:
      swift_bridgeObjectRelease_n();
      uint64_t v98 = v176;
      ((void (*)(char *, uint64_t))*v172)(v174, v176);
      uint64_t v86 = v167;
      uint64_t v95 = (uint64_t)v161;
      goto LABEL_65;
    }
    sub_25425042C(v95, &qword_269DD7F58);
LABEL_65:
    uint64_t v96 = (uint64_t)v168;
    uint64_t v97 = (uint64_t)v162;
LABEL_66:
    uint64_t v92 = v165;
    ++v93;
    uint64_t result = sub_25427F7D0(v177, type metadata accessor for DKPersonGroup);
    if (v93 == v171) {
      return swift_bridgeObjectRelease();
    }
  }
  ((void (*)(char *, uint64_t, uint64_t))*v178)(v175, v97, v98);
  uint64_t v102 = *v173;
  if (!((unint64_t)*v173 >> 62))
  {
    uint64_t v103 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v103) {
      goto LABEL_72;
    }
LABEL_84:
    swift_bridgeObjectRelease_n();
    uint64_t v98 = v176;
    ((void (*)(char *, uint64_t))*v172)(v175, v176);
    uint64_t v86 = v167;
    uint64_t v96 = (uint64_t)v168;
    uint64_t v95 = (uint64_t)v161;
    goto LABEL_85;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v103 = sub_25436D530();
  if (!v103) {
    goto LABEL_84;
  }
LABEL_72:
  if ((v102 & 0xC000000000000001) != 0) {
    MEMORY[0x25A275A00](0, v102);
  }
  else {
    swift_retain();
  }
  char v104 = sub_25436C7D0();
  uint64_t v86 = v167;
  if (v104)
  {
LABEL_109:
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))*v172)(v175, v176);
    uint64_t v115 = v173;
    goto LABEL_92;
  }
  swift_release();
  if (v103 == 1) {
    goto LABEL_84;
  }
  uint64_t v105 = 5;
  while (1)
  {
    uint64_t v106 = v105 - 4;
    if ((v102 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t result = MEMORY[0x25A275A00](v105 - 4, v102);
    BOOL v107 = __OFADD__(v106, 1);
    uint64_t v108 = v105 - 3;
    if (v107) {
      goto LABEL_163;
    }
LABEL_82:
    if (sub_25436C7D0())
    {
      uint64_t v86 = v167;
      uint64_t v95 = (uint64_t)v161;
      goto LABEL_109;
    }
    swift_release();
    ++v105;
    if (v108 == v103) {
      goto LABEL_84;
    }
  }
  uint64_t result = swift_retain();
  BOOL v107 = __OFADD__(v106, 1);
  uint64_t v108 = v105 - 3;
  if (!v107) {
    goto LABEL_82;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
  return result;
}

uint64_t sub_25427B760(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v7 = sub_25436C800();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v57 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v62 = (uint64_t)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v56 = (uint64_t)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (uint64_t)v54 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2542BCD98(*a2, *a3, 1.0);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v65 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
    uint64_t v66 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
    uint64_t v67 = v3;
    uint64_t v63 = (void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
    uint64_t v60 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
    uint64_t v20 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v54[1] = v18;
    uint64_t v21 = (uint64_t *)(v18 + 40);
    unint64_t v64 = 0x800000025437B100;
    while (1)
    {
      uint64_t v24 = *(v21 - 1);
      uint64_t v25 = *v21;
      if (v24)
      {
        if (v25)
        {
          if (*(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8))
          {
            uint64_t v26 = *(void *)(v24 + qword_269DDAFC0);
            *(unsigned char *)(v26 + 33) = 0;
            uint64_t v27 = v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_25425042C(v27, &qword_269DD7A40);
            uint64_t v28 = *v20;
            (*v20)(v27, 1, 1, v68);
            swift_release();
          }
          else
          {
            double v36 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
            uint64_t v28 = *v20;
            (*v20)((uint64_t)v17, 1, 1, v68);
            swift_retain();
            swift_retain();
            swift_retain();
            sub_25435D340(0, 1, (uint64_t)v17, v36);
            swift_release();
            sub_25425042C((uint64_t)v17, &qword_269DD7A40);
          }
          if (*(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8))
          {
            uint64_t v37 = *(void *)(v24 + qword_269DDAFC8);
            *(unsigned char *)(v37 + 33) = 0;
            uint64_t v38 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
            swift_retain();
            sub_25425042C(v38, &qword_269DD7A40);
            v28(v38, 1, 1, v68);
            swift_release();
          }
          else
          {
            double v39 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
            v28((uint64_t)v17, 1, 1, v68);
            swift_retain();
            sub_25435D340(0, 1, (uint64_t)v17, v39);
            swift_release();
            sub_25425042C((uint64_t)v17, &qword_269DD7A40);
          }
          if (*(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8))
          {
            uint64_t v22 = *(void *)(v24 + qword_269DDAFD0);
            *(unsigned char *)(v22 + 33) = 0;
            uint64_t v23 = v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
            swift_retain();
            sub_25425042C(v23, &qword_269DD7A40);
            v28(v23, 1, 1, v68);
            swift_release();
          }
          else
          {
            double v40 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
            v28((uint64_t)v17, 1, 1, v68);
            swift_retain();
            sub_25435D340(0, 1, (uint64_t)v17, v40);
            swift_release();
            sub_25425042C((uint64_t)v17, &qword_269DD7A40);
          }
          sub_254306438(a1, v25);
          swift_release();
          swift_release();
        }
      }
      else if (v25)
      {
        if (*(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8))
        {
          uint64_t v29 = v61;
          sub_25427F768(v65, v61, (uint64_t (*)(void))type metadata accessor for DKCamera);
          CGFloat v30 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
          CGFloat v31 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
          CGFloat v32 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
          CGFloat v33 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
          swift_retain_n();
          v71.origin.CGFloat x = v30;
          v71.origin.CGFloat y = v31;
          v71.size.double width = v32;
          v71.size.double height = v33;
          double v34 = 10.0;
          if (CGRectGetWidth(v71) >= 1.0e-10)
          {
            double v35 = *(double *)(v29 + 24) * 0.115;
            v72.origin.CGFloat x = v30;
            v72.origin.CGFloat y = v31;
            v72.size.double width = v32;
            v72.size.double height = v33;
            double v34 = v35 / CGRectGetWidth(v72);
          }
          sub_25427F7D0(v29, (uint64_t (*)(void))type metadata accessor for DKCamera);
        }
        else
        {
          double v34 = *(double *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
          swift_retain_n();
        }
        uint64_t v41 = *(void *)(*(void *)(v67 + v66) + 16);
        if (v34 >= *(double *)(v41 + 144)
          || (*v63 >> 62
            ? (swift_bridgeObjectRetain(),
               uint64_t v42 = sub_25436D530(),
               swift_bridgeObjectRelease(),
               uint64_t v41 = *(void *)(*(void *)(v67 + v66) + 16))
            : (uint64_t v42 = *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10)),
              v42 >= *(void *)(v41 + 152)))
        {
          v69[0] = 1;
          os_log_type_t v53 = sub_25436D000();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v69, 0xD00000000000003BLL, v64, v53);
        }
        else
        {
          (*v55)(v62, a1, v68);
          swift_retain();
          uint64_t v43 = (uint64_t)v57;
          sub_25436C7F0();
          uint64_t v44 = v67;
          uint64_t v59 = *(void *)(v67 + v60);
          if (*(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8)) {
            uint64_t v45 = -1;
          }
          else {
            uint64_t v45 = *(void *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
          }
          uint64_t v58 = v45;
          uint64_t v46 = v56;
          sub_25427F768(v65, v56, (uint64_t (*)(void))type metadata accessor for DKCamera);
          type metadata accessor for DKFaceTracker();
          swift_allocObject();
          uint64_t result = DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(v62, v41, v43, v59, v58, v46);
          uint64_t v48 = *(void *)(v44 + v60);
          BOOL v49 = __OFADD__(v48, 1);
          uint64_t v50 = v48 + 1;
          if (v49)
          {
            __break(1u);
            return result;
          }
          *(void *)(v44 + v60) = v50;
          swift_retain();
          sub_254307D34(a1, v25);
          swift_release();
          uint64_t v51 = swift_retain();
          uint64_t v52 = v63;
          MEMORY[0x25A275490](v51);
          if (*(void *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          swift_release();
        }
        swift_release_n();
      }
      v21 += 3;
      if (!--v19) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25427C004(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = sub_25436C800();
  uint64_t v8 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v75 = (char *)v55 - v11;
  uint64_t v78 = sub_25436C7B0();
  uint64_t v12 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v65 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v74 = (char *)v55 - v15;
  uint64_t v16 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v64 = (uint64_t)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v73 = (uint64_t)v55 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (double *)((char *)v55 - v21);
  uint64_t v23 = sub_2542BCDDC(*a2, *a3, 1.0);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
    uint64_t v79 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
    uint64_t v76 = (void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
    uint64_t v72 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v60 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v59 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
    v55[1] = v23;
    uint64_t v26 = (uint64_t *)(v23 + 40);
    unint64_t v77 = 0x800000025437B0C0;
    uint64_t v63 = v4;
    uint64_t v58 = v22;
    uint64_t v57 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
    uint64_t v56 = a1;
    while (1)
    {
      uint64_t v28 = *v26;
      if (*(v26 - 1))
      {
        if (v28)
        {
          swift_retain();
          swift_retain();
          sub_2543069E0(a1, v28);
          swift_release();
          swift_release();
        }
      }
      else if (v28)
      {
        if (*(unsigned char *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8))
        {
          sub_25427F768(v25, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DKCamera);
          CGFloat v29 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
          CGFloat v30 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
          CGFloat v31 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
          CGFloat v32 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
          swift_retain_n();
          v82.origin.CGFloat x = v29;
          v82.origin.CGFloat y = v30;
          v82.size.double width = v31;
          v82.size.double height = v32;
          double v33 = 10.0;
          if (CGRectGetWidth(v82) >= 1.0e-10)
          {
            double v34 = v22[3] * 0.35;
            v83.origin.CGFloat x = v29;
            v83.origin.CGFloat y = v30;
            v83.size.double width = v31;
            v83.size.double height = v32;
            double v33 = v34 / CGRectGetWidth(v83);
          }
          sub_25427F7D0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for DKCamera);
        }
        else
        {
          double v33 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
          swift_retain_n();
        }
        uint64_t v35 = *(void *)(*(void *)(v4 + v79) + 24);
        if (v33 >= *(double *)(v35 + 144)
          || (*v76 >> 62
            ? (swift_bridgeObjectRetain(),
               uint64_t v36 = sub_25436D530(),
               swift_bridgeObjectRelease(),
               uint64_t v35 = *(void *)(*(void *)(v4 + v79) + 24))
            : (uint64_t v36 = *(void *)((*v76 & 0xFFFFFFFFFFFFFF8) + 0x10)),
              v36 >= *(void *)(v35 + 152)))
        {
          v80[0] = 1;
          os_log_type_t v27 = sub_25436D000();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v80, 0xD00000000000003BLL, v77, v27);
          swift_release_n();
        }
        else
        {
          unint64_t v69 = *v62;
          uint64_t v37 = v74;
          v69(v74, a1, v78);
          swift_retain();
          sub_25436C7F0();
          uint64_t v71 = *(void *)(v4 + v72);
          if (*(unsigned char *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8)) {
            uint64_t v38 = -1;
          }
          else {
            uint64_t v38 = *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
          }
          uint64_t v70 = v38;
          uint64_t v39 = v25;
          uint64_t v40 = v73;
          sub_25427F768(v39, v73, (uint64_t (*)(void))type metadata accessor for DKCamera);
          type metadata accessor for DKBodyTracker();
          uint64_t v68 = swift_allocObject();
          uint64_t v41 = v65;
          v69(v65, (uint64_t)v37, v78);
          uint64_t v43 = v66;
          uint64_t v42 = v67;
          uint64_t v44 = v75;
          (*v61)(v66, v75, v67);
          uint64_t v45 = v40;
          uint64_t v46 = v64;
          sub_25427F768(v45, v64, (uint64_t (*)(void))type metadata accessor for DKCamera);
          uint64_t v47 = v43;
          uint64_t v48 = v63;
          sub_2543654BC(v41, v35, v47, v71, v70, v46);
          sub_25427F7D0(v73, (uint64_t (*)(void))type metadata accessor for DKCamera);
          (*v60)(v44, v42);
          uint64_t result = (*v59)(v74, v78);
          uint64_t v50 = *(void *)(v48 + v72);
          BOOL v51 = __OFADD__(v50, 1);
          uint64_t v52 = v50 + 1;
          if (v51)
          {
            __break(1u);
            return result;
          }
          uint64_t v4 = v48;
          *(void *)(v48 + v72) = v52;
          swift_retain();
          a1 = v56;
          sub_2543069E0(v56, v28);
          swift_release();
          uint64_t v53 = swift_retain();
          uint64_t v54 = v76;
          MEMORY[0x25A275490](v53);
          if (*(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          swift_release();
          swift_release_n();
          uint64_t v22 = v58;
          uint64_t v25 = v57;
        }
      }
      v26 += 3;
      if (!--v24) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25427C760(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v7 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v63 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v71 = (uint64_t)&v50 - v10;
  uint64_t v62 = sub_25436C800();
  uint64_t v11 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v70 = (char *)&v50 - v14;
  uint64_t v74 = sub_25436C7B0();
  uint64_t v15 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v60 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v73 = (char *)&v50 - v18;
  uint64_t v19 = sub_2542BCE20(*a2, *a3, 1.0);
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v59 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
    uint64_t v21 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
    uint64_t v58 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
    uint64_t v52 = (void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v55 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v54 = (uint64_t (**)(char *, uint64_t))(v15 + 8);
    uint64_t v50 = v19;
    uint64_t v22 = (uint64_t *)(v19 + 40);
    long long v72 = xmmword_25436F130;
    uint64_t v69 = v3;
    uint64_t v53 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
    uint64_t v51 = a1;
    while (1)
    {
      uint64_t v23 = *v22;
      if (*(v22 - 1))
      {
        if (v23)
        {
          swift_retain_n();
          swift_retain_n();
          sub_254306F88(a1, v23);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8050);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v72;
          *(unsigned char *)(inited + 32) = *(unsigned char *)(v23
                                             + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
          *(void *)(inited + 40) = 0x3FF0000000000000;
          unint64_t v25 = sub_2542692F8(inited);
          swift_setDeallocating();
          swift_retain();
          swift_retain();
          sub_2543130F0(v25, 1, 0);
          swift_release_n();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else if (v23)
      {
        uint64_t v26 = v69;
        uint64_t v67 = *v57;
        v67(v73, a1, v74);
        uint64_t v27 = *(void *)(*(void *)(v26 + v59) + 32);
        swift_retain_n();
        uint64_t v64 = v27;
        swift_retain();
        sub_25436C7F0();
        uint64_t v68 = *(void *)(v26 + v21);
        if (*(unsigned char *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8)) {
          uint64_t v28 = -1;
        }
        else {
          uint64_t v28 = *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
        }
        uint64_t v66 = v28;
        uint64_t v65 = type metadata accessor for DKCamera;
        uint64_t v29 = v71;
        sub_25427F768(v58, v71, (uint64_t (*)(void))type metadata accessor for DKCamera);
        type metadata accessor for DKHandTracker();
        uint64_t v30 = swift_allocObject();
        double v31 = *(double *)(v27 + 176);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8048);
        swift_allocObject();
        swift_retain();
        *(void *)(v30 + qword_269DDAFF8) = sub_2542A7F64((uint64_t)&unk_2703B23E8, v31, v31);
        swift_release();
        CGFloat v32 = v60;
        v67(v60, (uint64_t)v73, v74);
        double v33 = v61;
        double v34 = v70;
        uint64_t v35 = v62;
        (*v56)(v61, v70, v62);
        uint64_t v36 = v29;
        uint64_t v37 = v63;
        uint64_t v38 = v65;
        sub_25427F768(v36, v63, (uint64_t (*)(void))v65);
        uint64_t v39 = v32;
        uint64_t v21 = v53;
        sub_2543654BC(v39, v64, v33, v68, v66, v37);
        sub_25427F7D0(v71, (uint64_t (*)(void))v38);
        uint64_t v40 = v69;
        (*v55)(v34, v35);
        uint64_t result = (*v54)(v73, v74);
        uint64_t v42 = *(void *)(v40 + v21);
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43)
        {
          __break(1u);
          return result;
        }
        *(void *)(v40 + v21) = v44;
        swift_retain();
        uint64_t v45 = v51;
        sub_254306F88(v51, v23);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8050);
        uint64_t v46 = swift_initStackObject();
        *(_OWORD *)(v46 + 16) = v72;
        *(unsigned char *)(v46 + 32) = *(unsigned char *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
        *(void *)(v46 + 40) = 0x3FF0000000000000;
        unint64_t v47 = sub_2542692F8(v46);
        swift_setDeallocating();
        swift_retain();
        swift_retain();
        sub_2543130F0(v47, 1, 0);
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v48 = swift_retain();
        BOOL v49 = v52;
        MEMORY[0x25A275490](v48);
        if (*(void *)((*v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
        swift_release();
        swift_release_n();
        a1 = v45;
      }
      v22 += 3;
      if (!--v20) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25427CECC()
{
  uint64_t v1 = sub_25436C800();
  uint64_t v31 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_25427E8B8(v4);
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if (v6 >> 62) {
    goto LABEL_38;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_25436D530())
  {
    unint64_t v8 = 0;
    uint64_t v33 = v7;
    unint64_t v34 = v6 & 0xC000000000000001;
    unint64_t v32 = v6;
    v29[1] = v6 + 32;
    uint64_t v30 = v6 & 0xFFFFFFFFFFFFFF8;
    uint64_t v37 = v31 + 16;
    uint64_t v38 = v5 + 56;
    uint64_t v9 = (void (**)(char *, uint64_t))(v31 + 8);
    uint64_t v39 = v5;
    while (v34)
    {
      uint64_t v10 = MEMORY[0x25A275A00](v8, v32);
      BOOL v11 = __OFADD__(v8, 1);
      unint64_t v12 = v8 + 1;
      if (v11) {
        goto LABEL_35;
      }
LABEL_11:
      unint64_t v35 = v12;
      uint64_t v36 = v10;
      if (*(void *)(v5 + 16)
        && (sub_25427F2F8(&qword_269DD7E70, MEMORY[0x263F07508]),
            uint64_t v13 = sub_25436CB40(),
            uint64_t v14 = -1 << *(unsigned char *)(v5 + 32),
            unint64_t v15 = v13 & ~v14,
            ((*(void *)(v38 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0))
      {
        uint64_t v16 = ~v14;
        uint64_t v17 = *(void *)(v31 + 72);
        uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
        do
        {
          v18(v3, *(void *)(v39 + 48) + v17 * v15, v1);
          sub_25427F2F8((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
          unint64_t v6 = sub_25436CBB0();
          (*v9)(v3, v1);
          if (v6) {
            break;
          }
          unint64_t v15 = (v15 + 1) & v16;
        }
        while (((*(void *)(v38 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
      }
      else
      {
        unint64_t v6 = 0;
      }
      uint64_t v19 = v36;
      uint64_t v20 = *(void *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
      if (v20) {
        *(unsigned char *)(v20 + *(void *)(*(void *)v20 + 240)) = v6 & 1;
      }
      uint64_t v21 = *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
      uint64_t v5 = v39;
      if (v21) {
        *(unsigned char *)(v21 + *(void *)(*(void *)v21 + 240)) = v6 & 1;
      }
      unint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_25436D530();
        if (!v23) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_4;
        }
      }
      if (v23 < 1) {
        goto LABEL_36;
      }
      if ((v22 & 0xC000000000000001) != 0)
      {
        uint64_t v24 = 0;
        v6 &= 1u;
        do
        {
          uint64_t v25 = MEMORY[0x25A275A00](v24++, v22);
          *(unsigned char *)(v25 + *(void *)(*(void *)v25 + 240)) = v6;
          swift_unknownObjectRelease();
        }
        while (v23 != v24);
      }
      else
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          uint64_t v27 = *(void *)(v22 + 8 * i + 32);
          *(unsigned char *)(v27 + *(void *)(*(void *)v27 + 240)) = v6 & 1;
        }
      }
LABEL_4:
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v8 = v35;
      if (v35 == v33)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    if (v8 >= *(void *)(v30 + 16)) {
      goto LABEL_37;
    }
    uint64_t v10 = swift_retain();
    BOOL v11 = __OFADD__(v8, 1);
    unint64_t v12 = v8 + 1;
    if (!v11) {
      goto LABEL_11;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25427D380()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers) = v1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers) = v1;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers) = v1;
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_groupFilter);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v3 = MEMORY[0x263F8EE80];
  v2[6] = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  v2[3] = v3;
  swift_bridgeObjectRelease();
  v2[4] = v3;
  uint64_t v4 = MEMORY[0x263F8EE88];
  v2[7] = v1;
  v2[8] = v4;
  v2[9] = v4;
  v2[10] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId) = 0;
  return result;
}

uint64_t DKMultiSubjectTracker.deinit()
{
  sub_25427F7D0(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMultiSubjectTracker.__deallocating_deinit()
{
  DKMultiSubjectTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*sub_25427D5E8())()
{
  return nullsub_1;
}

uint64_t sub_25427D61C(uint64_t a1)
{
  return sub_25427D958(a1, (uint64_t (*)(void))sub_2542584AC, MEMORY[0x263F07508]);
}

uint64_t sub_25427D648(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_254258DB4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B78);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25427D7C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_254258C38(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25427D92C(uint64_t a1)
{
  return sub_25427D958(a1, (uint64_t (*)(void))sub_254258D80, type metadata accessor for DKDataLogStamped);
}

uint64_t sub_25427D958(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25427DB14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_254259B1C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25427DC68()
{
  return sub_25436C7D0() & 1;
}

uint64_t sub_25427DCAC()
{
  return sub_25436C7D0() & 1;
}

BOOL sub_25427DCF0()
{
  return (sub_254347640(*(void *)(v0 + 16)) & 1) == 0;
}

uint64_t sub_25427DD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_254308180(*(void *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_25427DD70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_254365ACC(*(void *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_25427DDB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_254314054(*(void *)(v1 + 16));
  *a1 = result;
  return result;
}

BOOL sub_25427DDF8()
{
  return (sub_25434989C() & 1) == 0;
}

uint64_t sub_25427DE34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_254349BD4(*(void *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_25427DE78(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_25436CE40();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25427DF14(uint64_t a1)
{
  return sub_25427DF44(a1, MEMORY[0x263F07508]);
}

uint64_t sub_25427DF2C(uint64_t a1)
{
  return sub_25427DF44(a1, (void (*)(void))type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_25427DF44(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      uint64_t v4 = sub_25436CE40();
      *(void *)(v4 + 16) = a1;
    }
    else
    {
      uint64_t v4 = MEMORY[0x263F8EE78];
    }
    ((uint64_t (*)(void))a2)(0);
    return v4;
  }
  return result;
}

uint64_t sub_25427E038(uint64_t a1)
{
  return sub_25427E080(a1, (void (*)(void))type metadata accessor for DKHandObservation);
}

uint64_t sub_25427E050(uint64_t a1)
{
  return sub_25427E080(a1, (void (*)(void))type metadata accessor for DKBodyObservation);
}

uint64_t sub_25427E068(uint64_t a1)
{
  return sub_25427E080(a1, (void (*)(void))type metadata accessor for DKFaceObservation);
}

uint64_t sub_25427E080(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_25436D4E0();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_25436CE40();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void (*sub_25427E12C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25427E248(v6, a2, a3);
  return sub_25427E194;
}

void (*sub_25427E198(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_25427E2C8(v6, a2, a3);
  return sub_25427E194;
}

void sub_25427E200(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_25427E248(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x25A275A00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_25427F8CC;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_25427E2C8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x25A275A00](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_25427E348;
  }
  __break(1u);
  return result;
}

uint64_t sub_25427E348()
{
  return swift_release();
}

uint64_t sub_25427E350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = a2;
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v42 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v60 = (char *)v42 - v15;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)v42 - v17;
  uint64_t v62 = MEMORY[0x263F8EE78];
  uint64_t v55 = *(void *)(a1 + 16);
  v42[0] = a1;
  v42[1] = v3;
  if (v55)
  {
    uint64_t v56 = (char *)v42 - v17;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v20 = v6 + 16;
    unint64_t v19 = v21;
    uint64_t v54 = a1 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v44 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers;
    uint64_t v53 = *(void *)(v20 + 56);
    BOOL v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    BOOL v49 = v10;
    uint64_t v50 = v20;
    uint64_t v52 = v13;
    BOOL v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    unint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    uint64_t v48 = v21;
    uint64_t v46 = (void (**)(char *, uint64_t))(v20 - 8);
    while (1)
    {
      uint64_t v27 = v56;
      v19(v56, v54 + v53 * v24, v5);
      uint64_t v28 = *v22;
      (*v22)(v27, 0, 1, v5);
      uint64_t v59 = *v23;
      if (v59(v27, 1, v5) == 1) {
        goto LABEL_26;
      }
      uint64_t v58 = v24;
      uint64_t v57 = *v51;
      v57(v10, v27, v5);
      uint64_t v29 = (uint64_t)v60;
      v19(v60, (uint64_t)v10, v5);
      v28((char *)v29, 0, 1, v5);
      uint64_t v30 = v29;
      uint64_t v31 = (uint64_t)v52;
      sub_2542503C8(v30, (uint64_t)v52, &qword_269DD7F58);
      if (v59((char *)v31, 1, v5) == 1)
      {
        uint64_t v25 = v28;
        sub_25425042C(v31, &qword_269DD7F58);
        uint64_t v26 = v46;
        uint64_t v10 = v49;
      }
      else
      {
        v57(v61, (char *)v31, v5);
        unint64_t v32 = *(void *)(v45 + v44);
        if (v32 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v33 = sub_25436D530();
        }
        else
        {
          uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        uint64_t v25 = v28;
        if (v33)
        {
          uint64_t v34 = 4;
          while (1)
          {
            uint64_t v35 = v34 - 4;
            if ((v32 & 0xC000000000000001) != 0)
            {
              uint64_t result = MEMORY[0x25A275A00](v34 - 4, v32);
              BOOL v37 = __OFADD__(v35, 1);
              uint64_t v38 = v34 - 3;
              if (v37) {
                goto LABEL_27;
              }
            }
            else
            {
              uint64_t result = swift_retain();
              BOOL v37 = __OFADD__(v35, 1);
              uint64_t v38 = v34 - 3;
              if (v37)
              {
LABEL_27:
                __break(1u);
                return result;
              }
            }
            if (sub_25436C7D0()) {
              break;
            }
            swift_release();
            ++v34;
            if (v38 == v33) {
              goto LABEL_19;
            }
          }
          swift_bridgeObjectRelease_n();
          uint64_t v39 = *v46;
          (*v46)(v61, v5);
          sub_25425042C((uint64_t)v60, &qword_269DD7F58);
          uint64_t v10 = v49;
          uint64_t v40 = ((uint64_t (*)(char *, uint64_t))v39)(v49, v5);
          MEMORY[0x25A275490](v40);
          uint64_t v23 = v43;
          if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          goto LABEL_5;
        }
LABEL_19:
        swift_bridgeObjectRelease_n();
        uint64_t v26 = v46;
        (*v46)(v61, v5);
        uint64_t v10 = v49;
        uint64_t v23 = v43;
      }
      sub_25425042C((uint64_t)v60, &qword_269DD7F58);
      (*v26)(v10, v5);
LABEL_5:
      BOOL v22 = v47;
      unint64_t v19 = v48;
      uint64_t v24 = v58 + 1;
      if (v58 + 1 == v55)
      {
        v25(v56, 1, 1, v5);
        goto LABEL_26;
      }
    }
  }
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  v41(v18, 1, 1, v5);
LABEL_26:
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_25427E8B8(uint64_t a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_25427F2F8(&qword_269DD7E70, MEMORY[0x263F07508]);
  uint64_t v29 = sub_25436CF60();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    BOOL v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_2542688D0(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_25427EB60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 16);
  return swift_retain();
}

uint64_t sub_25427EB70(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25427EBB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_retain();
}

uint64_t sub_25427EBC4(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25427EC08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 32);
  return swift_retain();
}

uint64_t sub_25427EC18(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 32) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25427EC5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 40);
  return swift_retain();
}

uint64_t sub_25427EC6C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 40) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_25427ECB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 48);
  return swift_retain();
}

uint64_t sub_25427ECC0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 48) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKMultiSubjectTrackerConfiguration()
{
  return self;
}

uint64_t method lookup function for DKMultiSubjectTrackerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKMultiSubjectTrackerConfiguration);
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_25427EF70()
{
  return type metadata accessor for DKMultiSubjectTracker();
}

uint64_t type metadata accessor for DKMultiSubjectTracker()
{
  uint64_t result = qword_269DD8018;
  if (!qword_269DD8018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25427EFC4()
{
  uint64_t result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C9F0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKMultiSubjectTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKMultiSubjectTracker);
}

uint64_t dispatch thunk of DKMultiSubjectTracker.__allocating_init(configuration:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getFaceTracker(uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getBodyTracker(uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getHandTracker(uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getPersonTracker(uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getFaceTrackerStates(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getBodyTrackerStates(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getHandTrackerStates(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getPersonTrackerStates(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.update(currentTime:observations:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.setSelectedTracks(uuids:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t sub_25427F2F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25427F340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25427F3A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = sub_25436C800();
  uint64_t v25 = *(void *)(v7 - 8);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v11 = sub_25436D530();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      v23[0] = a1;
      v23[1] = v4;
      unint64_t v4 = 0;
      uint64_t v29 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v30 = a1 & 0xC000000000000001;
      unint64_t v28 = a1 + 32;
      uint64_t v32 = v25 + 16;
      uint64_t v33 = a3 + 56;
      uint64_t v31 = (void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v24 = v11;
      while (1)
      {
        if (v30)
        {
          uint64_t v12 = MEMORY[0x25A275A00](v4, v23[0], v8);
          BOOL v13 = __OFADD__(v4++, 1);
          if (v13)
          {
LABEL_19:
            __break(1u);
            return v34;
          }
        }
        else
        {
          if (v4 >= *(void *)(v29 + 16))
          {
            __break(1u);
            goto LABEL_22;
          }
          uint64_t v12 = *(void *)(v28 + 8 * v4);
          swift_retain();
          BOOL v13 = __OFADD__(v4++, 1);
          if (v13) {
            goto LABEL_19;
          }
        }
        if (*(void *)(a3 + 16)
          && (unint64_t v14 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid,
              sub_25427F2F8(&qword_269DD7E70, MEMORY[0x263F07508]),
              a1 = v14,
              uint64_t v15 = sub_25436CB40(),
              uint64_t v16 = -1 << *(unsigned char *)(a3 + 32),
              unint64_t v17 = v15 & ~v16,
              ((*(void *)(v33 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
        {
          uint64_t v26 = v12;
          unint64_t v27 = v4;
          uint64_t v18 = a3;
          uint64_t v19 = ~v16;
          uint64_t v20 = *(void *)(v25 + 72);
          uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
          while (1)
          {
            v21(v10, *(void *)(v18 + 48) + v20 * v17, v7);
            sub_25427F2F8((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
            a1 = sub_25436CBB0();
            (*v31)(v10, v7);
            if (a1) {
              break;
            }
            unint64_t v17 = (v17 + 1) & v19;
            if (((*(void *)(v33 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            {
              swift_release();
              goto LABEL_16;
            }
          }
          a1 = (unint64_t)&v34;
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
LABEL_16:
          a3 = v18;
          uint64_t v11 = v24;
          unint64_t v4 = v27;
        }
        else
        {
          swift_release();
        }
        if (v4 == v11) {
          return v34;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_25427F6F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_25436CF60();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_2542683B0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_25427F768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25427F7D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25427F830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_25427F894()
{
  return sub_25427DCF0();
}

uint64_t sub_25427F8B0()
{
  return sub_25427DC68() & 1;
}

id DKRateControl.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id DKRateControl.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] = 0x4024000000000000;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] = 0x403E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = 0x4024000000000000;
  uint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed] = 0;
  uint64_t v4 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed] = 0;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed] = 0;
  *(void *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = 0;
  uint64_t v6 = v0;
  sub_25436C9E0();
  *(double *)&v0[v3] = 1.0 / *(double *)&v0[v2];
  *(double *)&v0[v4] = 1.0 / *(double *)&v0[v1];

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for DKRateControl()
{
  uint64_t result = qword_269DD80B8;
  if (!qword_269DD80B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id DKRateControl.__allocating_init(minFps:maxFps:)(double a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  return DKRateControl.init(minFps:maxFps:)(a1, a2);
}

id DKRateControl.init(minFps:maxFps:)(double a1, double a2)
{
  uint64_t v5 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] = 0x4024000000000000;
  uint64_t v6 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] = 0x403E000000000000;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = 0x4024000000000000;
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed] = 0;
  uint64_t v8 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed] = 0;
  uint64_t v9 = &v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed] = 0;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed] = 0;
  *(void *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = 0;
  uint64_t v10 = v2;
  sub_25436C9E0();
  *(double *)&v2[v5] = a1;
  *(double *)&v2[v6] = a2;
  *(double *)&v2[v7] = 1.0 / a2;
  *(double *)&v2[v8] = 1.0 / a1;

  v12.receiver = v10;
  v12.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_25427FC58(double a1)
{
  if (*(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps) == 0.0) {
    return 0;
  }
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs + 8) & 1) == 0
    && *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed) > a1 - *(double *)v3)
  {
    return 0;
  }
  *(double *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 8) = 0;
  return 1;
}

uint64_t sub_25427FCBC(double a1)
{
  double v2 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
  if (v2 == 0.0) {
    return 0;
  }
  double v4 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed) + a1;
  *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed) = v4;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed);
  if ((double)v5 / v4 > v2) {
    return 0;
  }
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed) = v7;
    return 1;
  }
  return result;
}

double sub_25427FD28(char a1, double a2)
{
  uint64_t v5 = sub_25436C9F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs);
  if (v9 == 0.0) {
    double v10 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed);
  }
  else {
    double v10 = a2 - v9;
  }
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs) = a2;
  double v11 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps);
  double v12 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
  if (v11 > 1.0 / v10) {
    double v13 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps);
  }
  else {
    double v13 = 1.0 / v10;
  }
  if (v12 >= v13) {
    double v12 = v13;
  }
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps) = v12;
  if ((a1 & 1) != 0 && 1.0 / v10 < v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_logger, v5);
    unint64_t v14 = sub_25436C9D0();
    os_log_type_t v15 = sub_25436D020();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 134217984;
      v18[1] = 1.0 / v10;
      sub_25436D180();
      _os_log_impl(&dword_254249000, v14, v15, "Running at %f FPS. Lower than minimum required FPS", v16, 0xCu);
      MEMORY[0x25A276B10](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

double sub_25427FF38()
{
  return *(double *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps);
}

double sub_25427FF48()
{
  return *(double *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
}

BOOL sub_25427FF58(double a1)
{
  return *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed)
       + *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed) < a1;
}

id DKRateControl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_254280018()
{
  return type metadata accessor for DKRateControl();
}

uint64_t sub_254280020()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKRateControl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKRateControl);
}

uint64_t dispatch thunk of DKRateControl.__allocating_init(minFps:maxFps:)()
{
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKRateControl.shouldTriggerConst(seconds:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of DKRateControl.shouldTriggerVariable(secondsDelta:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of DKRateControl.getTimeElapsed(seconds:checkFPS:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of DKRateControl.getCurrentFPS()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of DKRateControl.getMaxFPS()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of DKRateControl.isTimedOut(secondsDelta:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C0))();
}

IntelligentTrackingCore::DKIntelligentTrackingCommand::VelocityCommand __swiftcall DKIntelligentTrackingCommand.VelocityCommand.init(velocity:)(IntelligentTrackingCore::DKIntelligentTrackingCommand::VelocityCommand velocity)
{
  void *v1 = *(void *)velocity.velocity.elements._rawValue;
  return velocity;
}

uint64_t DKIntelligentTrackingCommand.__allocating_init(time:command:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  __int16 v7 = *((_WORD *)a2 + 8);
  uint64_t v8 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  uint64_t v10 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(void *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v6;
  *(_WORD *)(v10 + 16) = v7;
  return v4;
}

uint64_t DKIntelligentTrackingState.__allocating_init(time:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DKIntelligentTrackingState.init(time:)(a1);
  return v2;
}

uint64_t sub_254280368(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  __int16 v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, a1, v4);
  sub_25427D380();
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_presenceFilter);
  *(unsigned char *)(v8 + 49) = 0;
  uint64_t v9 = *(void *)(v8 + 16);
  *(unsigned char *)(v9 + 33) = 0;
  uint64_t v10 = v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  swift_retain();
  swift_retain();
  sub_25425042C(v10, &qword_269DD7A40);
  double v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v11(v10, 1, 1, v4);
  swift_release();
  swift_release();
  uint64_t v12 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks;
  swift_bridgeObjectRelease();
  *(void *)(v2 + v12) = MEMORY[0x263F8EE80];
  uint64_t v13 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject;
  sub_25425042C(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject, &qword_269DD7F58);
  uint64_t v14 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition) = 0;
  swift_bridgeObjectRelease();
  uint64_t v15 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
  sub_25425042C(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, &qword_269DD7A40);
  v11(v15, 1, 1, v4);
  uint64_t v16 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime;
  sub_25425042C(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, &qword_269DD7A40);
  v11(v16, 1, 1, v4);
  uint64_t v17 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime;
  sub_25425042C(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, &qword_269DD7A40);
  v11(v17, 1, 1, v4);
  uint64_t v18 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime;
  sub_25425042C(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, &qword_269DD7A40);
  v11(v18, 1, 1, v4);
  sub_25436C6E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v7, v4);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastHorizontalFraming) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_currentPipelineMode) = *(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config) + 89);
  uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v19) = MEMORY[0x263F8EE88];
  return result;
}

uint64_t sub_2542806C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject, &qword_269DD7F58);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, &qword_269DD7A40);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, &qword_269DD7A40);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, &qword_269DD7A40);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, &qword_269DD7A40);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2542808EC()
{
  return sub_254282690((void (*)(void))sub_2542806C8);
}

uint64_t sub_254280904@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1);
}

uint64_t sub_254280910(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t (*sub_25428091C())()
{
  return nullsub_1;
}

uint64_t sub_254280944@<X0>(uint64_t a1@<X8>)
{
  return sub_2542503C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, a1, &qword_269DD7A40);
}

uint64_t sub_254280974(uint64_t a1)
{
  return sub_254286154(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_269DD7A40);
}

uint64_t (*sub_2542809A0())()
{
  return nullsub_1;
}

uint64_t sub_2542809C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542503C8(a1, (uint64_t)v12, a5);
  return sub_254286154((uint64_t)v12, *a2 + *a6, a5);
}

uint64_t sub_254280A74@<X0>(uint64_t a1@<X8>)
{
  return sub_2542503C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, a1, &qword_269DD7808);
}

uint64_t sub_254280AA4(uint64_t a1)
{
  return sub_254286154(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_269DD7808);
}

uint64_t (*sub_254280AD0())()
{
  return nullsub_1;
}

void *sub_254280AF8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  id v2 = v1;
  return v1;
}

uint64_t sub_254280B28(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t (*sub_254280B3C())()
{
  return nullsub_1;
}

uint64_t sub_254280B64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280B74(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280B8C())()
{
  return nullsub_1;
}

uint64_t sub_254280BB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280BC4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280BDC())()
{
  return nullsub_1;
}

uint64_t sub_254280C04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280C14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280C2C())()
{
  return nullsub_1;
}

uint64_t sub_254280C54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280C64(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280C7C())()
{
  return nullsub_1;
}

uint64_t sub_254280CA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280CB4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280CCC())()
{
  return nullsub_1;
}

uint64_t sub_254280CF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280D04(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280D1C())()
{
  return nullsub_1;
}

uint64_t sub_254280D44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280D54(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280D6C())()
{
  return nullsub_1;
}

uint64_t sub_254280D94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280DA4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280DBC())()
{
  return nullsub_1;
}

uint64_t sub_254280DE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280DF4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280E0C())()
{
  return nullsub_1;
}

__n128 sub_254280E34@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_254280E54(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
}

uint64_t (*sub_254280E64())()
{
  return nullsub_1;
}

__n128 sub_254280E8C@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_254280EAC(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
}

uint64_t (*sub_254280EBC())()
{
  return nullsub_1;
}

uint64_t sub_254280EE4()
{
  return swift_retain();
}

uint64_t sub_254280EF4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = a1;
  return swift_release();
}

uint64_t (*sub_254280F0C())()
{
  return nullsub_1;
}

uint64_t sub_254280F34@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254280F48(void *a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254280F60())()
{
  return nullsub_1;
}

void sub_254280F88(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
}

unsigned char *sub_254280F9C(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = *result;
  return result;
}

uint64_t (*sub_254280FB0())()
{
  return nullsub_1;
}

void sub_254280FD8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
}

unsigned char *sub_254280FEC(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = *result;
  return result;
}

uint64_t (*sub_254281000())()
{
  return nullsub_1;
}

void sub_254281028(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
}

unsigned char *sub_25428103C(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = *result;
  return result;
}

uint64_t (*sub_254281050())()
{
  return nullsub_1;
}

void sub_254281078(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
}

unsigned char *sub_25428108C(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = *result;
  return result;
}

uint64_t (*sub_2542810A0())()
{
  return nullsub_1;
}

uint64_t sub_2542810C8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_254281104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254281120())()
{
  return nullsub_1;
}

uint64_t sub_254281148()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime);
}

uint64_t sub_254281160(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_25428117C())()
{
  return nullsub_1;
}

uint64_t sub_2542811A4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS);
}

uint64_t sub_2542811BC(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542811D8())()
{
  return nullsub_1;
}

uint64_t sub_254281200()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS);
}

uint64_t sub_254281218(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_254281234())()
{
  return nullsub_1;
}

uint64_t sub_25428125C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS);
}

uint64_t sub_254281274(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_254281290())()
{
  return nullsub_1;
}

void sub_2542812B8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
}

unsigned char *sub_2542812CC(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = *result;
  return result;
}

uint64_t (*sub_2542812E0())()
{
  return nullsub_1;
}

unint64_t sub_254281308(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 2:
      unint64_t result = 0x6172656D6163;
      break;
    case 3:
    case 4:
    case 5:
      unint64_t result = 0x6465746365746564;
      break;
    case 6:
      unint64_t result = 0x7370756F7267;
      break;
    case 7:
      unint64_t result = 0x4664656B63617274;
      break;
    case 8:
      unint64_t result = 0x4264656B63617274;
      break;
    case 9:
      unint64_t result = 0x4864656B63617274;
      break;
    case 10:
      unint64_t result = 0x5064656B63617274;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x646E616264616564;
      break;
    case 13:
      unint64_t result = 0x646E616264616564;
      break;
    case 14:
      unint64_t result = 0x646E616D6D6F63;
      break;
    case 15:
      unint64_t result = 0x736F50646E617473;
      break;
    case 16:
      unint64_t result = 0x676E696B63617274;
      break;
    case 17:
      unint64_t result = 0x4D676E696D617266;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0x6C61636974726576;
      break;
    case 20:
      unint64_t result = 0x4449707061;
      break;
    case 21:
      unint64_t result = 0x5464657370616C65;
      break;
    case 22:
      unint64_t result = 0x6576697470616461;
      break;
    case 23:
      unint64_t result = 0x50466172656D6163;
      break;
    case 24:
      unint64_t result = 0x676E696B63617274;
      break;
    case 25:
      unint64_t result = 0x656E696C65706970;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254281670(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_254281308(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_254281308(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2542816FC()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_254281308(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_254281760()
{
  sub_254281308(*v0);
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542817B4()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_254281308(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_254281814@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25428B5FC();
  *a1 = result;
  return result;
}

unint64_t sub_254281844@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_254281308(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_254281870()
{
  return sub_254281308(*v0);
}

uint64_t sub_254281878@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25428B5FC();
  *a1 = result;
  return result;
}

void sub_2542818A0(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_2542818AC(uint64_t a1)
{
  unint64_t v2 = sub_25428627C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542818E8(uint64_t a1)
{
  unint64_t v2 = sub_25428627C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingState.init(time:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  uint64_t v7 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  uint64_t v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(unsigned char *)(v8 + 32) = 1;
  uint64_t v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  uint64_t v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1, v4);
  return v1;
}

uint64_t static DKIntelligentTrackingState.decode(nsdata:)()
{
  sub_25436C530();
  swift_allocObject();
  sub_25436C520();
  uint64_t v0 = sub_25436C6B0();
  unint64_t v2 = v1;
  sub_2542861D8(&qword_269DD80C8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
  sub_25436C510();
  sub_2542564BC(v0, v2);
  swift_release();
  return v4;
}

uint64_t sub_254281D30()
{
  sub_25436C560();
  swift_allocObject();
  sub_25436C550();
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2542861D8(&qword_269DD80D8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
  uint64_t v0 = sub_25436C540();
  unint64_t v2 = v1;
  swift_release();
  uint64_t v3 = sub_25436C690();
  sub_2542564BC(v0, v2);
  return v3;
}

uint64_t sub_254281EB4()
{
  uint64_t result = sub_254281D30();
  if (result)
  {
    unint64_t v1 = (void *)result;
    uint64_t v2 = static DKIntelligentTrackingState.decode(nsdata:)();

    return v2;
  }
  return result;
}

uint64_t sub_254281F20(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  uint64_t v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  sub_25425042C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_269DD7A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  uint64_t v7 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  sub_25425042C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_269DD7808);
  uint64_t v8 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;

  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(unsigned char *)(v10 + 32) = 1;
  uint64_t v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(unsigned char *)(v11 + 32) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  uint64_t v12 = (void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  return result;
}

uint64_t sub_254282250()
{
  uint64_t v0 = sub_25436CC50();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_25436C420();
  MEMORY[0x270FA5388](v1);
  sub_25436C460();
  swift_allocObject();
  sub_25436C450();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD80E0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25436E690;
  sub_25436C400();
  sub_25436C410();
  sub_2542861D8(&qword_269DD80E8, MEMORY[0x263F06130]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD80F0);
  sub_254286220();
  sub_25436D1F0();
  sub_25436C430();
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2542861D8(&qword_269DD80D8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
  uint64_t v2 = sub_25436C440();
  unint64_t v4 = v3;
  sub_25436CC40();
  uint64_t v5 = sub_25436CC20();
  uint64_t v7 = v6;
  sub_2542564BC(v2, v4);
  swift_release();
  if (!v7) {
    return 0;
  }
  return v5;
}

uint64_t DKIntelligentTrackingState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_269DD7A40);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_269DD7808);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKIntelligentTrackingState.__deallocating_deinit()
{
  return sub_254282690((void (*)(void))DKIntelligentTrackingState.deinit);
}

uint64_t sub_254282690(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_2542826EC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v26 = (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8100);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25428627C();
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v6);
  LOBYTE(v30) = 0;
  sub_2542861D8(&qword_269DD8110, MEMORY[0x263F07490]);
  unint64_t v28 = v13;
  uint64_t v14 = v27;
  sub_25436D710();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v28, v10);
  }
  else
  {
    uint64_t v16 = (uint64_t)v25;
    uint64_t v27 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v17 = v29;
    uint64_t v18 = v26;
    sub_2542503C8(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, v26, &qword_269DD7A40);
    LOBYTE(v30) = 1;
    sub_25436D6D0();
    sub_25425042C(v18, &qword_269DD7A40);
    sub_2542503C8(v17 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v16, &qword_269DD7808);
    LOBYTE(v30) = 2;
    type metadata accessor for DKCamera();
    sub_2542861D8(&qword_269DD8118, (void (*)(uint64_t))type metadata accessor for DKCamera);
    sub_25436D6D0();
    sub_25425042C(v16, &qword_269DD7808);
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
    char v33 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8120);
    sub_2542862D0();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
    char v33 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8138);
    sub_254286374();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
    char v33 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8150);
    sub_254286418();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
    char v33 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8168);
    sub_254286BA4(&qword_269DD8170, (void (*)(void))sub_2542864BC);
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces);
    char v33 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8180);
    sub_254286510();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies);
    char v33 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8198);
    sub_2542865B4();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands);
    char v33 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD81B0);
    sub_254286658();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v17
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
    char v33 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A88);
    sub_2542866FC();
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v29
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
    char v33 = 11;
    sub_25436D6D0();
    char v19 = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 32);
    long long v20 = *(_OWORD *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 16);
    long long v30 = *(_OWORD *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
    long long v31 = v20;
    char v32 = v19;
    char v33 = 12;
    type metadata accessor for CGRect(0);
    sub_2542861D8(&qword_269DD81D8, type metadata accessor for CGRect);
    sub_25436D6D0();
    char v21 = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32);
    long long v22 = *(_OWORD *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 16);
    long long v30 = *(_OWORD *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
    long long v31 = v22;
    char v32 = v21;
    char v33 = 13;
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    char v33 = 14;
    type metadata accessor for DKIntelligentTrackingCommand(0);
    sub_2542861D8(&qword_269DD81E0, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingCommand);
    sub_25436D6D0();
    *(void *)&long long v30 = *(void *)(v29
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
    char v33 = 15;
    sub_2542867C0();
    sub_25436D6D0();
    LOBYTE(v30) = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
    char v33 = 16;
    sub_254286814();
    sub_25436D6D0();
    LOBYTE(v30) = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
    char v33 = 17;
    sub_254286868();
    sub_25436D6D0();
    LOBYTE(v30) = *(unsigned char *)(v29
                           + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
    char v33 = 18;
    sub_2542868BC();
    sub_25436D6D0();
    LOBYTE(v30) = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    char v33 = 19;
    sub_254286910();
    sub_25436D6D0();
    LOBYTE(v30) = 20;
    swift_bridgeObjectRetain();
    sub_25436D690();
    swift_bridgeObjectRelease();
    LOBYTE(v30) = 21;
    sub_25436D6B0();
    LOBYTE(v30) = 22;
    sub_25436D6B0();
    LOBYTE(v30) = 23;
    sub_25436D6B0();
    LOBYTE(v30) = 24;
    sub_25436D6B0();
    LOBYTE(v30) = *(unsigned char *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
    char v33 = 25;
    sub_254286964();
    uint64_t v23 = v28;
    sub_25436D6D0();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v23, v10);
  }
}

uint64_t DKIntelligentTrackingState.__allocating_init(from:)(uint64_t a1)
{
  return sub_254287B1C(a1, (void (*)(uint64_t))DKIntelligentTrackingState.init(from:));
}

uint64_t DKIntelligentTrackingState.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v61 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v62 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25436C7B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v65 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8218);
  uint64_t v63 = *(void *)(v82 - 8);
  double v10 = MEMORY[0x270FA5388](v82);
  uint64_t v86 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v8;
  uint64_t v12 = *(void (**)(double))(v8 + 56);
  uint64_t v81 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  uint64_t v66 = v7;
  v12(v10);
  uint64_t v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  uint64_t v14 = type metadata accessor for DKCamera();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v80 = v13;
  uint64_t v60 = v14;
  v15(v13, 1, 1);
  uint64_t v67 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;
  uint64_t v79 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  uint64_t v78 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  uint64_t v77 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  uint64_t v76 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  uint64_t v75 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  uint64_t v74 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  uint64_t v73 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  uint64_t v72 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  uint64_t v71 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  uint64_t v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  uint64_t v59 = (_OWORD *)v16;
  *(unsigned char *)(v16 + 32) = 1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(unsigned char *)(v17 + 32) = 1;
  uint64_t v68 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  uint64_t v69 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  uint64_t v55 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  uint64_t v56 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  uint64_t v57 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  uint64_t v58 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v70 = v18;
  uint64_t v19 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  uint64_t v21 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  uint64_t v22 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v23 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  uint64_t v24 = a1[3];
  unint64_t v84 = a1;
  uint64_t v85 = v1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_25428627C();
  uint64_t v25 = v83;
  sub_25436D940();
  if (v25)
  {
    uint64_t v50 = v85;
    sub_25425042C(v81, &qword_269DD7A40);
    sub_25425042C(v80, &qword_269DD7808);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKIntelligentTrackingState(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v26 = v64;
    CGRect v83 = (_OWORD *)v17;
    uint64_t v54 = (uint64_t *)v19;
    uint64_t v52 = (uint64_t *)v22;
    uint64_t v53 = v23;
    uint64_t v27 = v63;
    LOBYTE(v87) = 0;
    sub_2542861D8(&qword_269DD8220, MEMORY[0x263F07490]);
    unint64_t v28 = v65;
    sub_25436D650();
    uint64_t v30 = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v85 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v28, v66);
    LOBYTE(v87) = 1;
    uint64_t v31 = (uint64_t)v62;
    sub_25436D610();
    sub_254286154(v31, v81, &qword_269DD7A40);
    LOBYTE(v87) = 2;
    sub_2542861D8(&qword_269DD8228, (void (*)(uint64_t))type metadata accessor for DKCamera);
    uint64_t v32 = (uint64_t)v61;
    sub_25436D610();
    sub_254286154(v32, v80, &qword_269DD7808);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8120);
    char v90 = 3;
    sub_2542869B8();
    sub_25436D610();
    *(void *)(v30 + v79) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8138);
    char v90 = 4;
    sub_254286A5C();
    sub_25436D610();
    *(void *)(v30 + v78) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8150);
    char v90 = 5;
    sub_254286B00();
    sub_25436D610();
    *(void *)(v30 + v77) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8168);
    char v90 = 6;
    sub_254286BA4(&qword_269DD8260, (void (*)(void))sub_254286C14);
    sub_25436D610();
    *(void *)(v30 + v76) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8180);
    char v90 = 7;
    sub_254286C68();
    sub_25436D610();
    *(void *)(v30 + v75) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8198);
    char v90 = 8;
    sub_254286D0C();
    sub_25436D610();
    *(void *)(v30 + v74) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD81B0);
    char v90 = 9;
    sub_254286DB0();
    sub_25436D610();
    *(void *)(v85 + v73) = v87;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A88);
    char v90 = 10;
    sub_254286E54();
    sub_25436D610();
    *(void *)(v85 + v72) = v87;
    swift_bridgeObjectRelease();
    char v90 = 11;
    sub_25436D610();
    *(void *)(v85 + v71) = v87;
    swift_bridgeObjectRelease();
    type metadata accessor for CGRect(0);
    char v90 = 12;
    sub_2542861D8(&qword_269DD82B0, type metadata accessor for CGRect);
    sub_25436D610();
    char v33 = v89;
    long long v34 = v88;
    uint64_t v35 = v59;
    *uint64_t v59 = v87;
    v35[1] = v34;
    *((unsigned char *)v35 + 32) = v33;
    char v90 = 13;
    sub_25436D610();
    char v36 = v89;
    long long v37 = v88;
    uint64_t v38 = v83;
    *CGRect v83 = v87;
    v38[1] = v37;
    *((unsigned char *)v38 + 32) = v36;
    type metadata accessor for DKIntelligentTrackingCommand(0);
    char v90 = 14;
    sub_2542861D8(&qword_269DD82B8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingCommand);
    sub_25436D610();
    *(void *)(v85 + v68) = v87;
    swift_release();
    char v90 = 15;
    sub_254286EF8();
    sub_25436D610();
    *(void *)(v85 + v69) = v87;
    swift_bridgeObjectRelease();
    char v90 = 16;
    sub_254286F4C();
    sub_25436D610();
    *(unsigned char *)(v85 + v55) = v87;
    char v90 = 17;
    sub_254286FA0();
    sub_25436D610();
    *(unsigned char *)(v85 + v56) = v87;
    char v90 = 18;
    sub_254286FF4();
    sub_25436D610();
    *(unsigned char *)(v85 + v57) = v87;
    char v90 = 19;
    sub_254287048();
    sub_25436D610();
    *(unsigned char *)(v85 + v58) = v87;
    LOBYTE(v87) = 20;
    uint64_t v39 = sub_25436D5D0();
    uint64_t v40 = v70;
    uint64_t *v70 = v39;
    v40[1] = v41;
    swift_bridgeObjectRelease();
    LOBYTE(v87) = 21;
    uint64_t v42 = sub_25436D5F0();
    BOOL v43 = v54;
    *uint64_t v54 = v42;
    *((unsigned char *)v43 + 8) = v44 & 1;
    LOBYTE(v87) = 22;
    *(void *)uint64_t v20 = sub_25436D5F0();
    *(unsigned char *)(v20 + 8) = v45 & 1;
    LOBYTE(v87) = 23;
    *(void *)uint64_t v21 = sub_25436D5F0();
    *(unsigned char *)(v21 + 8) = v46 & 1;
    LOBYTE(v87) = 24;
    uint64_t v47 = sub_25436D5F0();
    uint64_t v48 = v52;
    *uint64_t v52 = v47;
    *((unsigned char *)v48 + 8) = v49 & 1;
    char v90 = 25;
    sub_25428709C();
    sub_25436D610();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v86, v82);
    uint64_t v50 = v85;
    *(unsigned char *)(v85 + v53) = v87;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  return v50;
}

uint64_t sub_25428432C@<X0>(uint64_t a1@<X8>)
{
  return sub_254287F14(&OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1);
}

uint64_t sub_254284338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_254287F94(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t (*sub_254284344())()
{
  return nullsub_1;
}

uint64_t sub_254284370@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254288074(a1, (void (*)(void))type metadata accessor for DKIntelligentTrackingState, (uint64_t (*)(uint64_t))DKIntelligentTrackingState.init(from:), a2);
}

uint64_t sub_2542843B0(void *a1)
{
  return sub_2542826EC(a1);
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.velocity.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.velocity.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.VelocityCommand.velocity.modify())()
{
  return nullsub_1;
}

uint64_t sub_25428442C()
{
  return 1;
}

uint64_t sub_254284438()
{
  return sub_25436D900();
}

uint64_t sub_254284464()
{
  return 0x797469636F6C6576;
}

uint64_t sub_25428447C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25436D7B0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_254284514(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_254284520(uint64_t a1)
{
  unint64_t v2 = sub_2542870F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25428455C(uint64_t a1)
{
  unint64_t v2 = sub_2542870F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD82F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542870F0();
  sub_25436D950();
  v9[1] = v7;
  sub_2542867C0();
  sub_25436D710();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8300);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542870F0();
  sub_25436D940();
  if (!v2)
  {
    sub_254286EF8();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_254284848@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DKIntelligentTrackingCommand.VelocityCommand.init(from:)(a1, a2);
}

uint64_t sub_254284860(void *a1)
{
  return DKIntelligentTrackingCommand.VelocityCommand.encode(to:)(a1);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.position.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.position.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.position.modify())()
{
  return nullsub_1;
}

double DKIntelligentTrackingCommand.PositionCommand.duration.getter()
{
  return *(double *)(v0 + 8);
}

void DKIntelligentTrackingCommand.PositionCommand.duration.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.duration.modify())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.relative.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.relative.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.relative.modify())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.highPriority.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.highPriority.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.highPriority.modify())()
{
  return nullsub_1;
}

IntelligentTrackingCore::DKIntelligentTrackingCommand::PositionCommand __swiftcall DKIntelligentTrackingCommand.PositionCommand.init(position:duration:relative:highPriority:)(IntelligentTrackingCore::DKVector3 position, Swift::Double duration, Swift::Bool relative, Swift::Bool highPriority)
{
  *(void *)uint64_t v4 = *(void *)position.elements._rawValue;
  *(Swift::Double *)(v4 + 8) = duration;
  *(unsigned char *)(v4 + 16) = relative;
  *(unsigned char *)(v4 + 17) = highPriority;
  result.duration = duration;
  result.position = position;
  result.relative = relative;
  return result;
}

uint64_t sub_254284978()
{
  uint64_t result = 0x6E6F697469736F70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      uint64_t result = 0x65766974616C6572;
      break;
    case 3:
      uint64_t result = 0x6F69725068676968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254284A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25428B650(a1, a2);
  *a3 = result;
  return result;
}

void sub_254284A30(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_254284A3C(uint64_t a1)
{
  unint64_t v2 = sub_254287144();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254284A78(uint64_t a1)
{
  unint64_t v2 = sub_254287144();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8308);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v9 = *((unsigned __int8 *)v1 + 16);
  v11[3] = *((unsigned __int8 *)v1 + 17);
  v11[4] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254287144();
  sub_25436D950();
  uint64_t v16 = v8;
  char v15 = 0;
  sub_2542867C0();
  sub_25436D710();
  if (!v2)
  {
    char v14 = 1;
    sub_25436D6F0();
    char v13 = 2;
    sub_25436D6E0();
    char v12 = 3;
    sub_25436D6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8318);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254287144();
  sub_25436D940();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v15[7] = 0;
  sub_254286EF8();
  sub_25436D650();
  uint64_t v9 = v16;
  v15[6] = 1;
  swift_bridgeObjectRetain();
  sub_25436D630();
  uint64_t v11 = v10;
  v15[5] = 2;
  char v12 = sub_25436D620();
  v15[4] = 3;
  char v14 = sub_25436D620();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12 & 1;
  *(unsigned char *)(a2 + 17) = v14 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_254284EFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKIntelligentTrackingCommand.PositionCommand.init(from:)(a1, a2);
}

uint64_t sub_254284F14(void *a1)
{
  return DKIntelligentTrackingCommand.PositionCommand.encode(to:)(a1);
}

uint64_t sub_254284F2C()
{
  uint64_t v1 = 0x797469636F6C6576;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F697469736F70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E616D6D6F436F6ELL;
  }
}

uint64_t sub_254284F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25428B824(a1, a2);
  *a3 = result;
  return result;
}

void sub_254284FB4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_254284FC0(uint64_t a1)
{
  unint64_t v2 = sub_254287198();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254284FFC(uint64_t a1)
{
  unint64_t v2 = sub_254287198();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254285038()
{
  return 0;
}

uint64_t sub_254285044@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_254285074(uint64_t a1)
{
  unint64_t v2 = sub_25428733C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542850B0(uint64_t a1)
{
  unint64_t v2 = sub_25428733C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542850EC()
{
  return 12383;
}

uint64_t sub_2542850FC(uint64_t a1)
{
  unint64_t v2 = sub_2542871EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254285138(uint64_t a1)
{
  unint64_t v2 = sub_2542871EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254285174()
{
  return sub_25436D930();
}

uint64_t sub_2542851B8()
{
  return sub_25436D930();
}

uint64_t sub_2542851F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_25436D7B0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_254285278(uint64_t a1)
{
  unint64_t v2 = sub_254287294();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542852B4(uint64_t a1)
{
  unint64_t v2 = sub_254287294();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingCommand.Command.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8320);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8328);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8330);
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8338);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *v1;
  uint64_t v14 = v1[1];
  unsigned int v15 = *((unsigned __int16 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254287198();
  sub_25436D950();
  if (v15 >> 14)
  {
    if (v15 >> 14 == 1)
    {
      LOBYTE(v33) = 2;
      sub_2542871EC();
      uint64_t v16 = v27;
      uint64_t v17 = v32;
      sub_25436D680();
      uint64_t v33 = v30;
      uint64_t v34 = v14;
      __int16 v35 = v15 & 0x101;
      sub_254287240();
      uint64_t v18 = v29;
      sub_25436D710();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, v17);
    }
    else
    {
      LOBYTE(v33) = 0;
      sub_25428733C();
      uint64_t v22 = v32;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, v22);
    }
  }
  else
  {
    LOBYTE(v33) = 1;
    sub_254287294();
    uint64_t v20 = v32;
    sub_25436D680();
    uint64_t v33 = v30;
    sub_2542872E8();
    uint64_t v21 = v26;
    sub_25436D710();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v13, v20);
  }
}

uint64_t DKIntelligentTrackingCommand.Command.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8370);
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8378);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8380);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8388);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  BOOL v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_254287198();
  uint64_t v16 = v48;
  sub_25436D940();
  if (!v16)
  {
    uint64_t v35 = v8;
    uint64_t v18 = v41;
    uint64_t v17 = v42;
    uint64_t v48 = v12;
    uint64_t v19 = sub_25436D660();
    if (*(void *)(v19 + 16) == 1)
    {
      if (*(unsigned char *)(v19 + 32))
      {
        if (*(unsigned char *)(v19 + 32) != 1)
        {
          LOBYTE(v44) = 2;
          sub_2542871EC();
          sub_25436D5B0();
          uint64_t v30 = v40;
          sub_254287390();
          uint64_t v32 = v36;
          sub_25436D650();
          uint64_t v33 = v48;
          (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
          uint64_t v23 = v44;
          uint64_t v21 = v45;
          if (v47) {
            __int16 v34 = 256;
          }
          else {
            __int16 v34 = 0;
          }
          __int16 v22 = v34 | v46 | 0x4000;
          uint64_t v29 = (uint64_t)v43;
          goto LABEL_16;
        }
        LOBYTE(v44) = 1;
        sub_254287294();
        sub_25436D5B0();
        sub_2542873E4();
        uint64_t v20 = v37;
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v11);
        uint64_t v21 = 0;
        __int16 v22 = 0;
        uint64_t v23 = v44;
      }
      else
      {
        LOBYTE(v44) = 0;
        sub_25428733C();
        sub_25436D5B0();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v11);
        uint64_t v23 = 0;
        uint64_t v21 = 0;
        __int16 v22 = 0x8000;
      }
      uint64_t v29 = (uint64_t)v43;
      uint64_t v30 = v40;
LABEL_16:
      *(void *)uint64_t v30 = v23;
      *(void *)(v30 + 8) = v21;
      *(_WORD *)(v30 + 16) = v22;
      return __swift_destroy_boxed_opaque_existential_1(v29);
    }
    uint64_t v24 = sub_25436D350();
    swift_allocError();
    uint64_t v25 = v14;
    uint64_t v26 = v11;
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *uint64_t v28 = &type metadata for DKIntelligentTrackingCommand.Command;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v26);
  }
  uint64_t v29 = (uint64_t)v43;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_254285D8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKIntelligentTrackingCommand.Command.init(from:)(a1, a2);
}

uint64_t sub_254285DA4(void *a1)
{
  return DKIntelligentTrackingCommand.Command.encode(to:)(a1);
}

uint64_t sub_254285DBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  return (*(uint64_t (**)(void, char *, uint64_t))(v9 + 40))(*a2 + *a5, v12, v8);
}

uint64_t sub_254285EB4@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a1);
}

uint64_t sub_254285EC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_254285F30(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_254285F3C(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_254285FAC())()
{
  return nullsub_1;
}

uint64_t sub_254285FD4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  *(void *)uint64_t v4 = *(void *)a1;
  *(void *)(v4 + 8) = v3;
  __int16 v7 = *(_WORD *)(a1 + 16);
  __int16 v8 = *(_WORD *)(v4 + 16);
  *(_WORD *)(v4 + 16) = v7;
  sub_2542503B0(v2, v3, v7);
  return sub_2542503BC(v5, v6, v8);
}

uint64_t sub_254286048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  __int16 v5 = *(_WORD *)(v2 + 16);
  *(_WORD *)(a1 + 16) = v5;
  return sub_2542503B0(v3, v4, v5);
}

uint64_t sub_254286068(uint64_t a1)
{
  __int16 v2 = *(_WORD *)(a1 + 16);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  __int16 v6 = *(_WORD *)(v3 + 16);
  *(_WORD *)(v3 + 16) = v2;
  return sub_2542503BC(v5, v4, v6);
}

uint64_t (*sub_254286094())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.init(time:command:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  __int16 v6 = *((_WORD *)a2 + 8);
  uint64_t v7 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  uint64_t v8 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  uint64_t v9 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(void *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = v5;
  *(_WORD *)(v9 + 16) = v6;
  return v2;
}

uint64_t sub_254286154(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DKIntelligentTrackingState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD83F0);
}

uint64_t sub_2542861D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254286220()
{
  unint64_t result = qword_269DD80F8;
  if (!qword_269DD80F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD80F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD80F8);
  }
  return result;
}

unint64_t sub_25428627C()
{
  unint64_t result = qword_269DD8108;
  if (!qword_269DD8108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8108);
  }
  return result;
}

unint64_t sub_2542862D0()
{
  unint64_t result = qword_269DD8128;
  if (!qword_269DD8128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8120);
    sub_2542861D8(&qword_269DD8130, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8128);
  }
  return result;
}

unint64_t sub_254286374()
{
  unint64_t result = qword_269DD8140;
  if (!qword_269DD8140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8138);
    sub_2542861D8(&qword_269DD8148, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8140);
  }
  return result;
}

unint64_t sub_254286418()
{
  unint64_t result = qword_269DD8158;
  if (!qword_269DD8158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8150);
    sub_2542861D8(&qword_269DD8160, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8158);
  }
  return result;
}

unint64_t sub_2542864BC()
{
  unint64_t result = qword_269DD8178;
  if (!qword_269DD8178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8178);
  }
  return result;
}

unint64_t sub_254286510()
{
  unint64_t result = qword_269DD8188;
  if (!qword_269DD8188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8180);
    sub_2542861D8(&qword_269DD8190, (void (*)(uint64_t))type metadata accessor for DKFaceTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8188);
  }
  return result;
}

unint64_t sub_2542865B4()
{
  unint64_t result = qword_269DD81A0;
  if (!qword_269DD81A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8198);
    sub_2542861D8(&qword_269DD81A8, (void (*)(uint64_t))type metadata accessor for DKBodyTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81A0);
  }
  return result;
}

unint64_t sub_254286658()
{
  unint64_t result = qword_269DD81B8;
  if (!qword_269DD81B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD81B0);
    sub_2542861D8(&qword_269DD81C0, (void (*)(uint64_t))type metadata accessor for DKHandTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81B8);
  }
  return result;
}

unint64_t sub_2542866FC()
{
  unint64_t result = qword_269DD81C8;
  if (!qword_269DD81C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7A88);
    sub_2542861D8(&qword_269DD81D0, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81C8);
  }
  return result;
}

uint64_t type metadata accessor for DKIntelligentTrackingCommand(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8408);
}

unint64_t sub_2542867C0()
{
  unint64_t result = qword_269DD81E8;
  if (!qword_269DD81E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81E8);
  }
  return result;
}

unint64_t sub_254286814()
{
  unint64_t result = qword_269DD81F0;
  if (!qword_269DD81F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81F0);
  }
  return result;
}

unint64_t sub_254286868()
{
  unint64_t result = qword_269DD81F8;
  if (!qword_269DD81F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD81F8);
  }
  return result;
}

unint64_t sub_2542868BC()
{
  unint64_t result = qword_269DD8200;
  if (!qword_269DD8200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8200);
  }
  return result;
}

unint64_t sub_254286910()
{
  unint64_t result = qword_269DD8208;
  if (!qword_269DD8208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8208);
  }
  return result;
}

unint64_t sub_254286964()
{
  unint64_t result = qword_269DD8210;
  if (!qword_269DD8210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8210);
  }
  return result;
}

unint64_t sub_2542869B8()
{
  unint64_t result = qword_269DD8230;
  if (!qword_269DD8230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8120);
    sub_2542861D8(&qword_269DD8238, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8230);
  }
  return result;
}

unint64_t sub_254286A5C()
{
  unint64_t result = qword_269DD8240;
  if (!qword_269DD8240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8138);
    sub_2542861D8(&qword_269DD8248, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8240);
  }
  return result;
}

unint64_t sub_254286B00()
{
  unint64_t result = qword_269DD8250;
  if (!qword_269DD8250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8150);
    sub_2542861D8(&qword_269DD8258, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8250);
  }
  return result;
}

uint64_t sub_254286BA4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8168);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254286C14()
{
  unint64_t result = qword_269DD8268;
  if (!qword_269DD8268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8268);
  }
  return result;
}

unint64_t sub_254286C68()
{
  unint64_t result = qword_269DD8270;
  if (!qword_269DD8270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8180);
    sub_2542861D8(&qword_269DD8278, (void (*)(uint64_t))type metadata accessor for DKFaceTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8270);
  }
  return result;
}

unint64_t sub_254286D0C()
{
  unint64_t result = qword_269DD8280;
  if (!qword_269DD8280)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8198);
    sub_2542861D8(&qword_269DD8288, (void (*)(uint64_t))type metadata accessor for DKBodyTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8280);
  }
  return result;
}

unint64_t sub_254286DB0()
{
  unint64_t result = qword_269DD8290;
  if (!qword_269DD8290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD81B0);
    sub_2542861D8(&qword_269DD8298, (void (*)(uint64_t))type metadata accessor for DKHandTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8290);
  }
  return result;
}

unint64_t sub_254286E54()
{
  unint64_t result = qword_269DD82A0;
  if (!qword_269DD82A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7A88);
    sub_2542861D8(&qword_269DD82A8, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82A0);
  }
  return result;
}

unint64_t sub_254286EF8()
{
  unint64_t result = qword_269DD82C0;
  if (!qword_269DD82C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82C0);
  }
  return result;
}

unint64_t sub_254286F4C()
{
  unint64_t result = qword_269DD82C8;
  if (!qword_269DD82C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82C8);
  }
  return result;
}

unint64_t sub_254286FA0()
{
  unint64_t result = qword_269DD82D0;
  if (!qword_269DD82D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82D0);
  }
  return result;
}

unint64_t sub_254286FF4()
{
  unint64_t result = qword_269DD82D8;
  if (!qword_269DD82D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82D8);
  }
  return result;
}

unint64_t sub_254287048()
{
  unint64_t result = qword_269DD82E0;
  if (!qword_269DD82E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82E0);
  }
  return result;
}

unint64_t sub_25428709C()
{
  unint64_t result = qword_269DD82E8;
  if (!qword_269DD82E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82E8);
  }
  return result;
}

unint64_t sub_2542870F0()
{
  unint64_t result = qword_269DD82F8;
  if (!qword_269DD82F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD82F8);
  }
  return result;
}

unint64_t sub_254287144()
{
  unint64_t result = qword_269DD8310;
  if (!qword_269DD8310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8310);
  }
  return result;
}

unint64_t sub_254287198()
{
  unint64_t result = qword_269DD8340;
  if (!qword_269DD8340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8340);
  }
  return result;
}

unint64_t sub_2542871EC()
{
  unint64_t result = qword_269DD8348;
  if (!qword_269DD8348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8348);
  }
  return result;
}

unint64_t sub_254287240()
{
  unint64_t result = qword_269DD8350;
  if (!qword_269DD8350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8350);
  }
  return result;
}

unint64_t sub_254287294()
{
  unint64_t result = qword_269DD8358;
  if (!qword_269DD8358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8358);
  }
  return result;
}

unint64_t sub_2542872E8()
{
  unint64_t result = qword_269DD8360;
  if (!qword_269DD8360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8360);
  }
  return result;
}

unint64_t sub_25428733C()
{
  unint64_t result = qword_269DD8368;
  if (!qword_269DD8368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8368);
  }
  return result;
}

unint64_t sub_254287390()
{
  unint64_t result = qword_269DD8398;
  if (!qword_269DD8398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8398);
  }
  return result;
}

unint64_t sub_2542873E4()
{
  unint64_t result = qword_269DD83A0;
  if (!qword_269DD83A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD83A0);
  }
  return result;
}

uint64_t sub_254287438()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v1, v3);
  uint64_t v6 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  uint64_t v8 = *(void *)(v6 + 8);
  __int16 v9 = *(_WORD *)(v6 + 16);
  type metadata accessor for DKIntelligentTrackingCommand(0);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v5, v1);
  uint64_t v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = v8;
  *(_WORD *)(v11 + 16) = v9;
  sub_2542503B0(v7, v8, v9);
  return v10;
}

uint64_t sub_254287588()
{
  if (*v0) {
    return 0x646E616D6D6F63;
  }
  else {
    return 1701669236;
  }
}

uint64_t sub_2542875BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25428B988(a1, a2);
  *a3 = result;
  return result;
}

void sub_2542875E4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2542875F0(uint64_t a1)
{
  unint64_t v2 = sub_254287A48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25428762C(uint64_t a1)
{
  unint64_t v2 = sub_254287A48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingCommand.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2542503BC(*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command), *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8), *(_WORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16));
  return v0;
}

uint64_t DKIntelligentTrackingCommand.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2542503BC(*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command), *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8), *(_WORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_25428779C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD83A8);
  uint64_t v15 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254287A48();
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v4);
  LOBYTE(v16) = 0;
  sub_2542861D8(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v11 = v14;
  sub_25436D710();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    __int16 v12 = *(_WORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16);
    long long v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
    __int16 v17 = v12;
    char v18 = 1;
    sub_254287A9C();
    sub_25436D710();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
}

unint64_t sub_254287A48()
{
  unint64_t result = qword_269DD83B0;
  if (!qword_269DD83B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD83B0);
  }
  return result;
}

unint64_t sub_254287A9C()
{
  unint64_t result = qword_269DD83B8;
  if (!qword_269DD83B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD83B8);
  }
  return result;
}

uint64_t DKIntelligentTrackingCommand.__allocating_init(from:)(uint64_t a1)
{
  return sub_254287B1C(a1, (void (*)(uint64_t))DKIntelligentTrackingCommand.init(from:));
}

uint64_t sub_254287B1C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t DKIntelligentTrackingCommand.init(from:)(void *a1)
{
  uint64_t v17 = sub_25436C7B0();
  uint64_t v15 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD83C0);
  uint64_t v4 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254287A48();
  sub_25436D940();
  if (v2)
  {
    type metadata accessor for DKIntelligentTrackingCommand(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v4;
    uint64_t v7 = v15;
    LOBYTE(v18) = 0;
    sub_2542861D8(&qword_269DD8220, MEMORY[0x263F07490]);
    uint64_t v8 = v16;
    sub_25436D650();
    uint64_t v9 = *(void (**)(void))(v7 + 32);
    v13[1] = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
    v9();
    char v20 = 1;
    sub_254287EB4();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v8);
    __int16 v11 = v19;
    uint64_t v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(_OWORD *)uint64_t v12 = v18;
    *(_WORD *)(v12 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

unint64_t sub_254287EB4()
{
  unint64_t result = qword_269DD83C8;
  if (!qword_269DD83C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD83C8);
  }
  return result;
}

uint64_t sub_254287F08@<X0>(uint64_t a1@<X8>)
{
  return sub_254287F14(&OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a1);
}

uint64_t sub_254287F14@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_254287F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_254287F94(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_254287F94(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *v4 + *a4;
  uint64_t v7 = sub_25436C7B0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40);
  return v8(v6, a1, v7);
}

uint64_t (*sub_254288008())()
{
  return nullsub_1;
}

uint64_t sub_254288034@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254288074(a1, (void (*)(void))type metadata accessor for DKIntelligentTrackingCommand, (uint64_t (*)(uint64_t))DKIntelligentTrackingCommand.init(from:), a2);
}

uint64_t sub_254288074@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_2542880E4(void *a1)
{
  return sub_25428779C(a1);
}

uint64_t sub_254288108@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a2);
}

uint64_t sub_254288114(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254285DBC(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t sub_254288134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542503C8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, a2, &qword_269DD7A40);
}

uint64_t sub_254288168(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542809C8(a1, a2, a3, a4, &qword_269DD7A40, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime);
}

uint64_t sub_254288190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542503C8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, a2, &qword_269DD7808);
}

uint64_t sub_2542881C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542809C8(a1, a2, a3, a4, &qword_269DD7808, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera);
}

id sub_2542881EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *a2 = v2;
  return v2;
}

void sub_254288204(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = *a1;
  id v3 = v2;
}

uint64_t sub_254288254@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces, a2);
}

uint64_t sub_254288260(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
}

uint64_t sub_25428826C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies, a2);
}

uint64_t sub_254288278(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
}

uint64_t sub_254288284@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands, a2);
}

uint64_t sub_254288290(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
}

uint64_t sub_25428829C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups, a2);
}

uint64_t sub_2542882A8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
}

uint64_t sub_2542882B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces, a2);
}

uint64_t sub_2542882C0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces);
}

uint64_t sub_2542882CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies, a2);
}

uint64_t sub_2542882D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies);
}

uint64_t sub_2542882E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands, a2);
}

uint64_t sub_2542882F0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands);
}

uint64_t sub_2542882FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople, a2);
}

uint64_t sub_254288308(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
}

uint64_t sub_254288314@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects, a2);
}

uint64_t sub_254288320(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
}

double sub_25428832C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = keypath_get_31Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D, a2).n128_u64[0];
  return result;
}

double sub_254288338(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_32Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D).n128_u64[0];
  return result;
}

double sub_254288344@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = keypath_get_31Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D, a2).n128_u64[0];
  return result;
}

__n128 keypath_get_31Tm@<Q0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3 = *a1 + *a2;
  char v4 = *(unsigned char *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v3;
  *(_OWORD *)(a3 + 16) = v6;
  *(unsigned char *)(a3 + 32) = v4;
  return result;
}

double sub_254288370(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_32Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D).n128_u64[0];
  return result;
}

__n128 keypath_set_32Tm(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *a2 + *a5;
  __n128 result = *(__n128 *)a1;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 16) = v8;
  *(unsigned char *)(v6 + 32) = v5;
  return result;
}

uint64_t sub_25428839C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
  return swift_retain();
}

uint64_t sub_2542883B4(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_254288400@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_13Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition, a2);
}

uint64_t keypath_get_13Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  *a3 = *(void *)(*a1 + *a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254288420(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
}

uint64_t keypath_set_14Tm(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)(*a2 + *a5) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_254288474@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
  return result;
}

unsigned char *sub_25428848C(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = *result;
  return result;
}

void *sub_2542884A4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
  return result;
}

unsigned char *sub_2542884BC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = *result;
  return result;
}

void *sub_2542884D4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
  return result;
}

unsigned char *sub_2542884EC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = *result;
  return result;
}

void *sub_254288504@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
  return result;
}

unsigned char *sub_25428851C(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = *result;
  return result;
}

uint64_t sub_254288534@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  uint64_t v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_254288550(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *char v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_2542885A0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542885C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime);
}

void *sub_2542885D0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542885F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS);
}

void *sub_254288600@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_254288624(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS);
}

void *sub_254288630@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_254288654(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS);
}

uint64_t keypath_set_50Tm(uint64_t result, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *(unsigned char *)(result + 8);
  uint64_t v6 = *a2 + *a5;
  *(void *)uint64_t v6 = *(void *)result;
  *(unsigned char *)(v6 + 8) = v5;
  return result;
}

void *sub_254288680@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
  return result;
}

unsigned char *sub_254288698(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = *result;
  return result;
}

uint64_t sub_2542886B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a3, v4, v5);
}

uint64_t sub_254288730(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254285DBC(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_254288750@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = v4;
  __int16 v5 = *(_WORD *)(v2 + 16);
  *(_WORD *)(a2 + 16) = v5;
  return sub_2542503B0(v3, v4, v5);
}

uint64_t sub_254288778()
{
  return type metadata accessor for DKIntelligentTrackingInternalState(0);
}

uint64_t type metadata accessor for DKIntelligentTrackingInternalState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD83D0);
}

void sub_2542887A0()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_254289B38(319, (unint64_t *)&qword_269DD83E0, MEMORY[0x263F07508]);
    if (v1 <= 0x3F)
    {
      sub_254289B38(319, (unint64_t *)&qword_269DD83E8, MEMORY[0x263F07490]);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_254288964()
{
  return type metadata accessor for DKIntelligentTrackingState(0);
}

void sub_25428896C()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_254289B38(319, (unint64_t *)&qword_269DD83E8, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_254289B38(319, &qword_269DD8400, (void (*)(uint64_t))type metadata accessor for DKCamera);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DKIntelligentTrackingState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKIntelligentTrackingState);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 616);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 640);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 832))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 856))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 880))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 904))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.__allocating_init(time:)()
{
  return (*(uint64_t (**)(void))(v0 + 944))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.encode()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.copy()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.reset(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 992))();
}

void sub_254289B38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25436D130();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_254289B8C()
{
  return type metadata accessor for DKIntelligentTrackingCommand(0);
}

uint64_t sub_254289B94()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKIntelligentTrackingCommand(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKIntelligentTrackingCommand);
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.__allocating_init(time:command:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.copy()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.VelocityCommand()
{
  return &type metadata for DKIntelligentTrackingCommand.VelocityCommand;
}

uint64_t destroy for DKIntelligentTrackingCommand.PositionCommand()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s23IntelligentTrackingCore28DKIntelligentTrackingCommandC15PositionCommandVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingCommand.PositionCommand(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKIntelligentTrackingCommand.PositionCommand(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.PositionCommand()
{
  return &type metadata for DKIntelligentTrackingCommand.PositionCommand;
}

uint64_t destroy for DKIntelligentTrackingCommand.Command(uint64_t a1)
{
  return sub_2542503BC(*(void *)a1, *(void *)(a1 + 8), *(_WORD *)(a1 + 16));
}

uint64_t _s23IntelligentTrackingCore28DKIntelligentTrackingCommandC7CommandOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  __int16 v5 = *(_WORD *)(a2 + 16);
  sub_2542503B0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingCommand.Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  __int16 v5 = *(_WORD *)(a2 + 16);
  sub_2542503B0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  __int16 v8 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_2542503BC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DKIntelligentTrackingCommand.Command(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int16 v6 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_2542503BC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.Command(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (*(_WORD *)(a1 + 16) & 0x3E00 | (*(unsigned __int16 *)(a1 + 16) >> 14) & 0xFFFFFE03 | (4
                                                                                            * (*(_WORD *)(a1 + 16) >> 1))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.Command(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 16382;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_25428A134(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 16);
  int v2 = (__int16)v1;
  unsigned int v3 = v1 >> 14;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25428A154(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0x3FFFu;
  return result;
}

uint64_t sub_25428A164(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x101 | ((_WORD)a2 << 14);
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(_WORD *)(result + 16) = 0x8000;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command()
{
  return &type metadata for DKIntelligentTrackingCommand.Command;
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25428A26CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingCommand.Command.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25428A370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys;
}

uint64_t sub_25428A3C4()
{
  return 0;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.VelocityCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.PositionCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25428A548);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.PositionCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKVector3.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s23IntelligentTrackingCore28DKIntelligentTrackingCommandC7CommandO18VelocityCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25428A66CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *__n128 result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25428A800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingState.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingState.CodingKeys;
}

unint64_t sub_25428A83C()
{
  unint64_t result = qword_269DD8418;
  if (!qword_269DD8418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8418);
  }
  return result;
}

unint64_t sub_25428A894()
{
  unint64_t result = qword_269DD8420;
  if (!qword_269DD8420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8420);
  }
  return result;
}

unint64_t sub_25428A8EC()
{
  unint64_t result = qword_269DD8428;
  if (!qword_269DD8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8428);
  }
  return result;
}

unint64_t sub_25428A944()
{
  unint64_t result = qword_269DD8430;
  if (!qword_269DD8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8430);
  }
  return result;
}

unint64_t sub_25428A99C()
{
  unint64_t result = qword_269DD8438;
  if (!qword_269DD8438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8438);
  }
  return result;
}

unint64_t sub_25428A9F4()
{
  unint64_t result = qword_269DD8440;
  if (!qword_269DD8440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8440);
  }
  return result;
}

unint64_t sub_25428AA4C()
{
  unint64_t result = qword_269DD8448;
  if (!qword_269DD8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8448);
  }
  return result;
}

unint64_t sub_25428AAA4()
{
  unint64_t result = qword_269DD8450;
  if (!qword_269DD8450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8450);
  }
  return result;
}

unint64_t sub_25428AAFC()
{
  unint64_t result = qword_269DD8458;
  if (!qword_269DD8458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8458);
  }
  return result;
}

unint64_t sub_25428AB54()
{
  unint64_t result = qword_269DD8460;
  if (!qword_269DD8460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8460);
  }
  return result;
}

unint64_t sub_25428ABAC()
{
  unint64_t result = qword_269DD8468;
  if (!qword_269DD8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8468);
  }
  return result;
}

unint64_t sub_25428AC04()
{
  unint64_t result = qword_269DD8470;
  if (!qword_269DD8470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8470);
  }
  return result;
}

unint64_t sub_25428AC5C()
{
  unint64_t result = qword_269DD8478;
  if (!qword_269DD8478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8478);
  }
  return result;
}

unint64_t sub_25428ACB4()
{
  unint64_t result = qword_269DD8480;
  if (!qword_269DD8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8480);
  }
  return result;
}

unint64_t sub_25428AD0C()
{
  unint64_t result = qword_269DD8488;
  if (!qword_269DD8488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8488);
  }
  return result;
}

unint64_t sub_25428AD64()
{
  unint64_t result = qword_269DD8490;
  if (!qword_269DD8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8490);
  }
  return result;
}

unint64_t sub_25428ADBC()
{
  unint64_t result = qword_269DD8498;
  if (!qword_269DD8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8498);
  }
  return result;
}

unint64_t sub_25428AE14()
{
  unint64_t result = qword_269DD84A0;
  if (!qword_269DD84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84A0);
  }
  return result;
}

unint64_t sub_25428AE6C()
{
  unint64_t result = qword_269DD84A8;
  if (!qword_269DD84A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84A8);
  }
  return result;
}

unint64_t sub_25428AEC4()
{
  unint64_t result = qword_269DD84B0;
  if (!qword_269DD84B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84B0);
  }
  return result;
}

unint64_t sub_25428AF1C()
{
  unint64_t result = qword_269DD84B8;
  if (!qword_269DD84B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84B8);
  }
  return result;
}

unint64_t sub_25428AF74()
{
  unint64_t result = qword_269DD84C0;
  if (!qword_269DD84C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84C0);
  }
  return result;
}

unint64_t sub_25428AFCC()
{
  unint64_t result = qword_269DD84C8;
  if (!qword_269DD84C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD84C8);
  }
  return result;
}

uint64_t sub_25428B020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v39 = a1;
  uint64_t v40 = a3;
  uint64_t v6 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  __int16 v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = MEMORY[0x263F8EE80];
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime) = MEMORY[0x263F8EE80];
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime) = v14;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks) = v14;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition) = 0;
  uint64_t v15 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject;
  uint64_t v16 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
  uint64_t v18 = sub_25436C7B0();
  uint64_t v42 = *(void *)(v18 - 8);
  __int16 v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v19(v17, 1, 1, v18);
  v19(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, 1, 1, v18);
  v19(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, 1, 1, v18);
  v19(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, 1, 1, v18);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise) = 1;
  uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_presenceFilter;
  v19((uint64_t)v13, 1, 1, v18);
  type metadata accessor for DKBinaryProbabilityFilter();
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 49) = 0;
  *(void *)(v21 + 24) = 0x3FE0000000000000;
  sub_2542503C8((uint64_t)v13, (uint64_t)v11, &qword_269DD7A40);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  uint64_t v22 = sub_25435D778(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v11, 0, 1, 0.1, 0, 1);
  sub_25425042C((uint64_t)v13, &qword_269DD7A40);
  *(void *)(v21 + 16) = v22;
  *(void *)(v21 + 32) = 0x3FE8000000000000;
  *(void *)(v21 + 40) = 0x3FD0000000000000;
  *(unsigned char *)(v21 + 48) = 0;
  *(void *)(v4 + v20) = v21;
  sub_25436C6E0();
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastHorizontalFraming) = 0;
  uint64_t v23 = (void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_appID);
  void *v23 = 0;
  v23[1] = 0xE000000000000000;
  uint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = MEMORY[0x263F8EE78];
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_trackingFPSTracker;
  type metadata accessor for DKFPSTracker();
  uint64_t v26 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D0);
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  *(void *)(v26 + 16) = v27;
  *(void *)(v26 + 24) = v24;
  *(void *)(v4 + v25) = v26;
  uint64_t v28 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_inputBuffer;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D8);
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  void v29[2] = v30;
  v29[3] = v24;
  v29[4] = 1;
  *(void *)(v4 + v28) = v29;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config) = a2;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  uint64_t v32 = v39;
  v31(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v39, v18);
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tf) = v40;
  type metadata accessor for DKMultiSubjectTrackerConfiguration();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v33 = DKMultiSubjectTrackerConfiguration.init()();
  uint64_t v34 = v41;
  sub_25428C38C(v41);
  type metadata accessor for DKMultiSubjectTracker();
  swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker) = DKMultiSubjectTracker.init(configuration:camera:)((uint64_t)v33, v34);
  v31(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v32, v18);
  long long v35 = *(_OWORD *)(a2 + 136);
  v43[0] = *(_OWORD *)(a2 + 120);
  v43[1] = v35;
  v43[2] = *(_OWORD *)(a2 + 152);
  type metadata accessor for DKAdaptiveFramerate();
  swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate) = sub_254367204((double *)v43);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_currentPipelineMode) = *(unsigned char *)(a2 + 89);
  type metadata accessor for DKFramingEngine();
  swift_allocObject();
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_254330088(v36);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v18);
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine) = v37;
  return v4;
}

uint64_t sub_25428B5FC()
{
  unint64_t v0 = sub_25436D7E0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

uint64_t sub_25428B650(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65766974616C6572 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69725068676968 && a2 == 0xEC00000079746972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_25428B824(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E616D6D6F436F6ELL && a2 == 0xE900000000000064;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25428B988(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t DKCameraManager.imuEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_25428BA78()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    type metadata accessor for DKIMUManager();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = 0;
    *(void *)(v1 + 24) = 0;
    *(unsigned char *)(v1 + 32) = 1;
    sub_25436C9E0();
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F01788]), sel_init);
    uint64_t v3 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = v2;

    *(void *)(v0 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

id sub_25428BB5C()
{
  return *(id *)(v0 + 32);
}

uint64_t sub_25428BB64(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t sub_25428BB70(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25428CF24(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return sub_25428C90C((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

uint64_t sub_25428BC1C@<X0>(uint64_t a1@<X8>)
{
  return sub_25428CF24(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, a1, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_25428BC58(uint64_t a1)
{
  return sub_25428C90C(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

uint64_t (*sub_25428BC68())()
{
  return nullsub_1;
}

void sub_25428BC90(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

void sub_25428BCA4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera + 1);
}

uint64_t DKCameraManager.__allocating_init(imuEnabled:camera:)(char a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DKCameraManager.init(imuEnabled:camera:)(a1, a2);
  return v4;
}

uint64_t DKCameraManager.init(imuEnabled:camera:)(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  __int16 v11 = (char *)&v16 - v10;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_movingThreshold) = 0x3FB999999999999ALL;
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_notMovingThreshold) = 0x3FA999999999999ALL;
  sub_25436C9E0();
  *(unsigned char *)(v3 + 16) = a1;
  sub_25428CF24(a2, v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25436C7A0();
  uint64_t v12 = sub_25436C7B0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  type metadata accessor for DKBinaryProbabilityFilter();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 49) = 0;
  *(void *)(v13 + 24) = 0x3FE0000000000000;
  sub_254272818((uint64_t)v11, (uint64_t)v8);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  uint64_t v14 = sub_25435D778(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v8, 0, 1, 0.1, 0, 1);
  sub_25425042C((uint64_t)v11, &qword_269DD7A40);
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 32) = 0x3FB999999999999ALL;
  *(void *)(v13 + 40) = 0x3FA999999999999ALL;
  *(unsigned char *)(v13 + 48) = 0;
  sub_25428CA3C(a2, (uint64_t (*)(void))type metadata accessor for DKCamera);
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_isMovingFilter) = v13;
  return v3;
}

id sub_25428BFA0(uint64_t a1)
{
  objc_msgSend(*(id *)(v1 + 32), sel_lock);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera;
  sub_25428CA3C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428CF24(a1, v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v4 = *(void **)(v1 + 32);
  return objc_msgSend(v4, sel_unlock);
}

uint64_t sub_25428C030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DKMotion3();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  __int16 v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v3 + 16) & 1) == 0)
  {
    sub_25428CF24(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DKCamera);
    sub_25428C970((uint64_t)&v14[*(int *)(v12 + 32)], a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  sub_25428BA78();
  sub_254332270((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_25425042C((uint64_t)v7, &qword_269DD7810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v8);
  }
  sub_25428C970((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera) == 1) {
    goto LABEL_13;
  }
  uint64_t v16 = *(int *)(v8 + 20);
  uint64_t v17 = *(double **)&v11[v16];
  if (*((void *)v17 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    double v2 = v17[5];
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_8;
    }
  }
  uint64_t v17 = (double *)sub_2543631E4(v17);
LABEL_8:
  if (*((void *)v17 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v17[5] = -v2;
    *(void *)&v11[v16] = v17;
    uint64_t v16 = *(int *)(v8 + 24);
    uint64_t v17 = *(double **)&v11[v16];
    if (*((void *)v17 + 2) >= 2uLL)
    {
      double v2 = v17[5];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  uint64_t result = (uint64_t)sub_2543631E4(v17);
  uint64_t v17 = (double *)result;
LABEL_11:
  if (*((void *)v17 + 2) >= 2uLL)
  {
    v17[5] = -v2;
    *(void *)&v11[v16] = v17;
LABEL_13:
    sub_25428CF24((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    return sub_25428CA3C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  }
  __break(1u);
  return result;
}

id sub_25428C38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DKMotion3();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + 32), sel_lock);
  sub_25428CF24(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428C030((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_25428C970((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    sub_25428C9D8((uint64_t)v13, (uint64_t)&v16[*(int *)(v14 + 32)]);
    uint64_t v17 = *(void *)&v13[*(int *)(v10 + 24)];
    unint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      if (v18 >= 4)
      {
        uint64_t v19 = v18 & 0x7FFFFFFFFFFFFFFCLL;
        uint64_t v21 = (float64x2_t *)(v17 + 48);
        double v20 = 0.0;
        uint64_t v22 = v18 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v23 = vmulq_f64(v21[-1], v21[-1]);
          float64x2_t v24 = vmulq_f64(*v21, *v21);
          double v20 = v20 + v23.f64[0] + v23.f64[1] + v24.f64[0] + v24.f64[1];
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v18 == v19) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v19 = 0;
        double v20 = 0.0;
      }
      unint64_t v25 = v18 - v19;
      uint64_t v26 = (double *)(v17 + 8 * v19 + 32);
      do
      {
        double v27 = *v26++;
        double v20 = v20 + v27 * v27;
        --v25;
      }
      while (v25);
    }
    else
    {
      double v20 = 0.0;
    }
LABEL_12:
    double v28 = sqrt(v20);
    swift_retain();
    sub_25436C790();
    uint64_t v29 = sub_25436C7B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 0, 1, v29);
    swift_retain();
    sub_25435D340(0, 1, (uint64_t)v6, v28);
    swift_release();
    swift_release();
    sub_25425042C((uint64_t)v6, &qword_269DD7A40);
    uint64_t v30 = sub_254272A08();
    sub_25428CA3C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    char v31 = *(unsigned char *)(v30 + 16);
    swift_release();
    v16[*(int *)(v14 + 36)] = (v31 & 1) == 0;
    goto LABEL_13;
  }
  sub_25425042C((uint64_t)v9, &qword_269DD7810);
LABEL_13:
  sub_25428C970((uint64_t)v16, a1, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return objc_msgSend(*(id *)(v2 + 32), sel_unlock);
}

uint64_t DKCameraManager.deinit()
{
  swift_release();

  sub_25428CA3C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKCameraManager.__deallocating_deinit()
{
  swift_release();

  sub_25428CA3C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_25428C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25428C970(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25428C9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_25428CA3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25428CA9C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_retain();
}

uint64_t sub_25428CAAC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

id sub_25428CAF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)a1 + 32);
  *a2 = v2;
  return v2;
}

void sub_25428CB00(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*(void *)a2 + 32);
  *(void *)(*(void *)a2 + 32) = *a1;
  id v3 = v2;
}

uint64_t sub_25428CB48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25428CF24(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, a2, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_25428CB8C()
{
  return type metadata accessor for DKCameraManager();
}

uint64_t type metadata accessor for DKCameraManager()
{
  uint64_t result = qword_269DD8500;
  if (!qword_269DD8500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25428CBE0()
{
  uint64_t result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C9F0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKCameraManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKCameraManager);
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKCameraManager.imuManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKCameraManager.lock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKCameraManager.lock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKCameraManager.lock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKCameraManager.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKCameraManager.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKCameraManager.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKCameraManager.port.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKCameraManager.cameraOrientation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKCameraManager.__allocating_init(imuEnabled:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of DKCameraManager.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKCameraManager.getCamera()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t sub_25428CF24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25428CF8C()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25428D098, 0, 0);
}

uint64_t sub_25428D098()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition);
  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued;
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued) & 1) == 0)
    {
      uint64_t v5 = v0[8];
      uint64_t v6 = v0[3];
      uint64_t v7 = v0[4];
      sub_254272818(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v5);
      int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
      uint64_t v9 = v0[8];
      if (v8 == 1)
      {
        sub_254258BD8(v0[8]);
      }
      else
      {
        uint64_t v11 = v0[4];
        uint64_t v10 = v0[5];
        uint64_t v13 = v0[2];
        uint64_t v12 = v0[3];
        swift_bridgeObjectRetain();
        sub_254258BD8(v9);
        *(unsigned char *)(v1 + v4) = 1;
        uint64_t v14 = *(void *)(v13 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v12);
        type metadata accessor for DKIntelligentTrackingCommand(0);
        uint64_t v15 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v10, v12);
        uint64_t v16 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
        *(void *)uint64_t v16 = v3;
        *(void *)(v16 + 8) = 0x4000000000000000;
        *(_WORD *)(v16 + 16) = 0x4000;
        *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v15;
        swift_release();
      }
    }
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = v0[3];
  uint64_t v19 = v0[4];
  sub_254272818(*(void *)(v1 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v17);
  LODWORD(v18) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  sub_254258BD8(v17);
  if (v18 == 1)
  {
    uint64_t v20 = v0[6];
    uint64_t v21 = v0[3];
    uint64_t v22 = v0[4];
    uint64_t v23 = *(void *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, *(void *)(v0[2] + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v21);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    sub_254277464(v20, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  float64x2_t v24 = (uint64_t (*)(uint64_t))v0[1];
  return v24(1);
}

uint64_t sub_25428D33C()
{
  return sub_254258BD8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime);
}

uint64_t sub_25428D34C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_254258BD8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime);
  return swift_deallocClassInstance();
}

uint64_t sub_25428D420()
{
  return type metadata accessor for DKStartupTask();
}

uint64_t type metadata accessor for DKStartupTask()
{
  uint64_t result = qword_269DD8510;
  if (!qword_269DD8510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25428D474()
{
  sub_25428D510();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_25428D510()
{
  if (!qword_269DD83E8)
  {
    sub_25436C7B0();
    unint64_t v0 = sub_25436D130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DD83E8);
    }
  }
}

uint64_t sub_25428D568()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid;
  uint64_t v4 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_25428D64C()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(_OWORD *)(v0 + 32) = xmmword_254370C90;
  *(unsigned char *)(v0 + 56) = 0;
  uint64_t v2 = sub_254258C58(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  int64_t v5 = v3 >> 1;
  unint64_t v6 = v4 + 1;
  if (v3 >> 1 <= v4)
  {
    uint64_t v2 = sub_254258C58((char *)(v3 > 1), v4 + 1, 1, v2);
    unint64_t v3 = *((void *)v2 + 3);
    int64_t v5 = v3 >> 1;
  }
  *((void *)v2 + 2) = v6;
  uint64_t v7 = &v2[3 * v4];
  *((_WORD *)v7 + 16) = 256;
  v7[34] = 0;
  unint64_t v8 = v4 + 2;
  if (v5 < (uint64_t)(v4 + 2)) {
    uint64_t v2 = sub_254258C58((char *)(v3 > 1), v4 + 2, 1, v2);
  }
  *((void *)v2 + 2) = v8;
  uint64_t v9 = &v2[3 * v6];
  *((_WORD *)v9 + 16) = 513;
  v9[34] = 1;
  unint64_t v10 = *((void *)v2 + 3);
  unint64_t v11 = v4 + 3;
  if ((uint64_t)(v4 + 3) > (uint64_t)(v10 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v10 > 1), v4 + 3, 1, v2);
  }
  *((void *)v2 + 2) = v11;
  uint64_t v12 = &v2[3 * v8];
  *((_WORD *)v12 + 16) = 1;
  v12[34] = 2;
  unint64_t v13 = *((void *)v2 + 3);
  unint64_t v14 = v4 + 4;
  if ((uint64_t)(v4 + 4) > (uint64_t)(v13 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v13 > 1), v4 + 4, 1, v2);
  }
  *((void *)v2 + 2) = v14;
  uint64_t v15 = &v2[3 * v11];
  *((_WORD *)v15 + 16) = 770;
  v15[34] = 3;
  unint64_t v16 = *((void *)v2 + 3);
  unint64_t v17 = v4 + 5;
  if ((uint64_t)(v4 + 5) > (uint64_t)(v16 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v16 > 1), v4 + 5, 1, v2);
  }
  *((void *)v2 + 2) = v17;
  uint64_t v18 = &v2[3 * v14];
  *((_WORD *)v18 + 16) = 2;
  v18[34] = 2;
  unint64_t v19 = *((void *)v2 + 3);
  unint64_t v20 = v4 + 6;
  if ((uint64_t)(v4 + 6) > (uint64_t)(v19 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v19 > 1), v4 + 6, 1, v2);
  }
  *((void *)v2 + 2) = v20;
  uint64_t v21 = &v2[3 * v17];
  *((_WORD *)v21 + 16) = 1027;
  v21[34] = 4;
  unint64_t v22 = *((void *)v2 + 3);
  unint64_t v23 = v4 + 7;
  if ((uint64_t)(v4 + 7) > (uint64_t)(v22 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v22 > 1), v4 + 7, 1, v2);
  }
  *((void *)v2 + 2) = v23;
  float64x2_t v24 = &v2[3 * v20];
  *((_WORD *)v24 + 16) = 259;
  v24[34] = 2;
  unint64_t v25 = *((void *)v2 + 3);
  unint64_t v26 = v4 + 8;
  if ((uint64_t)(v4 + 8) > (uint64_t)(v25 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v25 > 1), v4 + 8, 1, v2);
  }
  *((void *)v2 + 2) = v26;
  double v27 = &v2[3 * v23];
  *((_WORD *)v27 + 16) = 3;
  v27[34] = 6;
  unint64_t v28 = *((void *)v2 + 3);
  unint64_t v29 = v4 + 9;
  if ((uint64_t)(v4 + 9) > (uint64_t)(v28 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v28 > 1), v4 + 9, 1, v2);
  }
  *((void *)v2 + 2) = v29;
  uint64_t v30 = &v2[3 * v26];
  *((_WORD *)v30 + 16) = 515;
  v30[34] = 5;
  unint64_t v31 = *((void *)v2 + 3);
  unint64_t v32 = v4 + 10;
  if ((uint64_t)(v4 + 10) > (uint64_t)(v31 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v31 > 1), v4 + 10, 1, v2);
  }
  *((void *)v2 + 2) = v32;
  uint64_t v33 = &v2[3 * v29];
  *((_WORD *)v33 + 16) = 516;
  v33[34] = 2;
  unint64_t v34 = *((void *)v2 + 3);
  unint64_t v35 = v4 + 11;
  if ((uint64_t)(v4 + 11) > (uint64_t)(v34 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v34 > 1), v4 + 11, 1, v2);
  }
  *((void *)v2 + 2) = v35;
  uint64_t v36 = &v2[3 * v32];
  *((_WORD *)v36 + 16) = 516;
  v36[34] = 5;
  unint64_t v37 = *((void *)v2 + 3);
  if ((uint64_t)(v4 + 12) > (uint64_t)(v37 >> 1)) {
    uint64_t v2 = sub_254258C58((char *)(v37 > 1), v4 + 12, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 12;
  uint64_t v38 = &v2[3 * v35];
  *((_WORD *)v38 + 16) = 4;
  v38[34] = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8548);
  swift_allocObject();
  *(void *)(v1 + 48) = sub_25424F4D8(0, (uint64_t)v2);
  return v1;
}

uint64_t sub_25428DA68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C800();
  uint64_t v61 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  unint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v52 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v52 - v13;
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects;
  unint64_t v15 = *(void *)(a1
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (!v21)
    {
LABEL_46:
      uint64_t v50 = v2[6];
      uint64_t v51 = *(void **)(v50 + 32);
      swift_retain();
      objc_msgSend(v51, sel_lock);
      *(unsigned char *)(v50 + 16) = 0;
      objc_msgSend(v51, sel_unlock);
      swift_release();
      v2[2] = 0;
      swift_release();
      v2[3] = 0;
      return swift_release();
    }
  }
  else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_46;
  }
  uint64_t v57 = v8;
  uint64_t v58 = v11;
  uint64_t v16 = *(void *)(a1 + v14);
  unint64_t v64 = MEMORY[0x263F8EE78];
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      unint64_t v15 = v16;
    }
    else {
      unint64_t v15 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_25436D530();
    uint64_t v60 = v4;
    if (v17) {
      goto LABEL_5;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v60 = v4;
  if (!v17) {
    goto LABEL_23;
  }
LABEL_5:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_50;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*(void *)(*(void *)(MEMORY[0x25A275A00](i, v16)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) == -1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_25436D370();
        sub_25436D3B0();
        sub_25436D3C0();
        sub_25436D380();
      }
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
    do
    {
      if (*(void *)(*(void *)(*(void *)(v16 + 8 * v19 + 32) + v20) + 16) != -1)
      {
        swift_retain();
        sub_25436D370();
        sub_25436D3B0();
        sub_25436D3C0();
        sub_25436D380();
        uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      }
      ++v19;
    }
    while (v17 != v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = v60;
LABEL_24:
  unint64_t v22 = v64;
  swift_bridgeObjectRetain();
  uint64_t v17 = v6;
  if ((v22 & 0x8000000000000000) != 0 || (unint64_t v23 = (void *)v22, (v22 & 0x4000000000000000) != 0))
  {
    unint64_t v23 = sub_254352734(v22);
    swift_release();
  }
  unint64_t v64 = (unint64_t)v23;
  sub_254290C5C((uint64_t *)&v64);
  swift_release();
  unint64_t v15 = v64;
  if ((v64 & 0x8000000000000000) == 0 && (v64 & 0x4000000000000000) == 0)
  {
    uint64_t v24 = *(void *)(v64 + 16);
    if (v24) {
      goto LABEL_29;
    }
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_25436D530();
  swift_release();
  if (!v24)
  {
LABEL_45:
    swift_release();
    goto LABEL_46;
  }
LABEL_29:
  if (v24 == 1)
  {
    uint64_t v25 = v2[6];
    unint64_t v26 = *(void **)(v25 + 32);
    swift_retain();
    objc_msgSend(v26, sel_lock);
    *(unsigned char *)(v25 + 16) = 2;
    objc_msgSend(v26, sel_unlock);
    swift_release();
    unint64_t v11 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v59, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v63);
    if ((v15 & 0xC000000000000001) == 0)
    {
      if (*(void *)(v15 + 16))
      {
        uint64_t v27 = *(void *)(v15 + 32);
        swift_retain();
LABEL_33:
        swift_release();
        uint64_t v28 = v61;
        unint64_t v29 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v62, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v4);
        swift_release();
        type metadata accessor for LegacySubjectSelection.TrackInfo();
        uint64_t v30 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v30 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v11, v63);
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v29, v4);
        v2[2] = v30;
        swift_release();
        v2[3] = 0;
        return swift_release();
      }
      __break(1u);
      goto LABEL_53;
    }
LABEL_50:
    uint64_t v27 = MEMORY[0x25A275A00](0, v15);
    goto LABEL_33;
  }
  uint64_t v31 = v2[6];
  unint64_t v32 = *(void **)(v31 + 32);
  swift_retain();
  objc_msgSend(v32, sel_lock);
  *(unsigned char *)(v31 + 16) = 4;
  objc_msgSend(v32, sel_unlock);
  swift_release();
  uint64_t v33 = (char *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time);
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v34(v58, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v63);
  uint64_t v59 = v33;
  unint64_t v55 = v15 & 0xC000000000000001;
  uint64_t v56 = (void (*)(char *, char *, uint64_t))v34;
  if ((v15 & 0xC000000000000001) != 0)
  {
    uint64_t v35 = MEMORY[0x25A275A00](0, v15);
  }
  else
  {
    if (!*(void *)(v15 + 16))
    {
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v35 = *(void *)(v15 + 32);
    swift_retain();
  }
  uint64_t v36 = v61;
  unint64_t v37 = v62;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v54(v62, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v4);
  swift_release();
  type metadata accessor for LegacySubjectSelection.TrackInfo();
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v40 = v58;
  uint64_t v41 = v63;
  uint64_t v58 = (char *)(v6 + 32);
  uint64_t v53 = v39;
  v39(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v40, v63);
  uint64_t v42 = v4;
  BOOL v43 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v43(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v37, v42);
  v2[2] = v38;
  swift_release();
  v56(v57, v59, v41);
  if (v55)
  {
    uint64_t v44 = MEMORY[0x25A275A00](1, v15);
LABEL_41:
    swift_release();
    uint64_t v45 = v53;
    unsigned __int8 v46 = v62;
    uint64_t v47 = v60;
    v54(v62, v44 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v60);
    swift_release();
    uint64_t v48 = swift_allocObject();
    v45(v48 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v57, v63);
    v43(v48 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v46, v47);
    v2[3] = v48;
    return swift_release();
  }
  if (*(void *)(v15 + 16) >= 2uLL)
  {
    uint64_t v44 = *(void *)(v15 + 40);
    swift_retain();
    goto LABEL_41;
  }
LABEL_54:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_25428E284(uint64_t a1, uint64_t a2)
{
  uint64_t v177 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  id v174 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v176 = (char *)&v166 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v166 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t *))((char *)&v166 - v16);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t *))((char *)&v166 - v19);
  uint64_t v21 = sub_25436C800();
  unint64_t v179 = *(void (**)(uint64_t, uint64_t))(v21 - 8);
  MEMORY[0x270FA5388](v21);
  MEMORY[0x270FA5388](v22);
  MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  MEMORY[0x270FA5388](v25);
  unint64_t v32 = (char *)&v166 - v31;
  uint64_t v178 = a1;
  unint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (!v33) {
    return;
  }
  uint64_t v169 = v30;
  uint64_t v170 = v27;
  uint64_t v168 = v29;
  uint64_t v171 = v5;
  uint64_t v172 = v28;
  uint64_t v173 = v26;
  uint64_t v175 = 0;
  char v34 = *(unsigned char *)(v2 + 56);
  swift_bridgeObjectRetain();
  if ((v34 & 1) == 0)
  {
    sub_25428DA68(a2);
    *(unsigned char *)(v2 + 56) = 1;
  }
  uint64_t v35 = (void *)v2;
  uint64_t v36 = *(void *)(v2 + 48);
  unint64_t v37 = *(void **)(v36 + 32);
  swift_retain();
  objc_msgSend(v37, sel_lock);
  uint64_t v38 = *(unsigned __int8 *)(v36 + 16);
  objc_msgSend(v37, sel_unlock);
  swift_release();
  switch(v38)
  {
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v44 = v35[2];
      if (!v44) {
        goto LABEL_30;
      }
      uint64_t v42 = v35;
      swift_retain();
      sub_25428F724(v178, v17);
      uint64_t v45 = v179;
      uint64_t v46 = v173;
      if ((*((unsigned int (**)(void, uint64_t, uint64_t))v179 + 6))(v17, 1, v173) == 1)
      {
        swift_release();
        uint64_t v43 = (uint64_t)v17;
        goto LABEL_10;
      }
      unint64_t v84 = v45;
      uint64_t v85 = (void (*)(char *, unsigned int (**)(char *, uint64_t, uint64_t *), uint64_t))*((void *)v45 + 4);
      uint64_t v86 = (unsigned int (**)(char *, uint64_t, uint64_t *))v170;
      v85(v170, v17, v46);
      uint64_t v87 = v172;
      (*((void (**)(uint64_t, uint64_t, uint64_t))v45 + 2))(v172, v44 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v46);
      char v88 = sub_25436C7D0();
      char v89 = (void (*)(uint64_t, uint64_t))v84[1];
      unint64_t v179 = (void (*)(uint64_t, uint64_t))(v84 + 1);
      v89(v87, v46);
      if ((v88 & 1) == 0)
      {
        uint64_t v113 = v46;
        swift_release();
        uint64_t v114 = v177;
        uint64_t v115 = v171;
        uint64_t v116 = v176;
        (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v176, v178 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v177);
        uint64_t v117 = v86;
        uint64_t v118 = v113;
        v85((char *)v87, v117, v113);
        type metadata accessor for LegacySubjectSelection.TrackInfo();
        uint64_t v119 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v119 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v116, v114);
        v85((char *)(v119 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid), (unsigned int (**)(char *, uint64_t, uint64_t *))v87, v118);
        void v42[2] = v119;
LABEL_65:
        swift_release();
        goto LABEL_66;
      }
      uint64_t v90 = v177;
      uint64_t v91 = v171;
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 16);
      unint64_t v93 = v176;
      v92(v176, v178 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v177);
      unint64_t v94 = v174;
      v92(v174, v44 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v90);
      sub_25436C700();
      double v96 = v95;
      uint64_t v97 = *(void (**)(char *, uint64_t))(v91 + 8);
      v97(v94, v90);
      v97(v93, v90);
      if (v96 <= 1.0)
      {
        v89((uint64_t)v170, v173);
        goto LABEL_65;
      }
      uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v99 = *((void *)v47 + 2);
      unint64_t v98 = *((void *)v47 + 3);
      if (v99 >= v98 >> 1) {
        uint64_t v47 = sub_2542597B8((char *)(v98 > 1), v99 + 1, 1, v47);
      }
      *((void *)v47 + 2) = v99 + 1;
      v47[v99 + 32] = 1;
      swift_release();
      v89((uint64_t)v170, v173);
LABEL_67:
      uint64_t v48 = (SEL *)&unk_2653A7000;
LABEL_68:
      char v49 = (SEL *)&unk_2653A7000;
LABEL_69:
      uint64_t v145 = v42[6];
      uint64_t v146 = *(void **)(v145 + 32);
      swift_retain();
      [v146 v48[439]];
      char v147 = sub_254290B5C(v145, (uint64_t)v47, sub_2543517E0);
      [v146 v49[440]];
      swift_release();
      swift_bridgeObjectRelease();
      if (v147)
      {
        v183[0] = 9;
        uint64_t v181 = 0;
        unint64_t v182 = 0xE000000000000000;
        sub_25436D290();
        sub_25436CCB0();
        uint64_t v148 = v42[6];
        unint64_t v149 = *(void **)(v148 + 32);
        swift_retain();
        [v149 v48[439]];
        char v150 = *(unsigned char *)(v148 + 16);
        [v149 v49[440]];
        swift_release();
        char v180 = v150;
        sub_25436D460();
        uint64_t v151 = v181;
        unint64_t v152 = v182;
        os_log_type_t v153 = sub_25436D020();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v183, v151, v152, v153);
        swift_bridgeObjectRelease();
      }
      v183[0] = 9;
      uint64_t v181 = 0;
      unint64_t v182 = 0xE000000000000000;
      sub_25436D290();
      sub_25436CCB0();
      uint64_t v154 = v42[6];
      uint64_t v155 = *(void **)(v154 + 32);
      swift_retain();
      [v155 v48[439]];
      char v156 = *(unsigned char *)(v154 + 16);
      [v155 v49[440]];
      swift_release();
      char v180 = v156;
      sub_25436D460();
      uint64_t v157 = v181;
      unint64_t v158 = v182;
      os_log_type_t v159 = sub_25436D000();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v183, v157, v158, v159);
      swift_bridgeObjectRelease();
      return;
    case 2:
      uint64_t v50 = v35[2];
      if (!v50) {
        goto LABEL_29;
      }
      uint64_t v42 = v35;
      swift_retain();
      uint64_t v51 = v175;
      uint64_t v52 = sub_2542917E4(v33, v50);
      swift_bridgeObjectRelease();
      if (!v52)
      {
        uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v101 = *((void *)v47 + 2);
        unint64_t v100 = *((void *)v47 + 3);
        if (v101 >= v100 >> 1) {
          uint64_t v47 = sub_2542597B8((char *)(v100 > 1), v101 + 1, 1, v47);
        }
        uint64_t v48 = (SEL *)&unk_2653A7000;
        char v49 = (SEL *)&unk_2653A7000;
        *((void *)v47 + 2) = v101 + 1;
        v47[v101 + 32] = 2;
        swift_release();
        void v42[2] = 0;
        goto LABEL_49;
      }
      uint64_t v53 = v179;
      uint64_t v54 = v172;
      uint64_t v55 = v173;
      uint64_t v168 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v179 + 2);
      v168(v172, v52 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v173);
      uint64_t v56 = v178;
      sub_25428FE60(v178, v54, (uint64_t)v14);
      uint64_t v57 = (char *)*((void *)v53 + 1);
      id v174 = (char *)v53 + 8;
      uint64_t v170 = v57;
      ((void (*)(uint64_t, uint64_t))v57)(v54, v55);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v53 + 6))(v14, 1, v55) != 1)
      {
        uint64_t v166 = v52;
        uint64_t v175 = v51;
        uint64_t v102 = (void (*)(uint64_t, char *, uint64_t))*((void *)v53 + 4);
        uint64_t v103 = v169;
        v102(v169, v14, v55);
        uint64_t v104 = v56 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
        uint64_t v105 = v171;
        uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 16);
        uint64_t v167 = v42;
        uint64_t v108 = v176;
        uint64_t v107 = v177;
        v106(v176, v104, v177);
        v168(v54, v103, v55);
        type metadata accessor for LegacySubjectSelection.TrackInfo();
        uint64_t v109 = swift_allocObject();
        uint64_t v110 = v108;
        uint64_t v42 = v167;
        (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v109 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v110, v107);
        v102(v109 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, (char *)v54, v55);
        v42[3] = v109;
        swift_release();
        uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v112 = *((void *)v47 + 2);
        unint64_t v111 = *((void *)v47 + 3);
        if (v112 >= v111 >> 1) {
          uint64_t v47 = sub_2542597B8((char *)(v111 > 1), v112 + 1, 1, v47);
        }
        *((void *)v47 + 2) = v112 + 1;
        v47[v112 + 32] = 3;
        swift_release();
        swift_release();
        ((void (*)(uint64_t, uint64_t))v170)(v169, v173);
        goto LABEL_12;
      }
      swift_release();
      swift_release();
      sub_25425042C((uint64_t)v14, &qword_269DD7F58);
LABEL_66:
      uint64_t v47 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_67;
    case 3:
      uint64_t v58 = v35[2];
      if (!v58) {
        goto LABEL_29;
      }
      uint64_t v42 = v35;
      uint64_t v59 = (char *)v35[3];
      if (!v59) {
        goto LABEL_29;
      }
      swift_retain();
      swift_retain();
      uint64_t v60 = v175;
      uint64_t v61 = sub_2542917E4(v33, v58);
      swift_bridgeObjectRelease();
      if (v61)
      {
        uint64_t v169 = v58;
        uint64_t v170 = v59;
        uint64_t v175 = v60;
        uint64_t v62 = v179;
        uint64_t v63 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v179 + 2);
        uint64_t v64 = v172;
        uint64_t v65 = v173;
        v63(v172, v61 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v173);
        sub_25428FE60(v178, v64, (uint64_t)v11);
        uint64_t v66 = (void (*)(uint64_t, uint64_t))*((void *)v62 + 1);
        v66(v64, v65);
        if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v62 + 6))(v11, 1, v65) == 1)
        {
          sub_25425042C((uint64_t)v11, &qword_269DD7F58);
          v42[3] = 0;
          swift_release();
          uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v68 = *((void *)v47 + 2);
          unint64_t v67 = *((void *)v47 + 3);
          if (v68 >= v67 >> 1) {
            uint64_t v47 = sub_2542597B8((char *)(v67 > 1), v68 + 1, 1, v47);
          }
          uint64_t v48 = (SEL *)&unk_2653A7000;
          char v49 = (SEL *)&unk_2653A7000;
          *((void *)v47 + 2) = v68 + 1;
          v47[v68 + 32] = 5;
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v166 = v61;
          uint64_t v125 = (char *)v168;
          uint64_t v126 = v11;
          uint64_t v127 = (void (*)(void, char *, uint64_t))*((void *)v62 + 4);
          v127(v168, v126, v65);
          v63(v64, (uint64_t)&v170[OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid], v65);
          char v128 = sub_25436C7D0();
          unint64_t v179 = v66;
          v66(v64, v65);
          if ((v128 & 1) == 0)
          {
            swift_release();
            swift_release();
            swift_release();
            uint64_t v160 = v177;
            uint64_t v161 = v171;
            uint64_t v162 = v176;
            (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v176, v178 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v177);
            v127(v64, v125, v65);
            type metadata accessor for LegacySubjectSelection.TrackInfo();
            uint64_t v163 = swift_allocObject();
            (*(void (**)(uint64_t, char *, uint64_t))(v161 + 32))(v163 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v162, v160);
            v127(v163 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, (char *)v64, v65);
            v42[3] = v163;
            swift_release();
            goto LABEL_11;
          }
          uint64_t v129 = v177;
          uint64_t v130 = v171;
          uint64_t v131 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 16);
          uint64_t v132 = v176;
          v131(v176, v178 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v177);
          uint64_t v133 = v174;
          v131(v174, (uint64_t)&v170[OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime], v129);
          sub_25436C700();
          double v135 = v134;
          uint64_t v136 = *(void (**)(char *, uint64_t))(v130 + 8);
          v136(v133, v129);
          v136(v132, v129);
          char v49 = (SEL *)&unk_2653A7000;
          if (v135 <= 2.0)
          {
            v179((uint64_t)v168, v173);
            swift_release();
            swift_release();
            swift_release();
            uint64_t v47 = (char *)MEMORY[0x263F8EE78];
          }
          else
          {
            uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v138 = *((void *)v47 + 2);
            unint64_t v137 = *((void *)v47 + 3);
            uint64_t v139 = v179;
            if (v138 >= v137 >> 1) {
              uint64_t v47 = sub_2542597B8((char *)(v137 > 1), v138 + 1, 1, v47);
            }
            *((void *)v47 + 2) = v138 + 1;
            v47[v138 + 32] = 4;
            swift_release();
            swift_release();
            swift_release();
            v139((uint64_t)v168, v173);
          }
          uint64_t v48 = (SEL *)&unk_2653A7000;
        }
      }
      else
      {
        void v42[2] = 0;
        swift_release();
        v42[3] = 0;
        swift_release();
        uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v121 = *((void *)v47 + 2);
        unint64_t v120 = *((void *)v47 + 3);
        if (v121 >= v120 >> 1) {
          uint64_t v47 = sub_2542597B8((char *)(v120 > 1), v121 + 1, 1, v47);
        }
        uint64_t v48 = (SEL *)&unk_2653A7000;
        char v49 = (SEL *)&unk_2653A7000;
        *((void *)v47 + 2) = v121 + 1;
        v47[v121 + 32] = 2;
        swift_release();
LABEL_49:
        swift_release();
      }
      goto LABEL_69;
    case 4:
      uint64_t v69 = v35[2];
      if (!v69 || (uint64_t v42 = v35, (v70 = v35[3]) == 0))
      {
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_30:
        LOBYTE(v181) = 9;
        os_log_type_t v73 = sub_25436D010();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v181, 0xD000000000000022, 0x800000025437B820, v73);
        return;
      }
      swift_retain_n();
      swift_retain();
      uint64_t v71 = sub_2542917E4(v33, v69);
      swift_release();
      if (v71)
      {
        swift_release();
        swift_retain();
        uint64_t v72 = sub_2542917E4(v33, v70);
        swift_release();
        uint64_t v48 = (SEL *)&unk_2653A7000;
        char v49 = (SEL *)&unk_2653A7000;
        if (v72)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v47 = (char *)MEMORY[0x263F8EE78];
          goto LABEL_69;
        }
      }
      else
      {
        uint64_t v48 = (SEL *)&unk_2653A7000;
        char v49 = (SEL *)&unk_2653A7000;
      }
      swift_retain();
      uint64_t v122 = sub_2542917E4(v33, v69);
      swift_release();
      if (v122)
      {
        swift_bridgeObjectRelease();
        swift_release();
        v35[3] = 0;
        swift_release();
        uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v124 = *((void *)v47 + 2);
        unint64_t v123 = *((void *)v47 + 3);
        if (v124 >= v123 >> 1) {
          uint64_t v47 = sub_2542597B8((char *)(v123 > 1), v124 + 1, 1, v47);
        }
        *((void *)v47 + 2) = v124 + 1;
        v47[v124 + 32] = 5;
        swift_release();
        swift_release();
      }
      else
      {
        swift_retain();
        uint64_t v140 = sub_2542917E4(v33, v70);
        swift_bridgeObjectRelease();
        swift_release();
        if (v140)
        {
          swift_release();
          v35[2] = v70;
          swift_retain();
          swift_release();
          v35[3] = 0;
          swift_release();
          uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v142 = *((void *)v47 + 2);
          unint64_t v141 = *((void *)v47 + 3);
          if (v142 >= v141 >> 1) {
            uint64_t v47 = sub_2542597B8((char *)(v141 > 1), v142 + 1, 1, v47);
          }
          *((void *)v47 + 2) = v142 + 1;
          uint64_t v143 = &v47[v142];
          char v144 = 2;
        }
        else
        {
          v35[2] = 0;
          swift_release();
          v35[3] = 0;
          swift_release();
          uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v165 = *((void *)v47 + 2);
          unint64_t v164 = *((void *)v47 + 3);
          if (v165 >= v164 >> 1) {
            uint64_t v47 = sub_2542597B8((char *)(v164 > 1), v165 + 1, 1, v47);
          }
          *((void *)v47 + 2) = v165 + 1;
          uint64_t v143 = &v47[v165];
          char v144 = 6;
        }
        v143[32] = v144;
        swift_release();
        swift_release();
      }
      goto LABEL_69;
    default:
      swift_bridgeObjectRelease();
      uint64_t v39 = v178;
      sub_25428F724(v178, v20);
      uint64_t v40 = v179;
      uint64_t v41 = v173;
      uint64_t v42 = v35;
      if ((*((unsigned int (**)(void, uint64_t, uint64_t))v179 + 6))(v20, 1, v173) != 1)
      {
        uint64_t v74 = (void (*)(char *, unsigned int (**)(char *, uint64_t, uint64_t *), uint64_t))*((void *)v40 + 4);
        unint64_t v179 = (void (*)(uint64_t, uint64_t))((char *)v40 + 32);
        v74(v32, v20, v41);
        uint64_t v47 = sub_2542597B8(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v76 = *((void *)v47 + 2);
        unint64_t v75 = *((void *)v47 + 3);
        uint64_t v48 = (SEL *)&unk_2653A7000;
        uint64_t v167 = v42;
        if (v76 >= v75 >> 1) {
          uint64_t v47 = sub_2542597B8((char *)(v75 > 1), v76 + 1, 1, v47);
        }
        *((void *)v47 + 2) = v76 + 1;
        v47[v76 + 32] = 0;
        uint64_t v77 = v39 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
        uint64_t v78 = v171;
        uint64_t v80 = v176;
        uint64_t v79 = v177;
        (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v176, v77, v177);
        uint64_t v82 = v172;
        uint64_t v81 = v173;
        v74((char *)v172, (unsigned int (**)(char *, uint64_t, uint64_t *))v32, v173);
        type metadata accessor for LegacySubjectSelection.TrackInfo();
        uint64_t v83 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v83 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v80, v79);
        v74((char *)(v83 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid), (unsigned int (**)(char *, uint64_t, uint64_t *))v82, v81);
        uint64_t v42 = v167;
        v167[2] = v83;
        swift_release();
        goto LABEL_68;
      }
      uint64_t v43 = (uint64_t)v20;
LABEL_10:
      sub_25425042C(v43, &qword_269DD7F58);
LABEL_11:
      uint64_t v47 = (char *)MEMORY[0x263F8EE78];
LABEL_12:
      uint64_t v48 = (SEL *)&unk_2653A7000;
      char v49 = (SEL *)&unk_2653A7000;
      goto LABEL_69;
  }
}

uint64_t sub_25428F724@<X0>(uint64_t a1@<X0>, unsigned int (**a2)(char *, uint64_t, uint64_t *)@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)type metadata accessor for DKMotion3();
  unint64_t v8 = *(v7 - 1);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v53 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - v14;
  unint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (v16)
  {
    uint64_t v17 = sub_25436C800();
    uint64_t v54 = *(void *)(v17 - 8);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 56);
    uint64_t v59 = v17;
    uint64_t v57 = v54 + 56;
    v58(v15, 1, 1);
    unint64_t v60 = v16;
    if (v16 >> 62) {
      goto LABEL_38;
    }
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
LABEL_4:
    uint64_t v56 = v15;
    uint64_t v52 = a2;
    if (v18)
    {
      if (v18 >= 1)
      {
        uint64_t v20 = 0;
        unint64_t v61 = v60 & 0xC000000000000001;
        uint64_t v62 = v7;
        a2 = (unsigned int (**)(char *, uint64_t, uint64_t *))(v8 + 48);
        unint64_t v8 = v60;
        uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
        double v21 = INFINITY;
        uint64_t v22 = v7;
        while (1)
        {
          if (v61)
          {
            uint64_t v15 = (char *)MEMORY[0x25A275A00](v20, v8);
          }
          else
          {
            uint64_t v15 = *(char **)(v8 + 8 * v20 + 32);
            swift_retain();
          }
          uint64_t v7 = &qword_269DD7810;
          sub_2542503C8((uint64_t)&v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion], (uint64_t)v6, &qword_269DD7810);
          if ((*a2)(v6, 1, v22) == 1)
          {
            swift_release();
            sub_25425042C((uint64_t)v6, &qword_269DD7810);
          }
          else
          {
            sub_254291724((uint64_t)v6, (uint64_t)v10);
            uint64_t v23 = *(void *)&v10[*((int *)v22 + 5)];
            if (*(void *)(v23 + 16) < 3uLL)
            {
              __break(1u);
LABEL_38:
              swift_bridgeObjectRetain_n();
              uint64_t result = sub_25436D530();
              uint64_t v18 = result;
              goto LABEL_4;
            }
            double v24 = *(double *)(v23 + 48);
            if (v24 < v21 && v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection] == 3)
            {
              sub_254291788((uint64_t)v10);
              uint64_t v25 = v59;
              uint64_t v26 = (uint64_t)v56;
              sub_25425042C((uint64_t)v56, &qword_269DD7F58);
              (*v55)(v26, (uint64_t)&v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid], v25);
              swift_release();
              uint64_t v27 = v25;
              unint64_t v8 = v60;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v26, 0, 1, v27);
              double v21 = v24;
            }
            else
            {
              sub_254291788((uint64_t)v10);
              swift_release();
            }
          }
          if (v18 == ++v20) {
            goto LABEL_22;
          }
        }
      }
      __break(1u);
      __break(1u);
    }
    else
    {
      double v21 = INFINITY;
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v30 = (uint64_t)v56;
      uint64_t v31 = v53;
      sub_2542503C8((uint64_t)v56, v53, &qword_269DD7F58);
      uint64_t v32 = v54;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v31, 1, v59) == 1)
      {
        sub_25425042C(v31, &qword_269DD7F58);
        uint64_t v33 = (uint64_t)v52;
        if (v18)
        {
          if ((v60 & 0xC000000000000001) != 0)
          {
            uint64_t v34 = 0;
            uint64_t v35 = v59;
            do
            {
              uint64_t v36 = MEMORY[0x25A275A00](v34, v60);
              double v37 = fabs(CGRectGetMidX(*(CGRect *)(v36+ OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect))+ -0.5);
              if (v37 < v21)
              {
                sub_25425042C(v30, &qword_269DD7F58);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v35);
                swift_unknownObjectRelease();
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v30, 0, 1, v35);
                double v21 = v37;
              }
              else
              {
                swift_unknownObjectRelease();
              }
              ++v34;
            }
            while (v18 != v34);
          }
          else
          {
            uint64_t v41 = (uint64_t *)(v60 + 32);
            uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
            uint64_t v43 = v59;
            do
            {
              uint64_t v44 = *v41;
              uint64_t v45 = *v41 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
              CGFloat v46 = *(double *)v45;
              CGFloat v47 = *(double *)(v45 + 8);
              CGFloat v48 = *(double *)(v45 + 16);
              CGFloat v49 = *(double *)(v45 + 24);
              swift_retain();
              v64.origin.CGFloat x = v46;
              v64.origin.CGFloat y = v47;
              v64.size.double width = v48;
              v64.size.double height = v49;
              double v50 = fabs(CGRectGetMidX(v64) + -0.5);
              if (v50 >= v21)
              {
                swift_release();
              }
              else
              {
                sub_25425042C(v30, &qword_269DD7F58);
                (*v42)(v30, v44 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v43);
                swift_release();
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v30, 0, 1, v43);
                double v21 = v50;
              }
              ++v41;
              --v18;
            }
            while (v18);
          }
        }
        swift_bridgeObjectRelease();
        return sub_2542916BC(v30, v33);
      }
      else
      {
        sub_25425042C(v30, &qword_269DD7F58);
        swift_bridgeObjectRelease();
        uint64_t v38 = v52;
        uint64_t v39 = v31;
        uint64_t v40 = v59;
        (*(void (**)(unsigned int (**)(char *, uint64_t, uint64_t *), uint64_t, uint64_t))(v32 + 32))(v52, v39, v59);
        return ((uint64_t (*)(unsigned int (**)(char *, uint64_t, uint64_t *), void, uint64_t, uint64_t))v58)(v38, 0, 1, v40);
      }
    }
  }
  else
  {
    uint64_t v28 = sub_25436C800();
    unint64_t v29 = *(uint64_t (**)(unsigned int (**)(char *, uint64_t, uint64_t *), uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    return v29(a2, 1, 1, v28);
  }
  return result;
}

uint64_t sub_25428FE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (!v10) {
    goto LABEL_17;
  }
  MEMORY[0x270FA5388](v7);
  v66[-2] = a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2542780DC(sub_25429169C, (uint64_t)&v66[-4], v10);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v40 = sub_25436C800();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a3, 1, 1, v40);
  }
  uint64_t v12 = v11;
  v66[0] = a3;
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14;
  unint64_t v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 56);
  uint64_t v68 = v13;
  v66[1] = v14 + 56;
  uint64_t result = v67(v9, 1, 1);
  if (!(v10 >> 62))
  {
    uint64_t v17 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_5;
    }
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_2542916BC((uint64_t)v9, v66[0]);
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_25436D530();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_29;
  }
LABEL_5:
  if (v17 >= 1)
  {
    uint64_t v18 = (CGRect *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
    if ((v10 & 0xC000000000000001) != 0)
    {
      uint64_t v20 = 0;
      double v21 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      double v69 = INFINITY;
      do
      {
        uint64_t v22 = MEMORY[0x25A275A00](v20, v10);
        uint64_t v23 = (CGRect *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
        double MidX = CGRectGetMidX(*(CGRect *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
        if (CGRectGetMidX(*v18) >= MidX || *(unsigned char *)(v12 + v19) != 2)
        {
          double v25 = CGRectGetMidX(*v23);
          if (v25 >= CGRectGetMidX(*v18) || *(unsigned char *)(v12 + v19) != 1) {
            goto LABEL_8;
          }
        }
        CGFloat x = v18->origin.x;
        CGFloat y = v18->origin.y;
        CGFloat width = v18->size.width;
        CGFloat height = v18->size.height;
        CGFloat v30 = v23->origin.x;
        CGFloat v31 = v23->origin.y;
        CGFloat v32 = v23->size.width;
        CGFloat v70 = v23->size.height;
        double v71 = v30;
        v72.origin.CGFloat x = x;
        v72.origin.CGFloat y = y;
        v72.size.CGFloat width = width;
        v72.size.CGFloat height = height;
        double v33 = CGRectGetMidX(v72);
        v73.origin.CGFloat x = v30;
        v73.origin.CGFloat y = v31;
        v73.size.CGFloat width = v32;
        CGFloat v34 = v70;
        v73.size.CGFloat height = v70;
        double v35 = v33 - CGRectGetMidX(v73);
        v74.origin.CGFloat x = x;
        v74.origin.CGFloat y = y;
        v74.size.CGFloat width = width;
        v74.size.CGFloat height = height;
        double MidY = CGRectGetMidY(v74);
        v75.origin.CGFloat x = v71;
        v75.origin.CGFloat y = v31;
        v75.size.CGFloat width = v32;
        v75.size.CGFloat height = v34;
        CGFloat v37 = CGRectGetMidY(v75);
        double v38 = sqrt(v35 * v35 + (MidY - v37) * (MidY - v37));
        if (v38 < v69)
        {
          sub_25425042C((uint64_t)v9, &qword_269DD7F58);
          uint64_t v39 = v68;
          (*v21)(v9, v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v68);
          swift_unknownObjectRelease();
          ((void (*)(char *, void, uint64_t, uint64_t))v67)(v9, 0, 1, v39);
          double v69 = v38;
        }
        else
        {
LABEL_8:
          swift_unknownObjectRelease();
        }
        ++v20;
      }
      while (v17 != v20);
    }
    else
    {
      uint64_t v41 = (uint64_t *)(v10 + 32);
      uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      double v43 = INFINITY;
      do
      {
        double v71 = v43;
        uint64_t v44 = *v41;
        uint64_t v45 = *v41 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
        CGFloat v46 = *(double *)v45;
        CGFloat v47 = *(double *)(v45 + 8);
        CGFloat v48 = *(double *)(v45 + 16);
        CGFloat v49 = *(double *)(v45 + 24);
        swift_retain();
        v76.origin.CGFloat x = v46;
        v76.origin.CGFloat y = v47;
        v76.size.CGFloat width = v48;
        v76.size.CGFloat height = v49;
        double v50 = CGRectGetMidX(v76);
        if (CGRectGetMidX(*v18) < v50 && *(unsigned char *)(v12 + v19) == 2
          || (double v51 = CGRectGetMidX(*(CGRect *)v45), v51 < CGRectGetMidX(*v18)) && *(unsigned char *)(v12 + v19) == 1)
        {
          CGFloat v52 = v18->origin.x;
          CGFloat v53 = v18->origin.y;
          CGFloat v54 = v18->size.width;
          CGFloat v55 = v18->size.height;
          CGFloat v56 = *(double *)v45;
          CGFloat v57 = *(double *)(v45 + 8);
          CGFloat v58 = *(double *)(v45 + 16);
          double v69 = *(double *)(v45 + 24);
          CGFloat v70 = v56;
          v77.origin.CGFloat x = v52;
          v77.origin.CGFloat y = v53;
          v77.size.CGFloat width = v54;
          v77.size.CGFloat height = v55;
          double v59 = CGRectGetMidX(v77);
          v78.origin.CGFloat x = v56;
          v78.origin.CGFloat y = v57;
          v78.size.CGFloat width = v58;
          CGFloat v60 = v69;
          v78.size.CGFloat height = v69;
          double v61 = v59 - CGRectGetMidX(v78);
          v79.origin.CGFloat x = v52;
          v79.origin.CGFloat y = v53;
          v79.size.CGFloat width = v54;
          v79.size.CGFloat height = v55;
          double v62 = CGRectGetMidY(v79);
          v80.origin.CGFloat x = v70;
          v80.origin.CGFloat y = v57;
          v80.size.CGFloat width = v58;
          v80.size.CGFloat height = v60;
          CGFloat v63 = CGRectGetMidY(v80);
          double v43 = sqrt(v61 * v61 + (v62 - v63) * (v62 - v63));
          double v64 = v71;
          if (v43 >= v71)
          {
            swift_release();
            double v43 = v64;
          }
          else
          {
            sub_25425042C((uint64_t)v9, &qword_269DD7F58);
            uint64_t v65 = v68;
            (*v42)(v9, v44 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v68);
            swift_release();
            ((void (*)(char *, void, uint64_t, uint64_t))v67)(v9, 0, 1, v65);
          }
        }
        else
        {
          swift_release();
          double v43 = v71;
        }
        ++v41;
        --v17;
      }
      while (v17);
    }
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_254290448(void *a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v2, v4);
  char v7 = sub_25436C7D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 & 1;
}

uint64_t sub_25429055C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacySubjectSelection()
{
  return self;
}

uint64_t sub_2542905C8()
{
  return type metadata accessor for LegacySubjectSelection.TrackInfo();
}

uint64_t type metadata accessor for LegacySubjectSelection.TrackInfo()
{
  uint64_t result = qword_269DD8528;
  if (!qword_269DD8528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25429061C()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LegacySubjectSelection.Event(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LegacySubjectSelection.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254290844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacySubjectSelection.Event()
{
  return &type metadata for LegacySubjectSelection.Event;
}

unsigned char *storeEnumTagSinglePayload for LegacySubjectSelection.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254290948);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacySubjectSelection.State()
{
  return &type metadata for LegacySubjectSelection.State;
}

unint64_t sub_254290984()
{
  unint64_t result = qword_269DD8538;
  if (!qword_269DD8538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8538);
  }
  return result;
}

unint64_t sub_2542909DC()
{
  unint64_t result = qword_269DD8540;
  if (!qword_269DD8540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8540);
  }
  return result;
}

uint64_t sub_254290A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t result = sub_254351600(*(unsigned __int8 *)(a1 + 16));
  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * result);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = v7 + 32;
  while (1)
  {
    if (v10)
    {
      int v12 = *(unsigned __int8 *)(v11 + 3 * v9 + 2);
      if (*(unsigned __int8 *)(a2 + 32) == v12) {
        goto LABEL_17;
      }
      if (v10 != 1)
      {
        if (*(unsigned __int8 *)(a2 + 33) == v12)
        {
LABEL_17:
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(v11 + 3 * v9 + 1);
          return 1;
        }
        if (v10 != 2) {
          break;
        }
      }
    }
LABEL_5:
    if (++v9 == v8) {
      return 0;
    }
  }
  uint64_t v13 = 34;
  while (1)
  {
    uint64_t v14 = v13 - 31;
    if (__OFADD__(v13 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(a2 + v13) == v12) {
      goto LABEL_17;
    }
    ++v13;
    if (v14 == v10) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254290B2C(uint64_t a1, uint64_t a2)
{
  return sub_254290B5C(a1, a2, sub_2543517E0) & 1;
}

uint64_t sub_254290B5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  uint64_t result = a3(*(unsigned __int8 *)(a1 + 16));
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(v3 + 56) + 8 * result);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = v8 + 32;
  while (1)
  {
    if (v11)
    {
      int v13 = *(unsigned __int8 *)(v12 + 3 * v10 + 2);
      if (*(unsigned __int8 *)(a2 + 32) == v13) {
        goto LABEL_17;
      }
      if (v11 != 1)
      {
        if (*(unsigned __int8 *)(a2 + 33) == v13)
        {
LABEL_17:
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(v12 + 3 * v10 + 1);
          return 1;
        }
        if (v11 != 2) {
          break;
        }
      }
    }
LABEL_5:
    if (++v10 == v9) {
      return 0;
    }
  }
  uint64_t v14 = 34;
  while (1)
  {
    uint64_t v15 = v14 - 31;
    if (__OFADD__(v14 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(a2 + v14) == v13) {
      goto LABEL_17;
    }
    ++v14;
    if (v15 == v11) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254290C5C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2543470E4();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_254290CD8(v6);
  return sub_25436D380();
}

uint64_t sub_254290CD8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_129;
    }
    if (v4) {
      return sub_254291378(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_137;
  }
  uint64_t v7 = result;
  char v89 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v95 = MEMORY[0x263F8EE78];
    __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_95:
      uint64_t v81 = v10;
      if (v13 >= 2)
      {
        uint64_t v82 = *v89;
        do
        {
          unint64_t v83 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_124;
          }
          if (!v82) {
            goto LABEL_136;
          }
          unint64_t v84 = v81;
          uint64_t v85 = *(void *)&v81[16 * v83 + 32];
          uint64_t v86 = *(void *)&v81[16 * v13 + 24];
          sub_2542913F4((char *)(v82 + 8 * v85), (char *)(v82 + 8 * *(void *)&v81[16 * v13 + 16]), v82 + 8 * v86, __dst);
          if (v2) {
            break;
          }
          if (v86 < v85) {
            goto LABEL_125;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v84 = sub_254345370((uint64_t)v84);
          }
          if (v83 >= *((void *)v84 + 2)) {
            goto LABEL_126;
          }
          uint64_t v87 = &v84[16 * v83 + 32];
          *(void *)uint64_t v87 = v85;
          *((void *)v87 + 1) = v86;
          unint64_t v88 = *((void *)v84 + 2);
          if (v13 > v88) {
            goto LABEL_127;
          }
          memmove(&v84[16 * v13 + 16], &v84[16 * v13 + 32], 16 * (v88 - v13));
          uint64_t v81 = v84;
          *((void *)v84 + 2) = v88 - 1;
          unint64_t v13 = v88 - 1;
        }
        while (v88 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_25436CDE0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for DKPersonTrackerState(0);
    uint64_t v9 = sub_25436CE40();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v95 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v90 = *a1 - 8;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v91 = v7;
  uint64_t v92 = v4;
  uint64_t v93 = *a1;
  while (1)
  {
    uint64_t v14 = v11++;
    if (v11 < v4)
    {
      uint64_t v15 = *(void *)(*(void *)(*(void *)(v12 + 8 * v11)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      uint64_t v16 = *(void *)(*(void *)(*(void *)(v12 + 8 * v14)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      uint64_t v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        uint64_t v17 = v15;
        while (1)
        {
          uint64_t v18 = *(void *)(*(void *)(*(void *)(v12 + 8 * v11)
                                      + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                          + 16);
          if (v16 < v15 == v17 >= v18) {
            break;
          }
          ++v11;
          uint64_t v17 = v18;
          if (v4 == v11)
          {
            uint64_t v11 = v4;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v11 < v14) {
          goto LABEL_130;
        }
        if (v14 < v11)
        {
          uint64_t v19 = (uint64_t *)(v90 + 8 * v11);
          uint64_t v20 = v11;
          uint64_t v21 = v14;
          uint64_t v22 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v12) {
                goto LABEL_135;
              }
              uint64_t v23 = *v22;
              *uint64_t v22 = *v19;
              *uint64_t v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_45;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_128;
    }
    if (v11 - v14 >= v7) {
      goto LABEL_45;
    }
    uint64_t v24 = v14 + v7;
    if (__OFADD__(v14, v7)) {
      goto LABEL_131;
    }
    if (v24 >= v4) {
      uint64_t v24 = v4;
    }
    if (v24 < v14) {
      break;
    }
    if (v11 != v24)
    {
      double v25 = (uint64_t *)(v90 + 8 * v11);
      do
      {
        uint64_t v26 = *(void *)(v12 + 8 * v11);
        uint64_t v27 = v14;
        uint64_t v28 = v25;
        do
        {
          uint64_t v29 = *v28;
          if (*(void *)(*(void *)(*v28
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                         + 16) >= *(void *)(*(void *)(v26
                                                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                              + 16))
            break;
          if (!v12) {
            goto LABEL_133;
          }
          *uint64_t v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v11 != v27);
        ++v11;
        ++v25;
      }
      while (v11 != v24);
      uint64_t v11 = v24;
    }
LABEL_45:
    if (v11 < v14) {
      goto LABEL_123;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_254344E28(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v31 = *((void *)v10 + 2);
    unint64_t v30 = *((void *)v10 + 3);
    unint64_t v13 = v31 + 1;
    uint64_t v12 = v93;
    if (v31 >= v30 >> 1)
    {
      CGRect v80 = sub_254344E28((char *)(v30 > 1), v31 + 1, 1, v10);
      uint64_t v12 = v93;
      uint64_t v10 = v80;
    }
    *((void *)v10 + 2) = v13;
    CGFloat v32 = v10 + 32;
    double v33 = &v10[16 * v31 + 32];
    *(void *)double v33 = v14;
    *((void *)v33 + 1) = v11;
    if (v31)
    {
      while (1)
      {
        unint64_t v34 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v39 = &v32[16 * v13];
          uint64_t v40 = *((void *)v39 - 8);
          uint64_t v41 = *((void *)v39 - 7);
          BOOL v45 = __OFSUB__(v41, v40);
          uint64_t v42 = v41 - v40;
          if (v45) {
            goto LABEL_112;
          }
          uint64_t v44 = *((void *)v39 - 6);
          uint64_t v43 = *((void *)v39 - 5);
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v37 = v43 - v44;
          char v38 = v45;
          if (v45) {
            goto LABEL_113;
          }
          unint64_t v46 = v13 - 2;
          CGFloat v47 = &v32[16 * v13 - 32];
          uint64_t v49 = *(void *)v47;
          uint64_t v48 = *((void *)v47 + 1);
          BOOL v45 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          if (v45) {
            goto LABEL_115;
          }
          BOOL v45 = __OFADD__(v37, v50);
          uint64_t v51 = v37 + v50;
          if (v45) {
            goto LABEL_118;
          }
          if (v51 >= v42)
          {
            double v69 = &v32[16 * v34];
            uint64_t v71 = *(void *)v69;
            uint64_t v70 = *((void *)v69 + 1);
            BOOL v45 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v45) {
              goto LABEL_122;
            }
            BOOL v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v63 = *((void *)v10 + 4);
            uint64_t v64 = *((void *)v10 + 5);
            BOOL v45 = __OFSUB__(v64, v63);
            uint64_t v56 = v64 - v63;
            char v57 = v45;
            goto LABEL_76;
          }
          uint64_t v36 = *((void *)v10 + 4);
          uint64_t v35 = *((void *)v10 + 5);
          BOOL v45 = __OFSUB__(v35, v36);
          uint64_t v37 = v35 - v36;
          char v38 = v45;
        }
        if (v38) {
          goto LABEL_114;
        }
        unint64_t v46 = v13 - 2;
        CGFloat v52 = &v32[16 * v13 - 32];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v55 = __OFSUB__(v53, v54);
        uint64_t v56 = v53 - v54;
        char v57 = v55;
        if (v55) {
          goto LABEL_117;
        }
        CGFloat v58 = &v32[16 * v34];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v45 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v45) {
          goto LABEL_120;
        }
        if (__OFADD__(v56, v61)) {
          goto LABEL_121;
        }
        if (v56 + v61 >= v37)
        {
          BOOL v62 = v37 < v61;
LABEL_82:
          if (v62) {
            unint64_t v34 = v46;
          }
          goto LABEL_84;
        }
LABEL_76:
        if (v57) {
          goto LABEL_116;
        }
        uint64_t v65 = &v32[16 * v34];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v45 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v45) {
          goto LABEL_119;
        }
        if (v68 < v56) {
          goto LABEL_14;
        }
LABEL_84:
        unint64_t v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v12) {
          goto LABEL_134;
        }
        CGRect v74 = v10;
        CGRect v75 = &v32[16 * v73];
        uint64_t v76 = *(void *)v75;
        CGRect v77 = &v32[16 * v34];
        uint64_t v78 = *((void *)v77 + 1);
        sub_2542913F4((char *)(v12 + 8 * *(void *)v75), (char *)(v12 + 8 * *(void *)v77), v12 + 8 * v78, __dst);
        if (v1) {
          goto LABEL_92;
        }
        if (v78 < v76) {
          goto LABEL_109;
        }
        if (v34 > *((void *)v74 + 2)) {
          goto LABEL_110;
        }
        *(void *)CGRect v75 = v76;
        *(void *)&v32[16 * v73 + 8] = v78;
        unint64_t v79 = *((void *)v74 + 2);
        if (v34 >= v79) {
          goto LABEL_111;
        }
        uint64_t v10 = v74;
        unint64_t v13 = v79 - 1;
        memmove(&v32[16 * v34], v77 + 16, 16 * (v79 - 1 - v34));
        *((void *)v74 + 2) = v79 - 1;
        uint64_t v12 = v93;
        if (v79 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v7 = v91;
    uint64_t v4 = v92;
    if (v11 >= v92)
    {
      uint64_t v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254291378(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void *)(v4 + 8 * a3);
    uint64_t v7 = result;
    uint64_t v8 = (uint64_t *)v5;
    while (1)
    {
      uint64_t v9 = *v8;
      if (*(void *)(*(void *)(*v8 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) >= *(void *)(*(void *)(v6
                                                      + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                          + 16))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      *uint64_t v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2542913F4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v6 - 8;
          uint64_t v19 = *((void *)v6 - 1);
          uint64_t v20 = v17 + 8;
          if (*(void *)(*(void *)(v19
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                         + 16) >= *(void *)(*(void *)(*((void *)v16 - 1)
                                                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                              + 16))
          {
            uint64_t v22 = v16 - 8;
            if (v20 < v16 || v17 >= v16 || v20 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v20 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v19;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)(*(void *)(*(void *)v4
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                       + 16) >= *(void *)(*(void *)(*(void *)v6
                                                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                            + 16))
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_254345170((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25429169C(void *a1)
{
  return sub_254290448(a1) & 1;
}

uint64_t sub_2542916BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254291724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254291788(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2542917E4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = sub_25436C800();
  uint64_t v6 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v25 = (char *)v19 - v9;
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25436D530();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      v19[1] = v3;
      unint64_t v20 = a1;
      uint64_t v23 = a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid;
      unint64_t v24 = a1 & 0xC000000000000001;
      uint64_t v21 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v3 = 4;
      uint64_t v11 = v25;
      uint64_t v12 = v27;
      do
      {
        uint64_t v13 = v3 - 4;
        if (v24)
        {
          a2 = MEMORY[0x25A275A00](v3 - 4, a1);
          uint64_t v14 = v3 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          a2 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v14 = v3 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        uint64_t v6 = v10;
        uint64_t v15 = *v22;
        uint64_t v16 = v26;
        (*v22)(v11, a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v26);
        v15(v12, v23, v16);
        int v28 = sub_25436C7D0();
        uint64_t v17 = *v21;
        (*v21)(v12, v16);
        v17(v11, v16);
        if (v28)
        {
          swift_bridgeObjectRelease();
          return a2;
        }
        swift_release();
        ++v3;
        uint64_t v10 = v6;
        a1 = v20;
      }
      while (v14 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_254291A6C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_254291A74(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t DKISSTrackVector.__allocating_init(trackerID:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t DKISSTrackVector.init(trackerID:features:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_254291AC8()
{
  if (*v0) {
    return 0x7365727574616566;
  }
  else {
    return 0x4964656B63617274;
  }
}

uint64_t sub_254291B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25429F3F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254291B30(uint64_t a1)
{
  unint64_t v2 = sub_254291D54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254291B6C(uint64_t a1)
{
  unint64_t v2 = sub_254291D54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254291BAC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8550);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254291D54();
  sub_25436D950();
  char v12 = 0;
  sub_25436D700();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A50);
    sub_254292020(&qword_269DD8560);
    sub_25436D710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_254291D54()
{
  unint64_t result = qword_269DD8558;
  if (!qword_269DD8558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8558);
  }
  return result;
}

uint64_t DKISSTrackVector.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKISSTrackVector.init(from:)(a1);
  return v2;
}

uint64_t DKISSTrackVector.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8568);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254291D54();
  sub_25436D940();
  if (v2)
  {
    type metadata accessor for DKISSTrackVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v11 = 0;
    *(void *)(v1 + 16) = sub_25436D640();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A50);
    char v10 = 1;
    sub_254292020(&qword_269DD8570);
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 24) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSTrackVector()
{
  return self;
}

uint64_t sub_254292020(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7A50);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254292084@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254294868(a1, (void (*)(void))type metadata accessor for DKISSTrackVector, (uint64_t (*)(uint64_t))DKISSTrackVector.init(from:), a2);
}

uint64_t sub_2542920C8(void *a1)
{
  return sub_254291BAC(a1);
}

uint64_t sub_2542920EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKISSTrackVector();
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

double sub_25429212C()
{
  return *(double *)(v0 + 24);
}

void sub_254292134(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t sub_25429213C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254292144(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKISSFeatureVector.__allocating_init(framenum:time:tracks:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(double *)(result + 24) = a3;
  *(void *)(result + 32) = a2;
  return result;
}

uint64_t DKISSFeatureVector.init(framenum:time:tracks:)(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a3;
  *(void *)(v3 + 32) = a2;
  return v3;
}

uint64_t sub_2542921BC()
{
  uint64_t v1 = 1701669236;
  if (*v0 != 1) {
    uint64_t v1 = 0x736B63617274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D756E656D617266;
  }
}

uint64_t sub_25429220C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25429F4F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254292234(uint64_t a1)
{
  unint64_t v2 = sub_2542924B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254292270(uint64_t a1)
{
  unint64_t v2 = sub_2542924B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKISSFeatureVector.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSFeatureVector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_254292304(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8578);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542924B0();
  sub_25436D950();
  char v13 = 0;
  sub_25436D700();
  if (!v2)
  {
    char v12 = 1;
    sub_25436D6F0();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8588);
    sub_254292504();
    sub_25436D710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2542924B0()
{
  unint64_t result = qword_269DD8580;
  if (!qword_269DD8580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8580);
  }
  return result;
}

unint64_t sub_254292504()
{
  unint64_t result = qword_269DD8590;
  if (!qword_269DD8590)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8588);
    sub_2542A1AF4(&qword_269DD8598, v1, (void (*)(uint64_t))type metadata accessor for DKISSTrackVector);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8590);
  }
  return result;
}

uint64_t DKISSFeatureVector.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKISSFeatureVector.init(from:)(a1);
  return v2;
}

void *DKISSFeatureVector.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85A0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542924B0();
  sub_25436D940();
  if (v2)
  {
    type metadata accessor for DKISSFeatureVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v13 = 0;
    v1[2] = sub_25436D640();
    char v12 = 1;
    sub_25436D630();
    v1[3] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8588);
    char v11 = 2;
    sub_254292824();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[4] = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSFeatureVector()
{
  return self;
}

unint64_t sub_254292824()
{
  unint64_t result = qword_269DD85A8;
  if (!qword_269DD85A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8588);
    sub_2542A1AF4(&qword_269DD85B0, v1, (void (*)(uint64_t))type metadata accessor for DKISSTrackVector);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD85A8);
  }
  return result;
}

uint64_t sub_2542928C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254294868(a1, (void (*)(void))type metadata accessor for DKISSFeatureVector, (uint64_t (*)(uint64_t))DKISSFeatureVector.init(from:), a2);
}

uint64_t sub_25429290C(void *a1)
{
  return sub_254292304(a1);
}

uint64_t sub_254292930@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKISSFeatureVector();
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_254292970()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2542929A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void *DKISSFeatureVectors.__allocating_init(videoName:frames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *DKISSFeatureVectors.init(videoName:frames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t sub_254292A08()
{
  if (*v0) {
    return 0x73656D617266;
  }
  else {
    return 0x6D614E6F65646976;
  }
}

uint64_t sub_254292A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25429F634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254292A6C(uint64_t a1)
{
  unint64_t v2 = sub_254292D0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254292AA8(uint64_t a1)
{
  unint64_t v2 = sub_254292D0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKISSFeatureVectors.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSFeatureVectors.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_254292B4C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254292D0C();
  sub_25436D950();
  char v12 = 0;
  swift_bridgeObjectRetain();
  sub_25436D690();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85C8);
    sub_254292D60();
    sub_25436D710();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

unint64_t sub_254292D0C()
{
  unint64_t result = qword_269DD85C0;
  if (!qword_269DD85C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD85C0);
  }
  return result;
}

unint64_t sub_254292D60()
{
  unint64_t result = qword_269DD85D0;
  if (!qword_269DD85D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD85C8);
    sub_2542A1AF4(&qword_269DD85D8, v1, (void (*)(uint64_t))type metadata accessor for DKISSFeatureVector);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD85D0);
  }
  return result;
}

uint64_t DKISSFeatureVectors.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKISSFeatureVectors.init(from:)(a1);
  return v2;
}

void *DKISSFeatureVectors.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254292D0C();
  sub_25436D940();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DKISSFeatureVectors();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v12 = 0;
    v1[2] = sub_25436D5D0();
    v1[3] = v8;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85C8);
    char v11 = 1;
    sub_254293070();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[4] = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSFeatureVectors()
{
  return self;
}

unint64_t sub_254293070()
{
  unint64_t result = qword_269DD85E8;
  if (!qword_269DD85E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD85C8);
    sub_2542A1AF4(&qword_269DD85F0, v1, (void (*)(uint64_t))type metadata accessor for DKISSFeatureVector);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD85E8);
  }
  return result;
}

uint64_t sub_254293114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254294868(a1, (void (*)(void))type metadata accessor for DKISSFeatureVectors, (uint64_t (*)(uint64_t))DKISSFeatureVectors.init(from:), a2);
}

uint64_t sub_254293158(void *a1)
{
  return sub_254292B4C(a1);
}

uint64_t sub_25429317C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKISSFeatureVectors();
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542931BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542931C4(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKISSDetections.__allocating_init(time:detections:)(uint64_t a1, double a2)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *(void *)(result + 24) = a1;
  return result;
}

uint64_t DKISSDetections.init(time:detections:)(uint64_t a1, double a2)
{
  *(double *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = a1;
  return v2;
}

uint64_t sub_254293228()
{
  if (*v0) {
    return 0x6F69746365746564;
  }
  else {
    return 1701669236;
  }
}

uint64_t sub_254293260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25429F72C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254293288(uint64_t a1)
{
  unint64_t v2 = sub_2542934E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542932C4(uint64_t a1)
{
  unint64_t v2 = sub_2542934E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKISSDetections.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s23IntelligentTrackingCore16DKISSTrackVectorCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25429335C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD85F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542934E0();
  sub_25436D950();
  char v12 = 0;
  sub_25436D6F0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8608);
    sub_254293534();
    sub_25436D710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2542934E0()
{
  unint64_t result = qword_269DD8600;
  if (!qword_269DD8600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8600);
  }
  return result;
}

unint64_t sub_254293534()
{
  unint64_t result = qword_269DD8610;
  if (!qword_269DD8610)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8608);
    sub_2542A1AF4(&qword_269DD8618, v1, (void (*)(uint64_t))type metadata accessor for DKISSDetection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8610);
  }
  return result;
}

uint64_t type metadata accessor for DKISSDetection()
{
  return self;
}

uint64_t DKISSDetections.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKISSDetections.init(from:)(a1);
  return v2;
}

uint64_t DKISSDetections.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8620);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542934E0();
  sub_25436D940();
  if (v2)
  {
    type metadata accessor for DKISSDetections();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v12 = 0;
    sub_25436D630();
    *(void *)(v1 + 16) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8608);
    char v11 = 1;
    sub_254293850();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 24) = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSDetections()
{
  return self;
}

unint64_t sub_254293850()
{
  unint64_t result = qword_269DD8628;
  if (!qword_269DD8628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8608);
    sub_2542A1AF4(&qword_269DD8630, v1, (void (*)(uint64_t))type metadata accessor for DKISSDetection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8628);
  }
  return result;
}

uint64_t sub_2542938F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254294868(a1, (void (*)(void))type metadata accessor for DKISSDetections, (uint64_t (*)(uint64_t))DKISSDetections.init(from:), a2);
}

uint64_t sub_254293938(void *a1)
{
  return sub_25429335C(a1);
}

uint64_t sub_25429395C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKISSDetections();
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

double sub_25429399C()
{
  return *(double *)(v0 + 16);
}

void sub_2542939A4(double a1)
{
  *(double *)(v1 + 16) = a1;
}

double sub_2542939AC()
{
  return *(double *)(v0 + 24);
}

void sub_2542939B8(double a1, double a2, double a3, double a4)
{
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

uint64_t sub_2542939C4()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_2542939D0(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t sub_2542939E0()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_2542939E8(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*sub_2542939F0())()
{
  return nullsub_1;
}

uint64_t sub_254293A10()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_254293A1C(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*sub_254293A2C())()
{
  return nullsub_1;
}

uint64_t sub_254293A4C()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_254293A58(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*sub_254293A68())()
{
  return nullsub_1;
}

uint64_t sub_254293A88()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_254293A94(uint64_t result, char a2)
{
  *(void *)(v2 + 112) = result;
  *(unsigned char *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*sub_254293AA4())()
{
  return nullsub_1;
}

uint64_t sub_254293AC4()
{
  return swift_retain();
}

uint64_t sub_254293ACC(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_254293ADC())()
{
  return nullsub_1;
}

uint64_t sub_254293AFC()
{
  return *(void *)(v0 + 136);
}

uint64_t sub_254293B08(uint64_t result, char a2)
{
  *(void *)(v2 + 136) = result;
  *(unsigned char *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*sub_254293B18())()
{
  return nullsub_1;
}

uint64_t sub_254293B38()
{
  return *(void *)(v0 + 152);
}

uint64_t sub_254293B44(uint64_t result, char a2)
{
  *(void *)(v2 + 152) = result;
  *(unsigned char *)(v2 + 160) = a2 & 1;
  return result;
}

uint64_t (*sub_254293B54())()
{
  return nullsub_1;
}

uint64_t DKISSDetection.__allocating_init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a9;
  *(double *)(result + 24) = a10;
  *(double *)(result + 32) = a11;
  *(double *)(result + 40) = a12;
  *(double *)(result + 48) = a13;
  *(void *)(result + 56) = a1;
  *(unsigned char *)(result + 64) = a2 & 1;
  *(void *)(result + 72) = a3;
  *(void *)(result + 80) = a4;
  *(unsigned char *)(result + 88) = a5 & 1;
  *(void *)(result + 96) = a6;
  *(unsigned char *)(result + 104) = a7 & 1;
  *(void *)(result + 112) = a8;
  *(unsigned char *)(result + 120) = a14 & 1;
  *(void *)(result + 128) = a15;
  *(void *)(result + 136) = a16;
  *(unsigned char *)(result + 144) = a17 & 1;
  *(void *)(result + 152) = a18;
  *(unsigned char *)(result + 160) = a19 & 1;
  return result;
}

uint64_t DKISSDetection.init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  *(double *)(v19 + 16) = a9;
  *(double *)(v19 + 24) = a10;
  *(double *)(v19 + 32) = a11;
  *(double *)(v19 + 40) = a12;
  *(double *)(v19 + 48) = a13;
  *(void *)(v19 + 56) = a1;
  *(unsigned char *)(v19 + 64) = a2 & 1;
  *(void *)(v19 + 72) = a3;
  *(void *)(v19 + 80) = a4;
  *(unsigned char *)(v19 + 88) = a5 & 1;
  *(void *)(v19 + 96) = a6;
  *(unsigned char *)(v19 + 104) = a7 & 1;
  *(void *)(v19 + 112) = a8;
  *(unsigned char *)(v19 + 120) = a14 & 1;
  *(void *)(v19 + 128) = a15;
  *(void *)(v19 + 136) = a16;
  *(unsigned char *)(v19 + 144) = a17 & 1;
  *(void *)(v19 + 152) = a18;
  *(unsigned char *)(v19 + 160) = a19 & 1;
  return v19;
}

unint64_t sub_254293D08(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1952671090;
      break;
    case 2:
      unint64_t result = 0x4972656B63617274;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x77615965636166;
      break;
    case 5:
      unint64_t result = 0x6374695065636166;
      break;
    case 6:
      unint64_t result = 0x6C6C6F5265636166;
      break;
    case 7:
      unint64_t result = 0x7079654B79646F62;
      break;
    case 8:
      unint64_t result = 0x676E696B61657073;
      break;
    case 9:
      unint64_t result = 0x676E696B6F6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_254293E4C()
{
  return sub_254293D08(*v0);
}

uint64_t sub_254293E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25429F81C(a1, a2);
  *a3 = result;
  return result;
}

void sub_254293E7C(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_254293E88(uint64_t a1)
{
  unint64_t v2 = sub_2542942BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254293EC4(uint64_t a1)
{
  unint64_t v2 = sub_2542942BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKISSDetection.deinit()
{
  swift_release();
  return v0;
}

uint64_t DKISSDetection.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_254293F58(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8638);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542942BC();
  sub_25436D950();
  LOBYTE(v13) = 0;
  sub_25436D6F0();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 40);
    long long v13 = *(_OWORD *)(v3 + 24);
    long long v14 = v9;
    char v12 = 1;
    type metadata accessor for CGRect(0);
    sub_2542A1AF4(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    LOBYTE(v13) = 2;
    sub_25436D6C0();
    LOBYTE(v13) = 3;
    sub_25436D700();
    LOBYTE(v13) = 4;
    sub_25436D6B0();
    LOBYTE(v13) = 5;
    sub_25436D6B0();
    LOBYTE(v13) = 6;
    sub_25436D6B0();
    *(void *)&long long v13 = *(void *)(v3 + 128);
    char v12 = 7;
    type metadata accessor for DKBodyKeyPointList();
    sub_2542A1AF4(&qword_269DD8648, 255, (void (*)(uint64_t))type metadata accessor for DKBodyKeyPointList);
    sub_25436D6D0();
    LOBYTE(v13) = 8;
    sub_25436D6B0();
    LOBYTE(v13) = 9;
    sub_25436D6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2542942BC()
{
  unint64_t result = qword_269DD8640;
  if (!qword_269DD8640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8640);
  }
  return result;
}

uint64_t DKISSDetection.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKISSDetection.init(from:)(a1);
  return v2;
}

uint64_t DKISSDetection.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8650);
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 128) = 0;
  *(void *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 64) = 1;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 1;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 1;
  *(void *)(v1 + 112) = 0;
  *(unsigned char *)(v1 + 120) = 1;
  *(void *)(v1 + 136) = 0;
  *(unsigned char *)(v1 + 144) = 1;
  *(void *)(v1 + 152) = 0;
  *(unsigned char *)(v1 + 160) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542942BC();
  sub_25436D940();
  if (v2)
  {
    swift_release();
    type metadata accessor for DKISSDetection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v21) = 0;
    sub_25436D630();
    *(void *)(v1 + 16) = v8;
    type metadata accessor for CGRect(0);
    char v23 = 1;
    sub_2542A1AF4(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    sub_25436D650();
    long long v9 = v22;
    *(_OWORD *)(v1 + 24) = v21;
    *(_OWORD *)(v1 + 40) = v9;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 56) = sub_25436D600();
    *(unsigned char *)(v1 + 64) = v10 & 1;
    LOBYTE(v21) = 3;
    *(void *)(v1 + 72) = sub_25436D640();
    LOBYTE(v21) = 4;
    *(void *)(v1 + 80) = sub_25436D5F0();
    *(unsigned char *)(v1 + 88) = v12 & 1;
    LOBYTE(v21) = 5;
    *(void *)(v1 + 96) = sub_25436D5F0();
    *(unsigned char *)(v1 + 104) = v13 & 1;
    LOBYTE(v21) = 6;
    *(void *)(v1 + 112) = sub_25436D5F0();
    *(unsigned char *)(v1 + 120) = v14 & 1;
    type metadata accessor for DKBodyKeyPointList();
    char v23 = 7;
    sub_2542A1AF4(&qword_269DD8658, 255, (void (*)(uint64_t))type metadata accessor for DKBodyKeyPointList);
    sub_25436D610();
    *(void *)(v1 + 128) = v21;
    swift_release();
    LOBYTE(v21) = 8;
    *(void *)(v1 + 136) = sub_25436D5F0();
    *(unsigned char *)(v1 + 144) = v15 & 1;
    LOBYTE(v21) = 9;
    uint64_t v16 = sub_25436D5F0();
    char v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
    *(void *)(v3 + 152) = v16;
    *(unsigned char *)(v3 + 160) = v18 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_254294824@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_254294868(a1, (void (*)(void))type metadata accessor for DKISSDetection, (uint64_t (*)(uint64_t))DKISSDetection.init(from:), a2);
}

uint64_t sub_254294868@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  a2();
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_2542948D8(void *a1)
{
  return sub_254293F58(a1);
}

uint64_t sub_2542948FC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKISSDetection();
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t DKISSPrediction.trackerId.getter()
{
  return *(void *)v0;
}

uint64_t DKISSPrediction.trackerId.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*DKISSPrediction.trackerId.modify())()
{
  return nullsub_1;
}

uint64_t DKISSPrediction.rank.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DKISSPrediction.rank.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*DKISSPrediction.rank.modify())()
{
  return nullsub_1;
}

uint64_t DKISSPrediction.probabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKISSPrediction.probabilities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKISSPrediction.probabilities.modify())()
{
  return nullsub_1;
}

uint64_t DKISSModel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DKISSModel.init()();
  return v0;
}

uint64_t DKISSModel.init()()
{
  *(void *)(v0 + 48) = 120;
  *(void *)(v0 + 56) = 0xE100000000000000;
  *(void *)(v0 + 64) = 0x6E695F7868;
  *(void *)(v0 + 72) = 0xE500000000000000;
  *(void *)(v0 + 80) = 0x6E695F7863;
  *(void *)(v0 + 88) = 0xE500000000000000;
  *(void *)(v0 + 96) = 1802723693;
  *(void *)(v0 + 104) = 0xE400000000000000;
  *(void *)(v0 + 112) = 0x74756F5F7868;
  *(void *)(v0 + 120) = 0xE600000000000000;
  *(void *)(v0 + 128) = 0x74756F5F7863;
  *(void *)(v0 + 136) = 0xE600000000000000;
  *(void *)(v0 + 144) = 1684370032;
  *(void *)(v0 + 152) = 0xE400000000000000;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_DWORD *)(v0 + 320) = 0;
  *(_DWORD *)(v0 + 488) = 0;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  *(_OWORD *)(v0 + 408) = 0u;
  *(_OWORD *)(v0 + 360) = 0u;
  *(_OWORD *)(v0 + 376) = 0u;
  *(_OWORD *)(v0 + 328) = 0u;
  *(_OWORD *)(v0 + 344) = 0u;
  *(_DWORD *)(v0 + 656) = 0;
  *(_OWORD *)(v0 + 624) = 0u;
  *(_OWORD *)(v0 + 640) = 0u;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_OWORD *)(v0 + 608) = 0u;
  *(_OWORD *)(v0 + 560) = 0u;
  *(_OWORD *)(v0 + 576) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  *(_OWORD *)(v0 + 512) = 0u;
  *(_DWORD *)(v0 + 824) = 0;
  *(_OWORD *)(v0 + 792) = 0u;
  *(_OWORD *)(v0 + 808) = 0u;
  *(_OWORD *)(v0 + 760) = 0u;
  *(_OWORD *)(v0 + 776) = 0u;
  *(_OWORD *)(v0 + 728) = 0u;
  *(_OWORD *)(v0 + 744) = 0u;
  *(_OWORD *)(v0 + 696) = 0u;
  *(_OWORD *)(v0 + 712) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_OWORD *)(v0 + 680) = 0u;
  *(_DWORD *)(v0 + 992) = 0;
  *(_OWORD *)(v0 + 960) = 0u;
  *(_OWORD *)(v0 + 976) = 0u;
  *(_OWORD *)(v0 + 928) = 0u;
  *(_OWORD *)(v0 + 944) = 0u;
  *(_OWORD *)(v0 + 896) = 0u;
  *(_OWORD *)(v0 + 912) = 0u;
  *(_OWORD *)(v0 + 864) = 0u;
  *(_OWORD *)(v0 + 880) = 0u;
  *(_OWORD *)(v0 + 832) = 0u;
  *(_OWORD *)(v0 + 848) = 0u;
  *(_DWORD *)(v0 + 1160) = 0;
  *(_OWORD *)(v0 + 1128) = 0u;
  *(_OWORD *)(v0 + 1144) = 0u;
  *(_OWORD *)(v0 + 1096) = 0u;
  *(_OWORD *)(v0 + 1112) = 0u;
  *(_OWORD *)(v0 + 1064) = 0u;
  *(_OWORD *)(v0 + 1080) = 0u;
  *(_OWORD *)(v0 + 1032) = 0u;
  *(_OWORD *)(v0 + 1048) = 0u;
  *(_OWORD *)(v0 + 1000) = 0u;
  *(_OWORD *)(v0 + 1016) = 0u;
  *(_DWORD *)(v0 + 1328) = 0;
  *(_OWORD *)(v0 + 1312) = 0u;
  *(_OWORD *)(v0 + 1296) = 0u;
  *(_OWORD *)(v0 + 1280) = 0u;
  *(_OWORD *)(v0 + 1264) = 0u;
  *(_OWORD *)(v0 + 1248) = 0u;
  *(_OWORD *)(v0 + 1232) = 0u;
  *(_OWORD *)(v0 + 1216) = 0u;
  *(_OWORD *)(v0 + 1200) = 0u;
  *(_OWORD *)(v0 + 1184) = 0u;
  uint64_t v2 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_logger;
  *(_OWORD *)(v0 + 1168) = 0u;
  sub_25436C9E0();
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_maxNumTrackers) = 10;
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_forgetDetectionThreshold) = 0x3FF0000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes) = MEMORY[0x263F8EE88];
  uint64_t v3 = MEMORY[0x263F8EE80];
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap) = MEMORY[0x263F8EE80];
  *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap) = v3;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_poseNormalisation) = 1050857701;
  uint64_t v4 = sub_25429E534(0xD000000000000021, 0x800000025437B890, 0x737465737341, 0xE600000000000000, 0xD000000000000010, 0x8000000254379D30);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_25436C9F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v2, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKISSModel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v6;
    *(_DWORD *)(v0 + 40) = v7;
    long long v9 = (void *)sub_25436CE40();
    void v9[2] = 10;
    void v9[4] = -1;
    v9[5] = 0;
    v9[6] = -1;
    v9[7] = 0;
    v9[8] = -1;
    v9[9] = 0;
    v9[10] = -1;
    v9[11] = 0;
    v9[12] = -1;
    v9[13] = 0;
    v9[14] = -1;
    v9[15] = 0;
    v9[16] = -1;
    v9[17] = 0;
    v9[18] = -1;
    v9[19] = 0;
    v9[20] = -1;
    v9[21] = 0;
    v9[22] = -1;
    v9[23] = 0;
    *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections) = v9;
    sub_2542683B0(&v11, 0);
    sub_2542683B0(&v11, 1);
    sub_2542683B0(&v11, 2);
    sub_2542683B0(&v11, 3);
    sub_2542683B0(&v11, 4);
    sub_2542683B0(&v11, 5);
    sub_2542683B0(&v11, 6);
    sub_2542683B0(&v11, 7);
    sub_2542683B0(&v11, 8);
    sub_2542683B0(&v11, 9);
    sub_254294F98();
  }
  return v0;
}

uint64_t DKISSModel.deinit()
{
  espresso_plan_destroy();
  espresso_context_destroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSModel.__deallocating_deinit()
{
  DKISSModel.deinit();
  return swift_deallocClassInstance();
}

void sub_254294F98()
{
  uint64_t v2 = v0;
  uint64_t v3 = (uint64_t)v0[6];
  uint64_t v4 = (uint64_t)v2[7];
  uint64_t v5 = v2 + 20;
  swift_bridgeObjectRetain();
  sub_25429EB9C((uint64_t)(v2 + 4), v3, v4, (uint64_t)(v2 + 20), 0x10000, 29, 0xD00000000000001BLL, 0x800000025437BCB0);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v6 = (uint64_t)v2[8];
    uint64_t v7 = (uint64_t)v2[9];
    swift_bridgeObjectRetain();
    sub_25429EB9C((uint64_t)(v2 + 4), v6, v7, (uint64_t)(v2 + 41), 0x10000, 29, 0xD00000000000001BLL, 0x800000025437BCB0);
    swift_bridgeObjectRelease();
    uint64_t v8 = (uint64_t)v2[10];
    uint64_t v9 = (uint64_t)v2[11];
    swift_bridgeObjectRetain();
    sub_25429EB9C((uint64_t)(v2 + 4), v8, v9, (uint64_t)(v2 + 62), 0x10000, 29, 0xD00000000000001BLL, 0x800000025437BCB0);
    swift_bridgeObjectRelease();
    uint64_t v10 = (uint64_t)v2[12];
    uint64_t v11 = (uint64_t)v2[13];
    swift_bridgeObjectRetain();
    sub_25429EB9C((uint64_t)(v2 + 4), v10, v11, (uint64_t)(v2 + 83), 0x10000, 29, 0xD00000000000001BLL, 0x800000025437BCB0);
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)v2[14];
    uint64_t v13 = (uint64_t)v2[15];
    uint64_t v42 = v2 + 83;
    swift_bridgeObjectRetain();
    uint64_t v41 = v2 + 104;
    sub_25429EB9C((uint64_t)(v2 + 4), v12, v13, (uint64_t)(v2 + 104), 0x20000, 30, 0xD00000000000001CLL, 0x800000025437BC90);
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t)v2[16];
    uint64_t v15 = (uint64_t)v2[17];
    swift_bridgeObjectRetain();
    sub_25429EB9C((uint64_t)(v2 + 4), v14, v15, (uint64_t)(v2 + 125), 0x20000, 30, 0xD00000000000001CLL, 0x800000025437BC90);
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t)v2[18];
    uint64_t v17 = (uint64_t)v2[19];
    char v18 = v2 + 125;
    swift_bridgeObjectRetain();
    sub_25429EB9C((uint64_t)(v2 + 4), v16, v17, (uint64_t)(v2 + 146), 0x20000, 30, 0xD00000000000001CLL, 0x800000025437BC90);
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)v2[31];
    if (v19 <= 0)
    {
      sub_25436D290();
      swift_bridgeObjectRelease();
      sub_25436D760();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      sub_254261A48();
      swift_allocError();
      *(void *)uint64_t v40 = 0xD00000000000001FLL;
      *(void *)(v40 + 8) = 0x800000025437BC70;
      *(unsigned char *)(v40 + 16) = 0;
      swift_willThrow();
      return;
    }
    uint64_t v20 = *v5;
    if (!*v5) {
      goto LABEL_43;
    }
    uint64_t v21 = (uint64_t)v2[30];
    uint64_t v22 = v21 * v19;
    if ((unsigned __int128)(v21 * (__int128)v19) >> 64 != (v21 * v19) >> 63)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    char v23 = *v42;
    if (!*v42)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v24 = (uint64_t)v2[93];
    uint64_t v25 = (uint64_t)v2[94];
    uint64_t v26 = v24 * v25;
    uint64_t v27 = (unsigned __int128)(v24 * (__int128)v25) >> 64;
    BOOL v28 = v27 == v26 >> 63;
    BOOL v29 = v27 != v26 >> 63;
    if (!v28) {
      goto LABEL_33;
    }
    unint64_t v30 = *v41;
    if (!*v41)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if ((unsigned __int128)((uint64_t)v2[114] * (__int128)(uint64_t)v2[115]) >> 64 != (uint64_t)((void)v2[114]
                                                                                             * (void)v2[115]) >> 63)
      goto LABEL_34;
    unint64_t v31 = *v18;
    if (!*v18)
    {
LABEL_46:
      __break(1u);
      return;
    }
    if ((unsigned __int128)((uint64_t)v2[135] * (__int128)(uint64_t)v2[136]) >> 64 != (uint64_t)((void)v2[135]
                                                                                             * (void)v2[136]) >> 63)
      goto LABEL_35;
    if (v22 < 0)
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v22)
    {
      bzero(v20, 4 * v22);
      uint64_t v32 = (uint64_t)v2[93];
      uint64_t v33 = (uint64_t)v2[94];
      uint64_t v26 = v32 * v33;
      BOOL v29 = (unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63;
    }
    if (v29) {
      goto LABEL_37;
    }
    if (v26 < 0)
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v26) {
      bzero(v23, 4 * v26);
    }
    uint64_t v34 = (uint64_t)v2[114];
    uint64_t v35 = (uint64_t)v2[115];
    uint64_t v36 = v34 * v35;
    if ((unsigned __int128)(v34 * (__int128)v35) >> 64 != (v34 * v35) >> 63) {
      goto LABEL_39;
    }
    if (v36 < 0)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v36) {
      bzero(v30, 4 * v36);
    }
    uint64_t v37 = (uint64_t)v2[135];
    uint64_t v38 = (uint64_t)v2[136];
    uint64_t v39 = v37 * v38;
    if ((unsigned __int128)(v37 * (__int128)v38) >> 64 != (v37 * v38) >> 63) {
      goto LABEL_41;
    }
    if (v39 < 0)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v39)
    {
      bzero(v31, 4 * v39);
    }
  }
}

uint64_t sub_25429546C(uint64_t a1)
{
  unint64_t v165 = (void *)v1[20];
  if (!v165)
  {
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
    goto LABEL_235;
  }
  uint64_t v4 = v1[30];
  uint64_t v3 = v1[31];
  uint64_t v5 = v4 * v3;
  uint64_t v161 = v4;
  if ((unsigned __int128)(v4 * (__int128)v3) >> 64 != (v4 * v3) >> 63) {
    goto LABEL_43;
  }
  uint64_t v163 = (void *)v1[83];
  if (!v163) {
    goto LABEL_230;
  }
  if (v5 < 0) {
    goto LABEL_44;
  }
  if (v5) {
    bzero(v165, 4 * v5);
  }
  uint64_t v6 = v1[94];
  if (v6 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v6) {
    bzero(v163, 4 * v6);
  }
  uint64_t v171 = v1;
  unint64_t v172 = MEMORY[0x263F8EE78];
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >> 62)
  {
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_25436D530();
    if (v7) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
  uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v7)
  {
LABEL_12:
    uint64_t v8 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v11 = MEMORY[0x25A275A00](v9, v2);
        BOOL v12 = __OFADD__(v9++, 1);
        if (v12)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        uint64_t v13 = *(void **)((char *)v171 + v8);
        uint64_t v14 = v13[2];
        if (v14)
        {
          uint64_t v15 = *(void *)(v11 + 16);
          if (v15 == v13[4])
          {
            unint64_t v10 = 0;
LABEL_15:
            sub_25429FC3C(v11, v10, (uint64_t)v165, (uint64_t)v163, v161, *(double *)(a1 + 24));
            goto LABEL_16;
          }
          unint64_t v10 = 0;
          uint64_t v16 = v13 + 6;
          uint64_t v17 = v14 - 1;
          while (v17 != v10)
          {
            uint64_t v18 = *v16;
            v16 += 2;
            ++v10;
            if (v15 == v18) {
              goto LABEL_15;
            }
          }
        }
        uint64_t v19 = swift_retain();
        MEMORY[0x25A275490](v19);
        if (*(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_25436CE10();
        }
        sub_25436CE60();
        sub_25436CDE0();
LABEL_16:
        swift_unknownObjectRelease();
        if (v9 == v7) {
          goto LABEL_47;
        }
      }
    }
    for (unint64_t i = 0; i != v7; ++i)
    {
      if (i >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_42;
      }
      uint64_t v24 = *(void **)((char *)v171 + v8);
      uint64_t v25 = v24[2];
      if (v25)
      {
        uint64_t v26 = *(void *)(*(void *)(v2 + 32 + 8 * i) + 16);
        if (v26 == v24[4])
        {
          unint64_t v21 = 0;
LABEL_29:
          double v22 = *(double *)(a1 + 24);
          uint64_t v23 = swift_retain();
          sub_25429FC3C(v23, v21, (uint64_t)v165, (uint64_t)v163, v161, v22);
          goto LABEL_30;
        }
        unint64_t v21 = 0;
        uint64_t v27 = v24 + 6;
        uint64_t v28 = v25 - 1;
        while (v28 != v21)
        {
          uint64_t v29 = *v27;
          v27 += 2;
          ++v21;
          if (v26 == v29) {
            goto LABEL_29;
          }
        }
      }
      uint64_t v30 = swift_retain_n();
      MEMORY[0x25A275490](v30);
      if (*(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
LABEL_30:
      swift_release();
    }
  }
LABEL_47:
  swift_bridgeObjectRelease();
  sub_254297490(1.0, *(double *)(a1 + 24));
  if (v172 >> 62) {
    goto LABEL_83;
  }
  uint64_t v31 = *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v31; uint64_t v31 = sub_25436D530())
  {
    unint64_t v32 = 0;
    uint64_t v33 = (char *)v171 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes;
    while ((v172 & 0xC000000000000001) != 0)
    {
      uint64_t v35 = MEMORY[0x25A275A00](v32, v172);
      BOOL v12 = __OFADD__(v32++, 1);
      if (v12) {
        goto LABEL_79;
      }
LABEL_58:
      uint64_t v36 = *(void **)v33;
      char v37 = *(unsigned char *)(*(void *)v33 + 32);
      uint64_t v38 = 1 << v37;
      unint64_t v39 = *(void *)(*(void *)v33 + 56);
      if (v39)
      {
        uint64_t v40 = 0;
      }
      else
      {
        unsigned int v43 = v37 & 0x3F;
        if (v43 < 7) {
          goto LABEL_51;
        }
        unint64_t v39 = v36[8];
        if (v39)
        {
          uint64_t v40 = 1;
        }
        else
        {
          if (v43 < 8) {
            goto LABEL_51;
          }
          unint64_t v39 = v36[9];
          if (v39)
          {
            uint64_t v40 = 2;
          }
          else
          {
            unint64_t v39 = v36[10];
            if (!v39)
            {
              uint64_t v44 = 0;
              unint64_t v45 = (unint64_t)(v38 + 63) >> 6;
              if (v45 <= 4) {
                unint64_t v45 = 4;
              }
              unint64_t v46 = v45 - 4;
              while (v46 != v44)
              {
                unint64_t v39 = v36[v44++ + 11];
                if (v39)
                {
                  uint64_t v40 = v44 + 3;
                  goto LABEL_60;
                }
              }
              goto LABEL_51;
            }
            uint64_t v40 = 3;
          }
        }
      }
LABEL_60:
      unint64_t v41 = __clz(__rbit64(v39));
      uint64_t v42 = v41 + (v40 << 6);
      if (v42 != v38)
      {
        if (v42 < 0 || v42 >= v38) {
          goto LABEL_80;
        }
        if (((*(void *)(*(void *)v33 + 56 + (((unint64_t)v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
          goto LABEL_81;
        }
        unint64_t v34 = *(void *)(v36[6] + 8 * v42);
        sub_25429FC3C(v35, v34, (uint64_t)v165, (uint64_t)v163, v161, *(double *)(a1 + 24));
        sub_25429DC1C(v34);
      }
LABEL_51:
      swift_release();
      if (v32 == v31) {
        goto LABEL_84;
      }
    }
    if (v32 >= *(void *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_82;
    }
    uint64_t v35 = *(void *)(v172 + 32 + 8 * v32);
    swift_retain();
    BOOL v12 = __OFADD__(v32++, 1);
    if (!v12) {
      goto LABEL_58;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    swift_bridgeObjectRetain();
  }
LABEL_84:
  swift_bridgeObjectRelease();
  CGFloat v47 = v171;
  uint64_t v48 = (char *)v171[41];
  if (!v48) {
    goto LABEL_231;
  }
  uint64_t v49 = v171[51];
  uint64_t v50 = v171[52];
  uint64_t v51 = v49 * v50;
  if ((unsigned __int128)(v49 * (__int128)v50) >> 64 != (v49 * v50) >> 63) {
    goto LABEL_222;
  }
  CGFloat v52 = (char *)v171[104];
  if (!v52) {
    goto LABEL_232;
  }
  if ((unsigned __int128)((uint64_t)v171[114] * (__int128)(uint64_t)v171[115]) >> 64 != (uint64_t)(v171[114] * v171[115]) >> 63) {
    goto LABEL_223;
  }
  uint64_t v53 = (char *)v171[62];
  if (!v53) {
    goto LABEL_233;
  }
  if ((unsigned __int128)((uint64_t)v171[72] * (__int128)(uint64_t)v171[73]) >> 64 != (uint64_t)(v171[72] * v171[73]) >> 63) {
    goto LABEL_224;
  }
  uint64_t v54 = (char *)v171[125];
  if (!v54) {
    goto LABEL_234;
  }
  if ((unsigned __int128)((uint64_t)v171[135] * (__int128)(uint64_t)v171[136]) >> 64 != (uint64_t)(v171[135] * v171[136]) >> 63) {
    goto LABEL_225;
  }
  if (v51 < 0) {
    goto LABEL_237;
  }
  size_t v55 = 4 * v51;
  if (&v48[4 * v51] > v52 && &v52[v55] > v48) {
    goto LABEL_237;
  }
  memcpy(v48, v52, v55);
  uint64_t v56 = v171[72];
  uint64_t v57 = v171[73];
  uint64_t v58 = v56 * v57;
  if ((unsigned __int128)(v56 * (__int128)v57) >> 64 != (v56 * v57) >> 63) {
    goto LABEL_226;
  }
  if (v58 < 0) {
    goto LABEL_237;
  }
  size_t v59 = 4 * v58;
  if (&v53[4 * v58] > v54 && &v54[v59] > v53) {
    goto LABEL_237;
  }
  memcpy(v53, v54, v59);
  espresso_plan_execute_sync();
  uint64_t v158 = v171[146];
  if (v158)
  {
    swift_bridgeObjectRelease();
    if ((unsigned __int128)((uint64_t)v171[156] * (__int128)(uint64_t)v171[157]) >> 64 != (uint64_t)(v171[156] * v171[157]) >> 63) {
      goto LABEL_227;
    }
    unint64_t v60 = sub_254269590(MEMORY[0x263F8EE78]);
    uint64_t v61 = v171[157];
    if ((v61 & 0x8000000000000000) == 0)
    {
      unint64_t v62 = v60;
      if (v61)
      {
        uint64_t v63 = 0;
        uint64_t v159 = v171[157];
        uint64_t v160 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
        uint64_t v162 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
        while (1)
        {
          if (v63 == v61) {
            goto LABEL_209;
          }
          uint64_t v64 = v47[156];
          uint64_t v65 = v63 * v64;
          if ((unsigned __int128)(v63 * (__int128)v64) >> 64 != (v63 * v64) >> 63) {
            goto LABEL_210;
          }
          uint64_t v66 = *(void *)((char *)v47 + v162);
          if ((unint64_t)v63 >= *(void *)(v66 + 16)) {
            goto LABEL_211;
          }
          unint64_t v67 = *(void *)(v66 + 16 * v63 + 32);
          if ((v67 & 0x8000000000000000) == 0) {
            break;
          }
LABEL_106:
          if (++v63 == v61) {
            goto LABEL_169;
          }
        }
        BOOL v12 = __OFADD__(v65, v64);
        uint64_t v68 = v65 + v64;
        if (v12) {
          goto LABEL_212;
        }
        uint64_t v166 = (void *)v67;
        uint64_t v69 = v68 - v65;
        if (v68 < v65) {
          goto LABEL_213;
        }
        uint64_t v70 = (char *)MEMORY[0x263F8EE78];
        if (v68 != v65)
        {
          if (v69 >= 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B18);
            uint64_t v70 = (char *)swift_allocObject();
            int64_t v71 = _swift_stdlib_malloc_size(v70);
            uint64_t v72 = v71 - 32;
            if (v71 < 32) {
              uint64_t v72 = v71 - 29;
            }
            *((void *)v70 + 2) = v69;
            *((void *)v70 + 3) = 2 * (v72 >> 2);
          }
          uint64_t v73 = v65 + v69;
          if (__OFADD__(v65, v69)) {
            goto LABEL_216;
          }
          if (v73 < v65) {
            goto LABEL_217;
          }
          if (v73 == v65)
          {
            uint64_t v74 = 0;
          }
          else
          {
            uint64_t v74 = v69;
            if (v69 < 0) {
              goto LABEL_237;
            }
            CGRect v75 = v70 + 32;
            uint64_t v76 = (char *)(v158 + 4 * v65);
            if (v76 < &v70[4 * v69 + 32] && v75 < &v76[4 * v69]) {
              goto LABEL_237;
            }
            memcpy(v75, v76, 4 * v69);
          }
          if (v74 != v69) {
            goto LABEL_218;
          }
        }
        unint64_t v169 = v62;
        uint64_t v78 = *((void *)v70 + 2);
        uint64_t v79 = 0;
        if (v78)
        {
          uint64_t v80 = 0;
          uint64_t v81 = (float *)(v70 + 32);
          double v82 = -INFINITY;
          unint64_t v83 = (void *)MEMORY[0x263F8EE80];
          while (1)
          {
            double v85 = exp(-v81[v80]);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v88 = sub_254351604(v80);
            uint64_t v89 = v83[2];
            BOOL v90 = (v87 & 1) == 0;
            uint64_t v91 = v89 + v90;
            if (__OFADD__(v89, v90)) {
              break;
            }
            char v92 = v87;
            if (v83[3] >= v91)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_25429D1B0();
              }
            }
            else
            {
              sub_25429A49C(v91, isUniquelyReferenced_nonNull_native);
              unint64_t v93 = sub_254351604(v80);
              if ((v92 & 1) != (v94 & 1)) {
                goto LABEL_236;
              }
              unint64_t v88 = v93;
            }
            double v95 = 1.0 / (v85 + 1.0);
            if (v92)
            {
              *(double *)(v83[7] + 8 * v88) = v95;
            }
            else
            {
              v83[(v88 >> 6) + 8] |= 1 << v88;
              uint64_t v96 = 8 * v88;
              *(void *)(v83[6] + v96) = v80;
              *(double *)(v83[7] + v96) = v95;
              uint64_t v97 = v83[2];
              BOOL v12 = __OFADD__(v97, 1);
              uint64_t v98 = v97 + 1;
              if (v12) {
                goto LABEL_205;
              }
              v83[2] = v98;
            }
            uint64_t v84 = v80 + 1;
            swift_bridgeObjectRelease();
            if (v82 < v81[v80])
            {
              double v82 = v81[v80];
              uint64_t v79 = v80;
            }
            ++v80;
            if (v78 == v84) {
              goto LABEL_147;
            }
          }
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        unint64_t v83 = (void *)MEMORY[0x263F8EE80];
LABEL_147:
        swift_release();
        char v99 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v101 = sub_254351604(v63);
        uint64_t v102 = *(void *)(v169 + 16);
        BOOL v103 = (v100 & 1) == 0;
        uint64_t v104 = v102 + v103;
        if (__OFADD__(v102, v103)) {
          goto LABEL_214;
        }
        char v105 = v100;
        if (*(void *)(v169 + 24) < v104)
        {
          sub_25429A748(v104, v99);
          unint64_t v106 = sub_254351604(v63);
          if ((v105 & 1) != (v107 & 1)) {
            goto LABEL_236;
          }
          unint64_t v101 = v106;
          CGFloat v47 = v171;
          unint64_t v62 = v169;
          if ((v105 & 1) == 0) {
            goto LABEL_156;
          }
LABEL_154:
          uint64_t v108 = (void *)(*(void *)(v62 + 56) + 24 * v101);
          swift_bridgeObjectRelease();
          *uint64_t v108 = v166;
          v108[1] = v79;
          v108[2] = v83;
          uint64_t v109 = (uint64_t)v166;
          goto LABEL_158;
        }
        if (v99)
        {
          CGFloat v47 = v171;
          unint64_t v62 = v169;
          if (v100) {
            goto LABEL_154;
          }
        }
        else
        {
          sub_25429D340();
          CGFloat v47 = v171;
          unint64_t v62 = v169;
          if (v105) {
            goto LABEL_154;
          }
        }
LABEL_156:
        *(void *)(v62 + 8 * (v101 >> 6) + 64) |= 1 << v101;
        *(void *)(*(void *)(v62 + 48) + 8 * v101) = v63;
        uint64_t v110 = (void *)(*(void *)(v62 + 56) + 24 * v101);
        uint64_t v109 = (uint64_t)v166;
        *uint64_t v110 = v166;
        v110[1] = v79;
        v110[2] = v83;
        uint64_t v111 = *(void *)(v62 + 16);
        BOOL v12 = __OFADD__(v111, 1);
        uint64_t v112 = v111 + 1;
        if (v12) {
          goto LABEL_219;
        }
        *(void *)(v62 + 16) = v112;
LABEL_158:
        swift_bridgeObjectRelease();
        char v113 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v114 = *(void **)((char *)v47 + v160);
        *(void *)((char *)v47 + v160) = 0x8000000000000000;
        unint64_t v116 = sub_254351604(v109);
        uint64_t v117 = v114[2];
        BOOL v118 = (v115 & 1) == 0;
        uint64_t v119 = v117 + v118;
        if (__OFADD__(v117, v118)) {
          goto LABEL_215;
        }
        char v120 = v115;
        if (v114[3] < v119)
        {
          sub_25429A1F4(v119, v113);
          unint64_t v121 = sub_254351604(v109);
          if ((v120 & 1) != (v122 & 1)) {
            goto LABEL_236;
          }
          unint64_t v116 = v121;
          unint64_t v123 = v114;
          if ((v120 & 1) == 0) {
            goto LABEL_165;
          }
LABEL_104:
          *(void *)(v123[7] + 8 * v116) = v63;
LABEL_105:
          *(void *)((char *)v47 + v160) = v123;
          swift_bridgeObjectRelease();
          uint64_t v61 = v159;
          goto LABEL_106;
        }
        if (v113)
        {
          unint64_t v123 = v114;
          if (v115) {
            goto LABEL_104;
          }
        }
        else
        {
          sub_25429D020();
          unint64_t v123 = v114;
          if (v120) {
            goto LABEL_104;
          }
        }
LABEL_165:
        v123[(v116 >> 6) + 8] |= 1 << v116;
        uint64_t v124 = 8 * v116;
        *(void *)(v123[6] + v124) = v109;
        *(void *)(v123[7] + v124) = v63;
        uint64_t v125 = v123[2];
        BOOL v12 = __OFADD__(v125, 1);
        uint64_t v126 = v125 + 1;
        if (v12) {
          goto LABEL_220;
        }
        v123[2] = v126;
        goto LABEL_105;
      }
LABEL_169:
      unint64_t v164 = (void *)(v62 + 64);
      uint64_t v127 = 1 << *(unsigned char *)(v62 + 32);
      uint64_t v128 = -1;
      if (v127 < 64) {
        uint64_t v128 = ~(-1 << v127);
      }
      unint64_t v129 = v128 & *(void *)(v62 + 64);
      unint64_t v130 = v62;
      uint64_t v131 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
      uint64_t v167 = (void *)((unint64_t)(v127 + 63) >> 6);
      unint64_t v170 = v130;
      swift_bridgeObjectRetain();
      uint64_t v132 = 0;
      while (1)
      {
        if (v129)
        {
          unint64_t v134 = __clz(__rbit64(v129));
          v129 &= v129 - 1;
          unint64_t v135 = v134 | (v132 << 6);
        }
        else
        {
          uint64_t v136 = v132 + 1;
          if (__OFADD__(v132, 1)) {
            goto LABEL_208;
          }
          if (v136 >= (uint64_t)v167)
          {
LABEL_203:
            swift_release();
            return v170;
          }
          unint64_t v137 = v164[v136];
          ++v132;
          if (!v137)
          {
            uint64_t v132 = v136 + 1;
            if (v136 + 1 >= (uint64_t)v167) {
              goto LABEL_203;
            }
            unint64_t v137 = v164[v132];
            if (!v137)
            {
              uint64_t v132 = v136 + 2;
              if (v136 + 2 >= (uint64_t)v167) {
                goto LABEL_203;
              }
              unint64_t v137 = v164[v132];
              if (!v137)
              {
                uint64_t v132 = v136 + 3;
                if (v136 + 3 >= (uint64_t)v167) {
                  goto LABEL_203;
                }
                unint64_t v137 = v164[v132];
                if (!v137)
                {
                  uint64_t v138 = v136 + 4;
                  if (v138 >= (uint64_t)v167) {
                    goto LABEL_203;
                  }
                  unint64_t v137 = v164[v138];
                  if (!v137)
                  {
                    while (1)
                    {
                      uint64_t v132 = v138 + 1;
                      if (__OFADD__(v138, 1)) {
                        break;
                      }
                      if (v132 >= (uint64_t)v167) {
                        goto LABEL_203;
                      }
                      unint64_t v137 = v164[v132];
                      ++v138;
                      if (v137) {
                        goto LABEL_191;
                      }
                    }
LABEL_221:
                    __break(1u);
LABEL_222:
                    __break(1u);
LABEL_223:
                    __break(1u);
LABEL_224:
                    __break(1u);
LABEL_225:
                    __break(1u);
LABEL_226:
                    __break(1u);
LABEL_227:
                    __break(1u);
                    break;
                  }
                  uint64_t v132 = v138;
                }
              }
            }
          }
LABEL_191:
          unint64_t v129 = (v137 - 1) & v137;
          unint64_t v135 = __clz(__rbit64(v137)) + (v132 << 6);
        }
        uint64_t v139 = (uint64_t *)(*(void *)(v170 + 56) + 24 * v135);
        uint64_t v141 = *v139;
        uint64_t v140 = v139[1];
        uint64_t v142 = v139[2];
        swift_bridgeObjectRetain_n();
        char v143 = swift_isUniquelyReferenced_nonNull_native();
        char v144 = *(void **)((char *)v47 + v131);
        *(void *)((char *)v47 + v131) = 0x8000000000000000;
        unint64_t v146 = sub_254351604(v141);
        uint64_t v147 = v144[2];
        BOOL v148 = (v145 & 1) == 0;
        uint64_t v149 = v147 + v148;
        if (__OFADD__(v147, v148)) {
          goto LABEL_206;
        }
        char v150 = v145;
        if (v144[3] >= v149)
        {
          if (v143)
          {
            os_log_type_t v153 = v144;
            if (v145) {
              goto LABEL_172;
            }
          }
          else
          {
            sub_25429D340();
            os_log_type_t v153 = v144;
            if (v150) {
              goto LABEL_172;
            }
          }
        }
        else
        {
          sub_25429A748(v149, v143);
          unint64_t v151 = sub_254351604(v141);
          if ((v150 & 1) != (v152 & 1)) {
            goto LABEL_236;
          }
          unint64_t v146 = v151;
          os_log_type_t v153 = v144;
          if (v150)
          {
LABEL_172:
            uint64_t v133 = (uint64_t *)(v153[7] + 24 * v146);
            swift_bridgeObjectRelease();
            uint64_t *v133 = v141;
            v133[1] = v140;
            v133[2] = v142;
            goto LABEL_173;
          }
        }
        v153[(v146 >> 6) + 8] |= 1 << v146;
        *(void *)(v153[6] + 8 * v146) = v141;
        uint64_t v154 = (uint64_t *)(v153[7] + 24 * v146);
        *uint64_t v154 = v141;
        v154[1] = v140;
        v154[2] = v142;
        uint64_t v155 = v153[2];
        BOOL v12 = __OFADD__(v155, 1);
        uint64_t v156 = v155 + 1;
        if (v12) {
          goto LABEL_207;
        }
        v153[2] = v156;
LABEL_173:
        CGFloat v47 = v171;
        *(void *)((char *)v171 + v131) = v153;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    __break(1u);
    goto LABEL_229;
  }
LABEL_235:
  __break(1u);
LABEL_236:
  sub_25436D850();
  __break(1u);
LABEL_237:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25429630C(uint64_t a1, char a2, double a3)
{
  uint64_t v8 = v4;
  uint64_t v206 = v8;
  if (a2)
  {
    uint64_t v202 = *(void **)(v8 + 160);
    if (!v202)
    {
LABEL_265:
      __break(1u);
      goto LABEL_266;
    }
    uint64_t v11 = *(void *)(v8 + 240);
    uint64_t v10 = *(void *)(v8 + 248);
    uint64_t v12 = v11 * v10;
    uint64_t v196 = v11;
    if ((unsigned __int128)(v11 * (__int128)v10) >> 64 == (v11 * v10) >> 63)
    {
      CGFloat v199 = *(void **)(v8 + 664);
      if (!v199)
      {
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
        goto LABEL_271;
      }
      if ((v12 & 0x8000000000000000) == 0)
      {
        double v7 = a3;
        if (v12) {
          bzero(v202, 4 * v12);
        }
        uint64_t v13 = *(void *)(v8 + 752);
        if ((v13 & 0x8000000000000000) == 0)
        {
          if (v13) {
            bzero(v199, 4 * v13);
          }
          unint64_t v207 = MEMORY[0x263F8EE78];
          unint64_t v6 = *(void *)(a1 + 24);
          if (!(v6 >> 62))
          {
            uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v8) {
              goto LABEL_13;
            }
            goto LABEL_81;
          }
LABEL_80:
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_25436D530();
          if (v8)
          {
LABEL_13:
            uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
            if ((v6 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = 0;
              do
              {
                uint64_t v16 = MEMORY[0x25A275A00](v15, v6);
                BOOL v17 = __OFADD__(v15++, 1);
                if (v17) {
                  goto LABEL_72;
                }
                uint64_t v18 = *(void *)(v206 + v14);
                uint64_t v19 = *(void *)(v18 + 16);
                if (v19)
                {
                  unint64_t v20 = 0;
                  unint64_t v21 = (uint64_t *)(v18 + 32);
                  while (1)
                  {
                    uint64_t v22 = *v21;
                    v21 += 2;
                    char v23 = *(void *)(v16 + 56) == v22 ? *(unsigned char *)(v16 + 64) : 1;
                    if ((v23 & 1) == 0) {
                      break;
                    }
                    if (v19 == ++v20) {
                      goto LABEL_25;
                    }
                  }
                  sub_25429ECB4((double *)v16, v20, (uint64_t)v202, (uint64_t)v199, v196);
                }
                else
                {
LABEL_25:
                  uint64_t v24 = swift_retain();
                  MEMORY[0x25A275490](v24);
                  if (*(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v207 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_25436CE10();
                  sub_25436CE60();
                  sub_25436CDE0();
                }
                swift_unknownObjectRelease();
              }
              while (v15 != v8);
            }
            else
            {
              unint64_t v3 = 0;
              unint64_t v5 = v6 & 0xFFFFFFFFFFFFFF8;
              do
              {
                if (v3 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_73;
                }
                uint64_t v53 = *(void *)(v6 + 32 + 8 * v3);
                uint64_t v54 = *(void *)(v206 + v14);
                uint64_t v55 = *(void *)(v54 + 16);
                if (v55)
                {
                  unint64_t v56 = 0;
                  uint64_t v57 = (uint64_t *)(v54 + 32);
                  while (1)
                  {
                    uint64_t v58 = *v57;
                    v57 += 2;
                    char v59 = *(void *)(v53 + 56) == v58 ? *(unsigned char *)(v53 + 64) : 1;
                    if ((v59 & 1) == 0) {
                      break;
                    }
                    if (v55 == ++v56) {
                      goto LABEL_68;
                    }
                  }
                  CGFloat v52 = (double *)swift_retain();
                  sub_25429ECB4(v52, v56, (uint64_t)v202, (uint64_t)v199, v196);
                }
                else
                {
LABEL_68:
                  uint64_t v60 = swift_retain_n();
                  MEMORY[0x25A275490](v60);
                  if (*(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v207 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_25436CE10();
                  sub_25436CE60();
                  sub_25436CDE0();
                }
                ++v3;
                swift_release();
              }
              while (v3 != v8);
            }
          }
LABEL_81:
          swift_bridgeObjectRelease();
          sub_254297490(1.0, v7);
          if (v207 >> 62) {
            goto LABEL_117;
          }
          uint64_t v61 = *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          for (; v61; uint64_t v61 = sub_25436D530())
          {
            unint64_t v62 = 0;
            uint64_t v63 = (char *)(v206 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes);
            while ((v207 & 0xC000000000000001) != 0)
            {
              uint64_t v65 = (double *)MEMORY[0x25A275A00](v62, v207);
              BOOL v17 = __OFADD__(v62++, 1);
              if (v17) {
                goto LABEL_113;
              }
LABEL_92:
              uint64_t v66 = *(void **)v63;
              char v67 = *(unsigned char *)(*(void *)v63 + 32);
              uint64_t v68 = 1 << v67;
              unint64_t v69 = *(void *)(*(void *)v63 + 56);
              if (v69)
              {
                uint64_t v70 = 0;
              }
              else
              {
                unsigned int v73 = v67 & 0x3F;
                if (v73 < 7) {
                  goto LABEL_85;
                }
                unint64_t v69 = v66[8];
                if (v69)
                {
                  uint64_t v70 = 1;
                }
                else
                {
                  if (v73 < 8) {
                    goto LABEL_85;
                  }
                  unint64_t v69 = v66[9];
                  if (v69)
                  {
                    uint64_t v70 = 2;
                  }
                  else
                  {
                    unint64_t v69 = v66[10];
                    if (!v69)
                    {
                      uint64_t v74 = 0;
                      unint64_t v75 = (unint64_t)(v68 + 63) >> 6;
                      if (v75 <= 4) {
                        unint64_t v75 = 4;
                      }
                      unint64_t v76 = v75 - 4;
                      while (v76 != v74)
                      {
                        unint64_t v69 = v66[v74++ + 11];
                        if (v69)
                        {
                          uint64_t v70 = v74 + 3;
                          goto LABEL_94;
                        }
                      }
                      goto LABEL_85;
                    }
                    uint64_t v70 = 3;
                  }
                }
              }
LABEL_94:
              unint64_t v71 = __clz(__rbit64(v69));
              uint64_t v72 = v71 + (v70 << 6);
              if (v72 != v68)
              {
                if (v72 < 0 || v72 >= v68) {
                  goto LABEL_114;
                }
                if (((*(void *)(*(void *)v63 + 56 + (((unint64_t)v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v71) & 1) == 0) {
                  goto LABEL_115;
                }
                unint64_t v64 = *(void *)(v66[6] + 8 * v72);
                sub_25429ECB4(v65, v64, (uint64_t)v202, (uint64_t)v199, v196);
                sub_25429DC1C(v64);
              }
LABEL_85:
              swift_release();
              if (v62 == v61) {
                goto LABEL_118;
              }
            }
            if (v62 >= *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_116;
            }
            uint64_t v65 = *(double **)(v207 + 32 + 8 * v62);
            swift_retain();
            BOOL v17 = __OFADD__(v62++, 1);
            if (!v17) {
              goto LABEL_92;
            }
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            swift_bridgeObjectRetain();
          }
LABEL_118:
          swift_bridgeObjectRelease();
          CGRect v77 = (void *)v206;
          uint64_t v78 = *(char **)(v206 + 328);
          if (!v78) {
            goto LABEL_267;
          }
          uint64_t v79 = *(void *)(v206 + 408);
          uint64_t v80 = *(void *)(v206 + 416);
          uint64_t v81 = v79 * v80;
          if ((unsigned __int128)(v79 * (__int128)v80) >> 64 != (v79 * v80) >> 63) {
            goto LABEL_257;
          }
          double v82 = *(char **)(v206 + 832);
          if (!v82) {
            goto LABEL_268;
          }
          if ((unsigned __int128)(*(uint64_t *)(v206 + 912) * (__int128)*(uint64_t *)(v206 + 920)) >> 64 != (uint64_t)(*(void *)(v206 + 912) * *(void *)(v206 + 920)) >> 63) {
            goto LABEL_258;
          }
          unint64_t v83 = *(char **)(v206 + 496);
          if (!v83) {
            goto LABEL_269;
          }
          if ((unsigned __int128)(*(uint64_t *)(v206 + 576) * (__int128)*(uint64_t *)(v206 + 584)) >> 64 != (uint64_t)(*(void *)(v206 + 576) * *(void *)(v206 + 584)) >> 63) {
            goto LABEL_259;
          }
          uint64_t v84 = *(char **)(v206 + 1000);
          if (!v84) {
            goto LABEL_270;
          }
          if ((unsigned __int128)(*(uint64_t *)(v206 + 1080) * (__int128)*(uint64_t *)(v206 + 1088)) >> 64 != (uint64_t)(*(void *)(v206 + 1080) * *(void *)(v206 + 1088)) >> 63) {
            goto LABEL_260;
          }
          if (v81 < 0) {
            goto LABEL_274;
          }
          size_t v85 = 4 * v81;
          if (&v78[4 * v81] > v82 && &v82[v85] > v78) {
            goto LABEL_274;
          }
          memcpy(v78, v82, v85);
          uint64_t v86 = *(void *)(v206 + 576);
          uint64_t v87 = *(void *)(v206 + 584);
          uint64_t v88 = v86 * v87;
          if ((unsigned __int128)(v86 * (__int128)v87) >> 64 != (v86 * v87) >> 63) {
            goto LABEL_261;
          }
          if (v88 < 0 || (size_t v89 = 4 * v88, &v83[4 * v88] > v84) && &v84[v89] > v83)
          {
LABEL_274:
            uint64_t result = sub_25436D570();
            __break(1u);
            return result;
          }
          memcpy(v83, v84, v89);
          espresso_plan_execute_sync();
          uint64_t v189 = *(void *)(v206 + 1168);
          if (!v189)
          {
LABEL_271:
            __break(1u);
LABEL_272:
            sub_25436D850();
            __break(1u);
LABEL_273:
            sub_25436D4F0();
            __break(1u);
            goto LABEL_274;
          }
          swift_bridgeObjectRelease();
          if ((unsigned __int128)(*(uint64_t *)(v206 + 1248) * (__int128)*(uint64_t *)(v206 + 1256)) >> 64 != (uint64_t)(*(void *)(v206 + 1248) * *(void *)(v206 + 1256)) >> 63) {
            goto LABEL_262;
          }
          unint64_t v90 = sub_254269590(MEMORY[0x263F8EE78]);
          uint64_t v91 = *(void *)(v206 + 1256);
          if ((v91 & 0x8000000000000000) == 0)
          {
            char v92 = (void *)v90;
            if (v91)
            {
              uint64_t v93 = 0;
              uint64_t v191 = *(void *)(v206 + 1256);
              uint64_t v193 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
              uint64_t v195 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
              while (1)
              {
                if (v93 == v91) {
                  goto LABEL_244;
                }
                uint64_t v94 = v77[156];
                uint64_t v95 = v93 * v94;
                if ((unsigned __int128)(v93 * (__int128)v94) >> 64 != (v93 * v94) >> 63) {
                  goto LABEL_245;
                }
                uint64_t v96 = *(void *)((char *)v77 + v195);
                if ((unint64_t)v93 >= *(void *)(v96 + 16)) {
                  goto LABEL_246;
                }
                uint64_t v97 = *(void *)(v96 + 16 * v93 + 32);
                if ((v97 & 0x8000000000000000) == 0) {
                  break;
                }
LABEL_140:
                if (++v93 == v91) {
                  goto LABEL_203;
                }
              }
              BOOL v17 = __OFADD__(v95, v94);
              uint64_t v98 = v95 + v94;
              if (v17) {
                goto LABEL_247;
              }
              uint64_t v99 = v98 - v95;
              if (v98 < v95) {
                goto LABEL_248;
              }
              char v100 = (char *)MEMORY[0x263F8EE78];
              if (v98 != v95)
              {
                if (v99 > 0)
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B18);
                  char v100 = (char *)swift_allocObject();
                  int64_t v101 = _swift_stdlib_malloc_size(v100);
                  uint64_t v102 = v101 - 32;
                  if (v101 < 32) {
                    uint64_t v102 = v101 - 29;
                  }
                  *((void *)v100 + 2) = v99;
                  *((void *)v100 + 3) = 2 * (v102 >> 2);
                }
                uint64_t v103 = v95 + v99;
                if (__OFADD__(v95, v99)) {
                  goto LABEL_251;
                }
                if (v103 < v95) {
                  goto LABEL_252;
                }
                if (v103 == v95)
                {
                  uint64_t v104 = 0;
                }
                else
                {
                  uint64_t v104 = v99;
                  if (v99 < 0) {
                    goto LABEL_274;
                  }
                  char v105 = v100 + 32;
                  unint64_t v106 = (char *)(v189 + 4 * v95);
                  if (v106 < &v100[4 * v99 + 32] && v105 < &v106[4 * v99]) {
                    goto LABEL_274;
                  }
                  memcpy(v105, v106, 4 * v99);
                }
                if (v104 != v99) {
                  goto LABEL_253;
                }
              }
              uint64_t v197 = v97;
              double v204 = v92;
              uint64_t v108 = *((void *)v100 + 2);
              uint64_t v109 = 0;
              if (v108)
              {
                uint64_t v110 = 0;
                uint64_t v111 = (float *)(v100 + 32);
                double v112 = -INFINITY;
                char v113 = (void *)MEMORY[0x263F8EE80];
                while (1)
                {
                  double v115 = exp(-v111[v110]);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t v118 = sub_254351604(v110);
                  uint64_t v119 = v113[2];
                  BOOL v120 = (v117 & 1) == 0;
                  uint64_t v121 = v119 + v120;
                  if (__OFADD__(v119, v120)) {
                    break;
                  }
                  char v122 = v117;
                  if (v113[3] >= v121)
                  {
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                      sub_25429D1B0();
                    }
                  }
                  else
                  {
                    sub_25429A49C(v121, isUniquelyReferenced_nonNull_native);
                    unint64_t v123 = sub_254351604(v110);
                    if ((v122 & 1) != (v124 & 1)) {
                      goto LABEL_272;
                    }
                    unint64_t v118 = v123;
                  }
                  double v125 = 1.0 / (v115 + 1.0);
                  if (v122)
                  {
                    *(double *)(v113[7] + 8 * v118) = v125;
                  }
                  else
                  {
                    v113[(v118 >> 6) + 8] |= 1 << v118;
                    uint64_t v126 = 8 * v118;
                    *(void *)(v113[6] + v126) = v110;
                    *(double *)(v113[7] + v126) = v125;
                    uint64_t v127 = v113[2];
                    BOOL v17 = __OFADD__(v127, 1);
                    uint64_t v128 = v127 + 1;
                    if (v17) {
                      goto LABEL_240;
                    }
                    v113[2] = v128;
                  }
                  uint64_t v114 = v110 + 1;
                  swift_bridgeObjectRelease();
                  if (v112 < v111[v110])
                  {
                    double v112 = v111[v110];
                    uint64_t v109 = v110;
                  }
                  ++v110;
                  if (v108 == v114) {
                    goto LABEL_181;
                  }
                }
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
                goto LABEL_256;
              }
              char v113 = (void *)MEMORY[0x263F8EE80];
LABEL_181:
              swift_release();
              char v129 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v131 = sub_254351604(v93);
              uint64_t v132 = v204[2];
              BOOL v133 = (v130 & 1) == 0;
              uint64_t v134 = v132 + v133;
              if (__OFADD__(v132, v133)) {
                goto LABEL_249;
              }
              char v135 = v130;
              if (v204[3] < v134)
              {
                sub_25429A748(v134, v129);
                unint64_t v136 = sub_254351604(v93);
                uint64_t v138 = v193;
                uint64_t v139 = v197;
                if ((v135 & 1) != (v137 & 1)) {
                  goto LABEL_272;
                }
                unint64_t v131 = v136;
                char v92 = v204;
                if ((v135 & 1) == 0) {
                  goto LABEL_190;
                }
LABEL_188:
                uint64_t v140 = (uint64_t *)(v92[7] + 24 * v131);
                swift_bridgeObjectRelease();
                *uint64_t v140 = v139;
                v140[1] = v109;
                v140[2] = (uint64_t)v113;
                goto LABEL_192;
              }
              uint64_t v138 = v193;
              uint64_t v139 = v197;
              if (v129)
              {
                char v92 = v204;
                if (v130) {
                  goto LABEL_188;
                }
              }
              else
              {
                sub_25429D340();
                char v92 = v204;
                if (v135) {
                  goto LABEL_188;
                }
              }
LABEL_190:
              v92[(v131 >> 6) + 8] |= 1 << v131;
              *(void *)(v92[6] + 8 * v131) = v93;
              uint64_t v141 = (uint64_t *)(v92[7] + 24 * v131);
              *uint64_t v141 = v139;
              v141[1] = v109;
              v141[2] = (uint64_t)v113;
              uint64_t v142 = v92[2];
              BOOL v17 = __OFADD__(v142, 1);
              uint64_t v143 = v142 + 1;
              if (v17) {
                goto LABEL_254;
              }
              v92[2] = v143;
LABEL_192:
              swift_bridgeObjectRelease();
              char v144 = swift_isUniquelyReferenced_nonNull_native();
              char v145 = *(void **)(v206 + v138);
              *(void *)(v206 + v138) = 0x8000000000000000;
              unint64_t v147 = sub_254351604(v139);
              uint64_t v148 = v145[2];
              BOOL v149 = (v146 & 1) == 0;
              uint64_t v150 = v148 + v149;
              if (__OFADD__(v148, v149)) {
                goto LABEL_250;
              }
              char v151 = v146;
              if (v145[3] < v150)
              {
                sub_25429A1F4(v150, v144);
                unint64_t v152 = sub_254351604(v139);
                if ((v151 & 1) != (v153 & 1)) {
                  goto LABEL_272;
                }
                unint64_t v147 = v152;
                uint64_t v154 = v145;
                if ((v151 & 1) == 0) {
                  goto LABEL_199;
                }
LABEL_138:
                *(void *)(v154[7] + 8 * v147) = v93;
LABEL_139:
                CGRect v77 = (void *)v206;
                *(void *)(v206 + v138) = v154;
                swift_bridgeObjectRelease();
                uint64_t v91 = v191;
                goto LABEL_140;
              }
              if (v144)
              {
                uint64_t v154 = v145;
                if (v146) {
                  goto LABEL_138;
                }
              }
              else
              {
                sub_25429D020();
                uint64_t v154 = v145;
                if (v151) {
                  goto LABEL_138;
                }
              }
LABEL_199:
              v154[(v147 >> 6) + 8] |= 1 << v147;
              uint64_t v155 = 8 * v147;
              *(void *)(v154[6] + v155) = v139;
              *(void *)(v154[7] + v155) = v93;
              uint64_t v156 = v154[2];
              BOOL v17 = __OFADD__(v156, 1);
              uint64_t v157 = v156 + 1;
              if (v17) {
                goto LABEL_255;
              }
              v154[2] = v157;
              goto LABEL_139;
            }
LABEL_203:
            CGFloat v198 = (char *)(v92 + 8);
            uint64_t v158 = 1 << *((unsigned char *)v92 + 32);
            uint64_t v159 = -1;
            if (v158 < 64) {
              uint64_t v159 = ~(-1 << v158);
            }
            unint64_t v160 = v159 & v92[8];
            uint64_t v161 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
            uint64_t v201 = (void *)((unint64_t)(v158 + 63) >> 6);
            double v205 = v92;
            swift_bridgeObjectRetain();
            uint64_t v162 = 0;
            while (1)
            {
              if (v160)
              {
                unint64_t v164 = __clz(__rbit64(v160));
                v160 &= v160 - 1;
                unint64_t v165 = v164 | (v162 << 6);
              }
              else
              {
                uint64_t v166 = v162 + 1;
                if (__OFADD__(v162, 1)) {
                  goto LABEL_243;
                }
                if (v166 >= (uint64_t)v201)
                {
LABEL_237:
                  unint64_t v3 = (unint64_t)v205;
                  swift_release();
                  return v3;
                }
                unint64_t v167 = *(void *)&v198[8 * v166];
                ++v162;
                if (!v167)
                {
                  uint64_t v162 = v166 + 1;
                  if (v166 + 1 >= (uint64_t)v201) {
                    goto LABEL_237;
                  }
                  unint64_t v167 = *(void *)&v198[8 * v162];
                  if (!v167)
                  {
                    uint64_t v162 = v166 + 2;
                    if (v166 + 2 >= (uint64_t)v201) {
                      goto LABEL_237;
                    }
                    unint64_t v167 = *(void *)&v198[8 * v162];
                    if (!v167)
                    {
                      uint64_t v162 = v166 + 3;
                      if (v166 + 3 >= (uint64_t)v201) {
                        goto LABEL_237;
                      }
                      unint64_t v167 = *(void *)&v198[8 * v162];
                      if (!v167)
                      {
                        uint64_t v168 = v166 + 4;
                        if (v168 >= (uint64_t)v201) {
                          goto LABEL_237;
                        }
                        unint64_t v167 = *(void *)&v198[8 * v168];
                        if (!v167)
                        {
                          while (1)
                          {
                            uint64_t v162 = v168 + 1;
                            if (__OFADD__(v168, 1)) {
                              break;
                            }
                            if (v162 >= (uint64_t)v201) {
                              goto LABEL_237;
                            }
                            unint64_t v167 = *(void *)&v198[8 * v162];
                            ++v168;
                            if (v167) {
                              goto LABEL_225;
                            }
                          }
LABEL_256:
                          __break(1u);
LABEL_257:
                          __break(1u);
LABEL_258:
                          __break(1u);
LABEL_259:
                          __break(1u);
LABEL_260:
                          __break(1u);
LABEL_261:
                          __break(1u);
LABEL_262:
                          __break(1u);
                          break;
                        }
                        uint64_t v162 = v168;
                      }
                    }
                  }
                }
LABEL_225:
                unint64_t v160 = (v167 - 1) & v167;
                unint64_t v165 = __clz(__rbit64(v167)) + (v162 << 6);
              }
              unint64_t v169 = (uint64_t *)(v205[7] + 24 * v165);
              uint64_t v171 = *v169;
              uint64_t v170 = v169[1];
              uint64_t v172 = v169[2];
              swift_bridgeObjectRetain_n();
              char v173 = swift_isUniquelyReferenced_nonNull_native();
              id v174 = *(void **)((char *)v77 + v161);
              *(void *)((char *)v77 + v161) = 0x8000000000000000;
              unint64_t v176 = sub_254351604(v171);
              uint64_t v177 = v174[2];
              BOOL v178 = (v175 & 1) == 0;
              uint64_t v179 = v177 + v178;
              if (__OFADD__(v177, v178)) {
                goto LABEL_241;
              }
              char v180 = v175;
              if (v174[3] >= v179)
              {
                if (v173)
                {
                  uint64_t v183 = v174;
                  if (v175) {
                    goto LABEL_206;
                  }
                }
                else
                {
                  sub_25429D340();
                  uint64_t v183 = v174;
                  if (v180) {
                    goto LABEL_206;
                  }
                }
              }
              else
              {
                sub_25429A748(v179, v173);
                unint64_t v181 = sub_254351604(v171);
                if ((v180 & 1) != (v182 & 1)) {
                  goto LABEL_272;
                }
                unint64_t v176 = v181;
                uint64_t v183 = v174;
                if (v180)
                {
LABEL_206:
                  uint64_t v163 = (uint64_t *)(v183[7] + 24 * v176);
                  swift_bridgeObjectRelease();
                  uint64_t *v163 = v171;
                  v163[1] = v170;
                  v163[2] = v172;
                  goto LABEL_207;
                }
              }
              v183[(v176 >> 6) + 8] |= 1 << v176;
              *(void *)(v183[6] + 8 * v176) = v171;
              char v184 = (uint64_t *)(v183[7] + 24 * v176);
              *char v184 = v171;
              v184[1] = v170;
              v184[2] = v172;
              uint64_t v185 = v183[2];
              BOOL v17 = __OFADD__(v185, 1);
              uint64_t v186 = v185 + 1;
              if (v17) {
                goto LABEL_242;
              }
              v183[2] = v186;
LABEL_207:
              CGRect v77 = (void *)v206;
              *(void *)(v206 + v161) = v183;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          __break(1u);
LABEL_264:
          __break(1u);
          goto LABEL_265;
        }
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_79;
  }
  unint64_t v3 = sub_254269590(MEMORY[0x263F8EE78]);
  unint64_t v5 = *(void *)(a1 + 24);
  if (v5 >> 62) {
    goto LABEL_75;
  }
  uint64_t v25 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v25)
  {
LABEL_30:
    uint64_t v26 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
    uint64_t v200 = (char *)OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
    v203 = (void *)v3;
    unint64_t v27 = v5 & 0xC000000000000001;
    uint64_t v28 = 4;
    uint64_t v188 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
    uint64_t v190 = v25;
    while (1)
    {
      uint64_t v29 = v28 - 4;
      if (v27)
      {
        uint64_t v30 = MEMORY[0x25A275A00](v28 - 4, v5);
        uint64_t v31 = v28 - 3;
        if (__OFADD__(v29, 1)) {
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(v5 + 8 * v28);
        swift_retain();
        uint64_t v31 = v28 - 3;
        if (__OFADD__(v29, 1))
        {
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          swift_bridgeObjectRetain_n();
          uint64_t v25 = sub_25436D530();
          swift_bridgeObjectRelease();
          if (!v25) {
            break;
          }
          goto LABEL_30;
        }
      }
      if (*(unsigned char *)(v30 + 64)) {
        goto LABEL_273;
      }
      uint64_t v32 = *(void *)(v8 + v26);
      if (*(void *)(v32 + 16))
      {
        uint64_t v33 = *(void *)(v30 + 56);
        unint64_t v34 = sub_254351604(v33);
        if (v35)
        {
          uint64_t v36 = *(void *)&v200[v206];
          if (*(void *)(v36 + 16)
            && (uint64_t v37 = *(void *)(v32 + 56) + 24 * v34,
                long long v194 = *(_OWORD *)v37,
                unint64_t v3 = *(void *)(v37 + 16),
                unint64_t v38 = sub_254351604(v33),
                (v39 & 1) != 0))
          {
            uint64_t v40 = *(void *)(*(void *)(v36 + 56) + 8 * v38);
            unint64_t v192 = v3;
            swift_bridgeObjectRetain();
            uint64_t v8 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v42 = sub_254351604(v40);
            uint64_t v43 = v203[2];
            BOOL v44 = (v41 & 1) == 0;
            uint64_t v45 = v43 + v44;
            if (__OFADD__(v43, v44)) {
              goto LABEL_74;
            }
            unint64_t v3 = (unint64_t)v203;
            char v46 = v41;
            if (v203[3] >= v45)
            {
              if ((v8 & 1) == 0) {
                sub_25429D340();
              }
            }
            else
            {
              sub_25429A748(v45, v8);
              unint64_t v47 = sub_254351604(v40);
              if ((v46 & 1) != (v48 & 1)) {
                goto LABEL_272;
              }
              unint64_t v42 = v47;
            }
            uint64_t v8 = v206;
            if (v46)
            {
              unint64_t v3 = v203[7] + 24 * v42;
              swift_bridgeObjectRelease();
              *(_OWORD *)unint64_t v3 = v194;
              *(void *)(v3 + 16) = v192;
            }
            else
            {
              v203[(v42 >> 6) + 8] |= 1 << v42;
              *(void *)(v203[6] + 8 * v42) = v40;
              uint64_t v49 = v203[7] + 24 * v42;
              *(_OWORD *)uint64_t v49 = v194;
              *(void *)(v49 + 16) = v192;
              uint64_t v50 = v203[2];
              BOOL v17 = __OFADD__(v50, 1);
              uint64_t v51 = v50 + 1;
              if (v17) {
                goto LABEL_264;
              }
              v203[2] = v51;
            }
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v26 = v188;
            uint64_t v25 = v190;
            unint64_t v27 = v5 & 0xC000000000000001;
          }
          else
          {
            swift_release();
            uint64_t v8 = v206;
            unint64_t v27 = v5 & 0xC000000000000001;
          }
        }
        else
        {
          swift_release();
          uint64_t v8 = v206;
        }
      }
      else
      {
        swift_release();
      }
      ++v28;
      if (v31 == v25)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v203;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void sub_254297490(double a1, double a2)
{
  uint64_t v3 = v2[104];
  if (!v3) {
    goto LABEL_34;
  }
  if ((unsigned __int128)((uint64_t)v2[114] * (__int128)(uint64_t)v2[115]) >> 64 != (uint64_t)(v2[114] * v2[115]) >> 63)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v4 = v2[125];
  if (!v4)
  {
LABEL_35:
    __break(1u);
    return;
  }
  if ((unsigned __int128)((uint64_t)v2[135] * (__int128)(uint64_t)v2[136]) >> 64 != (uint64_t)(v2[135] * v2[136]) >> 63) {
    goto LABEL_33;
  }
  uint64_t v5 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
  uint64_t v6 = *(void *)((char *)v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((unint64_t)i >= *(void *)(v6 + 16))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (vabdd_f64(*(double *)(v6 + v10 * 8 + 40), a2) > a1)
      {
        sub_2542683B0(&v17, i);
        uint64_t v12 = v2[135];
        if ((unsigned __int128)(i * (__int128)v12) >> 64 != (i * v12) >> 63) {
          goto LABEL_27;
        }
        if (v12 < 0) {
          goto LABEL_28;
        }
        if (v12) {
          bzero((void *)(v4 + 4 * i * v12), 4 * v12);
        }
        uint64_t v13 = v2[114];
        if ((unsigned __int128)(i * (__int128)v13) >> 64 != (i * v13) >> 63) {
          goto LABEL_29;
        }
        if (v13 < 0) {
          goto LABEL_30;
        }
        if (v13) {
          bzero((void *)(v3 + 4 * i * v13), 4 * v13);
        }
        uint64_t v14 = *(void **)((char *)v2 + v5);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)((char *)v2 + v5) = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v14 = sub_254363290(v14);
        }
        if ((unint64_t)i >= v14[2]) {
          goto LABEL_31;
        }
        uint64_t v16 = &v14[v10];
        v16[4] = -1;
        v16[5] = 0;
        *(void *)((char *)v2 + v5) = v14;
      }
      v10 += 2;
    }
    swift_bridgeObjectRelease();
  }
}

void sub_25429768C(uint64_t a1)
{
  uint64_t v2 = v1[104];
  if (!v2) {
    goto LABEL_16;
  }
  uint64_t v3 = v1[114];
  if ((unsigned __int128)(v3 * (__int128)(uint64_t)v1[115]) >> 64 != (v3 * v1[115]) >> 63)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v4 = v1[125];
  if (!v4)
  {
LABEL_17:
    __break(1u);
    return;
  }
  if ((unsigned __int128)((uint64_t)v1[135] * (__int128)(uint64_t)v1[136]) >> 64 != (uint64_t)(v1[135] * v1[136]) >> 63) {
    goto LABEL_13;
  }
  uint64_t v5 = a1 * v3;
  if ((unsigned __int128)(a1 * (__int128)v3) >> 64 != (a1 * v3) >> 63)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3 < 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v3)
  {
    uint64_t v6 = 4 * v5;
    size_t v7 = 4 * v3;
    bzero((void *)(v4 + 4 * v5), 4 * v3);
    bzero((void *)(v2 + v6), v7);
  }
}

uint64_t sub_25429775C(uint64_t a1, char a2)
{
  return sub_254297A4C(a1, a2, &qword_269DD7F10);
}

uint64_t sub_254297768(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8740);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v36 = a2;
    char v35 = v3;
    int64_t v8 = 0;
    unint64_t v38 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = -1 << v9;
    uint64_t v34 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v37) {
          goto LABEL_31;
        }
        unint64_t v18 = v38[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v37) {
            goto LABEL_31;
          }
          unint64_t v18 = v38[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v37)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64) {
                bzero(v38, 8 * v37);
              }
              else {
                *unint64_t v38 = v33;
              }
              uint64_t v3 = v35;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v38[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v37) {
                  goto LABEL_31;
                }
                unint64_t v18 = v38[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v21 = *(void *)(v5 + 56) + 32 * v16;
      char v22 = *(unsigned char *)(v21 + 24);
      uint64_t v23 = *(void *)(v21 + 16);
      char v24 = *(unsigned char *)(v21 + 8);
      uint64_t v25 = *(void *)v21;
      uint64_t result = sub_25436D8E0();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
      uint64_t v14 = *(void *)(v7 + 56) + 32 * v13;
      *(void *)uint64_t v14 = v25;
      *(unsigned char *)(v14 + 8) = v24;
      *(void *)(v14 + 16) = v23;
      *(unsigned char *)(v14 + 24) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_254297A34(uint64_t a1, char a2)
{
  return sub_254297A4C(a1, a2, &qword_269DD7F20);
}

uint64_t sub_254297A40(uint64_t a1, char a2)
{
  return sub_254297A4C(a1, a2, &qword_269DD7F18);
}

uint64_t sub_254297A4C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_25436D550();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    BOOL v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v31 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_25436D8F0();
      sub_25436D900();
      uint64_t result = sub_25436D930();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v8 + 48) + v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_254297D1C(uint64_t a1, char a2)
{
  return sub_254297D40(a1, a2, &qword_269DD7EB0);
}

uint64_t sub_254297D28(uint64_t a1, char a2)
{
  return sub_254297A4C(a1, a2, &qword_269DD7EC0);
}

uint64_t sub_254297D34(uint64_t a1, char a2)
{
  return sub_254297D40(a1, a2, &qword_269DD7EA8);
}

uint64_t sub_254297D40(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_25436D550();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    char v35 = a2;
    int64_t v9 = 0;
    uint64_t v10 = (void *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v14) {
          goto LABEL_31;
        }
        unint64_t v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v21 = v10[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_38;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v10 = -1 << v34;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v9 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v21 = v10[v9];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v23 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      unint64_t v24 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v19);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      sub_25436D8F0();
      sub_25436D900();
      uint64_t result = sub_25436D930();
      uint64_t v27 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v8 + 48) + v16) = v23;
      unint64_t v17 = (void *)(*(void *)(v8 + 56) + 16 * v16);
      *unint64_t v17 = v26;
      v17[1] = v25;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_254298010(uint64_t a1, char a2)
{
  return sub_254297A4C(a1, a2, &qword_269DD7EB8);
}

uint64_t sub_25429801C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E90);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *int64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2542982D4(uint64_t a1, char a2)
{
  return sub_254298E4C(a1, a2, &qword_269DD7E60);
}

uint64_t sub_2542982E0(uint64_t a1, char a2)
{
  return sub_254299134(a1, a2, &qword_269DD7E58);
}

uint64_t sub_2542982EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DKPersonGroup(0);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8730);
  char v9 = a2;
  uint64_t result = sub_25436D550();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    char v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    int64_t v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_2542A1A8C(v26, (uint64_t)v7, type metadata accessor for DKPersonGroup);
      }
      else {
        sub_2542A1A24(v26, (uint64_t)v7, type metadata accessor for DKPersonGroup);
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_2542A1A8C((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, type metadata accessor for DKPersonGroup);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_254298678(uint64_t a1, int a2)
{
  return sub_2542986E0(a1, a2, type metadata accessor for DKPersonGroup, &qword_269DD8728, type metadata accessor for DKPersonGroup);
}

uint64_t sub_2542986AC(uint64_t a1, int a2)
{
  return sub_2542986E0(a1, a2, type metadata accessor for DKPersonGroupFilter.StampedPerson, &qword_269DD8720, type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_2542986E0(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v58 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_25436C800();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v54 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v53 = a2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_25436D550();
  uint64_t v17 = v16;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 64);
  uint64_t v49 = (void *)(v14 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  unint64_t v47 = v5;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v50 = (void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  uint64_t v55 = (void (**)(char *, unint64_t, uint64_t))(v12 + 32);
  uint64_t v56 = v11;
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v51 = v15;
  uint64_t v25 = v54;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v48) {
      break;
    }
    char v30 = v49;
    unint64_t v31 = v49[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v31 = v49[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v48)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v47;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v49[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v48) {
              goto LABEL_34;
            }
            unint64_t v31 = v49[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
    uint64_t v25 = v54;
LABEL_22:
    uint64_t v33 = v12;
    uint64_t v34 = *(void *)(v12 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v53)
    {
      (*v55)(v25, v35, v56);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_2542A1A8C(v36 + v37 * v28, v57, v58);
    }
    else
    {
      (*v50)(v25, v35, v56);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_2542A1A24(v38 + v37 * v28, v57, v58);
    }
    sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
    uint64_t result = sub_25436CB40();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v25 = v54;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      uint64_t v25 = v54;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v55)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v56);
    uint64_t result = sub_2542A1A8C(v57, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v51;
    uint64_t v12 = v33;
  }
  swift_release();
  uint64_t v7 = v47;
  char v30 = v49;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v17;
  return result;
}

unint64_t sub_254298BC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8718);
  uint64_t v6 = sub_25436D550();
  uint64_t v7 = (void *)v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v25 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    unint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_23;
        }
        unint64_t v19 = v25[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v19 = v25[v14];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v11)
            {
LABEL_23:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v5 + 32);
                if (v24 > 63) {
                  bzero(v25, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v25 = -1 << v24;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v25[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_30;
                }
                if (v14 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v19 = v25[v14];
                ++v20;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v20;
          }
        }
LABEL_20:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = 8 * v17;
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + v21);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v21);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_25436D8F0();
      sub_25429E1D0(v26, v22);
      sub_25436D930();
      unint64_t result = sub_25436D210();
      *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v15 = 8 * result;
      *(void *)(v7[6] + v15) = v22;
      *(void *)(v7[7] + v15) = v23;
      ++v7[2];
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_254298E34(uint64_t a1, char a2)
{
  return sub_254298E4C(a1, a2, &qword_269DD7EC8);
}

uint64_t sub_254298E40(uint64_t a1, char a2)
{
  return sub_254298E4C(a1, a2, &qword_269DD7ED0);
}

uint64_t sub_254298E4C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_25436D550();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    unint64_t v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v31 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_25436D8F0();
      sub_25436D900();
      uint64_t result = sub_25436D930();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v8 + 48) + v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_25429911C(uint64_t a1, char a2)
{
  return sub_254299134(a1, a2, &qword_269DD7E48);
}

uint64_t sub_254299128(uint64_t a1, char a2)
{
  return sub_254299134(a1, a2, &qword_269DD7E18);
}

uint64_t sub_254299134(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_25436D550();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    char v32 = a2;
    int64_t v9 = 0;
    uint64_t v10 = (void *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v18 = v17 | (v9 << 6);
      }
      else
      {
        int64_t v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v14) {
          goto LABEL_31;
        }
        unint64_t v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          int64_t v9 = v19 + 1;
          if (v19 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v20 = v10[v9];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_38;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
              if (v31 >= 64) {
                bzero((void *)(v6 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v10 = -1 << v31;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v9 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v9 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v20 = v10[v9];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v21;
          }
        }
LABEL_21:
        unint64_t v13 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
      uint64_t v23 = *(void *)(*(void *)(v6 + 56) + 8 * v18);
      sub_25436D8F0();
      sub_25436D900();
      uint64_t result = sub_25436D930();
      uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v8 + 48) + v16) = v22;
      *(void *)(*(void *)(v8 + 56) + 8 * v16) = v23;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2542993FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7ED8);
  char v38 = a2;
  uint64_t v6 = sub_25436D550();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_25436D8F0();
    sub_25436CC90();
    uint64_t result = sub_25436D930();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  char v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429970C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8700);
  int v40 = a2;
  uint64_t result = sub_25436D550();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_254299AB4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_25436C800();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD86F8);
  int v45 = a2;
  uint64_t v9 = sub_25436D550();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v42 = v8;
  unint64_t v43 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    unint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v8 + 48) + v26 * v20;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    if (v45)
    {
      (*v46)(v43, v27, v44);
      sub_25425DF80((long long *)(*(void *)(v8 + 56) + 40 * v20), (uint64_t)v47);
    }
    else
    {
      (*v41)(v43, v27, v44);
      sub_25427215C(*(void *)(v8 + 56) + 40 * v20, (uint64_t)v47);
    }
    sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
    uint64_t result = sub_25436CB40();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v46)((char *)(*(void *)(v10 + 48) + v26 * v18), (unint64_t)v28, v29);
    uint64_t result = sub_25425DF80(v47, *(void *)(v10 + 56) + 40 * v18);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v25;
    uint64_t v8 = v42;
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v22 = v40;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_254299F08(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8708);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *unint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 32 * v19;
      long long v35 = *(_OWORD *)v28;
      uint64_t v29 = *(void *)(v28 + 16);
      uint64_t v30 = *(void *)(v28 + 24);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 32 * v16;
      *(_OWORD *)uint64_t v17 = v35;
      *(void *)(v17 + 16) = v29;
      *(void *)(v17 + 24) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429A1F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E30);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    unint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_25436D8E0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429A49C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E98);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    unint64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_25436D8E0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429A748(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EA0);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v9;
    uint64_t v31 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if (a2)
              {
                if (v31 >= 64) {
                  bzero(v33, 8 * v32);
                }
                else {
                  *uint64_t v33 = v30;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      long long v34 = *(_OWORD *)v28;
      uint64_t v29 = *(void *)(v28 + 16);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(_OWORD *)uint64_t v17 = v34;
      *(void *)(v17 + 16) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429AA14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8710);
  uint64_t result = sub_25436D550();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25429ACCC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E88);
  int v42 = a2;
  uint64_t v10 = sub_25436D550();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    int v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
      uint64_t result = sub_25436CB40();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_25429B0F4(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  *(void *)(a7[6] + 8 * result) = a2;
  uint64_t v7 = a7[7] + 32 * result;
  *(void *)uint64_t v7 = a3;
  *(unsigned char *)(v7 + 8) = a4 & 1;
  *(void *)(v7 + 16) = a5;
  *(unsigned char *)(v7 + 24) = a6 & 1;
  uint64_t v8 = a7[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a7[2] = v10;
  }
  return result;
}

unint64_t sub_25429B158(unint64_t result, char a2, void *a3, double a4, double a5)
{
  a3[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a2;
  uint64_t v5 = (double *)(a3[7] + 16 * result);
  double *v5 = a4;
  v5[1] = a5;
  uint64_t v6 = a3[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a3[2] = v8;
  }
  return result;
}

unint64_t sub_25429B1A0(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2 & 1;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_25429B1E8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25429B240(a1, a2, a3, a4, type metadata accessor for DKPersonGroup, type metadata accessor for DKPersonGroup);
}

uint64_t sub_25429B214(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_25429B240(a1, a2, a3, a4, type metadata accessor for DKPersonGroupFilter.StampedPerson, type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_25429B240(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_25436C800();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_2542A1A8C(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

unint64_t sub_25429B334(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  BOOL v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_25429B37C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_25436C7B0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_25429B428(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_25429B470(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_25436C800();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_25429B528()
{
  return sub_25429B700(&qword_269DD7F10);
}

char *sub_25429B534()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8740);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (char *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (char *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v27 = __clz(__rbit64(v25));
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = v27 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    LOBYTE(v19) = *(unsigned char *)(v19 + 24);
    uint64_t result = *(char **)(v4 + 48);
    *(void *)&result[v16] = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(unsigned char *)(v23 + 8) = v21;
    *(void *)(v23 + 16) = v22;
    *(unsigned char *)(v23 + 24) = v19;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429B6E8()
{
  return sub_25429B700(&qword_269DD7F20);
}

void *sub_25429B6F4()
{
  return sub_25429B700(&qword_269DD7F18);
}

void *sub_25429B700(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25436D540();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429B89C()
{
  return sub_25429B8C0(&qword_269DD7EB0);
}

void *sub_25429B8A8()
{
  return sub_25429B700(&qword_269DD7EC0);
}

void *sub_25429B8B4()
{
  return sub_25429B8C0(&qword_269DD7EA8);
}

void *sub_25429B8C0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25436D540();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = v21 + (v10 << 6);
LABEL_12:
    long long v17 = *(_OWORD *)(*(void *)(v3 + 56) + 16 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(_OWORD *)(*(void *)(v5 + 56) + 16 * v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429BA48()
{
  return sub_25429B700(&qword_269DD7EB8);
}

void *sub_25429BA54()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429BBF8()
{
  return sub_25429C420(&qword_269DD7E60);
}

void *sub_25429BC04()
{
  return sub_25429C5D4(&qword_269DD7E58);
}

void *sub_25429BC10()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DKPersonGroup(0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8730);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25436D540();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_2542A1A24(*(void *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for DKPersonGroup);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_2542A1A8C((uint64_t)v4, *(void *)(v7 + 56) + v19, type metadata accessor for DKPersonGroup);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25429BE88()
{
  return sub_25429BEF0(type metadata accessor for DKPersonGroup, &qword_269DD8728, type metadata accessor for DKPersonGroup);
}

void *sub_25429BEBC()
{
  return sub_25429BEF0(type metadata accessor for DKPersonGroupFilter.StampedPerson, &qword_269DD8720, type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

void *sub_25429BEF0(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v44 = a3;
  uint64_t v5 = a1(0);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  int v42 = (char *)&v35 - v6;
  uint64_t v41 = sub_25436C800();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  int v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v35 = v3;
  uint64_t v9 = *v3;
  uint64_t v10 = sub_25436D540();
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v46 = v10;
  if (!v11)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v34 = v46;
    unint64_t v33 = v35;
LABEL_25:
    *unint64_t v33 = v34;
    return result;
  }
  uint64_t v12 = v10;
  uint64_t result = (void *)(v10 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v9 || (unint64_t)result >= v9 + 64 + 8 * v14)
  {
    uint64_t result = memmove(result, (const void *)(v9 + 64), 8 * v14);
    uint64_t v12 = v46;
  }
  uint64_t v36 = v9 + 64;
  int64_t v15 = 0;
  *(void *)(v12 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v45 = v9;
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v39 = v7 + 16;
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v38 = v7 + 32;
  int64_t v20 = v40;
  uint64_t v19 = v41;
  uint64_t v21 = (uint64_t)v42;
  for (i = v46; ; uint64_t result = (void *)sub_2542A1A8C(v21, *(void *)(i + 56) + v29, v28))
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v15 << 6);
      uint64_t v25 = v45;
      goto LABEL_9;
    }
    int64_t v30 = v15 + 1;
    uint64_t v25 = v45;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      int64_t v15 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v15);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v24 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_9:
    unint64_t v26 = *(void *)(v7 + 72) * v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v20, *(void *)(v25 + 48) + v26, v19);
    uint64_t v27 = *(void *)(v25 + 56);
    uint64_t v28 = v44;
    unint64_t v29 = *(void *)(v43 + 72) * v24;
    sub_2542A1A24(v27 + v29, v21, v44);
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(void *)(i + 48) + v26, v20, v19);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    unint64_t v33 = v35;
    uint64_t v34 = v46;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v15 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v15);
    ++v32;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25429C25C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8718);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429C408()
{
  return sub_25429C420(&qword_269DD7EC8);
}

void *sub_25429C414()
{
  return sub_25429C420(&qword_269DD7ED0);
}

void *sub_25429C420(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25436D540();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429C5BC()
{
  return sub_25429C5D4(&qword_269DD7E48);
}

void *sub_25429C5C8()
{
  return sub_25429C5D4(&qword_269DD7E18);
}

void *sub_25429C5D4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25436D540();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = v21 + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_25429C75C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7ED8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429C910()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8700);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25436D540();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_25429CBA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD86F8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25436D540();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_25427215C(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = (void *)sub_25425DF80(v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25429CE4C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8708);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v21 = *(void *)(v19 + 24);
    long long v22 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v23 = v22;
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429D020()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429D1B0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429D340()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7EA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429D4FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8710);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D540();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25429D6A0()
{
  uint64_t v1 = sub_25436C800();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7E88);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25436D540();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25429D934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_25436CB40();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_2542A1AF4((unint64_t *)&qword_269DD7E78, 255, MEMORY[0x263F07508]);
      char v19 = sub_25436CBB0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    int64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2542F7BF0();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_25429DD28(v12);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_25429DC1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_25436D8E0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2542F765C();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_25429E048(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_25429DD28(int64_t a1)
{
  uint64_t v3 = sub_25436C800();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_25436D200();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
        uint64_t v21 = sub_25436CB40();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_25429E048(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_25436D8E0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_25429E1D0(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v37 = *a1;
  long long v38 = v12;
  long long v13 = a1[2];
  long long v14 = a1[3];
  uint64_t v29 = a1;
  long long v39 = v13;
  long long v40 = v14;
  uint64_t v41 = v11;
  uint64_t v15 = sub_25436D930();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v31 = a2 + 56;
  uint64_t v32 = v15;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v30 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v34 = v5 + 16;
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v33 = v5 + 48;
  uint64_t v36 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v36 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_2542A1AF4(&qword_269DD7E70, 255, MEMORY[0x263F07508]);
    uint64_t v28 = sub_25436CB40();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1)) {
      goto LABEL_21;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_14:
    unint64_t v19 = (v26 - 1) & v26;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v30)
  {
LABEL_18:
    (*v35)(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_25436D900();
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

char *sub_25429E534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v39 = a3;
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_25436C610();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v36 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v36 - v16;
  swift_bridgeObjectRetain();
  v36[3] = a1;
  uint64_t v18 = (void *)sub_25436CBD0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_bundleWithIdentifier_, v18);

  if (!v19) {
    __break(1u);
  }
  id v20 = objc_msgSend(v19, sel_bundleURL);
  sub_25436C5F0();

  sub_25436C5D0();
  v36[2] = a6;
  sub_25436C5D0();
  id v37 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  id v22 = objc_msgSend(self, sel_defaultManager);
  long long v38 = v17;
  id v23 = v22;
  sub_25436C600();
  uint64_t v24 = (void *)sub_25436CBD0();
  swift_bridgeObjectRelease();
  LOBYTE(v20) = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if ((v20 & 1) == 0)
  {
    int v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_25436D290();
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436CCB0();
    int64_t v25 = v42;
    unint64_t v31 = v43;
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v32 = v25;
    *(void *)(v32 + 8) = v31;
    *(unsigned char *)(v32 + 16) = 0;
    swift_willThrow();

    v21(v15, v8);
    uint64_t v29 = v38;
    uint64_t v30 = v8;
    goto LABEL_13;
  }
  sub_25436C5E0();
  int64_t v25 = v12;
  sub_25436C600();
  v21(v12, v8);
  uint64_t context = espresso_create_context();
  if (!context)
  {
    swift_bridgeObjectRelease();
    sub_254261A48();
    swift_allocError();
    unint64_t v34 = 0x800000025437BD20;
    *(void *)uint64_t v33 = 0xD000000000000020;
LABEL_12:
    *(void *)(v33 + 8) = v34;
    *(unsigned char *)(v33 + 16) = 0;
    swift_willThrow();

    v21(v15, v8);
    uint64_t v29 = v38;
    uint64_t v30 = v8;
    goto LABEL_13;
  }
  int64_t v25 = (char *)context;
  if (!espresso_create_plan())
  {
    swift_bridgeObjectRelease();
    sub_254261A48();
    swift_allocError();
    unint64_t v34 = 0x800000025437BD50;
    *(void *)uint64_t v33 = 0xD00000000000001DLL;
    goto LABEL_12;
  }
  int v42 = 0;
  LODWORD(v43) = 0;
  sub_25436CC70();
  swift_bridgeObjectRelease();
  int v27 = espresso_plan_add_network();
  swift_release();
  if (!v27)
  {
    if (!espresso_plan_build())
    {

      v21(v15, v8);
      v21(v38, v8);
      return v25;
    }
    sub_254261A48();
    swift_allocError();
    unint64_t v34 = 0x800000025437BD90;
    *(void *)uint64_t v33 = 0xD00000000000001DLL;
    goto LABEL_12;
  }
  sub_254261A48();
  swift_allocError();
  *(void *)uint64_t v28 = 0xD00000000000001ELL;
  *(void *)(v28 + 8) = 0x800000025437BD70;
  *(unsigned char *)(v28 + 16) = 0;
  swift_willThrow();

  int64_t v25 = (char *)v8;
  v21(v15, v8);
  uint64_t v29 = v38;
  uint64_t v30 = v8;
LABEL_13:
  v21(v29, v30);
  return v25;
}

uint64_t type metadata accessor for DKISSModel()
{
  uint64_t result = qword_269DD8670;
  if (!qword_269DD8670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25429EB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25436CC70();
  int v8 = espresso_network_bind_buffer();
  uint64_t result = swift_release();
  if (v8)
  {
    sub_25436D290();
    swift_bridgeObjectRelease();
    sub_25436CCB0();
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v10 = a7;
    *(void *)(v10 + 8) = a8;
    *(unsigned char *)(v10 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_25429ECB4(double *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t)a1;
  CGFloat v10 = a1[3];
  CGFloat v11 = a1[4];
  CGFloat v12 = a1[5];
  CGFloat v13 = a1[6];
  v88.origin.CGFloat x = v10;
  v88.origin.CGFloat y = v11;
  v88.size.CGFloat width = v12;
  v88.size.CGFloat height = v13;
  CGFloat Width = CGRectGetWidth(v88);
  v89.origin.CGFloat x = v10;
  v89.origin.CGFloat y = v11;
  v89.size.CGFloat width = v12;
  v89.size.CGFloat height = v13;
  CGFloat Height = CGRectGetHeight(v89);
  double MidX = CGRectGetMidX(*(CGRect *)(v9 + 24));
  double MidY = CGRectGetMidY(*(CGRect *)(v9 + 24));
  int v18 = *(unsigned __int8 *)(v9 + 88);
  float v19 = *(double *)(v9 + 80);
  float v20 = v19 * 0.318;
  float v21 = *(double *)(v9 + 96);
  float v22 = v21 * 0.318;
  float v23 = 0.0;
  if (*(unsigned char *)(v9 + 104)) {
    *(float *)&uint64_t v6 = 0.0;
  }
  else {
    *(float *)&uint64_t v6 = v22;
  }
  float v24 = *(double *)(v9 + 112);
  float v25 = v24 * 0.318;
  if (*(unsigned char *)(v9 + 120)) {
    float v26 = 0.0;
  }
  else {
    float v26 = v25;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B18);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v27;
  int v85 = v18;
  if (v18) {
    float v29 = 0.0;
  }
  else {
    float v29 = v20;
  }
  *(_OWORD *)(v27 + 16) = xmmword_25436E6A0;
  *(float *)(v27 + 32) = v29;
  unint64_t v30 = v27 + 32;
  *(_DWORD *)(v27 + 36) = v6;
  *(float *)(v27 + 40) = v26;
  uint64_t v31 = sub_25436CE40();
  *(_OWORD *)(v31 + 32) = 0u;
  uint64_t v32 = (float *)(v31 + 32);
  *(void *)(v31 + 16) = 51;
  *(_OWORD *)(v31 + 220) = 0u;
  *(_OWORD *)(v31 + 192) = 0u;
  *(_OWORD *)(v31 + 208) = 0u;
  *(_OWORD *)(v31 + 160) = 0u;
  *(_OWORD *)(v31 + 176) = 0u;
  *(_OWORD *)(v31 + 128) = 0u;
  *(_OWORD *)(v31 + 144) = 0u;
  *(_OWORD *)(v31 + 96) = 0u;
  *(_OWORD *)(v31 + 112) = 0u;
  *(_OWORD *)(v31 + 64) = 0u;
  *(_OWORD *)(v31 + 80) = 0u;
  *(_OWORD *)(v31 + 48) = 0u;
  if (*(unsigned char *)(v9 + 160))
  {
    float v34 = 0.0;
  }
  else
  {
    float v33 = *(double *)(v9 + 152);
    float v34 = v33;
  }
  if (!*(unsigned char *)(v9 + 144))
  {
    float v35 = *(double *)(v9 + 136);
    float v23 = v35;
  }
  uint64_t v36 = *(void *)(v9 + 128);
  if (v36)
  {
    uint64_t v5 = *(void *)(v36 + 16);
    unint64_t v37 = *(void *)(v5 + 16);
    if (v37)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v38 = v37 - 1;
      unint64_t v39 = 51;
      if (v37 - 1 < 0x33) {
        unint64_t v39 = v37 - 1;
      }
      if (v39 <= 0xF) {
        goto LABEL_32;
      }
      if (v38 >= 0x33) {
        unint64_t v38 = 51;
      }
      if ((unint64_t)v32 >= v5 + 24 * v38 + 40 || v5 + 32 >= v31 + 4 * v38 + 36)
      {
        unint64_t v41 = v39 + 1;
        uint64_t v42 = v41 & 7;
        if ((v41 & 7) == 0) {
          uint64_t v42 = 8;
        }
        unint64_t v43 = v41 - v42;
        uint64_t v44 = (const double *)(v5 + 128);
        uint64_t v45 = (float32x4_t *)(v31 + 48);
        unint64_t v46 = v43;
        do
        {
          unint64_t v47 = v44 - 12;
          unsigned long long v48 = (unsigned __int128)vld3q_f64(v47);
          uint64_t v49 = v44 - 6;
          unsigned long long v50 = (unsigned __int128)vld3q_f64(v49);
          uint64_t v51 = v44;
          unsigned long long v52 = (unsigned __int128)vld3q_f64(v51);
          v51 += 6;
          unsigned long long v53 = (unsigned __int128)vld3q_f64(v51);
          v45[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64((float64x2_t)v48), (float64x2_t)v50);
          float32x4_t *v45 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64((float64x2_t)v52), (float64x2_t)v53);
          v44 += 24;
          v45 += 2;
          v46 -= 8;
        }
        while (v46);
      }
      else
      {
LABEL_32:
        unint64_t v43 = 0;
      }
      uint64_t v54 = 24 * v43 + 32;
      do
      {
        if (v43 == 51)
        {
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        float v55 = *(double *)(v5 + v54);
        v32[v43] = v55;
        v54 += 24;
        ++v43;
      }
      while (v37 != v43);
      swift_bridgeObjectRelease();
      unint64_t v37 = *(void *)(*(void *)(v36 + 16) + 16);
      if (v37)
      {
        uint64_t v56 = swift_bridgeObjectRetain();
        uint64_t v57 = 0;
        uint64_t v58 = 40;
        do
        {
          if ((unint64_t)(v57 + 17) >= *(void *)(v31 + 16)) {
            goto LABEL_76;
          }
          float v59 = *(double *)(v56 + v58);
          *(float *)(v31 + 100 + 4 * v57) = v59;
          v58 += 24;
          ++v57;
        }
        while (v37 != v57);
        swift_bridgeObjectRelease();
        uint64_t v5 = *(void *)(v36 + 16);
        unint64_t v37 = *(void *)(v5 + 16);
        if (v37)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = 0;
          uint64_t v61 = 48;
          do
          {
            if ((unint64_t)(v60 + 34) >= *(void *)(v31 + 16)) {
              goto LABEL_77;
            }
            float v62 = *(double *)(v5 + v61);
            *(float *)(v31 + 168 + 4 * v60) = v62;
            v61 += 24;
            ++v60;
          }
          while (v37 != v60);
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
      }
    }
    else
    {
      swift_retain();
    }
    swift_release();
  }
LABEL_47:
  uint64_t v63 = MEMORY[0x263F8D310];
  if ((*(unsigned char *)(v9 + 64) & 1) == 0)
  {
    unint64_t v37 = a2;
    uint64_t v5 = *(void *)(v9 + 56);
    uint64_t v6 = *(void *)(v9 + 16);
    uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
    uint64_t v36 = *(void *)(v86 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v86 + v9) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_86;
    }
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_51;
    }
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A38);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_25436F130;
  *(void *)(v64 + 56) = v63;
  *(void *)(v64 + 32) = 0xD000000000000018;
  *(void *)(v64 + 40) = 0x800000025437BC50;
  sub_25436D8D0();
  swift_bridgeObjectRelease();
  while (1)
  {
    *(float *)&uint64_t v6 = sqrt(Width * Height);
    *(float *)&CGFloat Height = MidX;
    *(float *)&CGFloat Width = MidY;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A38);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_254370DD0;
    *(void *)(v67 + 56) = v63;
    *(void *)(v67 + 32) = 0x203A737475706E69;
    *(void *)(v67 + 40) = 0xE800000000000000;
    unint64_t v37 = MEMORY[0x263F8D5C8];
    *(void *)(v67 + 88) = MEMORY[0x263F8D5C8];
    *(_DWORD *)(v67 + 64) = v6;
    *(void *)(v67 + 120) = v37;
    *(_DWORD *)(v67 + 96) = LODWORD(Height);
    *(void *)(v67 + 152) = v37;
    *(_DWORD *)(v67 + 128) = LODWORD(Width);
    *(void *)(v67 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8738);
    *(void *)(v67 + 160) = v28;
    *(void *)(v67 + 216) = v37;
    *(float *)(v67 + 192) = v34;
    *(void *)(v67 + 248) = v37;
    *(float *)(v67 + 224) = v23;
    swift_bridgeObjectRetain();
    sub_25436D8D0();
    swift_bridgeObjectRelease();
    uint64_t v36 = a2 * a5;
    if ((unsigned __int128)((uint64_t)a2 * (__int128)a5) >> 64 != (uint64_t)(a2 * a5) >> 63)
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    *(_DWORD *)(a3 + 4 * v36) = v6;
    if (__OFADD__(v36, 1)) {
      goto LABEL_79;
    }
    *(_DWORD *)(a3 + 4 * (v36 + 1)) = LODWORD(Height);
    if (__OFADD__(v36, 2)) {
      goto LABEL_80;
    }
    *(_DWORD *)(a3 + 4 * (v36 + 2)) = LODWORD(Width);
    if (__OFADD__(v36, 3)) {
      goto LABEL_81;
    }
    uint64_t v68 = (void *)(a3 + 4 * (v36 + 3));
    if (v85) {
      unint64_t v69 = &unk_2703B2488;
    }
    else {
      unint64_t v69 = &unk_2703B2460;
    }
    uint64_t v70 = &unk_2703B24A8;
    if (!v85) {
      uint64_t v70 = &unk_2703B2480;
    }
    unint64_t v71 = &unk_2703B2488;
    if (v85) {
      unint64_t v71 = &unk_2703B24B0;
    }
    if (v70 < v68 + 1 && v68 < v71) {
      goto LABEL_89;
    }
    *uint64_t v68 = v69[4];
    swift_bridgeObjectRelease();
    if (__OFADD__(v36, 5)) {
      goto LABEL_82;
    }
    unint64_t v72 = a3 + 4 * (v36 + 5);
    if (v30 < v72 + 12 && v72 < v28 + 44) {
      goto LABEL_89;
    }
    *(void *)unint64_t v72 = *(void *)v30;
    *(_DWORD *)(v72 + 8) = *(_DWORD *)(v30 + 8);
    swift_bridgeObjectRelease();
    if (__OFADD__(v36, 8)) {
      goto LABEL_83;
    }
    *(float *)(a3 + 4 * (v36 + 8)) = v34;
    if (__OFADD__(v36, 9)) {
      goto LABEL_84;
    }
    *(float *)(a3 + 4 * (v36 + 9)) = v23;
    if (!__OFADD__(v36, 10)) {
      break;
    }
LABEL_85:
    __break(1u);
LABEL_86:
    uint64_t v36 = (uint64_t)sub_254363290((void *)v36);
    a2 = v37;
    if ((v37 & 0x8000000000000000) != 0) {
      goto LABEL_87;
    }
LABEL_51:
    if (*(void *)(v36 + 16) <= a2) {
      goto LABEL_88;
    }
    uint64_t v66 = (void *)(v36 + 16 * a2);
    v66[4] = v5;
    v66[5] = v6;
    *(void *)(v86 + v9) = v36;
    uint64_t v63 = MEMORY[0x263F8D310];
  }
  unsigned int v73 = (_OWORD *)(a3 + 4 * (v36 + 10));
  if (v32 >= (float *)v73 + 51 || (unint64_t)v73 >= v31 + 236)
  {
    *unsigned int v73 = *(_OWORD *)v32;
    long long v74 = *(_OWORD *)(v31 + 48);
    long long v75 = *(_OWORD *)(v31 + 64);
    long long v76 = *(_OWORD *)(v31 + 96);
    v73[3] = *(_OWORD *)(v31 + 80);
    v73[4] = v76;
    v73[1] = v74;
    v73[2] = v75;
    long long v77 = *(_OWORD *)(v31 + 112);
    long long v78 = *(_OWORD *)(v31 + 128);
    long long v79 = *(_OWORD *)(v31 + 160);
    v73[7] = *(_OWORD *)(v31 + 144);
    v73[8] = v79;
    v73[5] = v77;
    v73[6] = v78;
    long long v80 = *(_OWORD *)(v31 + 176);
    long long v81 = *(_OWORD *)(v31 + 192);
    long long v82 = *(_OWORD *)(v31 + 208);
    *(_OWORD *)((char *)v73 + 188) = *(_OWORD *)(v31 + 220);
    v73[10] = v81;
    v73[11] = v82;
    v73[9] = v80;
    uint64_t result = swift_bridgeObjectRelease();
    *(_DWORD *)(a4 + 4 * a2) = 1065353216;
    return result;
  }
LABEL_89:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25429F3F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4964656B63617274 && a2 == 0xE900000000000044;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25429F4F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D756E656D617266 && a2 == 0xE800000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736B63617274 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_25429F634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6F65646976 && a2 == 0xE900000000000065;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D617266 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25429F72C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365746564 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25429F81C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952671090 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4972656B63617274 && a2 == 0xE900000000000064 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254379BF0 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77615965636166 && a2 == 0xE700000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6374695065636166 && a2 == 0xE900000000000068 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6C6F5265636166 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7079654B79646F62 && a2 == 0xED000073746E696FLL || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x676E696B61657073 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E696B6F6F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_25429FC3C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
  uint64_t v15 = *(void **)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v6 + v14) = v15;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v15 = sub_254363290(v15);
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_18;
  }
LABEL_3:
  if (v15[2] <= a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v17 = (double *)&v15[2 * a2];
  *((void *)v17 + 4) = v13;
  v17[5] = a6;
  *(void *)(v6 + v14) = v15;
  uint64_t v18 = *(void *)(a1 + 24);
  int64_t v19 = *(void *)(v18 + 16);
  float v20 = (_OWORD *)MEMORY[0x263F8EE78];
  if (v19)
  {
    uint64_t v40 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2542E2B14(0, v19, 0);
    uint64_t v21 = 0;
    float v20 = (_OWORD *)v40;
    unint64_t v22 = *(void *)(v40 + 16);
    do
    {
      double v23 = *(double *)(v18 + 8 * v21 + 32);
      unint64_t v24 = *(void *)(v40 + 24);
      if (v22 >= v24 >> 1) {
        sub_2542E2B14(v24 > 1, v22 + 1, 1);
      }
      ++v21;
      float v25 = v23;
      *(void *)(v40 + 16) = v22 + 1;
      *(float *)(v40 + 4 * v22++ + 32) = v25;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
  }
  if ((unsigned __int128)((uint64_t)a2 * (__int128)a5) >> 64 != (uint64_t)(a2 * a5) >> 63) {
    goto LABEL_20;
  }
  float v26 = (_OWORD *)(a3 + 4 * a2 * a5);
  if (v20 + 2 >= (_OWORD *)((char *)v26 + 236) || v26 >= (_OWORD *)((char *)v20 + 268))
  {
    long long v28 = v20[2];
    long long v29 = v20[4];
    v26[1] = v20[3];
    void v26[2] = v29;
    *float v26 = v28;
    long long v30 = v20[5];
    long long v31 = v20[6];
    long long v32 = v20[8];
    v26[5] = v20[7];
    v26[6] = v32;
    v26[3] = v30;
    long long v26[4] = v31;
    long long v33 = v20[9];
    long long v34 = v20[10];
    long long v35 = v20[12];
    v26[9] = v20[11];
    v26[10] = v35;
    v26[7] = v33;
    v26[8] = v34;
    long long v36 = v20[13];
    long long v37 = v20[14];
    long long v38 = v20[15];
    *(_OWORD *)((char *)v26 + 220) = *(_OWORD *)((char *)v20 + 252);
    v26[12] = v37;
    v26[13] = v38;
    v26[11] = v36;
    uint64_t result = swift_bridgeObjectRelease();
    *(_DWORD *)(a4 + 4 * a2) = 1065353216;
    return result;
  }
LABEL_21:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25429FE70()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_25429FE7C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

void *sub_25429FE8C(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *result;
  return result;
}

double sub_25429FEA0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_25429FEB0(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 24) = *a1;
  return result;
}

uint64_t sub_25429FEC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25429FED4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25429FEE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t keypath_set_13Tm(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_25429FF70@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_25429FF80(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 16) = *a1;
  return result;
}

uint64_t sub_25429FF90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t keypath_set_7Tm(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_25429FFE8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(*(void *)a1 + 24);
  long long v3 = *(_OWORD *)(*(void *)a1 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

__n128 sub_25429FFFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 40) = v4;
  return result;
}

uint64_t sub_2542A0010@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 64);
  *(void *)a2 = *(void *)(*(void *)result + 56);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A0028(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 56) = *(void *)result;
  *(unsigned char *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_2542A0040@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 72);
  return result;
}

void *sub_2542A0050(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 72) = *result;
  return result;
}

uint64_t sub_2542A0060@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 88);
  *(void *)a2 = *(void *)(*(void *)result + 80);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A0078(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 80) = *(void *)result;
  *(unsigned char *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_2542A0090@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 104);
  *(void *)a2 = *(void *)(*(void *)result + 96);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A00A8(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 96) = *(void *)result;
  *(unsigned char *)(v3 + 104) = v2;
  return result;
}

uint64_t sub_2542A00C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 120);
  *(void *)a2 = *(void *)(*(void *)result + 112);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A00D8(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 112) = *(void *)result;
  *(unsigned char *)(v3 + 120) = v2;
  return result;
}

uint64_t sub_2542A00F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 128);
  return swift_retain();
}

uint64_t sub_2542A0100(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 128) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2542A0144@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 144);
  *(void *)a2 = *(void *)(*(void *)result + 136);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A015C(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 136) = *(void *)result;
  *(unsigned char *)(v3 + 144) = v2;
  return result;
}

uint64_t sub_2542A0174@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 160);
  *(void *)a2 = *(void *)(*(void *)result + 152);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542A018C(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 152) = *(void *)result;
  *(unsigned char *)(v3 + 160) = v2;
  return result;
}

uint64_t method lookup function for DKISSTrackVector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSTrackVector);
}

uint64_t dispatch thunk of DKISSTrackVector.trackedID.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSTrackVector.trackedID.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSTrackVector.trackedID.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSTrackVector.features.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSTrackVector.features.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSTrackVector.features.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSTrackVector.__allocating_init(trackerID:features:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKISSTrackVector.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSTrackVector.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for DKISSFeatureVector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSFeatureVector);
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKISSFeatureVector.__allocating_init(framenum:time:tracks:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKISSFeatureVector.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKISSFeatureVector.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t method lookup function for DKISSFeatureVectors(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSFeatureVectors);
}

uint64_t dispatch thunk of DKISSFeatureVectors.videoName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.videoName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.videoName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.frames.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.frames.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.frames.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.__allocating_init(videoName:frames:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for DKISSDetections(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSDetections);
}

uint64_t dispatch thunk of DKISSDetections.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSDetections.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSDetections.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSDetections.detections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSDetections.detections.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSDetections.detections.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSDetections.__allocating_init(time:detections:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKISSDetections.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSDetections.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for DKISSDetection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSDetection);
}

uint64_t dispatch thunk of DKISSDetection.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKISSDetection.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKISSDetection.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKISSDetection.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKISSDetection.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKISSDetection.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKISSDetection.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKISSDetection.trackerId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKISSDetection.facePitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKISSDetection.facePitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.facePitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 312))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKISSDetection.speaking.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKISSDetection.speaking.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 360))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.speaking.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKISSDetection.looking.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKISSDetection.looking.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 384))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.looking.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKISSDetection.__allocating_init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, uint64_t, void))(v7 + 400))(a1, a2 & 1, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKISSDetection.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKISSDetection.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t initializeBufferWithCopyOfBuffer for DKISSPrediction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DKISSPrediction()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DKISSPrediction(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKISSPrediction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKISSPrediction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKISSPrediction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKISSPrediction()
{
  return &type metadata for DKISSPrediction;
}

uint64_t sub_2542A0F88()
{
  return type metadata accessor for DKISSModel();
}

uint64_t sub_2542A0F90()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for DKISSModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKISSModel);
}

uint64_t dispatch thunk of DKISSModel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 808))();
}

uint64_t dispatch thunk of DKISSModel.process(features:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of DKISSModel.process(detections:time:runSubjectSelection:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

ValueMetadata *type metadata accessor for NetworkDetection()
{
  return &type metadata for NetworkDetection;
}

uint64_t getEnumTagSinglePayload for DKISSDetection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKISSDetection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542A1298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKISSDetection.CodingKeys()
{
  return &type metadata for DKISSDetection.CodingKeys;
}

ValueMetadata *type metadata accessor for DKISSDetections.CodingKeys()
{
  return &type metadata for DKISSDetections.CodingKeys;
}

ValueMetadata *type metadata accessor for DKISSFeatureVectors.CodingKeys()
{
  return &type metadata for DKISSFeatureVectors.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DKISSFeatureVector.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542A13C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKISSFeatureVector.CodingKeys()
{
  return &type metadata for DKISSFeatureVector.CodingKeys;
}

unsigned char *_s23IntelligentTrackingCore15DKISSDetectionsC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542A14C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKISSTrackVector.CodingKeys()
{
  return &type metadata for DKISSTrackVector.CodingKeys;
}

unint64_t sub_2542A1500()
{
  unint64_t result = qword_269DD8680;
  if (!qword_269DD8680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8680);
  }
  return result;
}

unint64_t sub_2542A1558()
{
  unint64_t result = qword_269DD8688;
  if (!qword_269DD8688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8688);
  }
  return result;
}

unint64_t sub_2542A15B0()
{
  unint64_t result = qword_269DD8690;
  if (!qword_269DD8690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8690);
  }
  return result;
}

unint64_t sub_2542A1608()
{
  unint64_t result = qword_269DD8698;
  if (!qword_269DD8698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8698);
  }
  return result;
}

unint64_t sub_2542A1660()
{
  unint64_t result = qword_269DD86A0;
  if (!qword_269DD86A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86A0);
  }
  return result;
}

unint64_t sub_2542A16B8()
{
  unint64_t result = qword_269DD86A8;
  if (!qword_269DD86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86A8);
  }
  return result;
}

unint64_t sub_2542A1710()
{
  unint64_t result = qword_269DD86B0;
  if (!qword_269DD86B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86B0);
  }
  return result;
}

unint64_t sub_2542A1768()
{
  unint64_t result = qword_269DD86B8;
  if (!qword_269DD86B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86B8);
  }
  return result;
}

unint64_t sub_2542A17C0()
{
  unint64_t result = qword_269DD86C0;
  if (!qword_269DD86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86C0);
  }
  return result;
}

unint64_t sub_2542A1818()
{
  unint64_t result = qword_269DD86C8;
  if (!qword_269DD86C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86C8);
  }
  return result;
}

unint64_t sub_2542A1870()
{
  unint64_t result = qword_269DD86D0;
  if (!qword_269DD86D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86D0);
  }
  return result;
}

unint64_t sub_2542A18C8()
{
  unint64_t result = qword_269DD86D8;
  if (!qword_269DD86D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86D8);
  }
  return result;
}

unint64_t sub_2542A1920()
{
  unint64_t result = qword_269DD86E0;
  if (!qword_269DD86E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86E0);
  }
  return result;
}

unint64_t sub_2542A1978()
{
  unint64_t result = qword_269DD86E8;
  if (!qword_269DD86E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86E8);
  }
  return result;
}

unint64_t sub_2542A19D0()
{
  unint64_t result = qword_269DD86F0;
  if (!qword_269DD86F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD86F0);
  }
  return result;
}

uint64_t sub_2542A1A24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2542A1A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2542A1AF4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double *DKAccelerationLimiter.__allocating_init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)(char a1, uint64_t a2, double a3, double a4, double a5)
{
  CGFloat v10 = (double *)swift_allocObject();
  sub_25436C6E0();
  void v10[2] = a4;
  v10[3] = a5;
  v10[4] = a3;
  CGFloat v11 = (char *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  uint64_t v12 = sub_25436C7B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  *((unsigned char *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = a1;
  *((unsigned char *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  return v10;
}

BOOL static DKAccelerationLimiter.Profile.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKAccelerationLimiter.Profile.hash(into:)()
{
  return sub_25436D900();
}

uint64_t DKAccelerationLimiter.Profile.hashValue.getter()
{
  return sub_25436D930();
}

double *DKAccelerationLimiter.init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)(char a1, uint64_t a2, double a3, double a4, double a5)
{
  sub_25436C6E0();
  long long v5[2] = a4;
  v5[3] = a5;
  v5[4] = a3;
  CGFloat v11 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  uint64_t v12 = sub_25436C7B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = a1;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  return v5;
}

double sub_2542A1DA8(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled))
  {
    CGFloat v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v10(v9, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v6);
    sub_25436C700();
    double v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v12 <= 0.0)
    {
LABEL_5:
      double v13 = *(double *)(v2 + 16);
      goto LABEL_7;
    }
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile))
    {
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) == 1) {
        goto LABEL_5;
      }
      double v13 = *(double *)(v2 + 16) + *(double *)(v2 + 16);
    }
    else
    {
      double v13 = *(double *)(v2 + 16) * 0.5;
    }
  }
  else
  {
    double v13 = *(double *)(v2 + 16);
    CGFloat v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  }
LABEL_7:
  double v14 = *(double *)(v2 + 24);
  uint64_t v15 = (char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime);
  v10(v9, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v6);
  sub_25436C700();
  double v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  double v19 = *(double *)(v3 + 32);
  double v20 = (a2 - v19) / v17;
  double v21 = fabs(a2);
  double v22 = fabs(v19);
  double v23 = -v14;
  if (v20 > -v14) {
    double v23 = (a2 - v19) / v17;
  }
  if (v14 >= v20) {
    double v24 = (a2 - v19) / v17;
  }
  else {
    double v24 = v14;
  }
  if (v20 > 0.0) {
    double v23 = v24;
  }
  double v25 = -v13;
  if (v20 > -v13) {
    double v25 = (a2 - v19) / v17;
  }
  if (v13 >= v20) {
    double v26 = (a2 - v19) / v17;
  }
  else {
    double v26 = v13;
  }
  if (v20 > 0.0) {
    double v27 = v26;
  }
  else {
    double v27 = v25;
  }
  if (v22 >= v21) {
    double v27 = v23;
  }
  *(double *)(v3 + 32) = v19 + v17 * v27;
  v18(v15, v6);
  v10(v15, a1, v6);
  return *(double *)(v3 + 32);
}

void sub_2542A200C(char *a1@<X8>)
{
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1
    && ((*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v3, v5), sub_25436C700(), double v9 = v8, (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3), v9 > 0.0))
  {
    char v10 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
  }
  else
  {
    char v10 = 1;
  }
  *a1 = v10;
}

unsigned char *sub_2542A214C(unsigned char *result, uint64_t a2)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = *result;
    uint64_t v4 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout;
    uint64_t v5 = sub_25436C7B0();
    uint64_t v7 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v5);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    return (unsigned char *)v6(v4, a2, v5);
  }
  return result;
}

uint64_t sub_2542A2240()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25436C6E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v4, v1);
}

uint64_t DKAccelerationLimiter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v2);
  return v0;
}

uint64_t DKAccelerationLimiter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_2542A2474()
{
  unint64_t result = qword_269DD8748;
  if (!qword_269DD8748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8748);
  }
  return result;
}

uint64_t sub_2542A24C8()
{
  return type metadata accessor for DKAccelerationLimiter();
}

uint64_t type metadata accessor for DKAccelerationLimiter()
{
  uint64_t result = qword_269DD8750;
  if (!qword_269DD8750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2542A251C()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKAccelerationLimiter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKAccelerationLimiter);
}

uint64_t dispatch thunk of DKAccelerationLimiter.__allocating_init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.update(newSpeed:time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.getCurrentProfile(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.setProfile(profile:timeout:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.resetProfile()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

unsigned char *storeEnumTagSinglePayload for DKAccelerationLimiter.Profile(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542A277CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKAccelerationLimiter.Profile()
{
  return &type metadata for DKAccelerationLimiter.Profile;
}

uint64_t static DKImageUtil.extractFloatChannels(imageBuffer:reds:greens:blues:)(__CVBuffer *a1, char **a2, char **a3, char **a4)
{
  return sub_2542A3500(a1, a2, a3, a4);
}

void static DKImageUtil.createCVPixelBuffer(width:height:format:buffer:)(size_t a1, size_t a2, OSType a3, CVPixelBufferRef *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v10 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, a1, a2, a3, v10, a4);
}

BOOL static DKImageUtil.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKImageUtil.Errors.hash(into:)()
{
  return sub_25436D900();
}

uint64_t DKImageUtil.Errors.hashValue.getter()
{
  return sub_25436D930();
}

char *static DKImageUtil.extractFloatChannels(imageBuffer:)(unsigned __int8 *__A, uint64_t a2, uint64_t a3)
{
  if ((a3 | a2) < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  vDSP_Length v11 = a3 * a2;
  if ((unsigned __int128)(a3 * (__int128)a2) >> 64 != (a3 * a2) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned int v6 = __A;
  if (!__A)
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v11 - 0x2000000000000000) >> 62 == 3)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11)
      {
        uint64_t v8 = sub_25436CE40();
        *(void *)(v8 + 16) = v11;
        CFDictionaryRef v10 = (const float *)(v8 + 32);
        vDSP_vfltu8(v6, 4, (float *)(v8 + 32), 1, v11);
        *(void *)(v8 + 16) = v11;
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_25436CE40();
        *(void *)(v4 + 16) = v11;
        int v3 = (vDSP_Length *)(v4 + 16);
        uint64_t v5 = (float *)(v4 + 32);
        vDSP_vfltu8(v6 + 1, 4, (float *)(v4 + 32), 1, v11);
        *(void *)(v4 + 16) = v11;
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_25436CE40();
        *(void *)(v7 + 16) = v11;
      }
      else
      {
        uint64_t v4 = MEMORY[0x263F8EE78];
        uint64_t v5 = (float *)(MEMORY[0x263F8EE78] + 32);
        vDSP_vfltu8(__A, 4, (float *)(MEMORY[0x263F8EE78] + 32), 1, 0);
        *(void *)(v4 + 16) = 0;
        int v3 = (vDSP_Length *)(v4 + 16);
        swift_bridgeObjectRetain();
        vDSP_vfltu8(v6 + 1, 4, v5, 1, 0);
        *(void *)(v4 + 16) = 0;
        swift_bridgeObjectRetain();
        uint64_t v8 = v4;
        CFDictionaryRef v10 = v5;
        uint64_t v7 = v4;
      }
      uint64_t v9 = (const float *)(v7 + 32);
      vDSP_vfltu8(v6 + 2, 4, (float *)(v7 + 32), 1, v11);
      *(void *)(v7 + 16) = v11;
      unsigned int v6 = *(unsigned __int8 **)(v8 + 16);
      swift_bridgeObjectRetain();
      double v12 = (char *)v8;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_20:
    uint64_t result = (char *)sub_25436D4E0();
    __break(1u);
    return result;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  double v12 = sub_254363268(v8);
LABEL_10:
  vDSP_vsdiv(v10, 1, flt_2703B27C8, (float *)v12 + 8, 1, (vDSP_Length)v6);
  swift_bridgeObjectRelease();
  vDSP_Length v13 = *v3;
  double v14 = (char *)v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v14 = sub_254363268(v4);
  }
  vDSP_vsdiv(v5, 1, flt_2703B27F0, (float *)v14 + 8, 1, v13);
  swift_bridgeObjectRelease();
  vDSP_Length v15 = *(void *)(v7 + 16);
  double v16 = (char *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v16 = sub_254363268(v7);
  }
  vDSP_vsdiv(v9, 1, flt_2703B2818, (float *)v16 + 8, 1, v15);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t static DKImageUtil.extractFloatChannels(imageBuffer:reds:greens:blues:order:)(const unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char **a5, char **a6, char **a7, int a8)
{
  return sub_2542A31E4(a1, a2, a3, a5, a6, a7, a8);
}

CVPixelBufferRef static DKImageUtil.createCVPixelBuffer(from:context:)(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, a1);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
  CVPixelBufferRef v3 = _s23IntelligentTrackingCore11DKImageUtilC19createCVPixelBuffer4from7contextSo11CVBufferRefaSgSo7CIImageC_So9CIContextCtFZ_0(v1, v2);

  return v3;
}

CGImageRef static DKImageUtil.createCGImage(from:context:)(__CVBuffer *a1)
{
  v2[1] = *(CGImageRef *)MEMORY[0x263EF8340];
  v2[0] = 0;
  VTCreateCGImageFromCVPixelBuffer(a1, 0, v2);
  return v2[0];
}

CVPixelBufferRef static DKImageUtil.rotateCVPixelBufferBy90(buffer:clockwise:)(__CVBuffer *a1, char a2)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  pixelBufferOut[0] = 0;
  size_t Height = CVPixelBufferGetHeight(a1);
  size_t Width = CVPixelBufferGetWidth(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v8 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Height, Width, 0x42475241u, v8, pixelBufferOut);

  CVPixelBufferRef v9 = pixelBufferOut[0];
  if (pixelBufferOut[0])
  {
    VTPixelRotationSessionRef v16 = 0;
    CFDictionaryRef v10 = pixelBufferOut[0];
    VTPixelRotationSessionCreate(0, &v16);
    if (v16)
    {
      CFStringRef v11 = (const __CFString *)*MEMORY[0x263F1E9D0];
      double v12 = (const void **)MEMORY[0x263F1EC00];
      if ((a2 & 1) == 0) {
        double v12 = (const void **)MEMORY[0x263F1EBF8];
      }
      vDSP_Length v13 = *v12;
      double v14 = v16;
      VTSessionSetProperty(v14, v11, v13);
      VTPixelRotationSessionRotateImage(v14, a1, v10);
      VTPixelRotationSessionInvalidate(v14);
    }
    else
    {

      return 0;
    }
  }
  return v9;
}

CVPixelBufferRef static DKImageUtil.rotateCVPixelBuffer(buffer:cameraOrientation:cameraPort:)(__CVBuffer *a1, unsigned char *a2, unsigned char *a3)
{
  if (*a3 != 1)
  {
    switch(*a2)
    {
      case 1:
        uint64_t v3 = 90;
        goto LABEL_15;
      case 2:
        uint64_t v3 = -90;
        goto LABEL_15;
      case 3:
        uint64_t v3 = 0;
        goto LABEL_15;
      case 4:
        uint64_t v3 = 180;
LABEL_15:
        char v5 = 0;
        char v6 = 0;
        return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
      default:
        return 0;
    }
  }
  switch(*a2)
  {
    case 1:
      uint64_t v3 = 90;
      break;
    case 2:
      uint64_t v3 = -90;
      break;
    case 3:
      uint64_t v3 = 0;
      char v5 = 0;
      char v6 = 1;
      return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
    case 4:
      uint64_t v3 = 0;
      break;
    default:
      return 0;
  }
  char v5 = 1;
  char v6 = 0;
  return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
}

void static DKImageUtil.copyCVPixelBuffer(from:to:)(__CVBuffer *a1, __CVBuffer *a2)
{
}

CVPixelBufferRef static DKImageUtil.copyCVPixelBuffer(_:)(void *a1)
{
  return sub_2542A42D8(a1);
}

id static DKImageUtil.copyCIImage(_:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_pixelBuffer);
  CVPixelBufferRef v3 = sub_2542A42D8(v1);

  if (!v3) {
    return 0;
  }
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVImageBuffer_, v3);

  return v2;
}

uint64_t static DKImageUtil.sampleBufferFromPixelBufferAndTimestamp(time:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  type metadata accessor for CMFormatDescription(0);
  id v5 = a4;
  sub_25436CA80();
  type metadata accessor for CMSampleBuffer(0);
  id v6 = v5;
  sub_25436CA70();
  return v8;
}

uint64_t DKImageUtil.deinit()
{
  return v0;
}

uint64_t DKImageUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2542A31E4(const unsigned __int8 *a1, uint64_t a2, uint64_t a3, char **a4, char **a5, char **a6, int a7)
{
  if ((a3 | a2) < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  vDSP_Length v15 = a3 * a2;
  if ((unsigned __int128)(a3 * (__int128)a2) >> 64 != (a3 * a2) >> 63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a1;
  if (!a1)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((v15 - 0x2000000000000000) >> 62 == 3)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      CFStringRef v11 = a5;
      double v26 = a4;
      double v14 = *a4;
      int v25 = a7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v14 = sub_254258814(0, *((void *)v14 + 2), 0, v14);
      }
      uint64_t v8 = (const float *)(v14 + 32);
      vDSP_vfltu8(v7, 4, (float *)v14 + 8, 1, v15);
      vDSP_Length v13 = *v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        vDSP_Length v13 = sub_254258814(0, *((void *)v13 + 2), 0, v13);
      }
      CFDictionaryRef v10 = (const float *)(v13 + 32);
      vDSP_vfltu8(v7 + 1, 4, (float *)v13 + 8, 1, v15);
      double v27 = a6;
      double v12 = *a6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v12 = sub_254258814(0, *((void *)v12 + 2), 0, v12);
      }
      double v17 = v7 + 2;
      uint64_t v7 = (const unsigned __int8 *)(v12 + 32);
      vDSP_vfltu8(v17, 4, (float *)v12 + 8, 1, v15);
      vDSP_Length v9 = *((void *)v14 + 2);
      swift_bridgeObjectRetain();
      uint64_t v18 = v14;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
LABEL_27:
    uint64_t result = sub_25436D4E0();
    __break(1u);
    return result;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t v18 = sub_254363268((uint64_t)v14);
LABEL_13:
  vDSP_vsdiv(v8, 1, flt_2703B1E20, (float *)v18 + 8, 1, v9);
  *double v26 = v18;
  swift_bridgeObjectRelease();
  vDSP_Length v19 = *((void *)v13 + 2);
  swift_bridgeObjectRetain();
  double v20 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v20 = sub_254363268((uint64_t)v13);
  }
  vDSP_vsdiv(v10, 1, flt_2703B1E48, (float *)v20 + 8, 1, v19);
  *CFStringRef v11 = v20;
  swift_bridgeObjectRelease();
  vDSP_Length v21 = *((void *)v12 + 2);
  swift_bridgeObjectRetain();
  double v22 = v12;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v22 = sub_254363268((uint64_t)v12);
  }
  vDSP_vsdiv((const float *)v7, 1, flt_2703B1E70, (float *)v22 + 8, 1, v21);
  uint64_t *v27 = v22;
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
    if (v25 == 0x2000)
    {
      *double v26 = v22;
      uint64_t *v27 = v18;
    }
    else
    {
      sub_2542A4988();
      swift_allocError();
      *double v24 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2542A3500(__CVBuffer *a1, char **a2, char **a3, char **a4)
{
  if (CVPixelBufferLockBaseAddress(a1, 1uLL))
  {
    sub_2542A4988();
    swift_allocError();
    *uint64_t v8 = 1;
    return swift_willThrow();
  }
  BaseAddress = (const unsigned __int8 *)CVPixelBufferGetBaseAddress(a1);
  if (!BaseAddress)
  {
    sub_2542A4988();
    swift_allocError();
    unsigned char *v16 = 2;
    swift_willThrow();
    return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
  }
  CFStringRef v11 = BaseAddress;
  size_t Height = CVPixelBufferGetHeight(a1);
  if ((Height & 0x8000000000000000) == 0)
  {
    uint64_t v13 = Height;
    size_t Width = CVPixelBufferGetWidth(a1);
    if ((Width & 0x8000000000000000) == 0)
    {
      uint64_t v15 = Width;
      CVPixelBufferGetBytesPerRow(a1);
      sub_2542A31E4(v11, v13, v15, a2, a3, a4, 0x2000);
      return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    }
  }
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore11DKImageUtilC27resizeImageForCVPixelBuffer_06outputJ010dimensionsSbSo11CVBufferRefa_AHSgSo17CMVideoDimensionsatFZ_0(__CVBuffer *a1, void *a2)
{
  pixelTransferSessionOut[1] = *(VTPixelTransferSessionRef *)MEMORY[0x263EF8340];
  if (a2)
  {
    pixelTransferSessionOut[0] = 0;
    CVPixelBufferRef v3 = a2;
    VTPixelTransferSessionCreate(0, pixelTransferSessionOut);
    if (pixelTransferSessionOut[0])
    {
      CFStringRef v4 = (const __CFString *)*MEMORY[0x263F1EA08];
      id v5 = (const void *)*MEMORY[0x263F1EC78];
      id v6 = pixelTransferSessionOut[0];
      VTSessionSetProperty(v6, v4, v5);
      VTPixelTransferSessionTransferImage(v6, a1, v3);
      VTPixelTransferSessionInvalidate(v6);
      CVPixelBufferGetWidth(a1);
      CVPixelBufferGetHeight(a1);
      CVPixelBufferGetWidth(v3);
      CVPixelBufferGetHeight(v3);
      sub_25436D290();
      swift_bridgeObjectRelease();
      v9[0] = 0xD000000000000000;
      v9[1] = 0x800000025437BED0;
      sub_25436D760();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      sub_25436CCB0();
      sub_25436D760();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      sub_25436CCB0();
      sub_25436D760();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      sub_25436CCB0();
      sub_25436D760();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      sub_25436CCB0();
      os_log_type_t v7 = sub_25436D000();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v9, 0xD00000000000001BLL, 0x800000025437BED0, v7);

      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return 0;
}

uint64_t _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(__CVBuffer *a1, uint64_t a2)
{
  imageOut[1] = *(CGImageRef *)MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v7 = (char *)imageOut - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  vDSP_Length v9 = (char *)imageOut - v8;
  uint64_t v10 = sub_25436C610();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)imageOut - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254257A74(a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_254257ADC((uint64_t)v9);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
  imageOut[0] = 0;
  VTCreateCGImageFromCVPixelBuffer(a1, 0, imageOut);
  CGImageRef v15 = imageOut[0];

  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v13, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  uint64_t v16 = sub_2542571E8((uint64_t)v7, 80);

  sub_254257ADC((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

void sub_2542A3B90(__CVBuffer *a1, __CVBuffer *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v19[1] = *(VTPixelTransferSessionRef *)MEMORY[0x263EF8340];
  v19[0] = 0;
  VTPixelTransferSessionCreate(0, v19);
  if (v19[0])
  {
    CFStringRef v12 = (const __CFString *)*MEMORY[0x263F1E9F0];
    if (*MEMORY[0x263F1E9F0])
    {
      uint64_t v13 = (const void *)*MEMORY[0x263EFFB40];
      id v14 = v19[0];
      VTSessionSetProperty(v14, v12, v13);
      if (*MEMORY[0x263F1E9E8])
      {
        VTSessionSetProperty(v14, (CFStringRef)*MEMORY[0x263F1E9E8], (CFTypeRef)*MEMORY[0x263EFFB38]);
        VTSessionSetProperty(v14, (CFStringRef)*MEMORY[0x263F1EA08], (CFTypeRef)*MEMORY[0x263F1EC78]);
        CFStringRef v15 = (const __CFString *)*MEMORY[0x263F1EA10];
        if (*MEMORY[0x263F1EA10])
        {
          CGFloat v16 = (double)a3;
          double v17 = v14;
          v20.origin.CGFloat x = v16;
          v20.origin.CGFloat y = (double)a4;
          v20.size.CGFloat width = (double)a5;
          v20.size.CGFloat height = (double)a6;
          CFDictionaryRef DictionaryRepresentation = CGRectCreateDictionaryRepresentation(v20);
          VTSessionSetProperty(v17, v15, DictionaryRepresentation);

          VTPixelTransferSessionTransferImage(v17, a1, a2);
          VTPixelTransferSessionInvalidate(v17);

          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(CVPixelBufferRef pixelBuffer, uint64_t a2, char a3, char a4)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  pixelBufferOut[0] = 0;
  if (a2 == 90 || a2 == -90)
  {
    size_t Height = CVPixelBufferGetHeight(pixelBuffer);
    size_t Width = CVPixelBufferGetWidth(pixelBuffer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  }
  else
  {
    size_t Height = CVPixelBufferGetWidth(pixelBuffer);
    size_t Width = CVPixelBufferGetHeight(pixelBuffer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v12 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Height, Width, 0x42475241u, v12, pixelBufferOut);

  CVPixelBufferRef v13 = pixelBufferOut[0];
  if (!pixelBufferOut[0]) {
    return v13;
  }
  VTPixelRotationSessionRef pixelRotationSessionOut = 0;
  id v14 = pixelBufferOut[0];
  VTPixelRotationSessionCreate(0, &pixelRotationSessionOut);
  VTPixelRotationSessionRef v15 = pixelRotationSessionOut;
  if (!pixelRotationSessionOut)
  {

    return 0;
  }
  if (a2 > 89)
  {
    if (a2 == 90)
    {
      CFStringRef v16 = (const __CFString *)*MEMORY[0x263F1E9D0];
      double v17 = (CFTypeRef *)MEMORY[0x263F1EC00];
      goto LABEL_18;
    }
    if (a2 == 180)
    {
      CFStringRef v16 = (const __CFString *)*MEMORY[0x263F1E9D0];
      double v17 = (CFTypeRef *)MEMORY[0x263F1EBF0];
      goto LABEL_18;
    }
  }
  else
  {
    if (a2 == -90)
    {
      CFStringRef v16 = (const __CFString *)*MEMORY[0x263F1E9D0];
      double v17 = (CFTypeRef *)MEMORY[0x263F1EBF8];
      goto LABEL_18;
    }
    if (!a2)
    {
      CFStringRef v16 = (const __CFString *)*MEMORY[0x263F1E9D0];
      double v17 = (CFTypeRef *)MEMORY[0x263F1EBE8];
LABEL_18:
      VTSessionSetProperty(pixelRotationSessionOut, v16, *v17);
      goto LABEL_19;
    }
  }
  uint64_t v18 = pixelRotationSessionOut;
LABEL_19:
  vDSP_Length v19 = (CFTypeRef *)MEMORY[0x263EFFB40];
  if (a3) {
    VTSessionSetProperty(v15, (CFStringRef)*MEMORY[0x263F1E9C0], (CFTypeRef)*MEMORY[0x263EFFB40]);
  }
  if (a4) {
    VTSessionSetProperty(v15, (CFStringRef)*MEMORY[0x263F1E9C8], *v19);
  }
  VTPixelRotationSessionRotateImage(v15, pixelBuffer, v14);
  VTPixelRotationSessionInvalidate(v15);

  return v13;
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19createCVPixelBuffer4from7contextSo11CVBufferRefaSgSo7CIImageC_So9CIContextCtFZ_0(void *a1, void *a2)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  pixelBufferOut[0] = 0;
  objc_msgSend(a1, sel_extent);
  double Width = CGRectGetWidth(v13);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(a1, sel_extent);
  double Height = CGRectGetHeight(v14);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_15;
  }
  size_t v6 = (uint64_t)Height;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v9 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (uint64_t)Width, v6, 0x42475241u, v9, pixelBufferOut);

  CVPixelBufferRef v10 = pixelBufferOut[0];
  if (pixelBufferOut[0]) {
    objc_msgSend(a2, sel_render_toCVPixelBuffer_, a1, pixelBufferOut[0]);
  }
  return v10;
}

void sub_2542A41E0(__CVBuffer *a1, __CVBuffer *a2)
{
  v6[1] = *(VTPixelTransferSessionRef *)MEMORY[0x263EF8340];
  v6[0] = 0;
  VTPixelTransferSessionCreate(0, v6);
  if (v6[0])
  {
    uint64_t v4 = v6[0];
    VTPixelTransferSessionTransferImage(v4, a1, a2);
    VTPixelTransferSessionInvalidate(v4);
  }
  else
  {
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD000000000000023;
    *(void *)(v5 + 8) = 0x800000025437BEA0;
    *(unsigned char *)(v5 + 16) = 0;
    swift_willThrow();
  }
}

CVPixelBufferRef sub_2542A42D8(void *a1)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  if (!a1) {
    return 0;
  }
  pixelBufferOut[0] = 0;
  id v2 = a1;
  size_t Width = CVPixelBufferGetWidth(v2);
  size_t Height = CVPixelBufferGetHeight(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v7 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Width, Height, 0x42475241u, v7, pixelBufferOut);

  CVPixelBufferRef v8 = pixelBufferOut[0];
  if (pixelBufferOut[0] && (CVPixelBufferRef v9 = pixelBufferOut[0], sub_2542A41E0(v2, v9), v9, v1))
  {
  }
  else
  {
  }
  return v8;
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19pixelBufferFromFile3urlSo11CVBufferRefaSg10Foundation3URLV_tFZ_0()
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_25436C630();
  unint64_t v4 = v3;
  id v5 = objc_allocWithZone(MEMORY[0x263F00650]);
  sub_2542A4930(v2, v4);
  uint64_t v6 = (void *)sub_25436C690();
  id v7 = objc_msgSend(v5, sel_initWithData_, v6);
  sub_2542564BC(v2, v4);

  if (!v7)
  {
    sub_2542564BC(v2, v4);
    return 0;
  }
  pixelBufferOut[0] = 0;
  objc_msgSend(v7, sel_extent);
  double Width = CGRectGetWidth(v20);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v7, sel_extent);
  double Height = CGRectGetHeight(v21);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_20;
  }
  size_t v10 = (uint64_t)Height;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  uint64_t v13 = MEMORY[0x263F8D310];
  CFDictionaryRef v14 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (uint64_t)Width, v10, 0x42475241u, v14, pixelBufferOut);

  CVPixelBufferRef v0 = pixelBufferOut[0];
  if (pixelBufferOut[0])
  {
    id v15 = objc_allocWithZone(MEMORY[0x263F00628]);
    CFStringRef v16 = v0;
    id v17 = objc_msgSend(v15, sel_init);
    objc_msgSend(v17, sel_render_toCVPixelBuffer_, v7, v16);
    sub_2542564BC(v2, v4);

    return v0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A38);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_25436F130;
  *(void *)(v18 + 56) = v13;
  *(void *)(v18 + 32) = 0xD000000000000025;
  *(void *)(v18 + 40) = 0x800000025437BE70;
  sub_25436D8D0();
  sub_2542564BC(v2, v4);
  swift_bridgeObjectRelease();

  return 0;
}

unint64_t sub_2542A479C()
{
  unint64_t result = qword_269DD8760;
  if (!qword_269DD8760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8760);
  }
  return result;
}

uint64_t type metadata accessor for DKImageUtil()
{
  return self;
}

uint64_t method lookup function for DKImageUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKImageUtil);
}

unsigned char *storeEnumTagSinglePayload for DKImageUtil.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542A48F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKImageUtil.Errors()
{
  return &type metadata for DKImageUtil.Errors;
}

uint64_t sub_2542A4930(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_2542A4988()
{
  unint64_t result = qword_269DD8768;
  if (!qword_269DD8768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8768);
  }
  return result;
}

void sub_2542A49DC()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v4 = v2 + 64;
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v3;
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  char v9 = 1;
  double v10 = 0.0;
  if ((v5 & v3) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v12 = v11 | (v1 << 6);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v2 + 56) + 8 * v12);
    if (*(unsigned char *)(v13 + 33) == 1)
    {
      if (*(unsigned char *)(v13 + 32) == 1) {
        double v18 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      }
      else {
        double v18 = *(double *)(v13 + 40);
      }
      BOOL v19 = v10 >= v18;
      if (v10 < v18) {
        double v10 = v18;
      }
      v9 &= v19;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v14 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v8) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    int64_t v16 = v1 + 1;
    if (!v15)
    {
      int64_t v16 = v1 + 2;
      if (v1 + 2 >= v8) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v1 + 3;
        if (v1 + 3 >= v8) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v1 = v16;
  }
  int64_t v17 = v1 + 4;
  if (v1 + 4 >= v8)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    sub_2542774CC();
    return;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v1 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v8) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_2542A4BEC(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int64_t v6 = 0;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v9 = v7 + 64;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & v8;
  int64_t v13 = (unint64_t)(63 - v11) >> 6;
  char v14 = 4;
  double v15 = 0.0;
  if ((v10 & v8) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v6 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(v7 + 56) + 8 * v17);
    if (*(unsigned char *)(v18 + 33) == 1)
    {
      char v23 = *(unsigned char *)(*(void *)(v7 + 48) + v17);
      if (*(unsigned char *)(v18 + 32) == 1) {
        double v24 = atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56));
      }
      else {
        double v24 = *(double *)(v18 + 40);
      }
      if (v15 < v24)
      {
        double v15 = v24;
        char v14 = v23;
      }
      if (v12) {
        goto LABEL_4;
      }
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return;
    }
    if (v19 >= v13) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v9 + 8 * v19);
    int64_t v21 = v6 + 1;
    if (!v20)
    {
      int64_t v21 = v6 + 2;
      if (v6 + 2 >= v13) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v9 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v6 + 3;
        if (v6 + 3 >= v13) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v6 = v21;
  }
  int64_t v22 = v6 + 4;
  if (v6 + 4 < v13)
  {
    unint64_t v20 = *(void *)(v9 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        int64_t v21 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_34;
        }
        if (v21 >= v13) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    int64_t v21 = v6 + 4;
    goto LABEL_20;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_2542774CC();
  if (v14 == 4 || (a2 & 1) == 0 && v15 <= a1)
  {
    *(_OWORD *)a3 = xmmword_254371A40;
  }
  else
  {
    *(unsigned char *)a3 = v14;
    *(double *)(a3 + 8) = v15;
  }
}

void sub_2542A4DE8(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int64_t v6 = 0;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v9 = v7 + 64;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & v8;
  int64_t v13 = (unint64_t)(63 - v11) >> 6;
  char v14 = 3;
  double v15 = 0.0;
  if ((v10 & v8) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v6 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(v7 + 56) + 8 * v17);
    if (*(unsigned char *)(v18 + 33) == 1)
    {
      char v23 = *(unsigned char *)(*(void *)(v7 + 48) + v17);
      if (*(unsigned char *)(v18 + 32) == 1) {
        double v24 = atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56));
      }
      else {
        double v24 = *(double *)(v18 + 40);
      }
      if (v15 < v24)
      {
        double v15 = v24;
        char v14 = v23;
      }
      if (v12) {
        goto LABEL_4;
      }
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return;
    }
    if (v19 >= v13) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v9 + 8 * v19);
    int64_t v21 = v6 + 1;
    if (!v20)
    {
      int64_t v21 = v6 + 2;
      if (v6 + 2 >= v13) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v9 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v6 + 3;
        if (v6 + 3 >= v13) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v6 = v21;
  }
  int64_t v22 = v6 + 4;
  if (v6 + 4 < v13)
  {
    unint64_t v20 = *(void *)(v9 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        int64_t v21 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_34;
        }
        if (v21 >= v13) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    int64_t v21 = v6 + 4;
    goto LABEL_20;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_2542774CC();
  if (v14 == 3 || (a2 & 1) == 0 && v15 <= a1)
  {
    *(_OWORD *)a3 = xmmword_254371A50;
  }
  else
  {
    *(unsigned char *)a3 = v14;
    *(double *)(a3 + 8) = v15;
  }
}

void sub_2542A4FE0(double a1)
{
  *(double *)(v1 + 32) = a1;
}

void sub_2542A4FE8(double a1)
{
  *(double *)(v1 + 40) = a1;
}

double sub_2542A4FF0()
{
  return *(double *)(v0 + 48);
}

void sub_2542A4FF8(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t sub_2542A5000()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_2542A5008(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

double sub_2542A5010()
{
  return *(double *)(v0 + 88);
}

void sub_2542A5018(double a1)
{
  *(double *)(v1 + 88) = a1;
}

uint64_t (*sub_2542A5020())()
{
  return nullsub_1;
}

double sub_2542A5040()
{
  return *(double *)(v0 + 96);
}

void sub_2542A5048(double a1)
{
  *(double *)(v1 + 96) = a1;
}

double sub_2542A5050()
{
  return *(double *)(v0 + 104);
}

void sub_2542A5058(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*sub_2542A5060())()
{
  return nullsub_1;
}

uint64_t sub_2542A5080()
{
  return swift_retain();
}

uint64_t sub_2542A5088(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t sub_2542A5098()
{
  return swift_retain();
}

uint64_t sub_2542A50A0(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t (*sub_2542A50B0())()
{
  return nullsub_1;
}

uint64_t sub_2542A50D0()
{
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_2542A50D8(uint64_t result)
{
  *(unsigned char *)(v1 + 136) = result;
  return result;
}

double sub_2542A50E0()
{
  return *(double *)(v0 + 144);
}

void sub_2542A50E8(double a1)
{
  *(double *)(v1 + 144) = a1;
}

uint64_t (*sub_2542A50F0())()
{
  return nullsub_1;
}

uint64_t sub_2542A5110()
{
  return *(void *)(v0 + 152);
}

uint64_t sub_2542A5118(uint64_t result)
{
  *(void *)(v1 + 152) = result;
  return result;
}

double sub_2542A5120()
{
  return *(double *)(v0 + 160);
}

void sub_2542A5128(double a1)
{
  *(double *)(v1 + 160) = a1;
}

uint64_t (*sub_2542A5130())()
{
  return nullsub_1;
}

double sub_2542A5150()
{
  return *(double *)(v0 + 168);
}

void sub_2542A5158(double a1)
{
  *(double *)(v1 + 168) = a1;
}

uint64_t (*sub_2542A5160())()
{
  return nullsub_1;
}

uint64_t DKTrackerConfiguration.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DKTrackerConfiguration.init()();
  return v0;
}

uint64_t DKTrackerConfiguration.init()()
{
  *(_OWORD *)(v0 + 88) = xmmword_254371A60;
  *(void *)(v0 + 104) = 0x3FD0000000000000;
  *(_OWORD *)(v0 + 16) = xmmword_254371A70;
  *(_OWORD *)(v0 + 32) = xmmword_254371A80;
  *(_OWORD *)(v0 + 48) = xmmword_254371A90;
  *(void *)(v0 + 64) = 0x4000000000000000;
  *(_OWORD *)(v0 + 72) = xmmword_254371AA0;
  type metadata accessor for DKConstantAccelerationFilter.Configuration();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 56) = xmmword_254371AB0;
  *(_OWORD *)(v1 + 16) = xmmword_254371AC0;
  *(unsigned char *)(v1 + 32) = 0;
  uint64_t v2 = MEMORY[0x263F8EE80];
  uint64_t v3 = MEMORY[0x263F8EE88];
  *(void *)(v1 + 40) = MEMORY[0x263F8EE80];
  *(void *)(v1 + 48) = v3;
  uint64_t v4 = (void *)sub_25425269C((uint64_t)&unk_2703B1F48);
  swift_retain();
  swift_release();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_254251B00(0xC000000000000000, 0, 0x4000000000000000, 0, 1, isUniquelyReferenced_nonNull_native);
  v4[5] = v17;
  swift_bridgeObjectRelease();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_254251B00(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v6);
  v4[5] = v18;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 112) = v4;
  v4[8] = 0xBFF0000000000000;
  v4[7] = *(void *)(v0 + 104);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 56) = xmmword_254371AB0;
  *(_OWORD *)(v7 + 16) = xmmword_254371AC0;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = v2;
  *(void *)(v7 + 48) = v3;
  uint64_t v8 = sub_25425269C((uint64_t)&unk_2703B1F70);
  swift_retain();
  swift_release();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *(void *)(v8 + 40);
  *(void *)(v8 + 40) = 0x8000000000000000;
  sub_254251B00(0xC000000000000000, 0, 0x4000000000000000, 0, 1, v9);
  *(void *)(v8 + 40) = v19;
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *(void *)(v8 + 40);
  *(void *)(v8 + 40) = 0x8000000000000000;
  sub_254251B00(0xBFF7BC89CF95B8D0, 0, 0x3FF7BC89CF95B8D0, 0, 0, v10);
  *(void *)(v8 + 40) = v20;
  swift_bridgeObjectRelease();
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(v8 + 40);
  *(void *)(v8 + 40) = 0x8000000000000000;
  sub_254251B00(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v11);
  *(void *)(v8 + 40) = v21;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 120) = v8;
  *(_OWORD *)(v8 + 56) = xmmword_254371AD0;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 56) = xmmword_254371AB0;
  *(_OWORD *)(v12 + 16) = xmmword_254371AC0;
  *(unsigned char *)(v12 + 32) = 0;
  *(void *)(v12 + 48) = v3;
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 40) = 0x8000000000000000;
  sub_254251B00(0x3FB999999999999ALL, 0, 0x4024000000000000, 0, 0, v13);
  swift_bridgeObjectRelease();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 40) = 0x8000000000000000;
  sub_254251B00(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 1, v14);
  swift_bridgeObjectRelease();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 40) = 0x8000000000000000;
  sub_254251B00(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v15);
  *(void *)(v12 + 40) = v2;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = v12;
  *(_OWORD *)(v12 + 56) = xmmword_254371AD0;
  *(unsigned char *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0x4014000000000000;
  *(void *)(v0 + 152) = 5;
  *(_OWORD *)(v0 + 160) = xmmword_254371AE0;
  return v0;
}

uint64_t DKTrackerConfiguration.__allocating_init(configuration:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_2542A88E8(a1);
  swift_release();
  return v2;
}

uint64_t DKTrackerConfiguration.init(configuration:)(uint64_t a1)
{
  uint64_t v1 = sub_2542A88E8(a1);
  swift_release();
  return v1;
}

uint64_t DKTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DKTrackerBase.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5A24(&qword_269DDA9F0, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542A5700()
{
  return *(void *)(v0 + qword_269DDA9F8);
}

uint64_t sub_2542A5710(uint64_t result)
{
  *(void *)(v1 + qword_269DDA9F8) = result;
  return result;
}

uint64_t (*sub_2542A5720())()
{
  return nullsub_1;
}

double sub_2542A5748@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + qword_269DDAA00 + 8);
  *(void *)a1 = *(void *)(v1 + qword_269DDAA00);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542A5768(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + qword_269DDAA00;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542A5788())()
{
  return nullsub_1;
}

uint64_t sub_2542A57B0()
{
  return *(void *)(v0 + qword_269DDAA08);
}

uint64_t sub_2542A57C0(uint64_t result)
{
  *(void *)(v1 + qword_269DDAA08) = result;
  return result;
}

uint64_t (*sub_2542A57D0())()
{
  return nullsub_1;
}

uint64_t sub_2542A57F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5A24(&qword_269DDAA10, MEMORY[0x263F90268], a1);
}

uint64_t sub_2542A5818(uint64_t a1)
{
  return sub_2542A5AB8(a1, &qword_269DDAA10, MEMORY[0x263F90268]);
}

uint64_t (*sub_2542A5838())()
{
  return nullsub_1;
}

uint64_t sub_2542A5860()
{
  sub_2542A89C8();
  return swift_retain();
}

uint64_t sub_2542A5888(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAA18) = a1;
  return swift_release();
}

uint64_t (*sub_2542A58A0())()
{
  return nullsub_1;
}

uint64_t sub_2542A58C8()
{
  sub_2542A89D8();
  return swift_retain();
}

uint64_t sub_2542A58F0(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAA20) = a1;
  return swift_release();
}

uint64_t (*sub_2542A5908())()
{
  return nullsub_1;
}

uint64_t sub_2542A5930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x270FA5388]();
  char v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_2542A5A04@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5A24(&qword_269DDAA28, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542A5A24@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2542A5A98(uint64_t a1)
{
  return sub_2542A5AB8(a1, &qword_269DDAA28, MEMORY[0x263F07490]);
}

uint64_t sub_2542A5AB8(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3 + *a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  return v7(v5, a1, v6);
}

uint64_t (*sub_2542A5B2C())()
{
  return nullsub_1;
}

uint64_t sub_2542A5B54()
{
  return *(unsigned __int8 *)(v0 + qword_269DDAA30);
}

uint64_t sub_2542A5B64(uint64_t result)
{
  *(unsigned char *)(v1 + qword_269DDAA30) = result;
  return result;
}

uint64_t (*sub_2542A5B74())()
{
  return nullsub_1;
}

uint64_t sub_2542A5B9C()
{
  sub_2542A89E8();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542A5BC4(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAA38) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542A5BDC())()
{
  return nullsub_1;
}

uint64_t sub_2542A5C04(uint64_t a1)
{
  uint64_t v2 = sub_25436D130();
  double v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_2542A5D74((uint64_t)v5);
}

uint64_t sub_2542A5CD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 200);
  uint64_t v4 = sub_25436D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_2542A5D74(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 200);
  uint64_t v4 = sub_25436D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*sub_2542A5E14())()
{
  return nullsub_1;
}

uint64_t sub_2542A5E48()
{
  sub_2542A89F8();
  return swift_retain();
}

uint64_t sub_2542A5E70(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 208)) = a1;
  return swift_release();
}

uint64_t (*sub_2542A5E94())()
{
  return nullsub_1;
}

uint64_t sub_2542A5EC8()
{
  sub_2542A7C2C();
  return swift_retain();
}

uint64_t sub_2542A5EF0(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 216)) = a1;
  return swift_release();
}

uint64_t (*sub_2542A5F14())()
{
  return nullsub_1;
}

uint64_t sub_2542A5F48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254250968(a1, (uint64_t)v4);
  return sub_2542A5FF4((uint64_t)v4);
}

uint64_t sub_2542A5FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_254250968(v1 + *(void *)(*(void *)v1 + 224), a1);
}

uint64_t sub_2542A5FF4(uint64_t a1)
{
  return sub_25428C90C(a1, v1 + *(void *)(*(void *)v1 + 224));
}

uint64_t (*sub_2542A6010())()
{
  return nullsub_1;
}

uint64_t sub_2542A6044(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542A8A14(a1, (uint64_t)v4);
  return sub_2542A60F4((uint64_t)v4);
}

uint64_t sub_2542A60D4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A8A14(v1 + *(void *)(*(void *)v1 + 232), a1);
}

uint64_t sub_2542A60F4(uint64_t a1)
{
  return sub_254286154(a1, v1 + *(void *)(*(void *)v1 + 232), &qword_269DD8040);
}

uint64_t sub_2542A612C()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 240));
}

uint64_t sub_2542A6148(uint64_t result)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 240)) = result;
  return result;
}

uint64_t (*sub_2542A6164())()
{
  return nullsub_1;
}

uint64_t DKTrackerBase.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  DKTrackerBase.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

char *DKTrackerBase.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v37 = a6;
  uint64_t v38 = a5;
  uint64_t v40 = a1;
  uint64_t v11 = *(void *)v6;
  uint64_t v12 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_25436C7B0();
  uint64_t v15 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v6[qword_269DDAA00];
  *(void *)uint64_t v18 = -1;
  *((void *)v18 + 1) = 0;
  *(void *)&v6[qword_269DDAA08] = -1;
  sub_25436C9E0();
  uint64_t v19 = qword_269DDAA18;
  type metadata accessor for DKBoundingBoxFilter();
  swift_allocObject();
  *(void *)&v6[v19] = DKBoundingBoxFilter.init(alpha:)(0.9);
  sub_25436C6E0();
  v6[qword_269DDAA30] = 0;
  uint64_t v20 = qword_269DDAA38;
  uint64_t v21 = *(void *)(v11 + 80);
  sub_25436D130();
  *(void *)&v7[v20] = sub_25436CA90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(&v7[*(void *)(*(void *)v7 + 200)], 1, 1, v21);
  *(void *)&v7[*(void *)(*(void *)v7 + 216)] = 0;
  int64_t v22 = &v7[*(void *)(*(void *)v7 + 232)];
  uint64_t v23 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v7[*(void *)(*(void *)v7 + 240)] = 0;
  *(void *)&v7[qword_269DDAA20] = a2;
  *(void *)&v7[qword_269DDA9F8] = a4;
  double v24 = &v7[qword_269DDA9F0];
  uint64_t v25 = sub_25436C800();
  uint64_t v26 = *(void *)(v25 - 8);
  double v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v39 = a3;
  uint64_t v28 = a3;
  uint64_t v29 = v37;
  v27(v24, v28, v25);
  *(void *)&v7[qword_269DDAA08] = v38;
  uint64_t v30 = sub_254250968(v29, (uint64_t)&v7[*(void *)(*(void *)v7 + 224)]);
  double v31 = (*(double (**)(uint64_t))(*a2 + 240))(v30);
  double v32 = (*(double (**)(void))(*a2 + 264))();
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD8770);
  swift_allocObject();
  swift_retain();
  *(void *)&v7[*(void *)(*(void *)v7 + 208)] = sub_2542A7C48(MEMORY[0x263F8EE78], v31, v32);
  if ((*(uint64_t (**)(void))(*a2 + 600))())
  {
    uint64_t v33 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v40, v41);
    sub_254250968(v29, (uint64_t)v14);
    type metadata accessor for DKSphericalMotionFilter(0);
    swift_allocObject();
    uint64_t v34 = sub_254320A24((uint64_t)v17, a2, (uint64_t)v14);
    swift_release();
    sub_254250354(v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v39, v25);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v33, v41);
    *(void *)&v7[*(void *)(*(void *)v7 + 216)] = v34;
    swift_release();
  }
  else
  {
    swift_release();
    sub_254250354(v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v39, v25);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v40, v41);
  }
  return v7;
}

BOOL sub_2542A6794()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 240));
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + qword_269DDAA28, v1, v3);
  sub_25436C700();
  double v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v10 = **(void **)(v0 + qword_269DDAA20);
  if (v6 == 1) {
    (*(void (**)(uint64_t))(v10 + 384))(v9);
  }
  else {
    double v11 = (*(double (**)(uint64_t))(v10 + 360))(v9);
  }
  return v11 < v8;
}

BOOL sub_2542A691C()
{
  uint64_t v1 = sub_25436D130();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x25A275560](v2, v1);
  uint64_t v4 = swift_bridgeObjectRelease();
  return v3 >= (*(uint64_t (**)(uint64_t))(**(void **)(v0 + qword_269DDAA20) + 432))(v4);
}

uint64_t sub_2542A69D4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 88) - 8)
                                                              + 56))(a1, 1, 1);
}

uint64_t sub_2542A6A1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542A6A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25436D130();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v18 - v8, a2, v5, v7);
  sub_25436CEA0();
  sub_25436CE80();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x25A275560](v10, v5);
  uint64_t v12 = swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(v3 + qword_269DDAA20) + 408))(v12);
  if (result < v11)
  {
    char v14 = (void (**)(char *, uint64_t))(v6 + 8);
    do
    {
      swift_getWitnessTable();
      sub_25436CFD0();
      (*v14)(v9, v5);
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x25A275560](v15, v5);
      uint64_t v17 = swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(v3 + qword_269DDAA20) + 408))(v17);
    }
    while (result < v16);
  }
  return result;
}

uint64_t sub_2542A6C70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[2];
  swift_retain();
  if (v4) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = &unk_2703B2820;
  }
  sub_254277360((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2542A49DC();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    uint64_t v13 = (void *)(v2 + qword_269DDAA00);
    *uint64_t v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_2542A6D40(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254250968(a1, (uint64_t)v5);
  uint64_t result = sub_25428C90C((uint64_t)v5, v1 + *(void *)(*(void *)v1 + 224));
  uint64_t v7 = *(void *)(v1 + *(void *)(*(void *)v1 + 216));
  if (v7)
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
    swift_retain();
    sub_254250354(v8);
    sub_254250968(a1, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_2542A6E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v101 = a1;
  uint64_t v99 = (char *)*v2;
  uint64_t v5 = v99;
  uint64_t v6 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v9 - 8);
  char v100 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25436C7B0();
  uint64_t v102 = *(void *)(v11 - 8);
  uint64_t v103 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v98 = (char *)&v85 - v15;
  uint64_t v16 = *((void *)v5 + 10);
  uint64_t v17 = sub_25436D130();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v85 - v22;
  double v25 = MEMORY[0x270FA5388](v24);
  double v27 = (char *)&v85 - v26;
  uint64_t v28 = a2;
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v23, v28, v17, v25);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v30 + 6))(v23, 1, v16) == 1)
  {
    double v31 = *(void (**)(char *, uint64_t))(v18 + 8);
    v31(v23, v17);
    *((unsigned char *)v3 + qword_269DDAA30) = 0;
    uint64_t v32 = (*((uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v30 + 7))(v20, 1, 1, v16);
    sub_2542A6A2C(v32, (uint64_t)v20);
    return ((uint64_t (*)(char *, uint64_t))v31)(v20, v17);
  }
  else
  {
    unint64_t v90 = v13;
    uint64_t v91 = (unsigned __int8 *)v8;
    uint64_t v96 = v18;
    uint64_t v97 = v17;
    (*((void (**)(char *, char *, uint64_t))v30 + 4))(v27, v23, v16);
    *((unsigned char *)v3 + qword_269DDAA30) = 1;
    uint64_t v34 = v16;
    uint64_t v35 = *((void *)v99 + 13);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 64);
    swift_retain();
    CGRect v88 = v36;
    uint64_t v89 = v35 + 64;
    CGFloat v37 = ((double (*)(uint64_t, uint64_t))v36)(v34, v35);
    sub_25435CC98(v37, v38, v39, v40);
    swift_release();
    uint64_t v41 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 88))(v34, v35);
    sub_2542A6C70(v41);
    swift_bridgeObjectRelease();
    uint64_t v42 = v102;
    unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
    uint64_t v44 = v98;
    uint64_t v45 = v103;
    uint64_t v87 = v102 + 16;
    uint64_t v86 = v43;
    v43(v98, v101, v103);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))((uint64_t)v3 + qword_269DDAA28, v44, v45);
    unint64_t v46 = (void (*)(char *, char *, uint64_t))*((void *)v30 + 2);
    uint64_t v98 = v30 + 16;
    uint64_t v95 = v46;
    v46(v20, v27, v34);
    unint64_t v47 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))*((void *)v30 + 7);
    uint64_t v92 = v34;
    uint64_t v93 = v47;
    uint64_t v94 = v30 + 56;
    v47((uint64_t)v20, 0, 1, v34);
    unsigned long long v48 = (char *)v3 + *(void *)(*v3 + 200);
    uint64_t v49 = sub_25436D130();
    unsigned long long v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40);
    uint64_t v99 = v20;
    v50(v48, v20, v49);
    uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 136))(v34, v35);
    LOBYTE(v44) = v52;
    unsigned long long v53 = (char *)v3 + qword_269DDA9F0;
    uint64_t v54 = type metadata accessor for DKPersonGroupFilter.Track(0);
    float v55 = v100;
    uint64_t v56 = &v100[*(int *)(v54 + 20)];
    uint64_t v57 = sub_25436C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v53, v57);
    uint64_t v58 = *(void *)((char *)v3 + qword_269DDAA00);
    *(void *)float v55 = v51;
    v55[8] = v44 & 1;
    *(void *)&v55[*(int *)(v54 + 24)] = v58;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v55, 0, 1, v54);
    uint64_t v59 = (uint64_t)v55;
    uint64_t v60 = v92;
    sub_254286154(v59, (uint64_t)v3 + *(void *)(*v3 + 232), &qword_269DD8040);
    uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 112))(v60, v35);
    if (v62) {
      uint64_t v63 = -1;
    }
    else {
      uint64_t v63 = v61;
    }
    *(void *)((char *)v3 + qword_269DDAA08) = v63;
    uint64_t v64 = *(void *)((char *)v3 + *(void *)(*v3 + 216));
    uint64_t v65 = v27;
    if (v64)
    {
      char v100 = v30;
      uint64_t v66 = v90;
      uint64_t v67 = v64;
      uint64_t v68 = v103;
      v86(v90, v101, v103);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      uint64_t v69 = swift_allocObject();
      uint64_t v70 = v69 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      *(_OWORD *)uint64_t v70 = 0u;
      *(_OWORD *)(v70 + 16) = 0u;
      *(unsigned char *)(v70 + 32) = 1;
      unint64_t v71 = v65;
      uint64_t v72 = v69 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v69 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v66, v68);
      unsigned int v73 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 160);
      uint64_t v101 = v67;
      swift_retain();
      *(void *)uint64_t v72 = v73(v60, v35);
      *(unsigned char *)(v72 + 8) = v74 & 1;
      uint64_t v65 = v71;
      long long v75 = v91;
      sub_254250968((uint64_t)v3 + *(void *)(*v3 + 224), (uint64_t)v91);
      LODWORD(v73) = *v75;
      sub_254250354((uint64_t)v75);
      v88(v60, v35);
      uint64_t v80 = v77;
      uint64_t v81 = v78;
      uint64_t v82 = v79;
      if (v73 == 1) {
        double v76 = 1.0 - v76 - CGRectGetWidth(*(CGRect *)&v76);
      }
      *(double *)uint64_t v70 = v76;
      *(void *)(v70 + 8) = v80;
      *(void *)(v70 + 16) = v81;
      *(void *)(v70 + 24) = v82;
      *(unsigned char *)(v70 + 32) = 0;
      sub_25431F7D8(v69);
      swift_setDeallocating();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v69 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v103);
      swift_deallocClassInstance();
      swift_release();
      uint64_t v30 = v100;
    }
    uint64_t v83 = (uint64_t)v99;
    v95(v99, v65, v60);
    uint64_t v84 = v93(v83, 0, 1, v60);
    sub_2542A6A2C(v84, v83);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v83, v97);
    return (*((uint64_t (**)(char *, uint64_t))v30 + 1))(v65, v60);
  }
}

uint64_t sub_2542A7758@<X0>(uint64_t a1@<X8>)
{
  if ((*(uint64_t (**)(void))(*(void *)v1 + 624))())
  {
    uint64_t v3 = v1 + *(void *)(*(void *)v1 + 232);
    return sub_2542A8A14(v3, a1);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DKPersonGroupFilter.Track(0);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a1, 1, 1, v5);
  }
}

uint64_t DKTrackerBase.deinit()
{
  uint64_t v1 = v0 + qword_269DDA9F0;
  uint64_t v2 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_269DDAA10;
  uint64_t v4 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + qword_269DDAA28;
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 200);
  uint64_t v8 = sub_25436D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  sub_254250354(v0 + *(void *)(*(void *)v0 + 224));
  sub_2542A8A7C(v0 + *(void *)(*(void *)v0 + 232));
  return v0;
}

uint64_t DKTrackerBase.__deallocating_deinit()
{
  DKTrackerBase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2542A7A80@<X0>(uint64_t a1@<X8>)
{
  return DKTrackerBase.uuid.getter(a1);
}

uint64_t sub_2542A7AA4()
{
  return sub_2542A5700();
}

uint64_t sub_2542A7AC8(uint64_t a1)
{
  return sub_2542A5710(a1);
}

void (*sub_2542A7AEC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2542A5720();
  return sub_2542A7B48;
}

void sub_2542A7B48(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

BOOL sub_2542A7B90()
{
  return sub_2542A6794();
}

uint64_t sub_2542A7BB8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 624))() & 1;
}

uint64_t sub_2542A7C08(uint64_t a1)
{
  return sub_2542A6D40(a1);
}

uint64_t sub_2542A7C2C()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 216));
}

uint64_t sub_2542A7C48(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 16) = sub_2542691F8(MEMORY[0x263F8EE78]);
  *(void *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return v4;
  }
  double v11 = 1.0 / (double)v10;
  uint64_t v12 = (uint64_t *)(a1 + 32);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v41 = v13 + 56;
  uint64_t v42 = v14;
  long long v40 = xmmword_25436FDF0;
  while (1)
  {
    uint64_t v17 = *v12++;
    uint64_t v16 = v17;
    uint64_t v18 = v43;
    uint64_t v19 = (uint64_t)v44;
    uint64_t v20 = v42;
    v42((uint64_t)v44, 1, 1, v43);
    type metadata accessor for DKSmoothingFilter();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 48) = v40;
    uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v20(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v18);
    uint64_t v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v21 + 16) = a2;
    *(double *)(v21 + 24) = a3;
    *(_WORD *)(v21 + 32) = 256;
    *(double *)(v21 + 40) = v11;
    sub_254286154(v19, v22, &qword_269DD7A40);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void **)(v4 + 16);
    uint64_t v26 = v45;
    *(void *)(v4 + 16) = 0x8000000000000000;
    unint64_t v28 = sub_254351604(v17);
    uint64_t v29 = v26[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v26[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_25429BA54();
      }
    }
    else
    {
      sub_25429801C(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_254351604(v16);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_17;
      }
      unint64_t v28 = v33;
    }
    uint64_t v35 = v45;
    if (v32)
    {
      uint64_t v15 = v45[7];
      swift_release();
      *(void *)(v15 + 8 * v28) = v21;
    }
    else
    {
      v45[(v28 >> 6) + 8] |= 1 << v28;
      *(void *)(v35[6] + 8 * v28) = v16;
      *(void *)(v35[7] + 8 * v28) = v21;
      uint64_t v36 = v35[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      if (v37) {
        goto LABEL_16;
      }
      v35[2] = v38;
    }
    *(void *)(v4 + 16) = v35;
    swift_bridgeObjectRelease();
    if (!--v10) {
      return v4;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542A7F64(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 16) = sub_254269318(MEMORY[0x263F8EE78]);
  *(void *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return v4;
  }
  double v11 = 1.0 / (double)v10;
  uint64_t v12 = (unsigned __int8 *)(a1 + 32);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v41 = v13 + 56;
  uint64_t v42 = v14;
  long long v40 = xmmword_25436FDF0;
  while (1)
  {
    unsigned int v17 = *v12++;
    uint64_t v16 = v17;
    uint64_t v18 = v43;
    uint64_t v19 = (uint64_t)v44;
    uint64_t v20 = v42;
    v42((uint64_t)v44, 1, 1, v43);
    type metadata accessor for DKSmoothingFilter();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 48) = v40;
    uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v20(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v18);
    uint64_t v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v21 + 16) = a2;
    *(double *)(v21 + 24) = a3;
    *(_WORD *)(v21 + 32) = 256;
    *(double *)(v21 + 40) = v11;
    sub_254286154(v19, v22, &qword_269DD7A40);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void **)(v4 + 16);
    uint64_t v26 = v45;
    *(void *)(v4 + 16) = 0x8000000000000000;
    unint64_t v28 = sub_2543517E0(v17);
    uint64_t v29 = v26[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v26[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v35 = v45;
        if (v27) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25429BBF8();
        uint64_t v35 = v45;
        if (v32) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2542982D4(v31, isUniquelyReferenced_nonNull_native);
      uint64_t v33 = sub_2543517E0(v16);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_19;
      }
      unint64_t v28 = v33;
      uint64_t v35 = v45;
      if (v32)
      {
LABEL_3:
        uint64_t v15 = v35[7];
        swift_release();
        *(void *)(v15 + 8 * v28) = v21;
        goto LABEL_4;
      }
    }
    v35[(v28 >> 6) + 8] |= 1 << v28;
    *(unsigned char *)(v35[6] + v28) = v16;
    *(void *)(v35[7] + 8 * v28) = v21;
    uint64_t v36 = v35[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_18;
    }
    v35[2] = v38;
LABEL_4:
    *(void *)(v4 + 16) = v35;
    swift_bridgeObjectRelease();
    if (!--v10) {
      return v4;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542A8290(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 16) = sub_254269358(MEMORY[0x263F8EE78]);
  *(void *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return v4;
  }
  double v11 = 1.0 / (double)v10;
  uint64_t v12 = (unsigned __int8 *)(a1 + 32);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v41 = v13 + 56;
  uint64_t v42 = v14;
  long long v40 = xmmword_25436FDF0;
  while (1)
  {
    unsigned int v17 = *v12++;
    uint64_t v16 = v17;
    uint64_t v18 = v43;
    uint64_t v19 = (uint64_t)v44;
    uint64_t v20 = v42;
    v42((uint64_t)v44, 1, 1, v43);
    type metadata accessor for DKSmoothingFilter();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 48) = v40;
    uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v20(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v18);
    uint64_t v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v21 + 16) = a2;
    *(double *)(v21 + 24) = a3;
    *(_WORD *)(v21 + 32) = 256;
    *(double *)(v21 + 40) = v11;
    sub_254286154(v19, v22, &qword_269DD7A40);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void **)(v4 + 16);
    uint64_t v26 = v45;
    *(void *)(v4 + 16) = 0x8000000000000000;
    unint64_t v28 = sub_2543517E0(v17);
    uint64_t v29 = v26[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v26[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v35 = v45;
        if (v27) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25429C414();
        uint64_t v35 = v45;
        if (v32) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_254298E40(v31, isUniquelyReferenced_nonNull_native);
      uint64_t v33 = sub_2543517E0(v16);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_19;
      }
      unint64_t v28 = v33;
      uint64_t v35 = v45;
      if (v32)
      {
LABEL_3:
        uint64_t v15 = v35[7];
        swift_release();
        *(void *)(v15 + 8 * v28) = v21;
        goto LABEL_4;
      }
    }
    v35[(v28 >> 6) + 8] |= 1 << v28;
    *(unsigned char *)(v35[6] + v28) = v16;
    *(void *)(v35[7] + 8 * v28) = v21;
    uint64_t v36 = v35[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_18;
    }
    v35[2] = v38;
LABEL_4:
    *(void *)(v4 + 16) = v35;
    swift_bridgeObjectRelease();
    if (!--v10) {
      return v4;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542A85BC(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 16) = sub_254269338(MEMORY[0x263F8EE78]);
  *(void *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return v4;
  }
  double v11 = 1.0 / (double)v10;
  uint64_t v12 = (unsigned __int8 *)(a1 + 32);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v41 = v13 + 56;
  uint64_t v42 = v14;
  long long v40 = xmmword_25436FDF0;
  while (1)
  {
    unsigned int v17 = *v12++;
    uint64_t v16 = v17;
    uint64_t v18 = v43;
    uint64_t v19 = (uint64_t)v44;
    uint64_t v20 = v42;
    v42((uint64_t)v44, 1, 1, v43);
    type metadata accessor for DKSmoothingFilter();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 48) = v40;
    uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v20(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v18);
    uint64_t v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v21 + 16) = a2;
    *(double *)(v21 + 24) = a3;
    *(_WORD *)(v21 + 32) = 256;
    *(double *)(v21 + 40) = v11;
    sub_254286154(v19, v22, &qword_269DD7A40);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    *(void *)uint64_t v24 = 0;
    *(unsigned char *)(v24 + 8) = 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void **)(v4 + 16);
    uint64_t v26 = v45;
    *(void *)(v4 + 16) = 0x8000000000000000;
    unint64_t v28 = sub_2543517E0(v17);
    uint64_t v29 = v26[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v26[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v35 = v45;
        if (v27) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_25429C408();
        uint64_t v35 = v45;
        if (v32) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_254298E34(v31, isUniquelyReferenced_nonNull_native);
      uint64_t v33 = sub_2543517E0(v16);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_19;
      }
      unint64_t v28 = v33;
      uint64_t v35 = v45;
      if (v32)
      {
LABEL_3:
        uint64_t v15 = v35[7];
        swift_release();
        *(void *)(v15 + 8 * v28) = v21;
        goto LABEL_4;
      }
    }
    v35[(v28 >> 6) + 8] |= 1 << v28;
    *(unsigned char *)(v35[6] + v28) = v16;
    *(void *)(v35[7] + 8 * v28) = v21;
    uint64_t v36 = v35[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_18;
    }
    v35[2] = v38;
LABEL_4:
    *(void *)(v4 + 16) = v35;
    swift_bridgeObjectRelease();
    if (!--v10) {
      return v4;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542A88E8(uint64_t a1)
{
  *(void *)(v1 + 16) = *(void *)(a1 + 16);
  *(void *)(v1 + 24) = *(void *)(a1 + 24);
  *(void *)(v1 + 32) = *(void *)(a1 + 32);
  *(void *)(v1 + 40) = *(void *)(a1 + 40);
  *(void *)(v1 + 48) = *(void *)(a1 + 48);
  *(void *)(v1 + 56) = *(void *)(a1 + 56);
  *(void *)(v1 + 64) = *(void *)(a1 + 64);
  *(void *)(v1 + 72) = *(void *)(a1 + 72);
  *(void *)(v1 + 80) = *(void *)(a1 + 80);
  *(void *)(v1 + 88) = *(void *)(a1 + 88);
  *(void *)(v1 + 96) = *(void *)(a1 + 96);
  *(void *)(v1 + 104) = *(void *)(a1 + 104);
  *(void *)(v1 + 112) = *(void *)(a1 + 112);
  *(void *)(v1 + 120) = *(void *)(a1 + 120);
  *(void *)(v1 + 128) = *(void *)(a1 + 128);
  *(unsigned char *)(v1 + 136) = *(unsigned char *)(a1 + 136);
  *(void *)(v1 + 144) = *(void *)(a1 + 144);
  *(void *)(v1 + 152) = *(void *)(a1 + 152);
  *(void *)(v1 + 160) = *(void *)(a1 + 160);
  *(void *)(v1 + 168) = *(void *)(a1 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_2542A89C8()
{
  return *(void *)(v0 + qword_269DDAA18);
}

uint64_t sub_2542A89D8()
{
  return *(void *)(v0 + qword_269DDAA20);
}

uint64_t sub_2542A89E8()
{
  return *(void *)(v0 + qword_269DDAA38);
}

uint64_t sub_2542A89F8()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 208));
}

uint64_t sub_2542A8A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542A8A7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_2542A8ADC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2542A8AEC(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 16) = *a1;
  return result;
}

double sub_2542A8AFC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_2542A8B0C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 24) = *a1;
  return result;
}

double sub_2542A8B1C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 32);
  *a2 = result;
  return result;
}

double sub_2542A8B2C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 32) = *a1;
  return result;
}

double sub_2542A8B3C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 40);
  *a2 = result;
  return result;
}

double sub_2542A8B4C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 40) = *a1;
  return result;
}

double sub_2542A8B5C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 48);
  *a2 = result;
  return result;
}

double sub_2542A8B6C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 48) = *a1;
  return result;
}

double sub_2542A8B7C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2542A8B8C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 56) = *a1;
  return result;
}

double sub_2542A8B9C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 64);
  *a2 = result;
  return result;
}

double sub_2542A8BAC(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 64) = *a1;
  return result;
}

uint64_t sub_2542A8BBC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 72);
  return result;
}

void *sub_2542A8BCC(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 72) = *result;
  return result;
}

uint64_t sub_2542A8BDC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 80);
  return result;
}

void *sub_2542A8BEC(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 80) = *result;
  return result;
}

double sub_2542A8BFC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 88);
  *a2 = result;
  return result;
}

double sub_2542A8C0C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 88) = *a1;
  return result;
}

double sub_2542A8C1C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 96);
  *a2 = result;
  return result;
}

double sub_2542A8C2C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 96) = *a1;
  return result;
}

double sub_2542A8C3C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 104);
  *a2 = result;
  return result;
}

double sub_2542A8C4C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 104) = *a1;
  return result;
}

uint64_t sub_2542A8C5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 112);
  return swift_retain();
}

uint64_t sub_2542A8C6C(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 112) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2542A8CB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 120);
  return swift_retain();
}

uint64_t sub_2542A8CC0(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 120) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2542A8D04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 128);
  return swift_retain();
}

uint64_t sub_2542A8D14(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 128) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2542A8D58@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 136);
  return result;
}

unsigned char *sub_2542A8D68(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 136) = *result;
  return result;
}

double sub_2542A8D78@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 144);
  *a2 = result;
  return result;
}

double sub_2542A8D88(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 144) = *a1;
  return result;
}

uint64_t sub_2542A8D98@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 152);
  return result;
}

void *sub_2542A8DA8(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 152) = *result;
  return result;
}

double sub_2542A8DB8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 160);
  *a2 = result;
  return result;
}

double sub_2542A8DC8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 160) = *a1;
  return result;
}

double sub_2542A8DD8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 168);
  *a2 = result;
  return result;
}

double sub_2542A8DE8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 168) = *a1;
  return result;
}

uint64_t sub_2542A8DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2542A5700();
  *a1 = result;
  return result;
}

uint64_t sub_2542A8E24(uint64_t *a1)
{
  return sub_2542A5710(*a1);
}

uint64_t sub_2542A8E4C()
{
  return 40;
}

__n128 sub_2542A8E58(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

double sub_2542A8E6C@<D0>(uint64_t a1@<X8>)
{
  sub_2542A5748((uint64_t)v3);
  double result = *(double *)&v3[1];
  *(void *)a1 = v3[0];
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542A8EB0(void *a1)
{
  uint64_t v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  return sub_2542A5768((uint64_t)v3);
}

uint64_t sub_2542A8EF0()
{
  return 40;
}

__n128 sub_2542A8EFC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A8F10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2542A57B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542A8F3C(uint64_t *a1)
{
  return sub_2542A57C0(*a1);
}

uint64_t sub_2542A8F64()
{
  return 40;
}

__n128 sub_2542A8F70(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A8F84@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A57F8(a1);
}

uint64_t sub_2542A8FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2542A5930(a1, a2, a3, a4, MEMORY[0x263F90268], (uint64_t (*)(char *))sub_2542A5818);
}

uint64_t sub_2542A8FE8()
{
  return 40;
}

__n128 sub_2542A8FF4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9008@<X0>(void *a1@<X8>)
{
  return keypath_get_73Tm(sub_2542A89C8, a1);
}

uint64_t sub_2542A9020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_74Tm(a1, a2, a3, a4, sub_2542A5888);
}

uint64_t sub_2542A9038()
{
  return 40;
}

__n128 sub_2542A9044(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9058@<X0>(void *a1@<X8>)
{
  return keypath_get_73Tm(sub_2542A89D8, a1);
}

uint64_t sub_2542A9070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_74Tm(a1, a2, a3, a4, sub_2542A58F0);
}

uint64_t sub_2542A9088()
{
  return 40;
}

__n128 sub_2542A9094(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A90A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5A04(a1);
}

uint64_t sub_2542A90CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2542A5930(a1, a2, a3, a4, MEMORY[0x263F07490], (uint64_t (*)(char *))sub_2542A5A98);
}

uint64_t sub_2542A910C()
{
  return 40;
}

__n128 sub_2542A9118(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A912C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542A5B54();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2542A915C(unsigned __int8 *a1)
{
  return sub_2542A5B64(*a1);
}

uint64_t sub_2542A9184()
{
  return 40;
}

__n128 sub_2542A9190(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A91A4@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2542A89E8();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542A91E0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_2542A5BC4(v0);
}

uint64_t sub_2542A920C()
{
  return 40;
}

__n128 sub_2542A9218(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A922C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5CD4(a1);
}

uint64_t sub_2542A9254()
{
  return 40;
}

__n128 sub_2542A9260(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9274@<X0>(void *a1@<X8>)
{
  return keypath_get_73Tm(sub_2542A89F8, a1);
}

uint64_t keypath_get_73Tm@<X0>(uint64_t (*a1)(void)@<X3>, void *a2@<X8>)
{
  *a2 = a1();
  return swift_retain();
}

uint64_t sub_2542A92CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_74Tm(a1, a2, a3, a4, sub_2542A5E70);
}

uint64_t keypath_set_74Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = swift_retain();
  return a5(v6);
}

uint64_t sub_2542A9318()
{
  return 40;
}

__n128 sub_2542A9324(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9338@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2542A7C2C();
  return swift_retain();
}

uint64_t sub_2542A9374()
{
  uint64_t v0 = swift_retain();
  return sub_2542A5EF0(v0);
}

uint64_t sub_2542A93A0()
{
  return 40;
}

__n128 sub_2542A93AC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A93C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A5FD4(a1);
}

uint64_t sub_2542A93E8()
{
  return 40;
}

__n128 sub_2542A93F4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9408@<X0>(uint64_t a1@<X8>)
{
  return sub_2542A60D4(a1);
}

uint64_t sub_2542A9430()
{
  return 40;
}

__n128 sub_2542A943C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2542A9450@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542A612C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2542A9480(unsigned __int8 *a1)
{
  return sub_2542A6148(*a1);
}

uint64_t sub_2542A94A8()
{
  return 40;
}

__n128 sub_2542A94B4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for DKTrackerConfiguration()
{
  return self;
}

uint64_t method lookup function for DKTrackerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKTrackerConfiguration);
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxNumberOfTrackers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxNumberOfTrackers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxNumberOfTrackers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 720))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 728))();
}

uint64_t dispatch thunk of DKTracker.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DKTracker.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DKTracker.trackerId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DKTracker.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DKTracker.isExpired(currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DKTracker.isActivated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DKTracker.update(camera:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void sub_2542A9FF8()
{
  sub_25436C800();
  if (v0 <= 0x3F)
  {
    sub_25436C9F0();
    if (v1 <= 0x3F)
    {
      sub_25436C7B0();
      if (v2 <= 0x3F)
      {
        sub_25436D130();
        if (v3 <= 0x3F)
        {
          type metadata accessor for DKCamera();
          if (v4 <= 0x3F)
          {
            sub_2542AABC4();
            if (v5 <= 0x3F) {
              swift_initClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for DKTrackerBase()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DKTrackerBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKTrackerBase);
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKTrackerBase.history.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKTrackerBase.history.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKTrackerBase.history.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of DKTrackerBase.group.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKTrackerBase.group.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKTrackerBase.group.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of DKTrackerBase.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t dispatch thunk of DKTrackerBase.isExpired(currentTime:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of DKTrackerBase.isActivated()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKTrackerBase.getState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of DKTrackerBase.getHistory()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKTrackerBase.updateIdentity(identityConfidences:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKTrackerBase.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKTrackerBase.update(currentTime:observation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKTrackerBase.getLastObservation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKTrackerBase.getGroupTrack()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of DKTrackerBase.setSelected(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

void sub_2542AABC4()
{
  if (!qword_269DD87F8)
  {
    type metadata accessor for DKPersonGroupFilter.Track(255);
    unint64_t v0 = sub_25436D130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DD87F8);
    }
  }
}

uint64_t sub_2542AAC1C()
{
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542AAD44()
{
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542AAE48()
{
  return sub_25436D930();
}

uint64_t sub_2542AAF80()
{
  return sub_25436D930();
}

id DKObservationMetadata.__allocating_init(time:observations:image:standPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v9 = objc_allocWithZone(v4);
  return DKObservationMetadata.init(time:observations:image:standPosition:)(a1, a2, a3, a4);
}

uint64_t DKFaceObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:isFrontal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, char a20)
{
  char v24 = a5 & 1;
  char v27 = a7 & 1;
  uint64_t v25 = swift_allocObject();
  DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:isFrontal:)(a1, a2, a3, a4, v24, a6, v27, a8, a9, a10, a11, a12, a13 & 1, a14, a15 & 1, a16, a17 & 1, a18, a19 & 1,
    a20);
  return v25;
}

uint64_t DKBodyObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  char v23 = a5 & 1;
  char v24 = a7 & 1;
  uint64_t v25 = swift_allocObject();
  DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(a1, a2, a3, a4, v23, a6, v24, a8, a9, a10, a11, a12, a13 & 1);
  return v25;
}

BOOL static DKFaceDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_2542AB2EC()
{
  qword_269DDAA40 = 0x3FD0C152382D7365;
}

void sub_2542AB308()
{
  qword_269DDAA48 = 0x3FE0C152382D7365;
}

unsigned char *sub_2542AB324@<X0>(unsigned char *result@<X0>, char *a2@<X8>, double a3@<D0>)
{
  if (*result == 1)
  {
    if (qword_269DD7678 != -1) {
      __n128 result = (unsigned char *)swift_once();
    }
    if (*(double *)&qword_269DDAA48 >= a3)
    {
      if (-*(double *)&qword_269DDAA48 > a3)
      {
LABEL_10:
        char v5 = 2;
        goto LABEL_18;
      }
      goto LABEL_13;
    }
LABEL_12:
    char v5 = 1;
    goto LABEL_18;
  }
  if (qword_269DD7678 != -1) {
    __n128 result = (unsigned char *)swift_once();
  }
  if (*(double *)&qword_269DDAA48 < a3) {
    goto LABEL_10;
  }
  if (-*(double *)&qword_269DDAA48 > a3) {
    goto LABEL_12;
  }
LABEL_13:
  double v6 = fabs(a3);
  if (qword_269DD7670 != -1) {
    __n128 result = (unsigned char *)swift_once();
  }
  if (v6 >= *(double *)&qword_269DDAA40) {
    char v5 = 0;
  }
  else {
    char v5 = 3;
  }
LABEL_18:
  *a2 = v5;
  return result;
}

uint64_t DKFaceDirection.hash(into:)()
{
  return sub_25436D900();
}

uint64_t sub_2542AB478(uint64_t a1)
{
  unint64_t v2 = sub_2542B6518();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AB4B4(uint64_t a1)
{
  unint64_t v2 = sub_2542B6518();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AB4F0()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1952867692;
      break;
    case 2:
      uint64_t result = 0x7468676972;
      break;
    case 3:
      uint64_t result = 0x6172656D6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542AB570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542BBC94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542AB598(uint64_t a1)
{
  unint64_t v2 = sub_2542B64C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AB5D4(uint64_t a1)
{
  unint64_t v2 = sub_2542B64C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AB610(uint64_t a1)
{
  unint64_t v2 = sub_2542B65C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AB64C(uint64_t a1)
{
  unint64_t v2 = sub_2542B65C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AB688(uint64_t a1)
{
  unint64_t v2 = sub_2542B656C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AB6C4(uint64_t a1)
{
  unint64_t v2 = sub_2542B656C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AB700(uint64_t a1)
{
  unint64_t v2 = sub_2542B6614();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AB73C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6614();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFaceDirection.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8800);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8808);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8810);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  char v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8818);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  double v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8820);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B64C4();
  sub_25436D950();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_2542B65C0();
      unsigned int v17 = v23;
      sub_25436D680();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_2542B656C();
      unsigned int v17 = v26;
      sub_25436D680();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_2542B6518();
      unsigned int v17 = v29;
      sub_25436D680();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_2542B6614();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKFaceDirection.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8850);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned long long v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8858);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8860);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8868);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8870);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unsigned int v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2542B64C4();
  uint64_t v19 = v52;
  sub_25436D940();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  long long v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  char v23 = v17;
  uint64_t v24 = sub_25436D660();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_25436D350();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    void *v29 = &type metadata for DKFaceDirection;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_2542B65C0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_25436D5B0();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_2542B656C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_25436D5B0();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_2542B6518();
      uint64_t v37 = v52;
      sub_25436D5B0();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_2542B6614();
      uint64_t v26 = v52;
      sub_25436D5B0();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_2542AC1F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKFaceDirection.init(from:)(a1, a2);
}

uint64_t sub_2542AC208(void *a1)
{
  return DKFaceDirection.encode(to:)(a1);
}

uint64_t sub_2542AC220()
{
  uint64_t v1 = 0x6E69746567646946;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E696B6C6157;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x616E6F6974617453;
  }
}

uint64_t sub_2542AC284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542BBE30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542AC2AC(uint64_t a1)
{
  unint64_t v2 = sub_2542B6668();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AC2E8(uint64_t a1)
{
  unint64_t v2 = sub_2542B6668();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AC324(uint64_t a1)
{
  unint64_t v2 = sub_2542B6710();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AC360(uint64_t a1)
{
  unint64_t v2 = sub_2542B6710();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AC39C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6764();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AC3D8(uint64_t a1)
{
  unint64_t v2 = sub_2542B6764();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AC414(uint64_t a1)
{
  unint64_t v2 = sub_2542B66BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AC450(uint64_t a1)
{
  unint64_t v2 = sub_2542B66BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKMotionClassification.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8878);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  char v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8880);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8888);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8890);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6668();
  sub_25436D950();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2542B6710();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_2542B66BC();
      unsigned int v17 = v23;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_2542B6764();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKMotionClassification.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88B8);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88C0);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88C8);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88D0);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6668();
  uint64_t v12 = (uint64_t)v39;
  sub_25436D940();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_25436D660();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_25436D350();
    swift_allocError();
    char v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    void *v23 = &type metadata for DKMotionClassification;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2542B6710();
      uint64_t v18 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_2542B66BC();
      uint64_t v25 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_2542B6764();
    uint64_t v24 = v30;
    sub_25436D5B0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_2542ACDAC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKMotionClassification.init(from:)(a1, a2);
}

uint64_t sub_2542ACDC4(void *a1)
{
  return DKMotionClassification.encode(to:)(a1);
}

uint64_t sub_2542ACDDC(uint64_t a1)
{
  unint64_t v2 = sub_2542B68B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542ACE18(uint64_t a1)
{
  unint64_t v2 = sub_2542B68B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542ACE54()
{
  uint64_t result = 1701011782;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2036625218;
      break;
    case 2:
      uint64_t result = 1684955464;
      break;
    case 3:
      uint64_t result = 0x7463656A624FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542ACEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542BBFA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542ACEE8(uint64_t a1)
{
  unint64_t v2 = sub_2542B67B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542ACF24(uint64_t a1)
{
  unint64_t v2 = sub_2542B67B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542ACF60(uint64_t a1)
{
  unint64_t v2 = sub_2542B6908();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542ACF9C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6908();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542ACFD8(uint64_t a1)
{
  unint64_t v2 = sub_2542B6860();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AD014(uint64_t a1)
{
  unint64_t v2 = sub_2542B6860();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542AD050(uint64_t a1)
{
  unint64_t v2 = sub_2542B680C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AD08C(uint64_t a1)
{
  unint64_t v2 = sub_2542B680C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKObservationType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88D8);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88E0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88E8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  char v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88F0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD88F8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B67B8();
  sub_25436D950();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_2542B68B4();
      int v17 = v23;
      sub_25436D680();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_2542B6860();
      int v17 = v26;
      sub_25436D680();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_2542B680C();
      int v17 = v29;
      sub_25436D680();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_2542B6908();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKObservationType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8928);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned long long v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8930);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8938);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8940);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8948);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  int v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2542B67B8();
  uint64_t v19 = v52;
  sub_25436D940();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  char v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  char v23 = v17;
  uint64_t v24 = sub_25436D660();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_25436D350();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    void *v29 = &type metadata for DKObservationType;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_2542B68B4();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_25436D5B0();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_2542B6860();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_25436D5B0();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_2542B680C();
      uint64_t v37 = v52;
      sub_25436D5B0();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_2542B6908();
      uint64_t v26 = v52;
      sub_25436D5B0();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_2542ADB40@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKObservationType.init(from:)(a1, a2);
}

uint64_t sub_2542ADB58(void *a1)
{
  return DKObservationType.encode(to:)(a1);
}

uint64_t DKObservationGroup.groupId.getter()
{
  return *(void *)v0;
}

uint64_t DKObservationGroup.groupId.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*DKObservationGroup.groupId.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.face.getter()
{
  return swift_retain();
}

uint64_t DKObservationGroup.face.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DKObservationGroup.face.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.body.getter()
{
  return swift_retain();
}

uint64_t DKObservationGroup.body.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKObservationGroup.body.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.hands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKObservationGroup.hands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKObservationGroup.hands.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.init(groupId:face:body:hands:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_254278FE0(a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release_n();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = v10;
  return result;
}

uint64_t sub_2542ADD34()
{
  uint64_t result = 0x644970756F7267;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701011814;
      break;
    case 2:
      uint64_t result = 2036625250;
      break;
    case 3:
      uint64_t result = 0x73646E6168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542ADDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542BC124(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542ADDD8(uint64_t a1)
{
  unint64_t v2 = sub_2542B695C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542ADE14(uint64_t a1)
{
  unint64_t v2 = sub_2542B695C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKObservationGroup.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8950);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v8;
  uint64_t v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B695C();
  uint64_t v9 = v4;
  sub_25436D950();
  LOBYTE(v17) = 0;
  sub_25436D700();
  if (!v2)
  {
    uint64_t v11 = v13;
    uint64_t v10 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    type metadata accessor for DKFaceObservation(0);
    sub_2542B69F0(&qword_269DD8130, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    sub_25436D6D0();
    uint64_t v17 = v10;
    char v16 = 2;
    type metadata accessor for DKBodyObservation(0);
    sub_2542B69F0(&qword_269DD8148, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    sub_25436D6D0();
    uint64_t v17 = v11;
    char v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8960);
    sub_2542B6A38();
    sub_25436D710();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v9);
}

uint64_t DKObservationGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8978);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B695C();
  sub_25436D940();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v17) = 0;
    uint64_t v9 = sub_25436D640();
    type metadata accessor for DKFaceObservation(0);
    char v16 = 1;
    sub_2542B69F0(&qword_269DD8238, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    sub_25436D610();
    uint64_t v11 = v17;
    type metadata accessor for DKBodyObservation(0);
    char v16 = 2;
    sub_2542B69F0(&qword_269DD8248, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    swift_retain();
    sub_25436D610();
    uint64_t v15 = a2;
    uint64_t v12 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8960);
    char v16 = 3;
    sub_2542B6B04();
    swift_retain();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v14 = v15;
    *uint64_t v15 = v9;
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_2542AE42C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DKObservationGroup.init(from:)(a1, a2);
}

uint64_t sub_2542AE444(void *a1)
{
  return DKObservationGroup.encode(to:)(a1);
}

uint64_t sub_2542AE45C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542AE47C(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542AE49C())()
{
  return nullsub_1;
}

uint64_t sub_2542AE4C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542AE4E4(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542AE504())()
{
  return nullsub_1;
}

double sub_2542AE52C()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
}

void *sub_2542AE538(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542AE544())()
{
  return nullsub_1;
}

uint64_t sub_2542AE56C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542AE57C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542AE594())()
{
  return nullsub_1;
}

uint64_t sub_2542AE5BC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

uint64_t sub_2542AE5D4(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE5F0())()
{
  return nullsub_1;
}

uint64_t sub_2542AE618()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

uint64_t sub_2542AE630(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE64C())()
{
  return nullsub_1;
}

uint64_t sub_2542AE674()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
}

uint64_t sub_2542AE68C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE6A8())()
{
  return nullsub_1;
}

uint64_t sub_2542AE6D0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
}

uint64_t sub_2542AE6E8(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE704())()
{
  return nullsub_1;
}

uint64_t sub_2542AE72C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
}

uint64_t sub_2542AE744(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE760())()
{
  return nullsub_1;
}

uint64_t sub_2542AE788()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

uint64_t sub_2542AE7A0(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542AE7BC())()
{
  return nullsub_1;
}

uint64_t sub_2542AE7E4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal);
}

uint64_t sub_2542AE7F4(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal) = result;
  return result;
}

uint64_t (*sub_2542AE804())()
{
  return nullsub_1;
}

unint64_t sub_2542AE82C(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 7823737;
      break;
    case 7:
      unint64_t result = 0x6863746970;
      break;
    case 8:
      unint64_t result = 1819045746;
      break;
    case 9:
      unint64_t result = 0x65636E6174736964;
      break;
    case 10:
      unint64_t result = 0x7463656A624F7369;
      break;
    case 11:
      unint64_t result = 0x61746E6F72467369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2542AE980(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 7823737;
      break;
    case 7:
      unint64_t result = 0x6863746970;
      break;
    case 8:
      unint64_t result = 1819045746;
      break;
    case 9:
      unint64_t result = 0x65636E6174736964;
      break;
    case 10:
      unint64_t result = 0x7463656A624F7369;
      break;
    case 11:
      unint64_t result = 0x61746E6F72467369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542AEAD4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_2542AE82C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2542AE82C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2542AEB60()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_2542AE82C(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542AEBC4()
{
  sub_2542AE82C(*v0);
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542AEC18()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_2542AE82C(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542AEC78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC2B8();
  *a1 = result;
  return result;
}

unint64_t sub_2542AECA8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542AE82C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542AECD4()
{
  return sub_2542AE980(*v0);
}

uint64_t sub_2542AECDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC2B8();
  *a1 = result;
  return result;
}

void sub_2542AED04(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_2542AED10(uint64_t a1)
{
  unint64_t v2 = sub_2542B6C44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542AED4C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6C44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:isFrontal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, char a20)
{
  uint64_t v27 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  uint64_t v28 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  uint64_t v29 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  uint64_t v30 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  uint64_t v31 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  uint64_t v32 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  uint64_t v41 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal;
  *(unsigned char *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
  uint64_t v33 = v20 + v32;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
  uint64_t v34 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  uint64_t v35 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  uint64_t v36 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a1, v36);
  uint64_t v37 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  uint64_t v38 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v37, a2, v38);
  uint64_t v39 = (double *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
  *uint64_t v39 = a9;
  v39[1] = a10;
  v39[2] = a11;
  v39[3] = a12;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a3;
  *(void *)uint64_t v27 = a4;
  *(unsigned char *)(v27 + 8) = a5 & 1;
  *(void *)uint64_t v28 = a6;
  *(unsigned char *)(v28 + 8) = a7 & 1;
  *(void *)uint64_t v29 = a8;
  *(unsigned char *)(v29 + 8) = a13 & 1;
  *(void *)uint64_t v30 = a14;
  *(unsigned char *)(v30 + 8) = a15 & 1;
  *(void *)uint64_t v31 = a16;
  *(unsigned char *)(v31 + 8) = a17 & 1;
  *(void *)uint64_t v33 = a18;
  *(unsigned char *)(v33 + 8) = a19 & 1;
  *(unsigned char *)(v20 + v41) = a20;
  return v20;
}

uint64_t DKFaceObservation.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  uint64_t v4 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t DKFaceObservation.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  uint64_t v4 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2542AF204(void *a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8990);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6C44();
  uint64_t v12 = v23;
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2542B69F0(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v13 = v24;
  sub_25436D710();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    char v16 = v20;
    uint64_t v15 = v21;
    uint64_t v17 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2542B69F0(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D710();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v17);
    long long v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    long long v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    long long v26 = v18;
    char v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2542B69F0(&qword_269DD81D8, type metadata accessor for CGRect);
    sub_25436D710();
    *(void *)&long long v25 = *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
    char v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    sub_2542B6C98(&qword_269DD89B0, (void (*)(void))sub_2542B6D08);
    sub_25436D710();
    LOBYTE(v25) = 4;
    sub_25436D6C0();
    LOBYTE(v25) = 5;
    sub_25436D6C0();
    LOBYTE(v25) = 6;
    sub_25436D6B0();
    LOBYTE(v25) = 7;
    sub_25436D6B0();
    LOBYTE(v25) = 8;
    sub_25436D6B0();
    LOBYTE(v25) = 9;
    sub_25436D6B0();
    LOBYTE(v25) = 10;
    sub_25436D6E0();
    LOBYTE(v25) = 11;
    sub_25436D6A0();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t DKFaceObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542B5318(a1, (void (*)(uint64_t))DKFaceObservation.init(from:));
}

uint64_t DKFaceObservation.init(from:)(void *a1)
{
  uint64_t v58 = sub_25436C800();
  uint64_t v55 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_25436C7B0();
  uint64_t v56 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89C0);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(void *)uint64_t v7 = 0;
  char v54 = (uint64_t *)v7;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v52 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal) = 2;
  uint64_t v53 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
  uint64_t v64 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
  uint64_t v65 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
  uint64_t v68 = v1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  uint64_t v14 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2542B6C44();
  uint64_t v61 = v6;
  uint64_t v15 = v67;
  sub_25436D940();
  if (v15)
  {
    uint64_t v19 = (uint64_t)v66;
    uint64_t v45 = v68;
    uint64_t v20 = v65;
    swift_release();

    type metadata accessor for DKFaceObservation(0);
    swift_deallocPartialClassInstance();
    uint64_t v46 = v19;
  }
  else
  {
    char v16 = v57;
    uint64_t v67 = (uint64_t *)v8;
    uint64_t v51 = (uint64_t *)v9;
    uint64_t v17 = v56;
    uint64_t v50 = (uint64_t *)v10;
    uint64_t v49 = (uint64_t *)v11;
    uint64_t v18 = v58;
    unsigned long long v48 = (uint64_t *)v12;
    LOBYTE(v69) = 0;
    sub_2542B69F0(&qword_269DD8220, MEMORY[0x263F07490]);
    sub_25436D650();
    uint64_t v22 = v68;
    uint64_t v23 = *(void (**)(void))(v17 + 32);
    uint64_t v47 = v68 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
    v23();
    LOBYTE(v69) = 1;
    sub_2542B69F0(&qword_269DD89C8, MEMORY[0x263F07508]);
    sub_25436D650();
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v16, v18);
    type metadata accessor for CGRect(0);
    char v71 = 2;
    sub_2542B69F0(&qword_269DD82B0, type metadata accessor for CGRect);
    sub_25436D650();
    uint64_t v24 = (_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    long long v25 = v70;
    *uint64_t v24 = v69;
    v24[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    char v71 = 3;
    sub_2542B6C98(&qword_269DD89D0, (void (*)(void))sub_2542B6D5C);
    sub_25436D650();
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = v69;
    LOBYTE(v69) = 4;
    uint64_t v26 = sub_25436D600();
    char v27 = v54;
    *char v54 = v26;
    *((unsigned char *)v27 + 8) = v28 & 1;
    LOBYTE(v69) = 5;
    uint64_t v29 = sub_25436D600();
    uint64_t v30 = v67;
    uint64_t *v67 = v29;
    *((unsigned char *)v30 + 8) = v31 & 1;
    LOBYTE(v69) = 6;
    uint64_t v32 = sub_25436D5F0();
    uint64_t v33 = v51;
    uint64_t *v51 = v32;
    *((unsigned char *)v33 + 8) = v34 & 1;
    LOBYTE(v69) = 7;
    uint64_t v35 = sub_25436D5F0();
    uint64_t v36 = v50;
    *uint64_t v50 = v35;
    *((unsigned char *)v36 + 8) = v37 & 1;
    LOBYTE(v69) = 8;
    uint64_t v38 = sub_25436D5F0();
    uint64_t v39 = v49;
    *uint64_t v49 = v38;
    *((unsigned char *)v39 + 8) = v40 & 1;
    LOBYTE(v69) = 9;
    uint64_t v41 = sub_25436D5F0();
    uint64_t v42 = v48;
    uint64_t *v48 = v41;
    *((unsigned char *)v42 + 8) = v43 & 1;
    LOBYTE(v69) = 10;
    *(unsigned char *)(v68 + v53) = sub_25436D620() & 1;
    LOBYTE(v69) = 11;
    char v44 = sub_25436D5E0();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    uint64_t v45 = v68;
    *(unsigned char *)(v68 + v52) = v44;
    uint64_t v46 = (uint64_t)v66;
  }
  __swift_destroy_boxed_opaque_existential_1(v46);
  return v45;
}

uint64_t sub_2542B019C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B01BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B01DC())()
{
  return nullsub_1;
}

double sub_2542B0208(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
}

void sub_2542B0214(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542B0220())()
{
  return nullsub_1;
}

uint64_t sub_2542B024C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B0260(uint64_t a1)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B027C())()
{
  return nullsub_1;
}

uint64_t sub_2542B02A8()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

uint64_t sub_2542B02C4(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B02E4())()
{
  return nullsub_1;
}

uint64_t sub_2542B0310()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

uint64_t sub_2542B032C(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B034C())()
{
  return nullsub_1;
}

uint64_t sub_2542B0378()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

uint64_t sub_2542B0394(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B03B4())()
{
  return nullsub_1;
}

uint64_t sub_2542B03E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542B1CB0(a1, (void (*)(void))type metadata accessor for DKFaceObservation, (uint64_t (*)(uint64_t))DKFaceObservation.init(from:), a2);
}

uint64_t sub_2542B0420(void *a1)
{
  return sub_2542AF204(a1);
}

uint64_t sub_2542B0444@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B0464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B0484())()
{
  return nullsub_1;
}

uint64_t sub_2542B04B0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKFaceObservation(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542B04F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B0514(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B0534())()
{
  return nullsub_1;
}

uint64_t sub_2542B055C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B057C(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B059C())()
{
  return nullsub_1;
}

double sub_2542B05C4()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
}

void *sub_2542B05D0(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542B05DC())()
{
  return nullsub_1;
}

uint64_t sub_2542B0604()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B0614(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B062C())()
{
  return nullsub_1;
}

uint64_t sub_2542B0654()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

uint64_t sub_2542B066C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B0688())()
{
  return nullsub_1;
}

uint64_t sub_2542B06B0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

uint64_t sub_2542B06C8(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B06E4())()
{
  return nullsub_1;
}

uint64_t sub_2542B070C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2542B0724(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B0740())()
{
  return nullsub_1;
}

unint64_t sub_2542B0768(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542B0838(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2542C32A0(*a1, *a2);
}

uint64_t sub_2542B0844()
{
  return sub_2542AAF80();
}

uint64_t sub_2542B0864()
{
  return sub_2542AAD44();
}

uint64_t sub_2542B0880()
{
  return sub_2542AAF80();
}

uint64_t sub_2542B089C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC304();
  *a1 = result;
  return result;
}

unint64_t sub_2542B08D4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542B0768(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542B0900()
{
  return sub_2542B2068(*v0);
}

uint64_t sub_2542B091C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC304();
  *a1 = result;
  return result;
}

void sub_2542B094C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2542B0958(uint64_t a1)
{
  unint64_t v2 = sub_2542B6DB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B0994(uint64_t a1)
{
  unint64_t v2 = sub_2542B6DB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v22 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  uint64_t v23 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
  *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
  uint64_t v24 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  uint64_t v25 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  uint64_t v26 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  uint64_t v27 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a1, v27);
  uint64_t v28 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  uint64_t v29 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a2, v29);
  uint64_t v30 = (double *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
  *uint64_t v30 = a9;
  v30[1] = a10;
  v30[2] = a11;
  v30[3] = a12;
  *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a3;
  *(void *)uint64_t v22 = a4;
  *(unsigned char *)(v22 + 8) = a5 & 1;
  *(void *)uint64_t v23 = a6;
  *(unsigned char *)(v23 + 8) = a7 & 1;
  *(void *)uint64_t v25 = a8;
  *(unsigned char *)(v25 + 8) = a13 & 1;
  return v13;
}

uint64_t DKBodyObservation.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  uint64_t v4 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t DKBodyObservation.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  uint64_t v4 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2542B0D80(void *a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89E0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6DB0();
  uint64_t v12 = v23;
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2542B69F0(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v13 = v24;
  sub_25436D710();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    uint64_t v15 = v20;
    uint64_t v14 = v21;
    uint64_t v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2542B69F0(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D710();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    long long v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    long long v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    long long v26 = v18;
    char v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2542B69F0(&qword_269DD81D8, type metadata accessor for CGRect);
    sub_25436D710();
    *(void *)&long long v25 = *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
    char v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    sub_2542B6C98(&qword_269DD89B0, (void (*)(void))sub_2542B6D08);
    sub_25436D710();
    LOBYTE(v25) = 4;
    sub_25436D6C0();
    LOBYTE(v25) = 5;
    sub_25436D6C0();
    LOBYTE(v25) = 6;
    sub_25436D6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKBodyObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542B5318(a1, (void (*)(uint64_t))DKBodyObservation.init(from:));
}

uint64_t DKBodyObservation.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = sub_25436C800();
  uint64_t v40 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  char v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C7B0();
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89F0);
  uint64_t v42 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v48 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
  uint64_t v49 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint;
  uint64_t v50 = a1;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
  uint64_t v11 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6DB0();
  uint64_t v46 = v8;
  uint64_t v13 = v51;
  sub_25436D940();
  if (v13)
  {
    uint64_t v19 = v49;
    uint64_t v18 = (uint64_t)v50;
  }
  else
  {
    uint64_t v51 = (uint64_t *)v9;
    uint64_t v38 = (uint64_t *)v12;
    uint64_t v39 = (uint64_t *)v10;
    uint64_t v14 = v43;
    uint64_t v15 = v44;
    LOBYTE(v52) = 0;
    sub_2542B69F0(&qword_269DD8220, MEMORY[0x263F07490]);
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    sub_25436D650();
    uint64_t v22 = *(void (**)(void))(v41 + 32);
    uint64_t v37 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
    v22();
    LOBYTE(v52) = 1;
    sub_2542B69F0(&qword_269DD89C8, MEMORY[0x263F07508]);
    sub_25436D650();
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v14, v15);
    type metadata accessor for CGRect(0);
    uint64_t v45 = 0;
    char v54 = 2;
    sub_2542B69F0(&qword_269DD82B0, type metadata accessor for CGRect);
    uint64_t v23 = v45;
    sub_25436D650();
    if (!v23)
    {
      uint64_t v24 = (_OWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
      long long v25 = v53;
      *uint64_t v24 = v52;
      v24[1] = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
      char v54 = 3;
      sub_2542B6C98(&qword_269DD89D0, (void (*)(void))sub_2542B6D5C);
      sub_25436D650();
      *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = v52;
      LOBYTE(v52) = 4;
      uint64_t v26 = sub_25436D600();
      char v27 = v51;
      uint64_t *v51 = v26;
      *((unsigned char *)v27 + 8) = v28 & 1;
      LOBYTE(v52) = 5;
      uint64_t v29 = sub_25436D600();
      uint64_t v30 = v39;
      *uint64_t v39 = v29;
      *((unsigned char *)v30 + 8) = v31 & 1;
      LOBYTE(v52) = 6;
      uint64_t v32 = sub_25436D5F0();
      char v34 = v33;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v17);
      uint64_t v35 = v38;
      *uint64_t v38 = v32;
      *((unsigned char *)v35 + 8) = v34 & 1;
      uint64_t v20 = (uint64_t)v50;
      goto LABEL_5;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v17);
    uint64_t v18 = (uint64_t)v50;
    uint64_t v19 = v49;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v37, v5);
  }
  swift_release();

  type metadata accessor for DKBodyObservation(0);
  swift_deallocPartialClassInstance();
  uint64_t v20 = v18;
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1(v20);
  return v2;
}

uint64_t sub_2542B1A2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B1A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B1A6C())()
{
  return nullsub_1;
}

double sub_2542B1A98(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
}

void sub_2542B1AA4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542B1AB0())()
{
  return nullsub_1;
}

uint64_t sub_2542B1ADC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B1AF0(uint64_t a1)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B1B0C())()
{
  return nullsub_1;
}

uint64_t sub_2542B1B38()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

uint64_t sub_2542B1B54(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B1B74())()
{
  return nullsub_1;
}

uint64_t sub_2542B1BA0()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

uint64_t sub_2542B1BBC(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B1BDC())()
{
  return nullsub_1;
}

uint64_t sub_2542B1C08()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2542B1C24(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B1C44())()
{
  return nullsub_1;
}

uint64_t sub_2542B1C70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542B1CB0(a1, (void (*)(void))type metadata accessor for DKBodyObservation, (uint64_t (*)(uint64_t))DKBodyObservation.init(from:), a2);
}

uint64_t sub_2542B1CB0@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_2542B1D20(void *a1)
{
  return sub_2542B0D80(a1);
}

uint64_t sub_2542B1D44@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B1D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B1D84())()
{
  return nullsub_1;
}

uint64_t sub_2542B1DB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKBodyObservation(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542B1DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B1E14(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B1E34())()
{
  return nullsub_1;
}

uint64_t sub_2542B1E5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B1E7C(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B1E9C())()
{
  return nullsub_1;
}

double sub_2542B1EC4()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
}

void *sub_2542B1ED0(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542B1EDC())()
{
  return nullsub_1;
}

uint64_t sub_2542B1F04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B1F14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B1F2C())()
{
  return nullsub_1;
}

uint64_t sub_2542B1F54()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

uint64_t sub_2542B1F6C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B1F88())()
{
  return nullsub_1;
}

uint64_t sub_2542B1FB0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

uint64_t sub_2542B1FC8(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B1FE4())()
{
  return nullsub_1;
}

uint64_t sub_2542B200C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2542B2024(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B2040())()
{
  return nullsub_1;
}

unint64_t sub_2542B2068(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542B2138@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC304();
  *a1 = result;
  return result;
}

uint64_t sub_2542B2170@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC304();
  *a1 = result;
  return result;
}

uint64_t sub_2542B21A0(uint64_t a1)
{
  unint64_t v2 = sub_2542B6E04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B21DC(uint64_t a1)
{
  unint64_t v2 = sub_2542B6E04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKObjectObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  uint64_t v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  uint64_t v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  uint64_t v25 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time;
  uint64_t v26 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a1, v26);
  uint64_t v27 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid;
  uint64_t v28 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a2, v28);
  uint64_t v29 = (double *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
  double *v29 = a9;
  v29[1] = a10;
  void v29[2] = a11;
  v29[3] = a12;
  *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a3;
  *(void *)uint64_t v22 = a4;
  *(unsigned char *)(v22 + 8) = a5 & 1;
  *(void *)uint64_t v23 = a6;
  *(unsigned char *)(v23 + 8) = a7 & 1;
  *(void *)uint64_t v24 = a8;
  *(unsigned char *)(v24 + 8) = a13 & 1;
  return v21;
}

uint64_t DKObjectObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v22 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  uint64_t v23 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  uint64_t v24 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  uint64_t v25 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time;
  uint64_t v26 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a1, v26);
  uint64_t v27 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid;
  uint64_t v28 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a2, v28);
  uint64_t v29 = (double *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
  double *v29 = a9;
  v29[1] = a10;
  void v29[2] = a11;
  v29[3] = a12;
  *(void *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a3;
  *(void *)uint64_t v22 = a4;
  *(unsigned char *)(v22 + 8) = a5 & 1;
  *(void *)uint64_t v23 = a6;
  *(unsigned char *)(v23 + 8) = a7 & 1;
  *(void *)uint64_t v24 = a8;
  *(unsigned char *)(v24 + 8) = a13 & 1;
  return v13;
}

uint64_t DKObjectObservation.deinit()
{
  return sub_2542B4B00(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

uint64_t DKObjectObservation.__deallocating_deinit()
{
  return sub_2542B4BF8(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

uint64_t sub_2542B25B4(void *a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6E04();
  uint64_t v12 = v23;
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2542B69F0(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v13 = v24;
  sub_25436D710();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    uint64_t v15 = v20;
    uint64_t v14 = v21;
    uint64_t v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2542B69F0(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D710();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    long long v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 16);
    long long v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
    long long v26 = v18;
    char v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2542B69F0(&qword_269DD81D8, type metadata accessor for CGRect);
    sub_25436D710();
    *(void *)&long long v25 = *(void *)(v12
                                + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
    char v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    sub_2542B6C98(&qword_269DD89B0, (void (*)(void))sub_2542B6D08);
    sub_25436D710();
    LOBYTE(v25) = 4;
    sub_25436D6C0();
    LOBYTE(v25) = 5;
    sub_25436D6C0();
    LOBYTE(v25) = 6;
    sub_25436D6B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKObjectObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542B5318(a1, (void (*)(uint64_t))DKObjectObservation.init(from:));
}

uint64_t DKObjectObservation.init(from:)(void *a1)
{
  uint64_t v41 = sub_25436C800();
  uint64_t v37 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A08);
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v44 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop;
  uint64_t v45 = a1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  uint64_t v46 = v1;
  uint64_t v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6E04();
  uint64_t v11 = v47;
  sub_25436D940();
  if (v11)
  {
    uint64_t v15 = (uint64_t)v45;
    uint64_t v18 = v46;
  }
  else
  {
    uint64_t v47 = (uint64_t *)v8;
    uint64_t v35 = (uint64_t *)v10;
    uint64_t v36 = (uint64_t *)v9;
    uint64_t v12 = v40;
    uint64_t v13 = v41;
    LOBYTE(v48) = 0;
    sub_2542B69F0(&qword_269DD8220, MEMORY[0x263F07490]);
    uint64_t v14 = v43;
    sub_25436D650();
    uint64_t v18 = v46;
    uint64_t v19 = *(void (**)(void))(v38 + 32);
    uint64_t v20 = v46 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time;
    uint64_t v42 = (char *)v4;
    v19();
    LOBYTE(v48) = 1;
    sub_2542B69F0(&qword_269DD89C8, MEMORY[0x263F07508]);
    sub_25436D650();
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v12, v13);
    type metadata accessor for CGRect(0);
    uint64_t v40 = 0;
    char v50 = 2;
    sub_2542B69F0(&qword_269DD82B0, type metadata accessor for CGRect);
    uint64_t v21 = v40;
    sub_25436D650();
    if (!v21)
    {
      uint64_t v22 = (_OWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
      long long v23 = v49;
      *uint64_t v22 = v48;
      v22[1] = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
      char v50 = 3;
      sub_2542B6C98(&qword_269DD89D0, (void (*)(void))sub_2542B6D5C);
      sub_25436D650();
      *(void *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = v48;
      LOBYTE(v48) = 4;
      uint64_t v24 = sub_25436D600();
      long long v25 = v47;
      *uint64_t v47 = v24;
      *((unsigned char *)v25 + 8) = v26 & 1;
      LOBYTE(v48) = 5;
      uint64_t v27 = sub_25436D600();
      uint64_t v28 = v36;
      uint64_t *v36 = v27;
      *((unsigned char *)v28 + 8) = v29 & 1;
      LOBYTE(v48) = 6;
      uint64_t v30 = sub_25436D5F0();
      char v32 = v31;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v14);
      char v33 = v35;
      *uint64_t v35 = v30;
      *((unsigned char *)v33 + 8) = v32 & 1;
      uint64_t v16 = (uint64_t)v45;
      goto LABEL_5;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v14);
    uint64_t v15 = (uint64_t)v45;
    (*(void (**)(uint64_t, char *))(v38 + 8))(v20, v42);
  }
  swift_release();
  type metadata accessor for DKObjectObservation(0);
  swift_deallocPartialClassInstance();
  uint64_t v16 = v15;
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v18;
}

uint64_t sub_2542B323C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B327C())()
{
  return nullsub_1;
}

double sub_2542B32A8(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
}

void sub_2542B32B4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542B32C0())()
{
  return nullsub_1;
}

uint64_t sub_2542B32EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B3300(uint64_t a1)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B331C())()
{
  return nullsub_1;
}

uint64_t sub_2542B3348()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

uint64_t sub_2542B3364(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B3384())()
{
  return nullsub_1;
}

uint64_t sub_2542B33B0()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

uint64_t sub_2542B33CC(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B33EC())()
{
  return nullsub_1;
}

uint64_t sub_2542B3418()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2542B3434(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B3454())()
{
  return nullsub_1;
}

uint64_t sub_2542B3480@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542B1CB0(a1, (void (*)(void))type metadata accessor for DKObjectObservation, (uint64_t (*)(uint64_t))DKObjectObservation.init(from:), a2);
}

uint64_t sub_2542B34C0(void *a1)
{
  return sub_2542B25B4(a1);
}

uint64_t sub_2542B34E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B3504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B3524())()
{
  return nullsub_1;
}

uint64_t sub_2542B3550@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKObjectObservation(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542B3594()
{
  uint64_t v1 = 0x646E61487466654CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E61487468676952;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E55;
  }
}

uint64_t sub_2542B35F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542BC34C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542B361C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6E78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B3658(uint64_t a1)
{
  unint64_t v2 = sub_2542B6E78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542B3694(uint64_t a1)
{
  unint64_t v2 = sub_2542B6F20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B36D0(uint64_t a1)
{
  unint64_t v2 = sub_2542B6F20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542B370C(uint64_t a1)
{
  unint64_t v2 = sub_2542B6ECC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B3748(uint64_t a1)
{
  unint64_t v2 = sub_2542B6ECC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542B3784(uint64_t a1)
{
  unint64_t v2 = sub_2542B6F74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B37C0(uint64_t a1)
{
  unint64_t v2 = sub_2542B6F74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKHandObservation.Chirality.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A10);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  long long v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A18);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A20);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A28);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6E78();
  sub_25436D950();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2542B6F20();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_2542B6ECC();
      uint64_t v17 = v23;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_2542B6F74();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKHandObservation.Chirality.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A50);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A58);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A60);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A68);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6E78();
  uint64_t v12 = (uint64_t)v39;
  sub_25436D940();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_25436D660();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_25436D350();
    swift_allocError();
    long long v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    void *v23 = &type metadata for DKHandObservation.Chirality;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2542B6F20();
      uint64_t v18 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_2542B6ECC();
      uint64_t v25 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_2542B6F74();
    uint64_t v24 = v30;
    sub_25436D5B0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_2542B411C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKHandObservation.Chirality.init(from:)(a1, a2);
}

uint64_t sub_2542B4134(void *a1)
{
  return DKHandObservation.Chirality.encode(to:)(a1);
}

uint64_t sub_2542B414C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B416C(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542B418C())()
{
  return nullsub_1;
}

uint64_t sub_2542B41B4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B41D4(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B41F4())()
{
  return nullsub_1;
}

double sub_2542B421C()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
}

double sub_2542B4228(void *a1)
{
  return *(double *)(v1 + *a1);
}

void *sub_2542B423C(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect, a1, a2, a3, a4);
}

void *sub_2542B4248(void *result, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = (double *)(v5 + *result);
  double *v6 = a2;
  v6[1] = a3;
  VTPixelTransferSessionRef v6[2] = a4;
  v6[3] = a5;
  return result;
}

uint64_t (*sub_2542B425C())()
{
  return nullsub_1;
}

uint64_t sub_2542B4284()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B4294(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B42AC())()
{
  return nullsub_1;
}

uint64_t sub_2542B42D4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

uint64_t sub_2542B42EC(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B4308())()
{
  return nullsub_1;
}

uint64_t sub_2542B4330()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

uint64_t sub_2542B4348(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B4364())()
{
  return nullsub_1;
}

void sub_2542B438C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
}

unsigned char *sub_2542B43A0(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = *result;
  return result;
}

uint64_t (*sub_2542B43B4())()
{
  return nullsub_1;
}

uint64_t sub_2542B43DC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2542B43F4(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B4410())()
{
  return nullsub_1;
}

unint64_t sub_2542B4438(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 0x74696C6172696863;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2542B452C(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x4972656B63617274;
      break;
    case 5:
      unint64_t result = 0x644970756F7267;
      break;
    case 6:
      unint64_t result = 0x74696C6172696863;
      break;
    case 7:
      unint64_t result = 0x65636E6174736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542B4620(unsigned __int8 *a1, char *a2)
{
  return sub_2542C33A8(*a1, *a2);
}

uint64_t sub_2542B462C()
{
  return sub_2542AAE48();
}

uint64_t sub_2542B4638()
{
  return sub_2542AAC1C();
}

uint64_t sub_2542B4640()
{
  return sub_2542AAE48();
}

uint64_t sub_2542B4648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC4B0();
  *a1 = result;
  return result;
}

unint64_t sub_2542B4678@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542B4438(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542B46A4()
{
  return sub_2542B452C(*v0);
}

uint64_t sub_2542B46AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542BC4B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542B46D4(uint64_t a1)
{
  unint64_t v2 = sub_2542B6FC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542B4710(uint64_t a1)
{
  unint64_t v2 = sub_2542B6FC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKHandObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, char *a8, double a9, double a10, double a11, double a12, uint64_t a13, char a14)
{
  uint64_t v23 = swift_allocObject();
  char v24 = *a8;
  uint64_t v25 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  uint64_t v26 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  uint64_t v27 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  uint64_t v28 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time;
  uint64_t v29 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a1, v29);
  uint64_t v30 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid;
  uint64_t v31 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, a2, v31);
  uint64_t v32 = (double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
  *uint64_t v32 = a9;
  v32[1] = a10;
  v32[2] = a11;
  v32[3] = a12;
  *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a3;
  *(void *)uint64_t v25 = a4;
  *(unsigned char *)(v25 + 8) = a5 & 1;
  *(void *)uint64_t v26 = a6;
  *(unsigned char *)(v26 + 8) = a7 & 1;
  *(unsigned char *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v24;
  *(void *)uint64_t v27 = a13;
  *(unsigned char *)(v27 + 8) = a14 & 1;
  return v23;
}

uint64_t DKHandObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, char *a8, double a9, double a10, double a11, double a12, uint64_t a13, char a14)
{
  char v23 = *a8;
  uint64_t v24 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  uint64_t v25 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  uint64_t v26 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  uint64_t v27 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time;
  uint64_t v28 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a1, v28);
  uint64_t v29 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid;
  uint64_t v30 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a2, v30);
  uint64_t v31 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
  *uint64_t v31 = a9;
  v31[1] = a10;
  v31[2] = a11;
  v31[3] = a12;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a3;
  *(void *)uint64_t v24 = a4;
  *(unsigned char *)(v24 + 8) = a5 & 1;
  *(void *)uint64_t v25 = a6;
  *(unsigned char *)(v25 + 8) = a7 & 1;
  *(unsigned char *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v23;
  *(void *)uint64_t v26 = a13;
  *(unsigned char *)(v26 + 8) = a14 & 1;
  return v14;
}

uint64_t DKHandObservation.deinit()
{
  return sub_2542B4B00(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

uint64_t sub_2542B4B00(void *a1, void *a2)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + *a2;
  uint64_t v7 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t DKHandObservation.__deallocating_deinit()
{
  return sub_2542B4BF8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

uint64_t sub_2542B4BF8(void *a1, void *a2)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + *a2;
  uint64_t v7 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542B4D08(void *a1)
{
  uint64_t v2 = sub_25436C800();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A70);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6FC8();
  uint64_t v12 = v25;
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, v4);
  LOBYTE(v27) = 0;
  sub_2542B69F0(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v13 = v26;
  sub_25436D710();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v26 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v16 = v22;
    uint64_t v15 = v23;
    uint64_t v17 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, v24);
    LOBYTE(v27) = 1;
    sub_2542B69F0(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D710();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v17);
    long long v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
    long long v27 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    long long v28 = v18;
    char v29 = 2;
    type metadata accessor for CGRect(0);
    sub_2542B69F0(&qword_269DD81D8, type metadata accessor for CGRect);
    uint64_t v19 = v8;
    sub_25436D710();
    *(void *)&long long v27 = *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
    char v29 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    sub_2542B6C98(&qword_269DD89B0, (void (*)(void))sub_2542B6D08);
    sub_25436D710();
    LOBYTE(v27) = 4;
    sub_25436D6C0();
    LOBYTE(v27) = 5;
    sub_25436D6C0();
    LOBYTE(v27) = *(unsigned char *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
    char v29 = 6;
    sub_2542B701C();
    sub_25436D710();
    uint64_t v20 = v26;
    LOBYTE(v27) = 7;
    sub_25436D6B0();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  }
}

uint64_t DKHandObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542B5318(a1, (void (*)(uint64_t))DKHandObservation.init(from:));
}

uint64_t sub_2542B5318(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t DKHandObservation.init(from:)(void *a1)
{
  uint64_t v3 = sub_25436C800();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C7B0();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v42 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8A88);
  uint64_t v37 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v45 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop;
  uint64_t v46 = a1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  uint64_t v47 = v1;
  uint64_t v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542B6FC8();
  uint64_t v43 = v8;
  uint64_t v12 = v48;
  sub_25436D940();
  if (v12)
  {
    uint64_t v30 = (uint64_t)v46;
    uint64_t v19 = v47;
    swift_release();
    type metadata accessor for DKHandObservation(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v38;
    uint64_t v13 = v39;
    long long v48 = (uint64_t *)v9;
    uint64_t v35 = (uint64_t *)v11;
    uint64_t v36 = (uint64_t *)v10;
    uint64_t v15 = v37;
    uint64_t v17 = v40;
    uint64_t v16 = v41;
    LOBYTE(v49) = 0;
    sub_2542B69F0(&qword_269DD8220, MEMORY[0x263F07490]);
    sub_25436D650();
    uint64_t v19 = v47;
    uint64_t v20 = *(void (**)(void))(v14 + 32);
    v34[1] = v47 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time;
    char v42 = (char *)v5;
    v20();
    LOBYTE(v49) = 1;
    sub_2542B69F0(&qword_269DD89C8, MEMORY[0x263F07508]);
    sub_25436D650();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, v13, v16);
    type metadata accessor for CGRect(0);
    char v51 = 2;
    sub_2542B69F0(&qword_269DD82B0, type metadata accessor for CGRect);
    sub_25436D650();
    uint64_t v21 = (_OWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    long long v22 = v50;
    _OWORD *v21 = v49;
    v21[1] = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD89A8);
    char v51 = 3;
    sub_2542B6C98(&qword_269DD89D0, (void (*)(void))sub_2542B6D5C);
    sub_25436D650();
    *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = v49;
    LOBYTE(v49) = 4;
    uint64_t v23 = sub_25436D600();
    uint64_t v24 = v48;
    uint64_t *v48 = v23;
    *((unsigned char *)v24 + 8) = v25 & 1;
    LOBYTE(v49) = 5;
    uint64_t v26 = sub_25436D600();
    long long v27 = v36;
    uint64_t *v36 = v26;
    *((unsigned char *)v27 + 8) = v28 & 1;
    char v51 = 6;
    sub_2542B7070();
    sub_25436D650();
    *(unsigned char *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v49;
    LOBYTE(v49) = 7;
    uint64_t v29 = sub_25436D5F0();
    uint64_t v30 = (uint64_t)v46;
    uint64_t v31 = v29;
    LOBYTE(v13) = v32;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v44);
    uint64_t v33 = v35;
    *uint64_t v35 = v31;
    *((unsigned char *)v33 + 8) = v13 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1(v30);
  return v19;
}

uint64_t sub_2542B5A68@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542B5A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542B5AA8())()
{
  return nullsub_1;
}

double sub_2542B5AD4(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
}

double sub_2542B5AE0(uint64_t a1, uint64_t a2, void *a3)
{
  return *(double *)(*v3 + *a3);
}

void sub_2542B5AF8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

void sub_2542B5B04(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8 = (double *)(*v7 + *a7);
  *uint64_t v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
}

uint64_t (*sub_2542B5B1C())()
{
  return nullsub_1;
}

uint64_t sub_2542B5B48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B5B5C(uint64_t a1)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B5B78())()
{
  return nullsub_1;
}

uint64_t sub_2542B5BA4()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

uint64_t sub_2542B5BC0(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B5BE0())()
{
  return nullsub_1;
}

uint64_t sub_2542B5C0C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

uint64_t sub_2542B5C28(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B5C48())()
{
  return nullsub_1;
}

uint64_t sub_2542B5C74()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2542B5C90(uint64_t result, char a2)
{
  uint64_t v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B5CB0())()
{
  return nullsub_1;
}

uint64_t sub_2542B5CDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542B1CB0(a1, (void (*)(void))type metadata accessor for DKHandObservation, (uint64_t (*)(uint64_t))DKHandObservation.init(from:), a2);
}

uint64_t sub_2542B5D1C(void *a1)
{
  return sub_2542B4D08(a1);
}

uint64_t sub_2542B5D40@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5D60(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B5D60@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2542B5DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542B5DF8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, MEMORY[0x263F07490]);
}

uint64_t sub_2542B5DF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  uint64_t v7 = *v5 + *a4;
  uint64_t v8 = a5(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40);
  return v9(v7, a1, v8);
}

uint64_t (*sub_2542B5E70())()
{
  return nullsub_1;
}

uint64_t sub_2542B5E9C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKHandObservation(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542B5EE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void *a6)
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  return (*(uint64_t (**)(void, char *, uint64_t))(v10 + 40))(*a2 + *a6, v12, v9);
}

uint64_t sub_2542B5FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542B5FF8(&OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542B5FF8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2542B606C(uint64_t a1)
{
  return sub_2542B608C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, MEMORY[0x263F07490]);
}

uint64_t sub_2542B608C(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3 + *a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  return v7(v5, a1, v6);
}

uint64_t (*sub_2542B6100())()
{
  return nullsub_1;
}

uint64_t sub_2542B6128()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B6138(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B6150())()
{
  return nullsub_1;
}

void *sub_2542B6178()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  id v2 = v1;
  return v1;
}

uint64_t sub_2542B61A8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t (*sub_2542B61BC())()
{
  return nullsub_1;
}

uint64_t sub_2542B61E4@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B61F8(void *a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B6210())()
{
  return nullsub_1;
}

uint64_t sub_2542B6238()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize);
}

uint64_t sub_2542B6250(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize;
  *(void *)uint64_t v4 = result;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  return result;
}

uint64_t (*sub_2542B626C())()
{
  return nullsub_1;
}

uint64_t sub_2542B6294()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2542B62D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542B62EC())()
{
  return nullsub_1;
}

uint64_t sub_2542B6314()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency);
}

uint64_t sub_2542B632C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542B6348())()
{
  return nullsub_1;
}

id DKObservationMetadata.init(time:observations:image:standPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  uint64_t v10 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  uint64_t v11 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v12 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  uint64_t v14 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
  uint64_t v15 = sub_25436C7B0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  *(void *)&v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = a2;
  *(void *)&v4[v9] = a3;
  *(void *)&v4[v10] = v8;
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for DKObservationMetadata(0);
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v17;
}

unint64_t sub_2542B64C4()
{
  unint64_t result = qword_269DD8828;
  if (!qword_269DD8828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8828);
  }
  return result;
}

unint64_t sub_2542B6518()
{
  unint64_t result = qword_269DD8830;
  if (!qword_269DD8830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8830);
  }
  return result;
}

unint64_t sub_2542B656C()
{
  unint64_t result = qword_269DD8838;
  if (!qword_269DD8838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8838);
  }
  return result;
}

unint64_t sub_2542B65C0()
{
  unint64_t result = qword_269DD8840;
  if (!qword_269DD8840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8840);
  }
  return result;
}

unint64_t sub_2542B6614()
{
  unint64_t result = qword_269DD8848;
  if (!qword_269DD8848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8848);
  }
  return result;
}

unint64_t sub_2542B6668()
{
  unint64_t result = qword_269DD8898;
  if (!qword_269DD8898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8898);
  }
  return result;
}

unint64_t sub_2542B66BC()
{
  unint64_t result = qword_269DD88A0;
  if (!qword_269DD88A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD88A0);
  }
  return result;
}

unint64_t sub_2542B6710()
{
  unint64_t result = qword_269DD88A8;
  if (!qword_269DD88A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD88A8);
  }
  return result;
}

unint64_t sub_2542B6764()
{
  unint64_t result = qword_269DD88B0;
  if (!qword_269DD88B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD88B0);
  }
  return result;
}

unint64_t sub_2542B67B8()
{
  unint64_t result = qword_269DD8900;
  if (!qword_269DD8900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8900);
  }
  return result;
}

unint64_t sub_2542B680C()
{
  unint64_t result = qword_269DD8908;
  if (!qword_269DD8908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8908);
  }
  return result;
}

unint64_t sub_2542B6860()
{
  unint64_t result = qword_269DD8910;
  if (!qword_269DD8910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8910);
  }
  return result;
}

unint64_t sub_2542B68B4()
{
  unint64_t result = qword_269DD8918;
  if (!qword_269DD8918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8918);
  }
  return result;
}

unint64_t sub_2542B6908()
{
  unint64_t result = qword_269DD8920;
  if (!qword_269DD8920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8920);
  }
  return result;
}

unint64_t sub_2542B695C()
{
  unint64_t result = qword_269DD8958;
  if (!qword_269DD8958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8958);
  }
  return result;
}

uint64_t type metadata accessor for DKFaceObservation(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8AE8);
}

uint64_t type metadata accessor for DKBodyObservation(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8AF8);
}

uint64_t sub_2542B69F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542B6A38()
{
  unint64_t result = qword_269DD8968;
  if (!qword_269DD8968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8960);
    sub_2542B6BB0(&qword_269DD8970, &qword_269DD8160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8968);
  }
  return result;
}

uint64_t type metadata accessor for DKHandObservation(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8B18);
}

unint64_t sub_2542B6B04()
{
  unint64_t result = qword_269DD8980;
  if (!qword_269DD8980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8960);
    sub_2542B6BB0(&qword_269DD8988, &qword_269DD8258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8980);
  }
  return result;
}

uint64_t sub_2542B6BB0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD7AC8);
    sub_2542B69F0(a2, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542B6C44()
{
  unint64_t result = qword_269DD8998;
  if (!qword_269DD8998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8998);
  }
  return result;
}

uint64_t sub_2542B6C98(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD89A8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542B6D08()
{
  unint64_t result = qword_269DD89B8;
  if (!qword_269DD89B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD89B8);
  }
  return result;
}

unint64_t sub_2542B6D5C()
{
  unint64_t result = qword_269DD89D8;
  if (!qword_269DD89D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD89D8);
  }
  return result;
}

unint64_t sub_2542B6DB0()
{
  unint64_t result = qword_269DD89E8;
  if (!qword_269DD89E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD89E8);
  }
  return result;
}

unint64_t sub_2542B6E04()
{
  unint64_t result = qword_269DD8A00;
  if (!qword_269DD8A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A00);
  }
  return result;
}

uint64_t type metadata accessor for DKObjectObservation(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8B08);
}

unint64_t sub_2542B6E78()
{
  unint64_t result = qword_269DD8A30;
  if (!qword_269DD8A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A30);
  }
  return result;
}

unint64_t sub_2542B6ECC()
{
  unint64_t result = qword_269DD8A38;
  if (!qword_269DD8A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A38);
  }
  return result;
}

unint64_t sub_2542B6F20()
{
  unint64_t result = qword_269DD8A40;
  if (!qword_269DD8A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A40);
  }
  return result;
}

unint64_t sub_2542B6F74()
{
  unint64_t result = qword_269DD8A48;
  if (!qword_269DD8A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A48);
  }
  return result;
}

unint64_t sub_2542B6FC8()
{
  unint64_t result = qword_269DD8A78;
  if (!qword_269DD8A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A78);
  }
  return result;
}

unint64_t sub_2542B701C()
{
  unint64_t result = qword_269DD8A80;
  if (!qword_269DD8A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A80);
  }
  return result;
}

unint64_t sub_2542B7070()
{
  unint64_t result = qword_269DD8A90;
  if (!qword_269DD8A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A90);
  }
  return result;
}

uint64_t type metadata accessor for DKObservationMetadata(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8B28);
}

id DKObservationMetadata.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DKObservationMetadata.init()()
{
}

id DKObservationMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKObservationMetadata(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2542B71B4()
{
  unint64_t result = qword_269DD8A98;
  if (!qword_269DD8A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8A98);
  }
  return result;
}

unint64_t sub_2542B720C()
{
  unint64_t result = qword_269DD8AA0;
  if (!qword_269DD8AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8AA0);
  }
  return result;
}

unint64_t sub_2542B7264()
{
  unint64_t result = qword_269DD8AA8;
  if (!qword_269DD8AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8AA8);
  }
  return result;
}

uint64_t sub_2542B72B8(void *a1)
{
  a1[2] = sub_2542B69F0(&qword_269DD8238, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
  a1[3] = sub_2542B69F0(&qword_269DD8130, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
  uint64_t result = sub_2542B69F0(&qword_269DD8AB0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2542B7364(void *a1)
{
  a1[2] = sub_2542B69F0(&qword_269DD8248, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
  a1[3] = sub_2542B69F0(&qword_269DD8148, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
  uint64_t result = sub_2542B69F0(&qword_269DD8AB8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2542B7410(void *a1)
{
  a1[2] = sub_2542B69F0(&qword_269DD8AC0, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
  a1[3] = sub_2542B69F0(&qword_269DD8AC8, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
  uint64_t result = sub_2542B69F0(&qword_269DD8AD0, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
  a1[4] = result;
  return result;
}

unint64_t sub_2542B74C0()
{
  unint64_t result = qword_269DD8AD8;
  if (!qword_269DD8AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8AD8);
  }
  return result;
}

uint64_t sub_2542B7514(void *a1)
{
  a1[2] = sub_2542B69F0(&qword_269DD8258, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
  a1[3] = sub_2542B69F0(&qword_269DD8160, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
  uint64_t result = sub_2542B69F0(&qword_269DD8AE0, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2542B75C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542B75E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time);
}

uint64_t sub_2542B7614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542B7634(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid);
}

__n128 sub_2542B7668@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542B7684(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2542B7690@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B76A8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
}

void *sub_2542B76B4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B76D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

void *sub_2542B76E4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7708(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

void *sub_2542B7714@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
}

void *sub_2542B7744@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7768(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
}

void *sub_2542B7774@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7798(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
}

void *sub_2542B77A4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B77C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

void *sub_2542B77D4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal);
  return result;
}

unsigned char *sub_2542B77EC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal) = *result;
  return result;
}

uint64_t sub_2542B7804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542B7824(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time);
}

uint64_t sub_2542B7858@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542B7878(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid);
}

__n128 sub_2542B78AC@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542B78C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2542B78D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B78EC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
}

void *sub_2542B78F8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B791C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

void *sub_2542B7928@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B794C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

void *sub_2542B7958@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B797C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2542B7988@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542B79A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time);
}

uint64_t sub_2542B79DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542B79FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

__n128 sub_2542B7A30@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542B7A4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2542B7A58@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B7A70(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
}

void *sub_2542B7A7C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7AA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

void *sub_2542B7AAC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7AD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

void *sub_2542B7ADC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7B00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2542B7B0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542B7B2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time);
}

uint64_t sub_2542B7B60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542B7B80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

__n128 sub_2542B7BB4@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542B7BD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect).n128_u64[0];
  return result;
}

__n128 keypath_set_11Tm(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = (_OWORD *)(*a2 + *a5);
  __n128 result = *(__n128 *)a1;
  long long v7 = *(_OWORD *)(a1 + 16);
  _OWORD *v5 = *(_OWORD *)a1;
  v5[1] = v7;
  return result;
}

uint64_t sub_2542B7BF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B7C0C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
}

void *sub_2542B7C18@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7C3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

void *sub_2542B7C48@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7C6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

void *sub_2542B7C78@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
  return result;
}

unsigned char *sub_2542B7C90(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = *result;
  return result;
}

void *sub_2542B7CA8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7CCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2542B7CD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, MEMORY[0x263F07490], a2);
}

uint64_t keypath_getTm_0@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1 + *a2;
  uint64_t v6 = a3(0);
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a4, v5, v6);
}

uint64_t sub_2542B7D70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542B5EE0(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time);
}

uint64_t sub_2542B7DA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B7DBC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations);
}

id sub_2542B7DC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  *a2 = v2;
  return v2;
}

void sub_2542B7DE0(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image) = *a1;
  id v3 = v2;
}

uint64_t sub_2542B7E30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B7E48(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_2542B7E94@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2 = (__n128 *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize);
  unsigned __int8 v3 = v2[1].n128_u8[0];
  __n128 result = *v2;
  *a2 = *v2;
  a2[1].n128_u8[0] = v3;
  return result;
}

__n128 sub_2542B7EB8(__n128 *a1, void *a2)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  uint64_t v3 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize;
  __n128 result = *a1;
  *(__n128 *)uint64_t v3 = *a1;
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_2542B7EDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unsigned __int8 v2 = (void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  uint64_t v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542B7EF8(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  *id v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_2542B7F48@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542B7F6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency);
}

ValueMetadata *type metadata accessor for DKFaceDirection()
{
  return &type metadata for DKFaceDirection;
}

ValueMetadata *type metadata accessor for DKMotionClassification()
{
  return &type metadata for DKMotionClassification;
}

ValueMetadata *type metadata accessor for DKObservationType()
{
  return &type metadata for DKObservationType;
}

uint64_t destroy for DKObservationGroup()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DKObservationGroup(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DKObservationGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DKObservationGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKObservationGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKObservationGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKObservationGroup()
{
  return &type metadata for DKObservationGroup;
}

uint64_t dispatch thunk of DKObservation.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DKObservation.uuid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DKObservation.uuid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DKObservation.rect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DKObservation.rect.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DKObservation.rect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of DKObservation.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DKObservation.trackerId.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of DKObservation.groupId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DKObservation.groupId.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 144))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.groupId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of DKObservation.distance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DKObservation.distance.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 168))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.distance.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_2542B8390()
{
  return type metadata accessor for DKFaceObservation(0);
}

uint64_t sub_2542B8398()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKFaceObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFaceObservation);
}

uint64_t dispatch thunk of DKFaceObservation.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKFaceObservation.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKFaceObservation.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 304))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKFaceObservation.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKFaceObservation.groupId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 328))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKFaceObservation.yaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKFaceObservation.yaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 352))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.yaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKFaceObservation.pitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKFaceObservation.pitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 376))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.pitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKFaceObservation.roll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKFaceObservation.roll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 400))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.roll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKFaceObservation.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKFaceObservation.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 424))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKFaceObservation.isFrontal.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKFaceObservation.isFrontal.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKFaceObservation.isFrontal.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKFaceObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:isFrontal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v7 + 560))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKFaceObservation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 576))();
}

uint64_t sub_2542B8BF4()
{
  return type metadata accessor for DKBodyObservation(0);
}

uint64_t sub_2542B8BFC()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKBodyObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKBodyObservation);
}

uint64_t dispatch thunk of DKBodyObservation.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKBodyObservation.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKBodyObservation.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKBodyObservation.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKBodyObservation.groupId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKBodyObservation.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKBodyObservation.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 384))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKBodyObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v7 + 400))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKBodyObservation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t sub_2542B9148()
{
  return type metadata accessor for DKObjectObservation(0);
}

uint64_t sub_2542B9150()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKObjectObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKObjectObservation);
}

uint64_t dispatch thunk of DKObjectObservation.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKObjectObservation.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKObjectObservation.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKObjectObservation.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKObjectObservation.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKObjectObservation.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKObjectObservation.identityConfidences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKObjectObservation.identityConfidences.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKObjectObservation.identityConfidences.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKObjectObservation.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKObjectObservation.trackerId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 248))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKObjectObservation.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKObjectObservation.groupId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 272))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKObjectObservation.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKObjectObservation.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 320))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKObjectObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v7 + 336))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKObjectObservation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t sub_2542B9688()
{
  return type metadata accessor for DKHandObservation(0);
}

uint64_t sub_2542B9690()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKHandObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKHandObservation);
}

uint64_t dispatch thunk of DKHandObservation.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKHandObservation.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKHandObservation.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKHandObservation.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKHandObservation.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKHandObservation.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKHandObservation.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKHandObservation.trackerId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 256))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKHandObservation.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKHandObservation.groupId.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 280))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKHandObservation.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKHandObservation.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 352))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKHandObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(v7 + 368))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKHandObservation.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKHandObservation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality()
{
  return &type metadata for DKHandObservation.Chirality;
}

uint64_t sub_2542B9D28()
{
  return type metadata accessor for DKObservationMetadata(0);
}

uint64_t sub_2542B9D30()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKObservationMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKObservationMetadata);
}

uint64_t dispatch thunk of DKObservationMetadata.time.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DKObservationMetadata.time.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DKObservationMetadata.time.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))((*MEMORY[0x263F8EED0] & *v3) + 0xF0))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of DKObservationMetadata.latency.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of DKObservationMetadata.latency.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))((*MEMORY[0x263F8EED0] & *v2) + 0x120))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservationMetadata.latency.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of DKObservationMetadata.__allocating_init(time:observations:image:standPosition:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

unsigned char *storeEnumTagSinglePayload for DKHandObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542BA3ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKHandObservation.CodingKeys()
{
  return &type metadata for DKHandObservation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.CodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.CodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.UnknownCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.LeftHandCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.LeftHandCodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.RightHandCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.RightHandCodingKeys;
}

ValueMetadata *type metadata accessor for DKObjectObservation.CodingKeys()
{
  return &type metadata for DKObjectObservation.CodingKeys;
}

unsigned char *_s23IntelligentTrackingCore19DKObjectObservationC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542BA508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKBodyObservation.CodingKeys()
{
  return &type metadata for DKBodyObservation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKFaceObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKFaceObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542BA69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFaceObservation.CodingKeys()
{
  return &type metadata for DKFaceObservation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationGroup.CodingKeys()
{
  return &type metadata for DKObservationGroup.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.CodingKeys()
{
  return &type metadata for DKObservationType.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.FaceCodingKeys()
{
  return &type metadata for DKObservationType.FaceCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.BodyCodingKeys()
{
  return &type metadata for DKObservationType.BodyCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.HandCodingKeys()
{
  return &type metadata for DKObservationType.HandCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.ObjectCodingKeys()
{
  return &type metadata for DKObservationType.ObjectCodingKeys;
}

unsigned char *_s23IntelligentTrackingCore17DKHandObservationC9ChiralityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542BA800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKMotionClassification.CodingKeys()
{
  return &type metadata for DKMotionClassification.CodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.StationaryCodingKeys()
{
  return &type metadata for DKMotionClassification.StationaryCodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.FidgetingCodingKeys()
{
  return &type metadata for DKMotionClassification.FidgetingCodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.WalkingCodingKeys()
{
  return &type metadata for DKMotionClassification.WalkingCodingKeys;
}

unsigned char *_s23IntelligentTrackingCore17DKObservationTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542BA934);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFaceDirection.CodingKeys()
{
  return &type metadata for DKFaceDirection.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.UnknownCodingKeys()
{
  return &type metadata for DKFaceDirection.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.LeftCodingKeys()
{
  return &type metadata for DKFaceDirection.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.RightCodingKeys()
{
  return &type metadata for DKFaceDirection.RightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.CameraCodingKeys()
{
  return &type metadata for DKFaceDirection.CameraCodingKeys;
}

unint64_t sub_2542BA9B0()
{
  unint64_t result = qword_269DD8B38;
  if (!qword_269DD8B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B38);
  }
  return result;
}

unint64_t sub_2542BAA08()
{
  unint64_t result = qword_269DD8B40;
  if (!qword_269DD8B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B40);
  }
  return result;
}

unint64_t sub_2542BAA60()
{
  unint64_t result = qword_269DD8B48;
  if (!qword_269DD8B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B48);
  }
  return result;
}

unint64_t sub_2542BAAB8()
{
  unint64_t result = qword_269DD8B50;
  if (!qword_269DD8B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B50);
  }
  return result;
}

unint64_t sub_2542BAB10()
{
  unint64_t result = qword_269DD8B58;
  if (!qword_269DD8B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B58);
  }
  return result;
}

unint64_t sub_2542BAB68()
{
  unint64_t result = qword_269DD8B60;
  if (!qword_269DD8B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B60);
  }
  return result;
}

unint64_t sub_2542BABC0()
{
  unint64_t result = qword_269DD8B68;
  if (!qword_269DD8B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B68);
  }
  return result;
}

unint64_t sub_2542BAC18()
{
  unint64_t result = qword_269DD8B70;
  if (!qword_269DD8B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B70);
  }
  return result;
}

unint64_t sub_2542BAC70()
{
  unint64_t result = qword_269DD8B78;
  if (!qword_269DD8B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B78);
  }
  return result;
}

unint64_t sub_2542BACC8()
{
  unint64_t result = qword_269DD8B80;
  if (!qword_269DD8B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B80);
  }
  return result;
}

unint64_t sub_2542BAD20()
{
  unint64_t result = qword_269DD8B88;
  if (!qword_269DD8B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B88);
  }
  return result;
}

unint64_t sub_2542BAD78()
{
  unint64_t result = qword_269DD8B90;
  if (!qword_269DD8B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B90);
  }
  return result;
}

unint64_t sub_2542BADD0()
{
  unint64_t result = qword_269DD8B98;
  if (!qword_269DD8B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8B98);
  }
  return result;
}

unint64_t sub_2542BAE28()
{
  unint64_t result = qword_269DD8BA0;
  if (!qword_269DD8BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BA0);
  }
  return result;
}

unint64_t sub_2542BAE80()
{
  unint64_t result = qword_269DD8BA8;
  if (!qword_269DD8BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BA8);
  }
  return result;
}

unint64_t sub_2542BAED8()
{
  unint64_t result = qword_269DD8BB0;
  if (!qword_269DD8BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BB0);
  }
  return result;
}

unint64_t sub_2542BAF30()
{
  unint64_t result = qword_269DD8BB8;
  if (!qword_269DD8BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BB8);
  }
  return result;
}

unint64_t sub_2542BAF88()
{
  unint64_t result = qword_269DD8BC0;
  if (!qword_269DD8BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BC0);
  }
  return result;
}

unint64_t sub_2542BAFE0()
{
  unint64_t result = qword_269DD8BC8;
  if (!qword_269DD8BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BC8);
  }
  return result;
}

unint64_t sub_2542BB038()
{
  unint64_t result = qword_269DD8BD0;
  if (!qword_269DD8BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BD0);
  }
  return result;
}

unint64_t sub_2542BB090()
{
  unint64_t result = qword_269DD8BD8;
  if (!qword_269DD8BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BD8);
  }
  return result;
}

unint64_t sub_2542BB0E8()
{
  unint64_t result = qword_269DD8BE0;
  if (!qword_269DD8BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BE0);
  }
  return result;
}

unint64_t sub_2542BB140()
{
  unint64_t result = qword_269DD8BE8;
  if (!qword_269DD8BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BE8);
  }
  return result;
}

unint64_t sub_2542BB198()
{
  unint64_t result = qword_269DD8BF0;
  if (!qword_269DD8BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BF0);
  }
  return result;
}

unint64_t sub_2542BB1F0()
{
  unint64_t result = qword_269DD8BF8;
  if (!qword_269DD8BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8BF8);
  }
  return result;
}

unint64_t sub_2542BB248()
{
  unint64_t result = qword_269DD8C00;
  if (!qword_269DD8C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C00);
  }
  return result;
}

unint64_t sub_2542BB2A0()
{
  unint64_t result = qword_269DD8C08;
  if (!qword_269DD8C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C08);
  }
  return result;
}

unint64_t sub_2542BB2F8()
{
  unint64_t result = qword_269DD8C10;
  if (!qword_269DD8C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C10);
  }
  return result;
}

unint64_t sub_2542BB350()
{
  unint64_t result = qword_269DD8C18;
  if (!qword_269DD8C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C18);
  }
  return result;
}

unint64_t sub_2542BB3A8()
{
  unint64_t result = qword_269DD8C20;
  if (!qword_269DD8C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C20);
  }
  return result;
}

unint64_t sub_2542BB400()
{
  unint64_t result = qword_269DD8C28;
  if (!qword_269DD8C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C28);
  }
  return result;
}

unint64_t sub_2542BB458()
{
  unint64_t result = qword_269DD8C30;
  if (!qword_269DD8C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C30);
  }
  return result;
}

unint64_t sub_2542BB4B0()
{
  unint64_t result = qword_269DD8C38;
  if (!qword_269DD8C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C38);
  }
  return result;
}

unint64_t sub_2542BB508()
{
  unint64_t result = qword_269DD8C40;
  if (!qword_269DD8C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C40);
  }
  return result;
}

unint64_t sub_2542BB560()
{
  unint64_t result = qword_269DD8C48;
  if (!qword_269DD8C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C48);
  }
  return result;
}

unint64_t sub_2542BB5B8()
{
  unint64_t result = qword_269DD8C50;
  if (!qword_269DD8C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C50);
  }
  return result;
}

unint64_t sub_2542BB610()
{
  unint64_t result = qword_269DD8C58;
  if (!qword_269DD8C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C58);
  }
  return result;
}

unint64_t sub_2542BB668()
{
  unint64_t result = qword_269DD8C60;
  if (!qword_269DD8C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C60);
  }
  return result;
}

unint64_t sub_2542BB6C0()
{
  unint64_t result = qword_269DD8C68;
  if (!qword_269DD8C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C68);
  }
  return result;
}

unint64_t sub_2542BB718()
{
  unint64_t result = qword_269DD8C70;
  if (!qword_269DD8C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C70);
  }
  return result;
}

unint64_t sub_2542BB770()
{
  unint64_t result = qword_269DD8C78;
  if (!qword_269DD8C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C78);
  }
  return result;
}

unint64_t sub_2542BB7C8()
{
  unint64_t result = qword_269DD8C80;
  if (!qword_269DD8C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C80);
  }
  return result;
}

unint64_t sub_2542BB820()
{
  unint64_t result = qword_269DD8C88;
  if (!qword_269DD8C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C88);
  }
  return result;
}

unint64_t sub_2542BB878()
{
  unint64_t result = qword_269DD8C90;
  if (!qword_269DD8C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C90);
  }
  return result;
}

unint64_t sub_2542BB8D0()
{
  unint64_t result = qword_269DD8C98;
  if (!qword_269DD8C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8C98);
  }
  return result;
}

unint64_t sub_2542BB928()
{
  unint64_t result = qword_269DD8CA0;
  if (!qword_269DD8CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CA0);
  }
  return result;
}

unint64_t sub_2542BB980()
{
  unint64_t result = qword_269DD8CA8;
  if (!qword_269DD8CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CA8);
  }
  return result;
}

unint64_t sub_2542BB9D8()
{
  unint64_t result = qword_269DD8CB0;
  if (!qword_269DD8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CB0);
  }
  return result;
}

unint64_t sub_2542BBA30()
{
  unint64_t result = qword_269DD8CB8;
  if (!qword_269DD8CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CB8);
  }
  return result;
}

unint64_t sub_2542BBA88()
{
  unint64_t result = qword_269DD8CC0;
  if (!qword_269DD8CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CC0);
  }
  return result;
}

unint64_t sub_2542BBAE0()
{
  unint64_t result = qword_269DD8CC8;
  if (!qword_269DD8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CC8);
  }
  return result;
}

unint64_t sub_2542BBB38()
{
  unint64_t result = qword_269DD8CD0;
  if (!qword_269DD8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CD0);
  }
  return result;
}

unint64_t sub_2542BBB90()
{
  unint64_t result = qword_269DD8CD8;
  if (!qword_269DD8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CD8);
  }
  return result;
}

unint64_t sub_2542BBBE8()
{
  unint64_t result = qword_269DD8CE0;
  if (!qword_269DD8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CE0);
  }
  return result;
}

unint64_t sub_2542BBC40()
{
  unint64_t result = qword_269DD8CE8;
  if (!qword_269DD8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8CE8);
  }
  return result;
}

uint64_t sub_2542BBC94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172656D6163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2542BBE30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616E6F6974617453 && a2 == 0xEA00000000007972;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69746567646946 && a2 == 0xE900000000000067 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696B6C6157 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2542BBFA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701011782 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625218 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684955464 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463656A624FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2542BC124(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644970756F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701011814 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73646E6168 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2542BC2B8()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542BC304()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542BC34C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E55 && a2 == 0xE700000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E61487466654CLL && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E61487468676952 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2542BC4B0()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542BC52C()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for DKCamera();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2542BC65C, 0, 0);
}

uint64_t sub_2542BC65C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
  uint64_t v6 = *(void *)(v4 + 48);
  BOOL v7 = v5;
  swift_retain();
  swift_retain();
  sub_25428C38C(v1);
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  sub_254286154(v1, v6 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_269DD7808);
  swift_release();
  if (v5)
  {
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[4];
    uint64_t v10 = v0[5];
    uint64_t v11 = *(void *)(v4 + 48);
    sub_2542720F4(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v8);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    uint64_t v13 = v0[7];
    if (v12 == 1)
    {

      sub_25425042C(v13, &qword_269DD7808);
      goto LABEL_33;
    }
    uint64_t v14 = v0[3];
    sub_2542502F0(v0[7], v0[6]);
    uint64_t v15 = &v7[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
    uint64_t v16 = sub_25436C7B0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    long long v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v49(v14, 0, 1, v16);
    uint64_t v18 = v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
    objc_super v19 = v7;
    sub_254286154(v14, v18, &qword_269DD7A40);
    uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
    *(void *)(*(void *)(v4 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = *(void *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = &v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
    if (*(void *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID + 8])
    {
      uint64_t v22 = *(void *)v21;
      unint64_t v23 = *(void *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID + 8];
    }
    else
    {
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
    *uint64_t v24 = v22;
    v24[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency + 8] & 1) == 0)
    {
      double v25 = *(double *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
      swift_retain();
      sub_254367448(v25);
      swift_release();
    }
    if (*((void *)v21 + 1))
    {
      uint64_t v26 = *(void *)v21;
      unint64_t v27 = *((void *)v21 + 1);
    }
    else
    {
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    char v28 = (void *)(*(void *)(v4 + 40)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_appID);
    *char v28 = v26;
    v28[1] = v27;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)&v19[v20];
    uint64_t v31 = *(void *)(v4 + 40);
    uint64_t v48 = v17;
    if (!v30
      || (uint64_t v32 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition,
          *(void *)(v31
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition)))
    {
      uint64_t v33 = v16;
      goto LABEL_28;
    }
    if (*(unsigned char *)v0[6] == 1)
    {
      if (*(void *)(v30 + 16))
      {
        uint64_t v34 = *(void *)(*(void *)(v0[2] + 32) + 80);
        if (*(void *)(v34 + 16) >= 2uLL)
        {
          double v35 = *(double *)(v30 + 32);
          double v36 = *(double *)(v34 + 40);
LABEL_27:
          uint64_t v33 = v16;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
          uint64_t v40 = swift_allocObject();
          *(_OWORD *)(v40 + 16) = xmmword_25436E6A0;
          *(double *)(v40 + 32) = v35;
          *(double *)(v40 + 40) = v36;
          *(void *)(v40 + 48) = 0;
          *(void *)(v31 + v32) = v40;
LABEL_28:
          uint64_t v41 = v0[6];
          uint64_t v42 = v0[3];
          uint64_t v43 = *(void *)(*(void *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations]
                          + 16);
          v49(v42, 1, 1, v33);
          if (v43) {
            double v44 = 1.0;
          }
          else {
            double v44 = 0.0;
          }
          swift_retain();
          swift_retain();
          sub_25435D340(0, 1, v42, v44);
          swift_release();
          swift_release();
          sub_25425042C(v42, &qword_269DD7A40);
          uint64_t v45 = sub_254272A08();

          sub_254250354(v41);
          int v46 = *(unsigned __int8 *)(v45 + 16);
          swift_release();
          if (v46 == 1) {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 24))(*(void *)(v4 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, *(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v33);
          }
          goto LABEL_33;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v37 = *(void *)(v0[2] + 32);
    uint64_t v38 = *(void *)(v30 + 16);
    if (*(unsigned char *)(v37 + 88) == 1)
    {
      if (!v38)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v39 = *(void *)(v37 + 80);
      if (*(void *)(v39 + 16) < 2uLL)
      {
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      double v35 = *(double *)(v30 + 32) + 3.14159265;
    }
    else
    {
      if (!v38)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v39 = *(void *)(v37 + 80);
      if (*(void *)(v39 + 16) < 2uLL)
      {
LABEL_41:
        __break(1u);
        return result;
      }
      double v35 = *(double *)(v30 + 32);
    }
    double v36 = -*(double *)(v39 + 40);
    goto LABEL_27;
  }
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(uint64_t))v0[1];
  return v47(1);
}

void sub_2542BCC1C()
{
}

uint64_t sub_2542BCC2C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2542BCD00()
{
  return type metadata accessor for DKPreprocessTask();
}

uint64_t type metadata accessor for DKPreprocessTask()
{
  uint64_t result = qword_269DD8CF0;
  if (!qword_269DD8CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2542BCD54()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2542BCD98(unint64_t a1, uint64_t a2, double a3)
{
  return sub_2542BCE64(a1, a2, (uint64_t *)sub_254278D2C, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_254258F04, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId, a3);
}

uint64_t sub_2542BCDDC(unint64_t a1, uint64_t a2, double a3)
{
  return sub_2542BCE64(a1, a2, (uint64_t *)sub_254278D54, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_254258F18, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId, a3);
}

uint64_t sub_2542BCE20(unint64_t a1, uint64_t a2, double a3)
{
  return sub_2542BCE64(a1, a2, (uint64_t *)sub_254278D7C, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_254259060, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect, (unint64_t)&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId, a3);
}

uint64_t sub_2542BCE64(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t, unint64_t), unint64_t a5, unint64_t a6, void *a7, double a8)
{
  unint64_t v13 = a1;
  uint64_t v85 = MEMORY[0x263F8EE88];
  uint64_t v84 = MEMORY[0x263F8EE88];
  if (a1 >> 62) {
    goto LABEL_114;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = v72)
  {
    uint64_t v82 = a2;
    unint64_t v80 = v13;
    uint64_t v78 = i;
    char v74 = a3;
    unint64_t v75 = (unint64_t)a2 >> 62;
    if (i)
    {
      uint64_t v15 = a2 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)a2 >> 62) {
        goto LABEL_118;
      }
      uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    objc_super v19 = (void *)MEMORY[0x263F8EE78];
LABEL_25:
    uint64_t v83 = v19;
    swift_bridgeObjectRetain_n();
    sub_2542BEBE0((uint64_t *)&v83);
    swift_bridgeObjectRelease_n();
    a6 = (unint64_t)v83;
    a2 = v83[2];
    if (!a2)
    {
      swift_release();
      unint64_t v13 = MEMORY[0x263F8EE78];
      uint64_t v47 = v78;
      if (!v78) {
        goto LABEL_80;
      }
LABEL_61:
      a6 = 0;
      a2 = v80 & 0xFFFFFFFFFFFFFF8;
      a5 = 24;
      uint64_t v48 = v47 & ~(v47 >> 63);
      while (1)
      {
        if (a6 == v48) {
          goto LABEL_105;
        }
        uint64_t v50 = v85;
        if (*(void *)(v85 + 16))
        {
          uint64_t v51 = sub_25436D8E0();
          uint64_t v52 = -1 << *(unsigned char *)(v50 + 32);
          unint64_t v53 = v51 & ~v52;
          if ((*(void *)(v50 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53))
          {
            uint64_t v54 = *(void *)(v50 + 48);
            if (*(void *)(v54 + 8 * v53) == a6) {
              goto LABEL_63;
            }
            uint64_t v55 = ~v52;
            while (1)
            {
              unint64_t v53 = (v53 + 1) & v55;
              if (((*(void *)(v50 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
                break;
              }
              if (*(void *)(v54 + 8 * v53) == a6) {
                goto LABEL_63;
              }
            }
          }
        }
        if ((v80 & 0xC000000000000001) != 0)
        {
          uint64_t v56 = MEMORY[0x25A275A00](a6, v80);
        }
        else
        {
          if (a6 >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_107;
          }
          uint64_t v56 = *(void *)(v80 + 32 + 8 * a6);
          swift_retain();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = a4(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v58 = *(void *)(v13 + 16);
        unint64_t v57 = *(void *)(v13 + 24);
        if (v58 >= v57 >> 1) {
          unint64_t v13 = a4(v57 > 1, v58 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v58 + 1;
        long long v49 = (void *)(v13 + 24 * v58);
        v49[5] = 0;
        v49[6] = 0;
        v49[4] = v56;
        a3 = &v85;
        sub_2542683B0((uint64_t *)&v83, a6);
LABEL_63:
        if (++a6 == v78) {
          goto LABEL_80;
        }
      }
    }
    unint64_t v26 = 0;
    a3 = v83 + 4;
    a7 = (void *)(v80 & 0xC000000000000001);
    unint64_t v79 = v82 & 0xC000000000000001;
    unint64_t v13 = MEMORY[0x263F8EE78];
    double v76 = v83 + 4;
    do
    {
      if (v26 >= *(void *)(a6 + 16)) {
        goto LABEL_104;
      }
      char v28 = (double *)&a3[3 * v26];
      double v29 = v28[2];
      if (v29 < a8)
      {
        unint64_t v30 = *(void *)v28;
        a5 = *((void *)v28 + 1);
        uint64_t v31 = v85;
        if (*(void *)(v85 + 16))
        {
          uint64_t v32 = sub_25436D8E0();
          uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
          unint64_t v34 = v32 & ~v33;
          if ((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
          {
            uint64_t v35 = *(void *)(v31 + 48);
            if (*(void *)(v35 + 8 * v34) == v30) {
              goto LABEL_28;
            }
            uint64_t v36 = ~v33;
            while (1)
            {
              unint64_t v34 = (v34 + 1) & v36;
              if (((*(void *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
                break;
              }
              if (*(void *)(v35 + 8 * v34) == v30) {
                goto LABEL_28;
              }
            }
          }
        }
        uint64_t v37 = v84;
        if (*(void *)(v84 + 16))
        {
          uint64_t v38 = sub_25436D8E0();
          uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
          unint64_t v40 = v38 & ~v39;
          if ((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40))
          {
            uint64_t v41 = *(void *)(v37 + 48);
            if (*(void *)(v41 + 8 * v40) == a5) {
              goto LABEL_28;
            }
            uint64_t v42 = ~v39;
            while (1)
            {
              unint64_t v40 = (v40 + 1) & v42;
              if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
                break;
              }
              if (*(void *)(v41 + 8 * v40) == a5) {
                goto LABEL_28;
              }
            }
          }
        }
        if (a7)
        {
          uint64_t v43 = MEMORY[0x25A275A00](v30, v80);
          if (!v79)
          {
LABEL_49:
            if ((a5 & 0x8000000000000000) != 0) {
              goto LABEL_112;
            }
            if (a5 >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_113;
            }
            uint64_t v44 = *(void *)(v82 + 32 + 8 * a5);
            swift_retain();
            goto LABEL_52;
          }
        }
        else
        {
          if ((v30 & 0x8000000000000000) != 0) {
            goto LABEL_110;
          }
          if (v30 >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_111;
          }
          uint64_t v43 = *(void *)(v80 + 32 + 8 * v30);
          swift_retain();
          if (!v79) {
            goto LABEL_49;
          }
        }
        uint64_t v44 = MEMORY[0x25A275A00](a5, v82);
LABEL_52:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = a4(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v46 = *(void *)(v13 + 16);
        unint64_t v45 = *(void *)(v13 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v13 = a4(v45 > 1, v46 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v46 + 1;
        unint64_t v27 = v13 + 24 * v46;
        *(void *)(v27 + 32) = v43;
        *(void *)(v27 + 40) = v44;
        *(double *)(v27 + 48) = v29;
        sub_2542683B0((uint64_t *)&v83, v30);
        sub_2542683B0((uint64_t *)&v83, a5);
        a3 = v76;
      }
LABEL_28:
      ++v26;
    }
    while (v26 != a2);
    swift_release();
    uint64_t v47 = v78;
    if (v78) {
      goto LABEL_61;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    if (!v75)
    {
      a2 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      break;
    }
LABEL_116:
    a3 = (uint64_t *)v82;
    swift_bridgeObjectRetain();
    a2 = sub_25436D530();
    swift_bridgeObjectRelease();
    if ((a2 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_118:
    if (a2 < 0) {
      uint64_t v72 = a2;
    }
    else {
      uint64_t v72 = v15;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v16 < 0)
    {
      __break(1u);
      swift_release();
      __break(1u);
      continue;
    }
    uint64_t i = v78;
LABEL_6:
    unint64_t v17 = 0;
    unint64_t v18 = v13 & 0xC000000000000001;
    uint64_t v77 = v13 & 0xFFFFFFFFFFFFFF8;
    unint64_t v13 = a2 & 0xC000000000000001;
    objc_super v19 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (v17 == i)
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
      if (v16) {
        break;
      }
LABEL_7:
      ++v17;
      uint64_t i = v78;
      if (v17 == v78) {
        goto LABEL_25;
      }
    }
    if (v18 || v17 < *(void *)(v77 + 16))
    {
      uint64_t v20 = 0;
      while (1)
      {
        if (v18)
        {
          MEMORY[0x25A275A00](v17, v80);
          if (!v13) {
            goto LABEL_17;
          }
        }
        else
        {
          swift_retain();
          if (!v13)
          {
LABEL_17:
            uint64_t v21 = *(void *)(a2 + 8 * v20 + 32);
            swift_retain();
            goto LABEL_18;
          }
        }
        uint64_t v21 = MEMORY[0x25A275A00](v20, a2);
LABEL_18:
        double v22 = sub_2542BE2E4(v21, (void *)a5, (void *)a6, a7);
        swift_release();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          objc_super v19 = sub_254258EF8(0, v19[2] + 1, 1, v19);
        }
        unint64_t v24 = v19[2];
        unint64_t v23 = v19[3];
        a3 = (uint64_t *)(v24 + 1);
        if (v24 >= v23 >> 1) {
          objc_super v19 = sub_254258EF8((void *)(v23 > 1), v24 + 1, 1, v19);
        }
        double v25 = (double *)&v19[3 * v24];
        *((void *)v25 + 4) = v17;
        *((void *)v25 + 5) = v20;
        VTPixelTransferSessionRef v19[2] = a3;
        v25[6] = v22;
        ++v20;
        a2 = v82;
        if (v16 == v20) {
          goto LABEL_7;
        }
      }
    }
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v72 < 0)
    {
      __break(1u);
      goto LABEL_116;
    }
  }
  if (a2)
  {
    unint64_t v59 = 0;
    a6 = v82 & 0xFFFFFFFFFFFFFF8;
    a5 = v82 + 32;
    do
    {
      if (v59 == a2) {
        goto LABEL_106;
      }
      uint64_t v61 = v84;
      if (*(void *)(v84 + 16))
      {
        uint64_t v62 = sub_25436D8E0();
        uint64_t v63 = -1 << *(unsigned char *)(v61 + 32);
        unint64_t v64 = v62 & ~v63;
        if ((*(void *)(v61 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64))
        {
          uint64_t v65 = *(void *)(v61 + 48);
          if (*(void *)(v65 + 8 * v64) == v59) {
            goto LABEL_85;
          }
          uint64_t v66 = ~v63;
          while (1)
          {
            unint64_t v64 = (v64 + 1) & v66;
            if (((*(void *)(v61 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
              break;
            }
            if (*(void *)(v65 + 8 * v64) == v59) {
              goto LABEL_85;
            }
          }
        }
      }
      if ((v82 & 0xC000000000000001) != 0)
      {
        uint64_t v67 = MEMORY[0x25A275A00](v59, v82);
      }
      else
      {
        if (v59 >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_108;
        }
        uint64_t v67 = *(void *)(a5 + 8 * v59);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = a4(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v69 = *(void *)(v13 + 16);
      unint64_t v68 = *(void *)(v13 + 24);
      if (v69 >= v68 >> 1) {
        unint64_t v13 = a4(v68 > 1, v69 + 1, 1, v13);
      }
      *(void *)(v13 + 16) = v69 + 1;
      uint64_t v60 = (void *)(v13 + 24 * v69);
      v60[4] = 0;
      v60[5] = v67;
      v60[6] = 0;
      a3 = &v84;
      sub_2542683B0((uint64_t *)&v83, v59);
LABEL_85:
      ++v59;
    }
    while (v59 != a2);
  }
  uint64_t v70 = ((uint64_t (*)(unint64_t))v74)(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v70;
}

uint64_t static DKTrackerUtils.greedyAssociation<A, B>(left:right:threshold:costFunction:)(void (**a1)(char *, void, uint64_t, uint64_t), uint64_t a2, double (*a3)(char *, char *), double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v122 = a3;
  uint64_t v125 = a2;
  uint64_t v11 = sub_25436D130();
  uint64_t v12 = sub_25436D130();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  char v117 = (char *)&v106 - v14;
  uint64_t v120 = v12;
  uint64_t v108 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v116 = (char *)&v106 - v16;
  uint64_t v107 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v17);
  double v115 = (char *)&v106 - v18;
  uint64_t v127 = a7;
  uint64_t v110 = *(void *)(a7 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = MEMORY[0x263F8EE88];
  uint64_t v130 = MEMORY[0x263F8EE88];
  uint64_t v119 = v25;
  v128[1] = sub_25436CA90();
  unint64_t v123 = a1;
  uint64_t v126 = a6;
  uint64_t v26 = MEMORY[0x25A275560](a1, a6);
  if (v26 < 0)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v27 = v26;
  uint64_t v121 = v26;
  uint64_t v118 = v11;
  if (!v26)
  {
    uint64_t v31 = (void *)MEMORY[0x263F8EE78];
LABEL_16:
    v128[0] = (uint64_t)v31;
    swift_bridgeObjectRetain_n();
    sub_2542BEBE0(v128);
    swift_bridgeObjectRelease_n();
    uint64_t v39 = v128[0];
    uint64_t v40 = *(void *)(v128[0] + 16);
    if (v40)
    {
      unint64_t v41 = 0;
      uint64_t v42 = v128[0] + 32;
      uint64_t v114 = (void (**)(char *, void, uint64_t, uint64_t))(v109 + 56);
      char v113 = (void (**)(char *, void, uint64_t, uint64_t))(v110 + 56);
      double v112 = (void (**)(char *, char *, uint64_t))(v107 + 32);
      uint64_t v111 = (void (**)(char *, char *, uint64_t))(v108 + 32);
      do
      {
        if (v41 >= *(void *)(v39 + 16)) {
          goto LABEL_63;
        }
        uint64_t v54 = v42 + 24 * v41;
        double v55 = *(double *)(v54 + 16);
        if (v55 < a4)
        {
          uint64_t v57 = *(void *)v54;
          uint64_t v56 = *(double (**)(char *, char *))(v54 + 8);
          uint64_t v58 = v130;
          if (*(void *)(v130 + 16))
          {
            uint64_t v59 = sub_25436D8E0();
            uint64_t v60 = -1 << *(unsigned char *)(v58 + 32);
            unint64_t v61 = v59 & ~v60;
            if ((*(void *)(v58 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61))
            {
              uint64_t v62 = *(void *)(v58 + 48);
              if (*(void *)(v62 + 8 * v61) == v57) {
                goto LABEL_19;
              }
              uint64_t v63 = ~v60;
              while (1)
              {
                unint64_t v61 = (v61 + 1) & v63;
                if (((*(void *)(v58 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
                  break;
                }
                if (*(void *)(v62 + 8 * v61) == v57) {
                  goto LABEL_19;
                }
              }
            }
          }
          uint64_t v64 = v129;
          if (*(void *)(v129 + 16))
          {
            uint64_t v65 = sub_25436D8E0();
            uint64_t v66 = -1 << *(unsigned char *)(v64 + 32);
            unint64_t v67 = v65 & ~v66;
            if ((*(void *)(v64 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67))
            {
              uint64_t v68 = *(void *)(v64 + 48);
              if (*(double (**)(char *, char *))(v68 + 8 * v67) == v56) {
                goto LABEL_19;
              }
              uint64_t v69 = ~v66;
              while (1)
              {
                unint64_t v67 = (v67 + 1) & v69;
                if (((*(void *)(v64 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v67) & 1) == 0) {
                  break;
                }
                if (*(double (**)(char *, char *))(v68 + 8 * v67) == v56) {
                  goto LABEL_19;
                }
              }
            }
          }
          uint64_t v43 = v115;
          uint64_t v44 = v126;
          sub_25436CEB0();
          (*v114)(v43, 0, 1, v44);
          uint64_t v124 = v57;
          uint64_t v45 = v42;
          uint64_t v46 = v40;
          uint64_t v47 = v116;
          uint64_t v48 = v127;
          sub_25436CEB0();
          (*v113)(v47, 0, 1, v48);
          char v122 = v56;
          long long v49 = v117;
          uint64_t v50 = &v117[*(int *)(v119 + 48)];
          uint64_t v51 = v39;
          uint64_t v52 = *(int *)(v119 + 64);
          (*v112)(v117, v43, v118);
          unint64_t v53 = v47;
          uint64_t v40 = v46;
          uint64_t v42 = v45;
          (*v111)(v50, v53, v120);
          *(double *)&v49[v52] = v55;
          sub_25436CEA0();
          uint64_t v27 = v121;
          sub_25436CE80();
          sub_2542683B0(v128, v124);
          sub_2542683B0(v128, (uint64_t)v122);
          uint64_t v39 = v51;
        }
LABEL_19:
        ++v41;
      }
      while (v41 != v40);
    }
    swift_release();
    if (v27)
    {
      uint64_t v70 = 0;
      char v122 = (double (*)(char *, char *))(v109 + 56);
      char v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56);
      uint64_t v72 = (void (**)(char *, char *, uint64_t))(v107 + 32);
      unsigned int v73 = (void (**)(char *, char *, uint64_t))(v108 + 32);
      uint64_t v124 = v27 & ~(v27 >> 63);
      char v74 = v115;
      unint64_t v75 = v116;
      double v76 = v117;
      do
      {
        if (v70 == v124) {
          goto LABEL_64;
        }
        uint64_t v80 = v130;
        if (*(void *)(v130 + 16))
        {
          uint64_t v81 = sub_25436D8E0();
          uint64_t v82 = -1 << *(unsigned char *)(v80 + 32);
          unint64_t v83 = v81 & ~v82;
          if ((*(void *)(v80 + 56 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83))
          {
            uint64_t v84 = *(void *)(v80 + 48);
            if (*(void *)(v84 + 8 * v83) == v70) {
              goto LABEL_39;
            }
            uint64_t v85 = ~v82;
            while (1)
            {
              unint64_t v83 = (v83 + 1) & v85;
              if (((*(void *)(v80 + 56 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83) & 1) == 0) {
                break;
              }
              if (*(void *)(v84 + 8 * v83) == v70) {
                goto LABEL_39;
              }
            }
          }
        }
        uint64_t v77 = v126;
        sub_25436CEB0();
        (*(void (**)(char *, void, uint64_t, uint64_t))v122)(v74, 0, 1, v77);
        (*v71)(v75, 1, 1, v127);
        uint64_t v78 = &v76[*(int *)(v119 + 48)];
        uint64_t v79 = *(int *)(v119 + 64);
        (*v72)(v76, v74, v118);
        (*v73)(v78, v75, v120);
        *(void *)&v76[v79] = 0;
        uint64_t v27 = v121;
        sub_25436CEA0();
        sub_25436CE80();
        sub_2542683B0(v128, v70);
LABEL_39:
        ++v70;
      }
      while (v70 != v27);
    }
    swift_bridgeObjectRelease();
    uint64_t v86 = MEMORY[0x25A275560](v125, v127);
    if (v86 < 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v87 = v86;
    if (!v86)
    {
LABEL_61:
      swift_getTupleTypeMetadata3();
      uint64_t v104 = sub_25436D450();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v104;
    }
    uint64_t v88 = 0;
    uint64_t v124 = v109 + 56;
    unint64_t v123 = (void (**)(char *, void, uint64_t, uint64_t))(v110 + 56);
    uint64_t v89 = (void (**)(char *, char *, uint64_t))(v107 + 32);
    unint64_t v90 = (void (**)(char *, char *, uint64_t))(v108 + 32);
    uint64_t v92 = v115;
    uint64_t v91 = v116;
    uint64_t v93 = v119;
    uint64_t v94 = v117;
    while (1)
    {
      if (v88 == v87) {
        goto LABEL_65;
      }
      uint64_t v98 = v129;
      if (*(void *)(v129 + 16))
      {
        uint64_t v99 = sub_25436D8E0();
        uint64_t v100 = -1 << *(unsigned char *)(v98 + 32);
        unint64_t v101 = v99 & ~v100;
        if ((*(void *)(v98 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101))
        {
          uint64_t v102 = *(void *)(v98 + 48);
          if (*(void *)(v102 + 8 * v101) == v88) {
            goto LABEL_52;
          }
          uint64_t v103 = ~v100;
          while (1)
          {
            unint64_t v101 = (v101 + 1) & v103;
            if (((*(void *)(v98 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v101) & 1) == 0) {
              break;
            }
            if (*(void *)(v102 + 8 * v101) == v88) {
              goto LABEL_52;
            }
          }
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v124)(v92, 1, 1, v126);
      uint64_t v95 = v127;
      sub_25436CEB0();
      (*v123)(v91, 0, 1, v95);
      uint64_t v96 = &v94[*(int *)(v93 + 48)];
      uint64_t v97 = *(int *)(v93 + 64);
      (*v89)(v94, v92, v118);
      (*v90)(v96, v91, v120);
      *(void *)&v94[v97] = 0;
      sub_25436CEA0();
      sub_25436CE80();
      sub_2542683B0(v128, v88);
LABEL_52:
      if (++v88 == v87) {
        goto LABEL_61;
      }
    }
  }
  uint64_t v124 = MEMORY[0x25A275560](v125, v127);
  if ((v124 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = 0;
    double v29 = (void (**)(char *, uint64_t))(v110 + 8);
    unint64_t v30 = (void (**)(char *, uint64_t))(v109 + 8);
    uint64_t v31 = (void *)MEMORY[0x263F8EE78];
    while (v28 != v27)
    {
      if (v124)
      {
        for (uint64_t i = 0; i != v124; ++i)
        {
          uint64_t v33 = v126;
          sub_25436CEB0();
          uint64_t v34 = v127;
          sub_25436CEB0();
          double v35 = v122(v24, v21);
          (*v29)(v21, v34);
          (*v30)(v24, v33);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v31 = sub_254258EF8(0, v31[2] + 1, 1, v31);
          }
          unint64_t v37 = v31[2];
          unint64_t v36 = v31[3];
          if (v37 >= v36 >> 1) {
            uint64_t v31 = sub_254258EF8((void *)(v36 > 1), v37 + 1, 1, v31);
          }
          uint64_t v38 = (double *)&v31[3 * v37];
          *((void *)v38 + 4) = v28;
          *((void *)v38 + 5) = i;
          v31[2] = v37 + 1;
          v38[6] = v35;
        }
      }
      ++v28;
      uint64_t v27 = v121;
      if (v28 == v121) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
LABEL_68:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

double sub_2542BE2E4(uint64_t a1, void *a2, void *a3, void *a4)
{
  sub_25435C720((uint64_t)v27);
  sub_25425E0DC((uint64_t)v27, (uint64_t)&v28, &qword_269DD7BC0);
  if (v29) {
    return 1.79769313e308;
  }
  double v11 = CGRect.minSizeNormalizedDistance(rect2:)(*(__C::CGRect *)(a1 + *a2));
  uint64_t v12 = qword_269DDAA20;
  double v13 = *(double *)(*(void *)(v4 + qword_269DDAA20) + 48);
  uint64_t v26 = *(void *)(a1 + *a3);
  swift_bridgeObjectRetain_n();
  sub_2542E4338(&v26);
  uint64_t v14 = *(void *)(v26 + 16);
  double v9 = v11 / v13;
  if (v14)
  {
    uint64_t v15 = v26 + 16 * v14;
    uint64_t v16 = *(void *)(v15 + 16);
    double v17 = *(double *)(v15 + 24);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v18 = *(double **)(v4 + v12);
    double v19 = v18[20];
    if (v19 < v17 && v19 < *(double *)(v4 + qword_269DDAA00 + 8) && v16 != -1)
    {
      uint64_t v21 = *(void *)(v4 + qword_269DDAA00);
      if (v21 != -1)
      {
        if (v21 == v16)
        {
          double v9 = v9 - v18[4];
        }
        else
        {
          unint64_t v24 = (uint64_t *)(a1 + *a4);
          if ((v24[1] & 1) != 0 || (uint64_t v25 = *v24, v25 != -1) && *(void *)(v4 + qword_269DDA9F8) != v25) {
            double v9 = v9 + v18[21];
          }
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v22 = (uint64_t *)(a1 + *a4);
  if ((v22[1] & 1) == 0)
  {
    uint64_t v23 = *v22;
    if (v23 != -1 && *(void *)(v4 + qword_269DDA9F8) == v23) {
      return v9 - *(double *)(*(void *)(v4 + v12) + 40);
    }
  }
  return v9;
}

uint64_t DKTrackerUtils.deinit()
{
  return v0;
}

uint64_t DKTrackerUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2542BE50C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_254373960;
  *(void *)(v0 + 32) = CGColorCreateGenericRGB(1.0, 0.0, 0.0, 1.0);
  *(void *)(v0 + 40) = CGColorCreateGenericRGB(0.0, 1.0, 0.0, 1.0);
  *(void *)(v0 + 48) = CGColorCreateGenericRGB(0.0, 0.0, 1.0, 1.0);
  *(void *)(v0 + 56) = CGColorCreateGenericRGB(1.0, 1.0, 0.0, 1.0);
  *(void *)(v0 + 64) = CGColorCreateGenericRGB(0.5, 0.0, 0.5, 1.0);
  *(void *)(v0 + 72) = CGColorCreateGenericRGB(1.0, 0.5, 0.0, 1.0);
  *(void *)(v0 + 80) = CGColorCreateGenericRGB(0.0, 1.0, 1.0, 1.0);
  *(void *)(v0 + 88) = CGColorCreateGenericRGB(1.0, 0.0, 1.0, 1.0);
  uint64_t result = sub_25436CDE0();
  qword_269DD8D08 = v0;
  return result;
}

uint64_t static DKRandomColorGenerator.predefinedColors.getter()
{
  if (qword_269DD7680 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t DKUUIDToNumberConversion.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_2542647F0(MEMORY[0x263F8EE78]);
  *(void *)(v0 + 24) = 0;
  return v0;
}

uint64_t DKRandomColorGenerator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for DKUUIDToNumberConversion();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_2542647F0(MEMORY[0x263F8EE78]);
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t DKRandomColorGenerator.init()()
{
  type metadata accessor for DKUUIDToNumberConversion();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_2542647F0(MEMORY[0x263F8EE78]);
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

id sub_2542BE774(uint64_t a1, uint64_t a2)
{
  if (qword_269DD7680 != -1) {
    swift_once();
  }
  if ((unint64_t)qword_269DD8D08 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((qword_269DD8D08 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v5 = sub_2542BE8F8(a1, a2, v4);
  if ((qword_269DD8D08 & 0xC000000000000001) != 0)
  {
LABEL_17:
    JUMPOUT(0x25A275A00);
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= *(void *)((qword_269DD8D08 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = *(void **)(qword_269DD8D08 + 8 * v5 + 32);
  return v6;
}

uint64_t DKRandomColorGenerator.deinit()
{
  swift_release();
  return v0;
}

uint64_t DKRandomColorGenerator.__deallocating_deinit()
{
  return sub_254277314(MEMORY[0x263F8EED8]);
}

uint64_t DKUUIDToNumberConversion.init()()
{
  *(void *)(v0 + 16) = sub_2542647F0(MEMORY[0x263F8EE78]);
  *(void *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_2542BE8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v3 + 16);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_254351890(a1);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
  }
  swift_retain();
  uint64_t v16 = sub_2542BF648(a2, v4);
  swift_release();
  uint64_t v17 = sub_25427F6F4((uint64_t)v16);
  uint64_t result = swift_bridgeObjectRelease();
  if (a3)
  {
    uint64_t v34 = a1;
    uint64_t v35 = v9;
    uint64_t v36 = v8;
    uint64_t v19 = 0;
    uint64_t v20 = v17 + 56;
    if (a3 <= 1) {
      uint64_t v21 = 1;
    }
    else {
      uint64_t v21 = a3;
    }
    while (1)
    {
      uint64_t v22 = *(void *)(v4 + 24);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        break;
      }
      if (v24 == 0x8000000000000000 && a3 == -1) {
        goto LABEL_27;
      }
      uint64_t v15 = v24 % a3;
      *(void *)(v4 + 24) = v24 % a3;
      if (!*(void *)(v17 + 16)) {
        goto LABEL_23;
      }
      uint64_t result = sub_25436D8E0();
      uint64_t v26 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v27 = result & ~v26;
      if (((*(void *)(v20 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_23;
      }
      uint64_t v28 = *(void *)(v17 + 48);
      if (*(void *)(v28 + 8 * v27) != v15)
      {
        uint64_t v29 = ~v26;
        while (1)
        {
          unint64_t v27 = (v27 + 1) & v29;
          if (((*(void *)(v20 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v27) == v15) {
            goto LABEL_10;
          }
        }
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t v30 = v35;
        uint64_t v31 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v11, v34, v36);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v37 = *(void *)(v4 + 16);
        *(void *)(v4 + 16) = 0x8000000000000000;
        sub_254252500(v15, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
        *(void *)(v4 + 16) = v37;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
        return v15;
      }
LABEL_10:
      if (++v19 == v21)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DKUUIDToNumberConversion.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKUUIDToNumberConversion.__deallocating_deinit()
{
  return sub_254277314(MEMORY[0x263F8EEA0]);
}

uint64_t sub_2542BEBE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2543453C0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2542BEC70(v5);
  *a1 = v2;
  return result;
}

uint64_t type metadata accessor for DKUUIDToNumberConversion()
{
  return self;
}

uint64_t sub_2542BEC70(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v86 = *a1;
      uint64_t v87 = *a1 + 16;
      uint64_t v88 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v90 = *(double *)(v86 + 24 * i + 16);
        uint64_t v91 = v88;
        uint64_t v92 = v87;
        do
        {
          if (v90 >= *(double *)v92) {
            break;
          }
          if (!v86) {
            goto LABEL_141;
          }
          long long v93 = *(_OWORD *)(v92 + 8);
          *(_OWORD *)(v92 + 8) = *(_OWORD *)(v92 - 16);
          *(void *)(v92 + 24) = *(void *)v92;
          *(_OWORD *)(v92 - 16) = v93;
          *(double *)uint64_t v92 = v90;
          v92 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        v87 += 24;
        --v88;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v103 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v95 = v12;
      uint64_t v105 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v103;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v96) {
            goto LABEL_145;
          }
          uint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_2542BF388((char *)(v96 + 24 * v99), (char *)(v96 + 24 * *(void *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_254345370((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_134;
          }
          unint64_t v101 = &v98[16 * v97 + 32];
          *(void *)unint64_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_135;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          uint64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D18);
    uint64_t v8 = sub_25436CE40();
    *(void *)(v8 + 16) = v7;
    uint64_t v105 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v104 = *a1 + 64;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v6;
  uint64_t v107 = v3;
  uint64_t v108 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 24 * v10 + 16);
      double v16 = *(double *)(v11 + 24 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (double *)(v104 + 24 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = v11 + v20;
              uint64_t v26 = *(void *)(v11 + v21 + 16);
              long long v27 = *(_OWORD *)(v11 + v21);
              uint64_t v28 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v28;
              *(_OWORD *)(v25 - 24) = v27;
              *(void *)(v25 - 8) = v26;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = (long long *)(v11 + 24 * v10);
      do
      {
        double v31 = *(double *)(v11 + 24 * v10 + 16);
        uint64_t v32 = v14;
        uint64_t v33 = (double *)v30;
        do
        {
          if (v31 >= *(v33 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          long long v34 = *(_OWORD *)v33;
          *(_OWORD *)uint64_t v33 = *(_OWORD *)(v33 - 3);
          v33[2] = *(v33 - 1);
          *(v33 - 1) = v31;
          *(_OWORD *)(v33 - 3) = v34;
          v33 -= 3;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        uint64_t v30 = (long long *)((char *)v30 + 24);
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_254344E28(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v36 = *((void *)v12 + 2);
    unint64_t v35 = *((void *)v12 + 3);
    unint64_t v13 = v36 + 1;
    uint64_t v11 = v108;
    if (v36 >= v35 >> 1)
    {
      uint64_t v85 = sub_254344E28((char *)(v35 > 1), v36 + 1, 1, v12);
      uint64_t v11 = v108;
      uint64_t v12 = v85;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v37 = v12 + 32;
    uint64_t v38 = &v12[16 * v36 + 32];
    *(void *)uint64_t v38 = v14;
    *((void *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        unint64_t v39 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v44 = &v37[16 * v13];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_120;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_121;
          }
          unint64_t v51 = v13 - 2;
          uint64_t v52 = &v37[16 * v13 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_123;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_126;
          }
          if (v56 >= v47)
          {
            char v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_130;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_77;
          }
          uint64_t v41 = *((void *)v12 + 4);
          uint64_t v40 = *((void *)v12 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_122;
        }
        unint64_t v51 = v13 - 2;
        uint64_t v57 = &v37[16 * v13 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_125;
        }
        uint64_t v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_128;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_129;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_83:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v62) {
          goto LABEL_124;
        }
        uint64_t v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_127;
        }
        if (v73 < v61) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v79 = v12;
        uint64_t v80 = &v37[16 * v78];
        uint64_t v81 = *(void *)v80;
        uint64_t v82 = &v37[16 * v39];
        uint64_t v83 = *((void *)v82 + 1);
        sub_2542BF388((char *)(v11 + 24 * *(void *)v80), (char *)(v11 + 24 * *(void *)v82), v11 + 24 * v83, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v83 < v81) {
          goto LABEL_117;
        }
        if (v39 > *((void *)v79 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v80 = v81;
        *(void *)&v37[16 * v78 + 8] = v83;
        unint64_t v84 = *((void *)v79 + 2);
        if (v39 >= v84) {
          goto LABEL_119;
        }
        uint64_t v12 = v79;
        unint64_t v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((void *)v79 + 2) = v84 - 1;
        uint64_t v11 = v108;
        if (v84 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v106;
    uint64_t v3 = v107;
    if (v10 >= v107)
    {
      uint64_t v9 = v105;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_2542BF388(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v17 = &v4[24 * v11];
      uint64_t v24 = v17;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        do
        {
          double v19 = (char *)(v18 + 24);
          if (*((double *)v17 - 1) >= *((double *)v6 - 1))
          {
            uint64_t v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v22 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            uint64_t v20 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v20 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v20;
              *(void *)(v18 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v18 = v21;
            }
            uint64_t v26 = v6 - 24;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_25434509C(&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (*((double *)v6 + 2) >= *((double *)v13 + 2))
        {
          uint64_t v4 = v13 + 24;
          double v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          uint64_t v14 = v6 + 24;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        *((void *)v7 + 2) = *((void *)v15 + 2);
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v25 = v4;
        uint64_t v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

void *sub_2542BF648(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v28[2] = a1;
    v28[3] = v2;
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    long long v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    long long v34 = v13;
    double v31 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v32 = v15;
    uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
    swift_bridgeObjectRetain();
    unint64_t v36 = (void *)MEMORY[0x263F8EE78];
    v28[1] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v28[4] = v12;
    while (1)
    {
      v34(v10, v14, v4);
      uint64_t v17 = *v16;
      (*v16)(v10, 0, 1, v4);
      if ((*v33)(v10, 1, v4) == 1) {
        goto LABEL_17;
      }
      (*v31)(v7, v10, v4);
      uint64_t v18 = *(void *)(v35 + 16);
      if (*(void *)(v18 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_254351890((uint64_t)v7);
        if (v20)
        {
          uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
          swift_bridgeObjectRelease();
          (*v30)(v7, v4);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v29 = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v36 = sub_254259A0C(0, v36[2] + 1, 1, v36);
          }
          unint64_t v24 = v36[2];
          unint64_t v23 = v36[3];
          if (v24 >= v23 >> 1) {
            unint64_t v36 = sub_254259A0C((void *)(v23 > 1), v24 + 1, 1, v36);
          }
          uint64_t v25 = v36;
          v36[2] = v24 + 1;
          v25[v24 + 4] = v29;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      (*v30)(v7, v4);
LABEL_5:
      v14 += v32;
      if (!--v11)
      {
        v17(v10, 1, 1, v4);
        goto LABEL_17;
      }
    }
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  unint64_t v36 = (void *)MEMORY[0x263F8EE78];
  v26(v10, 1, 1, v4);
LABEL_17:
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2542BF998(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v186 = a3;
  uint64_t v7 = type metadata accessor for DKPersonGroupFilter.Track(0);
  uint64_t v183 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v167 - v11;
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v203 = (char *)&v167 - v18;
  MEMORY[0x270FA5388](v19);
  CGFloat v213 = (char *)&v167 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v21 - 8);
  unint64_t v23 = (char *)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF0);
  uint64_t v180 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  uint64_t v170 = (uint64_t)&v167 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v178 = (uint64_t)&v167 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v179 = (uint64_t)&v167 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v168 = (uint64_t)&v167 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v171 = (uint64_t)&v167 - v32;
  MEMORY[0x270FA5388](v33);
  char v173 = (char *)&v167 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v172 = (char *)&v167 - v36;
  MEMORY[0x270FA5388](v37);
  char v175 = (char *)&v167 - v38;
  MEMORY[0x270FA5388](v39);
  id v174 = (char *)&v167 - v40;
  uint64_t v217 = MEMORY[0x263F8EE88];
  uint64_t v218 = MEMORY[0x263F8EE88];
  uint64_t v176 = a1;
  unint64_t v41 = *(void *)(a1 + 16);
  uint64_t v177 = a2;
  uint64_t v197 = v7;
  unint64_t v182 = v41;
  if (v41)
  {
    uint64_t v196 = 0;
    uint64_t v195 = *(void *)(a2 + 16);
    CGFloat v214 = (void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    unint64_t v207 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    double v205 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v211 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v169 = v14;
    uint64_t v42 = (void (**)(char *, uint64_t))(v14 + 8);
    char v43 = (void *)MEMORY[0x263F8EE78];
    long long v187 = xmmword_25436E690;
    uint64_t v185 = v9;
    char v184 = v12;
    double v204 = v23;
    while (!v195)
    {
LABEL_3:
      if (++v196 == v182) {
        goto LABEL_51;
      }
    }
    uint64_t v44 = 0;
    unint64_t v45 = (*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
    uint64_t v194 = *(void *)(v183 + 72);
    uint64_t v46 = v176 + v45 + v194 * v196;
    uint64_t v193 = v177 + v45;
    uint64_t v47 = *(int *)(v7 + 20);
    uint64_t v188 = v46;
    uint64_t v192 = v46 + v47;
    uint64_t v48 = *(unsigned __int8 *)(v169 + 80);
    uint64_t v215 = *(void *)(v169 + 72);
    uint64_t v191 = (v48 + 32) & ~v48;
    uint64_t v190 = v191 + 2 * v215;
    uint64_t v189 = v48 | 7;
    while (1)
    {
      uint64_t v202 = v43;
      uint64_t v201 = v44 + 1;
      uint64_t v200 = v44;
      uint64_t v49 = v193 + v44 * v194;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF8);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v187;
      uint64_t v198 = v50;
      uint64_t v51 = v50 + v191;
      uint64_t v52 = *v214;
      (*v214)(v50 + v191, v192, v13);
      uint64_t v208 = v51;
      uint64_t v53 = *(int *)(v7 + 20);
      uint64_t v199 = v49;
      v52(v51 + v215, v49 + v53, v13);
      uint64_t v209 = sub_2542C1C20(&qword_269DD7E70);
      uint64_t v54 = sub_25436CF60();
      int v55 = 0;
      uint64_t v56 = 0;
      while (1)
      {
        int v57 = v55;
        v52((uint64_t)v23, v208 + v56 * v215, v13);
        uint64_t v206 = *v207;
        v206(v23, 0, 1, v13);
        if ((*v205)(v23, 1, v13) == 1) {
          break;
        }
        int v212 = v57;
        uint64_t v210 = *v211;
        v210(v213, v23, v13);
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_25436CB40();
        uint64_t v59 = -1 << *(unsigned char *)(v54 + 32);
        unint64_t v60 = v58 & ~v59;
        if ((*(void *)(v54 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60))
        {
          uint64_t v61 = ~v59;
          while (1)
          {
            v52((uint64_t)v16, *(void *)(v54 + 48) + v60 * v215, v13);
            sub_2542C1C20((unint64_t *)&qword_269DD7E78);
            char v62 = sub_25436CBB0();
            uint64_t v63 = *v42;
            (*v42)(v16, v13);
            if (v62) {
              break;
            }
            unint64_t v60 = (v60 + 1) & v61;
            if (((*(void *)(v54 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
              goto LABEL_14;
            }
          }
          swift_bridgeObjectRelease();
          v63(v213, v13);
        }
        else
        {
LABEL_14:
          swift_bridgeObjectRelease();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v65 = v203;
          v52((uint64_t)v203, (uint64_t)v213, v13);
          double v216 = (char *)v54;
          if (*(void *)(v54 + 24) <= *(void *)(v54 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_2542F666C();
            }
            else {
              sub_2542F891C();
            }
            uint64_t v66 = (uint64_t)v216;
            uint64_t v67 = sub_25436CB40();
            uint64_t v68 = -1 << *(unsigned char *)(v66 + 32);
            unint64_t v60 = v67 & ~v68;
            if ((*(void *)(v66 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60))
            {
              uint64_t v69 = ~v68;
              do
              {
                v52((uint64_t)v16, *(void *)(v66 + 48) + v60 * v215, v13);
                sub_2542C1C20((unint64_t *)&qword_269DD7E78);
                char v70 = sub_25436CBB0();
                (*v42)(v16, v13);
                if (v70) {
                  goto LABEL_115;
                }
                unint64_t v60 = (v60 + 1) & v69;
              }
              while (((*(void *)(v66 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2542F7BF0();
          }
          uint64_t v54 = (uint64_t)v216;
          *(void *)&v216[((v60 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] |= 1 << v60;
          v210((char *)(*(void *)(v54 + 48) + v60 * v215), v65, v13);
          uint64_t v71 = *(void *)(v54 + 16);
          BOOL v72 = __OFADD__(v71, 1);
          uint64_t v73 = v71 + 1;
          if (v72)
          {
            __break(1u);
            goto LABEL_50;
          }
          *(void *)(v54 + 16) = v73;
          swift_bridgeObjectRelease();
          (*v42)(v213, v13);
        }
        int v55 = 1;
        uint64_t v56 = 1;
        unint64_t v23 = v204;
        if (v212)
        {
          v206(v204, 1, 1, v13);
          break;
        }
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v74 = *(void *)(v186 + 48);
      uint64_t v75 = (uint64_t)v185;
      uint64_t v76 = (uint64_t)v184;
      char v43 = v202;
      if (!*(void *)(v74 + 16)) {
        goto LABEL_34;
      }
      swift_bridgeObjectRetain();
      unint64_t v77 = sub_254351928(v54);
      if ((v78 & 1) == 0) {
        break;
      }
      uint64_t v79 = *(void *)(*(void *)(v74 + 56) + 8 * v77);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned char *)(v79 + 33) & 1) == 0)
      {
        swift_release();
        goto LABEL_35;
      }
      uint64_t v7 = v197;
      if (*(unsigned char *)(v79 + 32))
      {
        long double v80 = *(double *)(v79 + 48);
        long double v81 = *(double *)(v79 + 56);
        swift_release();
        double v82 = atan2(v80, v81);
      }
      else
      {
        double v82 = *(double *)(v79 + 40);
        swift_release();
      }
LABEL_36:
      uint64_t v83 = *(void *)(v188 + *(int *)(v7 + 24));
      sub_2542C1B60(v188, v76);
      sub_2542C1B60(v199, v75);
      if (v83 == -1)
      {
        sub_2542C1BC4(v75);
        sub_2542C1BC4(v76);
        double v86 = 0.0;
      }
      else
      {
        uint64_t v84 = *(void *)(v76 + *(int *)(v7 + 24));
        sub_2542C1BC4(v76);
        uint64_t v85 = *(void *)(v75 + *(int *)(v7 + 24));
        sub_2542C1BC4(v75);
        if (v84 == v85) {
          double v86 = 0.75;
        }
        else {
          double v86 = 0.0;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v43 = sub_254258EF8(0, v43[2] + 1, 1, v43);
      }
      unint64_t v88 = v43[2];
      unint64_t v87 = v43[3];
      if (v88 >= v87 >> 1) {
        char v43 = sub_254258EF8((void *)(v87 > 1), v88 + 1, 1, v43);
      }
      v43[2] = v88 + 1;
      uint64_t v89 = (double *)&v43[3 * v88];
      uint64_t v90 = v200;
      *((void *)v89 + 4) = v196;
      *((void *)v89 + 5) = v90;
      v89[6] = 1.0 - (v82 + v86);
      uint64_t v44 = v201;
      if (v201 == v195) {
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    double v82 = 0.0;
    uint64_t v7 = v197;
    goto LABEL_36;
  }
LABEL_50:
  char v43 = (void *)MEMORY[0x263F8EE78];
LABEL_51:
  double v216 = (char *)v43;
  swift_bridgeObjectRetain_n();
  sub_2542BEBE0((uint64_t *)&v216);
  swift_bridgeObjectRelease_n();
  uint64_t v91 = (uint64_t)v216;
  uint64_t v92 = *((void *)v216 + 2);
  if (!v92)
  {
    swift_release();
    uint64_t v95 = MEMORY[0x263F8EE78];
LABEL_80:
    uint64_t v129 = v177;
    if (v182)
    {
      uint64_t v130 = 0;
      uint64_t v131 = (uint64_t)v172;
      uint64_t v132 = (uint64_t)v173;
      uint64_t v133 = v178;
      while (1)
      {
        uint64_t v134 = v218;
        if (!*(void *)(v218 + 16)) {
          goto LABEL_91;
        }
        uint64_t v135 = sub_25436D8E0();
        uint64_t v136 = -1 << *(unsigned char *)(v134 + 32);
        unint64_t v137 = v135 & ~v136;
        if (((*(void *)(v134 + 56 + ((v137 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v137) & 1) == 0) {
          goto LABEL_91;
        }
        uint64_t v138 = *(void *)(v134 + 48);
        if (*(void *)(v138 + 8 * v137) != v130) {
          break;
        }
LABEL_83:
        if (++v130 == v182) {
          goto LABEL_95;
        }
      }
      uint64_t v139 = ~v136;
      while (1)
      {
        unint64_t v137 = (v137 + 1) & v139;
        if (((*(void *)(v134 + 56 + ((v137 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v137) & 1) == 0) {
          break;
        }
        if (*(void *)(v138 + 8 * v137) == v130) {
          goto LABEL_83;
        }
      }
LABEL_91:
      uint64_t v140 = v183;
      sub_2542C1B60(v176+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v183 + 72) * v130, v131);
      uint64_t v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56);
      uint64_t v142 = v197;
      v141(v131, 0, 1, v197);
      v141(v132, 1, 1, v142);
      uint64_t v143 = v133 + *(int *)(v181 + 48);
      uint64_t v144 = *(int *)(v181 + 64);
      sub_25425E0DC(v131, v133, &qword_269DD8040);
      sub_25425E0DC(v132, v143, &qword_269DD8040);
      *(void *)(v133 + v144) = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v95 = sub_254259074(0, *(void *)(v95 + 16) + 1, 1, v95);
      }
      unint64_t v146 = *(void *)(v95 + 16);
      unint64_t v145 = *(void *)(v95 + 24);
      if (v146 >= v145 >> 1) {
        uint64_t v95 = sub_254259074(v145 > 1, v146 + 1, 1, v95);
      }
      *(void *)(v95 + 16) = v146 + 1;
      sub_25425E0DC(v178, v95+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(void *)(v180 + 72) * v146, &qword_269DD7AF0);
      sub_2542683B0((uint64_t *)&v216, v130);
      goto LABEL_83;
    }
LABEL_95:
    swift_bridgeObjectRelease();
    uint64_t v147 = *(void *)(v129 + 16);
    if (!v147)
    {
LABEL_110:
      uint64_t v165 = sub_254278DA4(v95);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v165;
    }
    uint64_t v148 = 0;
    uint64_t v149 = v197;
    uint64_t v150 = (uint64_t)v175;
    while (1)
    {
      uint64_t v151 = v217;
      if (!*(void *)(v217 + 16)) {
        goto LABEL_106;
      }
      uint64_t v152 = sub_25436D8E0();
      uint64_t v153 = -1 << *(unsigned char *)(v151 + 32);
      unint64_t v154 = v152 & ~v153;
      if (((*(void *)(v151 + 56 + ((v154 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v154) & 1) == 0) {
        goto LABEL_106;
      }
      uint64_t v155 = *(void *)(v151 + 48);
      if (*(void *)(v155 + 8 * v154) != v148) {
        break;
      }
LABEL_98:
      if (++v148 == v147) {
        goto LABEL_110;
      }
    }
    uint64_t v156 = ~v153;
    while (1)
    {
      unint64_t v154 = (v154 + 1) & v156;
      if (((*(void *)(v151 + 56 + ((v154 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v154) & 1) == 0) {
        break;
      }
      if (*(void *)(v155 + 8 * v154) == v148) {
        goto LABEL_98;
      }
    }
LABEL_106:
    uint64_t v157 = v183;
    uint64_t v158 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v183 + 56);
    uint64_t v159 = (uint64_t)v174;
    v158(v174, 1, 1, v149);
    sub_2542C1B60(v129+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(void *)(v157 + 72) * v148, v150);
    v158((char *)v150, 0, 1, v149);
    uint64_t v160 = v179;
    uint64_t v161 = v179 + *(int *)(v181 + 48);
    uint64_t v162 = *(int *)(v181 + 64);
    sub_25425E0DC(v159, v179, &qword_269DD8040);
    sub_25425E0DC(v150, v161, &qword_269DD8040);
    *(void *)(v160 + v162) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v95 = sub_254259074(0, *(void *)(v95 + 16) + 1, 1, v95);
    }
    unint64_t v164 = *(void *)(v95 + 16);
    unint64_t v163 = *(void *)(v95 + 24);
    if (v164 >= v163 >> 1) {
      uint64_t v95 = sub_254259074(v163 > 1, v164 + 1, 1, v95);
    }
    *(void *)(v95 + 16) = v164 + 1;
    sub_25425E0DC(v179, v95+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(void *)(v180 + 72) * v164, &qword_269DD7AF0);
    sub_2542683B0((uint64_t *)&v216, v148);
    uint64_t v129 = v177;
    goto LABEL_98;
  }
  unint64_t v93 = 0;
  uint64_t v94 = v216 + 32;
  uint64_t v215 = v183 + 56;
  uint64_t v95 = MEMORY[0x263F8EE78];
  CGFloat v213 = v216;
  while (v93 < *(void *)(v91 + 16))
  {
    unint64_t v97 = &v94[24 * v93];
    double v98 = *((double *)v97 + 2);
    if (v98 < a4)
    {
      unint64_t v99 = *(void *)v97;
      unint64_t v100 = *((void *)v97 + 1);
      uint64_t v101 = v218;
      if (*(void *)(v218 + 16))
      {
        uint64_t v102 = sub_25436D8E0();
        uint64_t v103 = -1 << *(unsigned char *)(v101 + 32);
        unint64_t v104 = v102 & ~v103;
        if ((*(void *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104))
        {
          uint64_t v105 = *(void *)(v101 + 48);
          if (*(void *)(v105 + 8 * v104) == v99) {
            goto LABEL_54;
          }
          uint64_t v106 = ~v103;
          while (1)
          {
            unint64_t v104 = (v104 + 1) & v106;
            if (((*(void *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) == 0) {
              break;
            }
            if (*(void *)(v105 + 8 * v104) == v99) {
              goto LABEL_54;
            }
          }
        }
      }
      uint64_t v107 = v217;
      if (!*(void *)(v217 + 16)) {
        goto LABEL_71;
      }
      uint64_t v108 = sub_25436D8E0();
      uint64_t v109 = -1 << *(unsigned char *)(v107 + 32);
      unint64_t v110 = v108 & ~v109;
      if (((*(void *)(v107 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
        goto LABEL_71;
      }
      uint64_t v111 = *(void *)(v107 + 48);
      if (*(void *)(v111 + 8 * v110) != v100)
      {
        uint64_t v112 = ~v109;
        while (1)
        {
          unint64_t v110 = (v110 + 1) & v112;
          if (((*(void *)(v107 + 56 + ((v110 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v110) & 1) == 0) {
            break;
          }
          if (*(void *)(v111 + 8 * v110) == v100) {
            goto LABEL_54;
          }
        }
LABEL_71:
        if (v99 >= v182) {
          goto LABEL_112;
        }
        uint64_t v113 = v92;
        uint64_t v114 = v94;
        uint64_t v115 = v183;
        unint64_t v116 = (*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
        uint64_t v117 = *(void *)(v183 + 72);
        CGFloat v214 = (void (**)(uint64_t, uint64_t, uint64_t))v99;
        uint64_t v118 = v176 + v116 + v117 * v99;
        unint64_t v119 = v100;
        uint64_t v120 = v171;
        sub_2542C1B60(v118, v171);
        uint64_t v121 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56);
        v121(v120, 0, 1, v197);
        if ((v119 & 0x8000000000000000) != 0) {
          goto LABEL_113;
        }
        if (v119 >= *(void *)(v177 + 16)) {
          goto LABEL_114;
        }
        uint64_t v122 = v168;
        sub_2542C1B60(v177 + v116 + v117 * v119, v168);
        v121(v122, 0, 1, v197);
        uint64_t v123 = v170;
        uint64_t v124 = v170 + *(int *)(v181 + 48);
        uint64_t v125 = *(int *)(v181 + 64);
        sub_25425E0DC(v171, v170, &qword_269DD8040);
        sub_25425E0DC(v122, v124, &qword_269DD8040);
        *(double *)(v123 + v125) = v98;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v95 = sub_254259074(0, *(void *)(v95 + 16) + 1, 1, v95);
        }
        uint64_t v94 = v114;
        uint64_t v92 = v113;
        uint64_t v91 = (uint64_t)v213;
        unint64_t v127 = *(void *)(v95 + 16);
        unint64_t v126 = *(void *)(v95 + 24);
        uint64_t v128 = v119;
        if (v127 >= v126 >> 1) {
          uint64_t v95 = sub_254259074(v126 > 1, v127 + 1, 1, v95);
        }
        uint64_t v96 = (uint64_t)v214;
        *(void *)(v95 + 16) = v127 + 1;
        sub_25425E0DC(v170, v95+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(void *)(v180 + 72) * v127, &qword_269DD7AF0);
        sub_2542683B0((uint64_t *)&v216, v96);
        sub_2542683B0((uint64_t *)&v216, v128);
      }
    }
LABEL_54:
    if (++v93 == v92)
    {
      swift_release();
      goto LABEL_80;
    }
  }
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  sub_25436D840();
  __break(1u);
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2542C0E3C(unint64_t a1, unint64_t a2, uint64_t a3, double a4)
{
  uint64_t v104 = a3;
  double v96 = a4;
  uint64_t v103 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v103 - 8);
  v7.n128_f64[0] = MEMORY[0x270FA5388](v103);
  unint64_t v9 = (unint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = MEMORY[0x263F8EE88];
  uint64_t v117 = MEMORY[0x263F8EE88];
  if (a1 >> 62) {
    goto LABEL_122;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v105 = a2;
  unint64_t v99 = a1;
  uint64_t v97 = v10;
  unint64_t v94 = a2 >> 62;
  if (v10)
  {
    if (!(a2 >> 62))
    {
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_129;
  }
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
LABEL_33:
  uint64_t v115 = v13;
  swift_bridgeObjectRetain_n();
  sub_2542BEBE0((uint64_t *)&v115);
  swift_bridgeObjectRelease_n();
  a2 = (unint64_t)v115;
  uint64_t v50 = v115[2];
  if (v50)
  {
    unint64_t v51 = 0;
    *(void *)&double v52 = v115 + 4;
    unint64_t v114 = v99 & 0xC000000000000001;
    *(void *)&double v111 = v99 + 32;
    uint64_t v112 = v99 & 0xFFFFFFFFFFFFFF8;
    *(void *)&CGFloat x = v105 & 0xC000000000000001;
    *(void *)&CGFloat v108 = v105 + 32;
    *(void *)&CGFloat height = v105 & 0xFFFFFFFFFFFFFF8;
    a1 = MEMORY[0x263F8EE78];
    *(void *)&double v110 = v115 + 4;
    while (1)
    {
      if (v51 >= *(void *)(a2 + 16)) {
        goto LABEL_112;
      }
      uint64_t v54 = *(void *)&v52 + 24 * v51;
      double v55 = *(double *)(v54 + 16);
      if (v55 >= v96) {
        goto LABEL_36;
      }
      unint64_t v56 = *(void *)v54;
      unint64_t v9 = *(void *)(v54 + 8);
      uint64_t v6 = v117;
      if (*(void *)(v117 + 16))
      {
        uint64_t v57 = sub_25436D8E0();
        uint64_t v58 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v59 = v57 & ~v58;
        if ((*(void *)(v6 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59))
        {
          uint64_t v60 = *(void *)(v6 + 48);
          if (*(void *)(v60 + 8 * v59) == v56) {
            goto LABEL_36;
          }
          uint64_t v61 = ~v58;
          while (1)
          {
            unint64_t v59 = (v59 + 1) & v61;
            if (((*(void *)(v6 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0) {
              break;
            }
            if (*(void *)(v60 + 8 * v59) == v56) {
              goto LABEL_36;
            }
          }
        }
      }
      uint64_t v6 = v116;
      if (!*(void *)(v116 + 16)) {
        goto LABEL_53;
      }
      uint64_t v62 = sub_25436D8E0();
      uint64_t v63 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v64 = v62 & ~v63;
      if (((*(void *)(v6 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
        goto LABEL_53;
      }
      uint64_t v65 = *(void *)(v6 + 48);
      if (*(void *)(v65 + 8 * v64) != v9)
      {
        uint64_t v66 = ~v63;
        while (1)
        {
          unint64_t v64 = (v64 + 1) & v66;
          if (((*(void *)(v6 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
            break;
          }
          if (*(void *)(v65 + 8 * v64) == v9) {
            goto LABEL_36;
          }
        }
LABEL_53:
        if (*(double *)&v114 == 0.0)
        {
          if ((v56 & 0x8000000000000000) != 0) {
            goto LABEL_118;
          }
          if (v56 >= *(void *)(v112 + 16)) {
            goto LABEL_119;
          }
          uint64_t v6 = *(void *)(*(void *)&v111 + 8 * v56);
          swift_retain();
          if (x == 0.0)
          {
LABEL_57:
            if ((v9 & 0x8000000000000000) != 0) {
              goto LABEL_120;
            }
            if (v9 >= *(void *)(*(void *)&height + 16)) {
              goto LABEL_121;
            }
            uint64_t v67 = *(void *)(*(void *)&v108 + 8 * v9);
            swift_retain();
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v6 = MEMORY[0x25A275A00](v56, v99);
          if (x == 0.0) {
            goto LABEL_57;
          }
        }
        uint64_t v67 = MEMORY[0x25A275A00](v9, v105);
LABEL_60:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = (unint64_t)sub_2542599F8(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
        }
        unint64_t v69 = *(void *)(a1 + 16);
        unint64_t v68 = *(void *)(a1 + 24);
        if (v69 >= v68 >> 1) {
          a1 = (unint64_t)sub_2542599F8((void *)(v68 > 1), v69 + 1, 1, (void *)a1);
        }
        *(void *)(a1 + 16) = v69 + 1;
        unint64_t v53 = a1 + 24 * v69;
        *(void *)(v53 + 32) = v6;
        *(void *)(v53 + 40) = v67;
        *(double *)(v53 + 48) = v55;
        sub_2542683B0((uint64_t *)&v115, v56);
        sub_2542683B0((uint64_t *)&v115, v9);
        double v52 = v110;
      }
LABEL_36:
      if (++v51 == v50)
      {
        swift_release();
        goto LABEL_68;
      }
    }
  }
  swift_release();
  a1 = MEMORY[0x263F8EE78];
LABEL_68:
  if (v97)
  {
    unint64_t v70 = 0;
    unint64_t v71 = v99 & 0xC000000000000001;
    a2 = v99 & 0xFFFFFFFFFFFFFF8;
    unint64_t v9 = v99 + 32;
    uint64_t v72 = v97 & ~(v97 >> 63);
    do
    {
      if (v70 == v72) {
        goto LABEL_113;
      }
      uint64_t v6 = v117;
      if (*(void *)(v117 + 16))
      {
        uint64_t v74 = sub_25436D8E0();
        uint64_t v75 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v76 = v74 & ~v75;
        if ((*(void *)(v6 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76))
        {
          uint64_t v77 = *(void *)(v6 + 48);
          if (*(void *)(v77 + 8 * v76) == v70) {
            goto LABEL_71;
          }
          uint64_t v78 = ~v75;
          while (1)
          {
            unint64_t v76 = (v76 + 1) & v78;
            if (((*(void *)(v6 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76) & 1) == 0) {
              break;
            }
            if (*(void *)(v77 + 8 * v76) == v70) {
              goto LABEL_71;
            }
          }
        }
      }
      if (v71)
      {
        uint64_t v6 = MEMORY[0x25A275A00](v70, v99);
      }
      else
      {
        if (v70 >= *(void *)(a2 + 16)) {
          goto LABEL_115;
        }
        uint64_t v6 = *(void *)(v9 + 8 * v70);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = (unint64_t)sub_2542599F8(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
      }
      unint64_t v80 = *(void *)(a1 + 16);
      unint64_t v79 = *(void *)(a1 + 24);
      if (v80 >= v79 >> 1) {
        a1 = (unint64_t)sub_2542599F8((void *)(v79 > 1), v80 + 1, 1, (void *)a1);
      }
      *(void *)(a1 + 16) = v80 + 1;
      uint64_t v73 = (void *)(a1 + 24 * v80);
      v73[5] = 0;
      v73[6] = 0;
      v73[4] = v6;
      sub_2542683B0((uint64_t *)&v115, v70);
LABEL_71:
      ++v70;
    }
    while (v70 != v97);
  }
  swift_bridgeObjectRelease();
  if (v94)
  {
    while (1)
    {
      uint64_t v81 = v105;
      uint64_t v6 = v105 < 0 ? v105 : v105 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_25436D530();
      swift_bridgeObjectRelease();
      if ((v82 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_129:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_25436D530();
      swift_bridgeObjectRelease();
      if (v11 < 0)
      {
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
      }
      uint64_t v10 = v97;
LABEL_6:
      unint64_t v12 = 0;
      unint64_t v106 = a1 & 0xC000000000000001;
      uint64_t v95 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v102 = a2 & 0xC000000000000001;
      unint64_t v98 = a1 + 32;
      uint64_t v101 = (void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      a1 = v6 + 8;
      uint64_t v100 = v11;
      while (v12 != v10)
      {
        if (v11)
        {
          if (!v106 && v12 >= *(void *)(v95 + 16)) {
            goto LABEL_117;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (v106)
            {
              uint64_t v15 = MEMORY[0x25A275A00](v12, v99, v7);
            }
            else
            {
              uint64_t v15 = *(void *)(v98 + 8 * v12);
              swift_retain();
            }
            if (v102)
            {
              uint64_t v16 = MEMORY[0x25A275A00](i, a2);
            }
            else
            {
              uint64_t v16 = *(void *)(a2 + 8 * i + 32);
              swift_retain();
            }
            uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
            uint64_t v18 = v103;
            (*v101)(v9, *(void *)(v104 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v103);
            swift_retain();
            sub_2542CF4A4(v9);
            uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
            swift_retain();
            swift_release();
            (*(void (**)(unint64_t, uint64_t))a1)(v9, v18);
            if (v19)
            {
              v118.origin.CGFloat x = *(CGFloat *)(v15 + 24);
              uint64_t v112 = *(uint64_t *)(v15 + 32);
              *(void *)&v118.origin.CGFloat y = v112;
              CGFloat x = v118.origin.x;
              CGFloat v20 = *(double *)(v15 + 48);
              unint64_t v114 = *(unint64_t *)(v15 + 40);
              *(void *)&v118.size.CGFloat width = v114;
              CGFloat v21 = *(double *)(v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 8);
              CGFloat v22 = *(double *)(v19
                              + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect
                              + 16);
              v128.size.CGFloat height = *(CGFloat *)(v19
                                            + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect
                                            + 24);
              CGFloat v108 = *(double *)(v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
              v128.origin.CGFloat x = v108;
              CGFloat height = v128.size.height;
              v118.size.CGFloat height = v20;
              v128.origin.CGFloat y = v21;
              v128.size.CGFloat width = v22;
              CGRect v119 = CGRectIntersection(v118, v128);
              CGFloat v23 = v119.origin.x;
              CGFloat y = v119.origin.y;
              CGFloat width = v119.size.width;
              CGFloat v26 = v119.size.height;
              double v27 = CGRectGetWidth(v119);
              v120.origin.CGFloat x = v23;
              v120.origin.CGFloat y = y;
              v120.size.CGFloat width = width;
              v120.size.CGFloat height = v26;
              double v28 = v27 * CGRectGetHeight(v120);
              double v111 = v28;
              CGFloat v30 = *(double *)&v112;
              CGFloat v29 = x;
              v121.origin.CGFloat x = x;
              *(void *)&v121.origin.CGFloat y = v112;
              CGFloat v31 = *(double *)&v114;
              *(void *)&v121.size.CGFloat width = v114;
              CGFloat v107 = v20;
              v121.size.CGFloat height = v20;
              double v32 = CGRectGetWidth(v121);
              v122.origin.CGFloat x = v29;
              v122.origin.CGFloat y = v30;
              v122.size.CGFloat width = v31;
              v122.size.CGFloat height = v20;
              double v33 = v32 * CGRectGetHeight(v122);
              CGFloat v35 = v108;
              CGFloat v34 = height;
              v123.origin.CGFloat x = v108;
              v123.origin.CGFloat y = v21;
              v123.size.CGFloat width = v22;
              v123.size.CGFloat height = height;
              double v36 = CGRectGetWidth(v123);
              v124.origin.CGFloat x = v35;
              v124.origin.CGFloat y = v21;
              v124.size.CGFloat width = v22;
              v124.size.CGFloat height = v34;
              double v37 = v33 + v36 * CGRectGetHeight(v124) - v28;
              if (v37 <= 2.22044605e-16) {
                double v37 = 2.22044605e-16;
              }
              double v110 = v37;
              *(void *)&v125.origin.CGFloat y = v112;
              v125.origin.CGFloat x = x;
              *(void *)&v125.size.CGFloat width = v114;
              v125.size.CGFloat height = v107;
              v129.origin.CGFloat x = v35;
              v129.origin.CGFloat y = v21;
              v129.size.CGFloat width = v22;
              v129.size.CGFloat height = v34;
              CGRect v126 = CGRectUnion(v125, v129);
              CGFloat v38 = v126.origin.x;
              CGFloat v39 = v126.origin.y;
              CGFloat v40 = v126.size.width;
              CGFloat v41 = v126.size.height;
              double v42 = CGRectGetWidth(v126);
              v127.origin.CGFloat x = v38;
              v127.origin.CGFloat y = v39;
              v127.size.CGFloat width = v40;
              v127.size.CGFloat height = v41;
              double v43 = CGRectGetHeight(v127);
              swift_release();
              swift_release();
              swift_release();
              double v44 = v42 * v43;
              if (v42 * v43 <= 2.22044605e-16) {
                double v44 = 2.22044605e-16;
              }
              double v45 = (v44 - v110) / v44 - v111 / v110 + 1.0;
            }
            else
            {
              swift_release();
              swift_release();
              double v45 = 1.0;
            }
            uint64_t v11 = v100;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a2 = v105;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              uint64_t v13 = sub_254258EF8(0, v13[2] + 1, 1, v13);
            }
            unint64_t v48 = v13[2];
            unint64_t v47 = v13[3];
            uint64_t v6 = v48 + 1;
            if (v48 >= v47 >> 1) {
              uint64_t v13 = sub_254258EF8((void *)(v47 > 1), v48 + 1, 1, v13);
            }
            uint64_t v49 = (double *)&v13[3 * v48];
            *((void *)v49 + 4) = v12;
            *((void *)v49 + 5) = i;
            void v13[2] = v6;
            v49[6] = v45;
          }
        }
        ++v12;
        uint64_t v10 = v97;
        if (v12 == v97) {
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_25436D530();
      swift_bridgeObjectRelease();
      if ((v10 & 0x8000000000000000) == 0) {
        goto LABEL_3;
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v81 = v105;
    uint64_t v82 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v82)
  {
    unint64_t v83 = 0;
    a2 = v81 & 0xC000000000000001;
    unint64_t v9 = v81 & 0xFFFFFFFFFFFFFF8;
    do
    {
      if (v83 == v82) {
        goto LABEL_114;
      }
      uint64_t v6 = v116;
      if (*(void *)(v116 + 16))
      {
        uint64_t v85 = sub_25436D8E0();
        uint64_t v86 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v87 = v85 & ~v86;
        if ((*(void *)(v6 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v87))
        {
          uint64_t v88 = *(void *)(v6 + 48);
          if (*(void *)(v88 + 8 * v87) == v83) {
            goto LABEL_93;
          }
          uint64_t v89 = ~v86;
          while (1)
          {
            unint64_t v87 = (v87 + 1) & v89;
            if (((*(void *)(v6 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v87) & 1) == 0) {
              break;
            }
            if (*(void *)(v88 + 8 * v87) == v83) {
              goto LABEL_93;
            }
          }
        }
      }
      if (a2)
      {
        uint64_t v6 = MEMORY[0x25A275A00](v83, v105);
      }
      else
      {
        if (v83 >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_116;
        }
        uint64_t v6 = *(void *)(v81 + 32 + 8 * v83);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = (unint64_t)sub_2542599F8(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
      }
      unint64_t v91 = *(void *)(a1 + 16);
      unint64_t v90 = *(void *)(a1 + 24);
      if (v91 >= v90 >> 1) {
        a1 = (unint64_t)sub_2542599F8((void *)(v90 > 1), v91 + 1, 1, (void *)a1);
      }
      *(void *)(a1 + 16) = v91 + 1;
      uint64_t v84 = (void *)(a1 + 24 * v91);
      v84[4] = 0;
      v84[5] = v6;
      v84[6] = 0;
      sub_2542683B0((uint64_t *)&v115, v83);
LABEL_93:
      ++v83;
    }
    while (v83 != v82);
  }
  uint64_t v92 = sub_254279498(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v92;
}

uint64_t type metadata accessor for DKTrackerUtils()
{
  return self;
}

uint64_t method lookup function for DKTrackerUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKTrackerUtils);
}

uint64_t type metadata accessor for DKRandomColorGenerator()
{
  return self;
}

uint64_t method lookup function for DKRandomColorGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKRandomColorGenerator);
}

uint64_t dispatch thunk of DKRandomColorGenerator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DKRandomColorGenerator.getColor(uuid:currentUUIDs:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t method lookup function for DKUUIDToNumberConversion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKUUIDToNumberConversion);
}

uint64_t dispatch thunk of DKUUIDToNumberConversion.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKUUIDToNumberConversion.getInt(uuid:currentUUIDs:range:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_2542C1B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542C1BC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2542C1C20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25436C800();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2542C1C64()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  uint64_t v2 = sub_25436C7B0();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2542C1D64, 0, 0);
}

uint64_t sub_2542C1D64()
{
  uint64_t v1 = v0[2];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) & 1) == 0)
  {
    uint64_t v3 = v0[6];
    uint64_t v2 = v0[7];
    uint64_t v4 = v0[5];
    uint64_t v21 = v0[4];
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 1;
    if (*(unsigned char *)(*(void *)(v1 + 40)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise))
      double v5 = 3.14159265;
    else {
      double v5 = -3.14159265;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_25436E6A0;
    *(double *)(v6 + 32) = v5;
    *(void *)(v6 + 40) = 0;
    *(void *)(v6 + 48) = 0;
    uint64_t v7 = *(void *)(v1 + 48);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v8(v2, v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v4);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    uint64_t v9 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v2, v4);
    uint64_t v10 = v9 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(void *)uint64_t v10 = v6;
    *(void *)(v10 + 8) = 0x3FF0000000000000;
    *(_WORD *)(v10 + 16) = 16641;
    *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v9;
    swift_release();
    uint64_t v11 = *(void *)(v1 + 40);
    v8(v21, *(void *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v21, 0, 1, v4);
    sub_254277464(v21, v11 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime);
    uint64_t v1 = v0[2];
  }
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[3];
  sub_254272818(*(void *)(v1 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, v14);
  LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12);
  sub_254258BD8(v14);
  if (v12 == 1)
  {
    uint64_t v15 = v0[5];
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[4];
    uint64_t v18 = *(void *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, *(void *)(v0[2] + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v17, 0, 1, v15);
    sub_254277464(v17, v18 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(1);
}

uint64_t sub_2542C2060()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2542C2124()
{
  return type metadata accessor for DKFlip180Task();
}

uint64_t type metadata accessor for DKFlip180Task()
{
  uint64_t result = qword_269DD8D20;
  if (!qword_269DD8D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2542C2178()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2542C21C0()
{
  uint64_t v1 = v0 + qword_269DDA9F0;
  uint64_t v2 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_269DDAA10;
  uint64_t v4 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + qword_269DDAA28;
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_254261B04(v0 + *(void *)(*(void *)v0 + 224), (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25425042C(v0 + *(void *)(*(void *)v0 + 232), &qword_269DD8040);
  return v0;
}

uint64_t DKObjectTrackerConfiguration.__allocating_init()()
{
  return DKTrackerConfiguration.init()();
}

uint64_t DKObjectTrackerConfiguration.__allocating_init(configuration:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_2542A88E8(a1);
  swift_release();
  return v2;
}

uint64_t DKObjectTrackerConfiguration.init(configuration:)(uint64_t a1)
{
  uint64_t v1 = sub_2542A88E8(a1);
  swift_release();
  return v1;
}

uint64_t DKObjectTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKObjectTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542C24CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v62 = a1;
  uint64_t v3 = sub_25436C800();
  uint64_t v56 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v58 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v52 - v9;
  MEMORY[0x270FA5388](v11);
  double v55 = (char *)&v52 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v61 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  CGFloat v20 = (char *)&v52 - v19;
  uint64_t v21 = type metadata accessor for DKMotion3();
  uint64_t v60 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  CGFloat v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25435C720((uint64_t)v64);
  sub_2542721C0((uint64_t)v64, (uint64_t)v65);
  uint64_t v24 = 0;
  if ((v66 & 1) == 0)
  {
    uint64_t v54 = v3;
    double v25 = *(double *)v65;
    double v26 = *(double *)&v65[1];
    double v27 = *(double *)&v65[2];
    double v28 = *(double *)&v65[3];
    uint64_t v29 = *(void *)(v2 + *(void *)(*(void *)v2 + 216));
    unint64_t v59 = v10;
    if (!v29) {
      goto LABEL_5;
    }
    swift_retain();
    swift_retain();
    double v52 = (char *)v6;
    uint64_t v30 = v62;
    sub_254251374(v62);
    swift_release();
    swift_retain();
    sub_254251374(v30);
    swift_release();
    swift_retain();
    sub_254251374(v30);
    swift_release();
    uint64_t v31 = v30;
    uint64_t v6 = (uint64_t)v52;
    sub_25431FE58(v31);
    uint64_t v32 = *(void *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
    swift_retain();
    swift_release();
    if (v32)
    {
      sub_254261A9C(v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DKMotion3);
      swift_release();
      uint64_t v33 = v60;
      CGFloat v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56);
      CGFloat v35 = v20;
      uint64_t v36 = 0;
    }
    else
    {
LABEL_5:
      uint64_t v33 = v60;
      CGFloat v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56);
      CGFloat v35 = v20;
      uint64_t v36 = 1;
    }
    unint64_t v53 = v34;
    v34((uint64_t)v35, v36, 1, v21);
    double v37 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v37(v15, v62, v5);
    int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v20, 1, v21);
    CGFloat v39 = (int *)v21;
    if (v38 == 1)
    {
      CGFloat v40 = v55;
      v37(v55, (uint64_t)v15, v5);
      v37(v23, (uint64_t)v40, v5);
      *(void *)&v23[v39[5]] = &unk_2703B1E78;
      *(void *)&v23[v39[6]] = &unk_2703B1EB0;
      double v52 = v20;
      CGFloat v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v40, v5);
      uint64_t v21 = (uint64_t)v39;
      *(void *)&v23[v39[7]] = &unk_2703B1EE8;
      v41(v15, v5);
      sub_25425042C((uint64_t)v52, &qword_269DD7810);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
      sub_254291724((uint64_t)v20, (uint64_t)v23);
    }
    uint64_t v42 = v58;
    uint64_t v43 = (uint64_t)v57;
    uint64_t v44 = v56;
    double v45 = v53;
    v37(v59, v62, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v42, v2 + qword_269DDA9F0, v54);
    uint64_t v46 = *(void *)(v2 + qword_269DDAA00 + 8);
    v63[0] = *(void *)(v2 + qword_269DDAA00);
    uint64_t v62 = *(void *)(v2 + qword_269DDAA08);
    v63[1] = v46;
    uint64_t v58 = *(void *)(v2 + qword_269DDA9F8);
    uint64_t v47 = v61;
    sub_254261A9C((uint64_t)v23, v61, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    v45(v47, 0, 1, v21);
    v37((char *)v43, v2 + qword_269DDAA28, v5);
    uint64_t v48 = *(void *)(v2 + qword_269DDAA38);
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      uint64_t v50 = *(void *)(v48 + 8 * v49 + 24);
      swift_retain();
    }
    else
    {
      uint64_t v50 = 0;
    }
    type metadata accessor for DKObjectTrackerState(0);
    swift_allocObject();
    uint64_t v24 = DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)((uint64_t)v59, v42, v63, v62, v58, -1, v61, v43, v25, v26, v27, v28, 0, v50);
    sub_254261B04((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  }
  return v24;
}

uint64_t DKObjectTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a6;
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v24 = a1;
  uint64_t v8 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25436C800();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25436C7B0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  uint64_t v19 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  uint64_t v20 = v25;
  sub_254261A9C(v25, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v21 = sub_2543654BC(v18, v26, v14, v27, v28, v10);
  sub_254261B04(v20, (uint64_t (*)(void))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v24, v15);
  return v21;
}

uint64_t DKObjectTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a5;
  uint64_t v25 = a2;
  uint64_t v26 = a4;
  uint64_t v24 = a1;
  uint64_t v9 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25436C800();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25436C7B0();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  sub_254261A9C(a6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v21 = sub_2543654BC(v20, v25, v15, v26, v27, v11);
  sub_254261B04(a6, (uint64_t (*)(void))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return v21;
}

uint64_t DKObjectTracker.deinit()
{
  return sub_2542C21C0();
}

uint64_t DKObjectTracker.__deallocating_deinit()
{
  sub_2542C21C0();
  return swift_deallocClassInstance();
}

uint64_t sub_2542C3138@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2542C24CC(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DKObjectTrackerConfiguration()
{
  return self;
}

uint64_t type metadata accessor for DKObjectTracker()
{
  uint64_t result = qword_269DD8D38;
  if (!qword_269DD8D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2542C31D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2542C3208()
{
  unint64_t v0 = DKLog.Category.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == DKLog.Category.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2542C32A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1936158572;
    }
    else {
      uint64_t v3 = 0x6D614E6567616D69;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000065;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1936158572;
      }
      else {
        uint64_t v6 = 0x6D614E6567616D69;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000065;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701669236;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701669236)
  {
LABEL_21:
    char v8 = sub_25436D7B0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2542C33A8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701669236;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701669236;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 1684632949;
      break;
    case 2:
      unint64_t v5 = 1952671090;
      break;
    case 3:
      unint64_t v3 = 0x8000000254379B70;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 4:
      unint64_t v5 = 0x4972656B63617274;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x644970756F7267;
      break;
    case 6:
      unint64_t v5 = 0x74696C6172696863;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65636E6174736964;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1684632949) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      if (v5 != 1952671090) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0x8000000254379B70;
      if (v5 != 0xD000000000000013) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x4972656B63617274) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x644970756F7267) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x74696C6172696863;
      unint64_t v6 = 0xE900000000000079;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65636E6174736964) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_25436D7B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2542C3614(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701669236;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701669236;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 1684632949;
      break;
    case 2:
      unint64_t v5 = 1952671090;
      break;
    case 3:
      unint64_t v3 = 0x8000000254379B70;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 4:
      unint64_t v5 = 0x4972656B63617274;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x644970756F7267;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x65636E6174736964;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1684632949) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      if (v5 != 1952671090) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0x8000000254379B70;
      if (v5 != 0xD000000000000013) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x4972656B63617274) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x644970756F7267;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65636E6174736964) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_25436D7B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2542C3830(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1635017060;
  }
  else {
    uint64_t v3 = 0x6570795461746164;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1635017060;
  }
  else {
    uint64_t v5 = 0x6570795461746164;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2542C38D0(char *a1, char *a2)
{
  return sub_2542C3830(*a1, *a2);
}

uint64_t sub_2542C38DC()
{
  return sub_25436D930();
}

uint64_t sub_2542C3958()
{
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542C39C0()
{
  return sub_25436D930();
}

uint64_t sub_2542C3A38@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25436D5A0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2542C3A98(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1635017060;
  if (!*v1) {
    uint64_t v2 = 0x6570795461746164;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2542C3AD0()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 0x6570795461746164;
  }
}

uint64_t sub_2542C3B04@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25436D5A0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_2542C3B68(uint64_t a1)
{
  unint64_t v2 = sub_2542C4168();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C3BA4(uint64_t a1)
{
  unint64_t v2 = sub_2542C4168();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2542C3BE0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2542C6894(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2542C3C0C()
{
  return sub_25436CD90();
}

uint64_t sub_2542C3C6C()
{
  return sub_25436CD80();
}

uint64_t DKLogCodable.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C4168();
  sub_25436D940();
  if (!v2)
  {
    char v12 = 0;
    sub_2542C41BC();
    sub_25436D650();
    switch((char)v11)
    {
      case 1:
        type metadata accessor for DKBodyObservation(0);
        char v12 = 1;
        sub_2542C714C(&qword_269DD8248, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v11 | 0x2000000000000000;
        break;
      case 2:
        type metadata accessor for DKObjectObservation(0);
        char v12 = 1;
        sub_2542C714C(&qword_269DD8AC0, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v11 | 0x4000000000000000;
        break;
      case 3:
        type metadata accessor for DKHandObservation(0);
        char v12 = 1;
        sub_2542C714C(&qword_269DD8258, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v11 | 0x6000000000000000;
        break;
      case 4:
        type metadata accessor for DKIntelligentTrackingState(0);
        char v12 = 1;
        sub_2542C714C(&qword_269DD80C8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v11 | 0x8000000000000000;
        break;
      default:
        type metadata accessor for DKFaceObservation(0);
        char v12 = 1;
        sub_2542C714C(&qword_269DD8238, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
        sub_25436D650();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        *a2 = v11;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2542C4168()
{
  unint64_t result = qword_269DD8D50;
  if (!qword_269DD8D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8D50);
  }
  return result;
}

unint64_t sub_2542C41BC()
{
  unint64_t result = qword_269DD8D58;
  if (!qword_269DD8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8D58);
  }
  return result;
}

uint64_t DKLogCodable.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C4168();
  sub_25436D950();
  switch(v8 >> 61)
  {
    case 1uLL:
      uint64_t v9 = v8 & 0x1FFFFFFFFFFFFFFFLL;
      LOBYTE(v17) = 1;
      char v18 = 0;
      sub_2542C46B8();
      swift_retain();
      sub_25436D710();
      if (!v2)
      {
        uint64_t v17 = v9;
        char v18 = 1;
        type metadata accessor for DKBodyObservation(0);
        uint64_t v10 = &qword_269DD8148;
        uint64_t v11 = (void (*)(uint64_t))type metadata accessor for DKBodyObservation;
        goto LABEL_13;
      }
      break;
    case 2uLL:
      uint64_t v12 = v8 & 0x1FFFFFFFFFFFFFFFLL;
      LOBYTE(v17) = 2;
      char v18 = 0;
      sub_2542C46B8();
      swift_retain();
      sub_25436D710();
      if (!v2)
      {
        uint64_t v17 = v12;
        char v18 = 1;
        type metadata accessor for DKObjectObservation(0);
        uint64_t v10 = &qword_269DD8AC8;
        uint64_t v11 = (void (*)(uint64_t))type metadata accessor for DKObjectObservation;
        goto LABEL_13;
      }
      break;
    case 3uLL:
      uint64_t v13 = v8 & 0x1FFFFFFFFFFFFFFFLL;
      LOBYTE(v17) = 3;
      char v18 = 0;
      sub_2542C46B8();
      swift_retain();
      sub_25436D710();
      if (!v2)
      {
        uint64_t v17 = v13;
        char v18 = 1;
        type metadata accessor for DKHandObservation(0);
        uint64_t v10 = &qword_269DD8160;
        uint64_t v11 = (void (*)(uint64_t))type metadata accessor for DKHandObservation;
        goto LABEL_13;
      }
      break;
    case 4uLL:
      uint64_t v14 = v8 & 0x1FFFFFFFFFFFFFFFLL;
      LOBYTE(v17) = 4;
      char v18 = 0;
      sub_2542C46B8();
      swift_retain();
      sub_25436D710();
      if (!v2)
      {
        uint64_t v17 = v14;
        char v18 = 1;
        type metadata accessor for DKIntelligentTrackingState(0);
        uint64_t v10 = &qword_269DD80D8;
        uint64_t v11 = (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState;
LABEL_13:
        sub_2542C714C(v10, v11);
        sub_25436D710();
      }
      break;
    default:
      LOBYTE(v17) = 0;
      char v18 = 0;
      sub_2542C46B8();
      swift_retain();
      sub_25436D710();
      if (!v2)
      {
        uint64_t v17 = v8;
        char v18 = 1;
        type metadata accessor for DKFaceObservation(0);
        sub_2542C714C(&qword_269DD8130, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
        sub_25436D710();
      }
      break;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

unint64_t sub_2542C46B8()
{
  unint64_t result = qword_269DD8D68;
  if (!qword_269DD8D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8D68);
  }
  return result;
}

uint64_t sub_2542C470C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DKLogCodable.init(from:)(a1, a2);
}

uint64_t sub_2542C4724(void *a1)
{
  return DKLogCodable.encode(to:)(a1);
}

uint64_t sub_2542C473C@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, a1);
}

uint64_t sub_2542C4748(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time);
}

uint64_t (*sub_2542C4754())()
{
  return nullsub_1;
}

uint64_t sub_2542C477C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542C478C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542C47A4())()
{
  return nullsub_1;
}

uint64_t sub_2542C47CC()
{
  return sub_2542C5004(&OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

uint64_t sub_2542C47D8(uint64_t a1, uint64_t a2)
{
  return sub_2542C5048(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

uint64_t (*sub_2542C47E4())()
{
  return nullsub_1;
}

void *sub_2542C480C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  id v2 = v1;
  return v1;
}

uint64_t sub_2542C483C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = a1;
  return MEMORY[0x270F9A758]();
}

uint64_t (*sub_2542C4850())()
{
  return nullsub_1;
}

uint64_t DKKeyframe.__allocating_init(time:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = MEMORY[0x263F8EE78];
  unint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *unint64_t v3 = 0;
  v3[1] = 0;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  uint64_t v4 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  uint64_t v5 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a1, v5);
  return v2;
}

uint64_t DKKeyframe.init(time:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = MEMORY[0x263F8EE78];
  unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *unint64_t v3 = 0;
  v3[1] = 0;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  uint64_t v4 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  uint64_t v5 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a1, v5);
  return v1;
}

uint64_t DKKeyframe.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DKKeyframe.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2542C4B40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2542C32A4(*a1, *a2);
}

uint64_t sub_2542C4B4C()
{
  return sub_25436D930();
}

uint64_t sub_2542C4BE4()
{
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542C4C68()
{
  return sub_25436D930();
}

uint64_t sub_2542C4CFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542C68A4();
  *a1 = result;
  return result;
}

void sub_2542C4D2C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1936158572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6D614E6567616D69;
    unint64_t v4 = 0xE900000000000065;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701669236;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2542C4D80()
{
  uint64_t v1 = 1936158572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D614E6567616D69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701669236;
  }
}

uint64_t sub_2542C4DD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542C68A4();
  *a1 = result;
  return result;
}

uint64_t sub_2542C4DF8(uint64_t a1)
{
  unint64_t v2 = sub_2542C7084();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C4E34(uint64_t a1)
{
  unint64_t v2 = sub_2542C7084();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C4E70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  return (*(uint64_t (**)(void, char *, uint64_t))(v9 + 40))(*a2 + *a5, v12, v8);
}

uint64_t sub_2542C4F68@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, a1);
}

uint64_t sub_2542C4F74(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time);
}

uint64_t (*sub_2542C4F80())()
{
  return nullsub_1;
}

uint64_t sub_2542C4FA8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542C4FB8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542C4FD0())()
{
  return nullsub_1;
}

uint64_t sub_2542C4FF8()
{
  return sub_2542C5004(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t sub_2542C5004(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2542C503C(uint64_t a1, uint64_t a2)
{
  return sub_2542C5048(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t sub_2542C5048(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = (void *)(v3 + *a3);
  *unint64_t v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542C5060())()
{
  return nullsub_1;
}

uint64_t DKKeyframeStorage.__allocating_init(time:imageName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  uint64_t v8 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  *uint64_t v7 = a2;
  v7[1] = a3;
  return v6;
}

uint64_t DKKeyframeStorage.init(time:imageName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a1, v9);
  *uint64_t v7 = a2;
  v7[1] = a3;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t DKKeyframeStorage.__allocating_init(keyframe:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DKKeyframeStorage.init(keyframe:)(a1);
  return v2;
}

uint64_t DKKeyframeStorage.init(keyframe:)(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
  unint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *unint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  uint64_t v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  uint64_t v7 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, v5, v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(v8);
  swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName + 8);
  swift_bridgeObjectRetain();
  swift_release();
  *unint64_t v4 = v11;
  v4[1] = v10;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2542C5344(uint64_t a1)
{
  v26[1] = a1;
  CGImageRef imageOut[2] = *(CGImageRef *)MEMORY[0x263EF8340];
  uint64_t v27 = sub_25436C9C0();
  v26[0] = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C610();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25436C7B0();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v7, v9);
  type metadata accessor for DKKeyframe(0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image;
  *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  uint64_t v15 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v11, v7);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert11codableLogsSayAA10DKLoggable_pGSayAA12DKLogCodableOG_tFZ_0(v16);
  swift_bridgeObjectRelease();
  *(void *)(v12 + v15) = v17;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
  if (v18)
  {
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    imageOut[0] = (CGImageRef)0x2F6567616D69;
    imageOut[1] = (CGImageRef)0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436C9A0();
    sub_25436C5C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26[0] + 8))(v3, v27);
    CVPixelBufferRef v20 = _s23IntelligentTrackingCore11DKImageUtilC19pixelBufferFromFile3urlSo11CVBufferRefaSg10Foundation3URLV_tFZ_0();
    if (v20)
    {
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      *uint64_t v13 = v19;
      v13[1] = v18;
      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
      imageOut[0] = 0;
      VTCreateCGImageFromCVPixelBuffer(v21, 0, imageOut);
      CGImageRef v23 = imageOut[0];

      uint64_t v24 = *(void **)(v12 + v14);
      *(void *)(v12 + v14) = v23;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      swift_bridgeObjectRelease();
    }
  }
  return v12;
}

uint64_t DKKeyframeStorage.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKKeyframeStorage.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2542C5860(void *a1)
{
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D70);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C7084();
  uint64_t v10 = v13[1];
  sub_25436D950();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v2);
  char v16 = 0;
  sub_2542C714C(&qword_269DD8110, MEMORY[0x263F07490]);
  uint64_t v11 = v13[2];
  sub_25436D710();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13[3] = *(void *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D80);
    sub_2542C7194(&qword_269DD8D88, (void (*)(void))sub_2542C70D8);
    sub_25436D710();
    char v14 = 2;
    swift_bridgeObjectRetain();
    sub_25436D690();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
}

uint64_t DKKeyframeStorage.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKKeyframeStorage.init(from:)(a1);
  return v2;
}

uint64_t DKKeyframeStorage.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D98);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  double v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs;
  CGImageRef v23 = a1;
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *uint64_t v10 = 0;
  v10[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C7084();
  sub_25436D940();
  if (v2)
  {
    uint64_t v13 = (uint64_t)v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKKeyframeStorage(0);
    swift_deallocPartialClassInstance();
    uint64_t v18 = v13;
  }
  else
  {
    uint64_t v11 = v20;
    char v27 = 0;
    sub_2542C714C(&qword_269DD8220, MEMORY[0x263F07490]);
    uint64_t v12 = v21;
    sub_25436D650();
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D80);
    char v26 = 1;
    sub_2542C7194(&qword_269DD8DA0, (void (*)(void))sub_2542C7204);
    sub_25436D650();
    *(void *)(v3 + v22) = v24;
    swift_bridgeObjectRelease();
    char v25 = 2;
    uint64_t v15 = sub_25436D5D0();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v12);
    *uint64_t v10 = v15;
    v10[1] = v17;
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t)v23;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v3;
}

uint64_t sub_2542C5FD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for DKKeyframeStorage(0);
  uint64_t v5 = swift_allocObject();
  uint64_t result = DKKeyframeStorage.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_2542C602C(void *a1)
{
  return sub_2542C5860(a1);
}

uint64_t DKLoggerMetafile.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254272818(v1, a1);
}

uint64_t DKLoggerMetafile.startTime.setter(uint64_t a1)
{
  return sub_254277464(a1, v1);
}

uint64_t (*DKLoggerMetafile.startTime.modify())()
{
  return nullsub_1;
}

uint64_t DKLoggerMetafile.keyframes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DKLoggerMetafile.keyframes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DKLoggerMetafile.keyframes.modify())()
{
  return nullsub_1;
}

uint64_t DKLoggerMetafile.video.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DKLoggerMetafile.video.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DKLoggerMetafile.video.modify())()
{
  return nullsub_1;
}

uint64_t sub_2542C6224()
{
  uint64_t v1 = 0x656D61726679656BLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F65646976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D69547472617473;
  }
}

uint64_t sub_2542C6280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542C8E28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542C62A8(uint64_t a1)
{
  unint64_t v2 = sub_2542C7278();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C62E4(uint64_t a1)
{
  unint64_t v2 = sub_2542C7278();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKLoggerMetafile.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8DB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C7278();
  sub_25436D950();
  v8[15] = 0;
  sub_25436C7B0();
  sub_2542C714C(&qword_269DD8110, MEMORY[0x263F07490]);
  sub_25436D6D0();
  if (!v1)
  {
    type metadata accessor for DKLoggerMetafile(0);
    v8[14] = 1;
    sub_25436D690();
    v8[13] = 2;
    sub_25436D690();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKLoggerMetafile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v25 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8DC0);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DKLoggerMetafile(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25436C7B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (uint64_t *)&v10[*(int *)(v8 + 28)];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t *)&v10[*(int *)(v8 + 32)];
  *uint64_t v13 = 0;
  v13[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C7278();
  uint64_t v14 = v27;
  sub_25436D940();
  if (!v14)
  {
    char v30 = 0;
    sub_2542C714C(&qword_269DD8220, MEMORY[0x263F07490]);
    sub_25436D610();
    sub_254277464(v25, (uint64_t)v10);
    char v29 = 1;
    uint64_t v15 = sub_25436D5D0();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *uint64_t v12 = v15;
    v12[1] = v17;
    char v28 = 2;
    uint64_t v19 = sub_25436D5D0();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v26);
    swift_bridgeObjectRelease();
    *uint64_t v13 = v19;
    v13[1] = v21;
    sub_2542C7328((uint64_t)v10, v23);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2542C72CC((uint64_t)v10);
}

uint64_t sub_2542C6864@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKLoggerMetafile.init(from:)(a1, a2);
}

uint64_t sub_2542C687C(void *a1)
{
  return DKLoggerMetafile.encode(to:)(a1);
}

unint64_t sub_2542C6894(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

uint64_t sub_2542C68A4()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void *_s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_25427215C(v2, (uint64_t)v16);
    sub_25427215C((uint64_t)v16, (uint64_t)v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B08);
    type metadata accessor for DKFaceObservation(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_254259B1C(0, v3[2] + 1, 1, v3);
      }
      unint64_t v5 = v3[2];
      unint64_t v4 = v3[3];
      if (v5 >= v4 >> 1) {
        uint64_t v3 = sub_254259B1C((void *)(v4 > 1), v5 + 1, 1, v3);
      }
      void v3[2] = v5 + 1;
      v3[v5 + 4] = v14;
    }
    else
    {
      sub_25427215C((uint64_t)v16, (uint64_t)v15);
      type metadata accessor for DKBodyObservation(0);
      if (swift_dynamicCast())
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_254259B1C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        unint64_t v8 = v7 + 1;
        if (v7 >= v6 >> 1) {
          uint64_t v3 = sub_254259B1C((void *)(v6 > 1), v7 + 1, 1, v3);
        }
        unint64_t v9 = v14 | 0x2000000000000000;
      }
      else
      {
        sub_25427215C((uint64_t)v16, (uint64_t)v15);
        type metadata accessor for DKObjectObservation(0);
        if (swift_dynamicCast())
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_254259B1C(0, v3[2] + 1, 1, v3);
          }
          unint64_t v7 = v3[2];
          unint64_t v10 = v3[3];
          unint64_t v8 = v7 + 1;
          if (v7 >= v10 >> 1) {
            uint64_t v3 = sub_254259B1C((void *)(v10 > 1), v7 + 1, 1, v3);
          }
          unint64_t v9 = v14 | 0x4000000000000000;
        }
        else
        {
          sub_25427215C((uint64_t)v16, (uint64_t)v15);
          type metadata accessor for DKHandObservation(0);
          if (swift_dynamicCast())
          {
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v3 = sub_254259B1C(0, v3[2] + 1, 1, v3);
            }
            unint64_t v7 = v3[2];
            unint64_t v11 = v3[3];
            unint64_t v8 = v7 + 1;
            if (v7 >= v11 >> 1) {
              uint64_t v3 = sub_254259B1C((void *)(v11 > 1), v7 + 1, 1, v3);
            }
            unint64_t v9 = v14 | 0x6000000000000000;
          }
          else
          {
            sub_25427215C((uint64_t)v16, (uint64_t)v15);
            type metadata accessor for DKIntelligentTrackingState(0);
            if ((swift_dynamicCast() & 1) == 0) {
              goto LABEL_35;
            }
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v3 = sub_254259B1C(0, v3[2] + 1, 1, v3);
            }
            unint64_t v7 = v3[2];
            unint64_t v12 = v3[3];
            unint64_t v8 = v7 + 1;
            if (v7 >= v12 >> 1) {
              uint64_t v3 = sub_254259B1C((void *)(v12 > 1), v7 + 1, 1, v3);
            }
            unint64_t v9 = v14 | 0x8000000000000000;
          }
        }
      }
      void v3[2] = v8;
      v3[v7 + 4] = v9;
    }
    swift_release();
LABEL_35:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for DKKeyframe(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8DC8);
}

void *_s23IntelligentTrackingCore17DKKeyframeStorageC7convert11codableLogsSayAA10DKLoggable_pGSayAA12DKLogCodableOG_tFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  unint64_t v4 = (void *)MEMORY[0x263F8EE78];
  do
  {
    unint64_t v7 = *(void *)(a1 + 8 * v3++ + 32);
    switch(v7 >> 61)
    {
      case 1uLL:
        uint64_t v10 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_254259C2C(0, v4[2] + 1, 1, v4);
        }
        unint64_t v12 = v4[2];
        unint64_t v11 = v4[3];
        unint64_t v13 = v12 + 1;
        if (v12 >= v11 >> 1) {
          unint64_t v4 = sub_254259C2C((void *)(v11 > 1), v12 + 1, 1, v4);
        }
        uint64_t v5 = type metadata accessor for DKBodyObservation(0);
        unint64_t v6 = &protocol witness table for DKBodyObservation;
        goto LABEL_4;
      case 2uLL:
        uint64_t v10 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_254259C2C(0, v4[2] + 1, 1, v4);
        }
        unint64_t v12 = v4[2];
        unint64_t v14 = v4[3];
        unint64_t v13 = v12 + 1;
        if (v12 >= v14 >> 1) {
          unint64_t v4 = sub_254259C2C((void *)(v14 > 1), v12 + 1, 1, v4);
        }
        uint64_t v5 = type metadata accessor for DKObjectObservation(0);
        unint64_t v6 = &protocol witness table for DKObjectObservation;
LABEL_4:
        uint64_t v20 = v6;
        goto LABEL_5;
      case 3uLL:
        uint64_t v10 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_254259C2C(0, v4[2] + 1, 1, v4);
        }
        unint64_t v12 = v4[2];
        unint64_t v15 = v4[3];
        unint64_t v13 = v12 + 1;
        if (v12 >= v15 >> 1) {
          unint64_t v4 = sub_254259C2C((void *)(v15 > 1), v12 + 1, 1, v4);
        }
        uint64_t v5 = type metadata accessor for DKHandObservation(0);
        uint64_t v20 = &protocol witness table for DKHandObservation;
        goto LABEL_5;
      case 4uLL:
        uint64_t v10 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_254259C2C(0, v4[2] + 1, 1, v4);
        }
        unint64_t v12 = v4[2];
        unint64_t v16 = v4[3];
        unint64_t v13 = v12 + 1;
        if (v12 >= v16 >> 1) {
          unint64_t v4 = sub_254259C2C((void *)(v16 > 1), v12 + 1, 1, v4);
        }
        uint64_t v5 = type metadata accessor for DKIntelligentTrackingState(0);
        uint64_t v20 = &protocol witness table for DKIntelligentTrackingState;
LABEL_5:
        uint64_t v19 = v5;
        *(void *)&long long v18 = v10;
        v4[2] = v13;
        sub_25425DF80(&v18, (uint64_t)&v4[5 * v12 + 4]);
        break;
      default:
        swift_retain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v4 = sub_254259C2C(0, v4[2] + 1, 1, v4);
        }
        unint64_t v9 = v4[2];
        unint64_t v8 = v4[3];
        if (v9 >= v8 >> 1) {
          unint64_t v4 = sub_254259C2C((void *)(v8 > 1), v9 + 1, 1, v4);
        }
        uint64_t v19 = type metadata accessor for DKFaceObservation(0);
        uint64_t v20 = &protocol witness table for DKFaceObservation;
        *(void *)&long long v18 = v7;
        v4[2] = v9 + 1;
        sub_25425DF80(&v18, (uint64_t)&v4[5 * v9 + 4]);
        break;
    }
    swift_release();
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_2542C7084()
{
  unint64_t result = qword_269DD8D78;
  if (!qword_269DD8D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8D78);
  }
  return result;
}

unint64_t sub_2542C70D8()
{
  unint64_t result = qword_269DD8D90;
  if (!qword_269DD8D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8D90);
  }
  return result;
}

uint64_t type metadata accessor for DKKeyframeStorage(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8DD8);
}

uint64_t sub_2542C714C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2542C7194(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD8D80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542C7204()
{
  unint64_t result = qword_269DD8DA8;
  if (!qword_269DD8DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8DA8);
  }
  return result;
}

uint64_t type metadata accessor for DKLoggerMetafile(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8DE8);
}

unint64_t sub_2542C7278()
{
  unint64_t result = qword_269DD8DB8;
  if (!qword_269DD8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8DB8);
  }
  return result;
}

uint64_t sub_2542C72CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKLoggerMetafile(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2542C7328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKLoggerMetafile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542C738C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, a2);
}

uint64_t sub_2542C7398(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542C4E70(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time);
}

uint64_t sub_2542C73B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542C73D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs);
}

uint64_t sub_2542C73DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName, a2);
}

uint64_t sub_2542C73E8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

id sub_2542C73F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  *a2 = v2;
  return v2;
}

void sub_2542C740C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = *a1;
  id v3 = v2;
}

uint64_t sub_2542C745C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, a2);
}

uint64_t sub_2542C7468(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542C4E70(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time);
}

uint64_t sub_2542C7488@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542C74A0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
}

uint64_t sub_2542C74AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName, a2);
}

uint64_t keypath_get_4Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  id v3 = (void *)(*a1 + *a2);
  uint64_t v4 = v3[1];
  *a3 = *v3;
  a3[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542C74D0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t keypath_set_5Tm(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v7 = (void *)(*a2 + *a5);
  *unint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of DKLoggable.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DKLoggable.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DKLoggable.time.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void *initializeBufferWithCopyOfBuffer for DKLogCodable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for DKLogCodable()
{
  return swift_release();
}

void *assignWithCopy for DKLogCodable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for DKLogCodable(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKLogCodable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DKLogCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)unint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2542C76D8(void *a1)
{
  return *a1 >> 61;
}

void *sub_2542C76E4(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_2542C76F4(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable()
{
  return &type metadata for DKLogCodable;
}

uint64_t sub_2542C7718()
{
  return type metadata accessor for DKKeyframe(0);
}

uint64_t sub_2542C7720()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKKeyframe(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKKeyframe);
}

uint64_t dispatch thunk of DKKeyframe.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKKeyframe.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKKeyframe.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKKeyframe.logs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKKeyframe.logs.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKKeyframe.logs.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKKeyframe.image.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKKeyframe.image.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKKeyframe.image.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKKeyframe.__allocating_init(time:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_2542C79AC()
{
  return type metadata accessor for DKKeyframeStorage(0);
}

uint64_t sub_2542C79B4()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKKeyframeStorage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKKeyframeStorage);
}

uint64_t dispatch thunk of DKKeyframeStorage.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKKeyframeStorage.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKKeyframeStorage.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(time:imageName:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(keyframe:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DKKeyframeStorage.getKeyframe(logFolder:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKKeyframeStorage.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKLoggerMetafile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25436C7B0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    unint64_t v13 = (uint64_t *)((char *)a1 + v11);
    unint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    unint64_t v16 = (uint64_t *)((char *)a1 + v12);
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DKLoggerMetafile(uint64_t a1)
{
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  unint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)unint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  unint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *assignWithTake for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  unint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKLoggerMetafile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2542C8500);
}

uint64_t sub_2542C8500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DKLoggerMetafile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2542C85E8);
}

uint64_t sub_2542C85E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

void sub_2542C86AC()
{
  sub_25428D510();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for DKLoggerMetafile.CodingKeys()
{
  return &type metadata for DKLoggerMetafile.CodingKeys;
}

unsigned char *_s23IntelligentTrackingCore16DKLoggerMetafileV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542C8824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKKeyframeStorage.CodingKeys()
{
  return &type metadata for DKKeyframeStorage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DKLogCodable.DataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542C8928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable.DataType()
{
  return &type metadata for DKLogCodable.DataType;
}

unsigned char *storeEnumTagSinglePayload for DKLogCodable.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542C8A2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable.CodingKeys()
{
  return &type metadata for DKLogCodable.CodingKeys;
}

unint64_t sub_2542C8A68()
{
  unint64_t result = qword_269DD8DF8;
  if (!qword_269DD8DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8DF8);
  }
  return result;
}

unint64_t sub_2542C8AC0()
{
  unint64_t result = qword_269DD8E00;
  if (!qword_269DD8E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E00);
  }
  return result;
}

unint64_t sub_2542C8B18()
{
  unint64_t result = qword_269DD8E08;
  if (!qword_269DD8E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E08);
  }
  return result;
}

unint64_t sub_2542C8B70()
{
  unint64_t result = qword_269DD8E10;
  if (!qword_269DD8E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E10);
  }
  return result;
}

unint64_t sub_2542C8BC8()
{
  unint64_t result = qword_269DD8E18;
  if (!qword_269DD8E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E18);
  }
  return result;
}

unint64_t sub_2542C8C20()
{
  unint64_t result = qword_269DD8E20;
  if (!qword_269DD8E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E20);
  }
  return result;
}

unint64_t sub_2542C8C78()
{
  unint64_t result = qword_269DD8E28;
  if (!qword_269DD8E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E28);
  }
  return result;
}

unint64_t sub_2542C8CD0()
{
  unint64_t result = qword_269DD8E30;
  if (!qword_269DD8E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E30);
  }
  return result;
}

unint64_t sub_2542C8D28()
{
  unint64_t result = qword_269DD8E38;
  if (!qword_269DD8E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E38);
  }
  return result;
}

unint64_t sub_2542C8D80()
{
  unint64_t result = qword_269DD8E40;
  if (!qword_269DD8E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E40);
  }
  return result;
}

unint64_t sub_2542C8DD4()
{
  unint64_t result = qword_269DD8E48;
  if (!qword_269DD8E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E48);
  }
  return result;
}

uint64_t sub_2542C8E28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D61726679656BLL && a2 == 0xE900000000000073 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL static DKTrackingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKTrackingMode.hash(into:)()
{
  return sub_25436D900();
}

uint64_t sub_2542C8FCC(uint64_t a1)
{
  unint64_t v2 = sub_2542C9C90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C9008(uint64_t a1)
{
  unint64_t v2 = sub_2542C9C90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C9044()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x70757472617473;
      break;
    case 2:
      uint64_t result = 0x65766973736170;
      break;
    case 3:
      uint64_t result = 0x657669746361;
      break;
    case 4:
      uint64_t result = 0x686372616573;
      break;
    case 5:
      uint64_t result = 0x6F546E7275746572;
      break;
    case 6:
      uint64_t result = 0x30383170696C66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542C911C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542CC904(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542C9144(uint64_t a1)
{
  unint64_t v2 = sub_2542C9B40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C9180(uint64_t a1)
{
  unint64_t v2 = sub_2542C9B40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C91BC(uint64_t a1)
{
  unint64_t v2 = sub_2542C9B94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C91F8(uint64_t a1)
{
  unint64_t v2 = sub_2542C9B94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C9234(uint64_t a1)
{
  unint64_t v2 = sub_2542C9CE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C9270(uint64_t a1)
{
  unint64_t v2 = sub_2542C9CE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C92AC(uint64_t a1)
{
  unint64_t v2 = sub_2542C9BE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C92E8(uint64_t a1)
{
  unint64_t v2 = sub_2542C9BE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C9324(uint64_t a1)
{
  unint64_t v2 = sub_2542C9C3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C9360(uint64_t a1)
{
  unint64_t v2 = sub_2542C9C3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C939C(uint64_t a1)
{
  unint64_t v2 = sub_2542C9D38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C93D8(uint64_t a1)
{
  unint64_t v2 = sub_2542C9D38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542C9414(uint64_t a1)
{
  unint64_t v2 = sub_2542C9D8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542C9450(uint64_t a1)
{
  unint64_t v2 = sub_2542C9D8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKTrackingMode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E50);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  double v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E58);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E60);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  CGFloat v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E68);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E70);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E78);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E80);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8E88);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542C9B40();
  sub_25436D950();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_2542C9D38();
      uint64_t v26 = v48;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_2542C9CE4();
      uint64_t v27 = v33;
      uint64_t v26 = v48;
      sub_25436D680();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_2542C9C90();
      uint64_t v27 = v36;
      uint64_t v26 = v48;
      sub_25436D680();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_2542C9C3C();
      uint64_t v27 = v39;
      uint64_t v26 = v48;
      sub_25436D680();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_2542C9BE8();
      uint64_t v27 = v42;
      uint64_t v26 = v48;
      sub_25436D680();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_2542C9B94();
      uint64_t v27 = v45;
      uint64_t v26 = v48;
      sub_25436D680();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_2542C9D8C();
      uint64_t v24 = v48;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

unint64_t sub_2542C9B40()
{
  unint64_t result = qword_269DD8E90;
  if (!qword_269DD8E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E90);
  }
  return result;
}

unint64_t sub_2542C9B94()
{
  unint64_t result = qword_269DD8E98;
  if (!qword_269DD8E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8E98);
  }
  return result;
}

unint64_t sub_2542C9BE8()
{
  unint64_t result = qword_269DD8EA0;
  if (!qword_269DD8EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EA0);
  }
  return result;
}

unint64_t sub_2542C9C3C()
{
  unint64_t result = qword_269DD8EA8;
  if (!qword_269DD8EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EA8);
  }
  return result;
}

unint64_t sub_2542C9C90()
{
  unint64_t result = qword_269DD8EB0;
  if (!qword_269DD8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EB0);
  }
  return result;
}

unint64_t sub_2542C9CE4()
{
  unint64_t result = qword_269DD8EB8;
  if (!qword_269DD8EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EB8);
  }
  return result;
}

unint64_t sub_2542C9D38()
{
  unint64_t result = qword_269DD8EC0;
  if (!qword_269DD8EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EC0);
  }
  return result;
}

unint64_t sub_2542C9D8C()
{
  unint64_t result = qword_269DD8EC8;
  if (!qword_269DD8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8EC8);
  }
  return result;
}

uint64_t DKTrackingMode.hashValue.getter()
{
  return sub_25436D930();
}

uint64_t DKTrackingMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8ED0);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8ED8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8EE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8EE8);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8EF0);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8EF8);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8F00);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8F08);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_2542C9B40();
  uint64_t v26 = v66;
  sub_25436D940();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    double v45 = v17;
    uint64_t v28 = v61;
    uint64_t v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_25436D660();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_2542C9D38();
          uint64_t v27 = v45;
          sub_25436D5B0();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_2542C9CE4();
          uint64_t v27 = v59;
          sub_25436D5B0();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_2542C9C90();
          uint64_t v27 = v28;
          sub_25436D5B0();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_2542C9C3C();
          sub_25436D5B0();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_2542C9BE8();
          sub_25436D5B0();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_2542C9B94();
          uint64_t v27 = v60;
          sub_25436D5B0();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_2542C9D8C();
          uint64_t v34 = v44;
          sub_25436D5B0();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      *uint64_t v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_25436D350();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
      *uint64_t v38 = &type metadata for DKTrackingMode;
      sub_25436D5C0();
      sub_25436D340();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
}

unint64_t sub_2542CA65C()
{
  unint64_t result = qword_269DD8F10;
  if (!qword_269DD8F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F10);
  }
  return result;
}

uint64_t sub_2542CA6B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKTrackingMode.init(from:)(a1, a2);
}

uint64_t sub_2542CA6C8(void *a1)
{
  return DKTrackingMode.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for DKTrackingMode()
{
  return &type metadata for DKTrackingMode;
}

uint64_t sub_2542CA6F4(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = a1;
  swift_retain();
  uint64_t v4 = sub_254258C4C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v6 = *((void *)v4 + 2);
  unint64_t v5 = *((void *)v4 + 3);
  int64_t v7 = v5 >> 1;
  unint64_t v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    uint64_t v4 = sub_254258C4C((char *)(v5 > 1), v6 + 1, 1, v4);
    unint64_t v5 = *((void *)v4 + 3);
    int64_t v7 = v5 >> 1;
  }
  *((void *)v4 + 2) = v8;
  uint64_t v9 = &v4[3 * v6];
  *((_WORD *)v9 + 16) = 256;
  v9[34] = 4;
  unint64_t v10 = v6 + 2;
  if (v7 < (uint64_t)(v6 + 2)) {
    uint64_t v4 = sub_254258C4C((char *)(v5 > 1), v6 + 2, 1, v4);
  }
  *((void *)v4 + 2) = v10;
  uint64_t v11 = &v4[3 * v8];
  *((_WORD *)v11 + 16) = 256;
  v11[34] = 8;
  unint64_t v12 = *((void *)v4 + 3);
  unint64_t v13 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v12 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v12 > 1), v6 + 3, 1, v4);
  }
  *((void *)v4 + 2) = v13;
  uint64_t v14 = &v4[3 * v10];
  *((_WORD *)v14 + 16) = 513;
  v14[34] = 1;
  unint64_t v15 = *((void *)v4 + 3);
  unint64_t v16 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v15 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v15 > 1), v6 + 4, 1, v4);
  }
  *((void *)v4 + 2) = v16;
  uint64_t v17 = &v4[3 * v13];
  *((_WORD *)v17 + 16) = 769;
  v17[34] = 3;
  unint64_t v18 = *((void *)v4 + 3);
  unint64_t v19 = v6 + 5;
  if ((uint64_t)(v6 + 5) > (uint64_t)(v18 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v18 > 1), v6 + 5, 1, v4);
  }
  *((void *)v4 + 2) = v19;
  uint64_t v20 = &v4[3 * v16];
  *((_WORD *)v20 + 16) = 1025;
  v20[34] = 10;
  unint64_t v21 = *((void *)v4 + 3);
  unint64_t v22 = v6 + 6;
  if ((uint64_t)(v6 + 6) > (uint64_t)(v21 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v21 > 1), v6 + 6, 1, v4);
  }
  *((void *)v4 + 2) = v22;
  uint64_t v23 = &v4[3 * v19];
  *((_WORD *)v23 + 16) = 1026;
  v23[34] = 10;
  unint64_t v24 = *((void *)v4 + 3);
  unint64_t v25 = v6 + 7;
  if ((uint64_t)(v6 + 7) > (uint64_t)(v24 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v24 > 1), v6 + 7, 1, v4);
  }
  *((void *)v4 + 2) = v25;
  uint64_t v26 = &v4[3 * v22];
  *((_WORD *)v26 + 16) = 1026;
  v26[34] = 2;
  unint64_t v27 = *((void *)v4 + 3);
  unint64_t v28 = v6 + 8;
  if ((uint64_t)(v6 + 8) > (uint64_t)(v27 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v27 > 1), v6 + 8, 1, v4);
  }
  *((void *)v4 + 2) = v28;
  uint64_t v29 = &v4[3 * v25];
  *((_WORD *)v29 + 16) = 516;
  v29[34] = 1;
  unint64_t v30 = *((void *)v4 + 3);
  unint64_t v31 = v6 + 9;
  if ((uint64_t)(v6 + 9) > (uint64_t)(v30 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v30 > 1), v6 + 9, 1, v4);
  }
  *((void *)v4 + 2) = v31;
  uint64_t v32 = &v4[3 * v28];
  *((_WORD *)v32 + 16) = 260;
  v32[34] = 4;
  unint64_t v33 = *((void *)v4 + 3);
  unint64_t v34 = v6 + 10;
  if ((uint64_t)(v6 + 10) > (uint64_t)(v33 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v33 > 1), v6 + 10, 1, v4);
  }
  *((void *)v4 + 2) = v34;
  uint64_t v35 = &v4[3 * v31];
  *((_WORD *)v35 + 16) = 260;
  v35[34] = 9;
  unint64_t v36 = *((void *)v4 + 3);
  unint64_t v37 = v6 + 11;
  if ((uint64_t)(v6 + 11) > (uint64_t)(v36 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v36 > 1), v6 + 11, 1, v4);
  }
  *((void *)v4 + 2) = v37;
  uint64_t v38 = &v4[3 * v34];
  *((_WORD *)v38 + 16) = 515;
  v38[34] = 1;
  unint64_t v39 = *((void *)v4 + 3);
  unint64_t v40 = v6 + 12;
  if ((uint64_t)(v6 + 12) > (uint64_t)(v39 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v39 > 1), v6 + 12, 1, v4);
  }
  *((void *)v4 + 2) = v40;
  uint64_t v41 = &v4[3 * v37];
  *((_WORD *)v41 + 16) = 259;
  v41[34] = 5;
  unint64_t v42 = *((void *)v4 + 3);
  unint64_t v43 = v6 + 13;
  if ((uint64_t)(v6 + 13) > (uint64_t)(v42 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v42 > 1), v6 + 13, 1, v4);
  }
  *((void *)v4 + 2) = v43;
  uint64_t v44 = &v4[3 * v40];
  *((_WORD *)v44 + 16) = 259;
  v44[34] = 6;
  unint64_t v45 = *((void *)v4 + 3);
  unint64_t v46 = v6 + 14;
  if ((uint64_t)(v6 + 14) > (uint64_t)(v45 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v45 > 1), v6 + 14, 1, v4);
  }
  *((void *)v4 + 2) = v46;
  uint64_t v47 = &v4[3 * v43];
  *((_WORD *)v47 + 16) = 1281;
  v47[34] = 11;
  unint64_t v48 = *((void *)v4 + 3);
  unint64_t v49 = v6 + 15;
  if ((uint64_t)(v6 + 15) > (uint64_t)(v48 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v48 > 1), v6 + 15, 1, v4);
  }
  *((void *)v4 + 2) = v49;
  uint64_t v50 = &v4[3 * v46];
  *((_WORD *)v50 + 16) = 1282;
  v50[34] = 11;
  unint64_t v51 = *((void *)v4 + 3);
  unint64_t v52 = v6 + 16;
  if ((uint64_t)(v6 + 16) > (uint64_t)(v51 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v51 > 1), v6 + 16, 1, v4);
  }
  *((void *)v4 + 2) = v52;
  uint64_t v53 = &v4[3 * v49];
  *((_WORD *)v53 + 16) = 261;
  v53[34] = 4;
  unint64_t v54 = *((void *)v4 + 3);
  unint64_t v55 = v6 + 17;
  if ((uint64_t)(v6 + 17) > (uint64_t)(v54 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v54 > 1), v6 + 17, 1, v4);
  }
  *((void *)v4 + 2) = v55;
  uint64_t v56 = &v4[3 * v52];
  *((_WORD *)v56 + 16) = 261;
  v56[34] = 12;
  unint64_t v57 = *((void *)v4 + 3);
  unint64_t v58 = v6 + 18;
  if ((uint64_t)(v6 + 18) > (uint64_t)(v57 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v57 > 1), v6 + 18, 1, v4);
  }
  *((void *)v4 + 2) = v58;
  unint64_t v59 = &v4[3 * v55];
  *((_WORD *)v59 + 16) = 1;
  v59[34] = 7;
  unint64_t v60 = *((void *)v4 + 3);
  unint64_t v61 = v6 + 19;
  if ((uint64_t)(v6 + 19) > (uint64_t)(v60 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v60 > 1), v6 + 19, 1, v4);
  }
  *((void *)v4 + 2) = v61;
  uint64_t v62 = &v4[3 * v58];
  *((_WORD *)v62 + 16) = 2;
  v62[34] = 7;
  unint64_t v63 = *((void *)v4 + 3);
  unint64_t v64 = v6 + 20;
  if ((uint64_t)(v6 + 20) > (uint64_t)(v63 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v63 > 1), v6 + 20, 1, v4);
  }
  *((void *)v4 + 2) = v64;
  uint64_t v65 = &v4[3 * v61];
  *((_WORD *)v65 + 16) = 256;
  v65[34] = 4;
  unint64_t v66 = *((void *)v4 + 3);
  if ((uint64_t)(v6 + 21) > (uint64_t)(v66 >> 1)) {
    uint64_t v4 = sub_254258C4C((char *)(v66 > 1), v6 + 21, 1, v4);
  }
  *((void *)v4 + 2) = v6 + 21;
  char v67 = &v4[3 * v64];
  *((_WORD *)v67 + 16) = 256;
  v67[34] = 8;
  char v68 = *(unsigned char *)(*(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config)
                 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8FB0);
  swift_allocObject();
  uint64_t v69 = sub_25424F1D4((v68 & 1) == 0, (uint64_t)v4);
  swift_release();
  *(void *)(v2 + 24) = v69;
  return v2;
}

uint64_t sub_2542CADCC(char *a1)
{
  uint64_t v130 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  CGRect v126 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  CGRect v124 = (char *)&v118 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v121 = (uint64_t)&v118 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v119 = (uint64_t)&v118 - v9;
  uint64_t v10 = sub_25436C7B0();
  uint64_t v131 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  CGRect v123 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  CGRect v122 = (char *)&v118 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  CGRect v120 = (char *)&v118 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  CGRect v118 = (char *)&v118 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v118 - v20;
  MEMORY[0x270FA5388](v19);
  CGRect v125 = (char *)&v118 - v22;
  int64_t v127 = v1;
  uint64_t v23 = *(void *)(*(void *)(v1 + 16)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals);
  uint64_t v24 = v23 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & *(void *)(v23 + 56);
  int64_t v28 = (unint64_t)(v25 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v29 = 0;
  for (uint64_t i = (char *)MEMORY[0x263F8EE78]; ; i[v39 + 32] = v31)
  {
    if (v27)
    {
      unint64_t v32 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      unint64_t v33 = v32 | (v29 << 6);
      goto LABEL_22;
    }
    int64_t v34 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_112;
    }
    if (v34 >= v28) {
      goto LABEL_57;
    }
    unint64_t v35 = *(void *)(v24 + 8 * v34);
    ++v29;
    if (!v35)
    {
      int64_t v29 = v34 + 1;
      if (v34 + 1 >= v28) {
        goto LABEL_57;
      }
      unint64_t v35 = *(void *)(v24 + 8 * v29);
      if (!v35)
      {
        int64_t v29 = v34 + 2;
        if (v34 + 2 >= v28) {
          goto LABEL_57;
        }
        unint64_t v35 = *(void *)(v24 + 8 * v29);
        if (!v35) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v27 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v29 << 6);
LABEL_22:
    uint64_t v37 = *(void *)(v23 + 48);
    switch(*(void *)(v37 + 8 * v33))
    {
      case 0:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v38 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v38 >> 1) {
          uint64_t i = sub_254258D74((char *)(v38 > 1), v39 + 1, 1, i);
        }
        char v31 = 4;
        break;
      case 1:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v44 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v44 >> 1) {
          uint64_t i = sub_254258D74((char *)(v44 > 1), v39 + 1, 1, i);
        }
        char v31 = 3;
        break;
      case 2:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v42 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v42 >> 1) {
          uint64_t i = sub_254258D74((char *)(v42 > 1), v39 + 1, 1, i);
        }
        char v31 = 10;
        break;
      case 3:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v43 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v43 >> 1) {
          uint64_t i = sub_254258D74((char *)(v43 > 1), v39 + 1, 1, i);
        }
        char v31 = 11;
        break;
      case 4:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v41 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v41 >> 1) {
          uint64_t i = sub_254258D74((char *)(v41 > 1), v39 + 1, 1, i);
        }
        char v31 = 6;
        break;
      case 5:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v45 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v45 >> 1) {
          uint64_t i = sub_254258D74((char *)(v45 > 1), v39 + 1, 1, i);
        }
        char v31 = 9;
        break;
      case 6:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
        }
        unint64_t v39 = *((void *)i + 2);
        unint64_t v46 = *((void *)i + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v46 >> 1) {
          uint64_t i = sub_254258D74((char *)(v46 > 1), v39 + 1, 1, i);
        }
        char v31 = 7;
        break;
      default:
        uint64_t v133 = *(void *)(v37 + 8 * v33);
        sub_25436D7F0();
        __break(1u);
        JUMPOUT(0x2542CBDF0);
    }
    *((void *)i + 2) = v40;
  }
  int64_t v36 = v34 + 3;
  if (v36 < v28)
  {
    unint64_t v35 = *(void *)(v24 + 8 * v36);
    if (!v35)
    {
      while (1)
      {
        int64_t v29 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          break;
        }
        if (v29 >= v28) {
          goto LABEL_57;
        }
        unint64_t v35 = *(void *)(v24 + 8 * v29);
        ++v36;
        if (v35) {
          goto LABEL_21;
        }
      }
LABEL_112:
      __break(1u);
LABEL_113:
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
LABEL_59:
      uint64_t v52 = v131;
      unint64_t v54 = *((void *)i + 2);
      unint64_t v53 = *((void *)i + 3);
      unint64_t v55 = v54 + 1;
      if (v54 >= v53 >> 1) {
        uint64_t i = sub_254258D74((char *)(v53 > 1), v54 + 1, 1, i);
      }
      char v56 = 2;
LABEL_67:
      *((void *)i + 2) = v55;
      i[v54 + 32] = v56;
      goto LABEL_69;
    }
    int64_t v29 = v36;
    goto LABEL_21;
  }
LABEL_57:
  swift_release();
  uint64_t v47 = v131;
  unint64_t v48 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  v48(v125, &v130[OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time], v10);
  int64_t v28 = v127;
  v48(v21, (char *)(*(void *)(v127 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime), v10);
  sub_25436C700();
  double v50 = v49;
  unint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
  v51(v21, v10);
  uint64_t v129 = v10;
  uint64_t v130 = (char *)v51;
  if (v50 > 3.0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_113;
    }
    goto LABEL_59;
  }
  v48(v21, (char *)(*(void *)(v28 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime), v10);
  sub_25436C700();
  double v58 = v57;
  v51(v21, v10);
  if (v58 < 1.0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v131;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
    }
    unint64_t v54 = *((void *)i + 2);
    unint64_t v60 = *((void *)i + 3);
    unint64_t v55 = v54 + 1;
    char v56 = 1;
    if (v54 >= v60 >> 1) {
      uint64_t i = sub_254258D74((char *)(v60 > 1), v54 + 1, 1, i);
    }
    goto LABEL_67;
  }
  uint64_t v52 = v131;
LABEL_69:
  uint64_t v61 = (uint64_t)v126;
  uint64_t v62 = v119;
  sub_254272818(*(void *)(v28 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v119);
  uint64_t v63 = v52;
  unint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v65 = v129;
  CGRect v128 = v64;
  if (v64(v62, 1, v129) == 1)
  {
    unint64_t v66 = v118;
    sub_25436C6F0();
    sub_254258BD8(v62);
  }
  else
  {
    unint64_t v66 = v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v118, v62, v65);
  }
  uint64_t v67 = (uint64_t)v124;
  char v68 = (void (*)(char *, uint64_t))v130;
  sub_25436C700();
  double v70 = v69;
  v68(v66, v65);
  if (v70 <= 5.0)
  {
    uint64_t v75 = v129;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
    }
    unint64_t v72 = *((void *)i + 2);
    unint64_t v71 = *((void *)i + 3);
    if (v72 >= v71 >> 1) {
      uint64_t i = sub_254258D74((char *)(v71 > 1), v72 + 1, 1, i);
    }
    *((void *)i + 2) = v72 + 1;
    i[v72 + 32] = 8;
    uint64_t v73 = *(void *)(v28 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime;
    swift_retain();
    sub_254258BD8(v73);
    uint64_t v74 = v73;
    int64_t v28 = v127;
    uint64_t v75 = v129;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56))(v74, 1, 1, v129);
    swift_release();
    uint64_t v61 = (uint64_t)v126;
    uint64_t v67 = (uint64_t)v124;
  }
  uint64_t v76 = v121;
  sub_254272818(*(void *)(v28 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, v121);
  if (v128(v76, 1, v75) == 1)
  {
    uint64_t v77 = v120;
    sub_25436C6F0();
    sub_254258BD8(v76);
  }
  else
  {
    uint64_t v77 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v120, v76, v75);
  }
  sub_25436C700();
  double v79 = v78;
  unint64_t v80 = (void (*)(char *, uint64_t))v130;
  ((void (*)(char *, uint64_t))v130)(v77, v75);
  if (v79 <= 5.0)
  {
    uint64_t v84 = v129;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
    }
    unint64_t v82 = *((void *)i + 2);
    unint64_t v81 = *((void *)i + 3);
    if (v82 >= v81 >> 1) {
      uint64_t i = sub_254258D74((char *)(v81 > 1), v82 + 1, 1, i);
    }
    *((void *)i + 2) = v82 + 1;
    i[v82 + 32] = 9;
    uint64_t v83 = *(void *)(v28 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime;
    swift_retain();
    sub_254258BD8(v83);
    uint64_t v84 = v129;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56))(v83, 1, 1, v129);
    swift_release();
    uint64_t v61 = (uint64_t)v126;
    uint64_t v67 = (uint64_t)v124;
  }
  sub_254272818(*(void *)(v28 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, v67);
  if (v128(v67, 1, v84) == 1)
  {
    uint64_t v85 = v122;
    sub_25436C6F0();
    sub_254258BD8(v67);
  }
  else
  {
    uint64_t v85 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v122, v67, v84);
  }
  sub_25436C700();
  double v87 = v86;
  v80(v85, v84);
  if (v87 <= 60.0)
  {
    uint64_t v91 = v129;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
    }
    unint64_t v89 = *((void *)i + 2);
    unint64_t v88 = *((void *)i + 3);
    if (v89 >= v88 >> 1) {
      uint64_t i = sub_254258D74((char *)(v88 > 1), v89 + 1, 1, i);
    }
    *((void *)i + 2) = v89 + 1;
    i[v89 + 32] = 6;
    uint64_t v90 = *(void *)(v28 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
    swift_retain();
    sub_254258BD8(v90);
    uint64_t v91 = v129;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56))(v90, 1, 1, v129);
    swift_release();
    uint64_t v61 = (uint64_t)v126;
  }
  sub_254272818(*(void *)(v28 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, v61);
  if (v128(v61, 1, v91) == 1)
  {
    uint64_t v92 = v123;
    sub_25436C6F0();
    sub_254258BD8(v61);
    uint64_t v93 = v131;
  }
  else
  {
    uint64_t v93 = v131;
    uint64_t v92 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v123, v61, v91);
  }
  uint64_t v94 = v91;
  sub_25436C700();
  double v96 = v95;
  ((void (*)(char *, uint64_t))v130)(v92, v91);
  if (v96 > 5.0)
  {
    LOBYTE(v133) = 8;
    os_log_type_t v97 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v133, 0xD000000000000012, 0x800000025437C650, v97);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t i = sub_254258D74(0, *((void *)i + 2) + 1, 1, i);
    }
    unint64_t v99 = *((void *)i + 2);
    unint64_t v98 = *((void *)i + 3);
    if (v99 >= v98 >> 1) {
      uint64_t i = sub_254258D74((char *)(v98 > 1), v99 + 1, 1, i);
    }
    *((void *)i + 2) = v99 + 1;
    i[v99 + 32] = 12;
    uint64_t v100 = *(void *)(v28 + 16)
         + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime;
    swift_retain();
    sub_254258BD8(v100);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v100, 1, 1, v91);
    swift_release();
  }
  uint64_t v101 = *(void *)(v28 + 24);
  unint64_t v102 = *(void **)(v101 + 32);
  swift_retain();
  objc_msgSend(v102, sel_lock);
  int v103 = *(unsigned __int8 *)(v101 + 16);
  objc_msgSend(v102, sel_unlock);
  swift_release();
  uint64_t v104 = *(void *)(v28 + 24);
  uint64_t v105 = *(void **)(v104 + 32);
  swift_retain();
  objc_msgSend(v105, sel_lock);
  LOBYTE(v102) = sub_254290B2C(v104, (uint64_t)i);
  unint64_t v106 = v105;
  int64_t v107 = v127;
  objc_msgSend(v106, sel_unlock);
  swift_release();
  swift_bridgeObjectRelease();
  if (v102)
  {
    v135[0] = 8;
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    sub_25436D290();
    sub_25436CCB0();
    uint64_t v108 = *(void *)(v107 + 24);
    uint64_t v109 = *(void **)(v108 + 32);
    swift_retain();
    objc_msgSend(v109, sel_lock);
    char v110 = *(unsigned char *)(v108 + 16);
    objc_msgSend(v109, sel_unlock);
    swift_release();
    char v132 = v110;
    sub_25436D460();
    uint64_t v111 = v133;
    unint64_t v112 = v134;
    os_log_type_t v113 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v135, v111, v112, v113);
    swift_bridgeObjectRelease();
  }
  uint64_t v114 = *(void *)(v107 + 24);
  uint64_t v115 = *(void **)(v114 + 32);
  swift_retain();
  objc_msgSend(v115, sel_lock);
  int v116 = *(unsigned __int8 *)(v114 + 16);
  objc_msgSend(v115, sel_unlock);
  swift_release();
  ((void (*)(char *, uint64_t))v130)(v125, v94);
  return v103 | (v116 << 8);
}

uint64_t sub_2542CBE0C()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKIntelligentTrackingFSM()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingFSM.Event(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingFSM.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542CBFCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingFSM.Event()
{
  return &type metadata for DKIntelligentTrackingFSM.Event;
}

unsigned char *storeEnumTagSinglePayload for DKIntelligentTrackingFSM.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542CC0D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingFSM.State()
{
  return &type metadata for DKIntelligentTrackingFSM.State;
}

unsigned char *_s23IntelligentTrackingCore14DKTrackingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542CC1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKTrackingMode.CodingKeys()
{
  return &type metadata for DKTrackingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.UnknownCodingKeys()
{
  return &type metadata for DKTrackingMode.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.StartupCodingKeys()
{
  return &type metadata for DKTrackingMode.StartupCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.PassiveCodingKeys()
{
  return &type metadata for DKTrackingMode.PassiveCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.ActiveCodingKeys()
{
  return &type metadata for DKTrackingMode.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.SearchCodingKeys()
{
  return &type metadata for DKTrackingMode.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.ReturnToBaseCodingKeys()
{
  return &type metadata for DKTrackingMode.ReturnToBaseCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.Flip180CodingKeys()
{
  return &type metadata for DKTrackingMode.Flip180CodingKeys;
}

unint64_t sub_2542CC280()
{
  unint64_t result = qword_269DD8F18;
  if (!qword_269DD8F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F18);
  }
  return result;
}

unint64_t sub_2542CC2D8()
{
  unint64_t result = qword_269DD8F20;
  if (!qword_269DD8F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F20);
  }
  return result;
}

unint64_t sub_2542CC330()
{
  unint64_t result = qword_269DD8F28;
  if (!qword_269DD8F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F28);
  }
  return result;
}

unint64_t sub_2542CC388()
{
  unint64_t result = qword_269DD8F30;
  if (!qword_269DD8F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F30);
  }
  return result;
}

unint64_t sub_2542CC3E0()
{
  unint64_t result = qword_269DD8F38;
  if (!qword_269DD8F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F38);
  }
  return result;
}

unint64_t sub_2542CC438()
{
  unint64_t result = qword_269DD8F40;
  if (!qword_269DD8F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F40);
  }
  return result;
}

unint64_t sub_2542CC490()
{
  unint64_t result = qword_269DD8F48;
  if (!qword_269DD8F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F48);
  }
  return result;
}

unint64_t sub_2542CC4E8()
{
  unint64_t result = qword_269DD8F50;
  if (!qword_269DD8F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F50);
  }
  return result;
}

unint64_t sub_2542CC540()
{
  unint64_t result = qword_269DD8F58;
  if (!qword_269DD8F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F58);
  }
  return result;
}

unint64_t sub_2542CC598()
{
  unint64_t result = qword_269DD8F60;
  if (!qword_269DD8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F60);
  }
  return result;
}

unint64_t sub_2542CC5F0()
{
  unint64_t result = qword_269DD8F68;
  if (!qword_269DD8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F68);
  }
  return result;
}

unint64_t sub_2542CC648()
{
  unint64_t result = qword_269DD8F70;
  if (!qword_269DD8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F70);
  }
  return result;
}

unint64_t sub_2542CC6A0()
{
  unint64_t result = qword_269DD8F78;
  if (!qword_269DD8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F78);
  }
  return result;
}

unint64_t sub_2542CC6F8()
{
  unint64_t result = qword_269DD8F80;
  if (!qword_269DD8F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F80);
  }
  return result;
}

unint64_t sub_2542CC750()
{
  unint64_t result = qword_269DD8F88;
  if (!qword_269DD8F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F88);
  }
  return result;
}

unint64_t sub_2542CC7A8()
{
  unint64_t result = qword_269DD8F90;
  if (!qword_269DD8F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F90);
  }
  return result;
}

unint64_t sub_2542CC800()
{
  unint64_t result = qword_269DD8F98;
  if (!qword_269DD8F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8F98);
  }
  return result;
}

unint64_t sub_2542CC858()
{
  unint64_t result = qword_269DD8FA0;
  if (!qword_269DD8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8FA0);
  }
  return result;
}

unint64_t sub_2542CC8B0()
{
  unint64_t result = qword_269DD8FA8;
  if (!qword_269DD8FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8FA8);
  }
  return result;
}

uint64_t sub_2542CC904(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70757472617473 && a2 == 0xE700000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65766973736170 && a2 == 0xE700000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F546E7275746572 && a2 == 0xEC00000065736142 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x30383170696C66 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BOOL static DKPersonMotionFilter.SearchDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKPersonMotionFilter.SearchDirection.hash(into:)()
{
  return sub_25436D900();
}

uint64_t DKPersonMotionFilter.SearchDirection.hashValue.getter()
{
  return sub_25436D930();
}

uint64_t sub_2542CCC7C@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, a1);
}

uint64_t sub_2542CCC88(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time);
}

uint64_t (*sub_2542CCC94())()
{
  return nullsub_1;
}

__n128 sub_2542CCCBC@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2542CCCDC(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
}

uint64_t (*sub_2542CCCEC())()
{
  return nullsub_1;
}

__n128 sub_2542CCD14@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2542CCD34(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
}

uint64_t (*sub_2542CCD44())()
{
  return nullsub_1;
}

uint64_t sub_2542CCD6C()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
}

uint64_t sub_2542CCD84(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CCDA0())()
{
  return nullsub_1;
}

uint64_t sub_2542CCDC8()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
}

uint64_t sub_2542CCDE0(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CCDFC())()
{
  return nullsub_1;
}

uint64_t sub_2542CCE24()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
}

uint64_t sub_2542CCE3C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CCE58())()
{
  return nullsub_1;
}

uint64_t sub_2542CCE80()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
}

uint64_t sub_2542CCE98(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CCEB4())()
{
  return nullsub_1;
}

uint64_t DKPersonMotionFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKPersonMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2542CCFE0@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, a1);
}

uint64_t sub_2542CCFEC(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated);
}

uint64_t (*sub_2542CCFF8())()
{
  return nullsub_1;
}

uint64_t sub_2542CD020@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a1);
}

uint64_t sub_2542CD02C(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated);
}

uint64_t (*sub_2542CD038())()
{
  return nullsub_1;
}

uint64_t sub_2542CD060@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a1);
}

uint64_t sub_2542CD06C(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated);
}

uint64_t (*sub_2542CD078())()
{
  return nullsub_1;
}

uint64_t sub_2542CD0A0()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
}

uint64_t sub_2542CD0B0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542CD0C0())()
{
  return nullsub_1;
}

uint64_t sub_2542CD0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_254261A9C(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_2542CD124(uint64_t a1)
{
  return sub_2542CD8F8(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t (*sub_2542CD15C())()
{
  return nullsub_1;
}

double sub_2542CD184()
{
  return sub_2542B4228(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
}

void *sub_2542CD190(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect, a1, a2, a3, a4);
}

uint64_t (*sub_2542CD19C())()
{
  return nullsub_1;
}

double sub_2542CD1C4()
{
  return sub_2542B4228(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
}

void *sub_2542CD1D0(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect, a1, a2, a3, a4);
}

uint64_t (*sub_2542CD1DC())()
{
  return nullsub_1;
}

uint64_t sub_2542CD204()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
}

uint64_t sub_2542CD21C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CD238())()
{
  return nullsub_1;
}

uint64_t sub_2542CD260()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
}

uint64_t sub_2542CD278(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CD294())()
{
  return nullsub_1;
}

uint64_t sub_2542CD2BC()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
}

uint64_t sub_2542CD2D4(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542CD2F0())()
{
  return nullsub_1;
}

uint64_t sub_2542CD318(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), void *a7)
{
  uint64_t v11 = a5(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v15 - v12;
  sub_254261A9C(a1, (uint64_t)&v15 - v12, a6);
  return sub_2542CD8F8((uint64_t)v13, *a2 + *a7, a6);
}

uint64_t sub_2542CD3C4@<X0>(uint64_t a1@<X8>)
{
  return sub_254261A9C(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_2542CD400(uint64_t a1)
{
  return sub_2542CD8F8(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t (*sub_2542CD438())()
{
  return nullsub_1;
}

uint64_t sub_2542CD460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, uint64_t a18, char a19, uint64_t a20)
{
  uint64_t v31 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  uint64_t v32 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  uint64_t v33 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  uint64_t v34 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  uint64_t v35 = sub_25436C7B0();
  int64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32);
  v36(v34, a1, v35);
  v36(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a2, v35);
  v36(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a3, v35);
  *(void *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = a4;
  sub_254291724(a5, v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion);
  uint64_t v37 = (double *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  *uint64_t v37 = a9;
  v37[1] = a10;
  v37[2] = a11;
  v37[3] = a12;
  unint64_t v38 = (double *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
  *unint64_t v38 = a13;
  v38[1] = a14;
  v38[2] = a15;
  v38[3] = a16;
  *(void *)uint64_t v31 = a6;
  *(unsigned char *)(v31 + 8) = a7 & 1;
  *(void *)uint64_t v32 = a8;
  *(unsigned char *)(v32 + 8) = a17 & 1;
  *(void *)uint64_t v33 = a18;
  *(unsigned char *)(v33 + 8) = a19 & 1;
  sub_254291724(a20, v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera);
  return v20;
}

uint64_t DKPersonMotionFilter.State.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, v2);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return v0;
}

uint64_t DKPersonMotionFilter.State.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, v2);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return swift_deallocClassInstance();
}

uint64_t DKPersonMotionFilter.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_2542CD884@<X0>(uint64_t a1@<X8>)
{
  return sub_254261A9C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, a1, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_2542CD8C0(uint64_t a1)
{
  return sub_2542CD8F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_2542CD8F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_2542CD960())()
{
  return nullsub_1;
}

uint64_t sub_2542CD988()
{
  return swift_retain();
}

uint64_t sub_2542CD998(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CD9B0())()
{
  return nullsub_1;
}

uint64_t sub_2542CD9D8()
{
  return swift_retain();
}

uint64_t sub_2542CD9E8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDA00())()
{
  return nullsub_1;
}

uint64_t sub_2542CDA28()
{
  return swift_retain();
}

uint64_t sub_2542CDA38(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDA50())()
{
  return nullsub_1;
}

uint64_t sub_2542CDA78()
{
  return swift_retain();
}

uint64_t sub_2542CDA88(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDAA0())()
{
  return nullsub_1;
}

uint64_t sub_2542CDAC8()
{
  return swift_retain();
}

uint64_t sub_2542CDAD8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDAF0())()
{
  return nullsub_1;
}

uint64_t sub_2542CDB18()
{
  return swift_retain();
}

uint64_t sub_2542CDB28(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDB40())()
{
  return nullsub_1;
}

uint64_t sub_2542CDB68()
{
  return swift_retain();
}

uint64_t sub_2542CDB78(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDB90())()
{
  return nullsub_1;
}

uint64_t sub_2542CDBB8()
{
  return swift_retain();
}

uint64_t sub_2542CDBC8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDBE0())()
{
  return nullsub_1;
}

uint64_t sub_2542CDC08()
{
  return swift_retain();
}

uint64_t sub_2542CDC18(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDC30())()
{
  return nullsub_1;
}

uint64_t sub_2542CDC58()
{
  return swift_retain();
}

uint64_t sub_2542CDC68(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDC80())()
{
  return nullsub_1;
}

uint64_t sub_2542CDCA8()
{
  return swift_retain();
}

uint64_t sub_2542CDCB8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDCD0())()
{
  return nullsub_1;
}

uint64_t sub_2542CDCF8()
{
  return swift_retain();
}

uint64_t sub_2542CDD08(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDD20())()
{
  return nullsub_1;
}

uint64_t sub_2542CDD48()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge);
}

uint64_t sub_2542CDD58(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = result;
  return result;
}

uint64_t (*sub_2542CDD68())()
{
  return nullsub_1;
}

uint64_t sub_2542CDD90()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge);
}

uint64_t sub_2542CDDA0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = result;
  return result;
}

uint64_t (*sub_2542CDDB0())()
{
  return nullsub_1;
}

uint64_t sub_2542CDDD8()
{
  return swift_retain();
}

uint64_t sub_2542CDDE8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = a1;
  return swift_release();
}

uint64_t (*sub_2542CDE00())()
{
  return nullsub_1;
}

uint64_t sub_2542CDE28@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, a1);
}

uint64_t sub_2542CDE34(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated);
}

uint64_t (*sub_2542CDE40())()
{
  return nullsub_1;
}

uint64_t sub_2542CDE68@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, a1);
}

uint64_t sub_2542CDE74(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated);
}

uint64_t (*sub_2542CDE80())()
{
  return nullsub_1;
}

uint64_t sub_2542CDEA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  return (*(uint64_t (**)(void, char *, uint64_t))(v9 + 40))(*a2 + *a5, v12, v8);
}

uint64_t sub_2542CDFA0@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, a1);
}

uint64_t sub_2542CDFAC(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated);
}

uint64_t (*sub_2542CDFB8())()
{
  return nullsub_1;
}

uint64_t sub_2542CDFE0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
}

uint64_t sub_2542CDFF0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542CE000())()
{
  return nullsub_1;
}

__n128 sub_2542CE028@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2542CE048(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
}

uint64_t (*sub_2542CE058())()
{
  return nullsub_1;
}

uint64_t DKPersonMotionFilter.__allocating_init(currentTime:configuration:camera:)(uint64_t a1, void *a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v6 = sub_2542D12C0(a1, a2, a3);
  swift_release();
  return v6;
}

uint64_t DKPersonMotionFilter.init(currentTime:configuration:camera:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = sub_2542D12C0(a1, a2, a3);
  swift_release();
  return v3;
}

BOOL sub_2542CE118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  if (!v9) {
    return 1;
  }
  CGFloat v10 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  CGFloat v11 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 8);
  CGFloat v12 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 16);
  CGFloat v13 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 24);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, v4, v6);
  swift_retain();
  sub_25436C700();
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  double v16 = sub_254256B68(v15 * *(double *)(*(void *)(v2 + 16) + 96), v10, v11, v12, v13);
  uint64_t v20 = (CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32))
  {
    uint64_t v20 = (CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32))
    {
      swift_release();
      return 1;
    }
  }
  BOOL v21 = CGRectIntersectsRect(*(CGRect *)&v16, *v20);
  swift_release();
  return v21;
}

uint64_t sub_2542CE2E0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  sub_254261B04(v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return sub_254261A9C(a1, v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_2542CE344(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v135 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  CGFloat v13 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v136 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  uint64_t v138 = v14;
  uint64_t v134 = v10 + 16;
  ((void (*)(char *, double))v14)(v13, v11);
  sub_2542CF4A4((uint64_t)v13);
  uint64_t v137 = v10;
  double v15 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v133 = v10 + 8;
  char v132 = v15;
  uint64_t result = v15(v13, v9);
  uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    return result;
  }
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = v20;
  BOOL v21 = (double *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  char v22 = *(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32);
  uint64_t v131 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect;
  if ((v22 & 1) == 0)
  {
    CGFloat v72 = *v21;
    double v73 = v21[1];
    double v75 = v21[2];
    double v74 = v21[3];
    CGFloat v128 = v72;
    CGFloat v76 = v72;
    CGFloat v124 = v72;
    CGFloat v127 = v73;
    CGFloat v77 = v73;
    double v123 = v73;
    CGFloat v126 = v75;
    CGFloat v78 = v75;
    CGFloat v125 = v74;
    CGFloat v79 = v74;
    uint64_t v129 = v17;
    sub_254261A9C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v130 = a1;
    uint64_t v80 = *(void *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
    v148.origin.CGFloat x = v76;
    v148.origin.CGFloat y = v77;
    v148.size.CGFloat width = v78;
    v148.size.CGFloat height = v79;
    DKCamera.cameraToWorld(rect:distance:)(&v139, v148, *(Swift::Double_optional *)(&v80 - 1));
    CGFloat x = v139.worldRect.origin.x;
    CGFloat y = v139.worldRect.origin.y;
    CGFloat width = v139.worldRect.size.width;
    CGFloat height = v139.worldRect.size.height;
    double distance = v139.distance;
    sub_254261B04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v86 = v136;
    v138(v13, v136, v9);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    uint64_t v87 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v149.origin.CGFloat x = x;
    v149.origin.CGFloat y = y;
    v149.size.CGFloat width = width;
    v149.size.CGFloat height = height;
    double MidX = CGRectGetMidX(v149);
    sub_25434EE84(0, MidX, 0.01);
    sub_25434F738(v87);
    swift_release();
    swift_release();
    v138(v13, v86, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v89 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v150.origin.CGFloat x = x;
    v150.origin.CGFloat y = y;
    v150.size.CGFloat width = width;
    v150.size.CGFloat height = height;
    double MidY = CGRectGetMidY(v150);
    sub_25434EE84(0, MidY, 0.01);
    sub_25434F738(v89);
    swift_release();
    swift_release();
    v138(v13, v86, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v91 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    CGFloat v92 = v79;
    sub_25434EE84(0, distance, 0.01);
    sub_25434F738(v91);
    swift_release();
    swift_release();
    swift_retain();
    v151.origin.CGFloat x = x;
    v151.origin.CGFloat y = y;
    v151.size.CGFloat width = width;
    v151.size.CGFloat height = height;
    double v93 = CGRectGetWidth(v151);
    uint64_t v94 = v137;
    double v95 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56);
    uint64_t v96 = (uint64_t)v135;
    v95(v135, 1, 1, v9);
    sub_25435D340(0, 1, v96, v93);
    swift_release();
    sub_254258BD8(v96);
    swift_retain();
    v152.origin.CGFloat x = x;
    v152.origin.CGFloat y = y;
    v152.size.CGFloat width = width;
    v152.size.CGFloat height = height;
    CGFloat v97 = CGRectGetHeight(v152);
    v95((char *)v96, 1, 1, v9);
    double v98 = v97;
    CGFloat v99 = v78;
    CGFloat v100 = v123;
    CGFloat v101 = v124;
    sub_25435D340(0, 1, v96, v98);
    swift_release();
    sub_254258BD8(v96);
    v138(v13, v86, v9);
    unint64_t v102 = *(void (**)(uint64_t, char *, uint64_t))(v94 + 40);
    v102(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v13, v9);
    v138(v13, v86, v9);
    v102(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v13, v9);
    *(void *)(v1 + v129) = 0;
    v153.origin.CGFloat x = v101;
    v153.origin.CGFloat y = v100;
    v153.size.CGFloat width = v99;
    v153.size.CGFloat height = v92;
    CGFloat MinX = CGRectGetMinX(v153);
    BOOL v104 = 1;
    uint64_t v105 = *(void *)(v1 + 16);
    if (MinX >= *(double *)(v105 + 248))
    {
      v154.origin.CGFloat x = v101;
      v154.origin.CGFloat y = v100;
      v154.size.CGFloat width = v99;
      v154.size.CGFloat height = v92;
      BOOL v104 = 1.0 - *(double *)(v105 + 248) < CGRectGetMaxX(v154);
    }
    *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = v104;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
    uint64_t v68 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
    unint64_t v106 = (CGFloat *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
    CGFloat v107 = v127;
    CGFloat *v106 = v128;
    v106[1] = v107;
    CGFloat v108 = v125;
    v106[2] = v126;
    v106[3] = v108;
    goto LABEL_10;
  }
  uint64_t v23 = (CGFloat *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32) & 1) == 0)
  {
    CGFloat v24 = v23[2];
    CGFloat v124 = v23[3];
    double v123 = v24;
    double v25 = *v23;
    CGFloat v26 = v23[1];
    CGFloat v27 = *v23;
    uint64_t v129 = v17;
    double v28 = sub_2542D0CA4(v27, v26, v24, v124);
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    sub_254261A9C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v130 = a1;
    uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
    CGFloat v128 = v28;
    v141.origin.CGFloat x = v28;
    CGFloat v127 = v30;
    v141.origin.CGFloat y = v30;
    CGFloat v126 = v32;
    v141.size.CGFloat width = v32;
    CGFloat v125 = v34;
    v141.size.CGFloat height = v34;
    DKCamera.cameraToWorld(rect:distance:)(&v139, v141, *(Swift::Double_optional *)(&v35 - 1));
    CGFloat v36 = v139.worldRect.origin.x;
    CGFloat v37 = v139.worldRect.origin.y;
    CGFloat v38 = v139.worldRect.size.width;
    CGFloat v39 = v139.worldRect.size.height;
    double v40 = v139.distance;
    sub_254261B04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v41 = v136;
    unint64_t v42 = v138;
    v138(v13, v136, v9);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    uint64_t v43 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v142.origin.CGFloat x = v36;
    v142.origin.CGFloat y = v37;
    v142.size.CGFloat width = v38;
    v142.size.CGFloat height = v39;
    double v44 = CGRectGetMidX(v142);
    sub_25434EE84(0, v44, 0.01);
    sub_25434F738(v43);
    swift_release();
    swift_release();
    v42(v13, v41, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v45 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v143.origin.CGFloat x = v36;
    v143.origin.CGFloat y = v37;
    v143.size.CGFloat width = v38;
    v143.size.CGFloat height = v39;
    double v46 = CGRectGetMidY(v143);
    sub_25434EE84(0, v46, 0.01);
    sub_25434F738(v45);
    swift_release();
    swift_release();
    uint64_t v122 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter;
    uint64_t v47 = v136;
    v42(v13, v136, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v48 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    sub_25434EE84(0, v40, 0.01);
    sub_25434F738(v48);
    swift_release();
    swift_release();
    uint64_t v49 = v47;
    uint64_t v50 = v47;
    unint64_t v51 = v138;
    v138(v13, v49, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v52 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    sub_25434EE84(1uLL, 0.0, 0.001);
    sub_25434F738(v52);
    swift_release();
    swift_release();
    v51(v13, v50, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v53 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    sub_25434EE84(2uLL, 0.0, 0.001);
    sub_25434F738(v53);
    swift_release();
    swift_release();
    swift_retain();
    v144.origin.CGFloat x = v36;
    v144.origin.CGFloat y = v37;
    v144.size.CGFloat width = v38;
    v144.size.CGFloat height = v39;
    double v54 = CGRectGetWidth(v144);
    uint64_t v55 = v137;
    char v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56);
    uint64_t v57 = (uint64_t)v135;
    v56(v135, 1, 1, v9);
    sub_25435D340(0, 1, v57, v54);
    swift_release();
    sub_254258BD8(v57);
    swift_retain();
    v145.origin.CGFloat x = v36;
    v145.origin.CGFloat y = v37;
    CGFloat v58 = v25;
    CGFloat v59 = v123;
    v145.size.CGFloat width = v38;
    v145.size.CGFloat height = v39;
    CGFloat v60 = CGRectGetHeight(v145);
    v56((char *)v57, 1, 1, v9);
    double v61 = v60;
    CGFloat v62 = v124;
    sub_25435D340(0, 1, v57, v61);
    swift_release();
    sub_254258BD8(v57);
    uint64_t v63 = v136;
    v51(v13, v136, v9);
    unint64_t v64 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 40);
    v64(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v13, v9);
    v51(v13, v63, v9);
    v64(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v13, v9);
    *(void *)(v2 + v129) = 0;
    v146.origin.CGFloat x = v58;
    v146.origin.CGFloat y = v26;
    v146.size.CGFloat width = v59;
    v146.size.CGFloat height = v62;
    CGFloat v65 = CGRectGetMinX(v146);
    BOOL v66 = 1;
    uint64_t v67 = *(void *)(v2 + 16);
    if (v65 >= *(double *)(v67 + 248))
    {
      v147.origin.CGFloat x = v58;
      v147.origin.CGFloat y = v26;
      v147.size.CGFloat width = v59;
      v147.size.CGFloat height = v62;
      BOOL v66 = 1.0 - *(double *)(v67 + 248) < CGRectGetMaxX(v147);
    }
    *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = v66;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
    uint64_t v68 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
    double v69 = (CGFloat *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
    CGFloat v70 = v127;
    CGFloat *v69 = v128;
    v69[1] = v70;
    CGFloat v71 = v125;
    v69[2] = v126;
    v69[3] = v71;
LABEL_10:
    a1 = v130;
    *(unsigned char *)(v2 + v68 + 32) = 0;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw + 8))
  {
    uint64_t v109 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
    *(unsigned char *)(v109 + 33) = 0;
    uint64_t v110 = v109 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_254258BD8(v110);
    uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
    v111(v110, 1, 1, v9);
    swift_release();
  }
  else
  {
    double v112 = *(double *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
    uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
    uint64_t v113 = (uint64_t)v135;
    v111((uint64_t)v135, 1, 1, v9);
    swift_retain();
    sub_25435D340(0, 1, v113, v112);
    swift_release();
    sub_254258BD8(v113);
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch + 8))
  {
    uint64_t v114 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
    *(unsigned char *)(v114 + 33) = 0;
    uint64_t v115 = v114 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_254258BD8(v115);
    v111(v115, 1, 1, v9);
    swift_release();
  }
  else
  {
    double v116 = *(double *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
    uint64_t v117 = (uint64_t)v135;
    v111((uint64_t)v135, 1, 1, v9);
    swift_retain();
    sub_25435D340(0, 1, v117, v116);
    swift_release();
    sub_254258BD8(v117);
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll + 8))
  {
    uint64_t v118 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
    *(unsigned char *)(v118 + 33) = 0;
    uint64_t v119 = v118 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_254258BD8(v119);
    v111(v119, 1, 1, v9);
    swift_release();
  }
  else
  {
    double v120 = *(double *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
    uint64_t v121 = (uint64_t)v135;
    v111((uint64_t)v135, 1, 1, v9);
    swift_retain();
    sub_25435D340(0, 1, v121, v120);
    swift_release();
    sub_254258BD8(v121);
  }
  sub_2542721C0(v131, (uint64_t)v140);
  sub_2542721C0(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect, (uint64_t)&v139);
  sub_2542D05C8((uint64_t)v140, (uint64_t)&v139);
  v138(v13, v136, v9);
  sub_2542CF9D4((uint64_t)v13);
  return v132(v13, v9);
}

BOOL sub_2542CF31C(double a1, double a2, double a3, double a4)
{
  return sub_2542CF374(MEMORY[0x263F00178], MEMORY[0x263F00158], a1, a2, a3, a4);
}

BOOL sub_2542CF348(double a1, double a2, double a3, double a4)
{
  return sub_2542CF374(MEMORY[0x263F00180], MEMORY[0x263F00160], a1, a2, a3, a4);
}

BOOL sub_2542CF374(double (*a1)(void), double (*a2)(double, double, double, double), double a3, double a4, double a5, double a6)
{
  double v12 = a1();
  uint64_t v13 = *(void *)(v6 + 16);
  return v12 < *(double *)(v13 + 248) || 1.0 - *(double *)(v13 + 248) < a2(a3, a4, a5, a6);
}

uint64_t sub_2542CF404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for DKCamera() + 32);
  uint64_t result = type metadata accessor for DKMotion3();
  uint64_t v6 = *(void *)(v4 + *(int *)(result + 20));
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    if (v7 != 1)
    {
      float64x2_t v8 = vmulq_n_f64(*(float64x2_t *)(v3 + 8), 1.0 - (*(double *)(*(void *)(v1 + 16) + 248) + *(double *)(*(void *)(v1 + 16) + 248)));
      __asm { FMOV            V2.2D, #-0.5 }
      *(float64x2_t *)a1 = vaddq_f64(*(float64x2_t *)(v6 + 32), vmulq_f64(v8, _Q2));
      *(float64x2_t *)(a1 + 16) = v8;
      *(unsigned char *)(a1 + 32) = 0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2542CF4A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (double *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (double *)((char *)&v50 - v8);
  uint64_t v10 = sub_25436C7B0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  double v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v15 + 240) != 1) {
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v10, v12);
  sub_25436C700();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (*(double *)(v15 + 104) >= v17) {
    goto LABEL_16;
  }
  uint64_t v18 = (CGFloat *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 32)) {
    goto LABEL_16;
  }
  double v20 = v18[2];
  double v19 = v18[3];
  CGFloat v22 = *v18;
  CGFloat v21 = v18[1];
  sub_254261A9C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_254261A9C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
  v52.origin.CGFloat x = v22;
  v52.origin.CGFloat y = v21;
  v52.size.CGFloat width = v20;
  v52.size.CGFloat height = v19;
  CGFloat Width = CGRectGetWidth(v52);
  double v24 = 10.0;
  if (Width >= 1.0e-10)
  {
    double v25 = v6[3] * 0.115;
    v53.origin.CGFloat x = v22;
    v53.origin.CGFloat y = v21;
    v53.size.CGFloat width = v20;
    v53.size.CGFloat height = v19;
    double v24 = v25 / CGRectGetWidth(v53);
  }
  double v51 = v24;
  sub_254261B04((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
  v54.origin.CGFloat x = v22;
  v54.origin.CGFloat y = v21;
  v54.size.CGFloat width = v20;
  v54.size.CGFloat height = v19;
  CGFloat MidX = CGRectGetMidX(v54);
  v55.origin.CGFloat x = v22;
  v55.origin.CGFloat y = v21;
  v55.size.CGFloat width = v20;
  v55.size.CGFloat height = v19;
  CGFloat MidY = CGRectGetMidY(v55);
  sub_25425F308(5, MidX, MidY);
  double v29 = v28;
  long double v32 = v9[3];
  long double v31 = v9[4];
  double v50 = atan2(v30 + -0.5, v31);
  double v33 = v9[1];
  double v34 = v9[2];
  uint64_t v35 = (char *)v9 + *(int *)(v4 + 32);
  uint64_t v36 = *(void *)&v35[*(int *)(type metadata accessor for DKMotion3() + 20)];
  uint64_t v37 = *(void *)(v36 + 16);
  if (!v37)
  {
    __break(1u);
    goto LABEL_18;
  }
  double v38 = atan2(-(v29 + -0.5), v32);
  if (v37 == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v39 = v51 * (v20 * v33) / v32;
  double v40 = v51 * (v19 * v34) / v31;
  double v41 = v38 + v39 * -0.5 + *(double *)(v36 + 32);
  double v42 = v50 + v40 * -0.5 + *(double *)(v36 + 40);
  sub_254261B04((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DKCamera);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge))
  {
    uint64_t v43 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
    swift_retain();
    v56.origin.CGFloat x = v41;
    v56.origin.CGFloat y = v42;
    v56.size.CGFloat width = v39;
    v56.size.CGFloat height = v40;
    double v44 = CGRectGetMidX(v56);
    uint64_t v45 = *(void *)(v43 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
    if (*(uint64_t *)(v45 + 16) < 1 || *(uint64_t *)(v45 + 24) < 1) {
      goto LABEL_19;
    }
    **(double **)(v45 + 32) = v44;
    sub_254350764();
    swift_release();
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) != 1)
  {
LABEL_16:
    swift_retain();
    sub_254251374(a1);
    swift_release();
    swift_retain();
    sub_254251374(a1);
    swift_release();
    swift_retain();
    sub_254251374(a1);
    swift_release();
    return sub_2542CF9D4(a1);
  }
  uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
  swift_retain();
  v57.origin.CGFloat x = v41;
  v57.origin.CGFloat y = v42;
  v57.size.CGFloat width = v39;
  v57.size.CGFloat height = v40;
  double v47 = CGRectGetMidY(v57);
  uint64_t v48 = *(void *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v48 + 16) >= 1 && *(uint64_t *)(v48 + 24) >= 1)
  {
    **(double **)(v48 + 32) = v47;
    sub_254350764();
    swift_release();
    goto LABEL_16;
  }
LABEL_19:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t sub_2542CF9D4(uint64_t a1)
{
  *(void *)&long long v113 = a1;
  uint64_t v123 = type metadata accessor for DKMotion3();
  MEMORY[0x270FA5388](v123);
  uint64_t v115 = (uint64_t)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  double v116 = (char *)&v105 - v4;
  uint64_t v124 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v124);
  uint64_t v119 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v117 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v121 = (uint64_t)&v105 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v120 = (uint64_t)&v105 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v118 = (uint64_t)&v105 - v14;
  MEMORY[0x270FA5388](v15);
  double v17 = (char *)&v105 - v16;
  double v19 = MEMORY[0x270FA5388](v18);
  CGFloat v21 = (char *)&v105 - v20;
  uint64_t v122 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter;
  uint64_t v125 = v1;
  CGFloat v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v22((char *)&v105 - v20, *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v6, v19);
  swift_retain();
  sub_25436C6E0();
  sub_2542D2080();
  char v23 = sub_25436CBB0();
  uint64_t v114 = v7;
  double v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v17, v6);
  v24(v21, v6);
  swift_release();
  if (v23) {
    goto LABEL_4;
  }
  uint64_t v112 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, *(void *)(v125 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v6);
  swift_retain();
  sub_25436C6E0();
  char v25 = sub_25436CBB0();
  v24(v17, v6);
  v24(v21, v6);
  swift_release();
  if (v25) {
    goto LABEL_4;
  }
  uint64_t v111 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, *(void *)(v125 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v6);
  swift_retain();
  sub_25436C6E0();
  char v26 = sub_25436CBB0();
  v24(v17, v6);
  v24(v21, v6);
  swift_release();
  if (v26)
  {
LABEL_4:
    *(void *)(v125 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = 0;
    return swift_release();
  }
  uint64_t v110 = v6;
  uint64_t v28 = v125;
  uint64_t v29 = *(void *)(v125 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
  if (*(unsigned char *)(v29 + 33) != 1
    || (*(unsigned char *)(v29 + 32) != 1
      ? (double v30 = *(double *)(v29 + 40))
      : (double v30 = atan2(*(long double *)(v29 + 48), *(long double *)(v29 + 56))),
        uint64_t v31 = *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter),
        *(unsigned char *)(v31 + 33) != 1))
  {
    *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = 0;
    return swift_release();
  }
  if (*(unsigned char *)(v31 + 32) == 1) {
    double v32 = atan2(*(long double *)(v31 + 48), *(long double *)(v31 + 56));
  }
  else {
    double v32 = *(double *)(v31 + 40);
  }
  uint64_t v33 = *(void *)(*(void *)(v28 + v122) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v33 + 16) >= 1 && *(uint64_t *)(v33 + 24) >= 1)
  {
    uint64_t v34 = v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
    uint64_t v35 = *(void *)(v28
                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera
                    + *(int *)(v124 + 32)
                    + *(int *)(v123 + 20));
    unint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      double v37 = **(double **)(v33 + 32);
      for (i = *(double *)(v35 + 32); i + 3.14159265 < v37; double v37 = v37 + -6.28318531)
        ;
      for (j = i + -3.14159265; v37 < j; double v37 = v37 + 6.28318531)
        ;
      uint64_t v40 = *(void *)(*(void *)(v28 + v112) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
      if (*(uint64_t *)(v40 + 16) < 1 || *(uint64_t *)(v40 + 24) < 1) {
        goto LABEL_61;
      }
      if (v36 >= 2)
      {
        double v41 = **(double **)(v40 + 32);
        for (k = *(double *)(v35 + 40); k + 3.14159265 < v41; double v41 = v41 + -6.28318531)
          ;
        for (; v41 < k + -3.14159265; double v41 = v41 + 6.28318531)
          ;
        uint64_t v43 = *(void *)(*(void *)(v28 + v111) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
        if (*(uint64_t *)(v43 + 16) >= 1 && *(uint64_t *)(v43 + 24) >= 1)
        {
          Swift::Double v44 = **(double **)(v43 + 32);
          uint64_t v45 = v119;
          sub_254261A9C(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, v119, (uint64_t (*)(void))type metadata accessor for DKCamera);
          v126.origin.double x = v37 - v30 * 0.5;
          v126.origin.CGFloat y = v41 - v32 * 0.5;
          v126.size.CGFloat width = v30;
          v126.size.CGFloat height = v32;
          Swift::Double v105 = v44;
          __C::CGRect v127 = DKCamera.worldToCamera(rect:distance:clampToBorders:)(v126, v44, 1);
          double x = v127.origin.x;
          CGFloat y = v127.origin.y;
          CGFloat width = v127.size.width;
          CGFloat height = v127.size.height;
          sub_254261B04(v45, (uint64_t (*)(void))type metadata accessor for DKCamera);
          CGFloat v109 = x;
          double v52 = sub_2542D0EA8(x, y, width, height);
          CGFloat v53 = v51;
          CGFloat v108 = v54;
          BOOL v55 = *(unsigned char *)v34 == 1;
          double v107 = v50;
          if (v55)
          {
            v128.origin.double x = v109;
            double v56 = 1.0 - v109;
            CGFloat v106 = v51;
            CGFloat v57 = v50;
            v128.origin.CGFloat y = y;
            v128.size.CGFloat width = width;
            v128.size.CGFloat height = height;
            CGFloat v109 = v56 - CGRectGetWidth(v128);
            v129.origin.double x = v52;
            v129.origin.CGFloat y = v57;
            CGFloat v53 = v106;
            v129.size.CGFloat width = v106;
            v129.size.CGFloat height = v108;
            double v52 = 1.0 - v52 - CGRectGetWidth(v129);
          }
          CGFloat v58 = v22;
          uint64_t v59 = v110;
          ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v118, v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v110);
          ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v120, v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v59);
          ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v121, v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v59);
          CGFloat v60 = *(double *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
          ((void (*)(char *, void, uint64_t))v58)(v117, v113, v59);
          v130.origin.double x = v109;
          v130.origin.CGFloat y = y;
          v130.size.CGFloat width = width;
          v130.size.CGFloat height = height;
          double v61 = v41 - CGRectGetHeight(v130) * *(double *)(v34 + 16) * *(double *)(*(void *)(v28 + 16) + 256);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
          uint64_t v62 = swift_allocObject();
          long long v113 = xmmword_25436E6A0;
          *(_OWORD *)(v62 + 16) = xmmword_25436E6A0;
          *(double *)(v62 + 32) = v37;
          *(double *)(v62 + 40) = v61;
          uint64_t v63 = *(void *)(v28 + v122);
          *(Swift::Double *)(v62 + 48) = v105;
          unint64_t v64 = *(void **)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
          uint64_t v65 = v64[2];
          if (v65 >= 2 && (uint64_t)v64[3] >= 1)
          {
            BOOL v66 = *(void **)(*(void *)(v28 + v112) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
            uint64_t v67 = v66[2];
            if (v67 > 1 && (uint64_t)v66[3] >= 1)
            {
              uint64_t v122 = v34;
              uint64_t v68 = *(void **)(*(void *)(v28 + v111) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
              uint64_t v69 = v68[2];
              if (v69 > 1 && (uint64_t)v68[3] >= 1)
              {
                uint64_t v70 = v62;
                CGFloat v71 = v53;
                uint64_t v72 = v64[4];
                uint64_t v73 = *(void *)(v72 + 8);
                uint64_t v74 = v66[4];
                uint64_t v75 = *(void *)(v74 + 8);
                uint64_t v76 = v68[4];
                uint64_t v77 = *(void *)(v76 + 8);
                uint64_t v78 = swift_allocObject();
                *(_OWORD *)(v78 + 16) = v113;
                *(void *)(v78 + 32) = v73;
                *(void *)(v78 + 40) = v75;
                *(void *)(v78 + 48) = v77;
                if ((unint64_t)v65 > 2 && (unint64_t)v67 > 2)
                {
                  uint64_t v79 = v110;
                  if ((unint64_t)v69 > 2)
                  {
                    uint64_t v80 = v78;
                    uint64_t v81 = *(void *)(v72 + 16);
                    uint64_t v82 = *(void *)(v74 + 16);
                    uint64_t v83 = *(void *)(v76 + 16);
                    uint64_t v84 = swift_allocObject();
                    *(_OWORD *)(v84 + 16) = v113;
                    *(void *)(v84 + 32) = v81;
                    *(void *)(v84 + 40) = v82;
                    *(void *)(v84 + 48) = v83;
                    uint64_t v85 = (uint64_t)v116;
                    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v116, v117, v79);
                    uint64_t v86 = v123;
                    *(void *)(v85 + *(int *)(v123 + 20)) = v70;
                    *(void *)(v85 + *(int *)(v86 + 24)) = v80;
                    *(void *)(v85 + *(int *)(v86 + 28)) = v84;
                    uint64_t v87 = v125;
                    uint64_t v88 = *(void *)(v125
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
                    char v89 = *(unsigned char *)(v88 + 33);
                    CGFloat v106 = v60;
                    if (v89)
                    {
                      uint64_t v90 = v122;
                      double v91 = v71;
                      if (*(unsigned char *)(v88 + 32) == 1) {
                        uint64_t v92 = atan2(*(long double *)(v88 + 48), *(long double *)(v88 + 56));
                      }
                      else {
                        uint64_t v92 = *(void *)(v88 + 40);
                      }
                    }
                    else
                    {
                      uint64_t v92 = 0;
                      uint64_t v90 = v122;
                      double v91 = v71;
                    }
                    char v93 = v89 ^ 1;
                    uint64_t v94 = *(void *)(v87
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
                    int v95 = *(unsigned __int8 *)(v94 + 33);
                    if (v95 == 1)
                    {
                      if (*(unsigned char *)(v94 + 32) == 1) {
                        uint64_t v96 = atan2(*(long double *)(v94 + 48), *(long double *)(v94 + 56));
                      }
                      else {
                        uint64_t v96 = *(void *)(v94 + 40);
                      }
                    }
                    else
                    {
                      uint64_t v96 = 0;
                    }
                    char v97 = v95 ^ 1;
                    uint64_t v98 = *(void *)(v87
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
                    int v99 = *(unsigned __int8 *)(v98 + 33);
                    if (v99 == 1)
                    {
                      if (*(unsigned char *)(v98 + 32) == 1) {
                        uint64_t v100 = atan2(*(long double *)(v98 + 48), *(long double *)(v98 + 56));
                      }
                      else {
                        uint64_t v100 = *(void *)(v98 + 40);
                      }
                    }
                    else
                    {
                      uint64_t v100 = 0;
                    }
                    uint64_t v101 = v90;
                    uint64_t v102 = v119;
                    sub_254261A9C(v101, v119, (uint64_t (*)(void))type metadata accessor for DKCamera);
                    uint64_t v103 = v115;
                    sub_254291724(v102 + *(int *)(v124 + 32), v115);
                    type metadata accessor for DKPersonMotionFilter.State(0);
                    uint64_t v104 = swift_allocObject();
                    sub_2542CD460(v118, v120, v121, *(uint64_t *)&v106, v85, v92, v93, v96, v109, y, width, height, v52, v107, v91, v108, v97, v100, v99 ^ 1,
                      v103);
                    *(void *)(v87 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = v104;
                    return swift_release();
                  }
                }
              }
            }
          }
        }
        goto LABEL_61;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
LABEL_61:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t sub_2542D0594(uint64_t a1)
{
  sub_2542CF4A4(a1);
  return swift_retain();
}

uint64_t sub_2542D05C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542721C0(a1, (uint64_t)v59);
  if ((v60 & 1) != 0
    || (CGFloat v10 = *(double *)v59,
        CGFloat v9 = *(double *)&v59[1],
        CGFloat v11 = *(double *)&v59[2],
        CGFloat v12 = *(double *)&v59[3],
        sub_2542721C0(a2, (uint64_t)v57),
        (v58 & 1) != 0))
  {
    uint64_t v13 = *(double **)(v3 + 16);
    double v14 = v13[28];
    uint64_t v15 = *((void *)v13 + 25);
    uint64_t v16 = sub_25436C7B0();
    double v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_25435D340(v15, 0, (uint64_t)v8, v14);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    double v18 = v13[29];
    uint64_t v19 = *((void *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_25435D340(v19, 0, (uint64_t)v8, v18);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    double v20 = v13[26];
    uint64_t v21 = *((void *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_25435D340(v21, 0, (uint64_t)v8, v20);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    double v22 = v13[27];
    uint64_t v23 = *((void *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    double v24 = v22;
    uint64_t v25 = v23;
    char v26 = 0;
LABEL_7:
    sub_25435D340(v25, v26, (uint64_t)v8, v24);
    swift_release();
    return sub_254258BD8((uint64_t)v8);
  }
  CGFloat v27 = *(double *)v57;
  CGFloat v28 = *(double *)&v57[1];
  CGFloat v29 = *(double *)&v57[2];
  CGFloat v30 = *(double *)&v57[3];
  v61.origin.double x = v10;
  v61.origin.CGFloat y = v9;
  v61.size.CGFloat width = v11;
  v61.size.CGFloat height = v12;
  CGFloat Width = CGRectGetWidth(v61);
  v62.origin.double x = v27;
  v62.origin.CGFloat y = v28;
  v62.size.CGFloat width = v29;
  v62.size.CGFloat height = v30;
  double v47 = Width / CGRectGetWidth(v62);
  v63.origin.double x = v10;
  v63.origin.CGFloat y = v9;
  v63.size.CGFloat width = v11;
  v63.size.CGFloat height = v12;
  CGFloat Width = CGRectGetHeight(v63);
  v64.origin.double x = v27;
  v64.origin.CGFloat y = v28;
  v64.size.CGFloat width = v29;
  v64.size.CGFloat height = v30;
  CGFloat Height = CGRectGetHeight(v64);
  v65.origin.double x = v10;
  v65.origin.CGFloat y = v9;
  v65.size.CGFloat width = v11;
  v65.size.CGFloat height = v12;
  CGFloat MinX = CGRectGetMinX(v65);
  v66.origin.double x = v27;
  v66.origin.CGFloat y = v28;
  v66.size.CGFloat width = v29;
  v66.size.CGFloat height = v30;
  CGFloat v46 = CGRectGetMinX(v66);
  v67.origin.double x = v27;
  v67.origin.CGFloat y = v28;
  v67.size.CGFloat width = v29;
  v67.size.CGFloat height = v30;
  CGFloat v45 = CGRectGetWidth(v67);
  CGFloat v44 = v10;
  v68.origin.double x = v10;
  unint64_t v43 = *(void *)&v9;
  v68.origin.CGFloat y = v9;
  CGFloat v42 = v11;
  v68.size.CGFloat width = v11;
  CGFloat v41 = v12;
  v68.size.CGFloat height = v12;
  double v31 = v47;
  double MinY = CGRectGetMinY(v68);
  v69.origin.double x = v27;
  v69.origin.CGFloat y = v28;
  v69.size.CGFloat width = v29;
  v69.size.CGFloat height = v30;
  double v33 = CGRectGetMinY(v69);
  v70.origin.double x = v27;
  v70.origin.CGFloat y = v28;
  v70.size.CGFloat width = v29;
  v70.size.CGFloat height = v30;
  double v34 = CGRectGetHeight(v70);
  if (v31 >= 1.0e-10 && Width / Height >= 1.0e-10)
  {
    double v35 = Width / Height;
    double v36 = (MinX - v46) / v45;
    double v37 = (MinY - v33) / v34;
    uint64_t v38 = sub_25436C7B0();
    double v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
    v39(v8, 1, 1, v38);
    swift_retain();
    sub_25435D340(0, 1, (uint64_t)v8, v31);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    v39(v8, 1, 1, v38);
    swift_retain();
    sub_25435D340(0, 1, (uint64_t)v8, v35);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    v39(v8, 1, 1, v38);
    swift_retain();
    sub_25435D340(0, 1, (uint64_t)v8, v36);
    swift_release();
    sub_254258BD8((uint64_t)v8);
    v39(v8, 1, 1, v38);
    swift_retain();
    double v24 = v37;
    uint64_t v25 = 0;
    char v26 = 1;
    goto LABEL_7;
  }
  CGFloat v51 = 0.0;
  unint64_t v52 = 0xE000000000000000;
  sub_25436D290();
  CGFloat v55 = v51;
  unint64_t v56 = v52;
  sub_25436CCB0();
  sub_25436CCB0();
  CGFloat v51 = v44;
  unint64_t v52 = v43;
  CGFloat v53 = v42;
  CGFloat v54 = v41;
  type metadata accessor for CGRect(0);
  sub_25436D460();
  sub_25436CCB0();
  CGFloat v51 = v27;
  unint64_t v52 = *(void *)&v28;
  CGFloat v53 = v29;
  CGFloat v54 = v30;
  sub_25436D460();
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

double sub_2542D0CA4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  if (*(unsigned char *)(v9 + 33) == 1 && *(unsigned char *)(v9 + 32) == 1) {
    atan2(*(long double *)(v9 + 48), *(long double *)(v9 + 56));
  }
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  if (*(unsigned char *)(v10 + 33) == 1 && *(unsigned char *)(v10 + 32) == 1) {
    atan2(*(long double *)(v10 + 48), *(long double *)(v10 + 56));
  }
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  if (*(unsigned char *)(v11 + 33) == 1)
  {
    if (*(unsigned char *)(v11 + 32) == 1) {
      double v12 = atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
    }
    else {
      double v12 = *(double *)(v11 + 40);
    }
  }
  else
  {
    double v12 = *(double *)(*(void *)(v4 + 16) + 208);
  }
  uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  if (*(unsigned char *)(v13 + 33) == 1 && *(unsigned char *)(v13 + 32) == 1) {
    atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
  }
  v17.origin.double x = a1;
  v17.origin.CGFloat y = a2;
  v17.size.CGFloat width = a3;
  v17.size.CGFloat height = a4;
  double MinX = CGRectGetMinX(v17);
  v18.origin.double x = a1;
  v18.origin.CGFloat y = a2;
  v18.size.CGFloat width = a3;
  v18.size.CGFloat height = a4;
  double v15 = MinX + v12 * CGRectGetWidth(v18);
  v19.origin.double x = a1;
  v19.origin.CGFloat y = a2;
  v19.size.CGFloat width = a3;
  v19.size.CGFloat height = a4;
  CGRectGetMinY(v19);
  v20.origin.double x = a1;
  v20.origin.CGFloat y = a2;
  v20.size.CGFloat width = a3;
  v20.size.CGFloat height = a4;
  CGRectGetHeight(v20);
  v21.origin.double x = a1;
  v21.origin.CGFloat y = a2;
  v21.size.CGFloat width = a3;
  v21.size.CGFloat height = a4;
  CGRectGetWidth(v21);
  v22.origin.double x = a1;
  v22.origin.CGFloat y = a2;
  v22.size.CGFloat width = a3;
  v22.size.CGFloat height = a4;
  CGRectGetHeight(v22);
  return v15;
}

double sub_2542D0EA8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  if (*(unsigned char *)(v9 + 33) == 1)
  {
    if (*(unsigned char *)(v9 + 32) == 1) {
      double v10 = atan2(*(long double *)(v9 + 48), *(long double *)(v9 + 56));
    }
    else {
      double v10 = *(double *)(v9 + 40);
    }
  }
  else
  {
    double v10 = *(double *)(*(void *)(v4 + 16) + 224);
  }
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  double v18 = v10;
  if (*(unsigned char *)(v11 + 33) == 1 && *(unsigned char *)(v11 + 32) == 1) {
    atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
  }
  uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  if (*(unsigned char *)(v12 + 33) == 1)
  {
    if (*(unsigned char *)(v12 + 32) == 1) {
      double v13 = atan2(*(long double *)(v12 + 48), *(long double *)(v12 + 56));
    }
    else {
      double v13 = *(double *)(v12 + 40);
    }
  }
  else
  {
    double v13 = *(double *)(*(void *)(v4 + 16) + 208);
  }
  uint64_t v14 = *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  if (*(unsigned char *)(v14 + 33) == 1 && *(unsigned char *)(v14 + 32) == 1) {
    atan2(*(long double *)(v14 + 48), *(long double *)(v14 + 56));
  }
  v19.origin.double x = a1;
  v19.origin.CGFloat y = a2;
  v19.size.CGFloat width = a3;
  v19.size.CGFloat height = a4;
  double MinX = CGRectGetMinX(v19);
  v20.origin.double x = a1;
  v20.origin.CGFloat y = a2;
  v20.size.CGFloat width = a3;
  v20.size.CGFloat height = a4;
  double v17 = MinX - v13 * CGRectGetWidth(v20) / v18;
  v21.origin.double x = a1;
  v21.origin.CGFloat y = a2;
  v21.size.CGFloat width = a3;
  v21.size.CGFloat height = a4;
  CGRectGetMinY(v21);
  v22.origin.double x = a1;
  v22.origin.CGFloat y = a2;
  v22.size.CGFloat width = a3;
  v22.size.CGFloat height = a4;
  CGRectGetHeight(v22);
  v23.origin.double x = a1;
  v23.origin.CGFloat y = a2;
  v23.size.CGFloat width = a3;
  v23.size.CGFloat height = a4;
  CGRectGetWidth(v23);
  v24.origin.double x = a1;
  v24.origin.CGFloat y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  CGRectGetHeight(v24);
  return v17;
}

uint64_t DKPersonMotionFilter.deinit()
{
  swift_release();
  sub_254261B04(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v2);
  return v0;
}

uint64_t DKPersonMotionFilter.__deallocating_deinit()
{
  DKPersonMotionFilter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2542D12C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v112 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = 0;
  sub_25436C6E0();
  sub_25436C6E0();
  sub_25436C6E0();
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = 0;
  uint64_t v10 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(unsigned char *)(v10 + 32) = 1;
  *(void *)(v4 + 16) = a2;
  uint64_t v111 = a3;
  sub_254261A9C(a3, v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v11 = a2[14];
  type metadata accessor for DKConstantAccelerationFilter(0);
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v11;
  swift_retain_n();
  swift_retain();
  sub_254353F8C(v11, 3);
  uint64_t v13 = v12;
  swift_release();
  uint64_t v116 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter) = v13;
  uint64_t v14 = a2[15];
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v14;
  uint64_t v15 = swift_retain_n();
  sub_254353F8C(v15, 3);
  uint64_t v17 = v16;
  swift_release();
  uint64_t v114 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter) = v17;
  uint64_t v18 = a2[16];
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v18;
  uint64_t v19 = swift_retain_n();
  sub_254353F8C(v19, 3);
  uint64_t v21 = v20;
  swift_release();
  uint64_t v113 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter) = v21;
  uint64_t v22 = a2[11];
  CGRect v23 = a2;
  uint64_t v24 = sub_25436C7B0();
  uint64_t v110 = *(void *)(v24 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56);
  uint64_t v26 = (uint64_t)v9;
  v25(v9, 1, 1, v24);
  uint64_t v115 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25;
  type metadata accessor for DKSmoothingFilter();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 33) = 0;
  *(void *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = 0;
  *(void *)(v27 + 56) = 0x3FF0000000000000;
  uint64_t v28 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v25((char *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v24);
  uint64_t v29 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  uint64_t v30 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  *(unsigned char *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v27 + 16) = v22;
  *(void *)(v27 + 24) = v22;
  *(unsigned char *)(v27 + 32) = 0;
  uint64_t v117 = v26;
  sub_254277464(v26, v28);
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter) = v27;
  uint64_t v118 = v23;
  uint64_t v31 = v23[11];
  uint64_t v32 = v26;
  uint64_t v120 = v24;
  double v33 = v115;
  v115(v32, 1, 1, v24);
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 33) = 0;
  *(void *)(v34 + 40) = 0;
  *(void *)(v34 + 48) = 0;
  *(void *)(v34 + 56) = 0x3FF0000000000000;
  uint64_t v35 = v34 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v33(v34 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v24);
  uint64_t v36 = v34 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  uint64_t v37 = v34 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = 1;
  *(unsigned char *)(v34 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v34 + 16) = v31;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = 0;
  uint64_t v38 = v117;
  sub_254277464(v117, v35);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = 1;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter) = v34;
  uint64_t v39 = v23[22];
  uint64_t v119 = v4;
  uint64_t v40 = v38;
  uint64_t v41 = v120;
  v33(v40, 1, 1, v120);
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 33) = 0;
  *(void *)(v42 + 40) = 0;
  *(void *)(v42 + 48) = 0;
  *(void *)(v42 + 56) = 0x3FF0000000000000;
  uint64_t v43 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v33(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v41);
  CGFloat v44 = v33;
  uint64_t v45 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v45 = 0;
  *(unsigned char *)(v45 + 8) = 1;
  uint64_t v46 = v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  *(unsigned char *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v42 + 16) = v39;
  *(void *)(v42 + 24) = v39;
  *(unsigned char *)(v42 + 32) = 1;
  uint64_t v47 = v117;
  sub_254277464(v117, v43);
  *(void *)uint64_t v45 = 0;
  *(unsigned char *)(v45 + 8) = 1;
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter) = v42;
  uint64_t v48 = v118;
  uint64_t v49 = v118[22];
  v44(v47, 1, 1, v41);
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 33) = 0;
  *(void *)(v50 + 40) = 0;
  *(void *)(v50 + 48) = 0;
  *(void *)(v50 + 56) = 0x3FF0000000000000;
  uint64_t v51 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v41);
  uint64_t v52 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v52 = 0;
  *(unsigned char *)(v52 + 8) = 1;
  uint64_t v53 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v53 = 0;
  *(unsigned char *)(v53 + 8) = 1;
  *(unsigned char *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v50 + 16) = v49;
  *(void *)(v50 + 24) = v49;
  *(unsigned char *)(v50 + 32) = 1;
  sub_254277464(v47, v51);
  *(void *)uint64_t v52 = 0;
  *(unsigned char *)(v52 + 8) = 1;
  *(void *)uint64_t v53 = 0;
  *(unsigned char *)(v53 + 8) = 1;
  *(void *)(v119 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter) = v50;
  uint64_t v54 = v48[22];
  CGFloat v55 = v48;
  uint64_t v56 = v120;
  v44(v47, 1, 1, v120);
  uint64_t v57 = swift_allocObject();
  *(unsigned char *)(v57 + 33) = 0;
  *(void *)(v57 + 40) = 0;
  *(void *)(v57 + 48) = 0;
  *(void *)(v57 + 56) = 0x3FF0000000000000;
  uint64_t v58 = v57 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v56);
  uint64_t v59 = v57 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 1;
  uint64_t v60 = v57 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v60 = 0;
  *(unsigned char *)(v60 + 8) = 1;
  *(unsigned char *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v57 + 16) = v54;
  *(void *)(v57 + 24) = v54;
  *(unsigned char *)(v57 + 32) = 1;
  sub_254277464(v47, v58);
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 1;
  *(void *)uint64_t v60 = 0;
  *(unsigned char *)(v60 + 8) = 1;
  uint64_t v61 = v119;
  *(void *)(v119 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter) = v57;
  uint64_t v62 = v55[24];
  uint64_t v63 = v120;
  v44(v47, 1, 1, v120);
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 33) = 0;
  *(void *)(v64 + 40) = 0;
  *(void *)(v64 + 48) = 0;
  *(void *)(v64 + 56) = 0x3FF0000000000000;
  uint64_t v65 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v63);
  uint64_t v66 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v66 = 0;
  *(unsigned char *)(v66 + 8) = 1;
  uint64_t v67 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v67 = 0;
  *(unsigned char *)(v67 + 8) = 1;
  *(unsigned char *)(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v64 + 16) = v62;
  *(void *)(v64 + 24) = v62;
  *(unsigned char *)(v64 + 32) = 0;
  sub_254277464(v47, v65);
  *(void *)uint64_t v66 = 0;
  *(unsigned char *)(v66 + 8) = 1;
  *(void *)uint64_t v67 = 0;
  *(unsigned char *)(v67 + 8) = 1;
  *(void *)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter) = v64;
  CGRect v68 = v118;
  uint64_t v69 = v118[24];
  v44(v47, 1, 1, v63);
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 33) = 0;
  *(void *)(v70 + 40) = 0;
  *(void *)(v70 + 48) = 0;
  *(void *)(v70 + 56) = 0x3FF0000000000000;
  uint64_t v71 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v63);
  uint64_t v72 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v72 = 0;
  *(unsigned char *)(v72 + 8) = 1;
  uint64_t v73 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v73 = 0;
  *(unsigned char *)(v73 + 8) = 1;
  *(unsigned char *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v70 + 16) = v69;
  *(void *)(v70 + 24) = v69;
  *(unsigned char *)(v70 + 32) = 0;
  sub_254277464(v47, v71);
  *(void *)uint64_t v72 = 0;
  *(unsigned char *)(v72 + 8) = 1;
  *(void *)uint64_t v73 = 0;
  *(unsigned char *)(v73 + 8) = 1;
  uint64_t v74 = v119;
  *(void *)(v119 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter) = v70;
  uint64_t v75 = v68[24];
  uint64_t v76 = v120;
  v44(v47, 1, 1, v120);
  uint64_t v77 = swift_allocObject();
  *(unsigned char *)(v77 + 33) = 0;
  *(void *)(v77 + 40) = 0;
  *(void *)(v77 + 48) = 0;
  *(void *)(v77 + 56) = 0x3FF0000000000000;
  uint64_t v78 = v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v76);
  uint64_t v79 = v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v79 = 0;
  *(unsigned char *)(v79 + 8) = 1;
  uint64_t v80 = v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v80 = 0;
  *(unsigned char *)(v80 + 8) = 1;
  *(unsigned char *)(v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v77 + 16) = v75;
  *(void *)(v77 + 24) = v75;
  *(unsigned char *)(v77 + 32) = 0;
  sub_254277464(v47, v78);
  *(void *)uint64_t v79 = 0;
  *(unsigned char *)(v79 + 8) = 1;
  *(void *)uint64_t v80 = 0;
  *(unsigned char *)(v80 + 8) = 1;
  *(void *)(v74 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter) = v77;
  uint64_t v81 = v118[24];
  v44(v47, 1, 1, v76);
  uint64_t v82 = swift_allocObject();
  *(unsigned char *)(v82 + 33) = 0;
  *(void *)(v82 + 40) = 0;
  *(void *)(v82 + 48) = 0;
  *(void *)(v82 + 56) = 0x3FF0000000000000;
  uint64_t v83 = v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v44(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v76);
  uint64_t v84 = v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v84 = 0;
  *(unsigned char *)(v84 + 8) = 1;
  uint64_t v85 = v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v85 = 0;
  *(unsigned char *)(v85 + 8) = 1;
  *(unsigned char *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v82 + 16) = v81;
  *(void *)(v82 + 24) = v81;
  *(unsigned char *)(v82 + 32) = 0;
  sub_254277464(v47, v83);
  *(void *)uint64_t v84 = 0;
  *(unsigned char *)(v84 + 8) = 1;
  *(void *)uint64_t v85 = 0;
  *(void *)(v74 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter) = v82;
  uint64_t v86 = *(void *)(v74 + v116);
  *(unsigned char *)(v85 + 8) = 1;
  uint64_t v87 = *(void **)(v86 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v88 = v87[2];
  if (v88 < 1) {
    goto LABEL_38;
  }
  uint64_t v89 = v87[3];
  if (v89 <= 0) {
    goto LABEL_38;
  }
  uint64_t v90 = (void *)v87[4];
  *uint64_t v90 = 0x3FB999999999999ALL;
  if ((unint64_t)v88 < 2 || v89 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v88, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v90[v88 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v88 < 3 || (unint64_t)v89 <= 2) {
    goto LABEL_38;
  }
  if (v88 + 0x4000000000000000 < 0) {
    goto LABEL_30;
  }
  uint64_t v91 = 2 * v88;
  BOOL v92 = __OFADD__(v91, 2);
  uint64_t v93 = v91 + 2;
  if (v92)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v94 = v74;
  v90[v93] = 0x3F847AE147AE147BLL;
  int v95 = *(void **)(*(void *)(v74 + v114) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v96 = v95[2];
  if (v96 < 1) {
    goto LABEL_38;
  }
  uint64_t v97 = v95[3];
  if (v97 <= 0) {
    goto LABEL_38;
  }
  uint64_t v98 = (void *)v95[4];
  *uint64_t v98 = 0x3FB999999999999ALL;
  if ((unint64_t)v96 < 2 || v97 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v96, 1)) {
    goto LABEL_32;
  }
  v98[v96 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v96 < 3 || (unint64_t)v97 <= 2) {
    goto LABEL_38;
  }
  if (v96 + 0x4000000000000000 < 0) {
    goto LABEL_33;
  }
  uint64_t v99 = 2 * v96;
  BOOL v92 = __OFADD__(v99, 2);
  uint64_t v100 = v99 + 2;
  if (v92)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v98[v100] = 0x3F847AE147AE147BLL;
  uint64_t v101 = *(void **)(*(void *)(v74 + v113) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v102 = v101[2];
  if (v102 < 1) {
    goto LABEL_38;
  }
  uint64_t v103 = v101[3];
  if (v103 <= 0) {
    goto LABEL_38;
  }
  uint64_t v104 = (void *)v101[4];
  *uint64_t v104 = 0x3FB999999999999ALL;
  if ((unint64_t)v102 < 2 || v103 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v102, 1)) {
    goto LABEL_35;
  }
  v104[v102 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v102 < 3 || (unint64_t)v103 <= 2) {
    goto LABEL_38;
  }
  if (v102 + 0x4000000000000000 >= 0)
  {
    uint64_t v105 = 2 * v102;
    BOOL v92 = __OFADD__(v105, 2);
    uint64_t v106 = v105 + 2;
    if (!v92)
    {
      v104[v106] = 0x3F847AE147AE147BLL;
      uint64_t v107 = v112;
      sub_2542CF9D4(v112);
      sub_254261B04(v111, (uint64_t (*)(void))type metadata accessor for DKCamera);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v107, v76);
      return v94;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}