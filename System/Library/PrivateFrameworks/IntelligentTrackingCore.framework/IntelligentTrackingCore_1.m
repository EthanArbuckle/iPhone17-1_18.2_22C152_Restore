unint64_t sub_2542D2080()
{
  unint64_t result;

  result = qword_269DD8FB8;
  if (!qword_269DD8FB8)
  {
    sub_25436C7B0();
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8FB8);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonMotionFilter.State(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8FE8);
}

unint64_t sub_2542D20FC()
{
  unint64_t result = qword_269DD8FC0;
  if (!qword_269DD8FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD8FC0);
  }
  return result;
}

uint64_t sub_2542D2150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, a2);
}

uint64_t sub_2542D215C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time);
}

double sub_2542D217C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = keypath_get_31Tm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect, a2).n128_u64[0];
  return result;
}

double sub_2542D2188(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_32Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect).n128_u64[0];
  return result;
}

double sub_2542D2194@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = keypath_get_31Tm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect, a2).n128_u64[0];
  return result;
}

double sub_2542D21A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_32Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect).n128_u64[0];
  return result;
}

void *sub_2542D21AC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D21D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
}

void *sub_2542D21DC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D2200(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
}

void *sub_2542D220C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D2230(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
}

void *sub_2542D223C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D2260(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
}

uint64_t sub_2542D226C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, a2);
}

uint64_t sub_2542D2278(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated);
}

uint64_t sub_2542D2298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a2);
}

uint64_t sub_2542D22A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated);
}

uint64_t sub_2542D22C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a2);
}

uint64_t sub_2542D22D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated);
}

void *sub_2542D22F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result
                  + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
  return result;
}

void *sub_2542D2308(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2542D2320@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254261A9C(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, a2, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_2542D2360(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CD318(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for DKMotion3, (uint64_t (*)(void))type metadata accessor for DKMotion3, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion);
}

__n128 sub_2542D23A8@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542D23C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect).n128_u64[0];
  return result;
}

__n128 sub_2542D23D0@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542D23EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect).n128_u64[0];
  return result;
}

void *sub_2542D23F8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D241C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
}

void *sub_2542D2428@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D244C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
}

void *sub_2542D2458@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542D247C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
}

uint64_t sub_2542D2488@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254261A9C(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, a2, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_2542D24C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CD318(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for DKMotion3, (uint64_t (*)(void))type metadata accessor for DKMotion3, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera);
}

uint64_t sub_2542D2510@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254261A9C(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, a2, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_2542D2550(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CD318(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for DKCamera, (uint64_t (*)(void))type metadata accessor for DKCamera, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera);
}

uint64_t sub_2542D2598@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
  return swift_retain();
}

uint64_t sub_2542D25B0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
}

uint64_t sub_2542D25BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
  return swift_retain();
}

uint64_t sub_2542D25D4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
}

uint64_t sub_2542D25E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter);
  return swift_retain();
}

uint64_t sub_2542D25F8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter);
}

uint64_t sub_2542D2604@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
  return swift_retain();
}

uint64_t sub_2542D261C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
}

uint64_t sub_2542D2628@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter);
  return swift_retain();
}

uint64_t sub_2542D2640(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter);
}

uint64_t sub_2542D264C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
  return swift_retain();
}

uint64_t sub_2542D2664(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
}

uint64_t sub_2542D2670@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
  return swift_retain();
}

uint64_t sub_2542D2688(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
}

uint64_t sub_2542D2694@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
  return swift_retain();
}

uint64_t sub_2542D26AC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
}

uint64_t sub_2542D26B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  return swift_retain();
}

uint64_t sub_2542D26D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
}

uint64_t sub_2542D26DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  return swift_retain();
}

uint64_t sub_2542D26F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
}

uint64_t sub_2542D2700@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  return swift_retain();
}

uint64_t sub_2542D2718(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
}

uint64_t sub_2542D2724@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  return swift_retain();
}

uint64_t sub_2542D273C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
}

uint64_t keypath_set_61Tm(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)(*a2 + *a5) = *a1;
  swift_retain();
  return swift_release();
}

void *sub_2542D2790@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge);
  return result;
}

unsigned char *sub_2542D27A8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = *result;
  return result;
}

void *sub_2542D27C0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge);
  return result;
}

unsigned char *sub_2542D27D8(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = *result;
  return result;
}

uint64_t sub_2542D27F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  return swift_retain();
}

uint64_t sub_2542D2808(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2542D2854@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, a2);
}

uint64_t sub_2542D2860(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated);
}

uint64_t sub_2542D2880@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, a2);
}

uint64_t sub_2542D288C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated);
}

uint64_t sub_2542D28AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, a2);
}

uint64_t sub_2542D28B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542CDEA8(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated);
}

void *sub_2542D28D8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
  return result;
}

void *sub_2542D28F0(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = *result;
  return result;
}

double sub_2542D2908@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = keypath_get_31Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect, a2).n128_u64[0];
  return result;
}

double sub_2542D2914(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_32Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect).n128_u64[0];
  return result;
}

uint64_t sub_2542D2920()
{
  return type metadata accessor for DKPersonMotionFilter(0);
}

uint64_t type metadata accessor for DKPersonMotionFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8FC8);
}

uint64_t sub_2542D2948()
{
  uint64_t result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C7B0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonMotionFilter);
}

uint64_t dispatch thunk of DKPersonMotionFilter.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 744);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.__allocating_init(currentTime:configuration:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 760))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isValid(currentTime:measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.update(measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isSubjectLeavingFromHorizontalEdge(rect:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isSubjectLeavingFromVerticalEdge(rect:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getSearchMargins()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.predict(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.updateState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.updateStubFace(faceRect:bodyRect:)(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 32);
  char v4 = *(unsigned char *)(a2 + 32);
  v5 = *(uint64_t (**)(_OWORD *, _OWORD *))(*(void *)v2 + 840);
  long long v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  char v12 = v3;
  long long v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  char v10 = v4;
  return v5(v11, v9);
}

uint64_t dispatch thunk of DKPersonMotionFilter.getStubFaceRect(bodyRect:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getStubBodyRect(faceRect:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

unsigned char *storeEnumTagSinglePayload for DKPersonMotionFilter.SearchDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542D38B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonMotionFilter.SearchDirection()
{
  return &type metadata for DKPersonMotionFilter.SearchDirection;
}

uint64_t sub_2542D38F0()
{
  return type metadata accessor for DKPersonMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKPersonMotionFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD8FD8);
}

uint64_t sub_2542D3918()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonMotionFilter.Measurement);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  int v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 168);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  int v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 192);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 240))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t sub_2542D3DF0()
{
  return type metadata accessor for DKPersonMotionFilter.State(0);
}

uint64_t sub_2542D3DF8()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DKMotion3();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter.State(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonMotionFilter.State);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 344))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 368))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 392))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

IntelligentTrackingCore::DKIdentityConfidence __swiftcall DKIdentityConfidence.init(id:confidence:)(Swift::Int id, Swift::Double confidence)
{
  *(void *)uint64_t v2 = id;
  *(Swift::Double *)(v2 + 8) = confidence;
  result.confidence = confidence;
  result.id = id;
  return result;
}

uint64_t Array<A>.max()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = a1;
  swift_bridgeObjectRetain();
  sub_2542E4338(&v7);
  uint64_t v3 = *(void *)(v7 + 16);
  if (v3)
  {
    uint64_t v4 = v7 + 16 * v3;
    uint64_t v5 = *(void *)(v4 + 24);
    *(void *)a2 = *(void *)(v4 + 16);
    *(void *)(a2 + 8) = v5;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  *(unsigned char *)(a2 + 16) = v3 == 0;
  return result;
}

uint64_t DKObjectTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  return sub_2542D7938(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:));
}

uint64_t DKIdentityConfidence.id.getter()
{
  return *(void *)v0;
}

uint64_t DKIdentityConfidence.id.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*DKIdentityConfidence.id.modify())()
{
  return nullsub_1;
}

double DKIdentityConfidence.confidence.getter()
{
  return *(double *)(v0 + 8);
}

void DKIdentityConfidence.confidence.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKIdentityConfidence.confidence.modify())()
{
  return nullsub_1;
}

uint64_t DKIdentityConfidence.hash(into:)()
{
  return sub_25436D920();
}

BOOL static DKIdentityConfidence.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_2542D4668()
{
  if (*v0) {
    return 0x6E656469666E6F63;
  }
  else {
    return 25705;
  }
}

uint64_t sub_2542D469C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542EAE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542D46C4(uint64_t a1)
{
  unint64_t v2 = sub_2542E43A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542D4700(uint64_t a1)
{
  unint64_t v2 = sub_2542E43A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIdentityConfidence.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8FF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E43A4();
  sub_25436D950();
  v8[15] = 0;
  sub_25436D700();
  if (!v1)
  {
    v8[14] = 1;
    sub_25436D6F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKIdentityConfidence.hashValue.getter()
{
  return sub_25436D930();
}

uint64_t DKIdentityConfidence.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9008);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E43A4();
  sub_25436D940();
  if (!v2)
  {
    v13[15] = 0;
    uint64_t v9 = sub_25436D640();
    v13[14] = 1;
    sub_25436D630();
    uint64_t v11 = v10;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2542D4ABC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DKIdentityConfidence.init(from:)(a1, a2);
}

uint64_t sub_2542D4AD4(void *a1)
{
  return DKIdentityConfidence.encode(to:)(a1);
}

uint64_t sub_2542D4AF0()
{
  return sub_25436D920();
}

uint64_t sub_2542D4B30()
{
  return sub_25436D930();
}

BOOL sub_2542D4B8C(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_2542D4BB8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D4BD8(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D4BF8())()
{
  return nullsub_1;
}

uint64_t sub_2542D4C20@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542D4C40(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542D4C60())()
{
  return nullsub_1;
}

double sub_2542D4C88()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
}

void *sub_2542D4C94(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542D4CA0())()
{
  return nullsub_1;
}

double sub_2542D4CC8@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542D4CE8(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542D4D08())()
{
  return nullsub_1;
}

uint64_t sub_2542D4D30()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
}

uint64_t sub_2542D4D40(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542D4D50())()
{
  return nullsub_1;
}

uint64_t sub_2542D4D78()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
}

uint64_t sub_2542D4D88(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542D4D98())()
{
  return nullsub_1;
}

uint64_t sub_2542D4DC0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
}

uint64_t sub_2542D4DD0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542D4DE0())()
{
  return nullsub_1;
}

uint64_t sub_2542D4E08@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a1);
}

uint64_t sub_2542D4E1C(uint64_t a1)
{
  return sub_2542E4460(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t (*sub_2542D4E2C())()
{
  return nullsub_1;
}

uint64_t sub_2542D4E54@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D4E74(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D4E94())()
{
  return nullsub_1;
}

uint64_t sub_2542D4EBC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542D4ECC(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542D4EDC())()
{
  return nullsub_1;
}

uint64_t sub_2542D4F04()
{
  return swift_retain();
}

uint64_t sub_2542D4F14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2542D4F2C())()
{
  return nullsub_1;
}

uint64_t sub_2542D4F54()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw);
}

uint64_t sub_2542D4F6C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542D4F88())()
{
  return nullsub_1;
}

uint64_t sub_2542D4FB0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch);
}

uint64_t sub_2542D4FC8(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542D4FE4())()
{
  return nullsub_1;
}

uint64_t sub_2542D500C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll);
}

uint64_t sub_2542D5024(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542D5040())()
{
  return nullsub_1;
}

unint64_t sub_2542D5068(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    case 11:
      unint64_t result = 0x77615965636166;
      break;
    case 12:
      unint64_t result = 0x6374695065636166;
      break;
    case 13:
      unint64_t result = 0x6C6C6F5265636166;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2542D5210(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    case 11:
      unint64_t result = 0x77615965636166;
      break;
    case 12:
      unint64_t result = 0x6374695065636166;
      break;
    case 13:
      unint64_t result = 0x6C6C6F5265636166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542D53B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DBB20(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2542D5068);
}

uint64_t sub_2542D53D0(uint64_t a1, uint64_t a2)
{
  return sub_2542DBBD0(a1, a2, (void (*)(uint64_t))sub_2542D5068);
}

uint64_t sub_2542D53E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBC54(a1, a2, a3, (void (*)(void))sub_2542D5068);
}

uint64_t sub_2542D5400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBCC4(a1, a2, a3, (void (*)(uint64_t))sub_2542D5068);
}

uint64_t sub_2542D5418@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF34();
  *a1 = result;
  return result;
}

unint64_t sub_2542D5448@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542D5068(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542D5474()
{
  return sub_2542D5210(*v0);
}

uint64_t sub_2542D547C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF34();
  *a1 = result;
  return result;
}

void sub_2542D54A4(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_2542D54B0(uint64_t a1)
{
  unint64_t v2 = sub_2542E4528();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542D54EC(uint64_t a1)
{
  unint64_t v2 = sub_2542E4528();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFaceTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  uint64_t v27 = swift_allocObject();
  DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1, a17, a18 & 1, a19,
    a20 & 1);
  return v27;
}

uint64_t DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  uint64_t v42 = *a3;
  uint64_t v25 = a3[1];
  uint64_t v26 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion;
  uint64_t v27 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = 0;
  uint64_t v29 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  uint64_t v30 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  uint64_t v31 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  uint64_t v32 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  uint64_t v33 = sub_25436C7B0();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);
  v34(v32, a1, v33);
  uint64_t v35 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  uint64_t v36 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v35, a2, v36);
  v37 = (double *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
  double *v37 = a9;
  v37[1] = a10;
  v37[2] = a11;
  v37[3] = a12;
  v38 = (void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
  void *v38 = v42;
  v38[1] = v25;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = a4;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = a5;
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = a6;
  sub_2542E4460(a7, v26);
  v34(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, a8, v33);
  *(void *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = a13;
  *(void *)(v20 + v28) = a14;
  swift_release();
  *(void *)uint64_t v29 = a15;
  *(unsigned char *)(v29 + 8) = a16 & 1;
  *(void *)uint64_t v30 = a17;
  *(unsigned char *)(v30 + 8) = a18 & 1;
  *(void *)uint64_t v31 = a19;
  *(unsigned char *)(v31 + 8) = a20 & 1;
  return v20;
}

uint64_t DKFaceTrackerState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKFaceTrackerState.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542D5B40(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C800();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9010);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E4528();
  sub_25436D950();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, v6);
  LOBYTE(v37) = 0;
  sub_2542E457C(&qword_269DD8110, 255, MEMORY[0x263F07490]);
  uint64_t v35 = v12;
  v17 = v15;
  uint64_t v18 = v34;
  sub_25436D710();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  }
  else
  {
    uint64_t v28 = v16;
    uint64_t v34 = v13;
    uint64_t v20 = v11;
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v20, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, v33);
    LOBYTE(v37) = 1;
    sub_2542E457C(&qword_269DD89A0, 255, MEMORY[0x263F07508]);
    sub_25436D710();
    uint64_t v27 = v21;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    uint64_t v22 = v36;
    long long v23 = *(_OWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect + 16);
    long long v37 = *(_OWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
    long long v38 = v23;
    char v39 = 2;
    type metadata accessor for CGRect(0);
    sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity + 8);
    *(void *)&long long v37 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
    *((void *)&v37 + 1) = v24;
    char v39 = 3;
    sub_2542B6D08();
    sub_25436D710();
    LOBYTE(v37) = 4;
    sub_25436D700();
    LOBYTE(v37) = 5;
    sub_25436D700();
    LOBYTE(v37) = 6;
    sub_25436D700();
    sub_2542E43F8(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, v30);
    LOBYTE(v37) = 7;
    uint64_t v33 = type metadata accessor for DKMotion3();
    sub_2542E457C(&qword_269DD7C28, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D6D0();
    sub_2542E44C8(v30);
    v28(v29, v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v6);
    uint64_t v25 = v29;
    LOBYTE(v37) = 8;
    sub_25436D710();
    v27(v25, v6);
    LOBYTE(v37) = 9;
    sub_25436D700();
    *(void *)&long long v37 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation);
    char v39 = 10;
    type metadata accessor for DKFaceObservation(0);
    sub_2542E457C(&qword_269DD8130, 255, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    sub_25436D6D0();
    LOBYTE(v37) = 11;
    sub_25436D6B0();
    LOBYTE(v37) = 12;
    sub_25436D6B0();
    uint64_t v26 = v35;
    LOBYTE(v37) = 13;
    sub_25436D6B0();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v26);
  }
}

uint64_t DKFaceTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542D85EC(a1, (void (*)(uint64_t))DKFaceTrackerState.init(from:));
}

uint64_t DKFaceTrackerState.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v3 - 8);
  v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v58 = v6;
  MEMORY[0x270FA5388](v5);
  v60 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25436C7B0();
  uint64_t v59 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v61 = (char *)&v49 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9020);
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion;
  uint64_t v15 = type metadata accessor for DKMotion3();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v70 = v14;
  v16(v14, 1, 1, v15);
  uint64_t v66 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation;
  v67 = a1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = 0;
  uint64_t v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  uint64_t v69 = v1;
  uint64_t v19 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E4528();
  v65 = v13;
  uint64_t v20 = v68;
  sub_25436D940();
  if (v20)
  {
    uint64_t v48 = v69;
    sub_2542E44C8(v70);
    uint64_t v25 = (uint64_t)v67;
    swift_release();
    type metadata accessor for DKFaceTrackerState(0);
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v25);
  }
  else
  {
    v21 = v60;
    uint64_t v68 = v15;
    v54 = (uint64_t *)v17;
    v53 = (uint64_t *)v18;
    v52 = (uint64_t *)v19;
    LOBYTE(v71) = 0;
    uint64_t v22 = sub_2542E457C(&qword_269DD8220, 255, MEMORY[0x263F07490]);
    long long v23 = v61;
    uint64_t v24 = v64;
    sub_25436D650();
    uint64_t v51 = v22;
    uint64_t v27 = v69;
    uint64_t v28 = (char *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time);
    uint64_t v29 = v24;
    uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
    v30(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, v23, v29);
    LOBYTE(v71) = 1;
    sub_2542E457C(&qword_269DD89C8, 255, MEMORY[0x263F07508]);
    uint64_t v31 = v57;
    sub_25436D650();
    v50 = v30;
    v61 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, v21, v31);
    type metadata accessor for CGRect(0);
    char v73 = 2;
    sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    v60 = 0;
    sub_25436D650();
    uint64_t v32 = (_OWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
    long long v33 = v72;
    *uint64_t v32 = v71;
    v32[1] = v33;
    char v73 = 3;
    sub_2542B6D5C();
    sub_25436D650();
    uint64_t v34 = *((void *)&v71 + 1);
    uint64_t v35 = (void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
    *uint64_t v35 = v71;
    v35[1] = v34;
    LOBYTE(v71) = 4;
    *(void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = sub_25436D640();
    LOBYTE(v71) = 5;
    *(void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = sub_25436D640();
    LOBYTE(v71) = 6;
    *(void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = sub_25436D640();
    LOBYTE(v71) = 7;
    sub_2542E457C(&qword_269DD7C60, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    uint64_t v36 = (uint64_t)v56;
    sub_25436D610();
    sub_2542E4460(v36, v70);
    LOBYTE(v71) = 8;
    long long v37 = v55;
    sub_25436D650();
    v50(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v37, v64);
    LOBYTE(v71) = 9;
    *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = sub_25436D640();
    type metadata accessor for DKFaceObservation(0);
    char v73 = 10;
    sub_2542E457C(&qword_269DD8238, 255, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    sub_25436D610();
    *(void *)(v69 + v66) = v71;
    swift_release();
    LOBYTE(v71) = 11;
    uint64_t v38 = sub_25436D5F0();
    char v39 = v54;
    uint64_t *v54 = v38;
    *((unsigned char *)v39 + 8) = v40 & 1;
    LOBYTE(v71) = 12;
    uint64_t v41 = sub_25436D5F0();
    uint64_t v42 = v53;
    uint64_t *v53 = v41;
    *((unsigned char *)v42 + 8) = v43 & 1;
    LOBYTE(v71) = 13;
    uint64_t v44 = sub_25436D5F0();
    char v46 = v45;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v65, v63);
    v47 = v52;
    uint64_t *v52 = v44;
    *((unsigned char *)v47 + 8) = v46 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    return v69;
  }
  return v48;
}

uint64_t sub_2542D6E2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542D6E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542D6E6C())()
{
  return nullsub_1;
}

double sub_2542D6E98(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
}

void sub_2542D6EA4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542D6EB0())()
{
  return nullsub_1;
}

double sub_2542D6EDC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542D6F00(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542D6F24())()
{
  return nullsub_1;
}

uint64_t sub_2542D6F50()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
}

uint64_t sub_2542D6F64(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542D6F78())()
{
  return nullsub_1;
}

uint64_t sub_2542D6FA4()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
}

uint64_t sub_2542D6FB8(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542D6FCC())()
{
  return nullsub_1;
}

uint64_t sub_2542D6FF8()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
}

uint64_t sub_2542D700C(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542D7020())()
{
  return nullsub_1;
}

uint64_t sub_2542D704C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a1);
}

uint64_t sub_2542D7064(uint64_t a1)
{
  return sub_2542E4460(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t (*sub_2542D7078())()
{
  return nullsub_1;
}

uint64_t sub_2542D70A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D70C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D70E4())()
{
  return nullsub_1;
}

uint64_t sub_2542D7110()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542D7124(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542D7138())()
{
  return nullsub_1;
}

uint64_t sub_2542D7164@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542D92BC(a1, (void (*)(void))type metadata accessor for DKFaceTrackerState, (uint64_t (*)(uint64_t))DKFaceTrackerState.init(from:), a2);
}

uint64_t sub_2542D71A4(void *a1)
{
  return sub_2542D5B40(a1);
}

uint64_t sub_2542D71C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D71E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D7208())()
{
  return nullsub_1;
}

uint64_t sub_2542D7234@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKFaceTrackerState(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542D7278@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D7298(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D72B8())()
{
  return nullsub_1;
}

uint64_t sub_2542D72E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542D7300(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542D7320())()
{
  return nullsub_1;
}

double sub_2542D7348()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
}

void *sub_2542D7354(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542D7360())()
{
  return nullsub_1;
}

double sub_2542D7388@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542D73A8(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542D73C8())()
{
  return nullsub_1;
}

uint64_t sub_2542D73F0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
}

uint64_t sub_2542D7400(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542D7410())()
{
  return nullsub_1;
}

uint64_t sub_2542D7438()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
}

uint64_t sub_2542D7448(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542D7458())()
{
  return nullsub_1;
}

uint64_t sub_2542D7480()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
}

uint64_t sub_2542D7490(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542D74A0())()
{
  return nullsub_1;
}

uint64_t sub_2542D74C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a1);
}

uint64_t sub_2542D74DC(uint64_t a1)
{
  return sub_2542E4460(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t (*sub_2542D74EC())()
{
  return nullsub_1;
}

uint64_t sub_2542D7514@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D7534(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D7554())()
{
  return nullsub_1;
}

uint64_t sub_2542D757C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542D758C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542D759C())()
{
  return nullsub_1;
}

uint64_t sub_2542D75C4()
{
  return swift_retain();
}

uint64_t sub_2542D75D4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2542D75EC())()
{
  return nullsub_1;
}

uint64_t sub_2542D7618(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_2542D979C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_2542D979C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2542D76A8()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_2542D979C(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542D7710()
{
  sub_2542D979C(*v0);
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542D7768()
{
  char v1 = *v0;
  sub_25436D8F0();
  sub_2542D979C(v1);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542D77C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF80();
  *a1 = result;
  return result;
}

unint64_t sub_2542D7800@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542D979C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542D782C()
{
  return sub_2542D98E8(*v0);
}

uint64_t sub_2542D7848@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF80();
  *a1 = result;
  return result;
}

void sub_2542D7878(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2542D7884(uint64_t a1)
{
  unint64_t v2 = sub_2542E45E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542D78C0(uint64_t a1)
{
  unint64_t v2 = sub_2542E45E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKBodyTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  return sub_2542D7938(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))DKBodyTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:));
}

uint64_t sub_2542D7938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))
{
  uint64_t v25 = swift_allocObject();
  a15(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v25;
}

uint64_t DKBodyTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = *a3;
  uint64_t v22 = a3[1];
  uint64_t v23 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion;
  uint64_t v24 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = 0;
  uint64_t v26 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  uint64_t v27 = sub_25436C7B0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
  v28(v26, a1, v27);
  uint64_t v29 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  uint64_t v30 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a2, v30);
  uint64_t v31 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
  *uint64_t v31 = a9;
  v31[1] = a10;
  v31[2] = a11;
  v31[3] = a12;
  uint64_t v32 = (void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
  *uint64_t v32 = v21;
  v32[1] = v22;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = a4;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = a5;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = a6;
  sub_2542E4460(a7, v23);
  v28(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, a8, v27);
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = a13;
  *(void *)(v14 + v25) = a14;
  swift_release();
  return v14;
}

uint64_t DKBodyTrackerState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKBodyTrackerState.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542D7E64(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C800();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  long long v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9028);
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E45E4();
  sub_25436D950();
  uint64_t v32 = v2;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v13, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, v8);
  LOBYTE(v38) = 0;
  uint64_t v18 = v16;
  sub_2542E457C(&qword_269DD8110, 255, MEMORY[0x263F07490]);
  uint64_t v19 = v37;
  sub_25436D710();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v14);
  }
  else
  {
    uint64_t v29 = v17;
    uint64_t v37 = v9 + 16;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v13, v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v32 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, v35);
    LOBYTE(v38) = 1;
    sub_2542E457C(&qword_269DD89A0, 255, MEMORY[0x263F07508]);
    sub_25436D710();
    uint64_t v28 = v20;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
    uint64_t v21 = v32;
    long long v22 = *(_OWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect + 16);
    long long v38 = *(_OWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
    long long v39 = v22;
    char v40 = 2;
    type metadata accessor for CGRect(0);
    sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity + 8);
    *(void *)&long long v38 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
    *((void *)&v38 + 1) = v23;
    char v40 = 3;
    sub_2542B6D08();
    sub_25436D710();
    LOBYTE(v38) = 4;
    sub_25436D700();
    LOBYTE(v38) = 5;
    sub_25436D700();
    LOBYTE(v38) = 6;
    sub_25436D700();
    uint64_t v24 = v31;
    sub_2542E43F8(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, v31);
    LOBYTE(v38) = 7;
    type metadata accessor for DKMotion3();
    sub_2542E457C(&qword_269DD7C28, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D6D0();
    sub_2542E44C8(v24);
    uint64_t v25 = v30;
    v29(v30, v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v8);
    LOBYTE(v38) = 8;
    sub_25436D710();
    v28(v25, v8);
    LOBYTE(v38) = 9;
    sub_25436D700();
    uint64_t v27 = v36;
    *(void *)&long long v38 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation);
    char v40 = 10;
    type metadata accessor for DKBodyObservation(0);
    sub_2542E457C(&qword_269DD8148, 255, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    sub_25436D6D0();
    return (*(uint64_t (**)(char *, void))(v27 + 8))(v18, 0);
  }
}

uint64_t DKBodyTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542D85EC(a1, (void (*)(uint64_t))DKBodyTrackerState.init(from:));
}

uint64_t sub_2542D85EC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t DKBodyTrackerState.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v37 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C800();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v40 = (char *)v34 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9038);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion;
  uint64_t v16 = type metadata accessor for DKMotion3();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v49 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v45 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation;
  char v46 = a1;
  uint64_t v48 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E45E4();
  uint64_t v44 = v14;
  uint64_t v18 = v47;
  sub_25436D940();
  if (v18)
  {
    uint64_t v32 = v48;
    sub_2542E44C8(v49);
    uint64_t v20 = (uint64_t)v46;
    swift_release();
    type metadata accessor for DKBodyTrackerState(0);
    swift_deallocPartialClassInstance();
    uint64_t v33 = v20;
  }
  else
  {
    uint64_t v35 = v9;
    uint64_t v36 = v16;
    uint64_t v47 = v5;
    LOBYTE(v50) = 0;
    uint64_t v19 = sub_2542E457C(&qword_269DD8220, 255, MEMORY[0x263F07490]);
    sub_25436D650();
    v34[1] = v19;
    uint64_t v22 = v48;
    uint64_t v23 = *(void (**)(void))(v39 + 32);
    v34[2] = v48 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
    v23();
    LOBYTE(v50) = 1;
    sub_2542E457C(&qword_269DD89C8, 255, MEMORY[0x263F07508]);
    uint64_t v24 = v7;
    uint64_t v25 = v47;
    sub_25436D650();
    v34[0] = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, v24, v25);
    type metadata accessor for CGRect(0);
    char v52 = 2;
    sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    char v40 = 0;
    sub_25436D650();
    uint64_t v26 = (_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
    long long v27 = v51;
    *uint64_t v26 = v50;
    v26[1] = v27;
    char v52 = 3;
    sub_2542B6D5C();
    sub_25436D650();
    uint64_t v28 = *((void *)&v50 + 1);
    uint64_t v29 = (void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
    *uint64_t v29 = v50;
    v29[1] = v28;
    LOBYTE(v50) = 4;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = sub_25436D640();
    LOBYTE(v50) = 5;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = sub_25436D640();
    LOBYTE(v50) = 6;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = sub_25436D640();
    LOBYTE(v50) = 7;
    sub_2542E457C(&qword_269DD7C60, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    uint64_t v30 = (uint64_t)v37;
    sub_25436D610();
    sub_2542E4460(v30, v49);
    LOBYTE(v50) = 8;
    uint64_t v31 = v35;
    sub_25436D650();
    ((void (*)(uint64_t, char *, uint64_t))v34[0])(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v31, v43);
    LOBYTE(v50) = 9;
    *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = sub_25436D640();
    type metadata accessor for DKBodyObservation(0);
    char v52 = 10;
    sub_2542E457C(&qword_269DD8248, 255, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    sub_25436D610();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v42);
    uint64_t v32 = v48;
    *(void *)(v48 + v45) = v50;
    swift_release();
    uint64_t v33 = (uint64_t)v46;
  }
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v32;
}

uint64_t sub_2542D8F44@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542D8F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542D8F84())()
{
  return nullsub_1;
}

double sub_2542D8FB0(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
}

void sub_2542D8FBC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542D8FC8())()
{
  return nullsub_1;
}

double sub_2542D8FF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542D9018(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542D903C())()
{
  return nullsub_1;
}

uint64_t sub_2542D9068()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
}

uint64_t sub_2542D907C(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542D9090())()
{
  return nullsub_1;
}

uint64_t sub_2542D90BC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
}

uint64_t sub_2542D90D0(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542D90E4())()
{
  return nullsub_1;
}

uint64_t sub_2542D9110()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
}

uint64_t sub_2542D9124(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542D9138())()
{
  return nullsub_1;
}

uint64_t sub_2542D9164@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a1);
}

uint64_t sub_2542D917C(uint64_t a1)
{
  return sub_2542E4460(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t (*sub_2542D9190())()
{
  return nullsub_1;
}

uint64_t sub_2542D91BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D91DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D91FC())()
{
  return nullsub_1;
}

uint64_t sub_2542D9228()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542D923C(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542D9250())()
{
  return nullsub_1;
}

uint64_t sub_2542D927C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542D92BC(a1, (void (*)(void))type metadata accessor for DKBodyTrackerState, (uint64_t (*)(uint64_t))DKBodyTrackerState.init(from:), a2);
}

uint64_t sub_2542D92BC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_2542D932C(void *a1)
{
  return sub_2542D7E64(a1);
}

uint64_t sub_2542D9350@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D9370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D9390())()
{
  return nullsub_1;
}

uint64_t sub_2542D93BC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKBodyTrackerState(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542D9400@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D9420(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D9440())()
{
  return nullsub_1;
}

uint64_t sub_2542D9468@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542D9488(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542D94A8())()
{
  return nullsub_1;
}

double sub_2542D94D0()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
}

void *sub_2542D94DC(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542D94E8())()
{
  return nullsub_1;
}

double sub_2542D9510@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542D9530(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542D9550())()
{
  return nullsub_1;
}

uint64_t sub_2542D9578()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
}

uint64_t sub_2542D9588(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542D9598())()
{
  return nullsub_1;
}

uint64_t sub_2542D95C0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
}

uint64_t sub_2542D95D0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542D95E0())()
{
  return nullsub_1;
}

uint64_t sub_2542D9608()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
}

uint64_t sub_2542D9618(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542D9628())()
{
  return nullsub_1;
}

uint64_t sub_2542D9650@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a1);
}

uint64_t sub_2542D9664(uint64_t a1)
{
  return sub_2542E4460(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t (*sub_2542D9674())()
{
  return nullsub_1;
}

uint64_t sub_2542D969C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542D96BC(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542D96DC())()
{
  return nullsub_1;
}

uint64_t sub_2542D9704()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542D9714(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542D9724())()
{
  return nullsub_1;
}

uint64_t sub_2542D974C()
{
  return swift_retain();
}

uint64_t sub_2542D975C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2542D9774())()
{
  return nullsub_1;
}

unint64_t sub_2542D979C(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2542D98E8(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542D9A34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF80();
  *a1 = result;
  return result;
}

uint64_t sub_2542D9A6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAF80();
  *a1 = result;
  return result;
}

uint64_t sub_2542D9A9C(uint64_t a1)
{
  unint64_t v2 = sub_2542E4658();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542D9AD8(uint64_t a1)
{
  unint64_t v2 = sub_2542E4658();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = *a3;
  uint64_t v22 = a3[1];
  uint64_t v23 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion;
  uint64_t v24 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = 0;
  uint64_t v26 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  uint64_t v27 = sub_25436C7B0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
  v28(v26, a1, v27);
  uint64_t v29 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  uint64_t v30 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a2, v30);
  uint64_t v31 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
  *uint64_t v31 = a9;
  v31[1] = a10;
  v31[2] = a11;
  v31[3] = a12;
  uint64_t v32 = (void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
  *uint64_t v32 = v21;
  v32[1] = v22;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = a4;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = a5;
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = a6;
  sub_2542E4460(a7, v23);
  v28(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, a8, v27);
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = a13;
  *(void *)(v14 + v25) = a14;
  swift_release();
  return v14;
}

uint64_t DKObjectTrackerState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKObjectTrackerState.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542D9F68(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C800();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9040);
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E4658();
  sub_25436D950();
  uint64_t v32 = v2;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v13, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, v8);
  LOBYTE(v38) = 0;
  uint64_t v18 = v16;
  sub_2542E457C(&qword_269DD8110, 255, MEMORY[0x263F07490]);
  uint64_t v19 = v37;
  sub_25436D710();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v14);
  }
  else
  {
    uint64_t v29 = v17;
    uint64_t v37 = v9 + 16;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v13, v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v32 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, v35);
    LOBYTE(v38) = 1;
    sub_2542E457C(&qword_269DD89A0, 255, MEMORY[0x263F07508]);
    sub_25436D710();
    uint64_t v28 = v20;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
    uint64_t v21 = v32;
    long long v22 = *(_OWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect + 16);
    long long v38 = *(_OWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
    long long v39 = v22;
    char v40 = 2;
    type metadata accessor for CGRect(0);
    sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity + 8);
    *(void *)&long long v38 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
    *((void *)&v38 + 1) = v23;
    char v40 = 3;
    sub_2542B6D08();
    sub_25436D710();
    LOBYTE(v38) = 4;
    sub_25436D700();
    LOBYTE(v38) = 5;
    sub_25436D700();
    LOBYTE(v38) = 6;
    sub_25436D700();
    uint64_t v24 = v31;
    sub_2542E43F8(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, v31);
    LOBYTE(v38) = 7;
    type metadata accessor for DKMotion3();
    sub_2542E457C(&qword_269DD7C28, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D6D0();
    sub_2542E44C8(v24);
    uint64_t v25 = v30;
    v29(v30, v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v8);
    LOBYTE(v38) = 8;
    sub_25436D710();
    v28(v25, v8);
    LOBYTE(v38) = 9;
    sub_25436D700();
    uint64_t v27 = v36;
    *(void *)&long long v38 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation);
    char v40 = 10;
    type metadata accessor for DKObjectObservation(0);
    sub_2542E457C(&qword_269DD8AC8, 255, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
    sub_25436D6D0();
    return (*(uint64_t (**)(char *, void))(v27 + 8))(v18, 0);
  }
}

uint64_t DKObjectTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542D85EC(a1, (void (*)(uint64_t))DKObjectTrackerState.init(from:));
}

uint64_t DKObjectTrackerState.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v37 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C800();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_25436C7B0();
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v40 = (char *)v34 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9050);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion;
  uint64_t v16 = type metadata accessor for DKMotion3();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v49 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v45 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation;
  char v46 = a1;
  uint64_t v48 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E4658();
  uint64_t v44 = v14;
  uint64_t v18 = v47;
  sub_25436D940();
  if (v18)
  {
    uint64_t v32 = v48;
    sub_2542E44C8(v49);
    uint64_t v20 = (uint64_t)v46;
    swift_release();
    type metadata accessor for DKObjectTrackerState(0);
    swift_deallocPartialClassInstance();
    uint64_t v33 = v20;
  }
  else
  {
    uint64_t v35 = v9;
    uint64_t v36 = v16;
    uint64_t v47 = v5;
    LOBYTE(v50) = 0;
    uint64_t v19 = sub_2542E457C(&qword_269DD8220, 255, MEMORY[0x263F07490]);
    sub_25436D650();
    v34[1] = v19;
    uint64_t v22 = v48;
    uint64_t v23 = *(void (**)(void))(v39 + 32);
    v34[2] = v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
    v23();
    LOBYTE(v50) = 1;
    sub_2542E457C(&qword_269DD89C8, 255, MEMORY[0x263F07508]);
    uint64_t v24 = v7;
    uint64_t v25 = v47;
    sub_25436D650();
    v34[0] = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, v24, v25);
    type metadata accessor for CGRect(0);
    char v52 = 2;
    sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    char v40 = 0;
    sub_25436D650();
    uint64_t v26 = (_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
    long long v27 = v51;
    *uint64_t v26 = v50;
    v26[1] = v27;
    char v52 = 3;
    sub_2542B6D5C();
    sub_25436D650();
    uint64_t v28 = *((void *)&v50 + 1);
    uint64_t v29 = (void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
    *uint64_t v29 = v50;
    v29[1] = v28;
    LOBYTE(v50) = 4;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = sub_25436D640();
    LOBYTE(v50) = 5;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = sub_25436D640();
    LOBYTE(v50) = 6;
    *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = sub_25436D640();
    LOBYTE(v50) = 7;
    sub_2542E457C(&qword_269DD7C60, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    uint64_t v30 = (uint64_t)v37;
    sub_25436D610();
    sub_2542E4460(v30, v49);
    LOBYTE(v50) = 8;
    uint64_t v31 = v35;
    sub_25436D650();
    ((void (*)(uint64_t, char *, uint64_t))v34[0])(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v31, v43);
    LOBYTE(v50) = 9;
    *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = sub_25436D640();
    type metadata accessor for DKObjectObservation(0);
    char v52 = 10;
    sub_2542E457C(&qword_269DD8AC0, 255, (void (*)(uint64_t))type metadata accessor for DKObjectObservation);
    sub_25436D610();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v42);
    uint64_t v32 = v48;
    *(void *)(v48 + v45) = v50;
    swift_release();
    uint64_t v33 = (uint64_t)v46;
  }
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v32;
}

uint64_t sub_2542DAFF0@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542DB010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542DB030())()
{
  return nullsub_1;
}

double sub_2542DB05C(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
}

void sub_2542DB068(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542DB074())()
{
  return nullsub_1;
}

double sub_2542DB0A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542DB0C4(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542DB0E8())()
{
  return nullsub_1;
}

uint64_t sub_2542DB114()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
}

uint64_t sub_2542DB128(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542DB13C())()
{
  return nullsub_1;
}

uint64_t sub_2542DB168()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
}

uint64_t sub_2542DB17C(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542DB190())()
{
  return nullsub_1;
}

uint64_t sub_2542DB1BC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
}

uint64_t sub_2542DB1D0(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542DB1E4())()
{
  return nullsub_1;
}

uint64_t sub_2542DB210@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a1);
}

uint64_t sub_2542DB228(uint64_t a1)
{
  return sub_2542E4460(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t (*sub_2542DB23C())()
{
  return nullsub_1;
}

uint64_t sub_2542DB268@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DB288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DB2A8())()
{
  return nullsub_1;
}

uint64_t sub_2542DB2D4()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542DB2E8(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542DB2FC())()
{
  return nullsub_1;
}

uint64_t sub_2542DB328@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542D92BC(a1, (void (*)(void))type metadata accessor for DKObjectTrackerState, (uint64_t (*)(uint64_t))DKObjectTrackerState.init(from:), a2);
}

uint64_t sub_2542DB368(void *a1)
{
  return sub_2542D9F68(a1);
}

uint64_t sub_2542DB38C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DB3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DB3CC())()
{
  return nullsub_1;
}

uint64_t sub_2542DB3F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKObjectTrackerState(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542DB43C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DB45C(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DB47C())()
{
  return nullsub_1;
}

uint64_t sub_2542DB4A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542DB4C4(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542DB4E4())()
{
  return nullsub_1;
}

double sub_2542DB50C()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
}

void *sub_2542DB518(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542DB524())()
{
  return nullsub_1;
}

double sub_2542DB54C@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542DB56C(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542DB58C())()
{
  return nullsub_1;
}

uint64_t sub_2542DB5B4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
}

uint64_t sub_2542DB5C4(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542DB5D4())()
{
  return nullsub_1;
}

uint64_t sub_2542DB5FC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
}

uint64_t sub_2542DB60C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542DB61C())()
{
  return nullsub_1;
}

uint64_t sub_2542DB644()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
}

uint64_t sub_2542DB654(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542DB664())()
{
  return nullsub_1;
}

uint64_t sub_2542DB68C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a1);
}

uint64_t sub_2542DB6A0(uint64_t a1)
{
  return sub_2542E4460(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t (*sub_2542DB6B0())()
{
  return nullsub_1;
}

uint64_t sub_2542DB6D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DB6F8(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DB718())()
{
  return nullsub_1;
}

uint64_t sub_2542DB740()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542DB750(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542DB760())()
{
  return nullsub_1;
}

uint64_t sub_2542DB788()
{
  return swift_retain();
}

uint64_t sub_2542DB798(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2542DB7B0())()
{
  return nullsub_1;
}

void sub_2542DB7D8(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
}

unsigned char *sub_2542DB7EC(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = *result;
  return result;
}

uint64_t (*sub_2542DB800())()
{
  return nullsub_1;
}

unint64_t sub_2542DB828(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    case 11:
      unint64_t result = 0x74696C6172696863;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2542DB998(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    case 11:
      unint64_t result = 0x74696C6172696863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542DBB08(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DBB20(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2542DB828);
}

uint64_t sub_2542DBB20(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_25436D7B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_2542DBBB8(uint64_t a1, uint64_t a2)
{
  return sub_2542DBBD0(a1, a2, (void (*)(uint64_t))sub_2542DB828);
}

uint64_t sub_2542DBBD0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_25436D8F0();
  a3(v5);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542DBC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBC54(a1, a2, a3, (void (*)(void))sub_2542DB828);
}

uint64_t sub_2542DBC54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542DBCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBCC4(a1, a2, a3, (void (*)(uint64_t))sub_2542DB828);
}

uint64_t sub_2542DBCC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_25436D8F0();
  a4(v6);
  sub_25436CC90();
  swift_bridgeObjectRelease();
  return sub_25436D930();
}

uint64_t sub_2542DBD2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAFC8();
  *a1 = result;
  return result;
}

unint64_t sub_2542DBD5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542DB828(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542DBD88()
{
  return sub_2542DB998(*v0);
}

uint64_t sub_2542DBD90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EAFC8();
  *a1 = result;
  return result;
}

uint64_t sub_2542DBDB8(uint64_t a1)
{
  unint64_t v2 = sub_2542E46CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542DBDF4(uint64_t a1)
{
  unint64_t v2 = sub_2542E46CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKHandTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v27 = swift_allocObject();
  DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  return v27;
}

uint64_t DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v35 = *a3;
  uint64_t v22 = a3[1];
  char v40 = *a15;
  uint64_t v23 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion;
  uint64_t v24 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation;
  *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = 0;
  uint64_t v26 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality;
  *(unsigned char *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = 0;
  uint64_t v27 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  uint64_t v28 = sub_25436C7B0();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v27, a1, v28);
  uint64_t v30 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  uint64_t v31 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, a2, v31);
  uint64_t v32 = (double *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
  *uint64_t v32 = a9;
  v32[1] = a10;
  v32[2] = a11;
  v32[3] = a12;
  uint64_t v33 = (void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
  *uint64_t v33 = v35;
  v33[1] = v22;
  *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = a4;
  *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = a5;
  *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = a6;
  sub_2542E4460(a7, v23);
  v29(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, a8, v28);
  *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = a13;
  *(void *)(v15 + v25) = a14;
  swift_release();
  *(unsigned char *)(v15 + v26) = v40;
  return v15;
}

uint64_t DKHandTrackerState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKHandTrackerState.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2542DC394(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C800();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9058);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E46CC();
  sub_25436D950();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, v6);
  LOBYTE(v37) = 0;
  sub_2542E457C(&qword_269DD8110, 255, MEMORY[0x263F07490]);
  uint64_t v35 = v12;
  uint64_t v17 = v15;
  uint64_t v18 = v34;
  sub_25436D710();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  }
  else
  {
    uint64_t v28 = v16;
    uint64_t v34 = v13;
    uint64_t v20 = v11;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v20, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, v33);
    LOBYTE(v37) = 1;
    sub_2542E457C(&qword_269DD89A0, 255, MEMORY[0x263F07508]);
    sub_25436D710();
    uint64_t v27 = v21;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
    uint64_t v22 = v36;
    long long v23 = *(_OWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect + 16);
    long long v37 = *(_OWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
    long long v38 = v23;
    char v39 = 2;
    type metadata accessor for CGRect(0);
    sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity + 8);
    *(void *)&long long v37 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
    *((void *)&v37 + 1) = v24;
    char v39 = 3;
    sub_2542B6D08();
    sub_25436D710();
    LOBYTE(v37) = 4;
    sub_25436D700();
    LOBYTE(v37) = 5;
    sub_25436D700();
    LOBYTE(v37) = 6;
    sub_25436D700();
    sub_2542E43F8(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, v30);
    LOBYTE(v37) = 7;
    uint64_t v33 = type metadata accessor for DKMotion3();
    sub_2542E457C(&qword_269DD7C28, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D6D0();
    sub_2542E44C8(v30);
    v28(v29, v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v6);
    uint64_t v25 = v29;
    LOBYTE(v37) = 8;
    sub_25436D710();
    v27(v25, v6);
    LOBYTE(v37) = 9;
    sub_25436D700();
    *(void *)&long long v37 = *(void *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation);
    char v39 = 10;
    type metadata accessor for DKHandObservation(0);
    sub_2542E457C(&qword_269DD8160, 255, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
    sub_25436D6D0();
    LOBYTE(v37) = *(unsigned char *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
    char v39 = 11;
    sub_2542B701C();
    uint64_t v26 = v35;
    sub_25436D710();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v26);
  }
}

uint64_t DKHandTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542D85EC(a1, (void (*)(uint64_t))DKHandTrackerState.init(from:));
}

uint64_t DKHandTrackerState.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v3 - 8);
  char v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C800();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_25436C7B0();
  uint64_t v43 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v44 = (char *)&v34 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9068);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion;
  uint64_t v16 = type metadata accessor for DKMotion3();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v53 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v49 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation;
  long long v50 = a1;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = 0;
  uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality;
  uint64_t v52 = v1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E46CC();
  uint64_t v48 = v14;
  uint64_t v19 = v51;
  sub_25436D940();
  if (v19)
  {
    uint64_t v32 = v52;
    sub_2542E44C8(v53);
    uint64_t v21 = (uint64_t)v50;
    swift_release();
    type metadata accessor for DKHandTrackerState(0);
    swift_deallocPartialClassInstance();
    uint64_t v33 = v21;
  }
  else
  {
    uint64_t v51 = v16;
    uint64_t v38 = v18;
    char v39 = v9;
    LOBYTE(v54) = 0;
    uint64_t v20 = sub_2542E457C(&qword_269DD8220, 255, MEMORY[0x263F07490]);
    sub_25436D650();
    uint64_t v36 = v20;
    uint64_t v23 = v52;
    uint64_t v24 = *(void (**)(void))(v43 + 32);
    uint64_t v37 = v52 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
    v24();
    LOBYTE(v54) = 1;
    sub_2542E457C(&qword_269DD89C8, 255, MEMORY[0x263F07508]);
    uint64_t v25 = v42;
    sub_25436D650();
    uint64_t v35 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, v7, v25);
    type metadata accessor for CGRect(0);
    char v56 = 2;
    sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    uint64_t v44 = 0;
    sub_25436D650();
    uint64_t v26 = (_OWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
    long long v27 = v55;
    *uint64_t v26 = v54;
    v26[1] = v27;
    char v56 = 3;
    sub_2542B6D5C();
    sub_25436D650();
    uint64_t v28 = *((void *)&v54 + 1);
    uint64_t v29 = (void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
    *uint64_t v29 = v54;
    v29[1] = v28;
    LOBYTE(v54) = 4;
    *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = sub_25436D640();
    LOBYTE(v54) = 5;
    *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = sub_25436D640();
    LOBYTE(v54) = 6;
    *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = sub_25436D640();
    LOBYTE(v54) = 7;
    sub_2542E457C(&qword_269DD7C60, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    uint64_t v30 = (uint64_t)v40;
    sub_25436D610();
    sub_2542E4460(v30, v53);
    LOBYTE(v54) = 8;
    uint64_t v31 = v39;
    sub_25436D650();
    ((void (*)(uint64_t, char *, uint64_t))v35)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v31, v47);
    LOBYTE(v54) = 9;
    *(void *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = sub_25436D640();
    type metadata accessor for DKHandObservation(0);
    char v56 = 10;
    sub_2542E457C(&qword_269DD8258, 255, (void (*)(uint64_t))type metadata accessor for DKHandObservation);
    sub_25436D610();
    *(void *)(v52 + v49) = v54;
    swift_release();
    char v56 = 11;
    sub_2542B7070();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v46);
    uint64_t v32 = v52;
    *(unsigned char *)(v52 + v38) = v54;
    uint64_t v33 = (uint64_t)v50;
  }
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v32;
}

uint64_t sub_2542DD520@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542DD540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542DD560())()
{
  return nullsub_1;
}

double sub_2542DD58C(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
}

void sub_2542DD598(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542DD5A4())()
{
  return nullsub_1;
}

double sub_2542DD5D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542DD5F4(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542DD618())()
{
  return nullsub_1;
}

uint64_t sub_2542DD644()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
}

uint64_t sub_2542DD658(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542DD66C())()
{
  return nullsub_1;
}

uint64_t sub_2542DD698()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
}

uint64_t sub_2542DD6AC(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542DD6C0())()
{
  return nullsub_1;
}

uint64_t sub_2542DD6EC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
}

uint64_t sub_2542DD700(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542DD714())()
{
  return nullsub_1;
}

uint64_t sub_2542DD740@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a1);
}

uint64_t sub_2542DD758(uint64_t a1)
{
  return sub_2542E4460(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t (*sub_2542DD76C())()
{
  return nullsub_1;
}

uint64_t sub_2542DD798@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DD7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DD7D8())()
{
  return nullsub_1;
}

uint64_t sub_2542DD804()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542DD818(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542DD82C())()
{
  return nullsub_1;
}

uint64_t sub_2542DD858@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542D92BC(a1, (void (*)(void))type metadata accessor for DKHandTrackerState, (uint64_t (*)(uint64_t))DKHandTrackerState.init(from:), a2);
}

uint64_t sub_2542DD898(void *a1)
{
  return sub_2542DC394(a1);
}

uint64_t sub_2542DD8BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DD8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DD8FC())()
{
  return nullsub_1;
}

uint64_t sub_2542DD928@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKHandTrackerState(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542DD96C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542DD974(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKBodyKeyPointList.__allocating_init(keypoints:)(uint64_t a1)
{
  return DKBodyKeyPointList.init(keypoints:)(a1);
}

uint64_t DKBodyKeyPointList.init(keypoints:)(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = a1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    *(void *)&v14[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2542E2A18(0, v3, 0);
    uint64_t v4 = *(void *)&v14[0];
    unint64_t v6 = *(void *)(*(void *)&v14[0] + 16);
    uint64_t v7 = 32;
    do
    {
      long long v8 = *(_OWORD *)(a1 + v7);
      *(void *)&v14[0] = v4;
      unint64_t v9 = *(void *)(v4 + 24);
      if (v6 >= v9 >> 1)
      {
        long long v12 = v8;
        sub_2542E2A18(v9 > 1, v6 + 1, 1);
        long long v8 = v12;
        uint64_t v4 = *(void *)&v14[0];
      }
      *(void *)(v4 + 16) = v6 + 1;
      *(_OWORD *)(v4 + 16 * v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_2542570EC(v4, (uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_2542721C0((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DKBodyKeyPointList();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    long long v10 = v14[1];
    *(_OWORD *)(v2 + 24) = v14[0];
    *(_OWORD *)(v2 + 40) = v10;
  }
  return v2;
}

uint64_t sub_2542DDB0C(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  int v37 = *a2;
  int v6 = *a3;
  id v7 = objc_msgSend(a1, sel_keypoints);
  if (!v7)
  {

    goto LABEL_37;
  }
  long long v8 = v7;
  sub_2542EB258();
  unint64_t v9 = sub_25436CDD0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_4:
      *(void *)&v43[0] = MEMORY[0x263F8EE78];
      sub_2542E2A38(0, v10 & ~(v10 >> 63), 0);
      if (v10 < 0)
      {
        __break(1u);
        JUMPOUT(0x2542DDF40);
      }
      uint64_t v35 = v4;
      uint64_t v11 = 0;
      CGFloat v12 = v43[0];
      do
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v13 = (id)MEMORY[0x25A275A00](v11, v9);
        }
        else {
          id v13 = *(id *)(v9 + 8 * v11 + 32);
        }
        uint64_t v14 = v13;
        objc_msgSend(v13, sel_location);
        double v16 = v15;
        double v18 = 1.0 - v17;
        objc_msgSend(v14, sel_confidence);
        float v20 = v19;

        if (v37 == 1)
        {
          double v21 = v16;
          double v22 = v18;
          switch(v6)
          {
            case 1:
              break;
            case 2:
              double v22 = 1.0 - v18;
              double v21 = 1.0 - v16;
              break;
            case 3:
              double v21 = 1.0 - v18;
              double v22 = v16;
              break;
            case 4:
              double v22 = 1.0 - v16;
              double v21 = v18;
              break;
            case 7:
              double v21 = v18;
              double v22 = v16;
              break;
            default:
              goto LABEL_14;
          }
        }
        else
        {
          double v21 = v18;
          double v22 = v16;
          switch(v6)
          {
            case 1:
              double v22 = 1.0 - v18;
              double v21 = v16;
              break;
            case 2:
              double v21 = 1.0 - v16;
              double v22 = v18;
              break;
            case 3:
            case 7:
              break;
            case 4:
              double v22 = 1.0 - v16;
              double v21 = 1.0 - v18;
              break;
            default:
LABEL_14:
              double v21 = 0.0;
              double v22 = 0.0;
              break;
          }
        }
        v43[0] = v12;
        unint64_t v24 = *(void *)(*(void *)&v12 + 16);
        unint64_t v23 = *(void *)(*(void *)&v12 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_2542E2A38(v23 > 1, v24 + 1, 1);
          CGFloat v12 = v43[0];
        }
        ++v11;
        *(void *)(*(void *)&v12 + 16) = v24 + 1;
        uint64_t v25 = (double *)(*(void *)&v12 + 24 * v24);
        v25[4] = v22;
        v25[5] = v21;
        v25[6] = v20;
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
      uint64_t v4 = v35;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  CGFloat v12 = MEMORY[0x263F8EE78];
LABEL_27:
  *(CGFloat *)(v4 + 16) = v12;
  int64_t v26 = *(void *)(*(void *)&v12 + 16);
  CGFloat v27 = MEMORY[0x263F8EE78];
  if (v26)
  {
    char v28 = v6;
    *(void *)&v43[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_2542E2A18(0, v26, 0);
    CGFloat v27 = v43[0];
    unint64_t v29 = *(void *)(*(void *)&v43[0] + 16);
    uint64_t v30 = 32;
    do
    {
      long long v31 = *(_OWORD *)(*(void *)&v12 + v30);
      v43[0] = v27;
      unint64_t v32 = *(void *)(*(void *)&v27 + 24);
      if (v29 >= v32 >> 1)
      {
        long long v36 = v31;
        sub_2542E2A18(v32 > 1, v29 + 1, 1);
        long long v31 = v36;
        CGFloat v27 = v43[0];
      }
      *(void *)(*(void *)&v27 + 16) = v29 + 1;
      *(_OWORD *)(*(void *)&v27 + 16 * v29 + 32) = v31;
      v30 += 24;
      ++v29;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    LOBYTE(v6) = v28;
  }
  sub_2542570EC(*(uint64_t *)&v27, (uint64_t)v39);
  swift_bridgeObjectRelease();
  sub_2542721C0((uint64_t)v39, (uint64_t)v43);
  if (v44)
  {
  }
  else
  {
    LOBYTE(v41[0]) = v6;
    unsigned __int8 v38 = v37;
    sub_25425DBE0(v41, &v38, (uint64_t)v40, v43[0], v43[1], v43[2], v43[3]);

    sub_2542721C0((uint64_t)v40, (uint64_t)v41);
    if ((v42 & 1) == 0)
    {
      long long v34 = v41[1];
      *(_OWORD *)(v4 + 24) = v41[0];
      *(_OWORD *)(v4 + 40) = v34;
      return v4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_37:
  type metadata accessor for DKBodyKeyPointList();
  swift_deallocPartialClassInstance();
  return 0;
}

IntelligentTrackingCore::DKBodyKeyPoint __swiftcall DKBodyKeyPoint.init(location:confidence:port:orientation:)(CGPoint location, Swift::Double confidence, IntelligentTrackingCore::DKCameraPort port, IntelligentTrackingCore::DKCameraOrientation orientation)
{
  int v6 = v4;
  char v7 = *(unsigned char *)port;
  char v15 = *(unsigned char *)orientation;
  char v14 = v7;
  sub_25425E140(&v15, &v14, location.x);
  double v9 = v8;
  double v11 = v10;
  double v13 = 0.0;
  if (v12)
  {
    double v11 = 0.0;
    double v9 = 0.0;
  }
  *int v6 = v9;
  v6[1] = v11;
  _OWORD v6[2] = confidence;
  result.confidence = v13;
  result.location.y = v11;
  result.location.x = v9;
  return result;
}

uint64_t sub_2542DDFE8()
{
  if (*v0) {
    return 1952671090;
  }
  else {
    return 0x746E696F7079656BLL;
  }
}

uint64_t sub_2542DE020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542EB014(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542DE048(uint64_t a1)
{
  unint64_t v2 = sub_2542E50CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542DE084(uint64_t a1)
{
  unint64_t v2 = sub_2542E50CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKBodyKeyPointList.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKBodyKeyPointList.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2542DE118(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9070);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E50CC();
  sub_25436D950();
  *(void *)&v11[0] = *(void *)(v3 + 16);
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9080);
  sub_2542E5174(&qword_269DD9088, (void (*)(void))sub_2542E5120);
  sub_25436D710();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 40);
    v11[0] = *(_OWORD *)(v3 + 24);
    v11[1] = v9;
    char v12 = 1;
    type metadata accessor for CGRect(0);
    sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKBodyKeyPointList.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  DKBodyKeyPointList.init(from:)(a1);
  return v2;
}

uint64_t DKBodyKeyPointList.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9098);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E50CC();
  sub_25436D940();
  if (v2)
  {
    type metadata accessor for DKBodyKeyPointList();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9080);
    char v11 = 0;
    sub_2542E5174(&qword_269DD90A0, (void (*)(void))sub_2542E51E4);
    sub_25436D650();
    *(void *)(v1 + 16) = *(void *)&v10[0];
    type metadata accessor for CGRect(0);
    char v11 = 1;
    sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v9 = v10[1];
    *(_OWORD *)(v1 + 24) = v10[0];
    *(_OWORD *)(v1 + 40) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_2542DE604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for DKBodyKeyPointList();
  uint64_t v5 = swift_allocObject();
  uint64_t result = DKBodyKeyPointList.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_2542DE65C(void *a1)
{
  return sub_2542DE118(a1);
}

double DKBodyKeyPoint.location.getter()
{
  return *(double *)v0;
}

void DKBodyKeyPoint.location.setter(double a1, double a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
}

uint64_t (*DKBodyKeyPoint.location.modify())()
{
  return nullsub_1;
}

double DKBodyKeyPoint.confidence.getter()
{
  return *(double *)(v0 + 16);
}

void DKBodyKeyPoint.confidence.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*DKBodyKeyPoint.confidence.modify())()
{
  return nullsub_1;
}

uint64_t sub_2542DE6E0()
{
  if (*v0) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_2542DE720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2542EB104(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542DE748(uint64_t a1)
{
  unint64_t v2 = sub_2542E5238();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542DE784(uint64_t a1)
{
  unint64_t v2 = sub_2542E5238();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKBodyKeyPoint.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD90B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E5238();
  sub_25436D950();
  v11[0] = v8;
  v11[1] = v9;
  char v12 = 0;
  type metadata accessor for CGPoint(0);
  sub_2542E457C(&qword_269DD7C20, 255, type metadata accessor for CGPoint);
  sub_25436D710();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_25436D6F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DKBodyKeyPoint.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD90C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E5238();
  sub_25436D940();
  if (!v2)
  {
    type metadata accessor for CGPoint(0);
    v14[15] = 0;
    sub_2542E457C(&qword_269DD7C58, 255, type metadata accessor for CGPoint);
    sub_25436D650();
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    LOBYTE(v15) = 1;
    sub_25436D630();
    uint64_t v12 = v11;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2542DEB8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DKBodyKeyPoint.init(from:)(a1, a2);
}

uint64_t sub_2542DEBA4(void *a1)
{
  return DKBodyKeyPoint.encode(to:)(a1);
}

uint64_t sub_2542DEBBC@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DEBDC(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542DEBFC())()
{
  return nullsub_1;
}

uint64_t sub_2542DEC24@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542DEC44(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542DEC64())()
{
  return nullsub_1;
}

double sub_2542DEC8C()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
}

void *sub_2542DEC98(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2542DECA4())()
{
  return nullsub_1;
}

double sub_2542DECCC@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542DECEC(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542DED0C())()
{
  return nullsub_1;
}

uint64_t sub_2542DED34()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
}

uint64_t sub_2542DED44(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542DED54())()
{
  return nullsub_1;
}

uint64_t sub_2542DED7C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
}

uint64_t sub_2542DED8C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542DED9C())()
{
  return nullsub_1;
}

uint64_t sub_2542DEDC4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
}

uint64_t sub_2542DEDD4(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542DEDE4())()
{
  return nullsub_1;
}

uint64_t sub_2542DEE0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542E43F8(a1, (uint64_t)v10);
  return sub_2542E4460((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_2542DEEA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a1);
}

uint64_t sub_2542DEEBC(uint64_t a1)
{
  return sub_2542E4460(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t (*sub_2542DEECC())()
{
  return nullsub_1;
}

uint64_t sub_2542DEEF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void *a6)
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  return (*(uint64_t (**)(void, char *, uint64_t))(v10 + 40))(*a2 + *a6, v12, v9);
}

uint64_t sub_2542DEFEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2542DF00C(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542DF00C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2542DF080(uint64_t a1)
{
  return sub_2542DF0A0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t sub_2542DF0A0(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3 + *a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  return v7(v5, a1, v6);
}

uint64_t (*sub_2542DF114())()
{
  return nullsub_1;
}

uint64_t sub_2542DF13C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542DF14C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542DF15C())()
{
  return nullsub_1;
}

uint64_t sub_2542DF184()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw);
}

uint64_t sub_2542DF19C(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542DF1B8())()
{
  return nullsub_1;
}

uint64_t sub_2542DF1E0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch);
}

uint64_t sub_2542DF1F8(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542DF214())()
{
  return nullsub_1;
}

uint64_t sub_2542DF23C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll);
}

uint64_t sub_2542DF254(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2542DF270())()
{
  return nullsub_1;
}

uint64_t sub_2542DF298()
{
  return swift_retain();
}

uint64_t sub_2542DF2A8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF2C0())()
{
  return nullsub_1;
}

uint64_t sub_2542DF2E8()
{
  return swift_retain();
}

uint64_t sub_2542DF2F8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF310())()
{
  return nullsub_1;
}

uint64_t sub_2542DF338()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542DF348(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2542DF360())()
{
  return nullsub_1;
}

uint64_t sub_2542DF388@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  uint64_t v3 = v2[1];
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  *a2 = *v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2542DF3E4(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = (void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  *uint64_t v5 = *a1;
  v5[1] = v2;
  v5[2] = v3;
  v5[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_2542DF474@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 24);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2542DF4CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation;
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t (*sub_2542DF530())()
{
  return nullsub_1;
}

uint64_t sub_2542DF558(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542E528C(a1, (uint64_t)v6);
  return sub_2542E52F0((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
}

uint64_t sub_2542DF5F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E528C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, a1);
}

uint64_t sub_2542DF604(uint64_t a1)
{
  return sub_2542E52F0(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
}

uint64_t (*sub_2542DF614())()
{
  return nullsub_1;
}

double sub_2542DF63C()
{
  return sub_2542B4228(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
}

void *sub_2542DF648(double a1, double a2, double a3, double a4)
{
  return sub_2542B4248(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect, a1, a2, a3, a4);
}

uint64_t (*sub_2542DF654())()
{
  return nullsub_1;
}

uint64_t sub_2542DF67C()
{
  return swift_retain();
}

uint64_t sub_2542DF68C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF6A4())()
{
  return nullsub_1;
}

uint64_t sub_2542DF6CC()
{
  return swift_retain();
}

uint64_t sub_2542DF6DC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF6F4())()
{
  return nullsub_1;
}

uint64_t sub_2542DF71C()
{
  return swift_retain();
}

uint64_t sub_2542DF72C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF744())()
{
  return nullsub_1;
}

uint64_t sub_2542DF76C()
{
  return swift_retain();
}

uint64_t sub_2542DF77C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF794())()
{
  return nullsub_1;
}

uint64_t sub_2542DF7BC()
{
  return swift_retain();
}

uint64_t sub_2542DF7CC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF7E4())()
{
  return nullsub_1;
}

uint64_t sub_2542DF80C()
{
  return swift_retain();
}

uint64_t sub_2542DF81C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2542DF834())()
{
  return nullsub_1;
}

void sub_2542DF85C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
}

unsigned char *sub_2542DF870(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = *result;
  return result;
}

uint64_t (*sub_2542DF884())()
{
  return nullsub_1;
}

void sub_2542DF8AC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
}

unsigned char *sub_2542DF8C0(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = *result;
  return result;
}

uint64_t (*sub_2542DF8D4())()
{
  return nullsub_1;
}

void sub_2542DF8FC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
}

unsigned char *sub_2542DF910(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = *result;
  return result;
}

uint64_t (*sub_2542DF924())()
{
  return nullsub_1;
}

unint64_t sub_2542DF94C(char a1)
{
  unint64_t result = 1701669236;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
      unint64_t result = 1952671090;
      break;
    case 3:
      unint64_t result = 0x797469746E656469;
      break;
    case 4:
      unint64_t result = 0x644974736E61;
      break;
    case 5:
      unint64_t result = 0x4972656B63617274;
      break;
    case 6:
      unint64_t result = 0x644970756F7267;
      break;
    case 7:
      unint64_t result = 0x6E6F69746F6DLL;
      break;
    case 8:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x77615965636166;
      break;
    case 11:
      unint64_t result = 0x6374695065636166;
      break;
    case 12:
      unint64_t result = 0x6C6C6F5265636166;
      break;
    case 13:
      unint64_t result = 0x6573624F7473616CLL;
      break;
    case 14:
      unint64_t result = 0x70756F7267;
      break;
    case 15:
      unint64_t result = 0x7463655279646F62;
      break;
    case 16:
      unint64_t result = 0x7079654B79646F62;
      break;
    case 17:
    case 20:
      unint64_t result = 0xD000000000000012;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0x666E6F436B6E6172;
      break;
    case 21:
      unint64_t result = 0xD000000000000013;
      break;
    case 22:
      unint64_t result = 1701869940;
      break;
    case 23:
      unint64_t result = 0xD000000000000014;
      break;
    case 24:
      unint64_t result = 0x6572694465636166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542DFC34(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DBB20(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2542DF94C);
}

uint64_t sub_2542DFC4C(uint64_t a1, uint64_t a2)
{
  return sub_2542DBBD0(a1, a2, (void (*)(uint64_t))sub_2542DF94C);
}

uint64_t sub_2542DFC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBC54(a1, a2, a3, (void (*)(void))sub_2542DF94C);
}

uint64_t sub_2542DFC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542DBCC4(a1, a2, a3, (void (*)(uint64_t))sub_2542DF94C);
}

uint64_t sub_2542DFC94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EB204();
  *a1 = result;
  return result;
}

unint64_t sub_2542DFCC4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2542DF94C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2542DFCF0()
{
  return sub_2542DF94C(*v0);
}

uint64_t sub_2542DFCF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2542EB204();
  *a1 = result;
  return result;
}

void sub_2542DFD20(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_2542DFD2C(uint64_t a1)
{
  unint64_t v2 = sub_2542E53B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542DFD68(uint64_t a1)
{
  unint64_t v2 = sub_2542E53B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2542DFDA4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,long long *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char *a35,char *a36,char *a37)
{
  uint64_t v66 = *a3;
  uint64_t v45 = a3[1];
  long long v78 = *a27;
  uint64_t v76 = *((void *)a27 + 3);
  uint64_t v77 = *((void *)a27 + 2);
  char v81 = *a36;
  char v82 = *a35;
  char v80 = *a37;
  uint64_t v46 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  uint64_t v63 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  uint64_t v47 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
  uint64_t v48 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(void *)uint64_t v48 = 0;
  *(unsigned char *)(v48 + 8) = 1;
  uint64_t v49 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(void *)uint64_t v49 = 0;
  *(unsigned char *)(v49 + 8) = 1;
  uint64_t v50 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(void *)uint64_t v50 = 0;
  *(unsigned char *)(v50 + 8) = 1;
  uint64_t v51 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = 0;
  uint64_t v52 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = 0;
  uint64_t v65 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = MEMORY[0x263F8EE78];
  uint64_t v68 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = 0;
  uint64_t v71 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type;
  *(unsigned char *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = 0;
  uint64_t v70 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification;
  *(unsigned char *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = 2;
  uint64_t v69 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
  *(unsigned char *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = 3;
  uint64_t v53 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time;
  uint64_t v54 = sub_25436C7B0();
  long long v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32);
  v55(v53, a1, v54);
  uint64_t v56 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
  uint64_t v57 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v56, a2, v57);
  uint64_t v58 = (double *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
  *uint64_t v58 = a9;
  v58[1] = a10;
  v58[2] = a11;
  v58[3] = a12;
  uint64_t v59 = (void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
  *uint64_t v59 = v66;
  v59[1] = v45;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = a4;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = a5;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = a6;
  sub_2542E4460(a7, v63);
  v55(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, a8, v54);
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = a17;
  *(void *)uint64_t v48 = a18;
  *(unsigned char *)(v48 + 8) = a19 & 1;
  *(void *)uint64_t v49 = a20;
  *(unsigned char *)(v49 + 8) = a21 & 1;
  *(void *)uint64_t v50 = a22;
  *(unsigned char *)(v50 + 8) = a23 & 1;
  *(void *)(v37 + v51) = a24;
  swift_release();
  *(void *)(v37 + v52) = a25;
  swift_release();
  *(void *)(v37 + v65) = a26;
  swift_bridgeObjectRelease();
  uint64_t v60 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation;
  *(_OWORD *)uint64_t v60 = v78;
  *(void *)(v60 + 16) = v77;
  *(void *)(v60 + 24) = v76;
  sub_2542E5520(a28, v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
  v61 = (double *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
  double *v61 = a13;
  v61[1] = a14;
  v61[2] = a15;
  v61[3] = a16;
  *(void *)(v37 + v68) = a29;
  swift_release();
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = a30;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = a31;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = a32;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = a33;
  *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = a34;
  *(unsigned char *)(v37 + v71) = v82;
  *(unsigned char *)(v37 + v70) = v81;
  *(unsigned char *)(v37 + v69) = v80;
  return v37;
}

uint64_t DKPersonTrackerState.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_2542E44C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_2542E5354(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKPersonTrackerState.__deallocating_deinit()
{
  DKPersonTrackerState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2542E0480(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v46 = (uint64_t)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_25436C800();
  uint64_t v50 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)v42 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD90C8);
  uint64_t v53 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542E53B0();
  sub_25436D950();
  uint64_t v48 = v2;
  uint64_t v52 = v9;
  float v19 = *(void (**)(void, void, void))(v9 + 16);
  uint64_t v18 = v9 + 16;
  double v17 = v19;
  v19(v13, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v8);
  LOBYTE(v56) = 0;
  uint64_t v20 = sub_2542E457C(&qword_269DD8110, 255, MEMORY[0x263F07490]);
  uint64_t v54 = v14;
  long long v55 = v16;
  double v21 = v51;
  sub_25436D710();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v54);
  }
  else
  {
    v42[1] = v18;
    v42[2] = v20;
    uint64_t v51 = v17;
    unint64_t v23 = *(void (**)(char *, uint64_t))(v52 + 8);
    v23(v13, v8);
    uint64_t v24 = v48;
    uint64_t v25 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v47);
    LOBYTE(v56) = 1;
    sub_2542E457C(&qword_269DD89A0, 255, MEMORY[0x263F07508]);
    sub_25436D710();
    uint64_t v26 = v8;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v25);
    long long v27 = *(_OWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
    long long v56 = *(_OWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    long long v57 = v27;
    char v58 = 2;
    type metadata accessor for CGRect(0);
    uint64_t v29 = v28;
    uint64_t v30 = sub_2542E457C(&qword_269DD81D8, 255, type metadata accessor for CGRect);
    sub_25436D710();
    uint64_t v50 = v30;
    uint64_t v52 = v29;
    uint64_t v31 = *(void *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity + 8);
    *(void *)&long long v56 = *(void *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
    *((void *)&v56 + 1) = v31;
    char v58 = 3;
    sub_2542B6D08();
    sub_25436D710();
    LOBYTE(v56) = 4;
    sub_25436D700();
    LOBYTE(v56) = 5;
    sub_25436D700();
    LOBYTE(v56) = 6;
    sub_25436D700();
    uint64_t v32 = v46;
    sub_2542E43F8(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, v46);
    LOBYTE(v56) = 7;
    type metadata accessor for DKMotion3();
    sub_2542E457C(&qword_269DD7C28, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
    sub_25436D6D0();
    uint64_t v33 = v32;
    long long v34 = v23;
    sub_2542E44C8(v33);
    uint64_t v35 = v45;
    v51(v45, v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v26);
    LOBYTE(v56) = 8;
    sub_25436D710();
    v34(v35, v26);
    LOBYTE(v56) = 9;
    sub_25436D700();
    LOBYTE(v56) = 10;
    sub_25436D6B0();
    LOBYTE(v56) = 11;
    sub_25436D6B0();
    LOBYTE(v56) = 12;
    sub_25436D6B0();
    uint64_t v36 = *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 16);
    uint64_t v37 = *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 24);
    long long v56 = *(_OWORD *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
    *(void *)&long long v57 = v36;
    *((void *)&v57 + 1) = v37;
    char v58 = 13;
    sub_2542864BC();
    sub_25436D710();
    sub_2542E528C(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, v44);
    LOBYTE(v56) = 14;
    sub_2542E457C(&qword_269DD90D8, 255, (void (*)(uint64_t))type metadata accessor for DKPersonGroup);
    sub_25436D710();
    sub_2542E5354(v44);
    long long v38 = *(_OWORD *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect + 16);
    long long v56 = *(_OWORD *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
    long long v57 = v38;
    char v58 = 15;
    sub_25436D710();
    *(void *)&long long v56 = *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints);
    char v58 = 16;
    type metadata accessor for DKBodyKeyPointList();
    sub_2542E457C(&qword_269DD8648, v39, (void (*)(uint64_t))type metadata accessor for DKBodyKeyPointList);
    sub_25436D6D0();
    *(void *)&long long v56 = *(void *)(v48
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
    char v58 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F80);
    sub_2542E5584(&qword_269DD90E0, &qword_269DD7F80);
    sub_25436D710();
    *(void *)&long long v56 = *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
    char v58 = 18;
    sub_25436D710();
    *(void *)&long long v56 = *(void *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
    char v58 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
    sub_2542E5584(&qword_269DD90E8, &qword_269DD8010);
    sub_25436D710();
    *(void *)&long long v56 = *(void *)(v48
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
    char v58 = 20;
    sub_25436D710();
    *(void *)&long long v56 = *(void *)(v48
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
    char v58 = 21;
    sub_25436D710();
    LOBYTE(v56) = *(unsigned char *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
    char v58 = 22;
    sub_2542E5404();
    sub_25436D710();
    LOBYTE(v56) = *(unsigned char *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
    char v58 = 23;
    sub_2542E5458();
    sub_25436D710();
    LOBYTE(v56) = *(unsigned char *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
    char v58 = 24;
    sub_2542E54AC();
    uint64_t v40 = v54;
    uint64_t v41 = v55;
    sub_25436D710();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v41, v40);
  }
}

uint64_t DKPersonTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_2542D85EC(a1, (void (*)(uint64_t))DKPersonTrackerState.init(from:));
}

uint64_t DKPersonTrackerState.init(from:)(void *a1)
{
  uint64_t v89 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x270FA5388](v89);
  uint64_t v90 = (uint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v4 - 8);
  v94 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_25436C800();
  uint64_t v95 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  v96 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_25436C7B0();
  uint64_t v98 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v99 = (char *)&v82 - v9;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9108);
  uint64_t v100 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  uint64_t v13 = type metadata accessor for DKMotion3();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v111 = v12;
  uint64_t v93 = v13;
  v14(v12, 1, 1);
  uint64_t v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(void *)uint64_t v15 = 0;
  v91 = (uint64_t *)v15;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v105 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = 0;
  uint64_t v106 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = 0;
  uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = MEMORY[0x263F8EE78];
  uint64_t v107 = v18;
  uint64_t v108 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints;
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = 0;
  uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = 0;
  uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = 2;
  uint64_t v21 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = 3;
  double v22 = a1;
  uint64_t v23 = a1[3];
  v109 = v22;
  uint64_t v110 = v1;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  sub_2542E53B0();
  v102 = v11;
  uint64_t v24 = v104;
  sub_25436D940();
  if (v24)
  {
    uint64_t v28 = v110;
    sub_2542E44C8(v111);
    int v29 = 0;
    int v30 = 0;
    int v31 = 0;
    int v32 = 0;
    int v33 = 0;
    int v34 = 0;
    goto LABEL_4;
  }
  v104 = (uint64_t *)v16;
  v88 = (uint64_t *)v17;
  uint64_t v85 = v19;
  uint64_t v86 = v20;
  uint64_t v87 = v21;
  LOBYTE(v112) = 0;
  uint64_t v25 = sub_2542E457C(&qword_269DD8220, 255, MEMORY[0x263F07490]);
  uint64_t v26 = v99;
  uint64_t v27 = v101;
  sub_25436D650();
  uint64_t v38 = v110;
  uint64_t v39 = v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time;
  uint64_t v40 = v27;
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v98 + 32);
  v41(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v26, v40);
  LOBYTE(v112) = 1;
  sub_2542E457C(&qword_269DD89C8, 255, MEMORY[0x263F07508]);
  uint64_t v43 = v96;
  uint64_t v42 = v97;
  sub_25436D650();
  uint64_t v84 = 0;
  v83 = v41;
  v99 = (char *)v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v43, v42);
  type metadata accessor for CGRect(0);
  char v114 = 2;
  uint64_t v44 = sub_2542E457C(&qword_269DD82B0, 255, type metadata accessor for CGRect);
  sub_25436D650();
  v96 = (char *)v44;
  uint64_t v45 = (_OWORD *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
  long long v46 = v113;
  *uint64_t v45 = v112;
  v45[1] = v46;
  char v114 = 3;
  sub_2542B6D5C();
  sub_25436D650();
  uint64_t v47 = *((void *)&v112 + 1);
  uint64_t v48 = (void *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
  *uint64_t v48 = v112;
  v48[1] = v47;
  LOBYTE(v112) = 4;
  *(void *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = sub_25436D640();
  LOBYTE(v112) = 5;
  *(void *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = sub_25436D640();
  LOBYTE(v112) = 6;
  *(void *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = sub_25436D640();
  LOBYTE(v112) = 7;
  sub_2542E457C(&qword_269DD7C60, 255, (void (*)(uint64_t))type metadata accessor for DKMotion3);
  uint64_t v50 = v94;
  sub_25436D610();
  uint64_t v51 = (uint64_t)v50;
  uint64_t v52 = v39;
  sub_2542E4460(v51, v111);
  LOBYTE(v112) = 8;
  uint64_t v53 = v92;
  sub_25436D650();
  v83(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v53, v101);
  LOBYTE(v112) = 9;
  uint64_t v54 = sub_25436D640();
  v99 = 0;
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = v54;
  LOBYTE(v112) = 10;
  long long v55 = v99;
  uint64_t v56 = sub_25436D5F0();
  v99 = v55;
  if (v55) {
    goto LABEL_30;
  }
  char v58 = v91;
  uint64_t *v91 = v56;
  *((unsigned char *)v58 + 8) = v57 & 1;
  LOBYTE(v112) = 11;
  uint64_t v59 = v99;
  uint64_t v60 = sub_25436D5F0();
  v99 = v59;
  if (v59) {
    goto LABEL_30;
  }
  uint64_t v62 = v104;
  uint64_t *v104 = v60;
  *((unsigned char *)v62 + 8) = v61 & 1;
  LOBYTE(v112) = 12;
  uint64_t v63 = v99;
  uint64_t v64 = sub_25436D5F0();
  v99 = v63;
  if (v63) {
    goto LABEL_30;
  }
  uint64_t v66 = v88;
  uint64_t *v88 = v64;
  *((unsigned char *)v66 + 8) = v65 & 1;
  char v114 = 13;
  sub_254286C14();
  v67 = v99;
  sub_25436D650();
  v99 = v67;
  if (v67)
  {
LABEL_30:
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v34 = 0;
    int v33 = 0;
    int v32 = 0;
    int v31 = 0;
    int v30 = 0;
    int v29 = 0;
    LODWORD(v104) = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  long long v68 = v113;
  uint64_t v69 = (_OWORD *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  *uint64_t v69 = v112;
  v69[1] = v68;
  LOBYTE(v112) = 14;
  sub_2542E457C(&qword_269DD9110, 255, (void (*)(uint64_t))type metadata accessor for DKPersonGroup);
  uint64_t v70 = v99;
  sub_25436D650();
  v99 = v70;
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v33 = 0;
    int v32 = 0;
    int v31 = 0;
    int v30 = 0;
    int v29 = 0;
    LODWORD(v104) = 1;
    int v34 = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  sub_2542E5520(v90, v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
  char v114 = 15;
  uint64_t v71 = v99;
  sub_25436D650();
  v99 = v71;
  if (v71) {
    goto LABEL_36;
  }
  long long v72 = (_OWORD *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
  long long v73 = v113;
  *long long v72 = v112;
  v72[1] = v73;
  type metadata accessor for DKBodyKeyPointList();
  char v114 = 16;
  sub_2542E457C(&qword_269DD8658, v74, (void (*)(uint64_t))type metadata accessor for DKBodyKeyPointList);
  v75 = v99;
  sub_25436D610();
  v99 = v75;
  if (v75) {
    goto LABEL_36;
  }
  *(void *)(v110 + v108) = v112;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F80);
  char v114 = 17;
  sub_2542E5584(&qword_269DD9118, &qword_269DD7F80);
  uint64_t v76 = v99;
  sub_25436D650();
  v99 = v76;
  if (v76)
  {
LABEL_36:
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v32 = 0;
    int v31 = 0;
    int v30 = 0;
    int v29 = 0;
    LODWORD(v104) = 1;
    int v34 = 1;
    int v33 = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = v112;
  char v114 = 18;
  uint64_t v77 = v99;
  sub_25436D650();
  v99 = v77;
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v31 = 0;
    int v30 = 0;
    int v29 = 0;
    LODWORD(v104) = 1;
    int v34 = 1;
    int v33 = 1;
    int v32 = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = v112;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
  char v114 = 19;
  sub_2542E5584(&qword_269DD9120, &qword_269DD8010);
  long long v78 = v99;
  sub_25436D650();
  v99 = v78;
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v30 = 0;
    int v29 = 0;
    LODWORD(v104) = 1;
    int v34 = 1;
    int v33 = 1;
    int v32 = 1;
    int v31 = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = v112;
  char v114 = 20;
  v79 = v99;
  sub_25436D650();
  v99 = v79;
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    int v29 = 0;
    LODWORD(v104) = 1;
    int v34 = 1;
    int v33 = 1;
    int v32 = 1;
    int v31 = 1;
    int v30 = 1;
    uint64_t v28 = v110;
    goto LABEL_20;
  }
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = v112;
  char v114 = 21;
  char v80 = v99;
  sub_25436D650();
  v99 = v80;
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    LODWORD(v104) = 1;
    int v34 = 1;
    int v33 = 1;
    int v32 = 1;
    int v31 = 1;
    int v30 = 1;
    int v29 = 1;
    uint64_t v28 = v110;
LABEL_20:
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v49(v52, v101);
    if (v84)
    {
      sub_2542E44C8(v111);
      if (!v104) {
        goto LABEL_4;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v97);
      sub_2542E44C8(v111);
      if ((v104 & 1) == 0)
      {
LABEL_4:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        if (v34)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
        }
        if (v33) {
          sub_2542E5354(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
        }
        swift_release();
        uint64_t v35 = (uint64_t)v109;
        if (v32)
        {
          swift_release();
          if (!v31)
          {
LABEL_10:
            if (!v30) {
              goto LABEL_11;
            }
            goto LABEL_18;
          }
        }
        else if (!v31)
        {
          goto LABEL_10;
        }
        swift_release();
        if (!v30)
        {
LABEL_11:
          if (!v29)
          {
LABEL_13:
            type metadata accessor for DKPersonTrackerState(0);
            swift_deallocPartialClassInstance();
            goto LABEL_14;
          }
LABEL_12:
          swift_release();
          goto LABEL_13;
        }
LABEL_18:
        swift_release();
        if (!v29) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    v49(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v101);
    goto LABEL_4;
  }
  *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = v112;
  char v114 = 22;
  sub_2542E55C8();
  char v81 = v99;
  sub_25436D650();
  if (!v81)
  {
    *(unsigned char *)(v110 + v85) = v112;
    char v114 = 23;
    sub_2542E561C();
    sub_25436D650();
    *(unsigned char *)(v110 + v86) = v112;
    char v114 = 24;
    sub_2542E5670();
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
    uint64_t v36 = (uint64_t)v109;
    uint64_t v28 = v110;
    *(unsigned char *)(v110 + v87) = v112;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v103);
  uint64_t v28 = v110;
  swift_release();
  uint64_t v35 = (uint64_t)v109;
LABEL_14:
  uint64_t v36 = v35;
LABEL_15:
  __swift_destroy_boxed_opaque_existential_1(v36);
  return v28;
}

uint64_t sub_2542E229C@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542E22BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, MEMORY[0x263F07490]);
}

uint64_t (*sub_2542E22DC())()
{
  return nullsub_1;
}

uint64_t sub_2542E2308@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_2542E2328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, MEMORY[0x263F07508]);
}

uint64_t (*sub_2542E2348())()
{
  return nullsub_1;
}

double sub_2542E2374(uint64_t a1, uint64_t a2)
{
  return sub_2542B5AE0(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
}

void sub_2542E2380(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
}

uint64_t (*sub_2542E238C())()
{
  return nullsub_1;
}

double sub_2542E23B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2542E23DC(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2542E2400())()
{
  return nullsub_1;
}

uint64_t sub_2542E242C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
}

uint64_t sub_2542E2440(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2542E2454())()
{
  return nullsub_1;
}

uint64_t sub_2542E2480()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
}

uint64_t sub_2542E2494(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2542E24A8())()
{
  return nullsub_1;
}

uint64_t sub_2542E24D4()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
}

uint64_t sub_2542E24E8(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2542E24FC())()
{
  return nullsub_1;
}

uint64_t sub_2542E2528@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E43F8(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a1);
}

uint64_t sub_2542E2540(uint64_t a1)
{
  return sub_2542E4460(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t (*sub_2542E2554())()
{
  return nullsub_1;
}

uint64_t sub_2542E2580@<X0>(uint64_t a1@<X8>)
{
  return sub_2542E25A0(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, MEMORY[0x263F07490], a1);
}

uint64_t sub_2542E25A0@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2542E2618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2542E2638(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, MEMORY[0x263F07490]);
}

uint64_t sub_2542E2638(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  uint64_t v7 = *v5 + *a4;
  uint64_t v8 = a5(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40);
  return v9(v7, a1, v8);
}

uint64_t (*sub_2542E26B0())()
{
  return nullsub_1;
}

uint64_t sub_2542E26DC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2542E26F0(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2542E2704())()
{
  return nullsub_1;
}

uint64_t sub_2542E2730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2542D92BC(a1, (void (*)(void))type metadata accessor for DKPersonTrackerState, (uint64_t (*)(uint64_t))DKPersonTrackerState.init(from:), a2);
}

uint64_t sub_2542E2770(void *a1)
{
  return sub_2542E0480(a1);
}

uint64_t sub_2542E2794@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DKPersonTrackerState(0);
  uint64_t result = sub_25436D2B0();
  *a1 = result;
  return result;
}

uint64_t sub_2542E27D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E2B5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E27F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E41DC(a1, a2, a3, *v3, &qword_269DD7B10);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2820(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E2E40(a1, a2, a3, (void *)*v3, &qword_269DD7B70, &qword_269DD7B78);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2850(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3B08(a1, a2, a3, (void *)*v3, &qword_269DD9318, &qword_269DD8068);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2880(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3B08(a1, a2, a3, (void *)*v3, &qword_269DD9310, &qword_269DD8060);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E28B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3B08(a1, a2, a3, (void *)*v3, &qword_269DD9308, &qword_269DD8058);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E28E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E38C8(a1, a2, a3, (void *)*v3, &qword_269DD92F8, &qword_269DD8038);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2910(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3F94(a1, a2, a3, (void *)*v3, &qword_269DD7B30, type metadata accessor for DKPersonGroupFilter.Track);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E294C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3F94(a1, a2, a3, (void *)*v3, &qword_269DD7AF8, MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E2E40(a1, a2, a3, (void *)*v3, &qword_269DD7BA0, &qword_269DD7BA8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E29B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3178(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E29D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E32D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E29F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3460(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2A18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E35EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2A38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E374C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2A58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E38C8(a1, a2, a3, (void *)*v3, &qword_269DD92A0, &qword_269DD92A8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2A88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3B08(a1, a2, a3, (void *)*v3, &qword_269DD92B0, &qword_269DD8030);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2AB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3CB4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2AD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3F94(a1, a2, a3, (void *)*v3, &qword_269DD7BB0, MEMORY[0x263F07490]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2542E2B14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E3E14(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2B34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2542E41DC(a1, a2, a3, *v3, &qword_269DD9298);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2542E2B5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E2CBC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2542E41DC(a1, a2, a3, a4, &qword_269DD7B10);
}

uint64_t sub_2542E2CC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A58);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E2E34(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2542E3000(a1, a2, a3, a4, &qword_269DD7B28);
}

uint64_t sub_2542E2E40(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E2FE8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2542E3000(a1, a2, a3, a4, &qword_269DD7A60);
}

uint64_t sub_2542E2FF4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2542E3000(a1, a2, a3, a4, &qword_269DD7A68);
}

uint64_t sub_2542E3000(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9]) {
      memmove(v13, v14, 24 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v9] || v13 >= &v14[24 * v9])
  {
    memcpy(v13, v14, 24 * v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3178(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E32D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3460(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92D8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E35EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9300);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E374C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E38C8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  double v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3B08(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3CB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3E14(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B18);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E3F74(char a1, int64_t a2, char a3, void *a4)
{
  return sub_2542E3F94(a1, a2, a3, a4, &qword_269DD92F0, MEMORY[0x263F06EA8]);
}

uint64_t sub_2542E3F94(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  double v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E41DC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_2542E4338(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_254345424(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2542E4764(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_2542E43A4()
{
  unint64_t result = qword_269DD9000;
  if (!qword_269DD9000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9000);
  }
  return result;
}

uint64_t sub_2542E43F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542E4460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542E44C8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2542E4528()
{
  unint64_t result = qword_269DD9018;
  if (!qword_269DD9018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9018);
  }
  return result;
}

uint64_t sub_2542E457C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DKFaceTrackerState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9180);
}

unint64_t sub_2542E45E4()
{
  unint64_t result = qword_269DD9030;
  if (!qword_269DD9030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9030);
  }
  return result;
}

uint64_t type metadata accessor for DKBodyTrackerState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9198);
}

unint64_t sub_2542E4658()
{
  unint64_t result = qword_269DD9048;
  if (!qword_269DD9048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9048);
  }
  return result;
}

uint64_t type metadata accessor for DKObjectTrackerState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD91A8);
}

unint64_t sub_2542E46CC()
{
  unint64_t result = qword_269DD9060;
  if (!qword_269DD9060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9060);
  }
  return result;
}

uint64_t type metadata accessor for DKHandTrackerState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD91B8);
}

uint64_t type metadata accessor for DKBodyKeyPointList()
{
  return self;
}

uint64_t sub_2542E4764(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (v88 >= *(double *)v90) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v93 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_2542E4E40((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v96 = sub_254345370((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          v99 = &v96[16 * v95 + 32];
          *(void *)v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_25436CE40();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  int64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        size_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        uint64_t v30 = v14;
        int v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)int v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_254344E28(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_254344E28((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      int64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            long long v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        long long v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        char v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        long long v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        long long v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        char v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_2542E4E40((double *)(v11 + 16 * *(void *)v78), (double *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)long long v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        int64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_2542E4E40(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[2 * v13];
      uint64_t v23 = (char *)v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (double *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 2;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            uint64_t v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 2;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 2;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 2;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_254345174((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      double v15 = v4;
      while (1)
      {
        if (v6[1] >= v15[1])
        {
          uint64_t v4 = v15 + 2;
          size_t v17 = v15;
          double v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          double v16 = v6 + 2;
          size_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

unint64_t sub_2542E50CC()
{
  unint64_t result = qword_269DD9078;
  if (!qword_269DD9078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9078);
  }
  return result;
}

unint64_t sub_2542E5120()
{
  unint64_t result = qword_269DD9090;
  if (!qword_269DD9090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9090);
  }
  return result;
}

uint64_t sub_2542E5174(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD9080);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542E51E4()
{
  unint64_t result = qword_269DD90A8;
  if (!qword_269DD90A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD90A8);
  }
  return result;
}

unint64_t sub_2542E5238()
{
  unint64_t result = qword_269DD90B8;
  if (!qword_269DD90B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD90B8);
  }
  return result;
}

uint64_t sub_2542E528C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542E52F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542E5354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2542E53B0()
{
  unint64_t result = qword_269DD90D0;
  if (!qword_269DD90D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD90D0);
  }
  return result;
}

unint64_t sub_2542E5404()
{
  unint64_t result = qword_269DD90F0;
  if (!qword_269DD90F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD90F0);
  }
  return result;
}

unint64_t sub_2542E5458()
{
  unint64_t result = qword_269DD90F8;
  if (!qword_269DD90F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD90F8);
  }
  return result;
}

unint64_t sub_2542E54AC()
{
  unint64_t result = qword_269DD9100;
  if (!qword_269DD9100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9100);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonTrackerState(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD91C8);
}

uint64_t sub_2542E5520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2542E5584(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2542E55C8()
{
  unint64_t result = qword_269DD9128;
  if (!qword_269DD9128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9128);
  }
  return result;
}

unint64_t sub_2542E561C()
{
  unint64_t result = qword_269DD9130;
  if (!qword_269DD9130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9130);
  }
  return result;
}

unint64_t sub_2542E5670()
{
  unint64_t result = qword_269DD9138;
  if (!qword_269DD9138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9138);
  }
  return result;
}

unint64_t sub_2542E56C8()
{
  unint64_t result = qword_269DD9140;
  if (!qword_269DD9140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9140);
  }
  return result;
}

uint64_t sub_2542E571C(void *a1)
{
  a1[2] = sub_2542E457C(&qword_269DD8278, 255, (void (*)(uint64_t))type metadata accessor for DKFaceTrackerState);
  a1[3] = sub_2542E457C(&qword_269DD8190, 255, (void (*)(uint64_t))type metadata accessor for DKFaceTrackerState);
  uint64_t result = sub_2542E457C(&qword_269DD9148, 255, (void (*)(uint64_t))type metadata accessor for DKFaceTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2542E57D4(void *a1)
{
  a1[2] = sub_2542E457C(&qword_269DD8288, 255, (void (*)(uint64_t))type metadata accessor for DKBodyTrackerState);
  a1[3] = sub_2542E457C(&qword_269DD81A8, 255, (void (*)(uint64_t))type metadata accessor for DKBodyTrackerState);
  uint64_t result = sub_2542E457C(&qword_269DD9150, 255, (void (*)(uint64_t))type metadata accessor for DKBodyTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2542E588C(void *a1)
{
  a1[2] = sub_2542E457C(&qword_269DD9158, 255, (void (*)(uint64_t))type metadata accessor for DKObjectTrackerState);
  a1[3] = sub_2542E457C(&qword_269DD9160, 255, (void (*)(uint64_t))type metadata accessor for DKObjectTrackerState);
  uint64_t result = sub_2542E457C(&qword_269DD9168, 255, (void (*)(uint64_t))type metadata accessor for DKObjectTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2542E5944(void *a1)
{
  a1[2] = sub_2542E457C(&qword_269DD8298, 255, (void (*)(uint64_t))type metadata accessor for DKHandTrackerState);
  a1[3] = sub_2542E457C(&qword_269DD81C0, 255, (void (*)(uint64_t))type metadata accessor for DKHandTrackerState);
  uint64_t result = sub_2542E457C(&qword_269DD9170, 255, (void (*)(uint64_t))type metadata accessor for DKHandTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2542E59FC(void *a1)
{
  a1[2] = sub_2542E457C(&qword_269DD82A8, 255, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
  a1[3] = sub_2542E457C(&qword_269DD81D0, 255, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
  uint64_t result = sub_2542E457C(&qword_269DD9178, 255, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2542E5AB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E5AD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time);
}

uint64_t sub_2542E5B08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542E5B28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid);
}

__n128 sub_2542E5B5C@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E5B78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2542E5B84@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2542E5BA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_34Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
}

void *sub_2542E5BB4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
  return result;
}

void *sub_2542E5BCC(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = *result;
  return result;
}

void *sub_2542E5BE4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
  return result;
}

void *sub_2542E5BFC(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = *result;
  return result;
}

void *sub_2542E5C14@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
  return result;
}

void *sub_2542E5C2C(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2542E5C44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E43F8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a2);
}

uint64_t sub_2542E5C5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEE0C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t sub_2542E5C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E5C9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated);
}

void *sub_2542E5CD0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
  return result;
}

void *sub_2542E5CE8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2542E5D00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation, a2);
}

uint64_t sub_2542E5D0C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation);
}

void *sub_2542E5D18@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E5D3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw);
}

void *sub_2542E5D48@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E5D6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch);
}

void *sub_2542E5D78@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E5D9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll);
}

uint64_t sub_2542E5DA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E5DC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time);
}

uint64_t sub_2542E5DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542E5E1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid);
}

__n128 sub_2542E5E50@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E5E6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2542E5E78@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2542E5E9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_34Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
}

void *sub_2542E5EA8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
  return result;
}

void *sub_2542E5EC0(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = *result;
  return result;
}

void *sub_2542E5ED8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
  return result;
}

void *sub_2542E5EF0(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = *result;
  return result;
}

void *sub_2542E5F08@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
  return result;
}

void *sub_2542E5F20(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2542E5F38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E43F8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a2);
}

uint64_t sub_2542E5F50(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEE0C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t sub_2542E5F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E5F90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated);
}

void *sub_2542E5FC4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
  return result;
}

void *sub_2542E5FDC(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2542E5FF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation, a2);
}

uint64_t sub_2542E6000(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation);
}

uint64_t sub_2542E600C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E602C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time);
}

uint64_t sub_2542E6060@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542E6080(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid);
}

__n128 sub_2542E60B4@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E60D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2542E60DC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2542E6100(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_34Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
}

void *sub_2542E610C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
  return result;
}

void *sub_2542E6124(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = *result;
  return result;
}

void *sub_2542E613C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
  return result;
}

void *sub_2542E6154(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = *result;
  return result;
}

void *sub_2542E616C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
  return result;
}

void *sub_2542E6184(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2542E619C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E43F8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a2);
}

uint64_t sub_2542E61B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEE0C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t sub_2542E61D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E61F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated);
}

void *sub_2542E6228@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
  return result;
}

void *sub_2542E6240(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2542E6258@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation, a2);
}

uint64_t sub_2542E6264(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation);
}

uint64_t sub_2542E6270@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E6290(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time);
}

uint64_t sub_2542E62C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542E62E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid);
}

__n128 sub_2542E6318@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E6334(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2542E6340@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2542E6364(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_34Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
}

void *sub_2542E6370@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
  return result;
}

void *sub_2542E6388(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = *result;
  return result;
}

void *sub_2542E63A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
  return result;
}

void *sub_2542E63B8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = *result;
  return result;
}

void *sub_2542E63D0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
  return result;
}

void *sub_2542E63E8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2542E6400@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E43F8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a2);
}

uint64_t sub_2542E6418(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEE0C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t sub_2542E6438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E6458(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated);
}

void *sub_2542E648C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
  return result;
}

void *sub_2542E64A4(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2542E64BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation, a2);
}

uint64_t sub_2542E64C8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation);
}

void *sub_2542E64D4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
  return result;
}

unsigned char *sub_2542E64EC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = *result;
  return result;
}

uint64_t sub_2542E6504@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542E6514(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_2542E6558@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)(*(void *)a1 + 24);
  long long v3 = *(_OWORD *)(*(void *)a1 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

__n128 sub_2542E656C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 40) = v4;
  return result;
}

uint64_t sub_2542E6580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, MEMORY[0x263F07490], a2);
}

uint64_t sub_2542E65A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time);
}

uint64_t sub_2542E65D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, MEMORY[0x263F07508], a2);
}

uint64_t sub_2542E65F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07508], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid);
}

__n128 sub_2542E6628@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E6644(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2542E6650@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2542E6674(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_34Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
}

double keypath_set_34Tm(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  double result = *(double *)(a1 + 8);
  uint64_t v6 = *a2 + *a5;
  *(void *)uint64_t v6 = *(void *)a1;
  *(double *)(v6 + 8) = result;
  return result;
}

void *sub_2542E66A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
  return result;
}

void *sub_2542E66B8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = *result;
  return result;
}

void *sub_2542E66D0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
  return result;
}

void *sub_2542E66E8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = *result;
  return result;
}

void *sub_2542E6700@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
  return result;
}

void *sub_2542E6718(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2542E6730@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E43F8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a2);
}

uint64_t sub_2542E6748(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEE0C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t sub_2542E6768@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, MEMORY[0x263F07490], a2);
}

uint64_t keypath_getTm_1@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1 + *a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a4, v5, v6);
}

uint64_t sub_2542E6800(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2542DEEF4(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated);
}

void *sub_2542E6834@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
  return result;
}

void *sub_2542E684C(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

void *sub_2542E6864@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E6888(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw);
}

void *sub_2542E6894@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E68B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch);
}

void *sub_2542E68C4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2542E68E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll);
}

uint64_t sub_2542E68F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker, a2);
}

uint64_t sub_2542E6900(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker);
}

uint64_t sub_2542E690C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker, a2);
}

uint64_t sub_2542E6918(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker);
}

uint64_t sub_2542E6924@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2542E693C(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542E6990@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542E528C(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, a2);
}

__n128 sub_2542E69AC@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2542E69C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&double result = keypath_set_11Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect).n128_u64[0];
  return result;
}

uint64_t sub_2542E69D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints, a2);
}

uint64_t keypath_get_47Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  *a3 = *(void *)(*a1 + *a2);
  return swift_retain();
}

uint64_t sub_2542E69F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints);
}

uint64_t sub_2542E6A00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
  return swift_retain();
}

uint64_t sub_2542E6A18(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
}

uint64_t sub_2542E6A24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
  return swift_retain();
}

uint64_t sub_2542E6A3C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
}

uint64_t sub_2542E6A48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
  return swift_retain();
}

uint64_t sub_2542E6A60(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
}

uint64_t sub_2542E6A6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
  return swift_retain();
}

uint64_t sub_2542E6A84(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
}

uint64_t sub_2542E6A90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
  return swift_retain();
}

uint64_t sub_2542E6AA8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
}

void *sub_2542E6AB4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
  return result;
}

unsigned char *sub_2542E6ACC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = *result;
  return result;
}

void *sub_2542E6AE4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
  return result;
}

unsigned char *sub_2542E6AFC(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = *result;
  return result;
}

void *sub_2542E6B14@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
  return result;
}

unsigned char *sub_2542E6B2C(unsigned char *result, void *a2)
{
  *(unsigned char *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = *result;
  return result;
}

ValueMetadata *type metadata accessor for DKIdentityConfidence()
{
  return &type metadata for DKIdentityConfidence;
}

uint64_t dispatch thunk of DKTrackerState.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DKTrackerState.uuid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DKTrackerState.uuid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DKTrackerState.rect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DKTrackerState.rect.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DKTrackerState.rect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of DKTrackerState.identity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DKTrackerState.identity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of DKTrackerState.identity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of DKTrackerState.motion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of DKTrackerState.motion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of DKTrackerState.motion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_2542E6D70()
{
  return type metadata accessor for DKFaceTrackerState(0);
}

void sub_2542E6D78()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_25436C800();
    if (v1 <= 0x3F)
    {
      sub_2542E7700();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DKFaceTrackerState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFaceTrackerState);
}

uint64_t dispatch thunk of DKFaceTrackerState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKFaceTrackerState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKFaceTrackerState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKFaceTrackerState.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKFaceTrackerState.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKFaceTrackerState.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKFaceTrackerState.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKFaceTrackerState.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKFaceTrackerState.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKFaceTrackerState.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKFaceTrackerState.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKFaceTrackerState.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKFaceTrackerState.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKFaceTrackerState.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKFaceTrackerState.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKFaceTrackerState.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKFaceTrackerState.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKFaceTrackerState.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKFaceTrackerState.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKFaceTrackerState.groupId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKFaceTrackerState.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKFaceTrackerState.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKFaceTrackerState.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKFaceTrackerState.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKFaceTrackerState.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKFaceTrackerState.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKFaceTrackerState.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 464))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 488))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 512))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKFaceTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 528))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of DKFaceTrackerState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKFaceTrackerState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 544))();
}

void sub_2542E7700()
{
  if (!qword_269DD9190)
  {
    type metadata accessor for DKMotion3();
    unint64_t v0 = sub_25436D130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DD9190);
    }
  }
}

uint64_t sub_2542E7758()
{
  return type metadata accessor for DKBodyTrackerState(0);
}

uint64_t method lookup function for DKBodyTrackerState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKBodyTrackerState);
}

uint64_t dispatch thunk of DKBodyTrackerState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKBodyTrackerState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKBodyTrackerState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKBodyTrackerState.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKBodyTrackerState.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKBodyTrackerState.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKBodyTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)()
{
  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of DKBodyTrackerState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKBodyTrackerState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t sub_2542E7D54()
{
  return type metadata accessor for DKObjectTrackerState(0);
}

void sub_2542E7D5C()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_25436C800();
    if (v1 <= 0x3F)
    {
      sub_2542E7700();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DKObjectTrackerState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKObjectTrackerState);
}

uint64_t dispatch thunk of DKObjectTrackerState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKObjectTrackerState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKObjectTrackerState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKObjectTrackerState.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKObjectTrackerState.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKObjectTrackerState.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKObjectTrackerState.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKObjectTrackerState.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKObjectTrackerState.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKObjectTrackerState.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKObjectTrackerState.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKObjectTrackerState.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKObjectTrackerState.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKObjectTrackerState.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKObjectTrackerState.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKObjectTrackerState.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKObjectTrackerState.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKObjectTrackerState.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKObjectTrackerState.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKObjectTrackerState.groupId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKObjectTrackerState.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKObjectTrackerState.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKObjectTrackerState.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKObjectTrackerState.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKObjectTrackerState.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKObjectTrackerState.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKObjectTrackerState.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKObjectTrackerState.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKObjectTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)()
{
  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of DKObjectTrackerState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKObjectTrackerState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t sub_2542E8488()
{
  return type metadata accessor for DKHandTrackerState(0);
}

void sub_2542E8490()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_25436C800();
    if (v1 <= 0x3F)
    {
      sub_2542E7700();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DKHandTrackerState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKHandTrackerState);
}

uint64_t dispatch thunk of DKHandTrackerState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKHandTrackerState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKHandTrackerState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKHandTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)()
{
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of DKHandTrackerState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKHandTrackerState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t method lookup function for DKBodyKeyPointList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKBodyKeyPointList);
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.__allocating_init(keypoints:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for DKBodyKeyPoint()
{
  return &type metadata for DKBodyKeyPoint;
}

uint64_t sub_2542E8DD0()
{
  return type metadata accessor for DKPersonTrackerState(0);
}

void sub_2542E8DD8()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_25436C800();
    if (v1 <= 0x3F)
    {
      sub_2542E7700();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DKPersonGroup(319);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for DKPersonTrackerState(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonTrackerState);
}

uint64_t dispatch thunk of DKPersonTrackerState.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonTrackerState.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonTrackerState.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 552))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 576))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 600))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 824))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 944))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTrackerState.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTrackerState.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 992))();
}

uint64_t getEnumTagSinglePayload for DKPersonTrackerState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKPersonTrackerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *double result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542EA068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonTrackerState.CodingKeys()
{
  return &type metadata for DKPersonTrackerState.CodingKeys;
}

ValueMetadata *type metadata accessor for DKBodyKeyPoint.CodingKeys()
{
  return &type metadata for DKBodyKeyPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for DKBodyKeyPointList.CodingKeys()
{
  return &type metadata for DKBodyKeyPointList.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DKHandTrackerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *double result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542EA190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKHandTrackerState.CodingKeys()
{
  return &type metadata for DKHandTrackerState.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObjectTrackerState.CodingKeys()
{
  return &type metadata for DKObjectTrackerState.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore20DKObjectTrackerStateC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23IntelligentTrackingCore20DKObjectTrackerStateC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *double result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542EA33CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKBodyTrackerState.CodingKeys()
{
  return &type metadata for DKBodyTrackerState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKFaceTrackerState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKFaceTrackerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *double result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542EA4D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFaceTrackerState.CodingKeys()
{
  return &type metadata for DKFaceTrackerState.CodingKeys;
}

unsigned char *_s23IntelligentTrackingCore14DKBodyKeyPointV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2542EA5D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIdentityConfidence.CodingKeys()
{
  return &type metadata for DKIdentityConfidence.CodingKeys;
}

unint64_t sub_2542EA610()
{
  unint64_t result = qword_269DD91D8;
  if (!qword_269DD91D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD91D8);
  }
  return result;
}

unint64_t sub_2542EA668()
{
  unint64_t result = qword_269DD91E0;
  if (!qword_269DD91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD91E0);
  }
  return result;
}

unint64_t sub_2542EA6C0()
{
  unint64_t result = qword_269DD91E8;
  if (!qword_269DD91E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD91E8);
  }
  return result;
}

unint64_t sub_2542EA718()
{
  unint64_t result = qword_269DD91F0;
  if (!qword_269DD91F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD91F0);
  }
  return result;
}

unint64_t sub_2542EA770()
{
  unint64_t result = qword_269DD91F8;
  if (!qword_269DD91F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD91F8);
  }
  return result;
}

unint64_t sub_2542EA7C8()
{
  unint64_t result = qword_269DD9200;
  if (!qword_269DD9200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9200);
  }
  return result;
}

unint64_t sub_2542EA820()
{
  unint64_t result = qword_269DD9208;
  if (!qword_269DD9208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9208);
  }
  return result;
}

unint64_t sub_2542EA878()
{
  unint64_t result = qword_269DD9210;
  if (!qword_269DD9210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9210);
  }
  return result;
}

unint64_t sub_2542EA8D0()
{
  unint64_t result = qword_269DD9218;
  if (!qword_269DD9218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9218);
  }
  return result;
}

unint64_t sub_2542EA928()
{
  unint64_t result = qword_269DD9220;
  if (!qword_269DD9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9220);
  }
  return result;
}

unint64_t sub_2542EA980()
{
  unint64_t result = qword_269DD9228;
  if (!qword_269DD9228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9228);
  }
  return result;
}

unint64_t sub_2542EA9D8()
{
  unint64_t result = qword_269DD9230;
  if (!qword_269DD9230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9230);
  }
  return result;
}

unint64_t sub_2542EAA30()
{
  unint64_t result = qword_269DD9238;
  if (!qword_269DD9238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9238);
  }
  return result;
}

unint64_t sub_2542EAA88()
{
  unint64_t result = qword_269DD9240;
  if (!qword_269DD9240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9240);
  }
  return result;
}

unint64_t sub_2542EAAE0()
{
  unint64_t result = qword_269DD9248;
  if (!qword_269DD9248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9248);
  }
  return result;
}

unint64_t sub_2542EAB38()
{
  unint64_t result = qword_269DD9250;
  if (!qword_269DD9250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9250);
  }
  return result;
}

unint64_t sub_2542EAB90()
{
  unint64_t result = qword_269DD9258;
  if (!qword_269DD9258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9258);
  }
  return result;
}

unint64_t sub_2542EABE8()
{
  unint64_t result = qword_269DD9260;
  if (!qword_269DD9260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9260);
  }
  return result;
}

unint64_t sub_2542EAC40()
{
  unint64_t result = qword_269DD9268;
  if (!qword_269DD9268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9268);
  }
  return result;
}

unint64_t sub_2542EAC98()
{
  unint64_t result = qword_269DD9270;
  if (!qword_269DD9270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9270);
  }
  return result;
}

unint64_t sub_2542EACF0()
{
  unint64_t result = qword_269DD9278;
  if (!qword_269DD9278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9278);
  }
  return result;
}

unint64_t sub_2542EAD48()
{
  unint64_t result = qword_269DD9280;
  if (!qword_269DD9280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9280);
  }
  return result;
}

unint64_t sub_2542EADA0()
{
  unint64_t result = qword_269DD9288;
  if (!qword_269DD9288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9288);
  }
  return result;
}

unint64_t sub_2542EADF8()
{
  unint64_t result = qword_269DD9290;
  if (!qword_269DD9290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9290);
  }
  return result;
}

uint64_t sub_2542EAE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2542EAF34()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE) {
    return 14;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542EAF80()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542EAFC8()
{
  unint64_t v0 = sub_25436D5A0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_2542EB014(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F7079656BLL && a2 == 0xE900000000000073;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952671090 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2542EB104(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2542EB204()
{
  unint64_t v0 = sub_25436D7E0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19) {
    return 25;
  }
  else {
    return v0;
  }
}

unint64_t sub_2542EB258()
{
  unint64_t result = qword_269DD92B8;
  if (!qword_269DD92B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DD92B8);
  }
  return result;
}

uint64_t sub_2542EB2A0(uint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_2542584AC(0, *(void *)(v3 + 16) + 1, 1, v3);
  }
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v4 = *(void *)(v3 + 24);
  if (v5 >= v4 >> 1) {
    unint64_t v3 = sub_2542584AC(v4 > 1, v5 + 1, 1, v3);
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = sub_25436C800();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v3+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a1, v6);
  *unint64_t v1 = v3;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2542EB388()
{
}

uint64_t sub_2542EB3BC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2542EB3C8(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25436D530();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2542EB428(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = 1 << v3;
  uint64_t v5 = -1;
  if (1 << v3 < 64) {
    uint64_t v5 = ~(-1 << (1 << v3));
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = __clz(__rbit64(v6));
    unint64_t v9 = (v6 - 1) & v6;
    int64_t v10 = (unint64_t)(v4 + 63) >> 6;
  }
  else
  {
    unsigned int v14 = v3 & 0x3F;
    if (v14 <= 6) {
      return 0;
    }
    int64_t v10 = (unint64_t)(v4 + 63) >> 6;
    unint64_t v24 = *(void *)(a1 + 72);
    if (v24)
    {
      uint64_t v7 = 1;
    }
    else
    {
      if (v14 < 8) {
        return 0;
      }
      unint64_t v24 = *(void *)(a1 + 80);
      if (v24)
      {
        uint64_t v7 = 2;
      }
      else
      {
        unint64_t v24 = *(void *)(a1 + 88);
        if (v24)
        {
          uint64_t v7 = 3;
        }
        else
        {
LABEL_48:
          if (v14 < 9) {
            return 0;
          }
          unint64_t v24 = *(void *)(a1 + 96);
          if (v24)
          {
            uint64_t v7 = 4;
          }
          else
          {
            unint64_t v24 = *(void *)(a1 + 104);
            if (!v24) {
              goto LABEL_54;
            }
            uint64_t v7 = 5;
          }
        }
      }
    }
LABEL_41:
    unint64_t v9 = (v24 - 1) & v24;
    unint64_t v8 = __clz(__rbit64(v24)) + (v7 << 6);
  }
  uint64_t v11 = 8 * v8;
  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + v11);
  uint64_t v13 = *(void *)(*(void *)(a1 + 56) + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v7 << 6);
LABEL_25:
    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
    if (*(unsigned char *)(v13 + 33) == 1)
    {
      if (*(unsigned char *)(v13 + 32)) {
        double v21 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      }
      else {
        double v21 = *(double *)(v13 + 40);
      }
      if (*(unsigned char *)(v20 + 33) == 1)
      {
        if (*(unsigned char *)(v20 + 32) != 1)
        {
LABEL_34:
          double v22 = *(double *)(v20 + 40);
          goto LABEL_35;
        }
LABEL_30:
        double v22 = atan2(*(long double *)(v20 + 48), *(long double *)(v20 + 56));
LABEL_35:
        if (v21 < v22)
        {
LABEL_36:
          uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 8 * v16);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v13 = v20;
          uint64_t v12 = v23;
        }
      }
      else if (v21 < 0.0)
      {
        goto LABEL_36;
      }
    }
    else if (*(unsigned char *)(v20 + 33))
    {
      double v21 = 0.0;
      if ((*(unsigned char *)(v20 + 32) & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_30;
    }
  }
  int64_t v17 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v17 >= v10) {
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v2 + 8 * v17);
  ++v7;
  if (v18) {
    goto LABEL_24;
  }
  uint64_t v7 = v17 + 1;
  if (v17 + 1 >= v10) {
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v2 + 8 * v7);
  if (v18) {
    goto LABEL_24;
  }
  uint64_t v7 = v17 + 2;
  if (v17 + 2 >= v10) {
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v2 + 8 * v7);
  if (v18) {
    goto LABEL_24;
  }
  uint64_t v7 = v17 + 3;
  if (v17 + 3 >= v10) {
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v2 + 8 * v7);
  if (v18)
  {
LABEL_24:
    unsigned int v14 = v18 - 1;
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
    goto LABEL_25;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v10)
  {
LABEL_37:
    swift_release();
    return v12;
  }
  unint64_t v18 = *(void *)(v2 + 8 * v19);
  if (v18)
  {
    uint64_t v7 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v10) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v2 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_54:
  uint64_t v25 = 0;
  uint64_t v26 = 6;
  if (v10 > 6) {
    uint64_t v26 = v10;
  }
  uint64_t v27 = v26 - 6;
  while (v27 != v25)
  {
    unint64_t v24 = *(void *)(a1 + 112 + 8 * v25++);
    if (v24)
    {
      uint64_t v7 = v25 + 5;
      goto LABEL_41;
    }
  }
  return 0;
}

uint64_t sub_2542EB74C(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9378);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DKPersonGroup(0);
  double v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_25425042C(a1, &qword_269DD9378);
    sub_2542F912C(a2, type metadata accessor for DKPersonGroup, type metadata accessor for DKPersonGroup, type metadata accessor for DKPersonGroup, (void (*)(void))sub_25429BE88, (uint64_t)v8);
    uint64_t v14 = sub_25436C800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
    return sub_25425042C((uint64_t)v8, &qword_269DD9378);
  }
  else
  {
    sub_2542FF2AC(a1, (uint64_t)v12, type metadata accessor for DKPersonGroup);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *char v3 = 0x8000000000000000;
    sub_254251E40((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_25436C800();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_2542EB9BC(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9380);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  double v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_25425042C(a1, &qword_269DD9380);
    sub_2542F912C(a2, type metadata accessor for DKPersonGroupFilter.StampedPerson, type metadata accessor for DKPersonGroupFilter.StampedPerson, type metadata accessor for DKPersonGroupFilter.StampedPerson, (void (*)(void))sub_25429BEBC, (uint64_t)v8);
    uint64_t v14 = sub_25436C800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
    return sub_25425042C((uint64_t)v8, &qword_269DD9380);
  }
  else
  {
    sub_2542FF2AC(a1, (uint64_t)v12, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *char v3 = 0x8000000000000000;
    sub_254251C6C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_25436C800();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_2542EBC2C(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_25425042C(a1, &qword_269DD7A40);
    unint64_t v13 = sub_254351604(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *char v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25429C910();
        uint64_t v17 = v21;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, v9);
      sub_2542F9C7C(v15, v17);
      *char v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_25425042C((uint64_t)v8, &qword_269DD7A40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    sub_254252154((uint64_t)v12, a2, v18);
    *char v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

double DKPersonGroupConfiguration.__allocating_init()()
{
  unint64_t v0 = (_OWORD *)swift_allocObject();
  v0[1] = xmmword_25436FEC0;
  v0[2] = xmmword_25436FED0;
  double result = 0.75;
  v0[3] = xmmword_25436FEE0;
  return result;
}

void *DKPersonGroupFilter.__allocating_init(configuration:)(uint64_t a1)
{
  double result = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE80];
  uint64_t v4 = MEMORY[0x263F8EE88];
  result[4] = MEMORY[0x263F8EE80];
  result[5] = v4;
  uint64_t v5 = MEMORY[0x263F8EE78];
  result[6] = v3;
  result[7] = v5;
  result[8] = v4;
  result[9] = v4;
  result[10] = v4;
  result[2] = a1;
  result[3] = v3;
  return result;
}

double DKPersonGroupConfiguration.init()()
{
  v0[1] = xmmword_25436FEC0;
  v0[2] = xmmword_25436FED0;
  double result = 0.75;
  v0[3] = xmmword_25436FEE0;
  return result;
}

_OWORD *DKPersonGroupConfiguration.__allocating_init(configuration:)(_OWORD *a1)
{
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[2];
  v2[1] = a1[1];
  v2[2] = v3;
  v2[3] = a1[3];
  swift_release();
  return v2;
}

void *DKPersonGroupConfiguration.init(configuration:)(void *a1)
{
  unint64_t v1 = sub_2542FEFA8(a1);
  swift_release();
  return v1;
}

uint64_t DKPersonGroupConfiguration.deinit()
{
  return v0;
}

uint64_t DKPersonGroupConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DKPersonGroup.groupId.getter()
{
  return *(void *)v0;
}

uint64_t DKPersonGroup.groupId.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*DKPersonGroup.groupId.modify())()
{
  return nullsub_1;
}

double DKPersonGroup.confidence.getter()
{
  return *(double *)(v0 + 8);
}

void DKPersonGroup.confidence.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKPersonGroup.confidence.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKPersonGroup(0) + 24);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DKPersonGroup.creationDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKPersonGroup(0) + 24);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*DKPersonGroup.creationDate.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.personUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_2542503C8(v1 + *(int *)(v3 + 28), a1, &qword_269DD7F58);
}

uint64_t DKPersonGroup.personUUID.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_254286154(a1, v1 + *(int *)(v3 + 28), &qword_269DD7F58);
}

uint64_t (*DKPersonGroup.personUUID.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.faceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_2542503C8(v1 + *(int *)(v3 + 32), a1, &qword_269DD7F58);
}

uint64_t DKPersonGroup.faceUUID.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_254286154(a1, v1 + *(int *)(v3 + 32), &qword_269DD7F58);
}

uint64_t (*DKPersonGroup.faceUUID.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.bodyUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_2542503C8(v1 + *(int *)(v3 + 36), a1, &qword_269DD7F58);
}

uint64_t DKPersonGroup.bodyUUID.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DKPersonGroup(0);
  return sub_254286154(a1, v1 + *(int *)(v3 + 36), &qword_269DD7F58);
}

uint64_t (*DKPersonGroup.bodyUUID.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.handUUIDs.getter()
{
  type metadata accessor for DKPersonGroup(0);
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroup.handUUIDs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for DKPersonGroup(0) + 40);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DKPersonGroup.handUUIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_2542EC498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v12 = (int *)type metadata accessor for DKPersonGroup(0);
  uint64_t v13 = a7 + v12[7];
  uint64_t v14 = sub_25436C800();
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  uint64_t v16 = a7 + v12[8];
  v15(v16, 1, 1, v14);
  uint64_t v17 = a7 + v12[9];
  v15(v17, 1, 1, v14);
  uint64_t v18 = v12[10];
  *(void *)(a7 + v18) = MEMORY[0x263F8EE78];
  *(void *)a7 = a1;
  *(double *)(a7 + 8) = a8;
  uint64_t v19 = a7 + v12[6];
  uint64_t v20 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  sub_254286154(a3, v13, &qword_269DD7F58);
  sub_254286154(a4, v16, &qword_269DD7F58);
  sub_254286154(a5, v17, &qword_269DD7F58);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a7 + v18) = a6;
  return result;
}

unint64_t DKPersonGroup.getUUIDs()()
{
  uint64_t v45 = sub_25436C800();
  uint64_t v1 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - v5;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v44);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9320);
  uint64_t v14 = *(void *)(v7 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_25436E690;
  uint64_t v40 = v16;
  uint64_t v17 = v16 + v15;
  uint64_t v18 = type metadata accessor for DKPersonGroup(0);
  sub_2542503C8(v0 + *(int *)(v18 + 32), v17, &qword_269DD7F58);
  uint64_t v42 = v18;
  uint64_t v19 = v0 + *(int *)(v18 + 36);
  uint64_t v39 = v17 + v14;
  sub_2542503C8(v19, v17 + v14, &qword_269DD7F58);
  uint64_t v41 = v17;
  uint64_t v20 = v17;
  uint64_t v21 = v45;
  sub_2542503C8(v20, (uint64_t)v13, &qword_269DD7F58);
  sub_25425E0DC((uint64_t)v13, (uint64_t)v10, &qword_269DD7F58);
  double v22 = (void (**)(char *, char *, uint64_t))(v1 + 32);
  uint64_t v43 = v1;
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (v38(v10, 1, v21) == 1)
  {
    sub_25425042C((uint64_t)v10, &qword_269DD7F58);
    unint64_t v23 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v37 = v0;
    uint64_t v24 = v21;
    uint64_t v25 = *v22;
    (*v22)(v6, v10, v24);
    uint64_t v36 = v3;
    v25(v3, v6, v24);
    unint64_t v23 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_2542584AC(0, *(void *)(v23 + 16) + 1, 1, v23);
    }
    unint64_t v27 = *(void *)(v23 + 16);
    unint64_t v26 = *(void *)(v23 + 24);
    if (v27 >= v26 >> 1) {
      unint64_t v23 = sub_2542584AC(v26 > 1, v27 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v27 + 1;
    unint64_t v28 = v23
        + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))
        + *(void *)(v43 + 72) * v27;
    uint64_t v3 = v36;
    uint64_t v29 = v45;
    v25((char *)v28, v36, v45);
    uint64_t v21 = v29;
  }
  sub_2542503C8(v39, (uint64_t)v13, &qword_269DD7F58);
  sub_25425E0DC((uint64_t)v13, (uint64_t)v10, &qword_269DD7F58);
  if (v38(v10, 1, v21) == 1)
  {
    sub_25425042C((uint64_t)v10, &qword_269DD7F58);
  }
  else
  {
    uint64_t v30 = *v22;
    (*v22)(v6, v10, v21);
    v30(v3, v6, v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_2542584AC(0, *(void *)(v23 + 16) + 1, 1, v23);
    }
    unint64_t v32 = *(void *)(v23 + 16);
    unint64_t v31 = *(void *)(v23 + 24);
    if (v32 >= v31 >> 1) {
      unint64_t v23 = sub_2542584AC(v31 > 1, v32 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v32 + 1;
    v30((char *)(v23+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v32), v3, v21);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v46 = v23;
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_25427D61C(v33);
  return v46;
}

uint64_t DKPersonGroup.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = (int *)type metadata accessor for DKPersonGroup(0);
  sub_2542503C8(v2 + v14[8], (uint64_t)v13, &qword_269DD7F58);
  unint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_25436D910();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_25436D910();
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    sub_25436CB50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_2542503C8(v2 + v14[9], (uint64_t)v10, &qword_269DD7F58);
  if (v15(v10, 1, v4) == 1)
  {
    sub_25436D910();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_25436D910();
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    sub_25436CB50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v16 = *(void *)(v2 + v14[10]);
  swift_bridgeObjectRetain();
  sub_2542FD298(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t static DKPersonGroup.== infix(_:_:)()
{
  unint64_t v0 = DKPersonGroup.getUUIDs()();
  unint64_t v1 = DKPersonGroup.getUUIDs()();
  char v2 = sub_2542ECEF0(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_2542ECE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_2542ECEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C800();
  MEMORY[0x270FA5388](v4);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = v6 + 16;
      unint64_t v32 = v7;
      uint64_t v33 = v14;
      uint64_t v15 = (v12 + 32) & ~v12;
      uint64_t v16 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v30 = v16;
      unint64_t v31 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v11 - 1;
      uint64_t v18 = v7;
      do
      {
        uint64_t v19 = a1;
        uint64_t v20 = v10;
        uint64_t v21 = v10;
        double v22 = v33;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v20, a1 + v15, v4, v8);
        uint64_t v23 = a2;
        v22(v18, a2 + v15, v4);
        uint64_t v10 = v21;
        sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
        char v24 = sub_25436CBB0();
        uint64_t v25 = *v31;
        (*v31)(v18, v4);
        v25(v21, v4);
        BOOL v27 = v17-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v15 += v30;
        a2 = v23;
        a1 = v19;
      }
      while (v27);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_2542ED110()
{
  uint64_t result = 0x644970756F7267;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E656469666E6F63;
      break;
    case 2:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t result = 0x55556E6F73726570;
      break;
    case 4:
      unsigned int v2 = 1701011814;
      goto LABEL_7;
    case 5:
      unsigned int v2 = 2036625250;
LABEL_7:
      uint64_t result = v2 | 0x4449555500000000;
      break;
    case 6:
      uint64_t result = 0x44495555646E6168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2542ED200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254302128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542ED228(uint64_t a1)
{
  unint64_t v2 = sub_2542FF000();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542ED264(uint64_t a1)
{
  unint64_t v2 = sub_2542FF000();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKPersonGroup.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9328);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __n128 v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542FF000();
  sub_25436D950();
  char v18 = 0;
  sub_25436D700();
  if (!v2)
  {
    char v17 = 1;
    sub_25436D6F0();
    uint64_t v9 = type metadata accessor for DKPersonGroup(0);
    char v16 = 2;
    sub_25436C7B0();
    sub_2542FF054(&qword_269DD8110, MEMORY[0x263F07490]);
    sub_25436D710();
    char v15 = 3;
    sub_25436C800();
    sub_2542FF054(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D6D0();
    char v14 = 4;
    sub_25436D6D0();
    char v13 = 5;
    sub_25436D6D0();
    v11[1] = *(void *)(v3 + *(int *)(v9 + 40));
    char v12 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9338);
    sub_2542FF09C(&qword_269DD9340, &qword_269DD89A0);
    sub_25436D710();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKPersonGroup.hashValue.getter()
{
  sub_25436D8F0();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_25436D930();
}

uint64_t DKPersonGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v32 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)&v32 - v8;
  uint64_t v37 = sub_25436C7B0();
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9348);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  char v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (int *)type metadata accessor for DKPersonGroup(0);
  MEMORY[0x270FA5388](v13);
  char v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (uint64_t)v15 + *(int *)(v16 + 28);
  uint64_t v18 = sub_25436C800();
  uint64_t v19 = *(void (**)(void))(*(void *)(v18 - 8) + 56);
  uint64_t v46 = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v17, 1, 1, v18);
  uint64_t v45 = (uint64_t)v15 + v13[8];
  v19();
  uint64_t v43 = (uint64_t)v15 + v13[9];
  v19();
  uint64_t v42 = v13[10];
  *(uint64_t *)((char *)v15 + v42) = MEMORY[0x263F8EE78];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542FF000();
  uint64_t v41 = v12;
  uint64_t v20 = (uint64_t)v44;
  sub_25436D940();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v22 = v43;
    sub_25425042C(v46, &qword_269DD7F58);
    sub_25425042C(v45, &qword_269DD7F58);
    sub_25425042C(v22, &qword_269DD7F58);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v39;
    uint64_t v44 = a1;
    char v54 = 0;
    uint64_t *v15 = sub_25436D640();
    char v53 = 1;
    sub_25436D630();
    v15[1] = v23;
    char v52 = 2;
    sub_2542FF054(&qword_269DD8220, MEMORY[0x263F07490]);
    char v24 = v10;
    uint64_t v25 = v37;
    sub_25436D650();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v15 + v13[6], v24, v25);
    char v51 = 3;
    sub_2542FF054(&qword_269DD89C8, MEMORY[0x263F07508]);
    uint64_t v26 = (uint64_t)v36;
    sub_25436D610();
    sub_254286154(v26, v46, &qword_269DD7F58);
    char v50 = 4;
    uint64_t v27 = (uint64_t)v35;
    sub_25436D610();
    sub_254286154(v27, v45, &qword_269DD7F58);
    char v49 = 5;
    uint64_t v28 = (uint64_t)v34;
    sub_25436D610();
    sub_254286154(v28, v43, &qword_269DD7F58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9338);
    char v48 = 6;
    sub_2542FF09C(&qword_269DD9350, &qword_269DD89C8);
    sub_25436D650();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v40);
    uint64_t v29 = v47;
    uint64_t v30 = v42;
    swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v15 + v30) = v29;
    sub_2542FF1C4((uint64_t)v15, v33, type metadata accessor for DKPersonGroup);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return sub_2542FF22C((uint64_t)v15, type metadata accessor for DKPersonGroup);
  }
}

uint64_t sub_2542EDD18()
{
  sub_25436D8F0();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_25436D930();
}

uint64_t sub_2542EDD5C()
{
  sub_25436D8F0();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_25436D930();
}

uint64_t sub_2542EDD98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKPersonGroup.init(from:)(a1, a2);
}

uint64_t sub_2542EDDB0(void *a1)
{
  return DKPersonGroup.encode(to:)(a1);
}

uint64_t sub_2542EDDC8()
{
  unint64_t v0 = DKPersonGroup.getUUIDs()();
  unint64_t v1 = DKPersonGroup.getUUIDs()();
  char v2 = sub_2542ECEF0(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t DKPersonGroupFilter.StampedPerson.hash(into:)()
{
  return sub_25436CB50();
}

uint64_t static DKPersonGroupFilter.StampedPerson.== infix(_:_:)()
{
  if ((sub_25436C780() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  return sub_25436C7D0();
}

uint64_t DKPersonGroupFilter.StampedPerson.hashValue.getter()
{
  return sub_25436D930();
}

uint64_t sub_2542EE04C()
{
  return sub_25436D930();
}

uint64_t sub_2542EE138()
{
  return sub_25436CB50();
}

uint64_t sub_2542EE20C()
{
  return sub_25436D930();
}

uint64_t sub_2542EE2F4()
{
  if ((sub_25436C780() & 1) == 0) {
    return 0;
  }
  return sub_25436C7D0();
}

uint64_t DKPersonGroupFilter.Track.lastGroupId.getter()
{
  return *(void *)v0;
}

uint64_t DKPersonGroupFilter.Track.lastGroupId.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*DKPersonGroupFilter.Track.lastGroupId.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 20);
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DKPersonGroupFilter.Track.uuid.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 20);
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*DKPersonGroupFilter.Track.uuid.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.identity.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 24));
}

uint64_t DKPersonGroupFilter.Track.identity.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for DKPersonGroupFilter.Track(0);
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.Track.identity.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_25436D910();
  }
  else
  {
    sub_25436D910();
    sub_25436D900();
  }
  type metadata accessor for DKPersonGroupFilter.Track(0);
  sub_25436C800();
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  return sub_25436D900();
}

uint64_t sub_2542EE64C()
{
  uint64_t v1 = 1684632949;
  if (*v0 != 1) {
    uint64_t v1 = 0x797469746E656469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x756F72477473616CLL;
  }
}

uint64_t sub_2542EE6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25430244C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2542EE6D0(uint64_t a1)
{
  unint64_t v2 = sub_2542FF170();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2542EE70C(uint64_t a1)
{
  unint64_t v2 = sub_2542FF170();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKPersonGroupFilter.Track.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9358);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542FF170();
  sub_25436D950();
  v8[15] = 0;
  sub_25436D6C0();
  if (!v1)
  {
    type metadata accessor for DKPersonGroupFilter.Track(0);
    v8[14] = 1;
    sub_25436C800();
    sub_2542FF054(&qword_269DD89A0, MEMORY[0x263F07508]);
    sub_25436D710();
    v8[13] = 2;
    sub_25436D700();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKPersonGroupFilter.Track.hashValue.getter()
{
  sub_25436D8F0();
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_25436D910();
  }
  else
  {
    sub_25436D910();
    sub_25436D900();
  }
  type metadata accessor for DKPersonGroupFilter.Track(0);
  sub_25436C800();
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  sub_25436D900();
  return sub_25436D930();
}

uint64_t DKPersonGroupFilter.Track.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_25436C800();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9368);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DKPersonGroupFilter.Track(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2542FF170();
  sub_25436D940();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v22 = a1;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  uint64_t v14 = v26;
  char v30 = 0;
  *(void *)uint64_t v11 = sub_25436D600();
  uint64_t v21 = v11;
  v11[8] = v15 & 1;
  char v29 = 1;
  sub_2542FF054(&qword_269DD89C8, MEMORY[0x263F07508]);
  uint64_t v16 = v6;
  sub_25436D650();
  uint64_t v17 = (uint64_t)v21;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[*(int *)(v9 + 20)], v16, v14);
  char v28 = 2;
  uint64_t v18 = sub_25436D640();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v27);
  *(void *)(v17 + *(int *)(v9 + 24)) = v18;
  sub_2542FF1C4(v17, v23, type metadata accessor for DKPersonGroupFilter.Track);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_2542FF22C(v17, type metadata accessor for DKPersonGroupFilter.Track);
}

uint64_t sub_2542EEDAC()
{
  sub_25436D8F0();
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_25436D910();
  }
  else
  {
    sub_25436D910();
    sub_25436D900();
  }
  sub_25436C800();
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  sub_25436D900();
  return sub_25436D930();
}

uint64_t sub_2542EEE94()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_25436D910();
  }
  else
  {
    sub_25436D910();
    sub_25436D900();
  }
  sub_25436C800();
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  return sub_25436D900();
}

uint64_t sub_2542EEF68()
{
  sub_25436D8F0();
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_25436D910();
  }
  else
  {
    sub_25436D910();
    sub_25436D900();
  }
  sub_25436C800();
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  sub_25436D900();
  return sub_25436D930();
}

uint64_t sub_2542EF04C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKPersonGroupFilter.Track.init(from:)(a1, a2);
}

uint64_t sub_2542EF064(void *a1)
{
  return DKPersonGroupFilter.Track.encode(to:)(a1);
}

uint64_t DKPersonGroupFilter.State.activeGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.activeGroups.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.activeGroups.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.activeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.activeIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.activeIDs.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.createdIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.createdIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.createdIDs.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.killedIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.killedIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.killedIDs.modify())()
{
  return nullsub_1;
}

void *DKPersonGroupFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE80];
  uint64_t v3 = MEMORY[0x263F8EE78];
  v1[6] = MEMORY[0x263F8EE80];
  v1[7] = v3;
  uint64_t v4 = MEMORY[0x263F8EE88];
  v1[4] = v2;
  v1[5] = v4;
  v1[8] = v4;
  v1[9] = v4;
  v1[10] = v4;
  v1[2] = a1;
  v1[3] = v2;
  return v1;
}

uint64_t sub_2542EF204()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = MEMORY[0x263F8EE80];
  v0[6] = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  v0[3] = v1;
  swift_bridgeObjectRelease();
  v0[4] = v1;
  uint64_t v2 = MEMORY[0x263F8EE88];
  v0[7] = MEMORY[0x263F8EE78];
  v0[8] = v2;
  v0[9] = v2;
  v0[10] = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2542EF29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v604 = a4;
  uint64_t v637 = a1;
  v567 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9370);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v565 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v632 = (uint64_t)&v565 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9378);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v586 = (uint64_t)&v565 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9380);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v585 = (uint64_t)&v565 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v584 = (uint64_t)&v565 - v18;
  uint64_t v600 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v566 = *(void *)(v600 - 8);
  MEMORY[0x270FA5388](v600);
  uint64_t v573 = (uint64_t)&v565 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v644 = (uint64_t)&v565 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v583 = (uint64_t)&v565 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v582 = (uint64_t)&v565 - v25;
  MEMORY[0x270FA5388](v26);
  v581 = (char *)&v565 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v580 = (uint64_t)&v565 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v603 = (uint64_t)&v565 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v608 = (uint64_t)&v565 - v33;
  uint64_t v588 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8038);
  uint64_t v565 = *(void *)(v588 - 8);
  MEMORY[0x270FA5388](v588);
  uint64_t v579 = (uint64_t)&v565 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v599 = (uint64_t)&v565 - v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v587 = (uint64_t)&v565 - v38;
  uint64_t v638 = sub_25436C7B0();
  uint64_t v568 = *(void *)(v638 - 8);
  MEMORY[0x270FA5388](v638);
  uint64_t v598 = (uint64_t)&v565 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  v591 = (char *)&v565 - v41;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v602 = (uint64_t)&v565 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  v636 = (char *)&v565 - v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v46 - 8);
  v618 = (char *)&v565 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  v622 = (char *)&v565 - v49;
  MEMORY[0x270FA5388](v50);
  v578 = (char *)&v565 - v51;
  MEMORY[0x270FA5388](v52);
  v597 = (char *)&v565 - v53;
  MEMORY[0x270FA5388](v54);
  v596 = (char *)&v565 - v55;
  MEMORY[0x270FA5388](v56);
  v651 = (char *)&v565 - v57;
  MEMORY[0x270FA5388](v58);
  v621 = (char *)&v565 - v59;
  MEMORY[0x270FA5388](v60);
  v577 = (char *)&v565 - v61;
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char *)&v565 - v63;
  MEMORY[0x270FA5388](v65);
  *(void *)&long long v641 = (char *)&v565 - v66;
  MEMORY[0x270FA5388](v67);
  v612 = (char *)&v565 - v68;
  uint64_t v627 = type metadata accessor for DKPersonGroup(0);
  uint64_t v620 = *(void *)(v627 - 8);
  MEMORY[0x270FA5388](v627);
  uint64_t v626 = (uint64_t)&v565 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v70);
  uint64_t v595 = (uint64_t)&v565 - v71;
  MEMORY[0x270FA5388](v72);
  uint64_t v619 = (uint64_t)&v565 - v73;
  uint64_t v628 = type metadata accessor for DKPersonGroupFilter.Track(0);
  uint64_t v74 = *(void *)(v628 - 8);
  MEMORY[0x270FA5388](v628);
  uint64_t v607 = (uint64_t)&v565 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v76);
  uint64_t v572 = (uint64_t)&v565 - v77;
  MEMORY[0x270FA5388](v78);
  uint64_t v571 = (uint64_t)&v565 - v79;
  MEMORY[0x270FA5388](v80);
  v659 = (void (*)(char *))((char *)&v565 - v81);
  MEMORY[0x270FA5388](v82);
  v664 = (uint64_t *)((char *)&v565 - v83);
  MEMORY[0x270FA5388](v84);
  uint64_t v660 = (uint64_t)&v565 - v85;
  MEMORY[0x270FA5388](v86);
  v665 = (char *)&v565 - v87;
  uint64_t v88 = sub_25436C800();
  uint64_t v89 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  v606 = (char *)&v565 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v91);
  v617 = (char *)&v565 - v92;
  MEMORY[0x270FA5388](v93);
  v593 = (char *)&v565 - v94;
  MEMORY[0x270FA5388](v95);
  v611 = (char *)&v565 - v96;
  MEMORY[0x270FA5388](v97);
  v633 = (char *)&v565 - v98;
  MEMORY[0x270FA5388](v99);
  v661 = (char *)&v565 - v100;
  MEMORY[0x270FA5388](v101);
  v663 = (uint64_t *)((char *)&v565 - v102);
  MEMORY[0x270FA5388](v103);
  v610 = (char *)&v565 - v104;
  MEMORY[0x270FA5388](v105);
  v609 = (char *)&v565 - v106;
  MEMORY[0x270FA5388](v107);
  v635 = (char *)&v565 - v108;
  MEMORY[0x270FA5388](v109);
  uint64_t v111 = (char *)&v565 - v110;
  MEMORY[0x270FA5388](v112);
  v652 = (void (**)(char *, uint64_t, uint64_t))((char *)&v565 - v113);
  MEMORY[0x270FA5388](v114);
  v662 = (char *)&v565 - v115;
  uint64_t v605 = a3;
  uint64_t v592 = sub_2542FDA84(a2, a3, a4);
  int64_t v116 = *(void *)(a2 + 16);
  uint64_t v616 = v74;
  uint64_t v634 = v89;
  uint64_t v569 = a2;
  int64_t v648 = (int64_t)v111;
  int64_t v657 = v116;
  if (v116)
  {
    v666 = (void *)MEMORY[0x263F8EE78];
    sub_2542F5A90(v116);
    int64_t v117 = v116;
    uint64_t v118 = a2 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
    uint64_t v119 = v89;
    uint64_t v120 = *(void *)(v74 + 72);
    v121 = (void (**)(uint64_t, char *, uint64_t))(v119 + 16);
    int64_t v122 = v117;
    uint64_t v123 = (uint64_t)v662;
    do
    {
      v124 = v665;
      sub_2542FF1C4(v118, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v121)(v123, &v124[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v124, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v126 = v666[2];
      unint64_t v125 = v666[3];
      if (v126 >= v125 >> 1) {
        sub_2542E294C(v125 > 1, v126 + 1, 1);
      }
      sub_2542F9094(v126, v123);
      v118 += v120;
      --v122;
    }
    while (v122);
    v127 = v666;
    uint64_t v89 = v634;
    uint64_t v111 = (char *)v648;
  }
  else
  {
    v127 = (void *)sub_25427DF14(0);
  }
  uint64_t v128 = v605;
  int64_t v129 = *(void *)(v605 + 16);
  v623 = v10;
  int64_t v658 = v129;
  if (v129)
  {
    v666 = (void *)MEMORY[0x263F8EE78];
    sub_2542F5A90(v129);
    uint64_t v130 = v128 + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v131 = *(void *)(v616 + 72);
    v132 = (void (**)(uint64_t, char *, uint64_t))(v89 + 16);
    uint64_t v133 = (uint64_t)v662;
    do
    {
      v134 = v665;
      sub_2542FF1C4(v130, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v132)(v133, &v134[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v134, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v136 = v666[2];
      unint64_t v135 = v666[3];
      if (v136 >= v135 >> 1) {
        sub_2542E294C(v135 > 1, v136 + 1, 1);
      }
      sub_2542F9094(v136, v133);
      v130 += v131;
      --v129;
    }
    while (v129);
    v137 = v666;
    uint64_t v89 = v634;
    uint64_t v111 = (char *)v648;
  }
  else
  {
    v137 = (void *)sub_25427DF14(0);
  }
  v666 = v127;
  sub_25427D61C((uint64_t)v137);
  v138 = v666;
  uint64_t v139 = v604;
  int64_t v140 = *(void *)(v604 + 16);
  v640 = (void (**)(void, void, void))v64;
  if (v140)
  {
    v666 = (void *)MEMORY[0x263F8EE78];
    sub_2542F5A90(v140);
    uint64_t v141 = v139 + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v142 = *(void *)(v616 + 72);
    v143 = (void (**)(uint64_t, char *, uint64_t))(v89 + 16);
    uint64_t v144 = (uint64_t)v662;
    do
    {
      v145 = v665;
      sub_2542FF1C4(v141, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v143)(v144, &v145[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v145, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v147 = v666[2];
      unint64_t v146 = v666[3];
      if (v147 >= v146 >> 1) {
        sub_2542E294C(v146 > 1, v147 + 1, 1);
      }
      sub_2542F9094(v147, v144);
      v141 += v142;
      --v140;
    }
    while (v140);
    v148 = v666;
  }
  else
  {
    v148 = (void *)sub_25427DF14(0);
  }
  v149 = (void *)MEMORY[0x263F8EE78];
  v666 = v138;
  sub_25427D61C((uint64_t)v148);
  uint64_t v570 = sub_25427E8B8((uint64_t)v666);
  swift_bridgeObjectRelease();
  v666 = v149;
  uint64_t v150 = v569;
  uint64_t v151 = sub_254354CD4(v569);
  swift_bridgeObjectRetain();
  uint64_t v152 = v605;
  v153 = v665;
  if (v151)
  {
    unint64_t v154 = 0;
    uint64_t v155 = v660;
    do
    {
      if (*(void *)(v150 + 16) <= v154) {
        goto LABEL_378;
      }
      sub_2542FF1C4(v150+ ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80))+ *(void *)(v616 + 72) * v154, v155, type metadata accessor for DKPersonGroupFilter.Track);
      if (*(unsigned char *)(v155 + 8))
      {
        sub_2542FF22C(v155, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2542FF2AC(v155, (uint64_t)v153, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E2910);
        unint64_t v157 = v666[2];
        unint64_t v156 = v666[3];
        if (v157 >= v156 >> 1) {
          sub_2542E2910(v156 > 1, v157 + 1, 1);
        }
        sub_2542F8FE4(v157, (uint64_t)v153);
        uint64_t v155 = v660;
      }
      ++v154;
    }
    while (v151 != v154);
    v158 = v666;
  }
  else
  {
    v158 = v149;
  }
  swift_bridgeObjectRelease();
  int64_t v159 = v158[2];
  if (v159)
  {
    v666 = v149;
    sub_2542F5A90(v159);
    uint64_t v160 = (uint64_t)v158
         + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v161 = *(void *)(v616 + 72);
    v162 = (void (**)(uint64_t, char *, uint64_t))(v634 + 16);
    uint64_t v163 = (uint64_t)v662;
    do
    {
      v164 = v665;
      sub_2542FF1C4(v160, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v162)(v163, &v164[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v164, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v166 = v666[2];
      unint64_t v165 = v666[3];
      if (v166 >= v165 >> 1) {
        sub_2542E294C(v165 > 1, v166 + 1, 1);
      }
      sub_2542F9094(v166, v163);
      v160 += v161;
      --v159;
    }
    while (v159);
    swift_release();
    v153 = v665;
    v167 = v666;
    uint64_t v152 = v605;
    v149 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    v167 = (void *)sub_25427DF14(0);
    swift_release();
  }
  v666 = v149;
  uint64_t v168 = sub_254354CD4(v152);
  swift_bridgeObjectRetain();
  uint64_t v169 = (uint64_t)v664;
  if (v168)
  {
    for (unint64_t i = 0; i != v168; ++i)
    {
      if (*(void *)(v152 + 16) <= i) {
        goto LABEL_379;
      }
      sub_2542FF1C4(v152+ ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80))+ *(void *)(v616 + 72) * i, v169, type metadata accessor for DKPersonGroupFilter.Track);
      if (*(unsigned char *)(v169 + 8))
      {
        sub_2542FF22C(v169, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2542FF2AC(v169, (uint64_t)v153, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E2910);
        unint64_t v172 = v666[2];
        unint64_t v171 = v666[3];
        if (v172 >= v171 >> 1) {
          sub_2542E2910(v171 > 1, v172 + 1, 1);
        }
        sub_2542F8FE4(v172, (uint64_t)v153);
        uint64_t v169 = (uint64_t)v664;
      }
    }
    v173 = v666;
  }
  else
  {
    v173 = v149;
  }
  swift_bridgeObjectRelease();
  int64_t v174 = v173[2];
  if (v174)
  {
    v666 = v149;
    sub_2542F5A90(v174);
    uint64_t v175 = (uint64_t)v173
         + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v176 = *(void *)(v616 + 72);
    v177 = (void (**)(uint64_t, char *, uint64_t))(v634 + 16);
    uint64_t v178 = (uint64_t)v662;
    do
    {
      sub_2542FF1C4(v175, (uint64_t)v153, type metadata accessor for DKPersonGroupFilter.Track);
      (*v177)(v178, &v153[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v153, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v180 = v666[2];
      unint64_t v179 = v666[3];
      if (v180 >= v179 >> 1) {
        sub_2542E294C(v179 > 1, v180 + 1, 1);
      }
      sub_2542F9094(v180, v178);
      v175 += v176;
      --v174;
      v153 = v665;
    }
    while (v174);
    swift_release();
    v181 = v666;
    uint64_t v111 = (char *)v648;
    v149 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    v181 = (void *)sub_25427DF14(0);
    swift_release();
  }
  v182 = v111;
  v666 = v167;
  sub_25427D61C((uint64_t)v181);
  v664 = v666;
  v666 = v149;
  uint64_t v183 = v604;
  uint64_t v184 = sub_254354CD4(v604);
  swift_bridgeObjectRetain();
  v185 = v659;
  if (v184)
  {
    unint64_t v186 = 0;
    uint64_t v187 = v616;
    v188 = v665;
    do
    {
      if (*(void *)(v183 + 16) <= v186) {
        goto LABEL_380;
      }
      sub_2542FF1C4(v183+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80))+ *(void *)(v187 + 72) * v186, (uint64_t)v185, type metadata accessor for DKPersonGroupFilter.Track);
      if (*((unsigned char *)v185 + 8))
      {
        sub_2542FF22C((uint64_t)v185, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2542FF2AC((uint64_t)v185, (uint64_t)v188, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E2910);
        unint64_t v190 = v666[2];
        unint64_t v189 = v666[3];
        if (v190 >= v189 >> 1) {
          sub_2542E2910(v189 > 1, v190 + 1, 1);
        }
        sub_2542F8FE4(v190, (uint64_t)v188);
        uint64_t v183 = v604;
        uint64_t v187 = v616;
      }
      ++v186;
    }
    while (v184 != v186);
    v191 = v666;
  }
  else
  {
    v191 = v149;
  }
  swift_bridgeObjectRelease();
  int64_t v192 = v191[2];
  uint64_t v576 = v184;
  if (v192)
  {
    v666 = (void *)MEMORY[0x263F8EE78];
    sub_2542F5A90(v192);
    uint64_t v193 = (uint64_t)v191
         + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v194 = *(void *)(v616 + 72);
    v195 = (void (**)(uint64_t, char *, uint64_t))(v634 + 16);
    uint64_t v196 = (uint64_t)v662;
    do
    {
      v197 = v665;
      sub_2542FF1C4(v193, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v195)(v196, &v197[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v197, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v199 = v666[2];
      unint64_t v198 = v666[3];
      if (v199 >= v198 >> 1) {
        sub_2542E294C(v198 > 1, v199 + 1, 1);
      }
      sub_2542F9094(v199, v196);
      v193 += v194;
      --v192;
    }
    while (v192);
    swift_release();
    v200 = v666;
    v182 = (char *)v648;
  }
  else
  {
    v200 = (void *)sub_25427DF14(0);
    swift_release();
  }
  v666 = v664;
  sub_25427D61C((uint64_t)v200);
  uint64_t v625 = sub_25427E8B8((uint64_t)v666);
  swift_bridgeObjectRelease();
  if (v657)
  {
    v666 = (void *)MEMORY[0x263F8EE78];
    int64_t v201 = v657;
    sub_2542F5A90(v657);
    uint64_t v202 = v569 + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
    uint64_t v203 = *(void *)(v616 + 72);
    v204 = (void (**)(uint64_t, char *, uint64_t))(v634 + 16);
    uint64_t v205 = (uint64_t)v662;
    int64_t v206 = (int64_t)v182;
    do
    {
      v207 = v665;
      sub_2542FF1C4(v202, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
      (*v204)(v205, &v207[*(int *)(v628 + 20)], v88);
      sub_2542FF22C((uint64_t)v207, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
      unint64_t v209 = v666[2];
      unint64_t v208 = v666[3];
      if (v209 >= v208 >> 1) {
        sub_2542E294C(v208 > 1, v209 + 1, 1);
      }
      sub_2542F9094(v209, v205);
      v202 += v203;
      --v201;
    }
    while (v201);
    uint64_t v594 = 0;
    v210 = v666;
    int64_t v211 = v658;
    if (v658) {
      goto LABEL_82;
    }
  }
  else
  {
    v210 = (void *)sub_25427DF14(0);
    uint64_t v594 = 0;
    int64_t v211 = v658;
    int64_t v206 = (int64_t)v182;
    if (v658)
    {
LABEL_82:
      v666 = (void *)MEMORY[0x263F8EE78];
      int64_t v212 = v211;
      sub_2542F5A90(v211);
      uint64_t v213 = v605 + ((*(unsigned __int8 *)(v616 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v616 + 80));
      uint64_t v214 = *(void *)(v616 + 72);
      v215 = (void (**)(uint64_t, char *, uint64_t))(v634 + 16);
      uint64_t v216 = (uint64_t)v662;
      do
      {
        v217 = v665;
        sub_2542FF1C4(v213, (uint64_t)v665, type metadata accessor for DKPersonGroupFilter.Track);
        (*v215)(v216, &v217[*(int *)(v628 + 20)], v88);
        sub_2542FF22C((uint64_t)v217, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2542F8F40((uint64_t (*)(void, uint64_t, uint64_t))sub_2542E294C);
        unint64_t v219 = v666[2];
        unint64_t v218 = v666[3];
        if (v219 >= v218 >> 1) {
          sub_2542E294C(v218 > 1, v219 + 1, 1);
        }
        sub_2542F9094(v219, v216);
        v213 += v214;
        --v212;
      }
      while (v212);
      v220 = v666;
      goto LABEL_89;
    }
  }
  v220 = (void *)sub_25427DF14(0);
LABEL_89:
  uint64_t v221 = v634;
  v666 = v210;
  sub_25427D61C((uint64_t)v220);
  uint64_t v575 = sub_25427E8B8((uint64_t)v666);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = MEMORY[0x263F8EE88];
  v669 = (void *)inited;
  uint64_t v223 = v592;
  uint64_t v224 = sub_254354CD4(v592);
  uint64_t v225 = v644;
  v226 = v612;
  uint64_t v589 = v224;
  if (v224)
  {
    unint64_t v227 = 0;
    unint64_t v590 = v223 + ((*(unsigned __int8 *)(v620 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v620 + 80));
    v664 = (void *)(v221 + 16);
    uint64_t v656 = v221 + 32;
    v655 = (void (**)(int64_t, uint64_t))(v221 + 8);
    *(void *)&long long v631 = v568 + 16;
    v630 = (char *)(v568 + 56);
    int64_t v657 = v221 + 56;
    unint64_t v574 = (v221 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v639 = xmmword_25436E690;
    long long v629 = xmmword_25436FDF0;
    uint64_t v228 = v641;
    v647 = (void *)(v221 + 48);
    do
    {
      if (*(void *)(v223 + 16) <= v227) {
        goto LABEL_384;
      }
      uint64_t v231 = *(void *)(v620 + 72);
      unint64_t v601 = v227;
      sub_2542FF1C4(v590 + v231 * v227, v619, type metadata accessor for DKPersonGroup);
      unint64_t v232 = DKPersonGroup.getUUIDs()();
      uint64_t v615 = sub_2542EB3BC(v232);
      if (v615)
      {
        unint64_t v233 = 0;
        uint64_t v234 = *(unsigned __int8 *)(v221 + 80);
        uint64_t v646 = (v234 + 32) & ~v234;
        unint64_t v614 = v232 + v646;
        uint64_t v642 = v234 | 7;
        unint64_t v613 = v232;
        while (1)
        {
          if (*(void *)(v232 + 16) <= v233) {
            goto LABEL_374;
          }
          int64_t v238 = *(void *)(v221 + 72);
          int64_t v624 = v233;
          int64_t v658 = v238;
          uint64_t v660 = *(void *)(v221 + 16);
          ((void (*)(char *, unint64_t, uint64_t))v660)(v226, v614 + v238 * v233, v88);
          v643 = *(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56);
          v643(v226, 0, 1, v88);
          v659 = *(void (**)(char *))(v221 + 48);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v659)(v226, 1, v88) == 1) {
            break;
          }
          v654 = *(void (***)(int64_t, uint64_t))v656;
          ((void (*)(void, char *, uint64_t))v654)(v652, v226, v88);
          unint64_t v239 = DKPersonGroup.getUUIDs()();
          v653 = (char *)sub_2542EB3BC(v239);
          if (v653)
          {
            v240 = 0;
            v241 = (char *)(v239 + v646);
            int64_t v645 = v646 + 2 * v658;
            v235 = v652;
            v236 = (void (*)(uint64_t, void, uint64_t, uint64_t))v643;
            v649 = (void (**)(uint64_t, void, uint64_t, uint64_t))v239;
            while (1)
            {
              if (*(void *)(v239 + 16) <= (unint64_t)v240)
              {
                __break(1u);
LABEL_215:
                __break(1u);
LABEL_216:
                swift_release();
                uint64_t v225 = v644;
                goto LABEL_218;
              }
              v665 = v241;
              ((void (*)(uint64_t))v660)(v228);
              v236(v228, 0, 1, v88);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v659)(v228, 1, v88) == 1) {
                goto LABEL_98;
              }
              ((void (*)(int64_t, uint64_t, uint64_t))v654)(v206, v228, v88);
              sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
              if (sub_25436CBB0())
              {
                (*v655)(v206, v88);
              }
              else
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF8);
                uint64_t v242 = swift_allocObject();
                *(_OWORD *)(v242 + 16) = v639;
                uint64_t v243 = v242 + v646;
                v244 = (void (*)(uint64_t, int64_t, uint64_t))v660;
                ((void (*)(uint64_t, void, uint64_t))v660)(v242 + v646, v235, v88);
                uint64_t v245 = v243 + v658;
                v244(v243 + v658, v206, v88);
                sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
                v666 = (void *)sub_25436CF60();
                v246 = v640;
                v244((uint64_t)v640, v243, v88);
                v236((uint64_t)v246, 0, 1, v88);
                if (((unsigned int (*)(void, uint64_t, uint64_t))v659)(v246, 1, v88) != 1)
                {
                  v247 = v635;
                  ((void (*)(char *, void, uint64_t))v654)(v635, v246, v88);
                  uint64_t v248 = (uint64_t)v662;
                  sub_2542688D0((uint64_t)v662, v247);
                  v249 = *v655;
                  (*v655)(v248, v88);
                  ((void (*)(void, uint64_t, uint64_t))v660)(v246, v245, v88);
                  v236((uint64_t)v246, 0, 1, v88);
                  if (((unsigned int (*)(void, uint64_t, uint64_t))v659)(v246, 1, v88) != 1)
                  {
                    v250 = v635;
                    ((void (*)(char *, void, uint64_t))v654)(v635, v246, v88);
                    uint64_t v251 = (uint64_t)v662;
                    sub_2542688D0((uint64_t)v662, v250);
                    v249(v251, v88);
                    v236((uint64_t)v246, 1, 1, v88);
                  }
                }
                swift_bridgeObjectRelease();
                v252 = v666;
                swift_bridgeObjectRetain();
                sub_2542F5B64((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2542592E4);
                v253 = v669;
                unint64_t v255 = v669[2];
                unint64_t v254 = v669[3];
                if (v255 >= v254 >> 1)
                {
                  v253 = sub_2542592E4((void *)(v254 > 1), v255 + 1, 1, v669);
                  v669 = v253;
                }
                v235 = v652;
                int64_t v206 = v648;
                unint64_t v239 = (unint64_t)v649;
                v253[2] = v255 + 1;
                v253[v255 + 4] = v252;
                if (*(void *)(v650[6] + 16)
                  && (swift_bridgeObjectRetain(),
                      swift_bridgeObjectRetain(),
                      sub_254351928((uint64_t)v252),
                      char v257 = v256,
                      swift_bridgeObjectRelease(),
                      swift_bridgeObjectRelease(),
                      (v257 & 1) != 0))
                {
                  (*v655)(v206, v88);
                  swift_bridgeObjectRelease();
                  uint64_t v225 = v644;
                  uint64_t v228 = v641;
                }
                else
                {
                  v258 = v650;
                  v259 = (void *)v650[2];
                  uint64_t v260 = v259[6];
                  uint64_t v261 = v259[3];
                  uint64_t v262 = v259[4];
                  uint64_t v263 = (uint64_t)v636;
                  uint64_t v264 = v638;
                  (*(void (**)(char *, uint64_t, uint64_t))v631)(v636, v637, v638);
                  v265 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v630;
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))v630)(v263, 0, 1, v264);
                  type metadata accessor for DKSmoothingFilter();
                  uint64_t v266 = swift_allocObject();
                  *(_OWORD *)(v266 + 48) = v629;
                  uint64_t v267 = v266 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                  v265(v266 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v264);
                  uint64_t v268 = v266 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
                  *(void *)uint64_t v268 = 0;
                  *(unsigned char *)(v268 + 8) = 1;
                  uint64_t v269 = v266 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
                  *(void *)uint64_t v269 = 0;
                  *(unsigned char *)(v269 + 8) = 1;
                  *(unsigned char *)(v266 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
                  *(void *)(v266 + 16) = v261;
                  *(void *)(v266 + 24) = v262;
                  *(_WORD *)(v266 + 32) = 256;
                  *(void *)(v266 + 40) = v260;
                  sub_254286154(v263, v267, &qword_269DD7A40);
                  *(void *)uint64_t v268 = 0;
                  *(unsigned char *)(v268 + 8) = 1;
                  *(void *)uint64_t v269 = 0;
                  *(unsigned char *)(v269 + 8) = 1;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v666 = (void *)v258[6];
                  v271 = v666;
                  v258[6] = 0x8000000000000000;
                  unint64_t v273 = sub_254351928((uint64_t)v252);
                  uint64_t v274 = v271[2];
                  BOOL v275 = (v272 & 1) == 0;
                  uint64_t v276 = v274 + v275;
                  if (__OFADD__(v274, v275))
                  {
                    __break(1u);
LABEL_373:
                    __break(1u);
LABEL_374:
                    __break(1u);
LABEL_375:
                    __break(1u);
LABEL_376:
                    __break(1u);
LABEL_377:
                    __break(1u);
LABEL_378:
                    __break(1u);
LABEL_379:
                    __break(1u);
LABEL_380:
                    __break(1u);
LABEL_381:
                    __break(1u);
LABEL_382:
                    __break(1u);
                    goto LABEL_383;
                  }
                  char v277 = v272;
                  if (v271[3] >= v276)
                  {
                    int64_t v206 = v648;
                    v236 = (void (*)(uint64_t, void, uint64_t, uint64_t))v643;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                      sub_25429C25C();
                    }
                  }
                  else
                  {
                    sub_254298BC4(v276, isUniquelyReferenced_nonNull_native);
                    unint64_t v278 = sub_254351928((uint64_t)v252);
                    int64_t v206 = v648;
                    v236 = (void (*)(uint64_t, void, uint64_t, uint64_t))v643;
                    if ((v277 & 1) != (v279 & 1)) {
                      goto LABEL_395;
                    }
                    unint64_t v273 = v278;
                  }
                  unint64_t v239 = (unint64_t)v649;
                  v280 = v666;
                  if (v277)
                  {
                    uint64_t v281 = v666[7];
                    swift_release();
                    *(void *)(v281 + 8 * v273) = v266;
                  }
                  else
                  {
                    v666[(v273 >> 6) + 8] |= 1 << v273;
                    uint64_t v282 = 8 * v273;
                    *(void *)(v280[6] + v282) = v252;
                    *(void *)(v280[7] + v282) = v266;
                    uint64_t v283 = v280[2];
                    BOOL v284 = __OFADD__(v283, 1);
                    uint64_t v285 = v283 + 1;
                    if (v284) {
                      goto LABEL_373;
                    }
                    v280[2] = v285;
                    swift_bridgeObjectRetain();
                  }
                  v650[6] = v280;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  (*v655)(v206, v88);
                  uint64_t v225 = v644;
                  uint64_t v228 = v641;
                  v235 = v652;
                }
              }
              ++v240;
              v241 = &v665[v658];
              if (v653 == v240) {
                goto LABEL_97;
              }
            }
          }
          v235 = v652;
          v236 = (void (*)(uint64_t, void, uint64_t, uint64_t))v643;
LABEL_97:
          v236(v228, 1, 1, v88);
LABEL_98:
          swift_bridgeObjectRelease();
          int64_t v237 = v624 + 1;
          (*v655)((int64_t)v235, v88);
          unint64_t v233 = v237;
          BOOL v230 = v237 == v615;
          uint64_t v221 = v634;
          v226 = v612;
          unint64_t v232 = v613;
          if (v230)
          {
            v643(v612, 1, 1, v88);
            break;
          }
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v657)(v226, 1, 1, v88);
      }
      swift_bridgeObjectRelease();
      unint64_t v229 = v601 + 1;
      sub_2542FF22C(v619, type metadata accessor for DKPersonGroup);
      unint64_t v227 = v229;
      BOOL v230 = v229 == v589;
      uint64_t v223 = v592;
    }
    while (!v230);
  }
  swift_bridgeObjectRelease();
  uint64_t v286 = *(void *)(v625 + 56);
  v643 = (void (*)(char *, void, uint64_t, uint64_t))(v625 + 56);
  uint64_t v287 = 1 << *(unsigned char *)(v625 + 32);
  if (v287 < 64) {
    uint64_t v288 = ~(-1 << v287);
  }
  else {
    uint64_t v288 = -1;
  }
  uint64_t v289 = v288 & v286;
  uint64_t v646 = (uint64_t)(v650 + 6);
  int64_t v624 = (unint64_t)(v287 + 63) >> 6;
  uint64_t v656 = v221 + 56;
  int64_t v658 = v221 + 48;
  v290 = (void (**)(char *))(v221 + 32);
  v664 = (void *)(v221 + 8);
  v640 = (void (**)(void, void, void))(v568 + 16);
  *(void *)&long long v639 = v568 + 56;
  swift_bridgeObjectRetain();
  v291 = 0;
  long long v641 = xmmword_25436E690;
  long long v631 = xmmword_25436FDF0;
  v292 = v621;
  v665 = (char *)(v221 + 16);
  v654 = (void (**)(int64_t, uint64_t))(v221 + 32);
  v293 = v610;
  v294 = v609;
LABEL_134:
  if (v289)
  {
    *(void *)&long long v629 = (v289 - 1) & v289;
    v630 = v291;
LABEL_147:
    uint64_t v298 = v634;
    uint64_t v299 = *(void *)(v634 + 72);
    v300 = *(void (**)(void))(v634 + 16);
    v301 = v577;
    v300();
    v655 = *(void (***)(int64_t, uint64_t))(v298 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v655)(v301, 0, 1, v88);
    v653 = *(char **)(v298 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v653)(v301, 1, v88) == 1) {
      goto LABEL_216;
    }
    v659 = *v290;
    ((void (*)(char *, char *, uint64_t))v659)(v294, v301, v88);
    uint64_t v302 = 1 << *(unsigned char *)(v625 + 32);
    if (v302 < 64) {
      uint64_t v303 = ~(-1 << v302);
    }
    else {
      uint64_t v303 = -1;
    }
    unint64_t v304 = v303 & *(void *)(v625 + 56);
    int64_t v645 = (unint64_t)(v302 + 63) >> 6;
    uint64_t v642 = 2 * v299;
    swift_bridgeObjectRetain();
    int64_t v305 = 0;
    while (1)
    {
      if (v304)
      {
        unint64_t v306 = __clz(__rbit64(v304));
        uint64_t v307 = (v304 - 1) & v304;
        unint64_t v308 = v306 | (v305 << 6);
      }
      else
      {
        BOOL v284 = __OFADD__(v305++, 1);
        if (v284) {
          goto LABEL_376;
        }
        if (v305 >= v645)
        {
LABEL_132:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v655)(v292, 1, 1, v88);
LABEL_133:
          swift_release();
          uint64_t v225 = v644;
          v291 = v630;
          uint64_t v289 = v629;
          ((void (*)(char *, uint64_t))*v664)(v294, v88);
          goto LABEL_134;
        }
        unint64_t v309 = *((void *)v643 + v305);
        if (!v309)
        {
          int64_t v310 = v305 + 1;
          if (v305 + 1 >= v645) {
            goto LABEL_132;
          }
          unint64_t v309 = *((void *)v643 + v310);
          if (!v309)
          {
            int64_t v310 = v305 + 2;
            if (v305 + 2 >= v645) {
              goto LABEL_132;
            }
            unint64_t v309 = *((void *)v643 + v310);
            if (!v309)
            {
              int64_t v310 = v305 + 3;
              if (v305 + 3 >= v645) {
                goto LABEL_132;
              }
              unint64_t v309 = *((void *)v643 + v310);
              if (!v309)
              {
                while (1)
                {
                  int64_t v305 = v310 + 1;
                  if (__OFADD__(v310, 1)) {
                    goto LABEL_382;
                  }
                  if (v305 >= v645) {
                    goto LABEL_132;
                  }
                  unint64_t v309 = *((void *)v643 + v305);
                  ++v310;
                  if (v309) {
                    goto LABEL_166;
                  }
                }
              }
            }
          }
          int64_t v305 = v310;
        }
LABEL_166:
        uint64_t v307 = (v309 - 1) & v309;
        unint64_t v308 = __clz(__rbit64(v309)) + (v305 << 6);
      }
      ((void (*)(char *, unint64_t, uint64_t))v300)(v292, *(void *)(v625 + 48) + v308 * v299, v88);
      ((void (*)(char *, void, uint64_t, uint64_t))v655)(v292, 0, 1, v88);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v653)(v292, 1, v88) == 1) {
        goto LABEL_133;
      }
      v649 = (void (**)(uint64_t, void, uint64_t, uint64_t))v307;
      ((void (*)(char *, char *, uint64_t))v659)(v293, v292, v88);
      sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      if (sub_25436CBB0())
      {
        ((void (*)(char *, uint64_t))*v664)(v293, v88);
        v292 = v621;
        goto LABEL_153;
      }
      v647 = (void *)v305;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AF8);
      unint64_t v311 = (*(unsigned __int8 *)(v634 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v634 + 80);
      uint64_t v312 = swift_allocObject();
      *(_OWORD *)(v312 + 16) = v641;
      int64_t v648 = v312;
      v313 = (void (**)(char *, uint64_t, uint64_t))(v312 + v311);
      ((void (*)(void, char *, uint64_t))v300)(v313, v294, v88);
      v652 = v313;
      ((void (*)(char *, char *, uint64_t))v300)((char *)v313 + v299, v293, v88);
      int64_t v657 = sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      v314 = (void *)sub_25436CF60();
      int v315 = 0;
      uint64_t v316 = 0;
      uint64_t v317 = (uint64_t)v662;
      v318 = v651;
      while (1)
      {
        int v319 = v315;
        ((void (*)(char *, char *, uint64_t))v300)(v318, (char *)v652 + v316 * v299, v88);
        ((void (*)(char *, void, uint64_t, uint64_t))v655)(v318, 0, 1, v88);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v653)(v318, 1, v88) == 1) {
          break;
        }
        LODWORD(v660) = v319;
        ((void (*)(void *, char *, uint64_t))v659)(v663, v318, v88);
        swift_bridgeObjectRetain();
        uint64_t v320 = sub_25436CB40();
        uint64_t v321 = -1 << *((unsigned char *)v314 + 32);
        unint64_t v322 = v320 & ~v321;
        if ((*(void *)((char *)v314 + ((v322 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v322))
        {
          uint64_t v323 = ~v321;
          while (1)
          {
            ((void (*)(uint64_t, unint64_t, uint64_t))v300)(v317, v314[6] + v322 * v299, v88);
            char v324 = sub_25436CBB0();
            uint64_t v325 = v317;
            v326 = (void (*)(void *, uint64_t))*v664;
            ((void (*)(uint64_t, uint64_t))*v664)(v325, v88);
            if (v324) {
              break;
            }
            unint64_t v322 = (v322 + 1) & v323;
            uint64_t v317 = (uint64_t)v662;
            if (((*(void *)((char *)v314 + ((v322 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v322) & 1) == 0) {
              goto LABEL_177;
            }
          }
          swift_bridgeObjectRelease();
          v326(v663, v88);
          uint64_t v317 = (uint64_t)v662;
          v290 = (void (**)(char *))v654;
        }
        else
        {
LABEL_177:
          swift_bridgeObjectRelease();
          int v327 = swift_isUniquelyReferenced_nonNull_native();
          ((void (*)(char *, void *, uint64_t))v300)(v661, v663, v88);
          v666 = v314;
          if (v314[3] <= v314[2])
          {
            if (v327) {
              sub_2542F666C();
            }
            else {
              sub_2542F891C();
            }
            v328 = v666;
            uint64_t v329 = sub_25436CB40();
            uint64_t v330 = -1 << *((unsigned char *)v328 + 32);
            unint64_t v322 = v329 & ~v330;
            if ((*(void *)((char *)v328 + ((v322 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v322))
            {
              uint64_t v331 = ~v330;
              do
              {
                ((void (*)(uint64_t, unint64_t, uint64_t))v300)(v317, v328[6] + v322 * v299, v88);
                char v332 = sub_25436CBB0();
                ((void (*)(uint64_t, uint64_t))*v664)(v317, v88);
                if (v332) {
                  goto LABEL_394;
                }
                unint64_t v322 = (v322 + 1) & v331;
              }
              while (((*(void *)((char *)v328 + ((v322 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v322) & 1) != 0);
            }
          }
          else if ((v327 & 1) == 0)
          {
            sub_2542F7BF0();
          }
          v314 = v666;
          *(void *)((char *)v666 + ((v322 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v322;
          unint64_t v333 = v314[6] + v322 * v299;
          v290 = (void (**)(char *))v654;
          ((void (*)(unint64_t, char *, uint64_t))v659)(v333, v661, v88);
          uint64_t v334 = v314[2];
          BOOL v284 = __OFADD__(v334, 1);
          uint64_t v335 = v334 + 1;
          if (v284) {
            goto LABEL_215;
          }
          v314[2] = v335;
          swift_bridgeObjectRelease();
          ((void (*)(void *, uint64_t))*v664)(v663, v88);
        }
        int v315 = 1;
        uint64_t v316 = 1;
        v318 = v651;
        if (v660)
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v655)(v651, 1, 1, v88);
          break;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v336 = v638;
      if (!*(void *)(*(void *)v646 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_254351928((uint64_t)v314);
      char v338 = v337;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v338 & 1) == 0) {
        break;
      }
      v293 = v610;
      ((void (*)(char *, uint64_t))*v664)(v610, v88);
      swift_bridgeObjectRelease();
LABEL_204:
      v292 = v621;
      v294 = v609;
      int64_t v305 = (int64_t)v647;
LABEL_153:
      unint64_t v304 = (unint64_t)v649;
    }
    v339 = (void *)v650[2];
    uint64_t v341 = v339[4];
    uint64_t v340 = v339[5];
    uint64_t v342 = v339[3];
    uint64_t v343 = (uint64_t)v636;
    (*v640)(v636, v637, v336);
    uint64_t v344 = v336;
    v345 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v639;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v639)(v343, 0, 1, v344);
    type metadata accessor for DKSmoothingFilter();
    uint64_t v346 = swift_allocObject();
    *(_OWORD *)(v346 + 48) = v631;
    uint64_t v347 = v346 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v345(v346 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v344);
    uint64_t v348 = v346 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(void *)uint64_t v348 = 0;
    *(unsigned char *)(v348 + 8) = 1;
    uint64_t v349 = v346 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(void *)uint64_t v349 = 0;
    *(unsigned char *)(v349 + 8) = 1;
    *(unsigned char *)(v346 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(void *)(v346 + 16) = v342;
    *(void *)(v346 + 24) = v341;
    *(_WORD *)(v346 + 32) = 256;
    *(void *)(v346 + 40) = v340;
    sub_254286154(v343, v347, &qword_269DD7A40);
    *(void *)uint64_t v348 = 0;
    *(unsigned char *)(v348 + 8) = 1;
    *(void *)uint64_t v349 = 0;
    *(unsigned char *)(v349 + 8) = 1;
    v350 = v650;
    char v351 = swift_isUniquelyReferenced_nonNull_native();
    v666 = (void *)v350[6];
    v352 = v666;
    v350[6] = 0x8000000000000000;
    unint64_t v354 = sub_254351928((uint64_t)v314);
    uint64_t v355 = v352[2];
    BOOL v356 = (v353 & 1) == 0;
    uint64_t v357 = v355 + v356;
    if (__OFADD__(v355, v356)) {
      goto LABEL_377;
    }
    if (v352[3] >= v357)
    {
      v290 = (void (**)(char *))v654;
      if (v351) {
        goto LABEL_199;
      }
      char v358 = v353;
      sub_25429C25C();
    }
    else
    {
      char v358 = v353;
      sub_254298BC4(v357, v351);
      unint64_t v359 = sub_254351928((uint64_t)v314);
      v290 = (void (**)(char *))v654;
      if ((v358 & 1) != (v360 & 1)) {
        goto LABEL_395;
      }
      unint64_t v354 = v359;
    }
    char v353 = v358;
LABEL_199:
    v361 = v666;
    uint64_t v362 = 8 * v354;
    if (v353)
    {
      uint64_t v363 = v666[7];
      swift_release();
      *(void *)(v363 + v362) = v346;
    }
    else
    {
      v666[(v354 >> 6) + 8] |= 1 << v354;
      *(void *)(v361[6] + 8 * v354) = v314;
      *(void *)(v361[7] + 8 * v354) = v346;
      uint64_t v364 = v361[2];
      BOOL v284 = __OFADD__(v364, 1);
      uint64_t v365 = v364 + 1;
      if (v284) {
        goto LABEL_381;
      }
      v361[2] = v365;
      swift_bridgeObjectRetain();
    }
    *(void *)uint64_t v646 = v361;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v293 = v610;
    ((void (*)(char *, uint64_t))*v664)(v610, v88);
    goto LABEL_204;
  }
  BOOL v284 = __OFADD__(v291, 1);
  v295 = v291 + 1;
  if (v284) {
    goto LABEL_388;
  }
  if ((uint64_t)v295 >= v624) {
    goto LABEL_217;
  }
  uint64_t v296 = *((void *)v643 + (void)v295);
  if (v296)
  {
LABEL_146:
    *(void *)&long long v629 = (v296 - 1) & v296;
    v630 = v295;
    goto LABEL_147;
  }
  v297 = v295 + 1;
  if ((uint64_t)(v295 + 1) >= v624) {
    goto LABEL_217;
  }
  uint64_t v296 = *((void *)v643 + (void)v297);
  if (v296) {
    goto LABEL_145;
  }
  v297 = v295 + 2;
  if ((uint64_t)(v295 + 2) >= v624) {
    goto LABEL_217;
  }
  uint64_t v296 = *((void *)v643 + (void)v297);
  if (v296) {
    goto LABEL_145;
  }
  v297 = v295 + 3;
  if ((uint64_t)(v295 + 3) >= v624) {
    goto LABEL_217;
  }
  uint64_t v296 = *((void *)v643 + (void)v297);
  if (v296)
  {
LABEL_145:
    v295 = v297;
    goto LABEL_146;
  }
  while (1)
  {
    v295 = v297 + 1;
    if (__OFADD__(v297, 1)) {
      goto LABEL_392;
    }
    if ((uint64_t)v295 >= v624) {
      break;
    }
    uint64_t v296 = *((void *)v643 + (void)v295);
    ++v297;
    if (v296) {
      goto LABEL_146;
    }
  }
LABEL_217:
  v655 = *(void (***)(int64_t, uint64_t))v656;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v655)(v577, 1, 1, v88);
  swift_release();
LABEL_218:
  v366 = (void **)v646;
  uint64_t v367 = v570;
  v368 = (void (**)(char *, uint64_t, uint64_t))v640;
  uint64_t v369 = *(void *)v646;
  uint64_t v370 = *(void *)(*(void *)v646 + 64);
  v661 = (char *)(*(void *)v646 + 64);
  uint64_t v371 = 1 << *(unsigned char *)(v369 + 32);
  uint64_t v372 = -1;
  if (v371 < 64) {
    uint64_t v372 = ~(-1 << v371);
  }
  unint64_t v373 = v372 & v370;
  v663 = (void *)((unint64_t)(v371 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v374 = 0;
  if (!v373) {
    goto LABEL_222;
  }
  while (2)
  {
    unint64_t v375 = __clz(__rbit64(v373));
    v373 &= v373 - 1;
    unint64_t v376 = v375 | (v374 << 6);
LABEL_233:
    uint64_t v380 = *(void *)(*(void *)(v369 + 48) + 8 * v376);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v381 = *(void *)(sub_2542FC904(v380, v367) + 16);
    swift_release();
    if (v381)
    {
      swift_bridgeObjectRelease();
      if (v373) {
        continue;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v382 = v366;
      unint64_t v383 = sub_254351928(v380);
      char v385 = v384;
      swift_bridgeObjectRelease();
      if (v385)
      {
        char v386 = swift_isUniquelyReferenced_nonNull_native();
        v387 = *v382;
        v666 = *v382;
        *v382 = (void *)0x8000000000000000;
        if ((v386 & 1) == 0)
        {
          sub_25429C25C();
          v387 = v666;
        }
        swift_bridgeObjectRelease();
        sub_2542F9AAC(v383, (uint64_t)v387);
        *v382 = v387;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v225 = v644;
        v366 = v382;
        uint64_t v367 = v570;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v225 = v644;
        v366 = v382;
      }
      v368 = (void (**)(char *, uint64_t, uint64_t))v640;
      if (v373) {
        continue;
      }
    }
    break;
  }
LABEL_222:
  BOOL v284 = __OFADD__(v374++, 1);
  if (v284) {
    goto LABEL_385;
  }
  if (v374 >= (uint64_t)v663)
  {
    uint64_t v388 = v638;
    uint64_t v389 = v605;
    v378 = (void (**)(char *))v654;
    goto LABEL_249;
  }
  unint64_t v377 = *(void *)&v661[8 * v374];
  v378 = (void (**)(char *))v654;
  if (v377) {
    goto LABEL_232;
  }
  uint64_t v379 = v374 + 1;
  if (v374 + 1 >= (uint64_t)v663) {
    goto LABEL_248;
  }
  unint64_t v377 = *(void *)&v661[8 * v379];
  if (v377) {
    goto LABEL_231;
  }
  uint64_t v379 = v374 + 2;
  if (v374 + 2 >= (uint64_t)v663) {
    goto LABEL_248;
  }
  unint64_t v377 = *(void *)&v661[8 * v379];
  if (v377) {
    goto LABEL_231;
  }
  uint64_t v379 = v374 + 3;
  if (v374 + 3 < (uint64_t)v663)
  {
    unint64_t v377 = *(void *)&v661[8 * v379];
    if (!v377)
    {
      while (1)
      {
        uint64_t v374 = v379 + 1;
        if (__OFADD__(v379, 1)) {
          break;
        }
        if (v374 >= (uint64_t)v663) {
          goto LABEL_248;
        }
        unint64_t v377 = *(void *)&v661[8 * v374];
        ++v379;
        if (v377) {
          goto LABEL_232;
        }
      }
LABEL_389:
      __break(1u);
      goto LABEL_390;
    }
LABEL_231:
    uint64_t v374 = v379;
LABEL_232:
    unint64_t v373 = (v377 - 1) & v377;
    unint64_t v376 = __clz(__rbit64(v377)) + (v374 << 6);
    goto LABEL_233;
  }
LABEL_248:
  uint64_t v388 = v638;
  uint64_t v389 = v605;
LABEL_249:
  swift_bridgeObjectRelease();
  swift_release();
  v390 = *v366;
  uint64_t v391 = (*v366)[8];
  v653 = (char *)(*v366 + 8);
  uint64_t v392 = 1 << *((unsigned char *)v390 + 32);
  uint64_t v393 = -1;
  if (v392 < 64) {
    uint64_t v393 = ~(-1 << v392);
  }
  unint64_t v394 = v393 & v391;
  int64_t v657 = (unint64_t)(v392 + 63) >> 6;
  v659 = (void (*)(char *))(v568 + 48);
  v652 = (void (**)(char *, uint64_t, uint64_t))(v568 + 32);
  v651 = (char *)(v568 + 8);
  uint64_t v660 = (uint64_t)v390;
  swift_bridgeObjectRetain();
  v395 = 0;
  while (2)
  {
    if (v394)
    {
      v661 = (char *)((v394 - 1) & v394);
      v663 = v395;
      unint64_t v396 = __clz(__rbit64(v394)) | ((void)v395 << 6);
      goto LABEL_267;
    }
    BOOL v284 = __OFADD__(v395, 1);
    int64_t v397 = (int64_t)v395 + 1;
    if (v284) {
      goto LABEL_387;
    }
    if (v397 < v657)
    {
      unint64_t v398 = *(void *)&v653[8 * v397];
      if (!v398)
      {
        int64_t v399 = v397 + 1;
        if (v397 + 1 >= v657) {
          break;
        }
        unint64_t v398 = *(void *)&v653[8 * v399];
        if (!v398)
        {
          int64_t v399 = v397 + 2;
          if (v397 + 2 >= v657) {
            break;
          }
          unint64_t v398 = *(void *)&v653[8 * v399];
          if (!v398)
          {
            int64_t v399 = v397 + 3;
            if (v397 + 3 >= v657) {
              break;
            }
            unint64_t v398 = *(void *)&v653[8 * v399];
            if (!v398)
            {
              while (1)
              {
                int64_t v397 = v399 + 1;
                if (__OFADD__(v399, 1)) {
                  break;
                }
                if (v397 >= v657) {
                  goto LABEL_295;
                }
                unint64_t v398 = *(void *)&v653[8 * v397];
                ++v399;
                if (v398) {
                  goto LABEL_266;
                }
              }
LABEL_390:
              __break(1u);
              goto LABEL_391;
            }
          }
        }
        int64_t v397 = v399;
      }
LABEL_266:
      v661 = (char *)((v398 - 1) & v398);
      v663 = (void *)v397;
      unint64_t v396 = __clz(__rbit64(v398)) + (v397 << 6);
LABEL_267:
      uint64_t v400 = 8 * v396;
      uint64_t v401 = *(void *)(*(void *)(v660 + 48) + v400);
      uint64_t v402 = *(void *)(*(void *)(v660 + 56) + v400);
      uint64_t v403 = sub_254354CD4((uint64_t)v669);
      if (!v403)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_282;
      }
      uint64_t v404 = v403;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v405 = swift_bridgeObjectRetain();
      sub_2542FD50C(v405, v401);
      char v407 = v406;
      swift_bridgeObjectRelease();
      if (v407) {
        goto LABEL_273;
      }
      if (v404 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v388 = v638;
        goto LABEL_281;
      }
      uint64_t v408 = swift_bridgeObjectRetain();
      sub_2542FD50C(v408, v401);
      char v410 = v409;
      swift_bridgeObjectRelease();
      if (v410)
      {
LABEL_273:
        uint64_t v388 = v638;
        uint64_t v389 = v605;
LABEL_274:
        swift_bridgeObjectRelease();
        double v411 = 1.0;
        uint64_t v225 = v644;
LABEL_283:
        uint64_t v414 = (uint64_t)v636;
        (*v368)(v636, v637, v388);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v639)(v414, 0, 1, v388);
        sub_25435D340(0, 1, v414, v411);
        sub_25425042C(v414, &qword_269DD7A40);
LABEL_284:
        uint64_t v415 = v602;
        sub_2542503C8(v402 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v602, &qword_269DD7A40);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v659)(v415, 1, v388) == 1)
        {
          swift_release();
          swift_bridgeObjectRelease();
          sub_25425042C(v415, &qword_269DD7A40);
        }
        else
        {
          v416 = v591;
          (*v652)(v591, v415, v388);
          sub_25436C700();
          if (*(double *)(v650[2] + 16) >= v417)
          {
            (*(void (**)(char *, uint64_t))v651)(v416, v388);
            swift_release();
          }
          else
          {
            sub_2542F9318(v401);
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))v651)(v416, v388);
          }
          swift_bridgeObjectRelease();
        }
        v395 = v663;
        unint64_t v394 = (unint64_t)v661;
        continue;
      }
      uint64_t v388 = v638;
      if (v404 == 2)
      {
        swift_bridgeObjectRelease();
LABEL_281:
        uint64_t v389 = v605;
LABEL_282:
        uint64_t v412 = v625;
        swift_bridgeObjectRetain();
        uint64_t v413 = *(void *)(sub_2542FC904(v401, v412) + 16);
        swift_release();
        double v411 = 0.0;
        uint64_t v225 = v644;
        if (v413 == 2) {
          goto LABEL_283;
        }
        goto LABEL_284;
      }
      uint64_t v418 = 6;
      while (1)
      {
        uint64_t v419 = v418 - 3;
        if (__OFADD__(v418 - 4, 1)) {
          break;
        }
        uint64_t v420 = swift_bridgeObjectRetain();
        sub_2542FD50C(v420, v401);
        char v422 = v421;
        swift_bridgeObjectRelease();
        if (v422)
        {
          uint64_t v388 = v638;
          uint64_t v389 = v605;
          v368 = (void (**)(char *, uint64_t, uint64_t))v640;
          goto LABEL_274;
        }
        ++v418;
        uint64_t v388 = v638;
        uint64_t v389 = v605;
        if (v419 == v404)
        {
          swift_bridgeObjectRelease();
          v368 = (void (**)(char *, uint64_t, uint64_t))v640;
          goto LABEL_282;
        }
      }
LABEL_383:
      __break(1u);
LABEL_384:
      __break(1u);
LABEL_385:
      __break(1u);
LABEL_386:
      __break(1u);
LABEL_387:
      __break(1u);
LABEL_388:
      __break(1u);
      goto LABEL_389;
    }
    break;
  }
LABEL_295:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v423 = (uint64_t)v650;
  double v424 = *(double *)(v650[2] + 56);
  swift_retain();
  uint64_t v425 = sub_2542BF998(v569, v389, v423, v424);
  uint64_t v668 = MEMORY[0x263F8EE80];
  uint64_t v426 = MEMORY[0x263F8EE88];
  uint64_t v667 = MEMORY[0x263F8EE88];
  uint64_t v427 = sub_25427DF2C(0);
  if (sub_254354CD4(v427)) {
    uint64_t v426 = sub_2542FEB3C(v427);
  }
  swift_bridgeObjectRelease();
  v650[5] = v426;
  swift_bridgeObjectRelease();
  uint64_t v428 = sub_254354CD4(v425);
  int64_t v645 = v425;
  if (v428)
  {
    if (v428 < 1) {
      goto LABEL_393;
    }
    v659 = (void (*)(char *))(v587 + *(int *)(v588 + 48));
    int64_t v657 = *(int *)(v588 + 64);
    int64_t v648 = (int64_t)(v650 + 3);
    v647 = v650 + 4;
    uint64_t v429 = v425 + ((*(unsigned __int8 *)(v565 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v565 + 80));
    v653 = (char *)(v566 + 48);
    v663 = (void *)(v616 + 48);
    v652 = *(void (***)(char *, uint64_t, uint64_t))(v565 + 72);
    v651 = (char *)(v620 + 56);
    v649 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v566 + 56);
    do
    {
      v661 = (char *)v428;
      uint64_t v660 = v429;
      uint64_t v435 = v587;
      sub_2542503C8(v429, v587, &qword_269DD8038);
      uint64_t v436 = v588;
      uint64_t v437 = v599;
      uint64_t v438 = v599 + *(int *)(v588 + 48);
      double v439 = *(double *)(v435 + v657);
      uint64_t v440 = *(int *)(v588 + 64);
      sub_25425E0DC(v435, v599, &qword_269DD8040);
      sub_25425E0DC((uint64_t)v659, v438, &qword_269DD8040);
      *(double *)(v437 + v440) = v439;
      uint64_t v441 = v579;
      uint64_t v442 = v579 + *(int *)(v436 + 48);
      uint64_t v443 = *(int *)(v436 + 64);
      sub_2542503C8(v437, v579, &qword_269DD8040);
      sub_2542503C8(v438, v442, &qword_269DD8040);
      *(double *)(v441 + v443) = v439;
      uint64_t v444 = v608;
      sub_25425E0DC(v441, v608, &qword_269DD8040);
      sub_25425042C(v442, &qword_269DD8040);
      uint64_t v445 = v441 + *(int *)(v436 + 48);
      uint64_t v446 = *(int *)(v436 + 64);
      sub_2542503C8(v437, v441, &qword_269DD8040);
      sub_2542503C8(v438, v445, &qword_269DD8040);
      *(double *)(v441 + v446) = v439;
      uint64_t v447 = v603;
      sub_25425E0DC(v445, v603, &qword_269DD8040);
      sub_25425042C(v441, &qword_269DD8040);
      uint64_t v448 = v584;
      sub_2542F4A88(v444, v447, v584);
      uint64_t v449 = v600;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v653)(v448, 1, v600) == 1)
      {
        sub_25425042C(v448, &qword_269DD9380);
        v450 = v640;
        uint64_t v451 = v638;
        (*v640)(v225, v637, v638);
        sub_25436C7F0();
        v452 = v665;
      }
      else
      {
        uint64_t v453 = v448;
        uint64_t v454 = v573;
        sub_2542FF2AC(v453, v573, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2542FF2AC(v454, v225, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        uint64_t v451 = v638;
        v452 = v665;
        v450 = v640;
      }
      uint64_t v455 = v225 + *(int *)(v449 + 20);
      uint64_t v456 = v225;
      v457 = *(void (**)(char *, uint64_t, uint64_t))v452;
      v458 = v635;
      (*(void (**)(char *, uint64_t, uint64_t))v452)(v635, v455, v88);
      uint64_t v459 = (uint64_t)v662;
      sub_2542688D0((uint64_t)v662, v458);
      ((void (*)(uint64_t, uint64_t))*v664)(v459, v88);
      (*v450)(v598, v456, v451);
      uint64_t v460 = (uint64_t)v596;
      v457(v596, v455, v88);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v655)(v460, 0, 1, v88);
      uint64_t v461 = v580;
      sub_2542503C8(v608, v580, &qword_269DD8040);
      v462 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v663;
      uint64_t v463 = v628;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v663)(v461, 1, v628) == 1)
      {
        sub_25425042C(v461, &qword_269DD8040);
        uint64_t v464 = 1;
        uint64_t v465 = (uint64_t)v581;
        uint64_t v466 = (uint64_t)v597;
      }
      else
      {
        uint64_t v466 = (uint64_t)v597;
        v457(v597, v461 + *(int *)(v463 + 20), v88);
        sub_2542FF22C(v461, type metadata accessor for DKPersonGroupFilter.Track);
        uint64_t v464 = 0;
        uint64_t v465 = (uint64_t)v581;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v655)(v466, v464, 1, v88);
      sub_2542503C8(v603, v465, &qword_269DD8040);
      if (v462(v465, 1, v463) == 1)
      {
        sub_25425042C(v465, &qword_269DD8040);
        uint64_t v467 = 1;
        uint64_t v468 = v463;
        uint64_t v469 = (uint64_t)v578;
      }
      else
      {
        uint64_t v469 = (uint64_t)v578;
        v457(v578, v465 + *(int *)(v463 + 20), v88);
        sub_2542FF22C(v465, type metadata accessor for DKPersonGroupFilter.Track);
        uint64_t v467 = 0;
        uint64_t v468 = v463;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v655)(v469, v467, 1, v88);
      uint64_t v470 = sub_25427DF14(0);
      uint64_t v471 = v595;
      sub_2542EC498(-1, v598, (uint64_t)v596, (uint64_t)v597, v469, v470, v595, 1.0 - v439);
      uint64_t v472 = (uint64_t)v662;
      v457(v662, v455, v88);
      uint64_t v473 = v586;
      sub_2542FF1C4(v471, v586, type metadata accessor for DKPersonGroup);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v651)(v473, 0, 1, v627);
      sub_2542EB74C(v473, v472);
      uint64_t v474 = v582;
      sub_2542503C8(v608, v582, &qword_269DD8040);
      if (v462(v474, 1, v468) == 1)
      {
        sub_25425042C(v474, &qword_269DD8040);
        uint64_t v475 = v600;
      }
      else
      {
        uint64_t v476 = v571;
        sub_2542FF2AC(v474, v571, type metadata accessor for DKPersonGroupFilter.Track);
        v457((char *)v472, v476 + *(int *)(v468 + 20), v88);
        uint64_t v477 = v585;
        sub_2542FF1C4(v644, v585, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        uint64_t v475 = v600;
        (*v649)(v477, 0, 1, v600);
        sub_2542EB9BC(v477, v472);
        uint64_t v468 = v628;
        sub_2542FF22C(v476, type metadata accessor for DKPersonGroupFilter.Track);
      }
      uint64_t v478 = v583;
      v378 = (void (**)(char *))v654;
      uint64_t v479 = v603;
      sub_2542503C8(v603, v583, &qword_269DD8040);
      if (v462(v478, 1, v468) == 1)
      {
        sub_2542FF22C(v595, type metadata accessor for DKPersonGroup);
        uint64_t v225 = v644;
        sub_2542FF22C(v644, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_25425042C(v479, &qword_269DD8040);
        sub_25425042C(v608, &qword_269DD8040);
        sub_25425042C(v599, &qword_269DD8038);
        uint64_t v433 = v478;
        v434 = &qword_269DD8040;
      }
      else
      {
        uint64_t v430 = v572;
        sub_2542FF2AC(v478, v572, type metadata accessor for DKPersonGroupFilter.Track);
        uint64_t v431 = (uint64_t)v662;
        v457(v662, v430 + *(int *)(v468 + 20), v88);
        uint64_t v225 = v644;
        uint64_t v432 = v585;
        sub_2542FF1C4(v644, v585, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        (*v649)(v432, 0, 1, v475);
        sub_2542EB9BC(v432, v431);
        sub_2542FF22C(v430, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2542FF22C(v595, type metadata accessor for DKPersonGroup);
        sub_2542FF22C(v225, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_25425042C(v479, &qword_269DD8040);
        sub_25425042C(v608, &qword_269DD8040);
        uint64_t v433 = v599;
        v434 = &qword_269DD8038;
      }
      sub_25425042C(v433, v434);
      uint64_t v429 = (uint64_t)v652 + v660;
      uint64_t v428 = (uint64_t)(v661 - 1);
    }
    while (v661 != (char *)1);
  }
  swift_bridgeObjectRelease();
  v480 = v650;
  uint64_t v481 = v650[8];
  uint64_t v482 = v667;
  swift_bridgeObjectRetain();
  uint64_t v483 = swift_bridgeObjectRetain();
  uint64_t v484 = sub_2542F466C(v483, v481);
  swift_bridgeObjectRelease();
  v480[10] = v484;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v485 = swift_bridgeObjectRetain();
  uint64_t v486 = sub_2542F466C(v485, v482);
  swift_bridgeObjectRelease();
  v480[9] = v486;
  swift_bridgeObjectRelease();
  v480[8] = v482;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v576)
  {
    swift_bridgeObjectRelease();
    goto LABEL_371;
  }
  uint64_t v487 = v616;
  v649 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v604
                                                                 + ((*(unsigned __int8 *)(v487 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v487 + 80)));
  v653 = (char *)(v620 + 48);
  uint64_t v488 = swift_bridgeObjectRetain();
  unint64_t v489 = 0;
  uint64_t v490 = (uint64_t)v618;
  while (1)
  {
    if (*(void *)(v488 + 16) <= v489) {
      goto LABEL_386;
    }
    uint64_t v491 = *(void *)(v487 + 72);
    v651 = (char *)v489;
    v492 = v378;
    uint64_t v493 = v490;
    uint64_t v494 = v607;
    uint64_t v495 = sub_2542FF1C4((uint64_t)v649 + v491 * v489, v607, type metadata accessor for DKPersonGroupFilter.Track);
    uint64_t v496 = *(void *)v646;
    MEMORY[0x270FA5388](v495);
    uint64_t v497 = v575;
    *(&v565 - 2) = v494;
    *(&v565 - 1) = v497;
    swift_bridgeObjectRetain();
    uint64_t v498 = v594;
    uint64_t v499 = sub_2542FAA30((uint64_t)sub_2542FF28C, (uint64_t)(&v565 - 4), v496);
    swift_bridgeObjectRelease();
    uint64_t v500 = v627;
    v501 = (void *)sub_2542EB428(v499);
    uint64_t v594 = v498;
    v502 = v622;
    uint64_t v490 = v493;
    v378 = v492;
    v503 = (uint64_t *)&unk_269DD9388;
    swift_release();
    if (v501) {
      break;
    }
LABEL_319:
    unint64_t v489 = (unint64_t)(v651 + 1);
    sub_2542FF22C(v607, type metadata accessor for DKPersonGroupFilter.Track);
    uint64_t v488 = v604;
    uint64_t v487 = v616;
    if (v489 == v576)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_371:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v557 = swift_bridgeObjectRetain();
      uint64_t v558 = sub_2543524B8(v557);
      swift_bridgeObjectRelease();
      v559 = v650;
      v650[7] = v558;
      swift_bridgeObjectRelease();
      uint64_t v560 = v559[8];
      uint64_t v561 = v559[9];
      uint64_t v562 = v559[10];
      v563 = v567;
      void *v567 = v559[7];
      v563[1] = v560;
      v563[2] = v561;
      v563[3] = v562;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_release();
  uint64_t v504 = *(void *)(v668 + 64);
  v652 = (void (**)(char *, uint64_t, uint64_t))(v668 + 64);
  uint64_t v505 = 1 << *(unsigned char *)(v668 + 32);
  if (v505 < 64) {
    uint64_t v506 = ~(-1 << v505);
  }
  else {
    uint64_t v506 = -1;
  }
  unint64_t v507 = v506 & v504;
  v663 = v501;
  v661 = (char *)(v501 + 7);
  v655 = (void (**)(int64_t, uint64_t))((unint64_t)(v505 + 63) >> 6);
  int64_t v648 = (int64_t)v655 - 1;
  uint64_t v656 = v668;
  swift_bridgeObjectRetain();
  int64_t v657 = 0;
  uint64_t v508 = (uint64_t)v502;
  if (v507)
  {
LABEL_326:
    uint64_t v509 = v508;
    v510 = v503;
    v511 = v378;
    uint64_t v512 = v490;
    uint64_t v660 = (v507 - 1) & v507;
    unint64_t v513 = __clz(__rbit64(v507)) | (v657 << 6);
LABEL_327:
    uint64_t v514 = v656;
    uint64_t v515 = (uint64_t)v623;
    (*(void (**)(char *, unint64_t, uint64_t))(v634 + 16))(v623, *(void *)(v656 + 48) + *(void *)(v634 + 72) * v513, v88);
    uint64_t v516 = *(void *)(v514 + 56) + *(void *)(v620 + 72) * v513;
    v517 = v510;
    uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(v510);
    sub_2542FF1C4(v516, v515 + *(int *)(v518 + 48), type metadata accessor for DKPersonGroup);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v518 - 8) + 56))(v515, 0, 1, v518);
    uint64_t v500 = v627;
    uint64_t v490 = v512;
    v378 = v511;
    v503 = v517;
    uint64_t v508 = v509;
    goto LABEL_348;
  }
  while (2)
  {
    int64_t v520 = v657 + 1;
    if (__OFADD__(v657, 1)) {
      goto LABEL_375;
    }
    uint64_t v515 = (uint64_t)v623;
    if (v520 >= (uint64_t)v655) {
      goto LABEL_347;
    }
    unint64_t v521 = (unint64_t)v652[v520];
    if (v521) {
      goto LABEL_333;
    }
    int64_t v522 = v657 + 2;
    ++v657;
    if (v520 + 1 >= (uint64_t)v655) {
      goto LABEL_347;
    }
    unint64_t v521 = (unint64_t)v652[v522];
    if (v521) {
      goto LABEL_336;
    }
    int64_t v657 = v520 + 1;
    if (v520 + 2 >= (uint64_t)v655) {
      goto LABEL_347;
    }
    unint64_t v521 = (unint64_t)v652[v520 + 2];
    if (v521)
    {
      v520 += 2;
      goto LABEL_333;
    }
    int64_t v522 = v520 + 3;
    int64_t v657 = v520 + 2;
    if (v520 + 3 >= (uint64_t)v655)
    {
LABEL_347:
      uint64_t v523 = __swift_instantiateConcreteTypeFromMangledName(v503);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v523 - 8) + 56))(v515, 1, 1, v523);
      uint64_t v660 = 0;
LABEL_348:
      uint64_t v524 = v632;
      sub_25425E0DC(v515, v632, &qword_269DD9370);
      uint64_t v525 = __swift_instantiateConcreteTypeFromMangledName(v503);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v525 - 8) + 48))(v524, 1, v525) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_319;
      }
      uint64_t v526 = v632 + *(int *)(v525 + 48);
      v527 = *v378;
      (*v378)(v633);
      uint64_t v528 = v526;
      uint64_t v529 = v626;
      sub_2542FF2AC(v528, v626, type metadata accessor for DKPersonGroup);
      sub_2542503C8(v529 + *(int *)(v500 + 32), v508, &qword_269DD7F58);
      v530 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v658;
      int v531 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))v658)(v508, 1, v88);
      v659 = v527;
      if (v531 == 1)
      {
        sub_25425042C(v508, &qword_269DD7F58);
      }
      else
      {
        v532 = v611;
        ((void (*)(char *, uint64_t, uint64_t))v527)(v611, v508, v88);
        v533 = v663;
        if (v663[2])
        {
          sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
          uint64_t v534 = sub_25436CB40();
          uint64_t v535 = -1 << *((unsigned char *)v533 + 32);
          unint64_t v536 = v534 & ~v535;
          if ((*(void *)&v661[(v536 >> 3) & 0xFFFFFFFFFFFFFF8] >> v536))
          {
            uint64_t v537 = ~v535;
            uint64_t v538 = *(void *)(v634 + 72);
            v539 = *(void (**)(char *, unint64_t, uint64_t))(v634 + 16);
            while (1)
            {
              uint64_t v540 = (uint64_t)v662;
              v539(v662, v533[6] + v538 * v536, v88);
              sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
              char v541 = sub_25436CBB0();
              v542 = (void (*)(char *, uint64_t))*v664;
              ((void (*)(uint64_t, uint64_t))*v664)(v540, v88);
              if (v541) {
                break;
              }
              unint64_t v536 = (v536 + 1) & v537;
              v533 = v663;
              if (((*(void *)&v661[(v536 >> 3) & 0xFFFFFFFFFFFFFF8] >> v536) & 1) == 0) {
                goto LABEL_356;
              }
            }
            v551 = v593;
            v552 = v633;
            v539(v593, (unint64_t)v633, v88);
            v553 = sub_2542F4920(&v666);
            uint64_t v500 = v627;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v653)(v554, 1, v627))
            {
              ((void (*)(void **, void))v553)(&v666, 0);
              v542(v551, v88);
              v542(v532, v88);
              sub_2542FF22C(v626, type metadata accessor for DKPersonGroup);
              v555 = v552;
            }
            else
            {
              uint64_t v556 = (uint64_t)v662;
              v539(v662, v607 + *(int *)(v628 + 20), v88);
              sub_2542EB2A0(v556);
              ((void (*)(void **, void))v553)(&v666, 0);
              v542(v551, v88);
              v542(v532, v88);
              sub_2542FF22C(v626, type metadata accessor for DKPersonGroup);
              v555 = v633;
            }
            v542(v555, v88);
            uint64_t v508 = (uint64_t)v622;
            v378 = (void (**)(char *))v654;
            v503 = (uint64_t *)&unk_269DD9388;
            uint64_t v490 = (uint64_t)v618;
LABEL_359:
            unint64_t v507 = v660;
            if (v660) {
              goto LABEL_326;
            }
            continue;
          }
        }
LABEL_356:
        ((void (*)(char *, uint64_t))*v664)(v532, v88);
        uint64_t v490 = (uint64_t)v618;
        uint64_t v508 = (uint64_t)v622;
        uint64_t v500 = v627;
        uint64_t v529 = v626;
        v503 = (uint64_t *)&unk_269DD9388;
      }
      sub_2542503C8(v529 + *(int *)(v500 + 36), v490, &qword_269DD7F58);
      if (v530(v490, 1, v88) == 1)
      {
        sub_2542FF22C(v529, type metadata accessor for DKPersonGroup);
        ((void (*)(char *, uint64_t))*v664)(v633, v88);
        sub_25425042C(v490, &qword_269DD7F58);
        v378 = (void (**)(char *))v654;
        goto LABEL_359;
      }
      uint64_t v543 = (uint64_t)v617;
      v378 = (void (**)(char *))v654;
      ((void (*)(char *, uint64_t, uint64_t))v659)(v617, v490, v88);
      if (sub_254351228(v543, (uint64_t)v663))
      {
        v544 = *(void (**)(char *, uint64_t, uint64_t))v665;
        v545 = v606;
        v546 = v633;
        (*(void (**)(char *, char *, uint64_t))v665)(v606, v633, v88);
        v547 = sub_2542F4920(&v666);
        uint64_t v500 = v627;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v653)(v548, 1, v627))
        {
          uint64_t v549 = (uint64_t)v662;
          v544(v662, v607 + *(int *)(v628 + 20), v88);
          v503 = (uint64_t *)&unk_269DD9388;
          sub_2542EB2A0(v549);
        }
        ((void (*)(void **, void))v547)(&v666, 0);
        v550 = (void (*)(char *, uint64_t))*v664;
        ((void (*)(char *, uint64_t))*v664)(v545, v88);
        v550(v617, v88);
        sub_2542FF22C(v626, type metadata accessor for DKPersonGroup);
        v550(v546, v88);
        v378 = (void (**)(char *))v654;
        uint64_t v490 = (uint64_t)v618;
      }
      else
      {
        v519 = (void (*)(char *, uint64_t))*v664;
        ((void (*)(uint64_t, uint64_t))*v664)(v543, v88);
        sub_2542FF22C(v529, type metadata accessor for DKPersonGroup);
        v519(v633, v88);
        uint64_t v500 = v627;
      }
      unint64_t v507 = v660;
      uint64_t v508 = (uint64_t)v622;
      if (v660) {
        goto LABEL_326;
      }
      continue;
    }
    break;
  }
  unint64_t v521 = (unint64_t)v652[v522];
  if (v521)
  {
LABEL_336:
    int64_t v520 = v522;
LABEL_333:
    uint64_t v509 = v508;
    v510 = v503;
    v511 = v378;
    uint64_t v512 = v490;
    uint64_t v660 = (v521 - 1) & v521;
    unint64_t v513 = __clz(__rbit64(v521)) + (v520 << 6);
    int64_t v657 = v520;
    goto LABEL_327;
  }
  while (1)
  {
    int64_t v520 = v522 + 1;
    if (__OFADD__(v522, 1)) {
      break;
    }
    if (v520 >= (uint64_t)v655)
    {
      int64_t v657 = v648;
      goto LABEL_347;
    }
    unint64_t v521 = (unint64_t)v652[v520];
    ++v522;
    if (v521) {
      goto LABEL_333;
    }
  }
LABEL_391:
  __break(1u);
LABEL_392:
  __break(1u);
LABEL_393:
  __break(1u);
LABEL_394:
  sub_25436D840();
  __break(1u);
LABEL_395:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7AE0);
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542F466C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_2542F9FE4(a1);
    return a2;
  }
  else
  {
    return sub_2542FA36C(a1, a2);
  }
}

BOOL sub_2542F46D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((sub_254351228(a3 + *(int *)(v7 + 20), v6) & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = *(void *)(sub_2542FC904(a4, v6) + 16);
  swift_release();
  return v8 != 0;
}

uint64_t (*sub_2542F4750(void *a1, char a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2542FAD60(v4, a2 & 1);
  return sub_2542F47B0;
}

uint64_t (*sub_2542F47B4(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2542FACD0(v4, a2);
  return sub_2542F47B0;
}

uint64_t (*sub_2542F4814(void *a1, char a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2542FAC3C(v4, a2 & 1);
  return sub_2542F47B0;
}

uint64_t (*sub_2542F4874(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2542FABA8(v4, a2);
  return sub_2542F47B0;
}

void sub_2542F48D4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

void (*sub_2542F4920(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_25436C800();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_2542FAE54(v2, (uint64_t)v6);
  return sub_2542F4A10;
}

void sub_2542F4A10(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_2542F4A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v120 = a3;
  v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a1;
  uint64_t v3 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v110 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v113 = (char *)&v107 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v118 = (uint64_t)&v107 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v119 = (uint64_t)&v107 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v112 = (uint64_t)&v107 - v13;
  MEMORY[0x270FA5388](v14);
  v127 = (char *)&v107 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v109 = (char *)&v107 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v108 = (uint64_t)&v107 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v107 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v26 - 8);
  int64_t v122 = (char *)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v107 - v29;
  uint64_t v31 = sub_25436C800();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v115 = (char *)&v107 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v114 = (char *)&v107 - v35;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9380);
  MEMORY[0x270FA5388](v36 - 8);
  int64_t v117 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v116 = (uint64_t)&v107 - v39;
  MEMORY[0x270FA5388](v40);
  unint64_t v125 = (char *)&v107 - v41;
  MEMORY[0x270FA5388](v42);
  uint64_t v124 = (uint64_t)&v107 - v43;
  MEMORY[0x270FA5388](v44);
  uint64_t v111 = (uint64_t)&v107 - v45;
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v107 - v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v107 - v50;
  double v53 = MEMORY[0x270FA5388](v52);
  uint64_t v128 = (uint64_t)&v107 - v54;
  uint64_t v129 = v4;
  uint64_t v55 = *(void (**)(double))(v4 + 56);
  v55(v53);
  unint64_t v126 = v51;
  uint64_t v130 = v3;
  v132 = v55;
  uint64_t v133 = v4 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v55)(v51, 1, 1, v3);
  sub_2542503C8((uint64_t)v121, (uint64_t)v25, &qword_269DD8040);
  uint64_t v56 = type metadata accessor for DKPersonGroupFilter.Track(0);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48);
  if (v57(v25, 1, v56) == 1)
  {
    sub_25425042C((uint64_t)v25, &qword_269DD8040);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v58(v30, 1, 1, v31);
LABEL_4:
    uint64_t v59 = &qword_269DD7F58;
    uint64_t v60 = (uint64_t)v30;
LABEL_5:
    sub_25425042C(v60, v59);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, &v25[*(int *)(v56 + 20)], v31);
  sub_2542FF22C((uint64_t)v25, type metadata accessor for DKPersonGroupFilter.Track);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v58(v30, 0, 1, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1) {
    goto LABEL_4;
  }
  v121 = v58;
  uint64_t v78 = (uint64_t)v114;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v114, v30, v31);
  uint64_t v79 = v131[3];
  if (!*(void *)(v79 + 16))
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v48, 1, 1, v130);
    uint64_t v58 = v121;
LABEL_36:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v114, v31);
    uint64_t v59 = &qword_269DD9380;
    uint64_t v60 = (uint64_t)v48;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v80 = sub_254351890(v78);
  if (v81)
  {
    sub_2542FF1C4(*(void *)(v79 + 56) + *(void *)(v129 + 72) * v80, (uint64_t)v48, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t v82 = 0;
  }
  else
  {
    uint64_t v82 = 1;
  }
  uint64_t v58 = v121;
  uint64_t v100 = v130;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v48, v82, 1, v130);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v48, 1, v100) == 1) {
    goto LABEL_36;
  }
  uint64_t v101 = v108;
  sub_2542FF2AC((uint64_t)v48, v108, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  uint64_t v102 = v131[5];
  swift_bridgeObjectRetain();
  char v103 = sub_254350FE4(v101, v102);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v114, v31);
  if (v103)
  {
    sub_2542FF22C(v101, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  else
  {
    uint64_t v106 = v128;
    sub_25425042C(v128, &qword_269DD9380);
    sub_2542FF2AC(v101, v106, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v132)(v106, 0, 1, v130);
  }
LABEL_6:
  uint64_t v61 = v129;
  uint64_t v62 = (uint64_t)v122;
  sub_2542503C8(v123, (uint64_t)v22, &qword_269DD8040);
  if (v57(v22, 1, v56) == 1)
  {
    sub_25425042C((uint64_t)v22, &qword_269DD8040);
    v58((char *)v62, 1, 1, v31);
    uint64_t v64 = (uint64_t)v126;
    uint64_t v63 = (uint64_t)v127;
    uint64_t v65 = (uint64_t)v125;
LABEL_9:
    sub_25425042C(v62, &qword_269DD7F58);
    uint64_t v67 = v130;
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v62, &v22[*(int *)(v56 + 20)], v31);
  sub_2542FF22C((uint64_t)v22, type metadata accessor for DKPersonGroupFilter.Track);
  v58((char *)v62, 0, 1, v31);
  int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v62, 1, v31);
  uint64_t v64 = (uint64_t)v126;
  uint64_t v63 = (uint64_t)v127;
  uint64_t v65 = (uint64_t)v125;
  if (v66 == 1) {
    goto LABEL_9;
  }
  uint64_t v83 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v115, v62, v31);
  uint64_t v67 = v130;
  uint64_t v84 = v131[4];
  if (!*(void *)(v84 + 16))
  {
    uint64_t v87 = v111;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v111, 1, 1, v130);
LABEL_39:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v31);
    sub_25425042C(v87, &qword_269DD9380);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v85 = sub_254351890(v83);
  if (v86)
  {
    uint64_t v87 = v111;
    sub_2542FF1C4(*(void *)(v84 + 56) + *(void *)(v61 + 72) * v85, v111, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t v88 = 0;
    uint64_t v89 = (uint64_t)v109;
  }
  else
  {
    uint64_t v88 = 1;
    uint64_t v89 = (uint64_t)v109;
    uint64_t v87 = v111;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v87, v88, 1, v67);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v87, 1, v67) == 1) {
    goto LABEL_39;
  }
  sub_2542FF2AC(v87, v89, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  uint64_t v104 = v131[5];
  swift_bridgeObjectRetain();
  char v105 = sub_254350FE4(v89, v104);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v31);
  if (v105)
  {
    sub_2542FF22C(v89, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  else
  {
    sub_25425042C(v64, &qword_269DD9380);
    sub_2542FF2AC(v89, v64, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v132)(v64, 0, 1, v67);
  }
LABEL_10:
  uint64_t v68 = v128;
  uint64_t v69 = v124;
  sub_2542503C8(v128, v124, &qword_269DD9380);
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v70(v69, 1, v67) == 1)
  {
    uint64_t v65 = v69;
  }
  else
  {
    sub_2542FF2AC(v69, v63, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    sub_2542503C8(v64, v65, &qword_269DD9380);
    if (v70(v65, 1, v67) != 1)
    {
      uint64_t v90 = v112;
      sub_2542FF2AC(v65, v112, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      if (sub_25436C730())
      {
        uint64_t v91 = v118;
        sub_2542FF1C4(v63, v118, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        uint64_t v92 = v119;
        sub_2542685CC(v119, v91);
        sub_2542FF22C(v92, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2542FF22C(v90, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_25425042C(v64, &qword_269DD9380);
        sub_25425042C(v68, &qword_269DD9380);
        uint64_t v93 = v63;
      }
      else
      {
        uint64_t v97 = v118;
        sub_2542FF1C4(v90, v118, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        uint64_t v98 = v119;
        sub_2542685CC(v119, v97);
        sub_2542FF22C(v98, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2542FF22C(v63, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_25425042C(v64, &qword_269DD9380);
        sub_25425042C(v68, &qword_269DD9380);
        uint64_t v93 = v90;
      }
      uint64_t v75 = v120;
      uint64_t v96 = v120;
      goto LABEL_30;
    }
    sub_2542FF22C(v63, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  sub_25425042C(v65, &qword_269DD9380);
  uint64_t v71 = v116;
  sub_2542503C8(v68, v116, &qword_269DD9380);
  unsigned int v72 = v70(v71, 1, v67);
  uint64_t v73 = (uint64_t)v117;
  if (v72 != 1)
  {
    uint64_t v76 = v71;
    uint64_t v77 = (uint64_t)v113;
LABEL_27:
    sub_2542FF2AC(v76, v77, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t v94 = v118;
    sub_2542FF1C4(v77, v118, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t v95 = v119;
    sub_2542685CC(v119, v94);
    sub_2542FF22C(v95, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    sub_25425042C(v64, &qword_269DD9380);
    sub_25425042C(v68, &qword_269DD9380);
    uint64_t v93 = v77;
    uint64_t v75 = v120;
    uint64_t v96 = v120;
LABEL_30:
    sub_2542FF2AC(v93, v96, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t v74 = 0;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v75, v74, 1, v67);
  }
  sub_25425042C(v71, &qword_269DD9380);
  sub_2542503C8(v64, v73, &qword_269DD9380);
  if (v70(v73, 1, v67) != 1)
  {
    uint64_t v76 = v73;
    uint64_t v77 = (uint64_t)v110;
    goto LABEL_27;
  }
  sub_25425042C(v64, &qword_269DD9380);
  sub_25425042C(v68, &qword_269DD9380);
  sub_25425042C(v73, &qword_269DD9380);
  uint64_t v74 = 1;
  uint64_t v75 = v120;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v75, v74, 1, v67);
}

uint64_t DKPersonGroupFilter.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKPersonGroupFilter.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2542F5A90(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_2542E294C(result, v5, 0);
  }
  return result;
}

uint64_t sub_2542F5B08(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_2542F5B1C()
{
  return sub_2542F5B64((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25425943C);
}

uint64_t sub_2542F5B34()
{
  return sub_2542F5B64((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25425932C);
}

uint64_t sub_2542F5B4C()
{
  return sub_2542F5B64((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25425956C);
}

uint64_t sub_2542F5B64(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_2542F5BC0(uint64_t a1)
{
  return sub_2542F8FB4(a1, MEMORY[0x263F8D438]);
}

uint64_t sub_2542F5BD8(uint64_t a1)
{
  return sub_2542F5C20(a1, (uint64_t (*)(BOOL))sub_25425943C);
}

uint64_t sub_2542F5BF0(uint64_t a1)
{
  return sub_2542F5C20(a1, (uint64_t (*)(BOOL))sub_25425932C);
}

uint64_t sub_2542F5C08(uint64_t a1)
{
  return sub_2542F5C20(a1, (uint64_t (*)(BOOL))sub_25425956C);
}

uint64_t sub_2542F5C20(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_2542F5C6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 16) = result + 1;
  uint64_t v7 = (void *)(v6 + 32 * result);
  v7[4] = a2;
  v7[5] = a3;
  v7[6] = a4;
  v7[7] = a5;
  return result;
}

uint64_t sub_2542F5C88(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = *v4;
  *(void *)(v5 + 16) = result + 1;
  uint64_t v6 = v5 + 24 * result;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  *(double *)(v6 + 48) = a4;
  return result;
}

unint64_t sub_2542F5CB0(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_2542F5CD4(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2542F5CF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9408);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_25436D8E0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2542F5F78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9428);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_25436D8F0();
      sub_25436D900();
      uint64_t result = sub_25436D930();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2542F6224()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9420);
  uint64_t v6 = sub_25436D260();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v30 = v0;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_2542FF2AC(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_25436D8F0();
      sub_25436C7B0();
      sub_2542FF054(&qword_269DD7E68, MEMORY[0x263F07490]);
      sub_25436CB50();
      sub_25436C800();
      sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      sub_25436CB50();
      uint64_t result = sub_25436D930();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_2542FF2AC((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_2542F666C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_25436C800();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9418);
  uint64_t v5 = sub_25436D260();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      uint64_t result = sub_25436CB40();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2542F6A68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9410);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v1;
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_25436D8E0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2542F6D00(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2542F5CF4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2542F765C();
      goto LABEL_14;
    }
    sub_2542F802C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_25436D8E0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_25436D840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2542F6E24(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2542F5F78();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2542F77F4();
      goto LABEL_14;
    }
    sub_2542F8290();
  }
  uint64_t v8 = *v3;
  sub_25436D8F0();
  sub_25436D900();
  uint64_t result = sub_25436D930();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_25436D840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2542F6F74(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v23 = v3;
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2542F6224();
    }
    else
    {
      if (v12 > v11)
      {
        uint64_t v13 = v8;
        sub_2542F798C();
        goto LABEL_15;
      }
      sub_2542F850C();
    }
    uint64_t v14 = *v3;
    sub_25436D8F0();
    sub_25436C7B0();
    sub_2542FF054(&qword_269DD7E68, MEMORY[0x263F07490]);
    sub_25436CB50();
    sub_25436C800();
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    sub_25436CB50();
    uint64_t v15 = sub_25436D930();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v8 = *(void *)(v8 + 72);
      while (1)
      {
        sub_2542FF1C4(*(void *)(v14 + 48) + v8 * a2, (uint64_t)v10, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        if (sub_25436C780() & 1) != 0 && (sub_25436C7D0()) {
          break;
        }
        sub_2542FF22C((uint64_t)v10, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_15;
        }
      }
      sub_2542FF22C((uint64_t)v10, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_25436D840();
      __break(1u);
    }
  }
  uint64_t v13 = v8;
LABEL_15:
  uint64_t v18 = *v23;
  *(void *)(*v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_2542FF2AC(a1, *(void *)(v18 + 48) + *(void *)(v13 + 72) * a2, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v18 + 16) = v22;
  }
  return result;
}

uint64_t sub_2542F7288(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2542F666C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_2542F7BF0();
      goto LABEL_12;
    }
    sub_2542F891C();
  }
  uint64_t v13 = *v3;
  sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
  uint64_t v14 = sub_25436CB40();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      char v22 = sub_25436CBB0();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_25436D840();
  __break(1u);
  return result;
}

uint64_t sub_2542F7528(uint64_t result, char a2, double a3)
{
  unint64_t v4 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0) {
    goto LABEL_14;
  }
  if (a2)
  {
    sub_2542F6A68();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2542F7E94();
      goto LABEL_14;
    }
    sub_2542F8CCC();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_25436D8E0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v4 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      uint64_t result = sub_25436D840();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        unint64_t v4 = (v4 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
          break;
        }
        if (*(double *)(v10 + 8 * v4) == a3) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(void *)(v12 + 48) + 8 * v4) = a3;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_2542F765C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9408);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D250();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2542F77F4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9428);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D250();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2542F798C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9420);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25436D250();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_2542FF1C4(*(void *)(v6 + 48) + v19, (uint64_t)v5, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    uint64_t result = (void *)sub_2542FF2AC((uint64_t)v5, *(void *)(v8 + 48) + v19, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2542F7BF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9418);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_25436D250();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_2542F7E94()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9410);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25436D250();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2542F802C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9408);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_25436D8E0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2542F8290()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9428);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_25436D8F0();
    sub_25436D900();
    uint64_t result = sub_25436D930();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2542F850C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9420);
  uint64_t v6 = sub_25436D260();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_2542FF1C4(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    sub_25436D8F0();
    sub_25436C7B0();
    sub_2542FF054(&qword_269DD7E68, MEMORY[0x263F07490]);
    sub_25436CB50();
    sub_25436C800();
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    sub_25436CB50();
    uint64_t result = sub_25436D930();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_2542FF2AC((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2542F891C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C800();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9418);
  uint64_t v7 = sub_25436D260();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    uint64_t result = sub_25436CB40();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2542F8CCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9410);
  uint64_t result = sub_25436D260();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_25436D8E0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2542F8F40(uint64_t (*a1)(void, uint64_t, uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v2;
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 16) + 1;
    return a1(0, v4, 1);
  }
  return result;
}

uint64_t sub_2542F8FB4(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1)) {
    return a2(v3 > 1);
  }
  return result;
}

uint64_t sub_2542F8FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = *(void *)(type metadata accessor for DKPersonGroupFilter.Track(0) - 8);
  return sub_2542FF2AC(a2, v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * a1, type metadata accessor for DKPersonGroupFilter.Track);
}

uint64_t sub_2542F9094(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  *(void *)(v5 + 16) = a1 + 1;
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = v6;
  unint64_t v10 = v5
      + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + *(void *)(v7 + 72) * a1;
  return v8(v10, a2, v9);
}

uint64_t sub_2542F912C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_254351890(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v11;
    uint64_t v29 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v29;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = sub_25436C800();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = a2(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_2542FF2AC(v20 + *(void *)(v28 + 72) * v14, a6, a3);
    sub_2542F9758(v14, v17, a4);
    *uint64_t v11 = v17;
    swift_bridgeObjectRelease();
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a6;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a2(0);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a6;
    uint64_t v24 = 1;
  }
  return v22(v23, v24, 1, v25);
}

uint64_t sub_2542F9318(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_254351928(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25429C25C();
    uint64_t v7 = v10;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_2542F9AAC(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_2542F93E0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25436D8F0();
        sub_25436D900();
        uint64_t result = sub_25436D930();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          char v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *unint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2542F959C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25436D8F0();
        sub_25436D900();
        uint64_t result = sub_25436D930();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          unint64_t v14 = (void *)(v13 + 8 * v3);
          char v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *unint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2542F9758(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v38 = a3;
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = sub_25436D200();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v41 = (v13 + 1) & v12;
      char v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v42 = v14;
      uint64_t v39 = (void (**)(char *, uint64_t))(v14 - 8);
      int64_t v40 = v15;
      uint64_t v37 = v12;
      do
      {
        uint64_t v17 = v9;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v11;
        v40(v8, *(void *)(a2 + 48) + v16 * v11, v5);
        sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
        uint64_t v20 = sub_25436CB40();
        (*v39)(v8, v5);
        unint64_t v21 = v20 & v12;
        if (a1 >= (uint64_t)v41)
        {
          if (v21 >= v41 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v38(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t v27 = v24 + v25 * a1;
            int64_t v28 = v25 * v11;
            unint64_t v29 = v24 + v25 * v11 + v25;
            BOOL v30 = v26 < v28 || v27 >= v29;
            uint64_t v9 = v17;
            if (v30)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v37;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v37;
              if (v26 != v28)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v41 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v17;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    BOOL v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v31;
    uint64_t v33 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v31 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v31;
    uint64_t v32 = (-1 << a1) - 1;
  }
  *BOOL v31 = v33 & v32;
  uint64_t v34 = *(void *)(a2 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_2542F9AAC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        sub_25436D8F0();
        swift_bridgeObjectRetain();
        sub_25429E1D0(v24, v9);
        uint64_t v10 = sub_25436D930();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v3);
          uint64_t v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
          {
            void *v16 = *v17;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2542F9C7C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_25436D8E0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(sub_25436C7B0() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  uint64_t *v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2542F9E4C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_25436D200();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_25436D8E0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2542F9FE4(uint64_t a1)
{
  uint64_t v3 = sub_25436C800();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - v11;
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v26 = v4 + 16;
  unint64_t v27 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v24 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v25 = v4 + 48;
  uint64_t v28 = a1;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(void *)(v28 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1) {
      goto LABEL_26;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    sub_25429D934((uint64_t)v6, (uint64_t)v9);
    sub_25425042C((uint64_t)v9, &qword_269DD7F58);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v16) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v24) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v20);
    ++v17;
    if (!v21)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v23 + 8 * v17);
      if (!v21)
      {
        int64_t v17 = v20 + 2;
        if (v20 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v23 + 8 * v17);
        if (!v21)
        {
          int64_t v17 = v20 + 3;
          if (v20 + 3 >= v24) {
            goto LABEL_25;
          }
          unint64_t v21 = *(void *)(v23 + 8 * v17);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_25:
    (*v27)(v12, 1, 1, v3);
LABEL_26:
    swift_release();
    return;
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21)
  {
    int64_t v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v24) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_2542FA36C(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25436C800();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v51 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v62 = a1;
  uint64_t v63 = a1 + 56;
  uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v57 = v6;
  uint64_t v64 = v14;
  uint64_t v65 = 0;
  unint64_t v66 = v18;
  uint64_t v55 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  double v53 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v59 = v8 + 16;
  uint64_t v60 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v58 = v8;
  uint64_t v54 = a2;
  uint64_t v52 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v57;
  v25(v57, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v56)(v26, v27, 1, v7);
    uint64_t v62 = a1;
    uint64_t v63 = v15;
    uint64_t v64 = v14;
    uint64_t v65 = v23;
    unint64_t v66 = v21;
    if ((*v55)(v26, 1, v7) == 1)
    {
      sub_2542774CC();
      sub_25425042C(v26, &qword_269DD7F58);
      return v54;
    }
    (*v53)(v61, v26, v7);
    uint64_t v31 = v54;
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    uint64_t v32 = sub_25436CB40();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    int64_t v40 = *v19;
    uint64_t v8 = v58;
LABEL_35:
    v40(v61, v7);
    int64_t v20 = v65;
    unint64_t v18 = v66;
    a1 = v62;
    uint64_t v15 = v63;
    uint64_t v14 = v64;
    uint64_t v52 = v65;
    if (v66) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v52 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v57;
  }
  uint64_t v52 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v58 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
  while (1)
  {
    v38(v10, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
    char v39 = sub_25436CBB0();
    int64_t v40 = *v19;
    (*v19)(v10, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v60[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v58;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v61, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v44);
    sub_2542FC01C((unint64_t *)((char *)&v51 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v62);
    uint64_t v46 = v45;
    swift_release();
    sub_2542774CC();
    return v46;
  }
  else
  {
    uint64_t v48 = (void *)swift_slowAlloc();
    memcpy(v48, v60, v44);
    sub_2542FC01C((unint64_t *)v48, v43, v35, v34, &v62);
    uint64_t v50 = v49;
    swift_release();
    sub_2542774CC();
    MEMORY[0x25A276B10](v48, -1, -1);
    return v50;
  }
}

uint64_t sub_2542FAA30(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t (*)(uint64_t *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_2542FBBE8((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_2542FBBE8((uint64_t)v11, v8, a3, v6);
    MEMORY[0x25A276B10](v11, -1, -1);
  }
  return a2;
}

uint64_t (*sub_2542FABA8(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2542FB888(v4);
  v4[9] = sub_2542FB00C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_2542FAC38;
}

uint64_t (*sub_2542FAC3C(void *a1, char a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2542FB888(v4);
  v4[9] = sub_2542FB160((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_2542FAC38;
}

uint64_t (*sub_2542FACD0(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2542FB888(v4);
  v4[9] = sub_2542FB29C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_2542FAC38;
}

uint64_t (*sub_2542FAD60(void *a1, char a2))()
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2542FB888(v4);
  v4[9] = sub_2542FB45C((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_2542FAC38;
}

void sub_2542FADF4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

void (*sub_2542FAE54(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_25436C800();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  unint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_2542FB8B8(v4);
  v4[12] = sub_2542FB604(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_2542FAF74;
}

void sub_2542FAF74(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_2542FB00C(void *a1, uint64_t a2, char a3))(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  unint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[3] = v3;
  *((unsigned char *)v8 + 17) = a2;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_2543517E0(a2);
  *((unsigned char *)v8 + 18) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = v10 ^ 1;
  uint64_t v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  unsigned __int8 v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 < v14 || (a3 & 1) == 0)
  {
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_25429B89C();
      goto LABEL_9;
    }
    sub_254297D1C(v14, a3 & 1);
    uint64_t v17 = sub_2543517E0(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      uint64_t v11 = v17;
      goto LABEL_9;
    }
LABEL_13:
    uint64_t result = (void (*)(unsigned __int8 **, uint64_t))sub_25436D850();
    __break(1u);
    return result;
  }
LABEL_9:
  v8[4] = v11;
  long long v19 = 0uLL;
  if (v15) {
    long long v19 = *(_OWORD *)(*(void *)(*v4 + 56) + 16 * v11);
  }
  *(_OWORD *)unint64_t v8 = v19;
  *((unsigned char *)v8 + 16) = v13 & 1;
  return sub_2542FB148;
}

void sub_2542FB148(unsigned __int8 **a1, uint64_t a2)
{
}

unint64_t (*sub_2542FB160(uint64_t a1, char a2, char a3))(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v7 = a2 & 1;
  uint64_t v8 = *v3;
  uint64_t v10 = sub_254351600(v7);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_2542FB284;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25429B8A8();
      goto LABEL_7;
    }
    sub_254297D28(v13, a3 & 1);
    uint64_t v17 = sub_254351600(v7);
    if ((v14 & 1) == (v18 & 1))
    {
      uint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t, uint64_t))sub_25436D850();
  __break(1u);
  return result;
}

unint64_t sub_2542FB284(unint64_t a1, uint64_t a2)
{
  return sub_2542FB580(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_25429B154);
}

void (*sub_2542FB29C(void *a1, uint64_t a2, char a3))(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[3] = v3;
  *((unsigned char *)v8 + 17) = a2;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_2543517E0(a2);
  *((unsigned char *)v8 + 18) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = v10 ^ 1;
  uint64_t v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  unsigned __int8 v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 < v14 || (a3 & 1) == 0)
  {
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_25429B8B4();
      goto LABEL_9;
    }
    sub_254297D34(v14, a3 & 1);
    uint64_t v17 = sub_2543517E0(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      uint64_t v11 = v17;
      goto LABEL_9;
    }
LABEL_13:
    uint64_t result = (void (*)(unsigned __int8 **, uint64_t))sub_25436D850();
    __break(1u);
    return result;
  }
LABEL_9:
  v8[4] = v11;
  long long v19 = 0uLL;
  if (v15) {
    long long v19 = *(_OWORD *)(*(void *)(*v4 + 56) + 16 * v11);
  }
  *(_OWORD *)uint64_t v8 = v19;
  *((unsigned char *)v8 + 16) = v13 & 1;
  return sub_2542FB148;
}

void sub_2542FB3D8(unsigned __int8 **a1, uint64_t a2, void (*a3)(uint64_t, void, uint64_t, __n128, double))
{
  uint64_t v4 = *a1;
  unsigned __int8 v5 = (*a1)[18];
  if ((*a1)[16])
  {
    if ((*a1)[18]) {
      sub_2542F93E0(*((void *)v4 + 4), **((void **)v4 + 3));
    }
  }
  else
  {
    __n128 v6 = *(__n128 *)v4;
    uint64_t v7 = *((void *)v4 + 4);
    uint64_t v8 = **((void **)v4 + 3);
    if (v5) {
      *(__n128 *)(*(void *)(v8 + 56) + 16 * v7) = v6;
    }
    else {
      a3(v7, v4[17], v8, v6, v6.n128_f64[1]);
    }
  }
  free(v4);
}

unint64_t (*sub_2542FB45C(uint64_t a1, char a2, char a3))(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v7 = a2 & 1;
  uint64_t v8 = *v3;
  uint64_t v10 = sub_254351600(v7);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_2542FB284;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_25429BA48();
      goto LABEL_7;
    }
    sub_254298010(v13, a3 & 1);
    uint64_t v17 = sub_254351600(v7);
    if ((v14 & 1) == (v18 & 1))
    {
      uint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t, uint64_t))sub_25436D850();
  __break(1u);
  return result;
}

unint64_t sub_2542FB580(unint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (*(void *)result)
  {
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(*(void *)(**(void **)(result + 8) + 56) + 8 * *(void *)(result + 16)) = *(void *)result;
    }
    else
    {
      uint64_t v3 = *(unsigned char *)(result + 24) & 1;
      uint64_t v4 = *(void *)(result + 16);
      return a3(v4, v3);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_2542F959C(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

void (*sub_2542FB604(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  void *v8 = a2;
  v8[1] = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9378);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_254351890(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for DKPersonGroup(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_2542FF2AC(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for DKPersonGroup);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_2542FB828;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for DKPersonGroup(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_25429BE88();
      goto LABEL_7;
    }
    sub_254298678(v16, a3 & 1);
    unint64_t v23 = sub_254351890(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_25436C800();
  uint64_t result = (void (*)(uint64_t **))sub_25436D850();
  __break(1u);
  return result;
}

void sub_2542FB828(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_2542FB8F4((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_25425042C((uint64_t)v2, &qword_269DD9378);
  free(v2);
  free(v1);
}

uint64_t (*sub_2542FB888(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_2543025AC;
}

uint64_t (*sub_2542FB8B8(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_2542FB8E8;
}

uint64_t sub_2542FB8E8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

void sub_2542FB8F4(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  unint64_t v24 = a4;
  int v25 = a2;
  uint64_t v7 = sub_25436C800();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9378);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DKPersonGroup(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v22 - v18;
  sub_2542503C8(a1, (uint64_t)v12, &qword_269DD9378);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_25425042C((uint64_t)v12, &qword_269DD9378);
    if (v25)
    {
      int64_t v20 = v24;
      swift_arrayDestroy();
      sub_2542F9758(v20, *a3, type metadata accessor for DKPersonGroup);
    }
  }
  else
  {
    sub_2542FF2AC((uint64_t)v12, (uint64_t)v19, type metadata accessor for DKPersonGroup);
    uint64_t v21 = (void *)*a3;
    if (v25)
    {
      sub_2542FF2AC((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * v24, type metadata accessor for DKPersonGroup);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v9, v22, v7);
      sub_2542FF2AC((uint64_t)v19, (uint64_t)v16, type metadata accessor for DKPersonGroup);
      sub_25429B1E8(v24, (uint64_t)v9, (uint64_t)v16, v21);
    }
  }
}

uint64_t sub_2542FBBE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v18 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v6 << 6);
LABEL_17:
    uint64_t v15 = *(void *)(a3 + 56);
    uint64_t v24 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    uint64_t v23 = *(void *)(v15 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    char v16 = a4(&v24, &v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    if (v4) {
      return result;
    }
    if (v16)
    {
      *(unint64_t *)((char *)v18 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      BOOL v12 = __OFADD__(v19++, 1);
      if (v12) {
        goto LABEL_30;
      }
    }
  }
  BOOL v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v6 >= v21) {
    return sub_2542FBDFC(v18, a2, v19, a3);
  }
  unint64_t v13 = *(void *)(v20 + 8 * v6);
  if (v13)
  {
LABEL_16:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  int64_t v14 = v6 + 1;
  if (v6 + 1 >= v21) {
    return sub_2542FBDFC(v18, a2, v19, a3);
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 2;
  if (v6 + 2 >= v21) {
    return sub_2542FBDFC(v18, a2, v19, a3);
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 3;
  if (v6 + 3 >= v21) {
    return sub_2542FBDFC(v18, a2, v19, a3);
  }
  unint64_t v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v21) {
      return sub_2542FBDFC(v18, a2, v19, a3);
    }
    unint64_t v13 = *(void *)(v20 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_2542FBDFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8718);
  unint64_t result = sub_25436D560();
  unint64_t v9 = (void *)result;
  uint64_t v23 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  unint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_30;
      }
      if (v15 >= a2) {
        return (unint64_t)v9;
      }
      unint64_t v16 = v23[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return (unint64_t)v9;
        }
        unint64_t v16 = v23[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return (unint64_t)v9;
          }
          unint64_t v16 = v23[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return (unint64_t)v9;
            }
            unint64_t v16 = v23[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_31;
                }
                if (v11 >= a2) {
                  return (unint64_t)v9;
                }
                unint64_t v16 = v23[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    sub_25436D8F0();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25429E1D0(v24, v19);
    sub_25436D930();
    unint64_t result = sub_25436D210();
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = 8 * result;
    *(void *)(v9[6] + v21) = v19;
    *(void *)(v9[7] + v21) = v20;
    ++v9[2];
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return (unint64_t)v9;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_2542FC01C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25436C800();
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.n128_f64[0] = MEMORY[0x270FA5388](v15);
  uint64_t v63 = (char *)&v48 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v51 = a1;
  uint64_t v52 = v21;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v61 = v21 + 16;
  uint64_t v62 = a3;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = a5;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v60 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  double v53 = v11;
  while (2)
  {
    uint64_t v50 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v28 = a5[2];
        int64_t v29 = a5[3];
        unint64_t v30 = a5[4];
        uint64_t v59 = v28;
        if (v30)
        {
          uint64_t v58 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v29 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v22 + 16))(v11, *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31, v12, v16);
          uint64_t v32 = 0;
          goto LABEL_8;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        int64_t v42 = (unint64_t)(v28 + 64) >> 6;
        if (v41 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * v41);
        if (v43) {
          goto LABEL_17;
        }
        if (v29 + 2 >= v42) {
          goto LABEL_34;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v41 = v29 + 2;
LABEL_17:
          uint64_t v58 = (v43 - 1) & v43;
          unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
          int64_t v29 = v41;
          goto LABEL_7;
        }
        if (v29 + 3 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          v29 += 2;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 3));
        if (v43)
        {
          int64_t v41 = v29 + 3;
          goto LABEL_17;
        }
        int64_t v41 = v29 + 4;
        if (v29 + 4 < v42)
        {
          unint64_t v43 = *(void *)(v27 + 8 * v41);
          if (v43) {
            goto LABEL_17;
          }
          int64_t v41 = v42 - 1;
          int64_t v46 = v29 + 5;
          while (v42 != v46)
          {
            unint64_t v43 = *(void *)(v27 + 8 * v46++);
            if (v43)
            {
              int64_t v41 = v46 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          int64_t v29 = v41;
          goto LABEL_8;
        }
        uint64_t v58 = 0;
        uint64_t v32 = 1;
        v29 += 3;
LABEL_8:
        (*v57)(v11, v32, 1, v12);
        *a5 = v26;
        a5[1] = v27;
        a5[2] = v59;
        a5[3] = v29;
        a5[4] = v58;
        if ((*v56)(v11, 1, v12) == 1)
        {
          sub_25425042C((uint64_t)v11, &qword_269DD7F58);
          uint64_t v47 = v62;
          swift_retain();
          sub_2542FC578(v51, v49, v50, v47);
          return;
        }
        (*v55)(v63, v11, v12);
        uint64_t v33 = v62;
        sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
        uint64_t v34 = sub_25436CB40();
        uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
        int v25 = *v24;
LABEL_4:
        v25(v63, v12);
      }
      uint64_t v59 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = ~v35;
      uint64_t v38 = *(void *)(v22 + 72);
      char v39 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      while (1)
      {
        v39(v14, *(void *)(v62 + 48) + v38 * v36, v12);
        sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
        char v40 = sub_25436CBB0();
        int v25 = *v24;
        (*v24)(v14, v12);
        if (v40) {
          break;
        }
        unint64_t v36 = (v36 + 1) & v37;
        if (((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          uint64_t v11 = v53;
          a5 = v54;
          uint64_t v22 = v52;
          goto LABEL_4;
        }
      }
      v25(v63, v12);
      uint64_t v44 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v22 = v52;
      uint64_t v45 = *(unint64_t *)((char *)v51 + v44);
      *(unint64_t *)((char *)v51 + v44) = v45 & ~(1 << v36);
      uint64_t v11 = v53;
      a5 = v54;
    }
    while ((v45 & (1 << v36)) == 0);
    uint64_t v23 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_41:
      __break(1u);
      return;
    }
    if (v50 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_2542FC578(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_25436C800();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9418);
  uint64_t result = sub_25436D270();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
    uint64_t result = sub_25436CB40();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2542FC904(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_2542FCA8C((void *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_2542FCA8C((unint64_t *)v9, v5, a2, v3);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x25A276B10](v9, -1, -1);
  }
  return v8;
}

void sub_2542FCA8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a2;
  uint64_t v69 = a1;
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v66 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v66 - v12;
  v17.n128_f64[0] = MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v66 - v15;
  unint64_t v19 = *(void *)(a3 + 16);
  unint64_t v20 = *(void *)(a4 + 16);
  uint64_t v81 = v7 + 16;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v76 = v7;
  if (v20 >= v19)
  {
    uint64_t v73 = 0;
    int64_t v43 = 0;
    uint64_t v44 = *(void *)(a3 + 56);
    int64_t v68 = a3 + 56;
    uint64_t v45 = 1 << *(unsigned char *)(a3 + 32);
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    else {
      uint64_t v46 = -1;
    }
    unint64_t v47 = v46 & v44;
    int64_t v70 = (unint64_t)(v45 + 63) >> 6;
    uint64_t v77 = a4 + 56;
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    unint64_t v80 = v16;
    if ((v46 & v44) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v50 = v43 + 1;
    if (!__OFADD__(v43, 1))
    {
      if (v50 < v70)
      {
        unint64_t v51 = *(void *)(v68 + 8 * v50);
        int64_t v52 = v43 + 1;
        if (!v51)
        {
          int64_t v52 = v43 + 2;
          if (v43 + 2 >= v70) {
            goto LABEL_62;
          }
          unint64_t v51 = *(void *)(v68 + 8 * v52);
          if (!v51)
          {
            int64_t v52 = v43 + 3;
            if (v43 + 3 >= v70) {
              goto LABEL_62;
            }
            unint64_t v51 = *(void *)(v68 + 8 * v52);
            if (!v51)
            {
              uint64_t v53 = v43 + 4;
              if (v43 + 4 >= v70) {
                goto LABEL_62;
              }
              unint64_t v51 = *(void *)(v68 + 8 * v53);
              if (!v51)
              {
                while (1)
                {
                  int64_t v52 = v53 + 1;
                  if (__OFADD__(v53, 1)) {
                    goto LABEL_68;
                  }
                  if (v52 >= v70) {
                    goto LABEL_62;
                  }
                  unint64_t v51 = *(void *)(v68 + 8 * v52);
                  ++v53;
                  if (v51) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v52 = v43 + 4;
            }
          }
        }
LABEL_53:
        uint64_t v74 = (v51 - 1) & v51;
        int64_t v75 = v52;
        for (unint64_t i = __clz(__rbit64(v51)) + (v52 << 6); ; unint64_t i = __clz(__rbit64(v47)) | (v43 << 6))
        {
          uint64_t v54 = *(void *)(a3 + 48);
          uint64_t v55 = *(void *)(v7 + 72);
          unint64_t v72 = i;
          uint64_t v56 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
          v56(v80, v54 + v55 * i, v6, v17);
          sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
          uint64_t v57 = sub_25436CB40();
          uint64_t v58 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v59 = v57 & ~v58;
          if ((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59))
          {
            uint64_t v71 = (char *)((unint64_t)v48 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            uint64_t v60 = ~v58;
            while (1)
            {
              ((void (*)(char *, unint64_t, uint64_t))v56)(v10, *(void *)(v79 + 48) + v59 * v55, v6);
              sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
              char v61 = sub_25436CBB0();
              uint64_t v62 = *v48;
              (*v48)(v10, v6);
              if (v61) {
                break;
              }
              unint64_t v59 = (v59 + 1) & v60;
              if (((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
              {
                a3 = v78;
                a4 = v79;
                int64_t v43 = v75;
                uint64_t v7 = v76;
                uint64_t v63 = v80;
                unint64_t v47 = v74;
                goto LABEL_60;
              }
            }
            v62(v80, v6);
            *(unint64_t *)((char *)v69 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
            unint64_t v47 = v74;
            BOOL v28 = __OFADD__(v73++, 1);
            a3 = v78;
            a4 = v79;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            if (v28) {
              goto LABEL_66;
            }
            if (!v74) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v62 = *v48;
            a3 = v78;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            uint64_t v63 = v80;
            unint64_t v47 = v74;
LABEL_60:
            v62(v63, v6);
            if (!v47) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v74 = (v47 - 1) & v47;
          int64_t v75 = v43;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    int64_t v21 = 0;
    uint64_t v22 = *(void *)(a4 + 56);
    uint64_t v67 = a4 + 56;
    uint64_t v23 = 1 << *(unsigned char *)(a4 + 32);
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v25 = v24 & v22;
    int64_t v68 = (unint64_t)(v23 + 63) >> 6;
    unint64_t v72 = v7 + 32;
    uint64_t v73 = 0;
    uint64_t v77 = a3 + 56;
    unint64_t v80 = (char *)(v7 + 8);
    uint64_t v71 = (char *)&v66 - v15;
    if ((v24 & v22) != 0) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v30 = v21 + 1;
    if (!__OFADD__(v21, 1))
    {
      if (v30 < v68)
      {
        unint64_t v31 = *(void *)(v67 + 8 * v30);
        int64_t v32 = v21 + 1;
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 2;
        if (v21 + 2 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 3;
        if (v21 + 3 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31)
        {
LABEL_23:
          uint64_t v74 = (v31 - 1) & v31;
          int64_t v75 = v32;
          for (unint64_t j = __clz(__rbit64(v31)) + (v32 << 6); ; unint64_t j = __clz(__rbit64(v25)) | (v21 << 6))
          {
            uint64_t v34 = *(void *)(v7 + 72);
            uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
            v35(v18, *(void *)(a4 + 48) + v34 * j, v6, v17);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v18, v6);
            sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
            uint64_t v36 = v13;
            uint64_t v37 = sub_25436CB40();
            uint64_t v38 = -1 << *(unsigned char *)(a3 + 32);
            unint64_t v39 = v37 & ~v38;
            if ((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
            {
              int64_t v70 = (unint64_t)v80 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              uint64_t v40 = ~v38;
              while (1)
              {
                ((void (*)(char *, unint64_t, uint64_t))v35)(v10, *(void *)(v78 + 48) + v39 * v34, v6);
                sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
                char v41 = sub_25436CBB0();
                int64_t v42 = *(void (**)(char *, uint64_t))v80;
                (*(void (**)(char *, uint64_t))v80)(v10, v6);
                if (v41) {
                  break;
                }
                unint64_t v39 = (v39 + 1) & v40;
                if (((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
                {
                  a3 = v78;
                  int64_t v21 = v75;
                  uint64_t v7 = v76;
                  uint64_t v13 = v36;
                  unint64_t v18 = v71;
                  goto LABEL_30;
                }
              }
              v42(v36, v6);
              uint64_t v26 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v27 = 1 << v39;
              uint64_t v13 = v36;
              *(unint64_t *)((char *)v69 + v26) |= v27;
              unint64_t v25 = v74;
              BOOL v28 = __OFADD__(v73++, 1);
              a3 = v78;
              a4 = v79;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              unint64_t v18 = v71;
              if (v28) {
                goto LABEL_65;
              }
              if (!v74) {
                goto LABEL_10;
              }
            }
            else
            {
              int64_t v42 = *(void (**)(char *, uint64_t))v80;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              uint64_t v13 = v36;
              unint64_t v18 = v71;
LABEL_30:
              unint64_t v25 = v74;
              v42(v13, v6);
              a4 = v79;
              if (!v25) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v74 = (v25 - 1) & v25;
            int64_t v75 = v21;
          }
        }
        uint64_t v33 = v21 + 4;
        if (v21 + 4 < v68)
        {
          unint64_t v31 = *(void *)(v67 + 8 * v33);
          if (v31)
          {
            int64_t v32 = v21 + 4;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v32 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_67;
            }
            if (v32 >= v68) {
              break;
            }
            unint64_t v31 = *(void *)(v67 + 8 * v32);
            ++v33;
            if (v31) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v64 = v66;
      uint64_t v65 = v73;
      swift_retain();
      sub_2542FC578(v69, v64, v65, a3);
      return;
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_2542FD298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_25436D900();
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    __n128 v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v25 = v13;
    unint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      sub_25436CB50();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

void sub_2542FD50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v47 = (char *)&v34 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  v11.n128_f64[0] = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != a2 && *(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v38 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v43 = v5 + 48;
    uint64_t v44 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    int64_t v42 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v45 = a2 + 56;
    uint64_t v46 = v5 + 16;
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v35 = v5;
    uint64_t v36 = a1;
    uint64_t v34 = v13;
    if (!v18) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v40 = (v18 - 1) & v18;
    int64_t v41 = v14;
    for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
    {
      uint64_t v25 = *(void *)(v5 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
      v26(v13, *(void *)(a1 + 48) + v25 * i, v4, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
        return;
      }
      (*v42)(v47, v13, v4);
      sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      uint64_t v27 = sub_25436CB40();
      uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v29 = v27 & ~v28;
      if (((*(void *)(v45 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        (*v19)(v47, v4);
        return;
      }
      uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v30 = a2;
      uint64_t v31 = ~v28;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v26)(v7, *(void *)(v30 + 48) + v29 * v25, v4);
        sub_2542FF054((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
        char v32 = sub_25436CBB0();
        uint64_t v33 = *v19;
        (*v19)(v7, v4);
        if (v32) {
          break;
        }
        unint64_t v29 = (v29 + 1) & v31;
        if (((*(void *)(v45 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
        {
          v33(v47, v4);
          return;
        }
      }
      v33(v47, v4);
      a2 = v30;
      uint64_t v5 = v35;
      a1 = v36;
      uint64_t v13 = v34;
      unint64_t v18 = v40;
      int64_t v14 = v41;
      if (v40) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v21 >= v38) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v21);
      int64_t v23 = v14 + 1;
      if (!v22)
      {
        int64_t v23 = v14 + 2;
        if (v14 + 2 >= v38) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 3;
          if (v14 + 3 >= v38) {
            goto LABEL_33;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22)
          {
            uint64_t v24 = v14 + 4;
            if (v14 + 4 >= v38)
            {
LABEL_33:
              (*v44)(v13, 1, 1, v4, v11);
              return;
            }
            unint64_t v22 = *(void *)(v37 + 8 * v24);
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_35;
                }
                if (v23 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v22 = *(void *)(v37 + 8 * v23);
                ++v24;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v23 = v14 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v40 = (v22 - 1) & v22;
      int64_t v41 = v23;
    }
    __break(1u);
LABEL_35:
    __break(1u);
  }
}

BOOL _s23IntelligentTrackingCore19DKPersonGroupFilterC5TrackV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  uint64_t v5 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if (sub_25436C7D0()) {
    return *(void *)(a1 + *(int *)(v5 + 24)) == *(void *)(a2 + *(int *)(v5 + 24));
  }
  return 0;
}

uint64_t sub_2542FDA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v135 = a3;
  uint64_t v136 = a2;
  uint64_t v161 = sub_25436C800();
  uint64_t v4 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  v153 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  v158 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = (int *)type metadata accessor for DKPersonGroup(0);
  uint64_t v8 = *((void *)v160 - 1);
  MEMORY[0x270FA5388](v160);
  v149 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v148 = (uint64_t)&v132 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v12 - 8);
  int64_t v14 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v157 = (uint64_t)&v132 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v156 = (uint64_t)&v132 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v155 = (uint64_t)&v132 - v20;
  MEMORY[0x270FA5388](v21);
  v138 = (char *)&v132 - v22;
  uint64_t v159 = type metadata accessor for DKPersonGroupFilter.Track(0);
  MEMORY[0x270FA5388](v159);
  v145 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v132 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v132 - v29;
  uint64_t v31 = *(void (***)(void))(a1 + 16);
  uint64_t v146 = v4;
  uint64_t v154 = v8;
  v143 = v26;
  uint64_t v144 = v14;
  uint64_t v134 = v6;
  uint64_t v133 = v28;
  if (!v31)
  {
    uint64_t v35 = (void *)MEMORY[0x263F8EE80];
    uint64_t v65 = v6;
LABEL_18:
    uint64_t v66 = *(void *)(v136 + 16);
    if (v66)
    {
      uint64_t v67 = v136 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      unint64_t v147 = (void (**)(char *, char *, uint64_t))(v146 + 16);
      uint64_t v151 = (void (**)(void))(v146 + 56);
      uint64_t v139 = (void (**)(char *, char *, uint64_t))(v65 + 32);
      int64_t v68 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 72);
      swift_bridgeObjectRetain();
      uint64_t v142 = v68;
      do
      {
        sub_2542FF1C4(v67, (uint64_t)v26, type metadata accessor for DKPersonGroupFilter.Track);
        if ((v26[8] & 1) == 0)
        {
          uint64_t v70 = *(void *)v26;
          uint64_t v71 = v161;
          (*v147)(v14, &v26[*(int *)(v159 + 20)], v161);
          unint64_t v72 = *v151;
          ((void (*)(char *, void, uint64_t, uint64_t))*v151)(v14, 0, 1, v71);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v162 = v35;
          uint64_t v152 = v70;
          unint64_t v75 = sub_254351604(v70);
          uint64_t v76 = v35[2];
          BOOL v77 = (v74 & 1) == 0;
          uint64_t v78 = v76 + v77;
          if (__OFADD__(v76, v77)) {
            goto LABEL_56;
          }
          char v79 = v74;
          if (v35[3] >= v78)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_25429BC10();
            }
          }
          else
          {
            sub_2542982EC(v78, isUniquelyReferenced_nonNull_native);
            unint64_t v80 = sub_254351604(v152);
            if ((v79 & 1) != (v81 & 1)) {
              goto LABEL_61;
            }
            unint64_t v75 = v80;
          }
          uint64_t v35 = v162;
          swift_bridgeObjectRelease();
          if (v79)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v82 = v161;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v72)(v155, 1, 1, v161);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v72)(v156, 1, 1, v82);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v72)(v157, 1, 1, v82);
            swift_bridgeObjectRetain();
            sub_25436C6E0();
            uint64_t v83 = v160;
            uint64_t v84 = v149;
            uint64_t v85 = (uint64_t)&v149[v160[7]];
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v72)(v85, 1, 1, v82);
            int64_t v140 = (void (**)(char *, uint64_t, uint64_t))&v84[v83[8]];
            v72();
            uint64_t v141 = &v84[v83[9]];
            uint64_t v8 = v154;
            v72();
            uint64_t v86 = v83[10];
            uint64_t v87 = MEMORY[0x263F8EE78];
            *(void *)&v84[v86] = MEMORY[0x263F8EE78];
            *(void *)uint64_t v84 = -1;
            *((void *)v84 + 1) = 0;
            (*v139)(&v84[v83[6]], v158, v150);
            sub_25425042C(v85, &qword_269DD7F58);
            sub_25425E0DC(v155, v85, &qword_269DD7F58);
            uint64_t v88 = (uint64_t)v140;
            sub_25425042C((uint64_t)v140, &qword_269DD7F58);
            sub_25425E0DC(v156, v88, &qword_269DD7F58);
            uint64_t v89 = (void (**)(void, void, void))v141;
            sub_25425042C((uint64_t)v141, &qword_269DD7F58);
            sub_25425E0DC(v157, (uint64_t)v89, &qword_269DD7F58);
            swift_bridgeObjectRelease();
            *(void *)&v84[v86] = v87;
            uint64_t v90 = v148;
            sub_2542FF2AC((uint64_t)v84, v148, type metadata accessor for DKPersonGroup);
            v35[(v75 >> 6) + 8] |= 1 << v75;
            *(void *)(v35[6] + 8 * v75) = v152;
            sub_2542FF2AC(v90, v35[7] + *(void *)(v8 + 72) * v75, type metadata accessor for DKPersonGroup);
            uint64_t v91 = v35[2];
            BOOL v63 = __OFADD__(v91, 1);
            uint64_t v92 = v91 + 1;
            if (v63) {
              goto LABEL_59;
            }
            v35[2] = v92;
            uint64_t v26 = v143;
            int64_t v14 = v144;
          }
          uint64_t v69 = v35[7];
          swift_bridgeObjectRelease();
          sub_254286154((uint64_t)v14, v69 + *(void *)(v8 + 72) * v75 + v160[9], &qword_269DD7F58);
          int64_t v68 = v142;
        }
        sub_2542FF22C((uint64_t)v26, type metadata accessor for DKPersonGroupFilter.Track);
        v67 += (uint64_t)v68;
        --v66;
      }
      while (v66);
      swift_bridgeObjectRelease();
      uint64_t v65 = v134;
      uint64_t v28 = v133;
    }
    uint64_t v93 = *(void *)(v135 + 16);
    uint64_t v94 = (uint64_t)v145;
    if (v93)
    {
      uint64_t v95 = v135 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))(v146 + 16);
      uint64_t v142 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56);
      uint64_t v141 = (char *)(v65 + 32);
      uint64_t v152 = v146 + 32;
      uint64_t v97 = *(void (***)(void))(v28 + 72);
      swift_bridgeObjectRetain();
      int64_t v140 = v96;
      uint64_t v151 = v97;
      do
      {
        sub_2542FF1C4(v95, v94, type metadata accessor for DKPersonGroupFilter.Track);
        if ((*(unsigned char *)(v94 + 8) & 1) == 0)
        {
          uint64_t v99 = v94 + *(int *)(v159 + 20);
          uint64_t v100 = *(void *)v94;
          (*v96)(v153, v99, v161);
          char v101 = swift_isUniquelyReferenced_nonNull_native();
          v162 = v35;
          unint64_t v103 = sub_254351604(v100);
          uint64_t v104 = v35[2];
          BOOL v105 = (v102 & 1) == 0;
          uint64_t v106 = v104 + v105;
          if (__OFADD__(v104, v105)) {
            goto LABEL_57;
          }
          char v107 = v102;
          if (v35[3] >= v106)
          {
            if ((v101 & 1) == 0) {
              sub_25429BC10();
            }
          }
          else
          {
            sub_2542982EC(v106, v101);
            unint64_t v108 = sub_254351604(v100);
            if ((v107 & 1) != (v109 & 1)) {
              goto LABEL_61;
            }
            unint64_t v103 = v108;
          }
          uint64_t v35 = v162;
          swift_bridgeObjectRelease();
          if (v107)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            unint64_t v147 = (void (**)(char *, char *, uint64_t))v100;
            uint64_t v110 = *v142;
            uint64_t v111 = v161;
            (*v142)(v155, 1, 1, v161);
            v110(v156, 1, 1, v111);
            v110(v157, 1, 1, v111);
            swift_bridgeObjectRetain();
            sub_25436C6E0();
            uint64_t v112 = v160;
            uint64_t v113 = v149;
            uint64_t v114 = (uint64_t)&v149[v160[7]];
            v110(v114, 1, 1, v111);
            v143 = &v113[v112[8]];
            ((void (*)(void))v110)();
            uint64_t v144 = &v113[v112[9]];
            uint64_t v8 = v154;
            ((void (*)(void))v110)();
            uint64_t v115 = v112[10];
            uint64_t v116 = MEMORY[0x263F8EE78];
            *(void *)&v113[v115] = MEMORY[0x263F8EE78];
            *(void *)uint64_t v113 = -1;
            *((void *)v113 + 1) = 0;
            (*(void (**)(char *, char *, uint64_t))v141)(&v113[v112[6]], v158, v150);
            sub_25425042C(v114, &qword_269DD7F58);
            sub_25425E0DC(v155, v114, &qword_269DD7F58);
            uint64_t v117 = (uint64_t)v143;
            sub_25425042C((uint64_t)v143, &qword_269DD7F58);
            sub_25425E0DC(v156, v117, &qword_269DD7F58);
            uint64_t v118 = (uint64_t)v144;
            sub_25425042C((uint64_t)v144, &qword_269DD7F58);
            sub_25425E0DC(v157, v118, &qword_269DD7F58);
            swift_bridgeObjectRelease();
            *(void *)&v113[v115] = v116;
            uint64_t v119 = v148;
            sub_2542FF2AC((uint64_t)v113, v148, type metadata accessor for DKPersonGroup);
            v35[(v103 >> 6) + 8] |= 1 << v103;
            *(void *)(v35[6] + 8 * v103) = v147;
            sub_2542FF2AC(v119, v35[7] + *(void *)(v8 + 72) * v103, type metadata accessor for DKPersonGroup);
            uint64_t v120 = v35[2];
            BOOL v63 = __OFADD__(v120, 1);
            uint64_t v121 = v120 + 1;
            if (v63) {
              goto LABEL_60;
            }
            v35[2] = v121;
            uint64_t v96 = v140;
          }
          uint64_t v122 = v35[7];
          swift_bridgeObjectRelease();
          uint64_t v123 = v122 + *(void *)(v8 + 72) * v103;
          uint64_t v124 = v160[10];
          unint64_t v125 = *(void *)(v123 + v124);
          char v126 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v123 + v124) = v125;
          if ((v126 & 1) == 0)
          {
            unint64_t v125 = sub_2542584AC(0, *(void *)(v125 + 16) + 1, 1, v125);
            *(void *)(v123 + v124) = v125;
          }
          unint64_t v128 = *(void *)(v125 + 16);
          unint64_t v127 = *(void *)(v125 + 24);
          if (v128 >= v127 >> 1)
          {
            unint64_t v125 = sub_2542584AC(v127 > 1, v128 + 1, 1, v125);
            *(void *)(v123 + v124) = v125;
          }
          uint64_t v94 = (uint64_t)v145;
          uint64_t v98 = v146;
          *(void *)(v125 + 16) = v128 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v98 + 32))(v125+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v128, v153, v161);
          uint64_t v97 = v151;
        }
        sub_2542FF22C(v94, type metadata accessor for DKPersonGroupFilter.Track);
        v95 += (uint64_t)v97;
        --v93;
      }
      while (v93);
      swift_bridgeObjectRelease();
    }
    uint64_t v129 = swift_bridgeObjectRetain();
    uint64_t v130 = sub_2543524B8(v129);
    swift_bridgeObjectRelease_n();
    return v130;
  }
  uint64_t v32 = a1;
  uint64_t v33 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  uint64_t v142 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16);
  unint64_t v147 = (void (**)(char *, char *, uint64_t))(v4 + 56);
  v137 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v34 = *(void *)(v28 + 72);
  uint64_t v132 = v32;
  swift_bridgeObjectRetain();
  uint64_t v35 = (void *)MEMORY[0x263F8EE80];
  uint64_t v36 = (uint64_t)v138;
  uint64_t v141 = v30;
  int64_t v140 = (void (**)(char *, uint64_t, uint64_t))v34;
  while (1)
  {
    sub_2542FF1C4(v33, (uint64_t)v30, type metadata accessor for DKPersonGroupFilter.Track);
    if (v30[8]) {
      goto LABEL_5;
    }
    uint64_t v151 = v31;
    int64_t v38 = v26;
    uint64_t v39 = v14;
    uint64_t v40 = *(void *)v30;
    uint64_t v41 = v161;
    ((void (*)(uint64_t, char *, uint64_t))*v142)(v36, &v30[*(int *)(v159 + 20)], v161);
    int64_t v42 = *v147;
    uint64_t v43 = v36;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))*v147)(v36, 0, 1, v41);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v35;
    uint64_t v152 = v40;
    unint64_t v46 = sub_254351604(v40);
    uint64_t v47 = v35[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      break;
    }
    char v50 = v45;
    if (v35[3] >= v49)
    {
      int64_t v14 = v39;
      if ((v44 & 1) == 0) {
        sub_25429BC10();
      }
    }
    else
    {
      sub_2542982EC(v49, v44);
      unint64_t v51 = sub_254351604(v152);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_61;
      }
      unint64_t v46 = v51;
      int64_t v14 = v39;
    }
    uint64_t v36 = v43;
    uint64_t v35 = v162;
    swift_bridgeObjectRelease();
    if (v50)
    {
      uint64_t v26 = v38;
      swift_bridgeObjectRetain();
      uint64_t v8 = v154;
      uint64_t v31 = v151;
    }
    else
    {
      uint64_t v53 = v161;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v155, 1, 1, v161);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v156, 1, 1, v53);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v157, 1, 1, v53);
      swift_bridgeObjectRetain();
      sub_25436C6E0();
      uint64_t v54 = v160;
      uint64_t v55 = v149;
      uint64_t v56 = (uint64_t)&v149[v160[7]];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v56, 1, 1, v53);
      uint64_t v57 = (uint64_t)&v55[v54[8]];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v57, 1, 1, v53);
      uint64_t v139 = (void (**)(char *, char *, uint64_t))&v55[v54[9]];
      ((void (*)(void))v42)();
      uint64_t v58 = v54[10];
      uint64_t v59 = MEMORY[0x263F8EE78];
      *(void *)&v55[v58] = MEMORY[0x263F8EE78];
      *(void *)uint64_t v55 = -1;
      *((void *)v55 + 1) = 0;
      (*v137)(&v55[v54[6]], v158, v150);
      sub_25425042C(v56, &qword_269DD7F58);
      sub_25425E0DC(v155, v56, &qword_269DD7F58);
      sub_25425042C(v57, &qword_269DD7F58);
      sub_25425E0DC(v156, v57, &qword_269DD7F58);
      uint64_t v60 = v139;
      sub_25425042C((uint64_t)v139, &qword_269DD7F58);
      sub_25425E0DC(v157, (uint64_t)v60, &qword_269DD7F58);
      swift_bridgeObjectRelease();
      *(void *)&v55[v58] = v59;
      uint64_t v61 = v148;
      sub_2542FF2AC((uint64_t)v55, v148, type metadata accessor for DKPersonGroup);
      v35[(v46 >> 6) + 8] |= 1 << v46;
      *(void *)(v35[6] + 8 * v46) = v152;
      uint64_t v8 = v154;
      sub_2542FF2AC(v61, v35[7] + *(void *)(v154 + 72) * v46, type metadata accessor for DKPersonGroup);
      uint64_t v62 = v35[2];
      BOOL v63 = __OFADD__(v62, 1);
      uint64_t v64 = v62 + 1;
      uint64_t v31 = v151;
      if (v63) {
        goto LABEL_58;
      }
      v35[2] = v64;
      uint64_t v26 = v143;
      int64_t v14 = v144;
      uint64_t v36 = (uint64_t)v138;
    }
    uint64_t v37 = v35[7];
    swift_bridgeObjectRelease();
    sub_254286154(v36, v37 + *(void *)(v8 + 72) * v46 + v160[8], &qword_269DD7F58);
    uint64_t v30 = v141;
    uint64_t v34 = (uint64_t)v140;
LABEL_5:
    sub_2542FF22C((uint64_t)v30, type metadata accessor for DKPersonGroupFilter.Track);
    v33 += v34;
    uint64_t v31 = (void (**)(void))((char *)v31 - 1);
    if (!v31)
    {
      swift_bridgeObjectRelease();
      uint64_t v65 = v134;
      uint64_t v28 = v133;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2542FEB3C(uint64_t a1)
{
  uint64_t v26 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9420);
    uint64_t v24 = v8;
    uint64_t v9 = sub_25436D270();
    uint64_t v10 = 0;
    uint64_t v11 = v9 + 56;
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    while (1)
    {
      sub_2542FF1C4(v25 + v12 * v10, (uint64_t)v7, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_25436D8F0();
      sub_25436C7B0();
      sub_2542FF054(&qword_269DD7E68, MEMORY[0x263F07490]);
      sub_25436CB50();
      sub_25436C800();
      sub_2542FF054(&qword_269DD7E70, MEMORY[0x263F07508]);
      sub_25436CB50();
      uint64_t v13 = sub_25436D930();
      uint64_t v14 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      uint64_t v17 = *(void *)(v11 + 8 * (v15 >> 6));
      uint64_t v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        uint64_t v19 = ~v14;
        while (1)
        {
          sub_2542FF1C4(*(void *)(v9 + 48) + v15 * v12, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
          if (sub_25436C780() & 1) != 0 && (sub_25436C7D0()) {
            break;
          }
          sub_2542FF22C((uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
          unint64_t v15 = (v15 + 1) & v19;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)(v11 + 8 * (v15 >> 6));
          uint64_t v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0) {
            goto LABEL_10;
          }
        }
        sub_2542FF22C((uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2542FF22C((uint64_t)v7, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      }
      else
      {
LABEL_10:
        *(void *)(v11 + 8 * v16) = v18 | v17;
        uint64_t result = sub_2542FF2AC((uint64_t)v7, *(void *)(v9 + 48) + v15 * v12, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        uint64_t v21 = *(void *)(v9 + 16);
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v23;
      }
      if (++v10 == v24) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2542FEE98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9408);
    uint64_t v3 = sub_25436D270();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = sub_25436D8E0();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void *sub_2542FEFA8(void *a1)
{
  v1[2] = a1[2];
  v1[3] = a1[3];
  v1[4] = a1[4];
  v1[5] = a1[5];
  v1[6] = a1[6];
  v1[7] = a1[7];
  return v1;
}

uint64_t type metadata accessor for DKPersonGroup(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD93A8);
}

unint64_t sub_2542FF000()
{
  unint64_t result = qword_269DD9330;
  if (!qword_269DD9330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9330);
  }
  return result;
}

uint64_t sub_2542FF054(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2542FF09C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD9338);
    sub_2542FF054(a2, MEMORY[0x263F07508]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonGroupFilter.StampedPerson(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD93B8);
}

uint64_t type metadata accessor for DKPersonGroupFilter.Track(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD93C8);
}

unint64_t sub_2542FF170()
{
  unint64_t result = qword_269DD9360;
  if (!qword_269DD9360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9360);
  }
  return result;
}

uint64_t sub_2542FF1C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2542FF22C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_2542FF28C(uint64_t *a1, uint64_t a2)
{
  return sub_2542F46D0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2542FF2AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2542FF314()
{
  return sub_2542FF054(&qword_269DD9390, (void (*)(uint64_t))type metadata accessor for DKPersonGroup);
}

uint64_t sub_2542FF35C()
{
  return sub_2542FF054(&qword_269DD9398, (void (*)(uint64_t))type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_2542FF3A4()
{
  return sub_2542FF054(&qword_269DD93A0, (void (*)(uint64_t))type metadata accessor for DKPersonGroupFilter.Track);
}

double sub_2542FF3EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2542FF3FC(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 16) = *a1;
  return result;
}

double sub_2542FF40C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_2542FF41C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 24) = *a1;
  return result;
}

double sub_2542FF42C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 32);
  *a2 = result;
  return result;
}

double sub_2542FF43C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 32) = *a1;
  return result;
}

double sub_2542FF44C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 40);
  *a2 = result;
  return result;
}

double sub_2542FF45C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 40) = *a1;
  return result;
}

double sub_2542FF46C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 48);
  *a2 = result;
  return result;
}

double sub_2542FF47C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 48) = *a1;
  return result;
}

double sub_2542FF48C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2542FF49C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 56) = *a1;
  return result;
}

uint64_t type metadata accessor for DKPersonGroupConfiguration()
{
  return self;
}

uint64_t method lookup function for DKPersonGroupConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonGroupConfiguration);
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKPersonGroup(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25436C7B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_25436C800();
    uint64_t v15 = *(void *)(v14 - 8);
    BOOL v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v16((char *)a2 + v19, 1, v14))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v21, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    }
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    if (v16((char *)a2 + v23, 1, v14))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v24, v25, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
    }
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DKPersonGroup(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_25436C800();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v11 = a1 + a2[9];
  if (!v9(v11, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for DKPersonGroup(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  if (v15(&a2[v17], 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = &a2[v21];
  if (v15(&a2[v21], 1, v13))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v23, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
  }
  *(void *)((char *)a1 + a3[10]) = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DKPersonGroup(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15(&a1[v19], 1, v13);
  int v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v20, v21, v13);
LABEL_13:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  int v28 = v15(&a1[v25], 1, v13);
  int v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v26, v27, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for DKPersonGroup(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  if (v15(&a2[v17], 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[9];
  int v22 = (char *)a1 + v21;
  int v23 = &a2[v21];
  if (v15(&a2[v21], 1, v13))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v23, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
  }
  *(void *)((char *)a1 + a3[10]) = *(void *)&a2[a3[10]];
  return a1;
}

char *assignWithTake for DKPersonGroup(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25436C7B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15(&a1[v19], 1, v13);
  int v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (char *)a2 + v25;
  int v28 = v15(&a1[v25], 1, v13);
  int v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25430099C);
}

uint64_t sub_25430099C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25436C7B0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[10]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254300AC4);
}

uint64_t sub_254300AC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_25436C7B0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[10]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_254300BD4()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_254300CBC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_254300CBC()
{
  if (!qword_269DD83E0)
  {
    sub_25436C800();
    unint64_t v0 = sub_25436D130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269DD83E0);
    }
  }
}

uint64_t type metadata accessor for DKPersonGroupFilter()
{
  return self;
}

uint64_t method lookup function for DKPersonGroupFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonGroupFilter);
}

uint64_t dispatch thunk of DKPersonGroupFilter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.updateGroups(time:faceTracks:bodyTracks:handTracks:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.getDetectedGroups(faceTracks:bodyTracks:handTracks:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKPersonGroupFilter.StampedPerson(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25436C7B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25436C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25430128C);
}

uint64_t sub_25430128C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_25436C800();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254301398);
}

uint64_t sub_254301398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_25436C800();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_25430149C()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DKPersonGroupFilter.Track(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_25436C800();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_25436C800();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254301950);
}

uint64_t sub_254301950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2543019D4);
}

uint64_t sub_2543019D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_25436C800();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_254301A48()
{
  uint64_t result = sub_25436C800();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for DKPersonGroupFilter.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DKPersonGroupFilter.State(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DKPersonGroupFilter.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DKPersonGroupFilter.State(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroupFilter.State()
{
  return &type metadata for DKPersonGroupFilter.State;
}

unsigned char *storeEnumTagSinglePayload for DKPersonGroupFilter.Track.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254301DDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroupFilter.Track.CodingKeys()
{
  return &type metadata for DKPersonGroupFilter.Track.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DKPersonGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254301EE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroup.CodingKeys()
{
  return &type metadata for DKPersonGroup.CodingKeys;
}

unint64_t sub_254301F1C()
{
  unint64_t result = qword_269DD93D8;
  if (!qword_269DD93D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD93D8);
  }
  return result;
}

unint64_t sub_254301F74()
{
  unint64_t result = qword_269DD93E0;
  if (!qword_269DD93E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD93E0);
  }
  return result;
}

unint64_t sub_254301FCC()
{
  unint64_t result = qword_269DD93E8;
  if (!qword_269DD93E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD93E8);
  }
  return result;
}

unint64_t sub_254302024()
{
  unint64_t result = qword_269DD93F0;
  if (!qword_269DD93F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD93F0);
  }
  return result;
}

unint64_t sub_25430207C()
{
  unint64_t result = qword_269DD93F8;
  if (!qword_269DD93F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD93F8);
  }
  return result;
}

unint64_t sub_2543020D4()
{
  unint64_t result = qword_269DD9400;
  if (!qword_269DD9400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9400);
  }
  return result;
}

uint64_t sub_254302128(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644970756F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x55556E6F73726570 && a2 == 0xEA00000000004449 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4449555565636166 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4449555579646F62 && a2 == 0xE800000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44495555646E6168 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_25430244C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F72477473616CLL && a2 == 0xEB00000000644970;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t DKLockActor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 112) = 1;
  *(void *)(v0 + 120) = v1;
  return v0;
}

uint64_t sub_2543025FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKLockActor.init()()
{
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 112) = 1;
  *(void *)(v0 + 120) = v1;
  return v0;
}

uint64_t sub_2543026D0()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2543027A0, v0, 0);
}

uint64_t sub_2543027A0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[2];
  uint64_t v10 = *(void *)(v9 + 112);
  BOOL v11 = __OFSUB__(v10, 1);
  uint64_t v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    return MEMORY[0x270FA2318](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  *(void *)(v9 + 112) = v12;
  if (v12 < 0)
  {
    uint64_t v15 = v8[2];
    sub_25436C790();
    unint64_t v16 = sub_254302BB0();
    int v17 = (void *)swift_task_alloc();
    v8[7] = v17;
    void *v17 = v8;
    v17[1] = sub_2543028F0;
    a7 = v8[2];
    a8 = MEMORY[0x263F8D4F8];
    a6 = sub_254302D8C;
    a1 = v8 + 8;
    a2 = v15;
    a3 = v16;
    a4 = 0x29286B636F6CLL;
    a5 = 0xE600000000000000;
    return MEMORY[0x270FA2318](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v8[1];
  return v13();
}

uint64_t sub_2543028F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_254302A00, v1, 0);
}

uint64_t sub_254302A00()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_25436C790();
  sub_25436C700();
  double v5 = v4;
  char v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v2);
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[3];
  if (v5 > 0.05)
  {
    sub_25436D290();
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000016;
    unint64_t v17 = 0x800000025437CCA0;
    __swift_instantiateConcreteTypeFromMangledName(qword_269DD7F88);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8D538];
    *(_OWORD *)(v9 + 16) = xmmword_25436F130;
    uint64_t v11 = MEMORY[0x263F8D5B8];
    *(void *)(v9 + 56) = v10;
    *(void *)(v9 + 64) = v11;
    *(double *)(v9 + 32) = v5;
    sub_25436CC30();
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    uint64_t v12 = v16;
    LOBYTE(v16) = 0;
    os_log_type_t v13 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v16, v12, v17, v13);
    swift_bridgeObjectRelease();
  }
  v6(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

unint64_t sub_254302BB0()
{
  unint64_t result = qword_269DD9438[0];
  if (!qword_269DD9438[0])
  {
    type metadata accessor for DKLockActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269DD9438);
  }
  return result;
}

uint64_t type metadata accessor for DKLockActor()
{
  return self;
}

uint64_t sub_254302C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9450);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for DKLockActor.ContinuationWrapper();
  uint64_t v8 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation, v7, v4);
  uint64_t v9 = swift_retain();
  MEMORY[0x25A275490](v9);
  if (*(void *)((*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_25436CE10();
  sub_25436CE60();
  sub_25436CDE0();
  return swift_release();
}

uint64_t sub_254302D8C(uint64_t a1)
{
  return sub_254302C28(a1, v1);
}

uint64_t sub_254302D94(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_2543632CC(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_25436CDE0();
      return v11;
    }
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_254302E78(double a1)
{
  *(void *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  return MEMORY[0x270FA2498](sub_254302E9C, v1, 0);
}

uint64_t sub_254302E9C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t (*a6)(uint64_t a1), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8[3];
  uint64_t v10 = *(void *)(v9 + 112);
  BOOL v11 = __OFSUB__(v10, 1);
  uint64_t v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    return MEMORY[0x270FA2318](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  *(void *)(v9 + 112) = v12;
  if (v12 < 0)
  {
    uint64_t v15 = v8[3];
    uint64_t v16 = v8[2];
    unint64_t v17 = sub_254302BB0();
    uint64_t v18 = swift_task_alloc();
    v8[4] = v18;
    *(void *)(v18 + 16) = v15;
    *(void *)(v18 + 24) = v16;
    uint64_t v19 = (void *)swift_task_alloc();
    v8[5] = v19;
    *uint64_t v19 = v8;
    v19[1] = sub_254303010;
    a8 = MEMORY[0x263F8D4F8];
    a6 = sub_254304D40;
    a1 = v8 + 6;
    a2 = v15;
    a3 = v17;
    a4 = 0x6D6974286B636F6CLL;
    a5 = 0xEE00293A74756F65;
    a7 = v18;
    return MEMORY[0x270FA2318](a1, a2, a3, a4, a5, a6, a7, a8);
  }
  os_log_type_t v13 = (uint64_t (*)(uint64_t))v8[1];
  return v13(1);
}

uint64_t sub_254303010()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25430313C, v1, 0);
}

uint64_t sub_25430313C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_254303154(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9608);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9450);
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v11);
  type metadata accessor for DKLockActor.ContinuationWrapper();
  uint64_t v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation, v13, v9);
  uint64_t v15 = swift_retain();
  MEMORY[0x25A275490](v15);
  if (*(void *)((*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_25436CE10();
  sub_25436CE60();
  sub_25436CDE0();
  uint64_t v16 = sub_25436CF20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  unint64_t v17 = sub_254302BB0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = v17;
  *(double *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a2;
  *(void *)(v18 + 48) = v14;
  swift_retain_n();
  sub_254303704((uint64_t)v8, (uint64_t)&unk_269DD9618, v18);
  return swift_release();
}

uint64_t sub_2543033A8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2543033CC, a5, 0);
}

uint64_t sub_2543033CC(unint64_t a1)
{
  double v2 = *(double *)(v1 + 16);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!is_mul_ok((unint64_t)v2, 0x3B9ACA00uLL))
  {
LABEL_11:
    __break(1u);
    return MEMORY[0x270FA1FF0](a1);
  }
  unint64_t v3 = 1000000000 * (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 40) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_2543034BC;
  a1 = v3;
  return MEMORY[0x270FA1FF0](a1);
}

uint64_t sub_2543034BC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 24);
    return MEMORY[0x270FA2498](sub_254303604, v6, 0);
  }
}

uint64_t sub_254303604()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_254304D4C(v2, v1);
  char v5 = v4;
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = *(void *)(v0 + 24);
    uint64_t v8 = *(void *)(v7 + 112);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9)
    {
      __break(1u);
      return result;
    }
    *(void *)(v7 + 112) = v10;
    sub_254302D94(v3);
    swift_release();
    *(unsigned char *)(v0 + 56) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9450);
    sub_25436CED0();
  }
  double v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_254303704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25436CF20();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_25436CF10();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_254305FCC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25436CEC0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_254303884()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2543038A4, v0, 0);
}

uint64_t sub_2543038A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 112);
  if (v2 >= 1) {
    *(void *)(v1 + 112) = v2 - 1;
  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v2 > 0);
}

void sub_2543038D4()
{
  uint64_t v1 = v0[14];
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v0[15];
    v0 += 15;
    unint64_t v4 = v5;
    *(v0 - 1) = v3;
    if (!(v5 >> 62))
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return;
      }
LABEL_4:
      uint64_t v6 = *v0;
      if ((unint64_t)*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (v8)
        {
LABEL_6:
          uint64_t v6 = *v0;
          if (!((unint64_t)*v0 >> 62))
          {
            if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_8;
            }
            goto LABEL_21;
          }
LABEL_20:
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_25436D530();
          swift_bridgeObjectRelease();
          if (v9)
          {
LABEL_8:
            if ((v6 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_24;
              }
              swift_retain();
LABEL_11:
              if (!((unint64_t)*v0 >> 62))
              {
                if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_13:
                  sub_25425AF7C(0, 1);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9450);
                  sub_25436CED0();
                  swift_release();
                  return;
                }
LABEL_25:
                __break(1u);
                return;
              }
LABEL_24:
              swift_bridgeObjectRetain();
              uint64_t v10 = sub_25436D530();
              swift_bridgeObjectRelease();
              if (v10) {
                goto LABEL_13;
              }
              goto LABEL_25;
            }
LABEL_22:
            MEMORY[0x25A275A00](0, v6);
            goto LABEL_11;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_4;
  }
}

uint64_t DKLockActor.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DKLockActor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t DKLockActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_254303B18@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
}

uint64_t sub_254303B74(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 40))(v1 + *(void *)(*(void *)v1 + 88), a1);
}

uint64_t sub_254303BD0()
{
  return v0;
}

uint64_t DKLockProtected.__allocating_init(_:)(uint64_t a1)
{
  return sub_25430426C(a1, (void (*)(uint64_t))DKLockProtected.init(_:));
}

uint64_t *DKLockProtected.init(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 96);
  *(uint64_t *)((char *)v1 + v4) = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 88), a1);
  return v1;
}

id sub_254303CAC@<X0>(uint64_t a1@<X8>)
{
  objc_msgSend(*(id *)(v1 + *(void *)(*(void *)v1 + 96)), sel_lock);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
  uint64_t v3 = *(void **)(v1 + *(void *)(*(void *)v1 + 96));
  return objc_msgSend(v3, sel_unlock);
}

id sub_254303D7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v9 = *(void **)(v1 + *(void *)(v8 + 96));
  objc_msgSend(v9, sel_lock, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  (*(void (**)(uint64_t, char *))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 40))(v1 + *(void *)(*(void *)v1 + 88), v7);
  return objc_msgSend(v9, sel_unlock);
}

uint64_t DKLockProtected.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));

  return v0;
}

uint64_t DKLockProtected.__deallocating_deinit()
{
  return sub_2543048A8((void (*)(void))DKLockProtected.deinit);
}

uint64_t sub_254303F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_25436D130();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_254304024(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_25436D130();
  double v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

id sub_2543040C4()
{
  id v1 = objc_msgSend(*(id *)(v0 + *(void *)(*(void *)v0 + 104)), sel_tryLock);
  if (v1) {
    objc_msgSend(*(id *)(v0 + *(void *)(*(void *)v0 + 104)), sel_unlock);
  }
  return v1;
}

uint64_t DKLazy.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DKLazy.init(_:)(a1, a2);
  return v4;
}

char *DKLazy.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  *((void *)v2 + 2) = 0;
  *((void *)v2 + 3) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 56))(&v2[*(void *)(v5 + 96)], 1, 1);
  uint64_t v6 = *(void *)(*(void *)v2 + 104);
  *(void *)&v2[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v7 = *((void *)v2 + 2);
  *((void *)v2 + 2) = a1;
  *((void *)v2 + 3) = a2;
  sub_2542509EC(v7);
  return v2;
}

uint64_t DKLazy.__allocating_init(wrappedValue:)(uint64_t a1)
{
  return sub_25430426C(a1, (void (*)(uint64_t))DKLazy.init(wrappedValue:));
}

uint64_t sub_25430426C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void *DKLazy.init(wrappedValue:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 96);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v7(v4, 1, 1, v5);
  uint64_t v8 = *(void *)(*v1 + 104);
  *(void *)((char *)v1 + v8) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v9 = sub_25436D130();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v4, a1, v5);
  v7(v4, 0, 1, v5);
  return v1;
}

id sub_254304434@<X0>(uint64_t a1@<X8>)
{
  BOOL v2 = v1;
  uint64_t v28 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_25436D130();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - v14;
  objc_msgSend(*(id *)((char *)v2 + *(void *)(v3 + 104)), sel_lock, v13);
  uint64_t v16 = (char *)v2 + *(void *)(*v2 + 96);
  uint64_t v17 = sub_25436D130();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v15, 1, v4) != 1) {
    goto LABEL_4;
  }
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t v21 = (void (*)(uint64_t))v2[2];
  if (v21)
  {
    uint64_t v22 = swift_retain();
    v21(v22);
    sub_2542509EC((uint64_t)v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v4);
    int v23 = (char *)v2 + *(void *)(*v2 + 96);
    uint64_t v24 = sub_25436D130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v23, v11, v24);
    uint64_t v25 = (char *)v2 + *(void *)(*v2 + 96);
    uint64_t v26 = sub_25436D130();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v8, v25, v26);
    id result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v8, 1, v4);
    uint64_t v15 = v8;
    if (result != 1)
    {
LABEL_4:
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v15, v4);
      return objc_msgSend(*(id *)((char *)v2 + *(void *)(*v2 + 104)), sel_unlock);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *DKLazy.deinit()
{
  sub_2542509EC(v0[2]);
  id v1 = (char *)v0 + *(void *)(*v0 + 96);
  uint64_t v2 = sub_25436D130();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t DKLazy.__deallocating_deinit()
{
  return sub_2543048A8((void (*)(void))DKLazy.deinit);
}

uint64_t sub_2543048A8(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t DKThreadSafe.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for DKThreadSafe() + 28);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v7(v6, a1, a2);
}

id DKThreadSafe.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  objc_msgSend(*v2, sel_lock);
  (*(void (**)(uint64_t, char *))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, (char *)v2 + *(int *)(a1 + 28));
  id v5 = *v2;
  return objc_msgSend(v5, sel_unlock);
}

uint64_t DKThreadSafe.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_254304E54(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

void (*DKThreadSafe.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  id v5 = malloc(0x38uLL);
  *a1 = v5;
  *id v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v5[3] = v7;
  v5[4] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v5[5] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v5[6] = v10;
  objc_msgSend(*v2, sel_lock);
  (*(void (**)(void *, char *, uint64_t))(v8 + 16))(v10, (char *)v2 + *(int *)(a2 + 28), v6);
  objc_msgSend(*v2, sel_unlock);
  return sub_254304BB4;
}

void sub_254304BB4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v8 = (id *)(*a1)[1];
  uint64_t v7 = (*a1)[2];
  uint64_t v9 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v7);
    objc_msgSend(*v8, sel_lock);
    (*(void (**)(char *, void *, uint64_t))(v5 + 24))((char *)v8 + *(int *)(v9 + 28), v3, v7);
    objc_msgSend(*v8, sel_unlock);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v7);
    v10(v4, v7);
  }
  else
  {
    objc_msgSend(*v8, sel_lock);
    (*(void (**)(char *, void *, uint64_t))(v5 + 24))((char *)v8 + *(int *)(v9 + 28), v4, v7);
    objc_msgSend(*v8, sel_unlock);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v7);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_254304D40(uint64_t a1)
{
  return sub_254303154(a1, *(void *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_254304D4C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x25A275A00](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t type metadata accessor for DKThreadSafe()
{
  return __swift_instantiateGenericMetadata();
}

id sub_254304E54(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*v2, sel_lock);
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 24))((char *)v2 + *(int *)(a2 + 28), a1);
  id v5 = *v2;
  return objc_msgSend(v5, sel_unlock);
}

id sub_254304EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DKThreadSafe();
  return DKThreadSafe.wrappedValue.getter(v2, a1);
}

id sub_254304F20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKThreadSafe();
  return sub_254304E54(a1, v2);
}

uint64_t sub_254304F60()
{
  return 8;
}

void *sub_254304F6C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for DKLockActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLockActor);
}

uint64_t dispatch thunk of DKLockActor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKLockActor.lock()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426BA30;
  return v4();
}

uint64_t dispatch thunk of DKLockActor.lock(timeout:)(double a1)
{
  uint64_t v7 = (uint64_t (*)(__n128))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7E8;
  v5.n128_f64[0] = a1;
  return v7(v5);
}

uint64_t dispatch thunk of DKLockActor.lockIfAvailable()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 184) + **(int **)(*(void *)v0 + 184));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426C424;
  return v4();
}

uint64_t dispatch thunk of DKLockActor.unlock()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_2543052B4()
{
  return type metadata accessor for DKLockActor.ContinuationWrapper();
}

uint64_t type metadata accessor for DKLockActor.ContinuationWrapper()
{
  uint64_t result = qword_269DD9470;
  if (!qword_269DD9470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_254305308()
{
  sub_254305398();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_254305398()
{
  if (!qword_269DD9480[0])
  {
    unint64_t v0 = sub_25436CEE0();
    if (!v1) {
      atomic_store(v0, qword_269DD9480);
    }
  }
}

uint64_t sub_254305400()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DKLockProtected()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DKLockProtected(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLockProtected);
}

uint64_t dispatch thunk of DKLockProtected.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of DKLockProtected.get()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKLockProtected.set(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_25430552C()
{
  uint64_t result = sub_25436D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DKLazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DKLazy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLazy);
}

uint64_t dispatch thunk of DKLazy.projectedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKLazy.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DKLazy.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DKLazy.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_254305678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_254305680()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_254305720(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_254305824(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void **sub_254305898(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  id v11 = v4;
  v7(v9, v10, v5);
  return a1;
}

void **sub_254305928(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

void *sub_2543059B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_254305A24(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_254305AAC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_254305C4C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x254305EA8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_254305ED0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_254305F18()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_25426BA30;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 16) = v2;
  return MEMORY[0x270FA2498](sub_2543033CC, v4, 0);
}

uint64_t sub_254305FCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9608);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DKFaceTrackerConfiguration.__allocating_init()()
{
  *(_OWORD *)(swift_allocObject() + 176) = xmmword_25436FEB0;
  return DKTrackerConfiguration.init()();
}

uint64_t DKFaceTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2543060E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = v3 + qword_269DDAA38;
  uint64_t v7 = swift_retain();
  MEMORY[0x25A275490](v7);
  if (*(void *)(*(void *)v6 + 16) >= *(void *)(*(void *)v6 + 24) >> 1) {
LABEL_8:
  }
    sub_25436CE10();
  sub_25436CE60();
  uint64_t result = sub_25436CDE0();
  uint64_t v9 = *(void *)(*(void *)v6 + 16);
  uint64_t v10 = qword_269DDAA20;
  while (*(void *)(*(void *)(v5 + v10) + 72) < v9)
  {
    if (!v9)
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t result = a3(0, 1);
    uint64_t v9 = *(void *)(*(void *)v6 + 16);
  }
  return result;
}

uint64_t sub_2543061BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[2];
  swift_retain();
  if (v4) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = &unk_2703B2358;
  }
  sub_254277360((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2542A49DC();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    int v13 = (void *)(v2 + qword_269DDAA00);
    *int v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_254306290(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[2];
  swift_retain();
  if (v4) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = &unk_2703B2388;
  }
  sub_254277360((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2542A49DC();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    int v13 = (void *)(v2 + qword_269DDAA00);
    *int v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_254306364(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[2];
  swift_retain();
  if (v4) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = &unk_2703B23B8;
  }
  sub_254277360((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2542A49DC();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    int v13 = (void *)(v2 + qword_269DDAA00);
    *int v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_254306438(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v10 - 8);
  unsigned int v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v46 = v9;
    *(unsigned char *)(v3 + qword_269DDAA30) = 1;
    CGFloat v13 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    CGFloat v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
    CGFloat v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    CGFloat v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
    uint64_t v45 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect;
    swift_retain();
    swift_retain();
    sub_25435CC98(v13, v14, v15, v16);
    swift_release();
    int v17 = (void *)swift_bridgeObjectRetain();
    sub_2543061BC(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v3 + qword_269DDAA28;
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v48 = v7 + 8;
    v47(v3 + qword_269DDAA28, v6);
    *(void *)&long long v49 = v7;
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v43(v18, a1, v6);
    uint64_t v19 = *(void *)(*(void *)v3 + 200);
    swift_retain();
    swift_release();
    *(void *)(v3 + v19) = a2;
    uint64_t v44 = v6;
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
    char v21 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId + 8);
    uint64_t v22 = v3 + qword_269DDA9F0;
    uint64_t v23 = type metadata accessor for DKPersonGroupFilter.Track(0);
    uint64_t v24 = &v12[*(int *)(v23 + 20)];
    uint64_t v25 = sub_25436C800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v22, v25);
    uint64_t v26 = *(void *)(v3 + qword_269DDAA00);
    *(void *)unsigned int v12 = v20;
    uint64_t v27 = a1;
    v12[8] = v21;
    *(void *)&v12[*(int *)(v23 + 24)] = v26;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 0, 1, v23);
    sub_254286154((uint64_t)v12, v3 + *(void *)(*(void *)v3 + 232), &qword_269DD8040);
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8)) {
      uint64_t v28 = -1;
    }
    else {
      uint64_t v28 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
    }
    *(void *)(v3 + qword_269DDAA08) = v28;
    if (*(void *)(v3 + *(void *)(*(void *)v3 + 216)))
    {
      int v29 = v46;
      uint64_t v30 = v44;
      v43((uint64_t)v46, v27, v44);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      uint64_t v33 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v29, v30);
      char v35 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8);
      *(void *)uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
      *(unsigned char *)(v33 + 8) = v35;
      if (*(unsigned char *)(v3 + *(void *)(*(void *)v3 + 224)) == 1)
      {
        double v36 = *(double *)v45;
        *(void *)&long long v34 = *(void *)(v45 + 8);
        long long v49 = v34;
        CGFloat v37 = *(double *)(v45 + 16);
        CGFloat v38 = *(double *)(v45 + 24);
        swift_retain();
        v50.origin.x = v36;
        *(void *)&v50.origin.y = v49;
        v50.size.width = v37;
        v50.size.height = v38;
        *(double *)&long long v39 = 1.0 - v36 - CGRectGetWidth(v50);
        *((void *)&v39 + 1) = v49;
        CGFloat v40 = v37;
        CGFloat v41 = v38;
      }
      else
      {
        long long v49 = *(_OWORD *)v45;
        CGFloat v40 = *(double *)(v45 + 16);
        CGFloat v41 = *(double *)(v45 + 24);
        swift_retain();
        long long v39 = v49;
      }
      *(_OWORD *)uint64_t v32 = v39;
      *(CGFloat *)(v32 + 16) = v40;
      *(CGFloat *)(v32 + 24) = v41;
      *(unsigned char *)(v32 + 32) = 0;
      sub_25431F7D8(v31);
      swift_setDeallocating();
      v47(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v30);
      swift_deallocClassInstance();
      swift_release();
    }
    swift_retain();
    sub_2543060E8(v27, a2, sub_25425AFAC);
    return swift_release_n();
  }
  else
  {
    *(unsigned char *)(v3 + qword_269DDAA30) = 0;
    return sub_2543060E8(a1, 0, sub_25425AFAC);
  }
}

uint64_t sub_2543069E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v10 - 8);
  unsigned int v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v46 = v9;
    *(unsigned char *)(v3 + qword_269DDAA30) = 1;
    CGFloat v13 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    CGFloat v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
    CGFloat v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    CGFloat v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
    uint64_t v45 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect;
    swift_retain();
    swift_retain();
    sub_25435CC98(v13, v14, v15, v16);
    swift_release();
    int v17 = (void *)swift_bridgeObjectRetain();
    sub_254306290(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v3 + qword_269DDAA28;
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v48 = v7 + 8;
    v47(v3 + qword_269DDAA28, v6);
    *(void *)&long long v49 = v7;
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v43(v18, a1, v6);
    uint64_t v19 = *(void *)(*(void *)v3 + 200);
    swift_retain();
    swift_release();
    *(void *)(v3 + v19) = a2;
    uint64_t v44 = v6;
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
    char v21 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId + 8);
    uint64_t v22 = v3 + qword_269DDA9F0;
    uint64_t v23 = type metadata accessor for DKPersonGroupFilter.Track(0);
    uint64_t v24 = &v12[*(int *)(v23 + 20)];
    uint64_t v25 = sub_25436C800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v22, v25);
    uint64_t v26 = *(void *)(v3 + qword_269DDAA00);
    *(void *)unsigned int v12 = v20;
    uint64_t v27 = a1;
    v12[8] = v21;
    *(void *)&v12[*(int *)(v23 + 24)] = v26;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 0, 1, v23);
    sub_254286154((uint64_t)v12, v3 + *(void *)(*(void *)v3 + 232), &qword_269DD8040);
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8)) {
      uint64_t v28 = -1;
    }
    else {
      uint64_t v28 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
    }
    *(void *)(v3 + qword_269DDAA08) = v28;
    if (*(void *)(v3 + *(void *)(*(void *)v3 + 216)))
    {
      int v29 = v46;
      uint64_t v30 = v44;
      v43((uint64_t)v46, v27, v44);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      uint64_t v33 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v29, v30);
      char v35 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8);
      *(void *)uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
      *(unsigned char *)(v33 + 8) = v35;
      if (*(unsigned char *)(v3 + *(void *)(*(void *)v3 + 224)) == 1)
      {
        double v36 = *(double *)v45;
        *(void *)&long long v34 = *(void *)(v45 + 8);
        long long v49 = v34;
        CGFloat v37 = *(double *)(v45 + 16);
        CGFloat v38 = *(double *)(v45 + 24);
        swift_retain();
        v50.origin.x = v36;
        *(void *)&v50.origin.y = v49;
        v50.size.width = v37;
        v50.size.height = v38;
        *(double *)&long long v39 = 1.0 - v36 - CGRectGetWidth(v50);
        *((void *)&v39 + 1) = v49;
        CGFloat v40 = v37;
        CGFloat v41 = v38;
      }
      else
      {
        long long v49 = *(_OWORD *)v45;
        CGFloat v40 = *(double *)(v45 + 16);
        CGFloat v41 = *(double *)(v45 + 24);
        swift_retain();
        long long v39 = v49;
      }
      *(_OWORD *)uint64_t v32 = v39;
      *(CGFloat *)(v32 + 16) = v40;
      *(CGFloat *)(v32 + 24) = v41;
      *(unsigned char *)(v32 + 32) = 0;
      sub_25431F7D8(v31);
      swift_setDeallocating();
      v47(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v30);
      swift_deallocClassInstance();
      swift_release();
    }
    swift_retain();
    sub_2543060E8(v27, a2, sub_25425AFB8);
    return swift_release_n();
  }
  else
  {
    *(unsigned char *)(v3 + qword_269DDAA30) = 0;
    return sub_2543060E8(a1, 0, sub_25425AFB8);
  }
}

uint64_t sub_254306F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v10 - 8);
  unsigned int v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v46 = v9;
    *(unsigned char *)(v3 + qword_269DDAA30) = 1;
    CGFloat v13 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    CGFloat v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 8);
    CGFloat v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
    CGFloat v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 24);
    uint64_t v45 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
    swift_retain();
    swift_retain();
    sub_25435CC98(v13, v14, v15, v16);
    swift_release();
    int v17 = (void *)swift_bridgeObjectRetain();
    sub_254306364(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = v3 + qword_269DDAA28;
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v48 = v7 + 8;
    v47(v3 + qword_269DDAA28, v6);
    *(void *)&long long v49 = v7;
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v43(v18, a1, v6);
    uint64_t v19 = *(void *)(*(void *)v3 + 200);
    swift_retain();
    swift_release();
    *(void *)(v3 + v19) = a2;
    uint64_t v44 = v6;
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
    char v21 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId + 8);
    uint64_t v22 = v3 + qword_269DDA9F0;
    uint64_t v23 = type metadata accessor for DKPersonGroupFilter.Track(0);
    uint64_t v24 = &v12[*(int *)(v23 + 20)];
    uint64_t v25 = sub_25436C800();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v22, v25);
    uint64_t v26 = *(void *)(v3 + qword_269DDAA00);
    *(void *)unsigned int v12 = v20;
    uint64_t v27 = a1;
    v12[8] = v21;
    *(void *)&v12[*(int *)(v23 + 24)] = v26;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 0, 1, v23);
    sub_254286154((uint64_t)v12, v3 + *(void *)(*(void *)v3 + 232), &qword_269DD8040);
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8)) {
      uint64_t v28 = -1;
    }
    else {
      uint64_t v28 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
    }
    *(void *)(v3 + qword_269DDAA08) = v28;
    if (*(void *)(v3 + *(void *)(*(void *)v3 + 216)))
    {
      int v29 = v46;
      uint64_t v30 = v44;
      v43((uint64_t)v46, v27, v44);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      uint64_t v31 = swift_allocObject();
      uint64_t v32 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      uint64_t v33 = v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v29, v30);
      char v35 = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance + 8);
      *(void *)uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
      *(unsigned char *)(v33 + 8) = v35;
      if (*(unsigned char *)(v3 + *(void *)(*(void *)v3 + 224)) == 1)
      {
        double v36 = *(double *)v45;
        *(void *)&long long v34 = *(void *)(v45 + 8);
        long long v49 = v34;
        CGFloat v37 = *(double *)(v45 + 16);
        CGFloat v38 = *(double *)(v45 + 24);
        swift_retain();
        v50.origin.x = v36;
        *(void *)&v50.origin.y = v49;
        v50.size.width = v37;
        v50.size.height = v38;
        *(double *)&long long v39 = 1.0 - v36 - CGRectGetWidth(v50);
        *((void *)&v39 + 1) = v49;
        CGFloat v40 = v37;
        CGFloat v41 = v38;
      }
      else
      {
        long long v49 = *(_OWORD *)v45;
        CGFloat v40 = *(double *)(v45 + 16);
        CGFloat v41 = *(double *)(v45 + 24);
        swift_retain();
        long long v39 = v49;
      }
      *(_OWORD *)uint64_t v32 = v39;
      *(CGFloat *)(v32 + 16) = v40;
      *(CGFloat *)(v32 + 24) = v41;
      *(unsigned char *)(v32 + 32) = 0;
      sub_25431F7D8(v31);
      swift_setDeallocating();
      v47(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v30);
      swift_deallocClassInstance();
      swift_release();
    }
    swift_retain();
    sub_2543060E8(v27, a2, sub_25425AFC4);
    return swift_release_n();
  }
  else
  {
    *(unsigned char *)(v3 + qword_269DDAA30) = 0;
    return sub_2543060E8(a1, 0, sub_25425AFC4);
  }
}

double sub_254307530()
{
  return *(double *)(v0 + 176);
}

void sub_254307538(double a1)
{
  *(double *)(v1 + 176) = a1;
}

uint64_t (*sub_254307540())()
{
  return nullsub_1;
}

double sub_254307560()
{
  return *(double *)(v0 + 184);
}

void sub_254307568(double a1)
{
  *(double *)(v1 + 184) = a1;
}

uint64_t (*sub_254307570())()
{
  return nullsub_1;
}

uint64_t DKFaceTrackerConfiguration.init()()
{
  *(_OWORD *)(v0 + 176) = xmmword_25436FEB0;
  return DKTrackerConfiguration.init()();
}

void DKFaceTrackerConfiguration.__allocating_init(configuration:)()
{
}

void DKFaceTrackerConfiguration.init(configuration:)()
{
}

uint64_t DKFaceTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKFaceTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_254307678()
{
  return swift_retain();
}

uint64_t sub_254307688(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAFC0) = a1;
  return swift_release();
}

uint64_t (*sub_2543076A0())()
{
  return nullsub_1;
}

uint64_t sub_2543076C8()
{
  return swift_retain();
}

uint64_t sub_2543076D8(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAFC8) = a1;
  return swift_release();
}

uint64_t (*sub_2543076F0())()
{
  return nullsub_1;
}

uint64_t sub_254307718()
{
  return swift_retain();
}

uint64_t sub_254307728(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAFD0) = a1;
  return swift_release();
}

uint64_t (*sub_254307740())()
{
  return nullsub_1;
}

uint64_t DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v63 = a6;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a2;
  uint64_t v61 = a1;
  uint64_t v62 = a3;
  uint64_t v9 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25436C800();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25436C7B0();
  uint64_t v67 = *(void *)(v13 - 8);
  uint64_t v14 = v67;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  double v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 + 176);
  char v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v14 + 56);
  uint64_t v68 = v13;
  v21(v19, 1, 1, v13, v17);
  uint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21;
  uint64_t v54 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21;
  type metadata accessor for DKSmoothingFilter();
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 33) = 0;
  *(void *)(v23 + 40) = 0;
  *(void *)(v23 + 48) = 0;
  *(void *)(v23 + 56) = 0x3FF0000000000000;
  uint64_t v24 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v22(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v13);
  uint64_t v25 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  uint64_t v26 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  *(unsigned char *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = v20;
  *(unsigned char *)(v23 + 32) = 1;
  uint64_t v55 = v7;
  swift_retain();
  sub_254286154((uint64_t)v19, v24, &qword_269DD7A40);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  *(void *)(v7 + qword_269DDAFC0) = v23;
  uint64_t v27 = v66;
  uint64_t v28 = *(void *)(v66 + 176);
  uint64_t v29 = v68;
  uint64_t v30 = v54;
  v54((uint64_t)v19, 1, 1, v68);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 33) = 0;
  *(void *)(v31 + 40) = 0;
  *(void *)(v31 + 48) = 0;
  *(void *)(v31 + 56) = 0x3FF0000000000000;
  uint64_t v32 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v30(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v29);
  uint64_t v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v30;
  uint64_t v34 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  uint64_t v35 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  *(unsigned char *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v31 + 16) = v28;
  *(void *)(v31 + 24) = v28;
  *(unsigned char *)(v31 + 32) = 1;
  sub_254286154((uint64_t)v19, v32, &qword_269DD7A40);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  uint64_t v36 = v55;
  *(void *)(v55 + qword_269DDAFC8) = v31;
  uint64_t v37 = *(void *)(v27 + 176);
  uint64_t v38 = v68;
  v33(v19, 1, 1, v68);
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 33) = 0;
  *(void *)(v39 + 40) = 0;
  *(void *)(v39 + 48) = 0;
  *(void *)(v39 + 56) = 0x3FF0000000000000;
  uint64_t v40 = v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v33((char *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v38);
  uint64_t v41 = v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  uint64_t v42 = v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  *(unsigned char *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v39 + 16) = v37;
  *(void *)(v39 + 24) = v37;
  *(unsigned char *)(v39 + 32) = 1;
  sub_254286154((uint64_t)v19, v40, &qword_269DD7A40);
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  *(void *)(v36 + qword_269DDAFD0) = v39;
  swift_release();
  uint64_t v43 = v56;
  uint64_t v44 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v56, v61, v38);
  unint64_t v46 = v57;
  uint64_t v45 = v58;
  uint64_t v47 = v62;
  uint64_t v48 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v62, v59);
  uint64_t v49 = v63;
  uint64_t v50 = v60;
  sub_25428CF24(v63, v60, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v51 = sub_2543654BC(v43, v66, v46, v64, v65, v50);
  sub_25428CA3C(v49, (uint64_t (*)(void))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v48);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v44, v68);
  return v51;
}

uint64_t sub_254307D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8))
    {
      uint64_t v9 = *(void *)(v2 + qword_269DDAFC0);
      *(unsigned char *)(v9 + 33) = 0;
      uint64_t v10 = v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      swift_retain();
      sub_25425042C(v10, &qword_269DD7A40);
      uint64_t v11 = sub_25436C7B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
      swift_release();
    }
    else
    {
      double v12 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
      uint64_t v13 = sub_25436C7B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
      swift_retain();
      swift_retain();
      sub_25435D340(0, 1, (uint64_t)v8, v12);
      swift_release();
      sub_25425042C((uint64_t)v8, &qword_269DD7A40);
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8))
    {
      uint64_t v14 = *(void *)(v3 + qword_269DDAFC8);
      *(unsigned char *)(v14 + 33) = 0;
      uint64_t v15 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      sub_25425042C(v15, &qword_269DD7A40);
      uint64_t v16 = sub_25436C7B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      swift_release();
    }
    else
    {
      double v17 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
      uint64_t v18 = sub_25436C7B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
      swift_retain();
      sub_25435D340(0, 1, (uint64_t)v8, v17);
      swift_release();
      sub_25425042C((uint64_t)v8, &qword_269DD7A40);
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8))
    {
      uint64_t v19 = *(void *)(v3 + qword_269DDAFD0);
      *(unsigned char *)(v19 + 33) = 0;
      uint64_t v20 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      sub_25425042C(v20, &qword_269DD7A40);
      uint64_t v21 = sub_25436C7B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
      swift_release();
      swift_release();
    }
    else
    {
      double v22 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
      uint64_t v23 = sub_25436C7B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
      swift_retain();
      sub_25435D340(0, 1, (uint64_t)v8, v22);
      swift_release();
      swift_release();
      sub_25425042C((uint64_t)v8, &qword_269DD7A40);
    }
  }
  return sub_254306438(a1, a2);
}

BOOL sub_25430814C()
{
  return *(void *)(*(void *)(v0 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v0 + qword_269DDAA20) + 80);
}

uint64_t sub_254308180(uint64_t a1)
{
  uint64_t v100 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v94 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_25436C800();
  uint64_t v96 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v98 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_25436C7B0();
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v99 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v82 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v82 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v82 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v15 - 8);
  double v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v82 - v19;
  uint64_t v21 = type metadata accessor for DKMotion3();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1;
  sub_25435C720((uint64_t)v102);
  sub_2542721C0((uint64_t)v102, (uint64_t)v103);
  uint64_t v26 = 0;
  if (v104) {
    return v26;
  }
  uint64_t v84 = v20;
  uint64_t v85 = v11;
  uint64_t v86 = v14;
  uint64_t v87 = v22;
  uint64_t v88 = (int *)v21;
  uint64_t v27 = (uint64_t)v94;
  uint64_t v28 = v93;
  uint64_t v97 = v24;
  uint64_t v91 = v17;
  uint64_t v92 = v8;
  double v29 = *(double *)v103;
  double v30 = *(double *)&v103[1];
  double v31 = *(double *)&v103[2];
  double v32 = *(double *)&v103[3];
  uint64_t v33 = *(void *)(*(void *)v25 + 216);
  uint64_t v89 = v25;
  uint64_t v34 = *(void *)(v25 + v33);
  uint64_t v35 = v100;
  if (!v34) {
    goto LABEL_5;
  }
  swift_retain();
  swift_retain();
  sub_254251374(v35);
  swift_release();
  swift_retain();
  sub_254251374(v35);
  swift_release();
  swift_retain();
  sub_254251374(v35);
  swift_release();
  sub_25431FE58(v35);
  uint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (v36)
  {
    uint64_t v37 = (uint64_t)v84;
    sub_25428CF24(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    swift_release();
    uint64_t v38 = v87;
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, int *))(v87 + 56);
    uint64_t v40 = v37;
    uint64_t v41 = 0;
  }
  else
  {
LABEL_5:
    uint64_t v38 = v87;
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, int *))(v87 + 56);
    uint64_t v37 = (uint64_t)v84;
    uint64_t v40 = (uint64_t)v84;
    uint64_t v41 = 1;
  }
  uint64_t v42 = v88;
  uint64_t v83 = v39;
  v39(v40, v41, 1, v88);
  uint64_t v43 = v28;
  uint64_t v44 = v90;
  uint64_t v45 = v86;
  unint64_t v46 = v85;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
  v47(v86, v100, v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v38 + 48))(v37, 1, v42) == 1)
  {
    v47(v46, (uint64_t)v45, v28);
    uint64_t v48 = (uint64_t)v97;
    v47(v97, (uint64_t)v46, v28);
    *(void *)(v48 + v42[5]) = &unk_2703B1E78;
    *(void *)(v48 + v42[6]) = &unk_2703B1EB0;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v44 + 8);
    v49(v46, v28);
    *(void *)(v48 + v42[7]) = &unk_2703B1EE8;
    v49(v45, v28);
    sub_25425042C(v37, &qword_269DD7810);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v28);
    sub_254291724(v37, (uint64_t)v97);
  }
  uint64_t v50 = v99;
  uint64_t v51 = v95;
  uint64_t v52 = v96;
  v47(v92, v100, v28);
  uint64_t v53 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v98, v89 + qword_269DDA9F0, v51);
  uint64_t v54 = *(void *)(v53 + qword_269DDAA00 + 8);
  v101[0] = *(void *)(v53 + qword_269DDAA00);
  v101[1] = v54;
  uint64_t v55 = *(void *)(v53 + qword_269DDAA08);
  uint64_t v56 = *(void *)(v53 + qword_269DDA9F8);
  sub_2542A8A14(v53 + *(void *)(*(void *)v53 + 232), v27);
  uint64_t v57 = type metadata accessor for DKPersonGroupFilter.Track(0);
  int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v27, 1, v57);
  uint64_t v59 = (uint64_t)v91;
  uint64_t v60 = (void (*)(uint64_t, uint64_t, uint64_t))v47;
  if (v58)
  {
    sub_25425042C(v27, &qword_269DD8040);
    uint64_t v61 = (uint64_t)v97;
    uint64_t v62 = v83;
  }
  else
  {
    uint64_t v63 = *(void *)v27;
    int v64 = *(unsigned __int8 *)(v27 + 8);
    sub_25425042C(v27, &qword_269DD8040);
    BOOL v65 = v64 == 1;
    uint64_t v50 = v99;
    uint64_t v61 = (uint64_t)v97;
    uint64_t v62 = v83;
    if (!v65) {
      goto LABEL_14;
    }
  }
  uint64_t v63 = -1;
LABEL_14:
  sub_25428CF24(v61, v59, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  v62(v59, 0, 1, v88);
  uint64_t v66 = v89;
  v60(v50, v89 + qword_269DDAA28, v43);
  uint64_t v67 = *(void *)(v66 + qword_269DDAA38);
  uint64_t v68 = *(void *)(v67 + 16);
  if (v68)
  {
    uint64_t v69 = *(void *)(v67 + 8 * v68 + 24);
    swift_retain();
  }
  else
  {
    uint64_t v69 = 0;
  }
  uint64_t v70 = *(void *)(v66 + qword_269DDAFC0);
  int v71 = *(unsigned __int8 *)(v70 + 33);
  if (v71 == 1)
  {
    if (*(unsigned char *)(v70 + 32) == 1) {
      uint64_t v72 = atan2(*(long double *)(v70 + 48), *(long double *)(v70 + 56));
    }
    else {
      uint64_t v72 = *(void *)(v70 + 40);
    }
  }
  else
  {
    uint64_t v72 = 0;
  }
  char v73 = v71 ^ 1;
  uint64_t v74 = *(void *)(v66 + qword_269DDAFC8);
  int v75 = *(unsigned __int8 *)(v74 + 33);
  if (v75 == 1)
  {
    if (*(unsigned char *)(v74 + 32) == 1) {
      uint64_t v76 = atan2(*(long double *)(v74 + 48), *(long double *)(v74 + 56));
    }
    else {
      uint64_t v76 = *(void *)(v74 + 40);
    }
  }
  else
  {
    uint64_t v76 = 0;
  }
  char v77 = v75 ^ 1;
  uint64_t v78 = *(void *)(v66 + qword_269DDAFD0);
  int v79 = *(unsigned __int8 *)(v78 + 33);
  if (v79 == 1)
  {
    if (*(unsigned char *)(v78 + 32) == 1) {
      uint64_t v80 = atan2(*(long double *)(v78 + 48), *(long double *)(v78 + 56));
    }
    else {
      uint64_t v80 = *(void *)(v78 + 40);
    }
  }
  else
  {
    uint64_t v80 = 0;
  }
  type metadata accessor for DKFaceTrackerState(0);
  swift_allocObject();
  uint64_t v26 = DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)((uint64_t)v92, v98, v101, v55, v56, v63, (uint64_t)v91, v99, v29, v30, v31, v32, 0, v69, v72, v73, v76, v77, v80,
          v79 ^ 1u);
  sub_25428CA3C((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return v26;
}

uint64_t sub_254308B04()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t DKFaceTracker.deinit()
{
  uint64_t v0 = _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKFaceTracker.__deallocating_deinit()
{
  _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_254308C40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_254308180(a1);
  *a2 = result;
  return result;
}

uint64_t sub_254308C68(uint64_t a1, uint64_t *a2)
{
  return sub_254307D34(a1, *a2);
}

double sub_254308C70@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_254308C80(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 176) = *a1;
  return result;
}

double sub_254308C90@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 184);
  *a2 = result;
  return result;
}

double sub_254308CA0(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 184) = *a1;
  return result;
}

uint64_t sub_254308CB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + qword_269DDAFC0);
  return swift_retain();
}

uint64_t sub_254308CC8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &qword_269DDAFC0);
}

uint64_t sub_254308CD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + qword_269DDAFC8);
  return swift_retain();
}

uint64_t sub_254308CEC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &qword_269DDAFC8);
}

uint64_t sub_254308CF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + qword_269DDAFD0);
  return swift_retain();
}

uint64_t sub_254308D10(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &qword_269DDAFD0);
}

uint64_t type metadata accessor for DKFaceTrackerConfiguration()
{
  return self;
}

uint64_t method lookup function for DKFaceTrackerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFaceTrackerConfiguration);
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t type metadata accessor for DKFaceTracker()
{
  uint64_t result = qword_269DD9620;
  if (!qword_269DD9620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254308EAC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKFaceTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFaceTracker);
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t sub_25430909C()
{
  uint64_t result = os_variant_allows_internal_security_policies();
  byte_269DD9630 = result;
  return result;
}

uint64_t sub_2543090C4()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for DKDataLogStamped(0);
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254309158, 0, 0);
}

uint64_t sub_254309158()
{
  if (*(unsigned char *)(*(void *)(*(void *)(v0[2] + 40)
                            + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config)
                + 72) != 1)
    goto LABEL_8;
  if (qword_269DD7688 != -1) {
    swift_once();
  }
  if (byte_269DD9630 == 1)
  {
    uint64_t v2 = v0[3];
    uint64_t v1 = v0[4];
    uint64_t v3 = v0[2];
    uint64_t v4 = *(void *)(v3 + 48);
    uint64_t v5 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    uint64_t v6 = sub_25436C7B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v1, v5, v6);
    *(void *)(v1 + *(int *)(v2 + 20)) = v4;
    v0[5] = *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLoggingTask_logRecorder);
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[6] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_254309320;
    uint64_t v8 = v0[4];
    return sub_254325D4C(v8);
  }
  else
  {
LABEL_8:
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
    return v10(1);
  }
}

uint64_t sub_254309320()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_254309460;
  return sub_254324A18();
}

uint64_t sub_254309460()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25430955C, 0, 0);
}

uint64_t sub_25430955C()
{
  sub_254309748(*(void *)(v0 + 32));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_2543095C8()
{
  return swift_release();
}

uint64_t sub_2543095D8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2543096AC()
{
  return type metadata accessor for DKLoggingTask();
}

uint64_t type metadata accessor for DKLoggingTask()
{
  uint64_t result = qword_269DD9638;
  if (!qword_269DD9638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254309700()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_254309748(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2543097A4()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254309864, 0, 0);
}

uint64_t sub_254309864()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v6 = v0 + 4;
  uint64_t v4 = v0[4];
  uint64_t v5 = v6[1];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v5, v3 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  uint64_t v8 = sub_25427848C(v5);
  swift_release();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v5, v1);
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v2 + 48);
  v7(v5, v10 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  uint64_t v11 = sub_2542784C0(v5);
  swift_release();
  v9(v5, v1);
  *(void *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = v11;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v2 + 48);
  v7(v5, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  uint64_t v13 = sub_254278750(v5);
  swift_release();
  v9(v5, v1);
  *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = v13;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v2 + 48);
  uint64_t v15 = *(void *)(*(void *)(v2 + 40)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  v7(v5, v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  uint64_t v16 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  unint64_t v17 = *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  uint64_t v18 = (void *)swift_task_alloc();
  v18[2] = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_254277A90((uint64_t (*)(uint64_t *))sub_254309E90, v18, v17);
  swift_task_dealloc();
  *(void *)(v15 + v16) = v19;
  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(v15 + v16);
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v5;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_2542778C4((void (*)(uint64_t *__return_ptr, uint64_t *))sub_254309EB0, v21, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v9(v5, v1);
  *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = v22;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v2 + 48);
  unint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (v24)
  {
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_25436D530();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(v2 + 48);
      if (v34 < 1) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    if (*(uint64_t *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_4:
      (*(void (**)(uint64_t, uint64_t, void))(v36[4] + 24))(*(void *)(v2 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v36[3]);
      uint64_t v23 = *(void *)(v2 + 48);
    }
  }
LABEL_5:
  unint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (v25)
  {
    unint64_t v26 = *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
    if (v26)
    {
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = sub_25436D530();
        uint64_t v27 = result;
        if (result) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        if (v27)
        {
LABEL_9:
          if (v27 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v27; ++i)
          {
            if ((v26 & 0xC000000000000001) != 0)
            {
              uint64_t v30 = MEMORY[0x25A275A00](i, v26);
            }
            else
            {
              uint64_t v30 = *(void *)(v26 + 8 * i + 32);
              swift_retain();
            }
            swift_bridgeObjectRetain();
            swift_retain();
            unint64_t v31 = sub_254309ECC(v25, v30);
            swift_release();
            swift_bridgeObjectRelease();
            if (v31 >> 62) {
              uint64_t v32 = sub_25436D530();
            }
            else {
              uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (!v32)
            {
              uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
              swift_retain();
              swift_release();
              *(void *)(v33 + 16) = 0;
            }
            swift_release();
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(uint64_t))v36[1];
  return v35(1);
}

uint64_t sub_254309E04()
{
  return type metadata accessor for DKUpdateStatesTask();
}

uint64_t type metadata accessor for DKUpdateStatesTask()
{
  uint64_t result = qword_269DD9650;
  if (!qword_269DD9650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254309E58()
{
  return swift_updateClassMetadata2();
}

BOOL sub_254309E90()
{
  return sub_254278840();
}

uint64_t sub_254309EB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_254278878(*(void *)(v1 + 16), a1);
}

uint64_t sub_254309ECC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = sub_25436C800();
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  unint64_t v31 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)v21 - v10;
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v11 = sub_25436D530();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      v21[1] = v3;
      unint64_t v12 = 0;
      uint64_t v25 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
      unint64_t v26 = a1;
      uint64_t v27 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v28 = a1 & 0xC000000000000001;
      uint64_t v23 = v6 + 8;
      unint64_t v24 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v22 = v11;
      uint64_t v13 = v29;
      uint64_t v14 = v31;
      uint64_t v15 = (void (**)(char *, uint64_t))(v6 + 8);
      while (1)
      {
        if (v28)
        {
          a2 = MEMORY[0x25A275A00](v12, a1, v9);
          unint64_t v17 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
LABEL_13:
            __break(1u);
            return v32;
          }
        }
        else
        {
          if (v12 >= *(void *)(v27 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          a2 = *(void *)(a1 + 8 * v12 + 32);
          swift_retain();
          unint64_t v17 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_13;
          }
        }
        uint64_t v18 = *v24;
        uint64_t v19 = v30;
        (*v24)(v30, a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v13);
        v18(v14, v25, v13);
        uint64_t v6 = sub_25436C7D0();
        uint64_t v3 = *v15;
        (*v15)(v14, v13);
        v3(v19, v13);
        if (v6)
        {
          uint64_t v6 = (uint64_t)&v32;
          sub_25436D370();
          uint64_t v3 = *(void (**)(char *, uint64_t))(v32 + 16);
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
        }
        else
        {
          swift_release();
        }
        ++v12;
        BOOL v16 = v17 == v22;
        a1 = v26;
        if (v16) {
          return v32;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t DKStateMachine.Transition.init(from:to:event:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  v11(a6, a1, a4);
  uint64_t v12 = type metadata accessor for DKStateMachine.Transition();
  v11(a6 + *(int *)(v12 + 52), a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v12 + 56), a3, a5);
}

uint64_t type metadata accessor for DKStateMachine.Transition()
{
  return swift_getGenericMetadata();
}

uint64_t DKStateMachine.__allocating_init(initialState:transitions:)(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_allocObject();
  uint64_t v6 = sub_25430B064(a1, a2);
  (*(void (**)(char *))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t sub_25430A318@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 112));
}

uint64_t sub_25430A374(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 40))(v1 + *(void *)(*(void *)v1 + 112), a1);
}

uint64_t DKStateMachine.init(initialState:transitions:)(char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_25430B064(a1, a2);
  (*(void (**)(char *))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a1);
  return v5;
}

id sub_25430A448()
{
  uint64_t v1 = *(void **)(v0 + *(void *)(*(void *)v0 + 128));
  objc_msgSend(v1, sel_lock);
  sub_25430A4CC(v0);
  return objc_msgSend(v1, sel_unlock);
}

uint64_t sub_25430A4CC(uint64_t a1)
{
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)v6 - v2;
  (*(void (**)(char *))(v4 + 16))((char *)v6 - v2);
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(*(void *)a1 + 80) - 8) + 40))(a1 + *(void *)(*(void *)a1 + 112), v3);
}

id sub_25430A5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + *(void *)(*(void *)v1 + 128));
  sub_25430B85C();
  objc_msgSend(v3, sel_lock);
  sub_25430B7DC(a1);
  return objc_msgSend(v3, sel_unlock);
}

uint64_t sub_25430A674(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v2 + 88);
  sub_25430AE10(v4, v4);
  uint64_t v5 = *(void *)(v4 - 8);
  swift_allocObject();
  uint64_t v6 = sub_25436CDF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = sub_25436CEA0();
  nullsub_1(v8);
  LOBYTE(v2) = sub_25430A794(v6);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25430A794(uint64_t a1)
{
  uint64_t v3 = *(void **)((char *)v1 + *(void *)(*v1 + 128));
  objc_msgSend(v3, sel_lock);
  sub_25430A814(v1, a1, (char *)&v5);
  objc_msgSend(v3, sel_unlock);
  return v5;
}

uint64_t sub_25430A814@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = *a1;
  uint64_t v6 = *(void *)(*a1 + 88);
  uint64_t v7 = *(void *)(*a1 + 96);
  uint64_t v8 = *(void *)(*a1 + 104);
  v45[0] = *(void *)(*a1 + 80);
  uint64_t v5 = v45[0];
  v45[1] = v6;
  uint64_t v42 = v8;
  uint64_t v43 = v6;
  v45[2] = v7;
  v45[3] = v8;
  uint64_t v9 = type metadata accessor for DKStateMachine.Transition();
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v37 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v32 - v20;
  uint64_t v22 = (uint64_t)a1 + *(void *)(v4 + 112);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v36 = v15 + 16;
  v35((char *)&v32 - v20, v22, v5, v19);
  uint64_t v23 = *(uint64_t *)((char *)a1 + *(void *)(*a1 + 120));
  uint64_t v24 = sub_25436CEA0();
  swift_bridgeObjectRetain();
  MEMORY[0x25A2751E0](v45, v21, v23, v5, v24, v7);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v21, v5);
  uint64_t v26 = v45[0];
  if (v45[0])
  {
    if (MEMORY[0x25A275580](v45[0], v9))
    {
      uint64_t v32 = v5;
      uint64_t v33 = a1;
      uint64_t v27 = 0;
      uint64_t v39 = (void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v46 + 8);
      uint64_t v41 = (void (**)(char *, void *, uint64_t))(v46 + 16);
      do
      {
        char v28 = sub_25436CE50();
        sub_25436CE00();
        if (v28)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v14, v26+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v27, v9);
          uint64_t v29 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t result = sub_25436D300();
          if (v34 != 8)
          {
            __break(1u);
            return result;
          }
          v45[0] = result;
          (*v41)(v14, v45, v9);
          swift_unknownObjectRelease();
          uint64_t v29 = v27 + 1;
          if (__OFADD__(v27, 1))
          {
LABEL_12:
            __break(1u);
            break;
          }
        }
        (*v39)(v11, v14, v9);
        v45[0] = v44;
        sub_25436CEA0();
        swift_getWitnessTable();
        if (sub_25436CD70())
        {
          swift_bridgeObjectRelease();
          unint64_t v31 = v37;
          ((void (*)(char *, char *, uint64_t))v35)(v37, &v11[*(int *)(v9 + 52)], v32);
          (*(void (**)(uint64_t, char *))(*(void *)(*(void *)(*v33 + 80) - 8) + 40))((uint64_t)v33 + *(void *)(*v33 + 112), v31);
          uint64_t result = (*v40)(v11, v9);
          char v30 = 1;
          goto LABEL_15;
        }
        (*v40)(v11, v9);
        ++v27;
      }
      while (v29 != MEMORY[0x25A275580](v26, v9));
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  char v30 = 0;
LABEL_15:
  char *v38 = v30;
  return result;
}

uint64_t DKStateMachine.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DKStateMachine.__deallocating_deinit()
{
  DKStateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_25430AE10(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
  }
  else
  {
    return MEMORY[0x270F9F4F8](0, a2);
  }
}

unint64_t sub_25430AE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436CB40();
  return sub_25430AEDC(a1, v6, a2, a3);
}

unint64_t sub_25430AEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v22[1] = a1;
  v22[2] = a4;
  v7.n128_f64[0] = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v4;
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v11 & ~v10;
  v22[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v10;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v15 = v16;
    uint64_t v17 = *(void *)(v14 + 56);
    uint64_t v18 = (void (**)(char *, uint64_t))(v14 - 8);
    do
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v23 + 48) + v17 * v12, a3, v7);
      char v20 = sub_25436CBB0();
      (*v18)(v9, a3);
      if (v20) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      uint64_t v14 = v19;
    }
    while (((*(void *)(v22[0] + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t sub_25430B064(char *a1, uint64_t a2)
{
  uint64_t v83 = a1;
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v62 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v85 = (char *)&v61 - v9;
  uint64_t v10 = v4[11];
  uint64_t v11 = v4[12];
  uint64_t v12 = v4[13];
  v86[0] = v5;
  v86[1] = v10;
  uint64_t v69 = v12;
  uint64_t v70 = v10;
  v86[2] = v11;
  v86[3] = v12;
  uint64_t v13 = type metadata accessor for DKStateMachine.Transition();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  char v81 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v80 = (char *)&v61 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v82 = (char *)&v61 - v19;
  uint64_t v20 = v4[15];
  uint64_t v21 = sub_25436CEA0();
  swift_getTupleTypeMetadata2();
  sub_25436CE30();
  uint64_t v84 = v11;
  *(void *)&v2[v20] = sub_25436CAC0();
  uint64_t v22 = *(void *)(*(void *)v2 + 128);
  *(void *)&v2[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v23 = v6;
  uint64_t v24 = &v2[*(void *)(*(void *)v2 + 112)];
  uint64_t v25 = v6 + 16;
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
  uint64_t v27 = v13;
  uint64_t v72 = v26;
  uint64_t v73 = v25;
  v26((uint64_t)v24, v83, v5);
  uint64_t v71 = a2;
  uint64_t v28 = MEMORY[0x25A275580](a2, v13);
  uint64_t v83 = v2;
  if (v28)
  {
    uint64_t v77 = v21;
    uint64_t v61 = v15;
    uint64_t v68 = v5;
    uint64_t v29 = 0;
    char v30 = 0;
    unint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = *(void *)v2;
    int v79 = (void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    uint64_t v78 = *(void *)(v33 + 120);
    uint64_t v67 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    int v64 = (void (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v63 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v34 = v71;
    uint64_t v35 = v14;
    uint64_t v66 = v13;
    uint64_t v65 = v14;
    while (1)
    {
      uint64_t v76 = v31;
      char v39 = sub_25436CE50();
      sub_25436CE00();
      if (v39)
      {
        uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
        v40(v82, v34+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v29, v27);
        uint64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v59 = sub_25436D300();
        if (v61 != 8) {
          goto LABEL_19;
        }
        v86[0] = v59;
        uint64_t v40 = *v79;
        (*v79)(v82, (unint64_t)v86, v27);
        swift_unknownObjectRelease();
        uint64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
      }
      uint64_t v74 = v41;
      uint64_t v42 = *v67;
      int v75 = v32;
      uint64_t v43 = v80;
      v42(v80, v82, v27);
      uint64_t v44 = v68;
      v72((uint64_t)v85, v43, v68);
      uint64_t v45 = (void *)swift_allocObject();
      uint64_t v46 = v70;
      v45[2] = v44;
      v45[3] = v46;
      uint64_t v47 = v69;
      void v45[4] = v84;
      v45[5] = v47;
      sub_2542509EC((uint64_t)v30);
      v40(v81, (unint64_t)v43, v27);
      uint64_t v48 = (void *)swift_allocObject();
      v48[2] = v44;
      v48[3] = v46;
      v48[4] = v84;
      v48[5] = v47;
      v48[6] = sub_25430C668;
      v48[7] = v45;
      uint64_t v49 = v44;
      sub_2542509EC((uint64_t)v75);
      uint64_t v50 = (uint64_t *)v83;
      uint64_t v51 = v78;
      swift_isUniquelyReferenced_nonNull_native();
      v86[0] = *(uint64_t *)((char *)v50 + v51);
      uint64_t v52 = v86[0];
      *(uint64_t *)((char *)v50 + v51) = 0x8000000000000000;
      uint64_t v53 = v84;
      sub_25430AE80((uint64_t)v85, v49, v84);
      if (__OFADD__(*(void *)(v52 + 16), (v54 & 1) == 0)) {
        break;
      }
      char v55 = v54;
      sub_25436D4A0();
      char v56 = sub_25436D470();
      uint64_t v57 = v86[0];
      if (v56)
      {
        sub_25430AE80((uint64_t)v85, v49, v53);
        if ((v55 & 1) != (v58 & 1)) {
          goto LABEL_20;
        }
      }
      uint64_t v76 = (void *)v29;
      *(void *)&v83[v78] = v57;
      swift_bridgeObjectRelease();
      if (v55)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = (uint64_t)v85;
      }
      else
      {
        uint64_t v36 = swift_bridgeObjectRetain();
        v86[0] = ((uint64_t (*)(uint64_t))v48[6])(v36);
        uint64_t v37 = (uint64_t)v85;
        v72((uint64_t)v62, v85, v49);
        sub_25436D490();
      }
      swift_bridgeObjectRelease();
      sub_25436CE80();
      (*v64)(v37, v49);
      uint64_t v27 = v66;
      (*v63)(v80, v66);
      uint64_t v34 = v71;
      uint64_t v38 = MEMORY[0x25A275580](v71, v27);
      uint64_t v29 = (uint64_t)v76 + 1;
      uint64_t v32 = sub_25430C6B4;
      char v30 = sub_25430C668;
      unint64_t v31 = v45;
      uint64_t v35 = v65;
      if (v74 == v38) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_25436D850();
    __break(1u);
  }
  else
  {
LABEL_16:
    char v30 = 0;
    uint64_t v32 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_2542509EC((uint64_t)v30);
    sub_2542509EC((uint64_t)v32);
    return (uint64_t)v83;
  }
  return result;
}

uint64_t sub_25430B7DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 112));
}

unint64_t sub_25430B85C()
{
  unint64_t result = qword_269DD9668[0];
  if (!qword_269DD9668[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_269DD9668);
  }
  return result;
}

uint64_t sub_25430B89C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DKStateMachine()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for DKStateMachine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKStateMachine);
}

uint64_t dispatch thunk of DKStateMachine.__allocating_init(initialState:transitions:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DKStateMachine.reset(state:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKStateMachine.currentState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKStateMachine.execute(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_25430BA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_25430BA28()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25430BAF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  unint64_t v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v8 + v9;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  unint64_t v14 = ((v8 + v12 + ((v8 + v9) & ~v9)) & ~v12) + *(void *)(v11 + 64);
  if ((v12 | v9) > 7 || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + (((v12 | v9) + 16) & ~(v12 | v9)));
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v9;
    uint64_t v22 = ~v12;
    uint64_t v23 = v5;
    uint64_t v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v19(a1, a2, v6);
    unint64_t v20 = ((unint64_t)a2 + v10) & v18;
    v19((uint64_t *)(((unint64_t)v4 + v10) & v18), (uint64_t *)v20, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((((unint64_t)v4 + v10) & v18) + v13) & v22, (v20 + v13) & v22, v23);
  }
  return v4;
}

uint64_t sub_25430BCA8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = (v7 + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v6(v8, v4);
  uint64_t v9 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v11);
}

uint64_t sub_25430BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_25430BE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_25430BF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_25430C040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (v9 + v10 + a1) & ~v10;
  uint64_t v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_25430C12C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v5) {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = v9 + v10;
  unsigned int v14 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v15 = ((v9 + v11 + (v13 & ~v10)) & ~v11) + *(void *)(*(void *)(v6 - 8) + 64);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v18 = ((v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v5 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((((unint64_t)a1 + v13) & ~v10) + v9 + v11) & ~v11, v8, v6);
        }
      }
      return 0;
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_24;
  }
LABEL_14:
  int v19 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v19 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v20 = v15;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_25430C344(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v15 = v11 + v12;
  size_t v16 = ((v11 + v13 + ((v11 + v12) & ~v12)) & ~v13) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v17 = a3 >= v14;
  unsigned int v18 = a3 - v14;
  if (v18 != 0 && v17)
  {
    if (v16 <= 3)
    {
      unsigned int v23 = ((v18 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
      if (HIWORD(v23))
      {
        int v19 = 4;
      }
      else if (v23 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v23 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v16 < 4)
    {
      int v21 = (v20 >> (8 * v16)) + 1;
      if (v16)
      {
        int v24 = v20 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v16] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v21;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v21;
        return;
      default:
        return;
    }
  }
  uint64_t v22 = ~v12;
  switch(v19)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25430C630);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v27 = *(void (**)(char *))(v6 + 56);
          v27(a1);
        }
        else
        {
          unint64_t v25 = (((unint64_t)&a1[v15] & v22) + v11 + v13) & ~v13;
          uint64_t v26 = *(void (**)(unint64_t))(v9 + 56);
          v26(v25);
        }
      }
      return;
  }
}

uint64_t sub_25430C658()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25430C668()
{
  return sub_25436CE30();
}

uint64_t sub_25430C6A4()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25430C6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 48))();
  *a1 = result;
  return result;
}

uint64_t static DKLog.beginSignpost(_:_:)()
{
  return 0;
}

IntelligentTrackingCore::DKLog::Category_optional __swiftcall DKLog.Category.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_25436D5A0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 14;
  if (v3 < 0xE) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t DKLog.Category.rawValue.getter()
{
  unint64_t result = 0x6F67657461636E55;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x676E696D617246;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x676E696B63617254;
      break;
    case 8:
      unint64_t result = 0x63614D6574617453;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0x686372616553;
      break;
    case 0xB:
      unint64_t result = 0x6172656D6143;
      break;
    case 0xC:
      unint64_t result = 0x67676F4C61746144;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25430C91C()
{
  return sub_2542C3208();
}

uint64_t sub_25430C928()
{
  return sub_25436D930();
}

uint64_t sub_25430C990()
{
  DKLog.Category.rawValue.getter();
  sub_25436CC90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25430C9F4()
{
  return sub_25436D930();
}

IntelligentTrackingCore::DKLog::Category_optional sub_25430CA58(Swift::String *a1)
{
  return DKLog.Category.init(rawValue:)(*a1);
}

unint64_t sub_25430CA64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DKLog.Category.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DKLog.deinit()
{
  return v0;
}

uint64_t DKLog.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(unsigned char *a1, uint64_t a2, unint64_t a3, os_log_type_t a4)
{
  uint64_t v8 = sub_25436C9F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v22) = *a1;
  DKLog.Category.rawValue.getter();
  sub_25436C9E0();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_25436C9D0();
  os_log_type_t v13 = a4;
  if (os_log_type_enabled(v12, a4))
  {
    unsigned int v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v20 = v8;
    uint64_t v16 = a2;
    uint64_t v17 = v15;
    uint64_t v22 = v15;
    *(_DWORD *)unsigned int v14 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25431B720(v16, a3, &v22);
    sub_25436D180();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_254249000, v12, v13, "%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A276B10](v17, -1, -1);
    MEMORY[0x25A276B10](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

unint64_t sub_25430CCF0()
{
  unint64_t result = qword_269DD9770;
  if (!qword_269DD9770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9770);
  }
  return result;
}

uint64_t type metadata accessor for DKLog()
{
  return self;
}

uint64_t method lookup function for DKLog(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLog);
}

unsigned char *storeEnumTagSinglePayload for DKLog.Category(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25430CE4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKLog.Category()
{
  return &type metadata for DKLog.Category;
}

CGFloat *DKImageCrop.__allocating_init(sourceImage:rect:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = (CGFloat *)swift_allocObject();
  *((void *)v10 + 7) = sub_2542645A4(MEMORY[0x263F8EE78]);
  *((void *)v10 + 2) = a1;
  uint64_t v11 = a1;
  size_t Width = CVPixelBufferGetWidth(v11);
  size_t Height = CVPixelBufferGetHeight(v11);
  v19.origin.CGFloat x = a2;
  v19.origin.CGFloat y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRect v20 = VNImageRectForNormalizedRect(v19, Width, Height);
  CGFloat x = v20.origin.x;
  CGFloat y = v20.origin.y;
  CGFloat v16 = v20.size.width;
  CGFloat v17 = v20.size.height;

  v10[3] = x;
  v10[4] = y;
  v10[5] = v16;
  v10[6] = v17;
  return v10;
}

void *sub_25430CF48()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_25430CF70(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270F9A758]();
}

double DKImageCrop.rect.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_25430CF88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25430CF90(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

CGFloat *DKImageCrop.init(sourceImage:rect:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5[2] = 0.0;
  *((void *)v5 + 7) = sub_2542645A4(MEMORY[0x263F8EE78]);
  uint64_t v11 = (void *)*((void *)v5 + 2);
  *((void *)v5 + 2) = a1;
  uint64_t v12 = a1;

  size_t Width = CVPixelBufferGetWidth(v12);
  size_t Height = CVPixelBufferGetHeight(v12);
  v20.origin.CGFloat x = a2;
  v20.origin.CGFloat y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRect v21 = VNImageRectForNormalizedRect(v20, Width, Height);
  CGFloat x = v21.origin.x;
  CGFloat y = v21.origin.y;
  CGFloat v17 = v21.size.width;
  CGFloat v18 = v21.size.height;

  v5[3] = x;
  v5[4] = y;
  v5[5] = v17;
  v5[6] = v18;
  return v5;
}

void sub_25430D060()
{
  CGFloat v1 = v0[3];
  CGFloat v2 = v0[4];
  CGFloat v3 = v0[5];
  CGFloat v4 = v0[6];
  v7.origin.CGFloat x = v1;
  v7.origin.CGFloat y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  double Width = CGRectGetWidth(v7);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8.origin.CGFloat x = v1;
  v8.origin.CGFloat y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  double Height = CGRectGetHeight(v8);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (Height < 9.22337204e18)
  {
    sub_25430D15C((__CVBuffer *)(uint64_t)Width, (uint64_t)Height);
    return;
  }
LABEL_13:
  __break(1u);
}

__CVBuffer *sub_25430D15C(__CVBuffer *a1, size_t a2)
{
  uint64_t v12 = sub_25436D760();
  uint64_t v13 = v5;
  sub_25436CCB0();
  sub_25436D760();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 56);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2543516FC(v12, v13);
    if (v8)
    {
      id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return (__CVBuffer *)v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = sub_25430D554(v12, v13, a1, a2);
  swift_bridgeObjectRelease();
  return v11;
}

__CVBuffer *sub_25430D2A8(double a1, double a2)
{
  if (a1 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((*(void *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_10;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 < 9.22337204e18) {
    return sub_25430D15C((__CVBuffer *)(uint64_t)a1, (uint64_t)a2);
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_25430D348(__CVBuffer *a1)
{
  double Width = (__CVBuffer *)CVPixelBufferGetWidth(a1);
  size_t Height = CVPixelBufferGetHeight(a1);
  uint64_t v5 = sub_25430D15C(Width, Height);
  if (!v1)
  {
    uint64_t v6 = v5;
    sub_2542A41E0(v5, a1);
  }
}

uint64_t sub_25430D3B8()
{
  uint64_t v5 = sub_25436D760();
  uint64_t v6 = v1;
  sub_25436CCB0();
  sub_25436D760();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(v0 + 56) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2543516FC(v5, v6);
    char v3 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_25430D4A4()
{
  return *(void *)(*(void *)(v0 + 56) + 16);
}

void sub_25430D4B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;
}

uint64_t sub_25430D4C0()
{
  uint64_t v1 = sub_25436D760();
  sub_25436CCB0();
  sub_25436D760();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  return v1;
}

__CVBuffer *sub_25430D554(uint64_t a1, uint64_t a2, __CVBuffer *a3, size_t a4)
{
  uint64_t v6 = v4;
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  unint64_t v7 = (void *)*((void *)v4 + 2);
  if (!v7)
  {
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD00000000000003ALL;
    *(void *)(v25 + 8) = 0x800000025437CF70;
    *(unsigned char *)(v25 + 16) = 0;
    swift_willThrow();
    return v5;
  }
  uint64_t v5 = a3;
  pixelBufferOut[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v12;
  id v13 = v7;
  *(void *)(inited + 48) = sub_254264364(MEMORY[0x263F8EE78]);
  sub_254264488(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269DD7D98);
  CFDictionaryRef v14 = (const __CFDictionary *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (size_t)v5, a4, 0x42475241u, v14, pixelBufferOut);

  if (!pixelBufferOut[0])
  {
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v26 = 0xD000000000000028;
    *(void *)(v26 + 8) = 0x800000025437CFB0;
    *(unsigned char *)(v26 + 16) = 0;
    swift_willThrow();

    return v5;
  }
  CGFloat v15 = v6[3];
  CGFloat v16 = v6[4];
  CGFloat v17 = v6[5];
  CGFloat v18 = v6[6];
  CGRect v19 = pixelBufferOut[0];
  v30.origin.CGFloat x = v15;
  v30.origin.CGFloat y = v16;
  v30.size.width = v17;
  v30.size.height = v18;
  double MinX = CGRectGetMinX(v30);
  if ((~*(void *)&MinX & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (MinX <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (MinX >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31.origin.CGFloat x = v15;
  v31.origin.CGFloat y = v16;
  v31.size.width = v17;
  v31.size.height = v18;
  double MinY = CGRectGetMinY(v31);
  if ((~*(void *)&MinY & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v32.origin.CGFloat x = v15;
  v32.origin.CGFloat y = v16;
  v32.size.width = v17;
  v32.size.height = v18;
  double Width = CGRectGetWidth(v32);
  if ((~*(void *)&Width & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v33.origin.CGFloat x = v15;
  v33.origin.CGFloat y = v16;
  v33.size.width = v17;
  v33.size.height = v18;
  double Height = CGRectGetHeight(v33);
  if ((~*(void *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (Height >= 9.22337204e18) {
    goto LABEL_30;
  }
  sub_2542A3B90((__CVBuffer *)v13, v19, (uint64_t)MinX, (uint64_t)MinY, (uint64_t)Width, (uint64_t)Height);
  uint64_t v5 = v19;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *((void *)v6 + 7);
  v6[7] = -0.0;
  sub_254252014((uint64_t)v5, a1, a2, isUniquelyReferenced_nonNull_native);
  *((void *)v6 + 7) = v28;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t DKImageCrop.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKImageCrop.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_25430D9D0(uint64_t *a1, uint64_t *a2)
{
  return _s23IntelligentTrackingCore11DKImageCropC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL _s23IntelligentTrackingCore11DKImageCropC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  CGFloat v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  if (v4)
  {
    if (v5)
    {
      type metadata accessor for CVBuffer(0);
      sub_25430DE00();
      id v6 = v5;
      id v7 = v4;
      char v8 = sub_25436C870();

      if (v8) {
        return CGRectEqualToRect(*(CGRect *)(a1 + 24), *(CGRect *)(a2 + 24));
      }
    }
  }
  else if (!v5)
  {
    return CGRectEqualToRect(*(CGRect *)(a1 + 24), *(CGRect *)(a2 + 24));
  }
  return 0;
}

id sub_25430DA84@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v2 = *(void **)(*(void *)a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_25430DA94(void **a1, uint64_t a2)
{
  char v2 = *a1;
  id v4 = *(id *)(*(void *)a2 + 16);
  *(void *)(*(void *)a2 + 16) = *a1;
  id v3 = v2;
}

uint64_t sub_25430DADC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25430DAEC(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 56) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DKImageCrop()
{
  return self;
}

uint64_t method lookup function for DKImageCrop(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKImageCrop);
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKImageCrop.__allocating_init(sourceImage:rect:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKImageCrop.originalCrop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKImageCrop.resize(w:h:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKImageCrop.resize(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKImageCrop.resizeInto(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKImageCrop.hasCrop(w:h:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKImageCrop.numCrops()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKImageCrop.freeze()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKImageCrop.sizeToKey(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKImageCrop.makeCropForKey(key:width:height:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

unint64_t sub_25430DE00()
{
  unint64_t result = qword_269DD9778;
  if (!qword_269DD9778)
  {
    type metadata accessor for CVBuffer(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9778);
  }
  return result;
}

unint64_t sub_25430DE58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  unint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    for (uint64_t i = a1 + 72; ; i += 24)
    {
      unint64_t v6 = *(void *)(i - 16);
      swift_bridgeObjectRetain();
      sub_25430DF8C(v3);
      double v8 = v7;
      sub_25430DF8C(v6);
      if (v8 == v9)
      {
        sub_25430E24C(v3);
        double v11 = v10;
        sub_25430E24C(v6);
        if (v11 >= v12) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_25430DF8C(v3);
        double v14 = v13;
        sub_25430DF8C(v6);
        if (v14 >= v15) {
          goto LABEL_7;
        }
      }
      unint64_t v3 = v6;
LABEL_7:
      swift_bridgeObjectRelease();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_25430DF8C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_25436D530();
  if (!v2) {
    goto LABEL_30;
  }
LABEL_3:
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E27D8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = v23;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        uint64_t v6 = *(void *)(*(void *)(MEMORY[0x25A275A00](i, a1)
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                       + 16);
        swift_unknownObjectRelease();
        if (fabs((double)v6) >= 0.00001) {
          double v7 = (double)v6;
        }
        else {
          double v7 = dbl_254376420[v6 > 0];
        }
        unint64_t v9 = *(void *)(v23 + 16);
        unint64_t v8 = *(void *)(v23 + 24);
        if (v9 >= v8 >> 1) {
          sub_2542E27D8(v8 > 1, v9 + 1, 1);
        }
        *(void *)(v23 + 16) = v9 + 1;
        *(double *)(v23 + 8 * v9 + 32) = 1.0 / v7;
      }
    }
    else
    {
      uint64_t v10 = 0;
      unint64_t v11 = *(void *)(v23 + 16);
      do
      {
        uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 8 * v10 + 32)
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                        + 16);
        if (fabs((double)v12) >= 0.00001) {
          double v13 = (double)v12;
        }
        else {
          double v13 = dbl_254376420[v12 > 0];
        }
        unint64_t v14 = *(void *)(v23 + 24);
        if (v11 >= v14 >> 1) {
          sub_2542E27D8(v14 > 1, v11 + 1, 1);
        }
        ++v10;
        *(void *)(v23 + 16) = v11 + 1;
        *(double *)(v23 + 8 * v11++ + 32) = 1.0 / v13;
      }
      while (v2 != v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v23 + 16);
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
LABEL_21:
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      double v17 = 0.0;
    }
    else
    {
      uint64_t v16 = v15 & 0x7FFFFFFFFFFFFFFELL;
      CGFloat v18 = (double *)(v4 + 40);
      double v17 = 0.0;
      uint64_t v19 = v15 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v17 = v17 + *(v18 - 1) + *v18;
        v18 += 2;
        v19 -= 2;
      }
      while (v19);
      if (v15 == v16) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v20 = v15 - v16;
    CGRect v21 = (double *)(v4 + 8 * v16 + 32);
    do
    {
      double v22 = *v21++;
      double v17 = v17 + v22;
      --v20;
    }
    while (v20);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_25430E24C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25436D530();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x263F8EE78];
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v11) {
      goto LABEL_18;
    }
LABEL_12:
    int64_t v12 = 1;
    goto LABEL_28;
  }
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E27F8(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v6 = v48;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v8 = *(void *)(*(void *)(MEMORY[0x25A275A00](i, a1)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16);
      swift_unknownObjectRelease();
      unint64_t v10 = *(void *)(v48 + 16);
      unint64_t v9 = *(void *)(v48 + 24);
      if (v10 >= v9 >> 1) {
        sub_2542E27F8(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v48 + 16) = v10 + 1;
      *(void *)(v48 + 8 * v10 + 32) = v8;
    }
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = *(void *)(v48 + 16);
    do
    {
      uint64_t v15 = *(void *)(*(void *)(*(void *)(a1 + 8 * v13 + 32)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      unint64_t v16 = *(void *)(v48 + 24);
      if (v14 >= v16 >> 1) {
        sub_2542E27F8(v16 > 1, v14 + 1, 1);
      }
      ++v13;
      *(void *)(v48 + 16) = v14 + 1;
      *(void *)(v48 + 8 * v14++ + 32) = v15;
    }
    while (v3 != v13);
  }
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v48 + 16);
  if (!v11) {
    goto LABEL_12;
  }
LABEL_18:
  int64_t v12 = *(void *)(v6 + 32);
  unint64_t v17 = v11 - 1;
  if (v11 == 1) {
    goto LABEL_28;
  }
  if (v11 >= 5)
  {
    unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFCLL | 1;
    int64x2_t v19 = vdupq_n_s64(v12);
    uint64_t v20 = (int64x2_t *)(v6 + 56);
    unint64_t v21 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    int64x2_t v22 = v19;
    do
    {
      int64x2_t v19 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v19, v20[-1]), (int8x16_t)v20[-1], (int8x16_t)v19);
      int64x2_t v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v22, *v20), *(int8x16_t *)v20, (int8x16_t)v22);
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    int8x16_t v23 = vbslq_s8((int8x16_t)vcgtq_s64(v22, v19), (int8x16_t)v19, (int8x16_t)v22);
    uint64_t v24 = vextq_s8(v23, v23, 8uLL).u64[0];
    int64_t v12 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v24, v23.i64[0]), *(int8x8_t *)v23.i8, (int8x8_t)v24);
    if (v17 == (v17 & 0xFFFFFFFFFFFFFFFCLL)) {
      goto LABEL_28;
    }
  }
  else
  {
    unint64_t v18 = 1;
  }
  unint64_t v25 = v11 - v18;
  uint64_t v26 = (int64_t *)(v6 + 8 * v18 + 32);
  do
  {
    int64_t v28 = *v26++;
    int64_t v27 = v28;
    if (v28 < v12) {
      int64_t v12 = v27;
    }
    --v25;
  }
  while (v25);
LABEL_28:
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v29 = result;
    if (!result) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v29) {
      goto LABEL_43;
    }
  }
  if (v29 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t j = 0; j != v29; ++j)
    {
      if (*(void *)(*(void *)(MEMORY[0x25A275A00](j, a1)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) == v12)
      {
        sub_25436D370();
        sub_25436D3B0();
        sub_25436D3C0();
        sub_25436D380();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
    do
    {
      if (*(void *)(*(void *)(*(void *)(a1 + 8 * v31 + 32) + v32) + 16) == v12)
      {
        swift_retain();
        sub_25436D370();
        sub_25436D3B0();
        sub_25436D3C0();
        sub_25436D380();
        uint64_t v32 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      }
      ++v31;
    }
    while (v29 != v31);
  }
LABEL_43:
  swift_bridgeObjectRelease();
  if ((v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v33 = *(void *)(v4 + 16);
    if (v33) {
      goto LABEL_46;
    }
LABEL_65:
    swift_release();
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v40 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v40) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_25436D530();
  swift_release();
  if (!v33) {
    goto LABEL_65;
  }
LABEL_46:
  uint64_t result = sub_2542E27D8(0, v33 & ~(v33 >> 63), 0);
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = 0;
    uint64_t v35 = v4;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v36 = MEMORY[0x25A275A00](v34, v4);
      }
      else {
        uint64_t v36 = swift_retain();
      }
      uint64_t v37 = *(void *)(*(void *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 24);
      swift_release();
      unint64_t v39 = *(void *)(v4 + 16);
      unint64_t v38 = *(void *)(v4 + 24);
      if (v39 >= v38 >> 1) {
        sub_2542E27D8(v38 > 1, v39 + 1, 1);
      }
      ++v34;
      *(void *)(v4 + 16) = v39 + 1;
      *(void *)(v4 + 8 * v39 + 32) = v37;
    }
    while (v33 != v34);
    swift_release();
    uint64_t v40 = *(void *)(v4 + 16);
    if (!v40) {
      return swift_bridgeObjectRelease();
    }
LABEL_55:
    if (v40 == 1)
    {
      uint64_t v41 = 0;
      double v42 = 0.0;
    }
    else
    {
      uint64_t v41 = v40 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v43 = (double *)(v35 + 40);
      double v42 = 0.0;
      uint64_t v44 = v40 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v42 = v42 + *(v43 - 1) + *v43;
        v43 += 2;
        v44 -= 2;
      }
      while (v44);
      if (v40 == v41) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v45 = v40 - v41;
    uint64_t v46 = (double *)(v35 + 8 * v41 + 32);
    do
    {
      double v47 = *v46++;
      double v42 = v42 + v47;
      --v45;
    }
    while (v45);
    return swift_bridgeObjectRelease();
  }
LABEL_69:
  __break(1u);
  return result;
}

BOOL sub_25430E780(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  sub_25430DF8C(*a1);
  double v5 = v4;
  sub_25430DF8C(v3);
  if (v5 == v6)
  {
    sub_25430E24C(v2);
    double v8 = v7;
    sub_25430E24C(v3);
  }
  else
  {
    sub_25430DF8C(v2);
    double v8 = v10;
    sub_25430DF8C(v3);
  }
  return v8 < v9;
}

BOOL sub_25430E7F8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  sub_25430DF8C(*a2);
  double v5 = v4;
  sub_25430DF8C(v2);
  if (v5 == v6)
  {
    sub_25430E24C(v3);
    double v8 = v7;
    sub_25430E24C(v2);
  }
  else
  {
    sub_25430DF8C(v3);
    double v8 = v10;
    sub_25430DF8C(v2);
  }
  return v8 >= v9;
}

BOOL sub_25430E874(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  sub_25430DF8C(*a1);
  double v5 = v4;
  sub_25430DF8C(v3);
  if (v5 == v6)
  {
    sub_25430E24C(v2);
    double v8 = v7;
    sub_25430E24C(v3);
  }
  else
  {
    sub_25430DF8C(v2);
    double v8 = v10;
    sub_25430DF8C(v3);
  }
  return v8 >= v9;
}

BOOL sub_25430E8F0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  sub_25430DF8C(*a2);
  double v5 = v4;
  sub_25430DF8C(v2);
  if (v5 == v6)
  {
    sub_25430E24C(v3);
    double v8 = v7;
    sub_25430E24C(v2);
  }
  else
  {
    sub_25430DF8C(v3);
    double v8 = v10;
    sub_25430DF8C(v2);
  }
  return v8 < v9;
}

BOOL sub_25430E968(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  sub_25430DF8C(*a1);
  double v4 = v3;
  sub_25430DF8C(v2);
  return v4 == v5;
}

unint64_t sub_25430E9AC(unint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_254310540(a1);
  if (v8 > a3 || v7 > a2)
  {
    char v14 = 3;
    sub_25436D290();
    swift_bridgeObjectRelease();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_25436D530();
      swift_bridgeObjectRelease();
    }
    sub_25436D760();
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    os_log_type_t v10 = sub_25436CFF0();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v14, 0xD00000000000001ELL, 0x800000025437D090, v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_25430EB28(a1, 2, 20, 0.1);
    unint64_t v12 = sub_25430DE58(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v12 = v6;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_25430EB28(unint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  double v7 = (void *)(a1 >> 62);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v9 < a2) {
      return MEMORY[0x263F8EE78];
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < a2)
  {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v153 = a2;
  swift_retain();
  unint64_t v157 = a1;
  os_log_type_t v10 = (void *)sub_25431038C(a1);
  swift_release();
  v164 = v10;
  swift_bridgeObjectRetain();
  sub_25430F9B4(&v164);
  uint64_t v163 = v7;
  swift_bridgeObjectRelease();
  unint64_t v11 = (unint64_t)v164;
  uint64_t v167 = MEMORY[0x263F8EE88];
  uint64_t v12 = v164[2];
  unint64_t v13 = (unint64_t)&unk_254376000;
  if (!v12)
  {
    swift_release();
    uint64_t v16 = MEMORY[0x263F8EE78];
    unint64_t v11 = a2;
    if (a2 < 0) {
      goto LABEL_38;
    }
LABEL_27:
    if (*(void *)(v16 + 16) < v11) {
      goto LABEL_160;
    }
    sub_25436D7D0();
    swift_unknownObjectRetain_n();
    uint64_t v39 = swift_dynamicCastClass();
    if (!v39)
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = MEMORY[0x263F8EE78];
    }
    uint64_t v40 = *(double **)(v39 + 16);
    swift_release();
    if (v40 == (double *)v11)
    {
      uint64_t v41 = swift_dynamicCastClass();
      if (!v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = MEMORY[0x263F8EE78];
      }
    }
    else
    {
LABEL_161:
      swift_bridgeObjectRelease();
      uint64_t v41 = sub_254352898(v16, v16 + 32, 0, (2 * v11) | 1);
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = a3;
    if (a3 < 0)
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v43 = (void *)MEMORY[0x263F8EE78];
    if (!a3) {
      goto LABEL_148;
    }
    if (v163)
    {
      swift_bridgeObjectRetain();
      uint64_t v161 = sub_25436D530();
      swift_bridgeObjectRelease();
      uint64_t v42 = a3;
    }
    else
    {
      uint64_t v161 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v44 = 0;
    uint64_t __len = 8 * v11 - 8;
    unint64_t v11 = (unint64_t)dbl_254376420;
    double v45 = *(double *)(v13 + 1072);
    unint64_t v13 = (unint64_t)v43;
    while (1)
    {
      if (v44 == v42) {
        goto LABEL_158;
      }
      uint64_t v155 = v44;
      if (v153)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A88);
        uint64_t v46 = (void *)sub_25436CE40();
        double v47 = v46;
        v46[2] = v153;
        v46[4] = v43;
        if (v153 != 1) {
          memset_pattern16(v46 + 5, &unk_2653A7420, __len);
        }
      }
      else
      {
        double v47 = v43;
      }
      swift_bridgeObjectRelease();
      uint64_t v162 = v41;
      if (v161)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = 0;
        uint64_t v159 = (double *)(v41 + 48);
        while (1)
        {
          if ((v157 & 0xC000000000000001) != 0)
          {
            uint64_t v48 = MEMORY[0x25A275A00](v16, v157);
            BOOL v49 = __OFADD__(v16++, 1);
            if (v49) {
              goto LABEL_150;
            }
          }
          else
          {
            if ((unint64_t)v16 >= *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_155;
            }
            uint64_t v48 = *(void *)(v157 + 32 + 8 * v16);
            swift_retain();
            BOOL v49 = __OFADD__(v16++, 1);
            if (v49)
            {
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
              goto LABEL_161;
            }
          }
          uint64_t v163 = v47;
          int64_t v50 = *(void *)(v41 + 16);
          if (v50)
          {
            v164 = v43;
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_2542E27D8(0, v50, 0);
            uint64_t v51 = v164;
            uint64_t v52 = (CGRect *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
            uint64_t v53 = v159;
            do
            {
              double v55 = *(v53 - 2);
              double v54 = *(v53 - 1);
              double v56 = *v53;
              BOOL v57 = *v53 > 0.0;
              double MidX = CGRectGetMidX(*v52);
              double MidY = CGRectGetMidY(*v52);
              if (fabs(v56) < v45) {
                double v56 = dbl_254376420[v57];
              }
              v164 = v51;
              unint64_t v61 = v51[2];
              unint64_t v60 = v51[3];
              if (v61 >= v60 >> 1)
              {
                sub_2542E27D8(v60 > 1, v61 + 1, 1);
                uint64_t v51 = v164;
              }
              v51[2] = v61 + 1;
              *(double *)&v51[v61 + 4] = sqrt((v55 - MidX) * (v55 - MidX) + (v54 - MidY) * (v54 - MidY)) / v56;
              v53 += 3;
              --v50;
            }
            while (v50);
            uint64_t v41 = v162;
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            uint64_t v43 = (void *)MEMORY[0x263F8EE78];
          }
          else
          {
            uint64_t v51 = v43;
          }
          uint64_t v62 = v51[2];
          double v47 = v163;
          if (v62)
          {
            unint64_t v13 = 0;
            unint64_t v63 = 0;
            double v64 = INFINITY;
            do
            {
              double v65 = *(double *)&v51[v63 + 4];
              if (v65 < v64) {
                unint64_t v13 = v63;
              }
              unint64_t v66 = v63 + 1;
              if (v65 < v64) {
                double v64 = *(double *)&v51[v63 + 4];
              }
              ++v63;
            }
            while (v62 != v66);
            swift_bridgeObjectRelease();
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
LABEL_80:
              double v47 = sub_2543632B8(v163);
              if ((v13 & 0x8000000000000000) != 0) {
                goto LABEL_151;
              }
              goto LABEL_75;
            }
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_151;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_retain();
            unint64_t v13 = 0;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_80;
            }
          }
LABEL_75:
          if (v13 >= v47[2]) {
            goto LABEL_152;
          }
          uint64_t v67 = &v47[v13];
          MEMORY[0x25A275490]();
          unint64_t v13 = *(void *)((v67[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v13 >= *(void *)((v67[4] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          swift_release();
          if (v16 == v161)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
      }
      unint64_t v13 = (unint64_t)v47;
      uint64_t v160 = v47[2];
      if (v160) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = (void *)v41;
LABEL_133:
      unint64_t v107 = *(void *)(v41 + 16);
      if (v107)
      {
        if (v107 > v69[2]) {
          goto LABEL_159;
        }
        if (v107 >= 5)
        {
          uint64_t v110 = *(void *)(v41 + 16) & 3;
          if ((v107 & 3) == 0) {
            uint64_t v110 = 4;
          }
          unint64_t v108 = v107 - v110;
          uint64_t v111 = (float64x2_t *)(v41 + 80);
          uint64_t v112 = (float64x2_t *)(v69 + 10);
          double v109 = 0.0;
          unint64_t v113 = v108;
          do
          {
            float64x2_t v115 = v111[-2];
            float64x2_t v114 = v111[-1];
            float64x2_t v116 = v111[-3];
            float64x2_t v118 = v111[1];
            float64x2_t v117 = v111[2];
            float64x2_t v119 = *v111;
            v111 += 6;
            float64x2_t v120 = v119;
            float64x2_t v122 = v112[-2];
            float64x2_t v121 = v112[-1];
            float64x2_t v123 = v112[-3];
            float64x2_t v125 = v112[1];
            float64x2_t v124 = v112[2];
            float64x2_t v126 = *v112;
            v112 += 6;
            float64x2_t v127 = vsubq_f64(v116, v123);
            float64x2_t v128 = vsubq_f64(v115, v122);
            float64x2_t v129 = vsubq_f64(v114, v121);
            float64x2_t v130 = vsubq_f64(v120, v126);
            float64x2_t v131 = vsubq_f64(v118, v125);
            float64x2_t v132 = vsubq_f64(v117, v124);
            float64x2_t v133 = vmulq_f64(v127, v127);
            float64x2_t v134 = vmulq_f64(v130, v130);
            float64x2_t v135 = (float64x2_t)vextq_s8((int8x16_t)v133, (int8x16_t)vmulq_f64(v129, v129), 8uLL);
            v133.f64[1] = vmulq_f64(v128, v128).f64[1];
            float64x2_t v136 = (float64x2_t)vextq_s8((int8x16_t)v134, (int8x16_t)vmulq_f64(v132, v132), 8uLL);
            v134.f64[1] = vmulq_f64(v131, v131).f64[1];
            float64x2_t v137 = vsqrtq_f64(vaddq_f64(v133, v135));
            float64x2_t v138 = vsqrtq_f64(vaddq_f64(v134, v136));
            double v109 = v109 + v137.f64[0] + v137.f64[1] + v138.f64[0] + v138.f64[1];
            v113 -= 4;
          }
          while (v113);
        }
        else
        {
          unint64_t v108 = 0;
          double v109 = 0.0;
        }
        unint64_t v139 = v107 - v108;
        uint64_t v140 = 24 * v108;
        uint64_t v141 = &v69[3 * v108 + 4];
        uint64_t v142 = (_OWORD *)(v41 + v140 + 32);
        do
        {
          float64x2_t v143 = *(float64x2_t *)v142;
          uint64_t v142 = (_OWORD *)((char *)v142 + 24);
          float64x2_t v144 = v143;
          float64x2_t v145 = *(float64x2_t *)v141;
          uint64_t v141 = (_OWORD *)((char *)v141 + 24);
          float64x2_t v146 = vsubq_f64(v144, v145);
          double v109 = v109 + sqrt(vaddvq_f64(vmulq_f64(v146, v146)));
          --v139;
        }
        while (v139);
      }
      else
      {
        double v109 = 0.0;
      }
      char v166 = 3;
      v164 = 0;
      unint64_t v165 = 0xE000000000000000;
      sub_25436D290();
      sub_25436CCB0();
      sub_25436CF50();
      unint64_t v147 = v164;
      unint64_t v148 = v165;
      os_log_type_t v149 = sub_25436CFF0();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v166, (uint64_t)v147, v148, v149);
      swift_bridgeObjectRelease();
      if (v109 < a4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
      uint64_t v16 = (uint64_t)v69;
      swift_bridgeObjectRelease();
      uint64_t v44 = v155 + 1;
      uint64_t v41 = (uint64_t)v69;
      uint64_t v42 = a3;
      if (v155 + 1 == a3) {
        goto LABEL_148;
      }
    }
    v158 = v47 + 4;
    swift_bridgeObjectRetain();
    unint64_t v68 = 0;
    uint64_t v69 = (void *)v41;
    uint64_t v156 = v47;
    while (1)
    {
      if (v68 >= *(void *)(v13 + 16)) {
        goto LABEL_153;
      }
      unint64_t v70 = v158[v68];
      if (v70 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_25436D530();
        if (v16 >= 1)
        {
LABEL_88:
          uint64_t v163 = v69;
          v164 = v43;
          sub_2542E27D8(0, v16, 0);
          uint64_t v71 = 0;
          uint64_t v72 = v164;
          unint64_t v73 = v70 & 0xC000000000000001;
          do
          {
            if (v73) {
              uint64_t v74 = MEMORY[0x25A275A00](v71, v70);
            }
            else {
              uint64_t v74 = swift_retain();
            }
            uint64_t v75 = *(void *)(*(void *)(v74
                                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                            + 16);
            swift_release();
            if (fabs((double)v75) >= v45) {
              double v76 = (double)v75;
            }
            else {
              double v76 = dbl_254376420[v75 > 0];
            }
            v164 = v72;
            unint64_t v78 = v72[2];
            unint64_t v77 = v72[3];
            if (v78 >= v77 >> 1)
            {
              sub_2542E27D8(v77 > 1, v78 + 1, 1);
              uint64_t v72 = v164;
            }
            ++v71;
            v72[2] = v78 + 1;
            *(double *)&v72[v78 + 4] = 1.0 / v76;
          }
          while (v16 != v71);
          uint64_t v79 = 0;
          double v80 = 0.0;
          do
          {
            double v81 = *(double *)&v72[v79++ + 4];
            double v80 = v80 + v81;
          }
          while (v78 + 1 != v79);
          swift_bridgeObjectRelease();
          v164 = (void *)MEMORY[0x263F8EE78];
          sub_2542E27D8(0, v16, 0);
          uint64_t v82 = 0;
          uint64_t v83 = v164;
          do
          {
            if (v73)
            {
              uint64_t v84 = MEMORY[0x25A275A00](v82, v70);
            }
            else
            {
              uint64_t v84 = *(void *)(v70 + 8 * v82 + 32);
              swift_retain();
            }
            CGFloat v85 = CGRectGetMidX(*(CGRect *)(v84 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            swift_release();
            v164 = v83;
            unint64_t v87 = v83[2];
            unint64_t v86 = v83[3];
            if (v87 >= v86 >> 1)
            {
              sub_2542E27D8(v86 > 1, v87 + 1, 1);
              uint64_t v83 = v164;
            }
            ++v82;
            v83[2] = v87 + 1;
            *(CGFloat *)&v83[v87 + 4] = v85;
          }
          while (v16 != v82);
          uint64_t v88 = 0;
          double v89 = 0.0;
          do
          {
            double v90 = *(double *)&v83[v88++ + 4];
            double v89 = v89 + v90;
          }
          while (v87 + 1 != v88);
          swift_bridgeObjectRelease();
          double v91 = fabs((double)v16);
          if (v91 >= v45) {
            double v92 = (double)v16;
          }
          else {
            double v92 = v45;
          }
          double v93 = v89 / v92;
          v164 = (void *)MEMORY[0x263F8EE78];
          sub_2542E27D8(0, v16, 0);
          uint64_t v94 = 0;
          uint64_t v95 = v164;
          do
          {
            if (v73)
            {
              uint64_t v96 = MEMORY[0x25A275A00](v94, v70);
            }
            else
            {
              uint64_t v96 = *(void *)(v70 + 8 * v94 + 32);
              swift_retain();
            }
            CGFloat v97 = CGRectGetMidY(*(CGRect *)(v96 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            swift_release();
            v164 = v95;
            unint64_t v99 = v95[2];
            unint64_t v98 = v95[3];
            if (v99 >= v98 >> 1)
            {
              sub_2542E27D8(v98 > 1, v99 + 1, 1);
              uint64_t v95 = v164;
            }
            ++v94;
            v95[2] = v99 + 1;
            *(CGFloat *)&v95[v99 + 4] = v97;
          }
          while (v16 != v94);
          uint64_t v100 = 0;
          double v101 = 0.0;
          do
          {
            double v102 = *(double *)&v95[v100++ + 4];
            double v101 = v101 + v102;
          }
          while (v99 + 1 != v100);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v69 = v163;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v41 = v162;
          uint64_t v43 = (void *)MEMORY[0x263F8EE78];
          unint64_t v13 = (unint64_t)v156;
          if (v91 >= v45)
          {
            double v104 = v101 / (double)v16;
            if (isUniquelyReferenced_nonNull_native) {
              goto LABEL_123;
            }
          }
          else
          {
            double v104 = v101 / v45;
            if (isUniquelyReferenced_nonNull_native)
            {
LABEL_123:
              if (v68 >= v69[2]) {
                goto LABEL_154;
              }
              BOOL v105 = (double *)&v69[3 * v68];
              v105[4] = v93;
              v105[5] = v104;
              v105[6] = v80;
              goto LABEL_84;
            }
          }
          uint64_t v69 = sub_2543632A4(v163);
          goto LABEL_123;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v16 >= 1) {
          goto LABEL_88;
        }
      }
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v69 = sub_2543632A4(v69);
      }
      if (v68 >= v69[2]) {
        goto LABEL_156;
      }
      uint64_t v106 = &v69[3 * v68];
      v106[4] = 0;
      v106[5] = 0;
      v106[6] = 0x3FF0000000000000;
LABEL_84:
      if (++v68 == v160) {
        goto LABEL_133;
      }
    }
  }
  unint64_t v14 = 0;
  uint64_t v15 = v164 + 4;
  uint64_t v16 = MEMORY[0x263F8EE78];
  unint64_t v13 = 24;
  do
  {
    if (v14 >= *(void *)(v11 + 16)) {
      goto LABEL_157;
    }
    unint64_t v21 = (double *)&v15[2 * v14];
    double v22 = *v21;
    uint64_t v23 = *((void *)v21 + 1);
    uint64_t v24 = v167;
    if (*(void *)(v167 + 16))
    {
      uint64_t v25 = sub_25436D8E0();
      uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
      unint64_t v27 = v25 & ~v26;
      if ((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
      {
        uint64_t v28 = *(void *)(v24 + 48);
        if (*(double *)(v28 + 8 * v27) == v22) {
          goto LABEL_14;
        }
        uint64_t v29 = ~v26;
        while (1)
        {
          unint64_t v27 = (v27 + 1) & v29;
          if (((*(void *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            break;
          }
          if (*(double *)(v28 + 8 * v27) == v22) {
            goto LABEL_14;
          }
        }
      }
    }
    CGRect v30 = (CGRect *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    CGFloat v31 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    CGFloat v32 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 8);
    CGFloat v33 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
    CGFloat v34 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 24);
    swift_retain();
    v168.origin.CGFloat x = v31;
    v168.origin.CGFloat y = v32;
    v168.size.width = v33;
    v168.size.height = v34;
    CGFloat v35 = CGRectGetMidX(v168);
    CGFloat v36 = CGRectGetMidY(*v30);
    uint64_t v37 = *(void *)(*(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                    + 16);
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    if (fabs((double)v37) < 0.00001)
    {
      if (v37 <= 0) {
        double v17 = -100000.0;
      }
      else {
        double v17 = 100000.0;
      }
      if (v38) {
        goto LABEL_11;
      }
LABEL_25:
      uint64_t v16 = (uint64_t)sub_2542598BC(0, *(void *)(v16 + 16) + 1, 1, (void *)v16);
      goto LABEL_11;
    }
    double v17 = 1.0 / (double)v37;
    if ((v38 & 1) == 0) {
      goto LABEL_25;
    }
LABEL_11:
    unint64_t v19 = *(void *)(v16 + 16);
    unint64_t v18 = *(void *)(v16 + 24);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = (uint64_t)sub_2542598BC((void *)(v18 > 1), v19 + 1, 1, (void *)v16);
    }
    *(void *)(v16 + 16) = v19 + 1;
    uint64_t v20 = (CGFloat *)(v16 + 24 * v19);
    v20[4] = v35;
    v20[5] = v36;
    v20[6] = v17;
    sub_254268BF4((double *)&v164, v22);
    swift_release();
LABEL_14:
    ++v14;
  }
  while (v14 != v12);
  swift_release();
  unint64_t v13 = (unint64_t)&unk_254376000;
  unint64_t v11 = v153;
  if ((v153 & 0x8000000000000000) == 0) {
    goto LABEL_27;
  }
LABEL_38:
  __break(1u);
LABEL_148:
  swift_retain();
  uint64_t v150 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_254310BD0(v150);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25430F980()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKSubjectClustering()
{
  return self;
}

uint64_t sub_25430F9B4(void **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = (void *)sub_254345410(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_25430FA20(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_25430FA20(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = -1;
      uint64_t v86 = 1;
      uint64_t v87 = *a1;
      do
      {
        double v88 = *(double *)(v84 + 16 * v86);
        uint64_t v89 = v85;
        uint64_t v90 = v87;
        do
        {
          if (*(double *)v90 >= v88) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 24);
          *(_OWORD *)(v90 + 16) = *(_OWORD *)v90;
          *(double *)uint64_t v90 = v88;
          *(void *)(v90 + 8) = v91;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        ++v86;
        v87 += 16;
        --v85;
      }
      while (v86 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  double v102 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (double *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      double v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v102;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_254310110((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_254345370((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          unint64_t v99 = &v96[16 * v95 + 32];
          *(void *)unint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          double v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92E0);
    uint64_t v8 = sub_25436CE40();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (double *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v103 = *a1 + 32;
  uint64_t v101 = *a1 - 16;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      double v17 = *(double *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v18 = (double *)(v103 + 16 * v14);
        double v19 = v15;
        while (1)
        {
          double v20 = v19;
          double v19 = *v18;
          if (v17 < v15 == v20 >= *v18) {
            break;
          }
          ++v10;
          v18 += 2;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 16 * v10;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = *(void *)(v11 + v16);
              uint64_t v26 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v21 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v21 -= 16;
            v16 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = v101 + 16 * v10;
      do
      {
        double v29 = *(double *)(v11 + 16 * v10);
        uint64_t v30 = v14;
        uint64_t v31 = v28;
        do
        {
          if (*(double *)v31 >= v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v32 = *(void *)(v31 + 24);
          *(_OWORD *)(v31 + 16) = *(_OWORD *)v31;
          *(double *)uint64_t v31 = v29;
          *(void *)(v31 + 8) = v32;
          v31 -= 16;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 16;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_254344E28(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_254344E28((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    CGFloat v35 = v12 + 32;
    CGFloat v36 = &v12[16 * v34 + 32];
    *(void *)CGFloat v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          int64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        double v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        unint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        unint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        unint64_t v77 = v12;
        unint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        double v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_254310110((double *)(v11 + 16 * *(void *)v78), (double *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254310110(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[2 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v17 = (double *)(a3 - 16);
        unint64_t v18 = v6;
        while (1)
        {
          double v19 = v17 + 2;
          double v20 = *(v18 - 2);
          v18 -= 2;
          if (v20 >= *(v16 - 2))
          {
            uint64_t v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)double v17 = *((_OWORD *)v16 - 1);
            }
            unint64_t v18 = v6;
            v16 -= 2;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)double v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 2;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v4 >= *v6)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          uint64_t v23 = v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 2;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_254345174((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25431038C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2542E29F8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v13;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x25A275A00](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v7 = (CGRect *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
      double MidX = CGRectGetMidX(*(CGRect *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
      double MidY = CGRectGetMidY(*v7);
      unint64_t v11 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      if (v11 >= v10 >> 1) {
        sub_2542E29F8(v10 > 1, v11 + 1, 1);
      }
      ++v5;
      *(void *)(v13 + 16) = v11 + 1;
      uint64_t v12 = v13 + 16 * v11;
      *(double *)(v12 + 32) = sqrt((MidX + -0.5) * (MidX + -0.5) + (MidY + -0.5) * (MidY + -0.5));
      *(void *)(v12 + 40) = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_254310540(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v67 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2542E29B8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      goto LABEL_78;
    }
    uint64_t v3 = v67;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        CGRect v71 = *(CGRect *)(MEMORY[0x25A275A00](i, a1)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
        CGFloat MinX = CGRectGetMinX(v71);
        swift_unknownObjectRelease();
        unint64_t v8 = *(void *)(v67 + 16);
        unint64_t v7 = *(void *)(v67 + 24);
        if (v8 >= v7 >> 1) {
          sub_2542E29B8(v7 > 1, v8 + 1, 1);
        }
        *(void *)(v67 + 16) = v8 + 1;
        *(CGFloat *)(v67 + 8 * v8 + 32) = MinX;
      }
    }
    else
    {
      int64_t v9 = (void *)(a1 + 32);
      uint64_t v10 = v2;
      do
      {
        CGFloat v11 = CGRectGetMinX(*(CGRect *)(*v9 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
        unint64_t v13 = *(void *)(v67 + 16);
        unint64_t v12 = *(void *)(v67 + 24);
        if (v13 >= v12 >> 1) {
          sub_2542E29B8(v12 > 1, v13 + 1, 1);
        }
        *(void *)(v67 + 16) = v13 + 1;
        *(CGFloat *)(v67 + 8 * v13 + 32) = v11;
        ++v9;
        --v10;
      }
      while (v10);
    }
  }
  uint64_t v14 = *(void *)(v3 + 16);
  if (v14)
  {
    double v15 = *(double *)(v3 + 32);
    uint64_t v16 = v14 - 1;
    if (v16)
    {
      double v17 = (double *)(v3 + 40);
      do
      {
        double v18 = *v17++;
        double v19 = v18;
        if (v18 < v15) {
          double v15 = v19;
        }
        --v16;
      }
      while (v16);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v68 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2542E29B8(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v68;
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (uint64_t j = 0; j != v2; ++j)
        {
          CGRect v72 = *(CGRect *)(MEMORY[0x25A275A00](j, a1)
                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          CGFloat MaxX = CGRectGetMaxX(v72);
          swift_unknownObjectRelease();
          unint64_t v24 = *(void *)(v68 + 16);
          unint64_t v23 = *(void *)(v68 + 24);
          if (v24 >= v23 >> 1) {
            sub_2542E29B8(v23 > 1, v24 + 1, 1);
          }
          *(void *)(v68 + 16) = v24 + 1;
          *(CGFloat *)(v68 + 8 * v24 + 32) = MaxX;
        }
      }
      else
      {
        uint64_t v25 = (void *)(a1 + 32);
        uint64_t v26 = v2;
        do
        {
          CGFloat v27 = CGRectGetMaxX(*(CGRect *)(*v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          unint64_t v29 = *(void *)(v68 + 16);
          unint64_t v28 = *(void *)(v68 + 24);
          if (v29 >= v28 >> 1) {
            sub_2542E29B8(v28 > 1, v29 + 1, 1);
          }
          *(void *)(v68 + 16) = v29 + 1;
          *(CGFloat *)(v68 + 8 * v29 + 32) = v27;
          ++v25;
          --v26;
        }
        while (v26);
      }
      goto LABEL_33;
    }
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
LABEL_33:
  uint64_t v30 = *(void *)(v20 + 16);
  if (v30)
  {
    double v31 = *(double *)(v20 + 32);
    uint64_t v32 = v30 - 1;
    if (v32)
    {
      unint64_t v33 = (double *)(v20 + 40);
      do
      {
        double v34 = *v33++;
        double v35 = v34;
        if (v31 < v34) {
          double v31 = v35;
        }
        --v32;
      }
      while (v32);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v69 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2542E29B8(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      uint64_t v36 = v69;
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (uint64_t k = 0; k != v2; ++k)
        {
          CGRect v73 = *(CGRect *)(MEMORY[0x25A275A00](k, a1)
                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          CGFloat MinY = CGRectGetMinY(v73);
          swift_unknownObjectRelease();
          unint64_t v40 = *(void *)(v69 + 16);
          unint64_t v39 = *(void *)(v69 + 24);
          if (v40 >= v39 >> 1) {
            sub_2542E29B8(v39 > 1, v40 + 1, 1);
          }
          *(void *)(v69 + 16) = v40 + 1;
          *(CGFloat *)(v69 + 8 * v40 + 32) = MinY;
        }
      }
      else
      {
        char v41 = (void *)(a1 + 32);
        uint64_t v42 = v2;
        do
        {
          CGFloat v43 = CGRectGetMinY(*(CGRect *)(*v41 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          unint64_t v45 = *(void *)(v69 + 16);
          unint64_t v44 = *(void *)(v69 + 24);
          if (v45 >= v44 >> 1) {
            sub_2542E29B8(v44 > 1, v45 + 1, 1);
          }
          *(void *)(v69 + 16) = v45 + 1;
          *(CGFloat *)(v69 + 8 * v45 + 32) = v43;
          ++v41;
          --v42;
        }
        while (v42);
      }
      goto LABEL_51;
    }
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_51:
  uint64_t v46 = *(void *)(v36 + 16);
  if (v46)
  {
    double v47 = *(double *)(v36 + 32);
    uint64_t v48 = v46 - 1;
    if (v48)
    {
      unint64_t v49 = (double *)(v36 + 40);
      do
      {
        double v50 = *v49++;
        double v51 = v50;
        if (v50 < v47) {
          double v47 = v51;
        }
        --v48;
      }
      while (v48);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v52 = MEMORY[0x263F8EE78];
  if (!v2) {
    goto LABEL_69;
  }
  uint64_t v70 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E29B8(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
LABEL_80:
    __break(1u);
    return result;
  }
  uint64_t v52 = v70;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t m = 0; m != v2; ++m)
    {
      CGRect v74 = *(CGRect *)(MEMORY[0x25A275A00](m, a1) + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
      CGFloat MaxY = CGRectGetMaxY(v74);
      swift_unknownObjectRelease();
      unint64_t v56 = *(void *)(v70 + 16);
      unint64_t v55 = *(void *)(v70 + 24);
      if (v56 >= v55 >> 1) {
        sub_2542E29B8(v55 > 1, v56 + 1, 1);
      }
      *(void *)(v70 + 16) = v56 + 1;
      *(CGFloat *)(v70 + 8 * v56 + 32) = MaxY;
    }
  }
  else
  {
    uint64_t v57 = (void *)(a1 + 32);
    do
    {
      CGFloat v58 = CGRectGetMaxY(*(CGRect *)(*v57 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
      unint64_t v60 = *(void *)(v70 + 16);
      unint64_t v59 = *(void *)(v70 + 24);
      if (v60 >= v59 >> 1) {
        sub_2542E29B8(v59 > 1, v60 + 1, 1);
      }
      *(void *)(v70 + 16) = v60 + 1;
      *(CGFloat *)(v70 + 8 * v60 + 32) = v58;
      ++v57;
      --v2;
    }
    while (v2);
  }
LABEL_69:
  uint64_t v61 = *(void *)(v52 + 16);
  if (v61)
  {
    double v62 = *(double *)(v52 + 32);
    uint64_t v63 = v61 - 1;
    if (v63)
    {
      uint64_t v64 = (double *)(v52 + 40);
      do
      {
        double v65 = *v64++;
        double v66 = v65;
        if (v62 < v65) {
          double v62 = v66;
        }
        --v63;
      }
      while (v63);
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_254310BD0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_2542E29D8(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = a1 + 32;
    do
    {
      unint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = sub_254310540(v5);
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      if (v12 >= v11 >> 1) {
        sub_2542E29D8(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v15 + 16) = v12 + 1;
      unint64_t v13 = (void *)(v15 + 24 * v12);
      v13[4] = v6;
      v13[5] = v8;
      v13[6] = v10;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t initializeBufferWithCopyOfBuffer for DKSubjectClustering.Cluster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DKSubjectClustering.Cluster(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for DKSubjectClustering.Cluster(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKSubjectClustering.Cluster(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKSubjectClustering.Cluster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKSubjectClustering.Cluster()
{
  return &type metadata for DKSubjectClustering.Cluster;
}

unint64_t sub_254310E40()
{
  unint64_t result = qword_269DD9780;
  if (!qword_269DD9780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9780);
  }
  return result;
}

uint64_t sub_254310E98()
{
  v1[6] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254310F98, 0, 0);
}

uint64_t sub_254310F98()
{
  unint64_t v45 = v3;
  uint64_t v6 = v3[6];
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition);
  if (!v8)
  {
LABEL_23:
    uint64_t v33 = v3[10];
    uint64_t v34 = v3[7];
    uint64_t v35 = v3[8];
    sub_254272818(*(void *)(v6 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, v33);
    LODWORD(v34) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
    sub_254258BD8(v33);
    if (v34 == 1)
    {
      uint64_t v36 = v3[11];
      uint64_t v37 = v3[7];
      uint64_t v38 = v3[8];
      uint64_t v39 = *(void *)(v6 + 40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v36, *(void *)(v3[6] + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
      sub_254277464(v36, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v40 = (uint64_t (*)(uint64_t))v3[1];
    return v40(1);
  }
  uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex;
  if (*(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) == -1)
  {
    uint64_t v10 = -1;
  }
  else
  {
    if (!sub_254350EF4(0, *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals)))goto LABEL_23; {
    uint64_t v10 = *(void *)(v6 + v9);
    }
  }
  BOOL v11 = __OFADD__(v10, 1);
  unint64_t v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v1 = v3[6];
  *(void *)(v6 + v9) = v12;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints;
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints);
  unint64_t v14 = *(void *)(v13 + 16);
  if (v12 == v14)
  {
    uint64_t v15 = v3[11];
    uint64_t v16 = v3[7];
    uint64_t v17 = v3[8];
    uint64_t v18 = *(void *)(v6 + 40);
    swift_retain();
    sub_25436C6E0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    sub_254277464(v15, v18 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime);
    swift_release();
    goto LABEL_23;
  }
  if (v12 >= v14) {
    goto LABEL_29;
  }
  if (!*(void *)(v8 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v0 = *(double **)(v13 + 16 * v12 + 40);
  double v4 = *(double *)(v8 + 32);
  uint64_t v19 = *((void *)v0 + 2);
  if (v4 > 6.28318531)
  {
    if (!v19) {
      goto LABEL_33;
    }
    double v5 = v0[4];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_35;
    }
    if (!*((void *)v0 + 2)) {
      goto LABEL_36;
    }
LABEL_15:
    for (double i = v4 - v5; ; double i = v4 + v5)
    {
      v0[4] = i;
      unint64_t v22 = *(void *)(v6 + v9);
      if ((v22 & 0x8000000000000000) != 0)
      {
LABEL_31:
        __break(1u);
      }
      else
      {
        uint64_t v23 = *(void *)(v1 + v2);
        if (v22 < *(void *)(v23 + 16))
        {
          uint64_t v25 = v3[8];
          uint64_t v24 = v3[9];
          uint64_t v26 = v3[7];
          uint64_t v41 = *(void *)(v23 + 16 * v22 + 32);
          uint64_t v27 = *(void *)(v3[6] + 48);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v26);
          type metadata accessor for DKIntelligentTrackingCommand(0);
          uint64_t v28 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v24, v26);
          uint64_t v29 = v28 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
          *(void *)uint64_t v29 = v0;
          *(void *)(v29 + 8) = v41;
          *(_WORD *)(v29 + 16) = 0x4000;
          *(void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v28;
          swift_bridgeObjectRetain();
          swift_release();
          char v42 = 10;
          uint64_t v43 = 0;
          unint64_t v44 = 0xE000000000000000;
          sub_25436D290();
          v3[2] = 0;
          v3[3] = 0xE000000000000000;
          sub_25436CCB0();
          v3[4] = v0;
          sub_25436D460();
          swift_bridgeObjectRelease();
          sub_25436CCB0();
          v3[5] = *(void *)(v6 + v9);
          sub_25436D760();
          sub_25436CCB0();
          swift_bridgeObjectRelease();
          uint64_t v31 = v3[2];
          unint64_t v30 = v3[3];
          os_log_type_t v32 = sub_25436D020();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v42, v31, v30, v32);
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v0 = (double *)sub_2543631E4(v0);
      if (*((void *)v0 + 2)) {
        goto LABEL_15;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      uint64_t result = (uint64_t)sub_2543631E4(v0);
      uint64_t v0 = (double *)result;
      if (!*(void *)(result + 16)) {
        goto LABEL_38;
      }
LABEL_19:
      ;
    }
  }
  if (!v19) {
    goto LABEL_34;
  }
  double v5 = v0[4];
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_37;
  }
  if (*((void *)v0 + 2)) {
    goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_254311478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) = -1;
  uint64_t v10 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD97A0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_254370DD0;
  *(void *)(v11 + 32) = 0x4008000000000000;
  *(void *)(v11 + 40) = &unk_2703B2248;
  *(void *)(v11 + 48) = 0x4024000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_25436E6A0;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 32) = 0x401921FB54442D18;
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 64) = 0x4008000000000000;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_25436E6A0;
  *(_OWORD *)(v13 + 32) = xmmword_2543764D0;
  *(void *)(v13 + 48) = 0;
  *(void *)(v11 + 72) = v13;
  *(void *)(v11 + 80) = 0x4024000000000000;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_25436E6A0;
  *(_OWORD *)(v14 + 32) = xmmword_2543764E0;
  *(void *)(v14 + 48) = 0;
  *(void *)(v11 + 88) = v14;
  *(void *)(v11 + 96) = 0x4008000000000000;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25436E6A0;
  *(_OWORD *)(v15 + 32) = xmmword_2543764F0;
  *(void *)(v15 + 48) = 0;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 112) = 0x4024000000000000;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_25436E6A0;
  *(_OWORD *)(v16 + 32) = xmmword_254376500;
  *(void *)(v16 + 48) = 0;
  *(void *)(v11 + 120) = v16;
  *(void *)(v11 + 128) = 0x4024000000000000;
  *(void *)(v11 + 136) = &unk_2703B2280;
  *(void *)((char *)v5 + v10) = v11;
  sub_25436C9E0();
  uint64_t v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_25431167C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25431168C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_254311760()
{
  return type metadata accessor for DKSearchTask();
}

uint64_t type metadata accessor for DKSearchTask()
{
  uint64_t result = qword_269DD9788;
  if (!qword_269DD9788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2543117B4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_254311808()
{
  v1[15] = v0;
  uint64_t v2 = sub_25436C9F0();
  v1[16] = v2;
  v1[17] = *(void *)(v2 - 8);
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[19] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DKCamera();
  v1[20] = v3;
  v1[21] = *(void *)(v3 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v4 = sub_25436C7B0();
  v1[23] = v4;
  v1[24] = *(void *)(v4 - 8);
  v1[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2543119DC, 0, 0);
}

uint64_t sub_2543119DC()
{
  uint64_t v46 = v0;
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 120);
  double v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, *(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v3);
  sub_25436C770();
  double v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v1, v3);
  uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime;
  if (vabdd_f64(v7, *(double *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime)) >= 0.2)
  {
    uint64_t v11 = *(void *)(v4 + 48);
    uint64_t v12 = *(void **)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
    if (v12)
    {
      uint64_t v43 = v8;
      uint64_t v13 = *(void *)(v0 + 160);
      uint64_t v14 = *(void *)(v0 + 168);
      uint64_t v15 = *(void *)(v0 + 152);
      sub_2542503C8(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v15, &qword_269DD7808);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
      {
        sub_25425042C(*(void *)(v0 + 152), &qword_269DD7808);
      }
      else
      {
        uint64_t v41 = *(void *)(v0 + 120);
        sub_2542502F0(*(void *)(v0 + 152), *(void *)(v0 + 176));
        sub_2543130B4(0, &qword_269DD97D8);
        id v16 = v12;
        uint64_t v17 = MEMORY[0x263F8EE78];
        uint64_t v39 = (void *)MEMORY[0x25A275800](MEMORY[0x263F8EE78]);
        type metadata accessor for DKImageCrop();
        uint64_t inited = (CGFloat *)swift_initStackObject();
        id v19 = v16;
        *((void *)inited + 7) = sub_2542645A4(v17);
        *((void *)inited + 2) = v12;
        uint64_t v20 = (__CVBuffer *)v19;
        size_t Width = CVPixelBufferGetWidth(v20);
        size_t Height = CVPixelBufferGetHeight(v20);
        v48.origin.CGFloat x = 0.0;
        v48.origin.CGFloat y = 0.0;
        v48.size.width = 1.0;
        v48.size.height = 1.0;
        CGRect v49 = VNImageRectForNormalizedRect(v48, Width, Height);
        CGFloat x = v49.origin.x;
        CGFloat y = v49.origin.y;
        CGFloat v25 = v49.size.width;
        CGFloat v26 = v49.size.height;

        inited[3] = x;
        inited[4] = y;
        inited[5] = v25;
        inited[6] = v26;
        *(void *)(v0 + 208) = 0;
        *(_DWORD *)(v0 + 216) = 0;
        uint64_t v27 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session;
        objc_msgSend(*(id *)(v41 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session), sel_requiredInputFormat_height_format_, v0 + 212, v0 + 208, v0 + 216);
        uint64_t v28 = sub_25430D15C((__CVBuffer *)*(int *)(v0 + 212), *(int *)(v0 + 208));
        uint64_t v38 = v20;
        uint64_t v29 = *(void **)(v41 + v27);
        char v42 = v28;
        objc_msgSend(v29, sel_processFrame_withOptions_results_, v28, 0, v39);
        uint64_t v44 = 0;
        sub_2543130B4(0, &qword_269DD97E0);
        id v30 = v39;
        sub_25436CDC0();

        uint64_t v31 = *(void *)(v0 + 200);
        uint64_t v32 = *(void *)(v0 + 184);
        uint64_t v40 = *(void *)(v0 + 176);
        uint64_t v33 = *(void *)(v0 + 120);
        v5(v31, *(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v32);
        sub_25436C770();
        uint64_t v35 = v34;

        swift_release();
        v43(v31, v32);
        sub_254250354(v40);
        *(void *)(v4 + v9) = v35;
        *(unsigned char *)(*(void *)(v33 + 40)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 1;
      }
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 120);
    sub_2543125CC();
    *(unsigned char *)(*(void *)(v10 + 40)
             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v36(1);
}

BOOL sub_25431203C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  double v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, *(void *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v2, v4);
  sub_25436C770();
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return vabdd_f64(v8, *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime)) >= 0.2;
}

uint64_t sub_254312158(unint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92A8);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v33) = *a2;
  unsigned __int8 v10 = *a3;
  unint64_t v38 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v11 = result;
    uint64_t v32 = v3;
    if (result) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v18 = MEMORY[0x263F8EE78];
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v32 = v3;
  if (!v11) {
    goto LABEL_15;
  }
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x25A275A00](i, a1);
    }
    else {
      id v14 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    v36[0] = v33;
    unsigned __int8 v37 = v10;
    type metadata accessor for DKBodyKeyPointList();
    swift_allocObject();
    id v16 = v15;
    if (sub_2542DDB0C(v16, v36, &v37))
    {
      uint64_t v17 = swift_retain();
      MEMORY[0x25A275490](v17);
      if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v18 = v38;
  uint64_t v3 = v32;
LABEL_16:
  unint64_t v19 = *(void *)(*(void *)(*(void *)(v3 + 40)
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_2542C0E3C(v18, v19, v3, 1.79769313e308);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (v21)
  {
    *(void *)uint64_t v36 = MEMORY[0x263F8EE78];
    sub_2542E2A58(0, v21, 0);
    uint64_t v22 = *(void *)v36;
    uint64_t v33 = v20;
    uint64_t v23 = (void *)(v20 + 40);
    do
    {
      uint64_t v24 = *(v23 - 1);
      if (*v23)
      {
        uint64_t v25 = *v23 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
        uint64_t v26 = sub_25436C800();
        uint64_t v27 = *(void *)(v26 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
      }
      else
      {
        uint64_t v28 = sub_25436C800();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 1, 1, v28);
      }
      *(void *)&v9[*(int *)(v35 + 48)] = v24;
      *(void *)uint64_t v36 = v22;
      unint64_t v29 = *(void *)(v22 + 16);
      unint64_t v30 = *(void *)(v22 + 24);
      swift_retain();
      if (v29 >= v30 >> 1)
      {
        sub_2542E2A58(v30 > 1, v29 + 1, 1);
        uint64_t v22 = *(void *)v36;
      }
      v23 += 3;
      *(void *)(v22 + 16) = v29 + 1;
      sub_25425E0DC((uint64_t)v9, v22+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29, &qword_269DD92A8);
      --v21;
    }
    while (v21);
    uint64_t v3 = v32;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations) = v22;
  swift_bridgeObjectRelease();
  sub_2543125CC();
  return swift_release();
}

uint64_t sub_2543125CC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  double v6 = (char *)&v53 - v5;
  uint64_t v74 = sub_25436C800();
  uint64_t v7 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  CGRect v71 = (char *)&v53 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD92A8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v54 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v53 - v15;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v53 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v73 = (uint64_t)&v53 - v21;
  uint64_t v63 = v0;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations);
  uint64_t v72 = *(void *)(result + 16);
  if (!v72) {
    return result;
  }
  unint64_t v70 = result + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v69 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v64 = v6;
  uint64_t v23 = *(int *)(v11 + 48);
  unint64_t v60 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v61 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  unint64_t v59 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  unint64_t v55 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  double v62 = v3;
  uint64_t v67 = v12;
  uint64_t v68 = v11;
  uint64_t v66 = result;
  unint64_t v56 = v16;
  uint64_t v57 = v23;
  CGFloat v58 = v19;
  while (v24 < *(void *)(result + 16))
  {
    uint64_t v25 = v73;
    sub_2542503C8(v70 + *(void *)(v12 + 72) * v24, v73, &qword_269DD92A8);
    uint64_t v26 = *(void (**)(void, void))(v25 + v23);
    uint64_t v27 = *(int *)(v11 + 48);
    sub_25425E0DC(v25, (uint64_t)v19, &qword_269DD7F58);
    *(void *)&v19[v27] = v26;
    uint64_t v28 = *(int *)(v11 + 48);
    sub_2542503C8((uint64_t)v19, (uint64_t)v16, &qword_269DD7F58);
    *(void *)&v16[v28] = v26;
    unint64_t v29 = *v69;
    uint64_t v30 = (uint64_t)v19;
    uint64_t v31 = v74;
    if ((*v69)(v16, 1, v74) != 1)
    {
      double v65 = v26;
      uint64_t v32 = *v61;
      uint64_t v33 = v71;
      (*v61)(v71, v16, v31);
      uint64_t v34 = (uint64_t)v64;
      uint64_t v35 = *(void *)(*(void *)(v63 + 40)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
      (*v60)(v64, v33, v31);
      (*v59)(v34, 0, 1, v31);
      uint64_t v36 = (uint64_t)v62;
      sub_2542503C8(v34, (uint64_t)v62, &qword_269DD7F58);
      if (v29((char *)v36, 1, v31) == 1)
      {
        swift_retain();
        sub_25425042C(v36, &qword_269DD7F58);
        unsigned __int8 v37 = v55;
        uint64_t v38 = v31;
        unint64_t v19 = v58;
        uint64_t v39 = v34;
        goto LABEL_26;
      }
      v32(v75, (char *)v36, v31);
      unint64_t v40 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      if (v40 >> 62)
      {
        char v42 = v65;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain_n();
        uint64_t v41 = sub_25436D530();
      }
      else
      {
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        char v42 = v65;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain_n();
      }
      unint64_t v19 = v58;
      if (!v41) {
        goto LABEL_25;
      }
      double v65 = (void (*)(void, void))(v40 & 0xC000000000000001);
      if ((v40 & 0xC000000000000001) != 0)
      {
        uint64_t v43 = MEMORY[0x25A275A00](0, v40);
      }
      else
      {
        uint64_t v43 = *(void *)(v40 + 32);
        swift_retain();
      }
      if (sub_25436C7D0()) {
        goto LABEL_15;
      }
      swift_release();
      if (v41 == 1)
      {
LABEL_25:
        swift_bridgeObjectRelease_n();
        unsigned __int8 v37 = v55;
        uint64_t v38 = v74;
        (*v55)(v75, v74);
        swift_release();
        uint64_t v39 = (uint64_t)v64;
LABEL_26:
        sub_25425042C(v39, &qword_269DD7F58);
        swift_release();
        (*v37)(v71, v38);
        sub_25425042C((uint64_t)v19, &qword_269DD92A8);
        uint64_t v11 = v68;
      }
      else
      {
        uint64_t v49 = 5;
        while (1)
        {
          uint64_t v50 = v49 - 4;
          if (v65)
          {
            uint64_t result = MEMORY[0x25A275A00](v49 - 4, v40);
            uint64_t v43 = result;
            BOOL v51 = __OFADD__(v50, 1);
            uint64_t v52 = v49 - 3;
            if (v51) {
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v43 = *(void *)(v40 + 8 * v49);
            uint64_t result = swift_retain();
            BOOL v51 = __OFADD__(v50, 1);
            uint64_t v52 = v49 - 3;
            if (v51) {
              goto LABEL_33;
            }
          }
          if (sub_25436C7D0()) {
            break;
          }
          swift_release();
          ++v49;
          if (v52 == v41) {
            goto LABEL_25;
          }
        }
LABEL_15:
        uint64_t v44 = (uint64_t)v64;
        uint64_t v45 = v55;
        swift_bridgeObjectRelease_n();
        double v65 = (void (*)(void, void))*v45;
        uint64_t v46 = v74;
        v65(v75, v74);
        swift_release();
        sub_25425042C(v44, &qword_269DD7F58);
        uint64_t v11 = v68;
        uint64_t v47 = *(int *)(v68 + 48);
        uint64_t v48 = v54;
        sub_2542503C8((uint64_t)v19, v54, &qword_269DD7F58);
        *(void *)(v48 + v47) = v42;
        *(void *)(v43 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = v42;
        swift_release();
        swift_release();
        v65(v71, v46);
        sub_25425042C((uint64_t)v19, &qword_269DD92A8);
        sub_25425042C(v48, &qword_269DD7F58);
      }
      uint64_t result = v66;
      uint64_t v12 = v67;
      id v16 = v56;
      uint64_t v23 = v57;
      goto LABEL_4;
    }
    sub_25425042C(v30, &qword_269DD92A8);
    sub_25425042C((uint64_t)v16, &qword_269DD7F58);
    uint64_t v12 = v67;
    uint64_t v11 = v68;
    uint64_t result = v66;
    unint64_t v19 = (char *)v30;
LABEL_4:
    if (++v24 == v72) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *sub_254312D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD97E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  sub_25436CC00();
  swift_retain();
  sub_25436D240();
  *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 72) = 1;
  sub_254264220(inited);
  id v13 = objc_allocWithZone(MEMORY[0x263F54040]);
  uint64_t v14 = (void *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithOptions_, v14);

  *(void *)((char *)v5 + v11) = v15;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_minPeriod) = 0x3FC999999999999ALL;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime) = 0;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations) = MEMORY[0x263F8EE78];
  swift_release();
  sub_25436C9E0();
  uint64_t v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_254312ED8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_254312F18()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_254312FFC()
{
  return type metadata accessor for DKBodyPoseExtractionTask();
}

uint64_t type metadata accessor for DKBodyPoseExtractionTask()
{
  uint64_t result = qword_269DD97C0;
  if (!qword_269DD97C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254313050()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2543130B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2543130F0(unint64_t a1, char a2, int a3)
{
  return sub_254313208(a1, a2, a3, sub_2543517E0, (uint64_t)sub_2542982E0, (uint64_t)&type metadata for DKHandObservation.Chirality, (void (*)(void))sub_25429BC04, (void (*)(void))sub_2542982D4, (void (*)(void))sub_25429BBF8);
}

uint64_t sub_25431317C(unint64_t a1, char a2, int a3)
{
  return sub_254313208(a1, a2, a3, sub_2543517E0, (uint64_t)sub_25429911C, (uint64_t)&type metadata for DKFaceDirection, (void (*)(void))sub_25429C5BC, (void (*)(void))sub_254298E34, (void (*)(void))sub_25429C408);
}

uint64_t sub_254313208(unint64_t a1, char a2, int a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(void), void (*a9)(void))
{
  uint64_t v89 = a8;
  *(void *)&long long v91 = a5;
  uint64_t v96 = a4;
  uint64_t v12 = v9;
  int v88 = a3;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v94 = (char *)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v92 = v9;
  v86[1] = a6;
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
  uint64_t v87 = a7;
  uint64_t v17 = v9[2];
  uint64_t v19 = v17 + 64;
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v20 = -1;
  uint64_t v21 = -1 << *(unsigned char *)(v17 + 32);
  uint64_t v90 = ~v21;
  if (-v21 < 64) {
    uint64_t v20 = ~(-1 << -(char)v21);
  }
  unint64_t v22 = v20 & v18;
  int64_t v23 = (unint64_t)(63 - v21) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  unint64_t v95 = a1;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_23;
    }
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v27 >= v23) {
      goto LABEL_35;
    }
    unint64_t v28 = *(void *)(v19 + 8 * v27);
    int64_t v29 = v24 + 1;
    if (!v28)
    {
      int64_t v29 = v24 + 2;
      if (v24 + 2 >= v23) {
        goto LABEL_35;
      }
      unint64_t v28 = *(void *)(v19 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v24 + 3;
        if (v24 + 3 >= v23) {
          goto LABEL_35;
        }
        unint64_t v28 = *(void *)(v19 + 8 * v29);
        if (!v28) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v24 = v29;
LABEL_23:
    uint64_t v31 = *(unsigned __int8 *)(*(void *)(v17 + 48) + v26);
    if (*(void *)(a1 + 16))
    {
      v96(*(unsigned __int8 *)(*(void *)(v17 + 48) + v26));
      if (v32) {
        continue;
      }
    }
    swift_retain();
    uint64_t v33 = (void *)v95;
    LODWORD(v93) = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = v33;
    unint64_t v35 = v96(v31);
    uint64_t v36 = v33[2];
    BOOL v37 = (v34 & 1) == 0;
    if (__OFADD__(v36, v37)) {
      goto LABEL_82;
    }
    if (v33[3] >= v36 + v37)
    {
      if ((v93 & 1) == 0)
      {
        LODWORD(v95) = v34;
        v87();
        LOBYTE(v34) = v95;
      }
    }
    else
    {
      LODWORD(v95) = v34;
      ((void (*)(void))v91)();
      uint64_t v38 = v96(v31);
      int v39 = v34 & 1;
      LOBYTE(v34) = v95;
      if ((v95 & 1) != v39) {
        goto LABEL_84;
      }
      unint64_t v35 = v38;
    }
    unint64_t v40 = v97;
    unint64_t v95 = (unint64_t)v97;
    if (v34)
    {
      *(void *)(v97[7] + 8 * v35) = 0;
    }
    else
    {
      v97[(v35 >> 6) + 8] |= 1 << v35;
      *(unsigned char *)(v40[6] + v35) = v31;
      *(void *)(v40[7] + 8 * v35) = 0;
      uint64_t v41 = v40[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_83;
      }
      v40[2] = v43;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  int64_t v30 = v24 + 4;
  if (v24 + 4 >= v23) {
    goto LABEL_35;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v24 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_81;
    }
    if (v29 >= v23) {
      break;
    }
    unint64_t v28 = *(void *)(v19 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_35:
  sub_2542774CC();
  a1 = v95;
  uint64_t v12 = v92;
LABEL_36:
  int64_t v44 = 0;
  uint64_t v87 = a9;
  uint64_t v45 = *(void *)(a1 + 64);
  uint64_t v90 = a1 + 64;
  uint64_t v46 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v47 = -1;
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  unint64_t v48 = v47 & v45;
  int64_t v93 = (unint64_t)(v46 + 63) >> 6;
  long long v91 = xmmword_25436FDF0;
  while (2)
  {
    if (v48)
    {
      unint64_t v51 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      unint64_t v52 = v51 | (v44 << 6);
LABEL_57:
      uint64_t v56 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v52);
      double v57 = *(double *)(*(void *)(a1 + 56) + 8 * v52);
      if (*(void *)(v12[2] + 16))
      {
        v96(v56);
        if (v58) {
          goto LABEL_71;
        }
      }
      unint64_t v95 = v48;
      int64_t v59 = v44;
      uint64_t v60 = v12[4];
      uint64_t v61 = v12[5];
      uint64_t v62 = sub_25436C7B0();
      uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
      uint64_t v64 = (uint64_t)v94;
      v63(v94, 1, 1, v62);
      type metadata accessor for DKSmoothingFilter();
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 48) = v91;
      uint64_t v66 = v65 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      v63((char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v62);
      uint64_t v67 = v65 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
      *(void *)uint64_t v67 = 0;
      *(unsigned char *)(v67 + 8) = 1;
      uint64_t v68 = v65 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
      *(void *)uint64_t v68 = 0;
      *(unsigned char *)(v68 + 8) = 1;
      *(unsigned char *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
      *(void *)(v65 + 16) = v60;
      *(void *)(v65 + 24) = v61;
      *(_WORD *)(v65 + 32) = 256;
      *(void *)(v65 + 40) = 0x3FE0000000000000;
      sub_254277464(v64, v66);
      *(void *)uint64_t v67 = 0;
      *(unsigned char *)(v67 + 8) = 1;
      *(void *)uint64_t v68 = 0;
      *(unsigned char *)(v68 + 8) = 1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v97 = (void *)v12[2];
      unint64_t v70 = v97;
      void v12[2] = 0x8000000000000000;
      unint64_t v72 = v96(v56);
      uint64_t v73 = v70[2];
      BOOL v74 = (v71 & 1) == 0;
      if (__OFADD__(v73, v74))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      char v75 = v71;
      if (v70[3] >= v73 + v74)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v78 = v97;
          if ((v71 & 1) == 0) {
            goto LABEL_68;
          }
        }
        else
        {
          v87();
          unint64_t v78 = v97;
          if ((v75 & 1) == 0) {
            goto LABEL_68;
          }
        }
      }
      else
      {
        v89();
        uint64_t v76 = v96(v56);
        if ((v75 & 1) != (v77 & 1)) {
          goto LABEL_84;
        }
        unint64_t v72 = v76;
        unint64_t v78 = v97;
        if ((v75 & 1) == 0)
        {
LABEL_68:
          v78[(v72 >> 6) + 8] |= 1 << v72;
          *(unsigned char *)(v78[6] + v72) = v56;
          *(void *)(v78[7] + 8 * v72) = v65;
          uint64_t v80 = v78[2];
          BOOL v42 = __OFADD__(v80, 1);
          uint64_t v81 = v80 + 1;
          if (v42) {
            goto LABEL_78;
          }
          v78[2] = v81;
LABEL_70:
          uint64_t v12 = v92;
          v92[2] = v78;
          swift_bridgeObjectRelease();
          int64_t v44 = v59;
          unint64_t v48 = v95;
LABEL_71:
          if (*(void *)(v12[2] + 16))
          {
            v96(v56);
            if (v82)
            {
              uint64_t v83 = sub_25436C7B0();
              uint64_t v84 = (uint64_t)v94;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v94, 1, 1, v83);
              swift_retain();
              if (v88)
              {
                uint64_t v49 = 0x3FF0000000000000;
                char v50 = 0;
              }
              else
              {
                uint64_t v49 = 0;
                char v50 = 1;
              }
              sub_25435D340(v49, v50, v84, v57);
              swift_release();
              sub_25425042C(v84, &qword_269DD7A40);
            }
          }
          continue;
        }
      }
      uint64_t v79 = v78[7];
      swift_release();
      *(void *)(v79 + 8 * v72) = v65;
      goto LABEL_70;
    }
    break;
  }
  int64_t v53 = v44 + 1;
  if (__OFADD__(v44, 1)) {
    goto LABEL_77;
  }
  if (v53 >= v93) {
    return swift_release();
  }
  unint64_t v54 = *(void *)(v90 + 8 * v53);
  ++v44;
  if (v54) {
    goto LABEL_56;
  }
  int64_t v44 = v53 + 1;
  if (v53 + 1 >= v93) {
    return swift_release();
  }
  unint64_t v54 = *(void *)(v90 + 8 * v44);
  if (v54) {
    goto LABEL_56;
  }
  int64_t v44 = v53 + 2;
  if (v53 + 2 >= v93) {
    return swift_release();
  }
  unint64_t v54 = *(void *)(v90 + 8 * v44);
  if (v54)
  {
LABEL_56:
    unint64_t v48 = (v54 - 1) & v54;
    unint64_t v52 = __clz(__rbit64(v54)) + (v44 << 6);
    goto LABEL_57;
  }
  int64_t v55 = v53 + 3;
  if (v55 >= v93) {
    return swift_release();
  }
  unint64_t v54 = *(void *)(v90 + 8 * v55);
  if (v54)
  {
    int64_t v44 = v55;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v44 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    if (v44 >= v93) {
      return swift_release();
    }
    unint64_t v54 = *(void *)(v90 + 8 * v44);
    ++v55;
    if (v54) {
      goto LABEL_56;
    }
  }
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  uint64_t result = sub_25436D850();
  __break(1u);
  return result;
}

uint64_t sub_2543139D8(unint64_t a1, char a2, int a3)
{
  return sub_254313208(a1, a2, a3, sub_2543517E0, (uint64_t)sub_254299128, (uint64_t)&type metadata for DKMotionClassification, (void (*)(void))sub_25429C5C8, (void (*)(void))sub_254298E40, (void (*)(void))sub_25429C414);
}

uint64_t DKHandTrackerConfiguration.__allocating_init()()
{
  *(void *)(swift_allocObject() + 176) = 0x3FB999999999999ALL;
  return DKTrackerConfiguration.init()();
}

uint64_t DKHandTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return DKHandTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
}

uint64_t DKHandTrackerConfiguration.init()()
{
  *(void *)(v0 + 176) = 0x3FB999999999999ALL;
  return DKTrackerConfiguration.init()();
}

void DKHandTrackerConfiguration.__allocating_init(configuration:)()
{
}

void DKHandTrackerConfiguration.init(configuration:)()
{
}

uint64_t DKHandTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKHandTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_254313C10()
{
  return swift_retain();
}

uint64_t sub_254313C20(uint64_t a1)
{
  *(void *)(v1 + qword_269DDAFF8) = a1;
  return swift_release();
}

uint64_t (*sub_254313C38())()
{
  return nullsub_1;
}

uint64_t DKHandTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v32 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v11 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v31 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25436C800();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25436C7B0();
  uint64_t v28 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = *(double *)(a2 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8048);
  swift_allocObject();
  swift_retain();
  *(void *)(v7 + qword_269DDAFF8) = sub_2542A7F64((uint64_t)&unk_2703B24F0, v21, v21);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  uint64_t v22 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  sub_25428CF24(v32, v31, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v25 = sub_2543654BC(v20, v30, v16, v33, v34, v23);
  sub_25428CA3C(v24, (uint64_t (*)(void))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v29, v28);
  return v25;
}

uint64_t sub_254313F1C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_254306F88(a1, a2);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8050);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25436F130;
    *(unsigned char *)(inited + 32) = *(unsigned char *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
    *(void *)(inited + 40) = 0x3FF0000000000000;
    unint64_t v5 = sub_2542692F8(inited);
    swift_setDeallocating();
    swift_retain();
    swift_retain();
    sub_254313208(v5, 1, 0, sub_2543517E0, (uint64_t)sub_2542982E0, (uint64_t)&type metadata for DKHandObservation.Chirality, (void (*)(void))sub_25429BC04, (void (*)(void))sub_2542982D4, (void (*)(void))sub_25429BBF8);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_254314054(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v76 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8040);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v72 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_25436C800();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_25436C7B0();
  uint64_t v67 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v68 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  BOOL v74 = (char *)&v63 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v63 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v73 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v63 - v19;
  double v21 = (int *)type metadata accessor for DKMotion3();
  uint64_t v71 = *((void *)v21 - 1);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25435C720((uint64_t)v79);
  sub_2542721C0((uint64_t)v79, (uint64_t)v80);
  uint64_t v24 = 0;
  if (v81) {
    return v24;
  }
  double v25 = *(double *)v80;
  double v26 = *(double *)&v80[1];
  double v27 = *(double *)&v80[2];
  double v28 = *(double *)&v80[3];
  swift_retain();
  sub_2542A4DE4(v78, 0, 1);
  swift_release();
  if (LOBYTE(v78[0]) == 3) {
    return 0;
  }
  uint64_t v64 = LOBYTE(v78[0]);
  uint64_t v65 = v6;
  uint64_t v29 = *(void *)(v2 + *(void *)(*(void *)v2 + 216));
  uint64_t v66 = v23;
  if (!v29) {
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  uint64_t v30 = v76;
  sub_254251374(v76);
  swift_release();
  swift_retain();
  sub_254251374(v30);
  swift_release();
  swift_retain();
  sub_254251374(v30);
  swift_release();
  sub_25431FE58(v30);
  uint64_t v31 = *(void *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (v31)
  {
    sub_25428CF24(v31 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DKMotion3);
    swift_release();
    uint64_t v32 = v71;
    uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, int *))(v71 + 56);
    uint64_t v34 = v20;
    uint64_t v35 = 0;
  }
  else
  {
LABEL_7:
    uint64_t v32 = v71;
    uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, int *))(v71 + 56);
    uint64_t v34 = v20;
    uint64_t v35 = 1;
  }
  uint64_t v63 = v33;
  v33((uint64_t)v34, v35, 1, v21);
  uint64_t v36 = v67;
  uint64_t v37 = v75;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v38(v15, v76, v75);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v20, 1, v21) == 1)
  {
    v38(v12, (uint64_t)v15, v37);
    uint64_t v39 = (uint64_t)v66;
    v38(v66, (uint64_t)v12, v75);
    *(void *)(v39 + v21[5]) = &unk_2703B1E78;
    *(void *)(v39 + v21[6]) = &unk_2703B1EB0;
    unint64_t v40 = *(void (**)(char *, uint64_t))(v36 + 8);
    v40(v12, v75);
    *(void *)(v39 + v21[7]) = &unk_2703B1EE8;
    uint64_t v37 = v75;
    v40(v15, v75);
    sub_25425042C((uint64_t)v20, &qword_269DD7810);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
    sub_254291724((uint64_t)v20, (uint64_t)v66);
  }
  uint64_t v41 = v65;
  v38(v74, v76, v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v41, v2 + qword_269DDA9F0, v70);
  uint64_t v42 = *(void *)(v2 + qword_269DDAA00 + 8);
  v78[0] = *(void *)(v2 + qword_269DDAA00);
  v78[1] = v42;
  uint64_t v43 = *(void *)(v2 + qword_269DDAA08);
  uint64_t v44 = *(void *)(v2 + qword_269DDA9F8);
  uint64_t v45 = v72;
  sub_2542A8A14(v2 + *(void *)(*(void *)v2 + 232), v72);
  uint64_t v46 = type metadata accessor for DKPersonGroupFilter.Track(0);
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46);
  unint64_t v48 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
  if (v47)
  {
    sub_25425042C(v72, &qword_269DD8040);
  }
  else
  {
    uint64_t v49 = *(void *)v72;
    int v50 = *(unsigned __int8 *)(v72 + 8);
    sub_25425042C(v72, &qword_269DD8040);
    if (v50 != 1)
    {
      uint64_t v51 = v49;
      goto LABEL_15;
    }
  }
  uint64_t v51 = -1;
LABEL_15:
  uint64_t v52 = (uint64_t)v68;
  uint64_t v53 = v73;
  sub_25428CF24((uint64_t)v66, v73, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  v63(v53, 0, 1, v21);
  v48(v52, v2 + qword_269DDAA28, v37);
  uint64_t v54 = *(void *)(v2 + qword_269DDAA38);
  uint64_t v55 = *(void *)(v54 + 16);
  if (v55)
  {
    uint64_t v56 = *(void *)(v54 + 8 * v55 + 24);
    swift_retain();
  }
  else
  {
    uint64_t v56 = 0;
  }
  uint64_t v57 = (uint64_t)v66;
  uint64_t v58 = v43;
  uint64_t v59 = v44;
  uint64_t v60 = v51;
  uint64_t v61 = (uint64_t)v65;
  char v77 = v64;
  type metadata accessor for DKHandTrackerState(0);
  swift_allocObject();
  uint64_t v24 = DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)((uint64_t)v74, v61, v78, v58, v59, v60, v73, v52, v25, v26, v27, v28, 0, v56, &v77);
  sub_25428CA3C(v57, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return v24;
}

uint64_t sub_254314900()
{
  return swift_release();
}

uint64_t DKHandTracker.deinit()
{
  uint64_t v0 = _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  return v0;
}

uint64_t DKHandTracker.__deallocating_deinit()
{
  _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2543149BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_254314054(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2543149E4(uint64_t a1, uint64_t *a2)
{
  return sub_254313F1C(a1, *a2);
}

double sub_2543149EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_2543149FC(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 176) = *a1;
  return result;
}

uint64_t sub_254314A0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + qword_269DDAFF8);
  return swift_retain();
}

uint64_t sub_254314A24(void *a1, void *a2)
{
  *(void *)(*a2 + qword_269DDAFF8) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKHandTrackerConfiguration()
{
  return self;
}

uint64_t method lookup function for DKHandTrackerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKHandTrackerConfiguration);
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t type metadata accessor for DKHandTracker()
{
  uint64_t result = qword_269DD97F0;
  if (!qword_269DD97F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254314B7C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKHandTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKHandTracker);
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t DKLogVideoPlayer.__allocating_init(url:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_254314D08;
  return DKLogVideoPlayer.init(url:)(a1);
}

uint64_t sub_254314D08(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t DKLogVideoPlayer.init(url:)(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v2[14] = swift_task_alloc();
  uint64_t v3 = sub_25436C7B0();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254314EF8, 0, 0);
}

uint64_t sub_254314EF8()
{
  uint64_t v1 = v0[13];
  v0[18] = OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  sub_25436C9E0();
  id v2 = objc_allocWithZone(MEMORY[0x263EFA8D0]);
  uint64_t v3 = (void *)sub_25436C5B0();
  id v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);
  v0[19] = v4;

  *(void *)(v1 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9810);
  v4;
  uint64_t v5 = sub_25436C860();
  v0[20] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_25431504C;
  return MEMORY[0x270F9C8E8](v0 + 2, v5);
}

uint64_t sub_25431504C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();

  swift_release();
  if (v0) {
    uint64_t v3 = sub_254315DAC;
  }
  else {
    uint64_t v3 = sub_25431519C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_25431519C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_25436D100();
  *(void *)(v1 + 32) = v2;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA4B0]), sel_initWithAsset_, *(void *)(v1 + 16));
  *(void *)(v1 + 24) = v3;
  objc_msgSend(v3, sel_setAppliesPreferredTrackTransform_, 1);
  id v4 = *(id *)(v1 + 24);
  *(void *)(v0 + 40) = sub_25436D0E0();
  *(_DWORD *)(v0 + 48) = v5;
  *(_DWORD *)(v0 + 52) = v6;
  *(void *)(v0 + 56) = v7;
  objc_msgSend(v4, sel_setRequestedTimeToleranceBefore_, v0 + 40);

  id v8 = *(id *)(v1 + 24);
  *(void *)(v0 + 64) = sub_25436D0E0();
  *(_DWORD *)(v0 + 72) = v9;
  *(_DWORD *)(v0 + 76) = v10;
  *(void *)(v0 + 80) = v11;
  objc_msgSend(v8, sel_setRequestedTimeToleranceAfter_, v0 + 64);

  objc_msgSend(*(id *)(v1 + 24), sel_setMaximumSize_, 1920.0, 1080.0);
  uint64_t v12 = *(void **)(v1 + 16);
  *(void *)(v0 + 184) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9818);
  v12;
  uint64_t v13 = sub_25436C850();
  *(void *)(v0 + 192) = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_254315374;
  return MEMORY[0x270F9C8E8](v0 + 88, v13);
}

uint64_t sub_254315374()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();

  swift_release();
  if (v0) {
    id v3 = sub_254315B0C;
  }
  else {
    id v3 = sub_2543154C4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2543154C4()
{
  uint64_t v1 = v0[11];
  v0[27] = v1;
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9820);
    uint64_t v2 = sub_25436C840();
    v0[28] = v2;
    id v3 = (void *)swift_task_alloc();
    v0[29] = v3;
    *id v3 = v0;
    v3[1] = sub_254315734;
    uint64_t v4 = v0[14];
    return MEMORY[0x270F9C8E8](v4, v2);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[16] + 56))(v0[14], 1, 1, v0[15]);
    uint64_t v5 = v0[12];
    sub_25425042C(v0[14], &qword_269DD7A40);
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000001FLL;
    *(void *)(v6 + 8) = 0x800000025437D290;
    *(unsigned char *)(v6 + 16) = 0;
    swift_willThrow();
    uint64_t v7 = sub_25436C610();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);

    uint64_t v8 = v0[13];
    uint64_t v9 = v8 + v0[18];

    uint64_t v10 = sub_25436C9F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_254315734()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = *(void **)(v2 + 216);
    swift_release();

    uint64_t v4 = sub_254315C5C;
  }
  else
  {
    uint64_t v5 = *(void **)(v2 + 216);
    swift_release();

    uint64_t v4 = sub_254315860;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_254315860()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[12];
    sub_25425042C(v3, &qword_269DD7A40);
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v5 = 0xD00000000000001FLL;
    *(void *)(v5 + 8) = 0x800000025437D290;
    *(unsigned char *)(v5 + 16) = 0;
    swift_willThrow();
    uint64_t v6 = sub_25436C610();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);

    uint64_t v7 = v0[13];
    uint64_t v8 = v7 + v0[18];

    uint64_t v9 = sub_25436C9F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v12 = v0[17];
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[13];
    uint64_t v15 = sub_25436C610();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v16(v12, v3, v1);
    v16(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime, v12, v1);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v18 = v0[13];
    return v17(v18);
  }
}

uint64_t sub_254315B0C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = sub_25436C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0[13];
  uint64_t v4 = v3 + v0[18];

  uint64_t v5 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_254315C5C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = sub_25436C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0[13];
  uint64_t v4 = v3 + v0[18];

  uint64_t v5 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_254315DAC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = sub_25436C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0[13];
  uint64_t v4 = v3 + v0[18];

  uint64_t v5 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t type metadata accessor for DKLogVideoPlayer(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9868);
}

uint64_t sub_254315F10(double a1)
{
  *(void *)(v2 + 48) = v1;
  *(double *)(v2 + 40) = a1;
  uint64_t v3 = sub_25436C7B0();
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = *(void *)(v3 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254315FF0, 0, 0);
}

uint64_t sub_254315FF0()
{
  uint64_t v1 = v0[6];
  sub_25436C7A0();
  uint64_t v2 = *(void **)(v1 + 24);
  v0[12] = v2;
  v2;
  uint64_t v3 = sub_25436D0F0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  void *v8 = v0;
  v8[1] = sub_2543160D4;
  return MEMORY[0x270F9C8D0](v3, v5, v7);
}

uint64_t sub_2543160D4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 96);
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();

  if (v1) {
    uint64_t v5 = sub_2543163F0;
  }
  else {
    uint64_t v5 = sub_254316204;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_254316204()
{
  (*(void (**)(void, void, void))(v0[8] + 16))(v0[10], v0[11], v0[7]);
  uint64_t v1 = sub_25436C9D0();
  os_log_type_t v2 = sub_25436D020();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    sub_25436C7A0();
    sub_25436C700();
    uint64_t v8 = v7;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v9(v3, v5);
    v0[4] = v8;
    sub_25436D180();
    v9(v13, v5);
    _os_log_impl(&dword_254249000, v1, v2, "%f", v6, 0xCu);
    MEMORY[0x25A276B10](v6, -1, -1);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0[8] + 8);
    v9(v0[10], v0[7]);
  }

  uint64_t v10 = v0[14];
  v9(v0[11], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_2543163F0()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[15];
  (*(void (**)(void, void))(v0[8] + 8))(v0[11], v0[7]);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_25436C9D0();
  os_log_type_t v5 = sub_25436D010();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = sub_25431B720(0xD00000000000001CLL, 0x800000025437D2B0, &v15);
    sub_25436D180();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v10;
    sub_25436D180();
    void *v8 = v10;

    _os_log_impl(&dword_254249000, v4, v5, "Error in %s : %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F60);
    swift_arrayDestroy();
    MEMORY[0x25A276B10](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A276B10](v14, -1, -1);
    MEMORY[0x25A276B10](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[15];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12(0);
}

uint64_t DKLogVideoPlayer.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime;
  uint64_t v4 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DKLogVideoPlayer.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime;
  uint64_t v4 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t DKLogKeyframePlayer.__allocating_init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *id v9 = v4;
  v9[1] = sub_25431D6E4;
  return DKLogKeyframePlayer.init(logFolder:keyframesURL:videoURL:startTime:)(a1, a2, a3, a4);
}

uint64_t DKLogKeyframePlayer.init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  uint64_t v6 = sub_25436C9C0();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_25436C610();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254316AB8, 0, 0);
}

uint64_t sub_254316AB8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[10];
  v0[26] = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  sub_25436C9E0();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframe) = 0;
  uint64_t v8 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer;
  v0[27] = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer;
  *(void *)(v6 + v8) = 0;
  uint64_t v9 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  uint64_t v10 = sub_25436C7B0();
  v0[28] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v0[29] = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v5, v10);
  uint64_t v12 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  v0[30] = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[31] = v13;
  v0[32] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v6 + v12, v1, v2);
  sub_2542503C8(v7, v4, &qword_269DD7A28);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[33] = v14;
  v0[34] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v14(v4, 1, v2) == 1)
  {
    sub_25425042C(v0[18], &qword_269DD7A28);
    uint64_t v15 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[33];
    uint64_t v16 = v0[19];
    uint64_t v17 = v0[17];
    sub_2542503C8(v0[9], v17, &qword_269DD7A28);
    if (v15(v17, 1, v16) != 1)
    {
      (*(void (**)(void, void, void))(v0[20] + 32))(v0[23], v0[17], v0[19]);
      uint64_t v58 = sub_25431BD98();
      uint64_t v59 = v0[12];
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0[20] + 8);
      v36(v0[23], v0[19]);
      *(void *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = v58;
      goto LABEL_14;
    }
    uint64_t v18 = v0[27];
    uint64_t v19 = v0[12];
    sub_25425042C(v0[17], &qword_269DD7A28);
    uint64_t v20 = *(void *)(v19 + v18);
    if (v20)
    {
      uint64_t v22 = v0[14];
      uint64_t v21 = v0[15];
      uint64_t v23 = v0[12];
      uint64_t v24 = v0[13];
      uint64_t v25 = v0[11];
      uint64_t v26 = v0[8];
      double v27 = *(double *)(v20 + 32);
      swift_retain();
      *(void *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(v27, 0.033, v26, v25);
      sub_25436C9B0();
      sub_25436C5C0();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v24);
      id v28 = objc_msgSend(self, sel_defaultManager);
      uint64_t v29 = (void *)sub_25436C5B0();
      v0[6] = 0;
      LOBYTE(v24) = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 0, 0, v0 + 6);

      uint64_t v30 = (void *)v0[6];
      uint64_t v31 = v0[22];
      uint64_t v32 = v0[19];
      uint64_t v33 = v0[20];
      if (v24)
      {
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        id v35 = v30;
        v34(v31, v32);
        uint64_t v36 = v34;
        swift_release();
      }
      else
      {
        id v60 = v30;
        uint64_t v61 = (void *)sub_25436C570();

        swift_willThrow();
        swift_release();

        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v62(v31, v32);
        uint64_t v36 = v62;
      }
LABEL_14:
      v0[38] = v36;
      uint64_t v63 = v0[12];
      uint64_t v64 = *(void *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer);
      v0[39] = v64;
      if (v64)
      {
        unint64_t v65 = *(void *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
        v0[40] = v65;
        if (v65 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v66 = sub_25436D530();
          v0[41] = v66;
          if (v66) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          v0[41] = v66;
          if (v66)
          {
LABEL_17:
            if (v66 < 1) {
              __break(1u);
            }
            uint64_t v67 = 0;
            uint64_t v104 = v0 + 7;
            uint64_t v103 = (BOOL *)(v0 + 49);
            do
            {
              v0[43] = v36;
              v0[44] = v67;
              v0[42] = v36;
              uint64_t v68 = v0[40];
              if ((v68 & 0xC000000000000001) != 0)
              {
                uint64_t v69 = MEMORY[0x25A275A00]();
              }
              else
              {
                uint64_t v69 = *(void *)(v68 + 8 * v67 + 32);
                swift_retain();
              }
              v0[45] = v69;
              uint64_t v70 = *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
              if (v70)
              {
                uint64_t v71 = *(void *)(v69 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
                uint64_t v72 = v0[14];
                uint64_t v73 = v0[15];
                uint64_t v74 = v0[13];
                v0[2] = 0x2F6567616D69;
                v0[3] = 0xE600000000000000;
                swift_bridgeObjectRetain();
                uint64_t v105 = v71;
                sub_25436CCB0();
                sub_25436CCB0();
                sub_25436C9A0();
                sub_25436C5C0();
                swift_bridgeObjectRelease();
                (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v74);
                id v75 = objc_msgSend(self, sel_defaultManager);
                sub_25436C600();
                uint64_t v76 = (void *)sub_25436CBD0();
                swift_bridgeObjectRelease();
                LOBYTE(v71) = objc_msgSend(v75, sel_fileExistsAtPath_, v76);

                if (v71)
                {
                  ((void (*)(void, void))v0[38])(v0[21], v0[19]);
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v36 = (void (*)(uint64_t, uint64_t))v0[38];
                  goto LABEL_20;
                }
                void *v104 = 0;
                uint64_t v77 = swift_task_alloc();
                *(void *)(v77 + 16) = v104;
                if ((v70 & 0x1000000000000000) != 0 || !(v70 & 0x2000000000000000 | v105 & 0x1000000000000000))
                {
                  sub_25436D280();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v78 = swift_task_alloc();
                  *(void *)(v78 + 16) = sub_25431C6D0;
                  *(void *)(v78 + 24) = v77;
                  if ((v70 & 0x2000000000000000) != 0)
                  {
                    v0[4] = v105;
                    v0[5] = v70 & 0xFFFFFFFFFFFFFFLL;
                    BOOL v84 = (v105 > 0x20u || ((0x100003E01uLL >> v105) & 1) == 0)
                       && (uint64_t v83 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                       && *v83 == 0;
                    *uint64_t v103 = v84;
                    swift_bridgeObjectRelease();
                    swift_task_dealloc();
                  }
                  else
                  {
                    if ((v105 & 0x1000000000000000) != 0) {
                      uint64_t v79 = (unsigned __int8 *)((v70 & 0xFFFFFFFFFFFFFFFLL) + 32);
                    }
                    else {
                      uint64_t v79 = (unsigned __int8 *)sub_25436D360();
                    }
                    unint64_t v80 = *v79;
                    BOOL v82 = (v80 >= 0x21 || ((0x100003E01uLL >> v80) & 1) == 0)
                       && (char v81 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                       && *v81 == 0;
                    *uint64_t v103 = v82;
                    swift_task_dealloc();
                    swift_bridgeObjectRelease();
                  }
                }
                v0[46] = 0;
                BOOL v85 = *v103;
                swift_task_dealloc();
                if (v85)
                {
                  double v90 = *((double *)v0 + 7);
                  long long v91 = (void *)swift_task_alloc();
                  v0[47] = v91;
                  void *v91 = v0;
                  v91[1] = sub_2543187E8;
                  return sub_254315F10(v90);
                }
                v36(v0[21], v0[19]);
              }
              swift_release();
LABEL_20:
              uint64_t v67 = v0[44] + 1;
            }
            while (v67 != v0[41]);
          }
        }
        double v92 = (void (*)(uint64_t, uint64_t))v0[38];
        uint64_t v93 = v0[28];
        uint64_t v94 = v0[29];
        uint64_t v95 = v0[19];
        uint64_t v97 = v0[10];
        uint64_t v96 = v0[11];
        uint64_t v99 = v0[8];
        uint64_t v98 = v0[9];
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v96, v93);
        sub_25425042C(v97, &qword_269DD7A28);
        sub_25425042C(v98, &qword_269DD7A28);
        v92(v99, v95);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v86 = v0[19];
        uint64_t v87 = v0[10];
        uint64_t v89 = v0[8];
        uint64_t v88 = v0[9];
        (*(void (**)(void, void))(v0[29] + 8))(v0[11], v0[28]);
        sub_25425042C(v87, &qword_269DD7A28);
        sub_25425042C(v88, &qword_269DD7A28);
        v36(v89, v86);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v100 = (uint64_t (*)(uint64_t))v0[1];
      uint64_t v101 = v0[12];
      return v100(v101);
    }
    uint64_t v44 = v0[28];
    uint64_t v43 = v0[29];
    uint64_t v45 = v0[20];
    uint64_t v47 = v0[10];
    uint64_t v46 = v0[11];
    uint64_t v48 = v0[9];
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v49 = 0xD00000000000001FLL;
    *(void *)(v49 + 8) = 0x800000025437D2D0;
    *(unsigned char *)(v49 + 16) = 0;
    swift_willThrow();
    double v102 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v102(v46, v44);
    sub_25425042C(v47, &qword_269DD7A28);
    sub_25425042C(v48, &qword_269DD7A28);
    int v50 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    uint64_t v51 = v0[28];
    uint64_t v52 = v0[19];
    uint64_t v53 = v0[12];
    uint64_t v54 = v53 + v0[30];
    uint64_t v55 = v53 + v0[26];
    v50(v0[8], v52);
    v50(v54, v52);
    uint64_t v56 = sub_25436C9F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
    swift_release();
    swift_release();
    v102(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v51);
    type metadata accessor for DKLogKeyframePlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v57 = (uint64_t (*)(void))v0[1];
    return v57();
  }
  else
  {
    uint64_t v37 = v0[24];
    uint64_t v38 = v0[25];
    uint64_t v39 = v0[19];
    (*(void (**)(uint64_t, void, uint64_t))(v0[20] + 32))(v38, v0[18], v39);
    v13(v37, v38, v39);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_allocObject();
    unint64_t v40 = (void *)swift_task_alloc();
    v0[35] = v40;
    *unint64_t v40 = v0;
    v40[1] = sub_254317888;
    uint64_t v41 = v0[24];
    return DKLogVideoPlayer.init(url:)(v41);
  }
}

uint64_t sub_254317888(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 288) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_254318574;
  }
  else
  {
    *(void *)(v4 + 296) = a1;
    uint64_t v5 = sub_2543179D8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2543179D8()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[12];
  (*(void (**)(void, void))(v0[20] + 8))(v0[25], v0[19]);
  *(void *)(v3 + v2) = v1;
  swift_release();
  uint64_t v4 = v0[36];
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[33];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[17];
  sub_2542503C8(v0[9], v7, &qword_269DD7A28);
  int v8 = v5(v7, 1, v6);
  uint64_t v9 = &OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  if (v8 == 1)
  {
    uint64_t v97 = v4;
    uint64_t v10 = v0[27];
    uint64_t v11 = v0[12];
    sub_25425042C(v0[17], &qword_269DD7A28);
    uint64_t v12 = *(void *)(v11 + v10);
    if (v12)
    {
      uint64_t v13 = v0[14];
      uint64_t v14 = v0[15];
      uint64_t v16 = v0[12];
      uint64_t v15 = v0[13];
      uint64_t v17 = v0[11];
      uint64_t v18 = v0[8];
      double v19 = *(double *)(v12 + 32);
      swift_retain();
      *(void *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(v19, 0.033, v18, v17);
      sub_25436C9B0();
      sub_25436C5C0();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
      id v20 = objc_msgSend(self, sel_defaultManager);
      uint64_t v21 = (void *)sub_25436C5B0();
      v0[6] = 0;
      LOBYTE(v15) = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 0, 0, v0 + 6);

      uint64_t v22 = (void *)v0[6];
      uint64_t v23 = v0[22];
      uint64_t v24 = v0[19];
      uint64_t v25 = v0[20];
      if (v15)
      {
        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        id v27 = v22;
        v26(v23, v24);
        swift_release();
      }
      else
      {
        id v53 = v22;
        uint64_t v54 = (void *)sub_25436C570();

        swift_willThrow();
        swift_release();

        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v26(v23, v24);
        uint64_t v97 = 0;
      }
      uint64_t v9 = &OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
LABEL_14:
      v0[38] = v26;
      uint64_t v55 = v0[12];
      uint64_t v56 = *(void *)(v55 + v9[5]);
      v0[39] = v56;
      if (v56)
      {
        unint64_t v57 = *(void *)(v55 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
        v0[40] = v57;
        if (v57 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v58 = sub_25436D530();
          v0[41] = v58;
          if (v58) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          v0[41] = v58;
          if (v58)
          {
LABEL_17:
            if (v58 < 1) {
              __break(1u);
            }
            uint64_t v59 = 0;
            uint64_t v96 = v0 + 7;
            uint64_t v95 = (BOOL *)(v0 + 49);
            do
            {
              v0[43] = v26;
              v0[44] = v59;
              v0[42] = v26;
              uint64_t v62 = v0[40];
              if ((v62 & 0xC000000000000001) != 0)
              {
                uint64_t v63 = MEMORY[0x25A275A00]();
              }
              else
              {
                uint64_t v63 = *(void *)(v62 + 8 * v59 + 32);
                swift_retain();
              }
              v0[45] = v63;
              uint64_t v64 = *(void *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
              if (v64)
              {
                uint64_t v65 = *(void *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
                uint64_t v66 = v0[14];
                uint64_t v67 = v0[15];
                uint64_t v68 = v0[13];
                v0[2] = 0x2F6567616D69;
                v0[3] = 0xE600000000000000;
                swift_bridgeObjectRetain();
                uint64_t v98 = v65;
                sub_25436CCB0();
                sub_25436CCB0();
                sub_25436C9A0();
                sub_25436C5C0();
                swift_bridgeObjectRelease();
                (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
                id v69 = objc_msgSend(self, sel_defaultManager);
                sub_25436C600();
                uint64_t v70 = (void *)sub_25436CBD0();
                swift_bridgeObjectRelease();
                LOBYTE(v65) = objc_msgSend(v69, sel_fileExistsAtPath_, v70);

                if (v65)
                {
                  ((void (*)(void, void))v0[38])(v0[21], v0[19]);
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[38];
                  goto LABEL_24;
                }
                void *v96 = 0;
                uint64_t v71 = swift_task_alloc();
                *(void *)(v71 + 16) = v96;
                if ((v64 & 0x1000000000000000) != 0 || !(v64 & 0x2000000000000000 | v98 & 0x1000000000000000))
                {
                  sub_25436D280();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v72 = swift_task_alloc();
                  *(void *)(v72 + 16) = sub_25431C6D0;
                  *(void *)(v72 + 24) = v71;
                  if ((v64 & 0x2000000000000000) != 0)
                  {
                    v0[4] = v98;
                    v0[5] = v64 & 0xFFFFFFFFFFFFFFLL;
                    BOOL v60 = (v98 > 0x20u || ((0x100003E01uLL >> v98) & 1) == 0)
                       && (uint64_t v77 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                       && *v77 == 0;
                    *uint64_t v95 = v60;
                    swift_bridgeObjectRelease();
                    swift_task_dealloc();
                  }
                  else
                  {
                    if ((v98 & 0x1000000000000000) != 0) {
                      uint64_t v73 = (unsigned __int8 *)((v64 & 0xFFFFFFFFFFFFFFFLL) + 32);
                    }
                    else {
                      uint64_t v73 = (unsigned __int8 *)sub_25436D360();
                    }
                    unint64_t v74 = *v73;
                    BOOL v76 = (v74 >= 0x21 || ((0x100003E01uLL >> v74) & 1) == 0)
                       && (id v75 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
                       && *v75 == 0;
                    *uint64_t v95 = v76;
                    swift_task_dealloc();
                    swift_bridgeObjectRelease();
                  }
                }
                v0[46] = v97;
                BOOL v61 = *v95;
                swift_task_dealloc();
                if (v61)
                {
                  double v82 = *((double *)v0 + 7);
                  uint64_t v83 = (void *)swift_task_alloc();
                  v0[47] = v83;
                  void *v83 = v0;
                  v83[1] = sub_2543187E8;
                  return sub_254315F10(v82);
                }
                v26(v0[21], v0[19]);
              }
              swift_release();
LABEL_24:
              uint64_t v59 = v0[44] + 1;
            }
            while (v59 != v0[41]);
          }
        }
        BOOL v84 = (void (*)(uint64_t, uint64_t))v0[38];
        uint64_t v85 = v0[28];
        uint64_t v86 = v0[29];
        uint64_t v87 = v0[19];
        uint64_t v89 = v0[10];
        uint64_t v88 = v0[11];
        uint64_t v91 = v0[8];
        uint64_t v90 = v0[9];
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v85);
        sub_25425042C(v89, &qword_269DD7A28);
        sub_25425042C(v90, &qword_269DD7A28);
        v84(v91, v87);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v78 = v0[19];
        uint64_t v79 = v0[10];
        uint64_t v81 = v0[8];
        uint64_t v80 = v0[9];
        (*(void (**)(void, void))(v0[29] + 8))(v0[11], v0[28]);
        sub_25425042C(v79, &qword_269DD7A28);
        sub_25425042C(v80, &qword_269DD7A28);
        v26(v81, v78);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      double v92 = (uint64_t (*)(uint64_t))v0[1];
      uint64_t v93 = v0[12];
      return v92(v93);
    }
    uint64_t v35 = v0[28];
    uint64_t v36 = v0[29];
    uint64_t v37 = v0[20];
    uint64_t v39 = v0[10];
    uint64_t v38 = v0[11];
    uint64_t v40 = v0[9];
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v41 = 0xD00000000000001FLL;
    *(void *)(v41 + 8) = 0x800000025437D2D0;
    *(unsigned char *)(v41 + 16) = 0;
    swift_willThrow();
    uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v94(v38, v35);
    sub_25425042C(v39, &qword_269DD7A28);
    sub_25425042C(v40, &qword_269DD7A28);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    id v28 = v0 + 8;
  }
  else
  {
    id v28 = v0 + 23;
    (*(void (**)(void, void, void))(v0[20] + 32))(v0[23], v0[17], v0[19]);
    uint64_t v29 = sub_25431BD98();
    if (!v4)
    {
      uint64_t v51 = v29;
      uint64_t v52 = v0[12];
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0[20] + 8);
      v26(v0[23], v0[19]);
      uint64_t v97 = 0;
      *(void *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = v51;
      goto LABEL_14;
    }
    uint64_t v30 = v0[20];
    uint64_t v99 = v0[19];
    uint64_t v31 = v0[10];
    uint64_t v33 = v0[8];
    uint64_t v32 = v0[9];
    uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v0[29] + 8);
    v94(v0[11], v0[28]);
    sub_25425042C(v31, &qword_269DD7A28);
    sub_25425042C(v32, &qword_269DD7A28);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v34(v33, v99);
  }
  uint64_t v42 = *v28;
  uint64_t v43 = v0[28];
  uint64_t v44 = v0[19];
  uint64_t v45 = v0[12];
  uint64_t v46 = v45 + v0[30];
  uint64_t v47 = v45 + v0[26];
  v34(v42, v44);
  v34(v46, v44);
  uint64_t v48 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
  swift_release();
  swift_release();
  v94(v45 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v43);
  type metadata accessor for DKLogKeyframePlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_254318574()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[29] + 8);
  v6(v0[11], v0[28]);
  sub_25425042C(v3, &qword_269DD7A28);
  sub_25425042C(v4, &qword_269DD7A28);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v5, v1);
  uint64_t v15 = v0[28];
  uint64_t v8 = v0[19];
  uint64_t v9 = v0[12];
  uint64_t v10 = v9 + v0[30];
  uint64_t v11 = v9 + v0[26];
  v7(v0[25], v8);
  v7(v10, v8);
  uint64_t v12 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();
  v6(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v15);
  type metadata accessor for DKLogKeyframePlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_2543187E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_254318914, 0, 0);
}

uint64_t sub_254318914()
{
  uint64_t v1 = *(void **)(v0 + 384);
  if (v1)
  {
    uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v6 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v6, v3, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    id v7 = v1;
    sub_2542571E8(v6, 80);
    swift_release();

    swift_bridgeObjectRelease();
    sub_25425042C(v6, &qword_269DD7A28);
    v2(v3, v5);
    uint64_t v9 = *(void (**)(void, void))(v0 + 336);
    uint64_t v8 = *(void (**)(void, void))(v0 + 344);
  }
  else
  {
    (*(void (**)(void, void))(v0 + 336))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_release();
    uint64_t v9 = *(void (**)(void, void))(v0 + 336);
    uint64_t v8 = v9;
  }
  uint64_t v10 = *(void *)(v0 + 352) + 1;
  if (v10 == *(void *)(v0 + 328))
  {
LABEL_5:
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 72);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
    sub_25425042C(v16, &qword_269DD7A28);
    sub_25425042C(v17, &qword_269DD7A28);
    v11(v18, v14);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v20 = *(void *)(v0 + 96);
    return v19(v20);
  }
  uint64_t v22 = v0 + 16;
  uint64_t v46 = (void *)(v0 + 56);
  uint64_t v45 = *(void *)(v0 + 368);
  while (1)
  {
    while (1)
    {
      *(void *)(v0 + 344) = v8;
      *(void *)(v0 + 352) = v10;
      *(void *)(v0 + 336) = v9;
      uint64_t v23 = *(void *)(v0 + 320);
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v24 = MEMORY[0x25A275A00]();
      }
      else
      {
        uint64_t v24 = *(void *)(v23 + 8 * v10 + 32);
        swift_retain();
      }
      *(void *)(v0 + 360) = v24;
      uint64_t v25 = *(void *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
      if (v25) {
        break;
      }
      swift_release();
      uint64_t v10 = *(void *)(v0 + 352) + 1;
      if (v10 == *(void *)(v0 + 328)) {
        goto LABEL_5;
      }
    }
    uint64_t v26 = *(void *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    uint64_t v27 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v48 = *(void *)(v0 + 104);
    *(void *)(v0 + 16) = 0x2F6567616D69;
    *(void *)(v0 + 24) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_25436CCB0();
    uint64_t v47 = v22;
    sub_25436CCB0();
    sub_25436C9A0();
    sub_25436C5C0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v48);
    id v29 = objc_msgSend(self, sel_defaultManager);
    sub_25436C600();
    uint64_t v30 = (void *)sub_25436CBD0();
    swift_bridgeObjectRelease();
    unsigned __int8 v31 = objc_msgSend(v29, sel_fileExistsAtPath_, v30);

    if ((v31 & 1) == 0) {
      break;
    }
    (*(void (**)(void, void))(v0 + 304))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = *(void (**)(void, void))(v0 + 304);
    uint64_t v10 = *(void *)(v0 + 352) + 1;
    uint64_t v9 = v8;
    BOOL v32 = v10 == *(void *)(v0 + 328);
    uint64_t v22 = v47;
LABEL_17:
    if (v32) {
      goto LABEL_5;
    }
  }
  *uint64_t v46 = 0;
  uint64_t v33 = swift_task_alloc();
  *(void *)(v33 + 16) = v46;
  if ((v25 & 0x1000000000000000) != 0 || !(v25 & 0x2000000000000000 | v26 & 0x1000000000000000))
  {
    uint64_t v35 = (BOOL *)(v0 + 392);
    sub_25436D280();
    swift_bridgeObjectRelease();
    uint64_t v22 = v47;
  }
  else
  {
    uint64_t v34 = swift_task_alloc();
    *(void *)(v34 + 16) = sub_25431C6D0;
    *(void *)(v34 + 24) = v33;
    uint64_t v22 = v47;
    if ((v25 & 0x2000000000000000) != 0)
    {
      *(void *)(v0 + 32) = v26;
      *(void *)(v0 + 40) = v25 & 0xFFFFFFFFFFFFFFLL;
      BOOL v41 = (v26 > 0x20u || ((0x100003E01uLL >> v26) & 1) == 0)
         && (uint64_t v40 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v40 == 0;
      uint64_t v35 = (BOOL *)(v0 + 392);
      *(unsigned char *)(v0 + 392) = v41;
      swift_bridgeObjectRelease();
      swift_task_dealloc();
    }
    else
    {
      uint64_t v35 = (BOOL *)(v0 + 392);
      if ((v26 & 0x1000000000000000) != 0)
      {
        uint64_t v36 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        uint64_t v36 = (unsigned __int8 *)sub_25436D360();
        uint64_t v35 = (BOOL *)(v0 + 392);
      }
      unint64_t v37 = *v36;
      if (v37 < 0x21 && ((0x100003E01uLL >> v37) & 1) != 0)
      {
        BOOL v39 = 0;
      }
      else
      {
        uint64_t v38 = (unsigned char *)_swift_stdlib_strtod_clocale();
        if (v38) {
          BOOL v39 = *v38 == 0;
        }
        else {
          BOOL v39 = 0;
        }
        uint64_t v35 = (BOOL *)(v0 + 392);
      }
      *uint64_t v35 = v39;
      swift_task_dealloc();
      swift_bridgeObjectRelease();
    }
  }
  *(void *)(v0 + 368) = v45;
  BOOL v42 = *v35;
  swift_task_dealloc();
  if (!v42)
  {
    v8(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_release();
    uint64_t v10 = *(void *)(v0 + 352) + 1;
    BOOL v32 = v10 == *(void *)(v0 + 328);
    goto LABEL_17;
  }
  double v43 = *(double *)(v0 + 56);
  uint64_t v44 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v44;
  *uint64_t v44 = v0;
  v44[1] = sub_2543187E8;
  return sub_254315F10(v43);
}

uint64_t static DKLogKeyframePlayer.loadKeyframes(jsonURL:)()
{
  return sub_25431BD98();
}

uint64_t sub_254319000()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_254319020, 0, 0);
}

void sub_254319020()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  uint64_t v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    if (!(v5 >> 62))
    {
      if (v4 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v4 < v9)
  {
LABEL_4:
    uint64_t v6 = *(void *)(v1 + v2);
    uint64_t v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v1 + v2) = v7;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[3] = v8;
      void *v8 = v0;
      v8[1] = sub_254319184;
      sub_2543193E8(v7);
    }
    return;
  }
LABEL_10:
  uint64_t v10 = (void (*)(void))v0[1];
  v10(0);
}

uint64_t sub_254319184(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_254319280()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2543192A0, 0, 0);
}

uint64_t sub_2543192A0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v3 < v8) {
      goto LABEL_3;
    }
  }
  else if (v3 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v5 = *(void *)(v1 + v2);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[3] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_254319184;
    return sub_2543193E8(v5);
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

uint64_t sub_2543193E8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_25436C610();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2543194A8, 0, 0);
}

void sub_2543194A8()
{
  uint64_t v1 = v0[2];
  if (v1 < 0) {
    goto LABEL_10;
  }
  uint64_t v2 = v0[3];
  uint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes;
  unint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > v1) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v12 <= v0[2]) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v5 = v0[3];
  unint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  uint64_t v7 = *(void *)(v2 + v3);
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = *(void *)(v2 + v3);
    swift_bridgeObjectRetain();
    MEMORY[0x25A275A00](v6, v14);
    swift_bridgeObjectRelease();
    uint64_t v5 = v0[3];
    goto LABEL_8;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v6 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
    return;
  }
  swift_retain();
LABEL_8:
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v10 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v5 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder, v10);
  uint64_t v11 = sub_2542C5344(v8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_11:
  swift_task_dealloc();
  uint64_t v13 = (void (*)(uint64_t))v0[1];
  v13(v11);
}

uint64_t DKLogKeyframePlayer.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  uint64_t v2 = sub_25436C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  uint64_t v4 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t DKLogKeyframePlayer.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  uint64_t v2 = sub_25436C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  uint64_t v4 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t DKLogPlayer.__allocating_init(rate:)(double a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = 0;
  sub_25436C9E0();
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer) = 0;
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate) = a1;
  return v2;
}

uint64_t DKLogPlayer.init(rate:)(double a1)
{
  *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = 0;
  sub_25436C9E0();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer) = 0;
  *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate) = a1;
  return v1;
}

uint64_t sub_2543199F0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v2[4] = swift_task_alloc();
  uint64_t v3 = sub_25436C7B0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for DKLoggerMetafile(0);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_25436C9C0();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v5 = sub_25436C610();
  v2[18] = v5;
  v2[19] = *(void *)(v5 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254319C3C, 0, 0);
}

uint64_t sub_254319C3C()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer;
  *(void *)(v0 + 176) = OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer;
  *(void *)(v4 + v5) = 0;
  swift_release();
  sub_25436C9A0();
  sub_25436C5C0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v6 = objc_allocWithZone(MEMORY[0x263EFF8F8]);
  uint64_t v7 = (void *)sub_25436C5B0();
  id v8 = objc_msgSend(v6, sel_initWithContentsOfURL_, v7);

  if (v8)
  {
    sub_25436C6A0();

    *(_OWORD *)(v0 + 184) = xmmword_2543765C0;
  }
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 152);
  sub_25436D290();
  swift_bridgeObjectRelease();
  *(void *)&long long v15 = 0xD000000000000018;
  *((void *)&v15 + 1) = 0x800000025437D2F0;
  sub_25436C580();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  sub_254261A48();
  swift_allocError();
  *(_OWORD *)uint64_t v12 = v15;
  *(unsigned char *)(v12 + 16) = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_25431A26C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_25431A510;
  }
  else
  {
    *(void *)(v4 + 224) = a1;
    uint64_t v5 = sub_25431A394;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25431A394()
{
  unint64_t v1 = v0[24];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  *(void *)(v0[3] + v0[22]) = v0[28];
  swift_release();
  swift_release();
  sub_25431C740(v2, v1);
  sub_25425042C(v7, &qword_269DD7A28);
  sub_25425042C(v8, &qword_269DD7A28);
  sub_2542C72CC(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25431A510()
{
  unint64_t v1 = v0[24];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[11];
  uint64_t v7 = v0[12];
  swift_release();
  sub_25431C740(v2, v1);
  sub_25425042C(v8, &qword_269DD7A28);
  sub_25425042C(v7, &qword_269DD7A28);
  sub_2542C72CC(v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_25431A674()
{
  unint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = v1;
    sub_25432324C();
  }
}

uint64_t sub_25431A6D4()
{
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  return swift_bridgeObjectRelease();
}

uint64_t sub_25431A6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void **)(v2 + 16);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_254259C40(0, v6[2] + 1, 1, v6);
    uint64_t v6 = (void *)result;
    *(void *)(v2 + 16) = result;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_254259C40((void *)(v8 > 1), v9 + 1, 1, v6);
    uint64_t v6 = (void *)result;
  }
  void v6[2] = v9 + 1;
  uint64_t v10 = &v6[2 * v9];
  v10[4] = sub_25431C7F4;
  v10[5] = v5;
  *(void *)(v2 + 16) = v6;
  return result;
}

uint64_t sub_25431A7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_25436C7B0();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25431A898, 0, 0);
}

uint64_t sub_25431A898()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer);
  v0[7] = v1;
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
    unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    swift_retain();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_25436D530();
      swift_bridgeObjectRelease();
      if (v3 < v8) {
        goto LABEL_4;
      }
    }
    else if (v3 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      uint64_t v5 = *(void *)(v1 + v2);
      uint64_t v6 = (void *)swift_task_alloc();
      v0[8] = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_25431AA0C;
      return sub_2543193E8(v5);
    }
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25431AA0C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25431AB0C, 0, 0);
}

uint64_t sub_25431AB0C()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = *(void *)(v0[2] + 16);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = v2 + 40;
      do
      {
        uint64_t v5 = *(void (**)(uint64_t *))(v4 - 8);
        uint64_t v10 = v1;
        swift_retain();
        v5(&v10);
        swift_release();
        v4 += 16;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = v0[7];
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25431AC7C;
    v7[2] = v6;
    return MEMORY[0x270FA2498](sub_254319020, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_25431AC7C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25431AD7C, 0, 0);
}

uint64_t sub_25431AD7C()
{
  uint64_t v1 = v0[11];
  if (v1)
  {
    uint64_t v2 = v0[9];
    uint64_t v4 = v0[5];
    uint64_t v3 = v0[6];
    uint64_t v5 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[2];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v8(v3, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v5);
    v8(v4, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v5);
    sub_25436C700();
    double v10 = v9;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v11(v4, v5);
    v11(v3, v5);
    sub_25431AED4(v10 / *(double *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate));
    swift_release();
  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_25431AED4(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436CA00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_25436CA50();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v25 - v17;
  double v19 = *(char **)(v2 + 24);
  if (v19)
  {
    uint64_t v25 = *(void *)&v19[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_timer];
    uint64_t v20 = v16;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v26 = v19;
    sub_25436CA40();
    MEMORY[0x25A275150](v14, a1);
    uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v14, v20);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v10, *MEMORY[0x263F8F010], v4);
    sub_254322E30(v7);
    MEMORY[0x25A2757A0](v18, v10, v7, ObjectType);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
    v22(v18, v20);
  }
  else
  {
    id v24 = objc_allocWithZone((Class)type metadata accessor for DKRepeatingTimer());
    swift_retain();
    *(void *)(v2 + 24) = DKRepeatingTimer.init(interval:fireOnce:queue:_:)(1, 0, (uint64_t)sub_25431D444, v2, a1);
    MEMORY[0x270F9A758]();
  }
}

uint64_t sub_25431B1C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9608);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436CF20();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_25425042C((uint64_t)v4, &qword_269DD9608);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_25436CF10();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_25436CEC0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_269DD98D8;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    _OWORD v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t DKLogPlayer.deinit()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t DKLogPlayer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25431B54C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25431B628;
  return v6(a1);
}

uint64_t sub_25431B628()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25431B720(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25431B7F4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25425E040((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25425E040((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25431B7F4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25436D190();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25431B9B0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25436D360();
  if (!v8)
  {
    sub_25436D4E0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25436D570();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25431B9B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25431BA48(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25431BC28(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25431BC28(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25431BA48(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25431BBC0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25436D2A0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25436D4E0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25436CCC0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25436D570();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25436D4E0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25431BBC0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9930);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25431BC28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9930);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKLogKeyframePlayer(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9888);
}

uint64_t sub_25431BD98()
{
  sub_25436C3F0();
  swift_allocObject();
  sub_25436C3E0();
  id v0 = objc_allocWithZone(MEMORY[0x263EFF8F8]);
  uint64_t v1 = (void *)sub_25436C5B0();
  id v2 = objc_msgSend(v0, sel_initWithContentsOfURL_, v1);

  if (v2)
  {
    sub_25436C6A0();
  }
  sub_25436D290();
  swift_bridgeObjectRelease();
  *(void *)&long long v5 = 0xD000000000000014;
  *((void *)&v5 + 1) = 0x800000025437D440;
  sub_25436C580();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  sub_254261A48();
  swift_allocError();
  *(_OWORD *)uint64_t v3 = v5;
  *(unsigned char *)(v3 + 16) = 0;
  swift_willThrow();
  return swift_release();
}

uint64_t _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9908);
  MEMORY[0x270FA5388](v69);
  uint64_t v68 = (void (***)(uint64_t, char *, uint64_t))((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25436C7B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v65 - v15;
  MEMORY[0x270FA5388](v17);
  double v19 = (char *)&v65 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9910);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9918);
  MEMORY[0x270FA5388](v78);
  uint64_t v70 = (uint64_t)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = MEMORY[0x263F8EE78];
  sub_25436C740();
  uint64_t v79 = v11;
  id v24 = *(void (**)(unsigned int (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v11 + 16);
  uint64_t v72 = a4;
  v24(v22, a4, v10);
  uint64_t v25 = (char *)v22 + *(int *)(v20 + 36);
  uint64_t v82 = v11 + 16;
  uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v24;
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v24)(v25, v19, v10);
  if (a2 != 0.0)
  {
    unint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))*(int *)(v20 + 40);
    *(double *)((char *)v74 + (void)v22) = a2;
    uint64_t v27 = v79;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v79 + 8);
    uint64_t v77 = v19;
    uint64_t v80 = v28;
    uint64_t v81 = v79 + 8;
    v28(v19, v10);
    id v29 = v22;
    uint64_t v73 = v22;
    uint64_t v30 = v78;
    uint64_t v31 = *(int *)(v78 + 44);
    BOOL v76 = v25;
    uint64_t v32 = v70;
    uint64_t v33 = v70 + v31;
    uint64_t v34 = v70 + v31 + *(int *)(v69 + 48);
    uint64_t v36 = *(char **)(v27 + 32);
    uint64_t v35 = v27 + 32;
    ((void (*)(uint64_t, unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))v36)(v34, v29, v10);
    uint64_t v75 = v32 + *(int *)(v30 + 36);
    BOOL v76 = v36;
    ((void (*)(void))v36)();
    uint64_t v37 = *(uint64_t *)((char *)v74 + (void)v73);
    uint64_t v78 = v32 + *(int *)(v30 + 40);
    uint64_t v79 = v34;
    *(void *)uint64_t v78 = v37;
    uint64_t v38 = v83;
    v83((char *)v32, v34, v10);
    *(void *)uint64_t v33 = 0;
    uint64_t v67 = v33;
    *(unsigned char *)(v33 + 8) = 0;
    uint64_t v65 = (void (**)(uint64_t, char *, uint64_t))(v35 + 8);
    uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 16);
    unint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 24);
    long long v71 = xmmword_25436F130;
    uint64_t v66 = v13;
    v38(v16, v79, v10);
    while (1)
    {
      double v39 = *(double *)v78;
      sub_25431D69C(&qword_269DD9920, MEMORY[0x263F07490]);
      if (v39 <= 0.0)
      {
        if ((sub_25436CBA0() & 1) == 0)
        {
LABEL_5:
          uint64_t v40 = v68;
          BOOL v41 = (char *)v68 + *(int *)(v69 + 48);
          uint64_t v42 = v79;
          double v43 = v9;
          uint64_t v44 = v67;
          char v45 = *(unsigned char *)(v67 + 8);
          *uint64_t v68 = *(void *)v67;
          *((unsigned char *)v40 + 8) = v45;
          v83(v41, v42, v10);
          sub_25431D69C(&qword_269DD9928, MEMORY[0x263F07490]);
          uint64_t v46 = v77;
          uint64_t v47 = sub_25436D1A0();
          char v49 = v48;
          v80(v41, v10);
          *(void *)uint64_t v44 = v47;
          *(unsigned char *)(v44 + 8) = v49 & 1;
          int64_t v9 = v43;
          uint64_t v13 = v66;
          (*v65)(v42, v46, v10);
          ((void (*)(char *, char *, uint64_t))v76)(v9, v16, v10);
          uint64_t v50 = 0;
          goto LABEL_8;
        }
      }
      else if ((sub_25436CB90() & 1) == 0)
      {
        goto LABEL_5;
      }
      v80(v16, v10);
      uint64_t v50 = 1;
LABEL_8:
      (*v74)(v9, v50, 1, v10);
      if ((*v73)(v9, 1, v10) == 1)
      {
        sub_25425042C(v70, &qword_269DD9918);
        return v84;
      }
      uint64_t v51 = v16;
      uint64_t v52 = v76;
      ((void (*)(char *, char *, uint64_t))v76)(v13, v9, v10);
      id v53 = v77;
      v83(v77, (uint64_t)v13, v10);
      __swift_instantiateConcreteTypeFromMangledName(qword_269DD7F88);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = v71;
      sub_25436C700();
      *(void *)(v54 + 56) = MEMORY[0x263F8D538];
      *(void *)(v54 + 64) = MEMORY[0x263F8D5B8];
      *(void *)(v54 + 32) = v55;
      uint64_t v56 = sub_25436CC30();
      uint64_t v58 = v57;
      type metadata accessor for DKKeyframeStorage(0);
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
      uint64_t v60 = v35;
      BOOL v61 = (uint64_t *)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
      uint64_t *v61 = 0;
      v61[1] = 0;
      uint64_t v62 = v53;
      uint64_t v63 = v60;
      ((void (*)(uint64_t, char *, uint64_t))v52)(v59 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v62, v10);
      uint64_t *v61 = v56;
      v61[1] = v58;
      uint64_t v64 = swift_bridgeObjectRelease();
      MEMORY[0x25A275490](v64);
      if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_25436CE10();
      }
      sub_25436CE60();
      sub_25436CDE0();
      v80(v13, v10);
      uint64_t v35 = v63;
      uint64_t v16 = v51;
      v83(v51, v79, v10);
    }
  }
  __break(1u);
  return result;
}

unsigned char *sub_25431C6D0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_25431C740(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2542564BC(a1, a2);
  }
  return a1;
}

uint64_t sub_25431C754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25431C7BC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25431C7F4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_25431C820()
{
  return type metadata accessor for DKLogVideoPlayer(0);
}

uint64_t sub_25431C828()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C7B0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DKLogVideoPlayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLogVideoPlayer);
}

uint64_t dispatch thunk of DKLogVideoPlayer.__allocating_init(url:)(uint64_t a1)
{
  BOOL v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 216) + **(int **)(v1 + 216));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25431CA18;
  return v6(a1);
}

uint64_t sub_25431CA18(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  unsigned int v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of DKLogVideoPlayer.getVideoFrame(timeInterval:)(double a1)
{
  uint64_t v7 = (uint64_t (*)(__n128))(*(void *)(*(void *)v1 + 224) + **(int **)(*(void *)v1 + 224));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C424;
  v5.n128_f64[0] = a1;
  return v7(v5);
}

uint64_t sub_25431CC18()
{
  return type metadata accessor for DKLogKeyframePlayer(0);
}

uint64_t sub_25431CC20()
{
  uint64_t result = sub_25436C610();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C9F0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_25436C7B0();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for DKLogKeyframePlayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLogKeyframePlayer);
}

uint64_t dispatch thunk of DKLogKeyframePlayer.__allocating_init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 280) + **(int **)(v4 + 280));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_25431D6EC;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getNextKeyframe()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 288) + **(int **)(*(void *)v0 + 288));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_25426C7E8;
  return v4();
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getCurrentKeyframe()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 296) + **(int **)(*(void *)v0 + 296));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_25426C7E8;
  return v4();
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getKeyframe(index:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7E8;
  return v6(a1);
}

uint64_t sub_25431D170()
{
  return type metadata accessor for DKLogPlayer(0);
}

uint64_t type metadata accessor for DKLogPlayer(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD98B8);
}

uint64_t sub_25431D198()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKLogPlayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKLogPlayer);
}

uint64_t dispatch thunk of DKLogPlayer.__allocating_init(rate:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKLogPlayer.load(logFolder:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 224) + **(int **)(*(void *)v1 + 224));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426BA30;
  return v6(a1);
}

uint64_t dispatch thunk of DKLogPlayer.play(delay:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKLogPlayer.pause()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKLogPlayer.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKLogPlayer.deregisterCallbacks()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKLogPlayer.registerCallback(callback:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t sub_25431D444()
{
  return sub_25431B1C4(v0);
}

uint64_t sub_25431D44C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25431D48C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25426BA30;
  return sub_25431A7C8(a1, v4, v5, v6);
}

uint64_t sub_25431D540(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25426C7EC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269DD98E0 + dword_269DD98E0);
  return v6(a1, v4);
}

unint64_t sub_25431D5F8()
{
  unint64_t result = qword_269DD98F8;
  if (!qword_269DD98F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD98F0);
    sub_25431D69C(&qword_269DD9900, (void (*)(uint64_t))type metadata accessor for DKKeyframeStorage);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD98F8);
  }
  return result;
}

uint64_t sub_25431D69C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25431D6F0()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C7B0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DKCamera();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25431D83C, 0, 0);
}

uint64_t sub_25431D83C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[2];
  unint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (*(void *)(*(void *)(v4 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
    unint64_t v6 = *(void *)(*(void *)(v4 + 48)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  else {
    unint64_t v6 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2542791C4(v6);
  swift_bridgeObjectRelease();
  sub_25427D7C0(v7);
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies)) {
    unint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  }
  else {
    unint64_t v9 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_25427920C(v9);
  swift_bridgeObjectRelease();
  sub_25427D7C0(v10);
  uint64_t v11 = *(void *)(v4 + 48);
  if (*(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands)) {
    unint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  }
  else {
    unint64_t v12 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_254279450(v12);
  swift_bridgeObjectRelease();
  sub_25427D7C0(v13);
  sub_2542720F4(*(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_25431DB1C(v0[6]);
  }
  else
  {
    uint64_t v14 = (double *)v0[9];
    sub_2542502F0(v0[6], (uint64_t)v14);
    swift_retain();
    sub_2542788B8(v14);
    swift_release();
    sub_254250354((uint64_t)v14);
  }
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[3];
  uint64_t v17 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, *(void *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v16);
  swift_retain();
  sub_254279650(v15, v20);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(1);
}

uint64_t sub_25431DAC8()
{
  return type metadata accessor for DKTrackerTask();
}

uint64_t type metadata accessor for DKTrackerTask()
{
  uint64_t result = qword_269DD9938;
  if (!qword_269DD9938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25431DB1C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DKFPSTracker.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t DKThreadSafeBuffer.__allocating_init(maxLenght:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DKThreadSafeBuffer.init(maxLenght:)(a1);
  return v2;
}

uint64_t sub_25431DC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v47 = a5;
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_25436C830();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25436C7A0();
  id v13 = objc_allocWithZone(MEMORY[0x263F08790]);
  id v14 = objc_msgSend(v13, sel_init, v41, v42, v43, v44);
  uint64_t v15 = (void *)sub_25436CBD0();
  objc_msgSend(v14, sel_setDateFormat_, v15);

  sub_25436C820();
  uint64_t v16 = (void *)sub_25436C810();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v14, sel_setTimeZone_, v16);

  uint64_t v17 = (void *)sub_25436C720();
  id v18 = objc_msgSend(v14, sel_stringFromDate_, v17);

  uint64_t v19 = sub_25436CC00();
  uint64_t v21 = v20;

  __swift_instantiateConcreteTypeFromMangledName(qword_269DD7F88);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_25436F130;
  *(void *)(v22 + 56) = MEMORY[0x263F8D310];
  *(void *)(v22 + 64) = sub_25431EDFC();
  *(void *)(v22 + 32) = v19;
  *(void *)(v22 + 40) = v21;
  sub_25436CC30();
  uint64_t v23 = self;
  id v24 = objc_msgSend(v23, sel_defaultManager);
  uint64_t v25 = (void *)sub_25436CBD0();
  unsigned __int8 v26 = objc_msgSend(v24, sel_fileExistsAtPath_, v25);

  uint64_t v27 = v47;
  if (v26) {
    goto LABEL_4;
  }
  uint64_t v28 = v46;
  id v29 = objc_msgSend(v23, sel_defaultManager);
  uint64_t v30 = (void *)sub_25436CBD0();
  unint64_t v48 = 0;
  unsigned int v31 = objc_msgSend(v29, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v30, 0, 0, &v48);

  if (v31)
  {
    id v32 = (id)v48;
    uint64_t v27 = v47;
LABEL_4:
    unint64_t v48 = 47;
    unint64_t v49 = 0xE100000000000000;
    sub_25436CCB0();
    sub_25436CCB0();
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    sub_25436CCB0();
    sub_25436CCB0();
    unint64_t v48 = 0xD000000000000026;
    unint64_t v49 = 0x800000025437D6F0;
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    sub_25436C590();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v45);
    uint64_t v33 = sub_25436C610();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v27, 0, 1, v33);
  }
  id v35 = (id)v48;
  swift_bridgeObjectRelease();
  uint64_t v36 = (void *)sub_25436C570();

  swift_willThrow();
  v50[0] = 11;
  unint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_25436D290();
  swift_bridgeObjectRelease();
  unint64_t v48 = 0xD000000000000026;
  unint64_t v49 = 0x800000025437D720;
  swift_getErrorValue();
  sub_25436D880();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  int64_t v37 = v48;
  unint64_t v38 = v49;
  os_log_type_t v39 = sub_25436D010();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v37, v38, v39);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v45);
  uint64_t v40 = sub_25436C610();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v47, 1, 1, v40);
}

uint64_t DKFPSTracker.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D0);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_25431E1D8()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  sub_25436C790();
  unint64_t v6 = *(void *)(v0 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 24) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v6 = sub_254258924(0, *(void *)(v6 + 16) + 1, 1, v6);
    *(void *)(v0 + 24) = v6;
  }
  unint64_t v9 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    unint64_t v6 = sub_254258924(v8 > 1, v9 + 1, 1, v6);
    *(void *)(v0 + 24) = v6;
  }
  *(void *)(v6 + 16) = v9 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v9, v4, v1);
  uint64_t v10 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

uint64_t sub_25431E370()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v33 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v12 + 4);
  swift_release();
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v45 = v14;
  uint64_t v34 = v0;
  if (v14)
  {
    uint64_t v40 = v11;
    uint64_t v41 = v13;
    unint64_t v16 = 0;
    uint64_t v42 = v5 + 48;
    uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    unint64_t v38 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v39 = v5;
    uint64_t v43 = v5 + 56;
    uint64_t v44 = v5 + 16;
    unint64_t v33 = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v35 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v36 = v3;
    uint64_t v18 = (uint64_t)v3;
    while (v16 < *(void *)(v13 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v20 = *(void *)(v5 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v18, v13 + v19 + v20 * v16, v4);
      int64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v37(v18, 0, 1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4) == 1) {
        goto LABEL_15;
      }
      uint64_t v21 = *v17;
      uint64_t v22 = v40;
      uint64_t v23 = v18;
      (*v17)(v40, v18, v4);
      id v24 = v46;
      sub_25436C790();
      sub_25436C700();
      double v26 = v25;
      uint64_t v27 = *v38;
      (*v38)(v24, v4);
      if (v26 >= 1.0)
      {
        uint64_t result = v27(v22, v4);
        uint64_t v5 = v39;
        uint64_t v18 = v23;
      }
      else
      {
        v21(v47, (uint64_t)v22, v4);
        uint64_t v28 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2542E2AD8(0, *(void *)(v28 + 16) + 1, 1);
          uint64_t v28 = v48;
        }
        uint64_t v5 = v39;
        unint64_t v30 = *(void *)(v28 + 16);
        unint64_t v29 = *(void *)(v28 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_2542E2AD8(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v48;
        }
        *(void *)(v28 + 16) = v30 + 1;
        uint64_t v17 = v35;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v28 + v19 + v30 * v20, v47, v4);
        uint64_t v48 = v28;
        uint64_t v18 = (uint64_t)v36;
      }
      ++v16;
      uint64_t v13 = v41;
      if (v45 == v16)
      {
        v37(v18, 1, 1, v4);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v18 = (uint64_t)v3;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_254258BD8(v18);
    uint64_t v31 = v34;
    *(void *)(v34 + 24) = v48;
    swift_bridgeObjectRelease();
    id v32 = *(os_unfair_lock_s **)(v31 + 16);
    swift_retain();
    os_unfair_lock_unlock(v32 + 4);
    return swift_release();
  }
  return result;
}

uint64_t DKFPSTracker.__deallocating_deinit()
{
  return sub_25431EC04();
}

void *DKThreadSafeBuffer.init(maxLenght:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v1[2] = v3;
  v1[3] = sub_25436CA90();
  v1[4] = a1;
  return v1;
}

uint64_t sub_25431E810(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_lock(v8 + 4);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_25436CEA0();
  sub_25436CE80();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = MEMORY[0x25A275560](v9, v4);
  swift_bridgeObjectRelease();
  if (v2[4] < v10)
  {
    swift_getWitnessTable();
    sub_25436CFD0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_unlock(v11 + 4);
  return swift_release();
}

uint64_t sub_25431E9BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = sub_25436D130();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(void *)(v4 - 8) + 56);
  uint64_t v18 = a1;
  v10(a1, 1, 1, v4, v7);
  uint64_t v11 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_lock(v11 + 4);
  swift_release();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x25A275560](v12, v4);
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
    sub_25436CEA0();
    swift_getWitnessTable();
    sub_25436CFD0();
    uint64_t v14 = v18;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
    ((void (*)(char *, void, uint64_t, uint64_t))v10)(v9, 0, 1, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v9, v5);
  }
  uint64_t v15 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_unlock(v15 + 4);
  return swift_release();
}

uint64_t _s23IntelligentTrackingCore12DKFPSTrackerCfd_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKThreadSafeBuffer.__deallocating_deinit()
{
  return sub_25431EC04();
}

uint64_t sub_25431EC04()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKUtils()
{
  return self;
}

uint64_t type metadata accessor for DKFPSTracker()
{
  return self;
}

uint64_t method lookup function for DKFPSTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFPSTracker);
}

uint64_t dispatch thunk of DKFPSTracker.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKFPSTracker.tick()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKFPSTracker.fps()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_25431ED0C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DKThreadSafeBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DKThreadSafeBuffer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKThreadSafeBuffer);
}

uint64_t dispatch thunk of DKThreadSafeBuffer.__allocating_init(maxLenght:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKThreadSafeBuffer.insert(item:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKThreadSafeBuffer.pop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

unint64_t sub_25431EDFC()
{
  unint64_t result = qword_269DD99D0;
  if (!qword_269DD99D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD99D0);
  }
  return result;
}

uint64_t DKSphericalMotionFilter.__allocating_init(currentTime:configuration:camera:)(uint64_t a1, void *a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v6 = sub_254320A24(a1, a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_25431EEB4@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, a1);
}

uint64_t sub_25431EEC0(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time);
}

uint64_t (*sub_25431EECC())()
{
  return nullsub_1;
}

__n128 sub_25431EEF4@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_25431EF14(uint64_t a1)
{
  return sub_2542721C0(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
}

uint64_t (*sub_25431EF24())()
{
  return nullsub_1;
}

uint64_t sub_25431EF4C()
{
  return *(void *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance);
}

uint64_t sub_25431EF64(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_25431EF80())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKSphericalMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_25431F0AC@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, a1);
}

uint64_t sub_25431F0B8(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated);
}

uint64_t (*sub_25431F0C4())()
{
  return nullsub_1;
}

uint64_t sub_25431F0EC@<X0>(uint64_t a1@<X8>)
{
  return sub_254261A9C(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_25431F128(uint64_t a1)
{
  return sub_25425FB74(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
}

uint64_t (*sub_25431F138())()
{
  return nullsub_1;
}

double sub_25431F160()
{
  return *(double *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
}

void sub_25431F178(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = (double *)(v4 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  *uint64_t v5 = a1;
  v5[1] = a2;
  uint64_t v5[2] = a3;
  v5[3] = a4;
}

uint64_t (*sub_25431F190())()
{
  return nullsub_1;
}

uint64_t sub_25431F1B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = type metadata accessor for DKMotion3();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254261A9C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return sub_25425FB74((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_25431F264@<X0>(uint64_t a1@<X8>)
{
  return sub_254261A9C(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, a1, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_25431F2A0(uint64_t a1)
{
  return sub_25425FB74(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
}

uint64_t (*sub_25431F2B0())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.State.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return v0;
}

uint64_t DKSphericalMotionFilter.State.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  sub_254261B04(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  return swift_deallocClassInstance();
}

uint64_t sub_25431F454(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  return (*(uint64_t (**)(void, char *, uint64_t))(v9 + 40))(*a2 + *a5, v12, v8);
}

uint64_t sub_25431F54C@<X0>(uint64_t a1@<X8>)
{
  return sub_254285EC0(&OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, a1);
}

uint64_t sub_25431F558(uint64_t a1)
{
  return sub_254285F3C(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated);
}

uint64_t (*sub_25431F564())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.init(currentTime:configuration:camera:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = sub_254320A24(a1, a2, a3);
  swift_release();
  return v3;
}

BOOL sub_25431F5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  if (!v9) {
    return 1;
  }
  CGFloat v10 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  CGFloat v11 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 8);
  CGFloat v12 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 16);
  CGFloat v13 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 24);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, v4, v6);
  swift_retain();
  sub_25436C700();
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  double v16 = sub_254256B68(v15 * *(double *)(*(void *)(v2 + 16) + 96), v10, v11, v12, v13);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32))
  {
    swift_release();
    return 1;
  }
  BOOL v20 = CGRectIntersectsRect(*(CGRect *)&v16, *(CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect));
  swift_release();
  return v20;
}

uint64_t sub_25431F774(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
  sub_254261B04(v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return sub_254261A9C(a1, v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_25431F7D8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  CGFloat v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v48 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  unint64_t v49 = v14;
  ((void (*)(char *, double))v14)(v13, v11);
  swift_retain();
  sub_254251374((uint64_t)v13);
  swift_release();
  uint64_t v44 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter;
  swift_retain();
  sub_254251374((uint64_t)v13);
  swift_release();
  uint64_t v45 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  swift_retain();
  sub_254251374((uint64_t)v13);
  swift_release();
  sub_25431FE58((uint64_t)v13);
  uint64_t v46 = v10;
  double v16 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v15 = v10 + 8;
  uint64_t v47 = v16;
  v16(v13, v9);
  uint64_t v17 = (CGFloat *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32) & 1) == 0)
  {
    CGFloat v19 = v17[2];
    CGFloat v18 = v17[3];
    CGFloat v21 = *v17;
    CGFloat v20 = v17[1];
    uint64_t v43 = v5;
    sub_254261A9C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance);
    v51.origin.CGFloat x = v21;
    v51.origin.CGFloat y = v20;
    v51.size.CGFloat width = v19;
    v51.size.CGFloat height = v18;
    DKCamera.cameraToWorld(rect:distance:)(&v50, v51, *(Swift::Double_optional *)(&v22 - 1));
    CGFloat x = v50.worldRect.origin.x;
    CGFloat y = v50.worldRect.origin.y;
    CGFloat width = v50.worldRect.size.width;
    CGFloat height = v50.worldRect.size.height;
    double distance = v50.distance;
    sub_254261B04((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DKCamera);
    uint64_t v28 = v48;
    v49(v13, v48, v9);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    uint64_t v29 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v52.origin.CGFloat x = x;
    v52.origin.CGFloat y = y;
    v52.size.CGFloat width = width;
    v52.size.CGFloat height = height;
    double MidX = CGRectGetMidX(v52);
    sub_25434EE84(0, MidX, 0.01);
    sub_25434F738(v29);
    swift_release();
    swift_release();
    uint64_t v31 = v28;
    uint64_t v44 = v15;
    uint64_t v32 = v28;
    unint64_t v33 = v49;
    v49(v13, v31, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v34 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v53.origin.CGFloat x = x;
    v53.origin.CGFloat y = y;
    v53.size.CGFloat width = width;
    v53.size.CGFloat height = height;
    double MidY = CGRectGetMidY(v53);
    sub_25434EE84(0, MidY, 0.01);
    sub_25434F738(v34);
    swift_release();
    swift_release();
    v33(v13, v32, v9);
    swift_allocObject();
    swift_retain();
    uint64_t v36 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    sub_25434EE84(0, distance, 0.1);
    sub_25434F738(v36);
    swift_release();
    swift_release();
    swift_retain();
    v54.origin.CGFloat x = x;
    v54.origin.CGFloat y = y;
    v54.size.CGFloat width = width;
    v54.size.CGFloat height = height;
    double v37 = CGRectGetWidth(v54);
    uint64_t v38 = v46;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    uint64_t v40 = (uint64_t)v43;
    v39(v43, 1, 1, v9);
    sub_25435D340(0, 1, v40, v37);
    swift_release();
    sub_254258BD8(v40);
    swift_retain();
    v55.origin.CGFloat x = x;
    v55.origin.CGFloat y = y;
    v55.size.CGFloat width = width;
    v55.size.CGFloat height = height;
    double v41 = CGRectGetHeight(v55);
    v39((char *)v40, 1, 1, v9);
    sub_25435D340(0, 1, v40, v41);
    swift_release();
    sub_254258BD8(v40);
    v49(v13, v48, v9);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 40))(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, v13, v9);
  }
  v49(v13, v48, v9);
  sub_25431FE58((uint64_t)v13);
  return v47(v13, v9);
}

uint64_t sub_25431FDAC(uint64_t a1)
{
  swift_retain();
  sub_254251374(a1);
  swift_release();
  swift_retain();
  sub_254251374(a1);
  swift_release();
  swift_retain();
  sub_254251374(a1);
  swift_release();
  return sub_25431FE58(a1);
}

uint64_t sub_25431FE58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v83 = a1;
  uint64_t v93 = type metadata accessor for DKMotion3();
  MEMORY[0x270FA5388](v93);
  uint64_t v87 = (uint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v86 = (char *)&v82 - v5;
  uint64_t v92 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v92);
  uint64_t v84 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v88 = (uint64_t)&v82 - v8;
  uint64_t v9 = sub_25436C7B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v89 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v90 = (char *)&v82 - v13;
  MEMORY[0x270FA5388](v14);
  double v16 = (char *)&v82 - v15;
  double v18 = MEMORY[0x270FA5388](v17);
  CGFloat v20 = (char *)&v82 - v19;
  uint64_t v91 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter;
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter)
      + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime;
  *(void *)&long long v94 = *(void *)(v10 + 16);
  ((void (*)(char *, uint64_t, uint64_t, double))v94)((char *)&v82 - v19, v21, v9, v18);
  swift_retain();
  sub_25436C6E0();
  sub_2542D2080();
  char v22 = sub_25436CBB0();
  uint64_t v85 = v10;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if (v22) {
    goto LABEL_4;
  }
  uint64_t v82 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter;
  ((void (*)(char *, uint64_t, uint64_t))v94)(v20, *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v9);
  swift_retain();
  sub_25436C6E0();
  char v24 = sub_25436CBB0();
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if (v24) {
    goto LABEL_4;
  }
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  ((void (*)(char *, uint64_t, uint64_t))v94)(v20, *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v9);
  swift_retain();
  sub_25436C6E0();
  char v26 = sub_25436CBB0();
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if (v26)
  {
LABEL_4:
    *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = 0;
    return swift_release();
  }
  uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectWidthFilter);
  uint64_t v29 = v2;
  unint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v94;
  if (*(unsigned char *)(v28 + 33) != 1
    || ((uint64_t v31 = v9, *(unsigned char *)(v28 + 32) != 1)
      ? (double v32 = *(double *)(v28 + 40))
      : (double v32 = atan2(*(long double *)(v28 + 48), *(long double *)(v28 + 56))),
        uint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectHeightFilter),
        *(unsigned char *)(v33 + 33) != 1))
  {
    *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = 0;
    return swift_release();
  }
  if (*(unsigned char *)(v33 + 32) == 1) {
    double v34 = atan2(*(long double *)(v33 + 48), *(long double *)(v33 + 56));
  }
  else {
    double v34 = *(double *)(v33 + 40);
  }
  uint64_t v35 = *(void *)(*(void *)(v2 + v91) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v35 + 16) >= 1 && *(uint64_t *)(v35 + 24) >= 1)
  {
    uint64_t v36 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
    uint64_t v37 = *(void *)(v2
                    + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera
                    + *(int *)(v92 + 32)
                    + *(int *)(v93 + 20));
    unint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      double v39 = **(double **)(v35 + 32);
      for (i = *(double *)(v37 + 32); i + 3.14159265 < v39; double v39 = v39 + -6.28318531)
        ;
      for (j = i + -3.14159265; v39 < j; double v39 = v39 + 6.28318531)
        ;
      uint64_t v42 = *(void *)(*(void *)(v2 + v82) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
      if (*(uint64_t *)(v42 + 16) < 1 || *(uint64_t *)(v42 + 24) < 1) {
        goto LABEL_48;
      }
      if (v38 >= 2)
      {
        double v43 = **(double **)(v42 + 32);
        for (k = *(double *)(v37 + 40); k + 3.14159265 < v43; double v43 = v43 + -6.28318531)
          ;
        for (; v43 < k + -3.14159265; double v43 = v43 + 6.28318531)
          ;
        uint64_t v45 = *(void *)(*(void *)(v2 + v25) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
        if (*(uint64_t *)(v45 + 16) >= 1 && *(uint64_t *)(v45 + 24) >= 1)
        {
          sub_254261A9C(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, v88, (uint64_t (*)(void))type metadata accessor for DKCamera);
          if (*(uint64_t *)(v45 + 16) > 0 && *(uint64_t *)(v45 + 24) >= 1)
          {
            v95.origin.CGFloat x = v39 - v32 * 0.5;
            v95.origin.CGFloat y = v43 - v34 * 0.5;
            v95.size.CGFloat width = v32;
            v95.size.CGFloat height = v34;
            uint64_t v46 = v88;
            __C::CGRect v96 = DKCamera.worldToCamera(rect:distance:clampToBorders:)(v95, **(Swift::Double **)(v45 + 32), 1);
            CGFloat x = v96.origin.x;
            CGFloat y = v96.origin.y;
            CGFloat width = v96.size.width;
            CGFloat height = v96.size.height;
            sub_254261B04(v46, (uint64_t (*)(void))type metadata accessor for DKCamera);
            v30(v90, v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, v31);
            v30(v89, v83, v31);
            __C::CGRect v51 = *(void **)(*(void *)(v29 + v91) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
            uint64_t v52 = v51[2];
            if (v52 > 0 && (uint64_t)v51[3] >= 1)
            {
              CGRect v53 = *(void **)(*(void *)(v29 + v82) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
              uint64_t v54 = v53[2];
              if (v54 > 0 && (uint64_t)v53[3] >= 1)
              {
                uint64_t v88 = v36;
                uint64_t v91 = v29;
                CGRect v55 = *(void **)(*(void *)(v29 + v25) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
                uint64_t v56 = v55[2];
                if (v56 > 0 && (uint64_t)v55[3] >= 1)
                {
                  uint64_t v57 = v31;
                  uint64_t v58 = (uint64_t *)v51[4];
                  uint64_t v59 = *v58;
                  uint64_t v60 = (uint64_t *)v53[4];
                  uint64_t v61 = *v60;
                  uint64_t v62 = (uint64_t *)v55[4];
                  uint64_t v63 = *v62;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
                  uint64_t v64 = swift_allocObject();
                  long long v94 = xmmword_25436E6A0;
                  *(_OWORD *)(v64 + 16) = xmmword_25436E6A0;
                  *(void *)(v64 + 32) = v59;
                  *(void *)(v64 + 40) = v61;
                  *(void *)(v64 + 48) = v63;
                  if ((unint64_t)v52 > 1 && (unint64_t)v54 > 1 && (unint64_t)v56 > 1)
                  {
                    uint64_t v65 = v64;
                    uint64_t v66 = v58[1];
                    uint64_t v67 = v60[1];
                    uint64_t v68 = v62[1];
                    uint64_t v69 = swift_allocObject();
                    *(_OWORD *)(v69 + 16) = v94;
                    *(void *)(v69 + 32) = v66;
                    *(void *)(v69 + 40) = v67;
                    *(void *)(v69 + 48) = v68;
                    if ((unint64_t)v52 > 2 && (unint64_t)v54 > 2 && (unint64_t)v56 > 2)
                    {
                      uint64_t v70 = v69;
                      uint64_t v71 = v58[2];
                      uint64_t v72 = v60[2];
                      uint64_t v73 = v62[2];
                      uint64_t v74 = swift_allocObject();
                      *(_OWORD *)(v74 + 16) = v94;
                      *(void *)(v74 + 32) = v71;
                      *(void *)(v74 + 40) = v72;
                      *(void *)(v74 + 48) = v73;
                      uint64_t v75 = (uint64_t)v86;
                      BOOL v76 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
                      v76(v86, v89, v57);
                      uint64_t v77 = v93;
                      *(void *)(v75 + *(int *)(v93 + 20)) = v65;
                      *(void *)(v75 + *(int *)(v77 + 24)) = v70;
                      *(void *)(v75 + *(int *)(v77 + 28)) = v74;
                      uint64_t v78 = v84;
                      sub_254261A9C(v88, v84, (uint64_t (*)(void))type metadata accessor for DKCamera);
                      uint64_t v79 = v87;
                      sub_254291724(v78 + *(int *)(v92 + 32), v87);
                      type metadata accessor for DKSphericalMotionFilter.State(0);
                      uint64_t v80 = swift_allocObject();
                      v76((char *)(v80+ OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated), v90, v57);
                      sub_254291724(v75, v80 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
                      uint64_t v81 = (CGFloat *)(v80
                                      + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
                      *uint64_t v81 = x;
                      v81[1] = y;
                      v81[2] = width;
                      v81[3] = height;
                      sub_254291724(v79, v80 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
                      *(void *)(v91 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = v80;
                      return swift_release();
                    }
                  }
                }
              }
            }
          }
        }
        goto LABEL_48;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
LABEL_48:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t sub_2543207D8(uint64_t a1)
{
  swift_retain();
  sub_254251374(a1);
  swift_release();
  swift_retain();
  sub_254251374(a1);
  swift_release();
  swift_retain();
  sub_254251374(a1);
  swift_release();
  sub_25431FE58(a1);
  return swift_retain();
}

uint64_t DKSphericalMotionFilter.deinit()
{
  swift_release();
  sub_254261B04(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_logger;
  uint64_t v4 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DKSphericalMotionFilter.__deallocating_deinit()
{
  DKSphericalMotionFilter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_254320A24(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v60 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = 0;
  sub_25436C6E0();
  sub_25436C9E0();
  *(void *)(v4 + 16) = a2;
  uint64_t v59 = a3;
  sub_254261A9C(a3, v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v10 = a2[14];
  type metadata accessor for DKConstantAccelerationFilter(0);
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v10;
  swift_retain_n();
  swift_retain();
  sub_254353F8C(v10, 3);
  uint64_t v12 = v11;
  swift_release();
  uint64_t v64 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter) = v12;
  uint64_t v13 = a2[15];
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v13;
  uint64_t v14 = swift_retain_n();
  sub_254353F8C(v14, 3);
  uint64_t v16 = v15;
  swift_release();
  uint64_t v62 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter;
  uint64_t v63 = a2;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter) = v16;
  uint64_t v17 = a2[16];
  *(void *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v17;
  uint64_t v18 = swift_retain_n();
  sub_254353F8C(v18, 3);
  uint64_t v20 = v19;
  swift_release();
  uint64_t v61 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter) = v20;
  uint64_t v21 = a2[11];
  uint64_t v22 = sub_25436C7B0();
  uint64_t v58 = *(void *)(v22 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
  uint64_t v24 = (uint64_t)v9;
  v23(v9, 1, 1, v22);
  type metadata accessor for DKSmoothingFilter();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 33) = 0;
  *(void *)(v25 + 40) = 0;
  *(void *)(v25 + 48) = 0;
  *(void *)(v25 + 56) = 0x3FF0000000000000;
  uint64_t v26 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v23((char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v22);
  uint64_t v27 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v28 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  *(unsigned char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v25 + 16) = v21;
  *(void *)(v25 + 24) = v21;
  *(unsigned char *)(v25 + 32) = 0;
  sub_254277464(v24, v26);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v29 = v22;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectWidthFilter) = v25;
  uint64_t v30 = v63[11];
  v23((char *)v24, 1, 1, v22);
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 33) = 0;
  *(void *)(v31 + 40) = 0;
  *(void *)(v31 + 48) = 0;
  *(void *)(v31 + 56) = 0x3FF0000000000000;
  uint64_t v32 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v23((char *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v29);
  uint64_t v33 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 1;
  uint64_t v34 = v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  *(unsigned char *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = v30;
  *(unsigned char *)(v31 + 32) = 0;
  sub_254277464(v24, v32);
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 1;
  *(void *)uint64_t v34 = 0;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectHeightFilter) = v31;
  uint64_t v35 = *(void *)(v4 + v64);
  *(unsigned char *)(v34 + 8) = 1;
  uint64_t v36 = *(void **)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v37 = v36[2];
  if (v37 < 1) {
    goto LABEL_38;
  }
  uint64_t v38 = v36[3];
  if (v38 <= 0) {
    goto LABEL_38;
  }
  double v39 = (void *)v36[4];
  *double v39 = 0x3FF0000000000000;
  if ((unint64_t)v37 < 2 || v38 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v37, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v39[v37 + 1] = 0x3FB999999999999ALL;
  if ((unint64_t)v37 < 3 || (unint64_t)v38 <= 2) {
    goto LABEL_38;
  }
  if (v37 + 0x4000000000000000 < 0) {
    goto LABEL_30;
  }
  uint64_t v40 = 2 * v37;
  BOOL v41 = __OFADD__(v40, 2);
  uint64_t v42 = v40 + 2;
  if (v41)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v39[v42] = 0x3FF0000000000000;
  double v43 = *(void **)(*(void *)(v4 + v62) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v44 = v43[2];
  if (v44 < 1) {
    goto LABEL_38;
  }
  uint64_t v45 = v43[3];
  if (v45 <= 0) {
    goto LABEL_38;
  }
  uint64_t v46 = (void *)v43[4];
  *uint64_t v46 = 0x3FF0000000000000;
  if ((unint64_t)v44 < 2 || v45 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v44, 1)) {
    goto LABEL_32;
  }
  v46[v44 + 1] = 0x3FB999999999999ALL;
  if ((unint64_t)v44 < 3 || (unint64_t)v45 <= 2) {
    goto LABEL_38;
  }
  if (v44 + 0x4000000000000000 < 0) {
    goto LABEL_33;
  }
  uint64_t v47 = 2 * v44;
  BOOL v41 = __OFADD__(v47, 2);
  uint64_t v48 = v47 + 2;
  if (v41)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v46[v48] = 0x3FF0000000000000;
  unint64_t v49 = *(void **)(*(void *)(v4 + v61) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  uint64_t v50 = v49[2];
  if (v50 < 1) {
    goto LABEL_38;
  }
  uint64_t v51 = v49[3];
  if (v51 <= 0) {
    goto LABEL_38;
  }
  uint64_t v52 = (void *)v49[4];
  void *v52 = 0x3FB999999999999ALL;
  if ((unint64_t)v50 < 2 || v51 == 1) {
    goto LABEL_38;
  }
  if (__OFADD__(v50, 1)) {
    goto LABEL_35;
  }
  v52[v50 + 1] = 0x3FF0000000000000;
  if ((unint64_t)v50 < 3 || (unint64_t)v51 <= 2) {
    goto LABEL_38;
  }
  if (v50 + 0x4000000000000000 >= 0)
  {
    uint64_t v53 = 2 * v50;
    BOOL v41 = __OFADD__(v53, 2);
    uint64_t v54 = v53 + 2;
    if (!v41)
    {
      v52[v54] = 0x3FF0000000000000;
      uint64_t v55 = v60;
      sub_25431FE58(v60);
      sub_254261B04(v59, (uint64_t (*)(void))type metadata accessor for DKCamera);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v55, v29);
      return v4;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKSphericalMotionFilter.State(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD99F8);
}

uint64_t sub_2543210FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, a2);
}

uint64_t sub_254321108(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25431F454(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time);
}

__n128 sub_254321128@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
  char v3 = *(unsigned char *)(v2 + 32);
  __n128 result = *(__n128 *)v2;
  long long v5 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 32) = v3;
  return result;
}

__n128 sub_25432114C(uint64_t a1, void *a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(unsigned char *)(v3 + 32) = v2;
  return result;
}

void *sub_254321170@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  uint64_t v3 = *(void *)v2;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_254321194(uint64_t result, void *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  *(void *)uint64_t v3 = *(void *)result;
  *(unsigned char *)(v3 + 8) = v2;
  return result;
}

uint64_t sub_2543211B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, a2);
}

uint64_t sub_2543211C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25431F454(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated);
}

uint64_t sub_2543211E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254261A9C(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, a2, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_254321224(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25431F1B8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
}

__n128 sub_254321244@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect;
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

__n128 sub_254321260(uint64_t a1, void *a2)
{
  uint64_t v2 = (_OWORD *)(*a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *uint64_t v2 = *(_OWORD *)a1;
  v2[1] = v4;
  return result;
}

uint64_t sub_25432127C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254261A9C(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, a2, (uint64_t (*)(void))type metadata accessor for DKMotion3);
}

uint64_t sub_2543212BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25431F1B8(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
}

uint64_t sub_2543212DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, a2);
}

uint64_t sub_2543212E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_25431F454(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated);
}

uint64_t sub_254321308()
{
  return type metadata accessor for DKSphericalMotionFilter(0);
}

uint64_t type metadata accessor for DKSphericalMotionFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD99D8);
}

uint64_t sub_254321330()
{
  uint64_t result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C7B0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_25436C9F0();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKSphericalMotionFilter);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.__allocating_init(currentTime:configuration:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.isValid(currentTime:measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.update(measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.predict(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.updateState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.getState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t sub_254321610()
{
  return type metadata accessor for DKSphericalMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKSphericalMotionFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD99E8);
}

uint64_t sub_254321638()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKSphericalMotionFilter.Measurement);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  unint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 136);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 160))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_25432188C()
{
  return type metadata accessor for DKSphericalMotionFilter.State(0);
}

uint64_t sub_254321894()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DKMotion3();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter.State(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKSphericalMotionFilter.State);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

void *static DKAckermannMotionFilter.Index.allCases.getter()
{
  return &unk_2703B35A0;
}

uint64_t DKAckermannMotionFilter.Index.rawValue.getter()
{
  return *v0;
}

uint64_t DKAckermannMotionFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKAckermannMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional __swiftcall DKAckermannMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional sub_254321CE0(Swift::Int *a1)
{
  return DKAckermannMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_254321CE8(void *a1@<X8>)
{
  *a1 = &unk_2703B35C8;
}

uint64_t DKAckermannMotionFilter.Configuration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKAckermannMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKAckermannMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  swift_allocObject();
  sub_254322290(a1);
  uint64_t v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKAckermannMotionFilter.init(configuration:)(uint64_t a1)
{
  sub_254322290(a1);
  uint64_t v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_254321DE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_25436C700();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  uint64_t v12 = v11[2];
  if (v12 < 3) {
    goto LABEL_28;
  }
  if ((uint64_t)v11[3] <= 0) {
    goto LABEL_28;
  }
  uint64_t v13 = v11[4];
  __double2 v14 = __sincos_stret(*(double *)(v13 + 16));
  if ((unint64_t)v12 <= 4) {
    goto LABEL_28;
  }
  long double v15 = *(double *)(v13 + 32);
  double v16 = tan(v15);
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  uint64_t v18 = v17[2];
  if (v18 < 1 || (uint64_t)v17[3] <= 3) {
    goto LABEL_28;
  }
  uint64_t v19 = 3 * v18;
  if ((unsigned __int128)(v18 * (__int128)3) >> 64 != (3 * v18) >> 63)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  double v20 = *(double *)(v13 + 24);
  uint64_t v21 = v17[4];
  *(double *)(v21 + 24 * v18) = v10 * v14.__cosval;
  if ((unint64_t)v18 <= 1) {
    goto LABEL_28;
  }
  if (__OFADD__(v19, 1)) {
    goto LABEL_22;
  }
  *(double *)(v21 + 8 * (v19 + 1)) = v10 * v14.__sinval;
  if ((unint64_t)v18 <= 2) {
    goto LABEL_28;
  }
  if (__OFADD__(v19, 2)) {
    goto LABEL_23;
  }
  double v22 = v10 * v16;
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKAckermannMotionFilter_ackermannConfiguration);
  *(double *)(v21 + 8 * (v19 + 2)) = v10 * v16 / *(double *)(v23 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  swift_allocObject();
  uint64_t v24 = (void *)swift_retain();
  uint64_t v25 = sub_254354310(v24);
  swift_release();
  uint64_t v26 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v25;
  swift_release();
  uint64_t v27 = *(void **)(v2 + v26);
  uint64_t v28 = v27[2];
  if (v28 < 1) {
    goto LABEL_28;
  }
  uint64_t v29 = v27[3];
  if (v29 <= 3) {
    goto LABEL_28;
  }
  uint64_t v30 = 3 * v28;
  if ((unsigned __int128)(v28 * (__int128)3) >> 64 != (3 * v28) >> 63) {
    goto LABEL_24;
  }
  uint64_t v31 = v27[4];
  *(double *)(v31 + 24 * v28) = v10 * v14.__cosval;
  *(double *)(v31 + 16 * v28) = v10 * -(v14.__sinval * v20);
  if ((unint64_t)v28 <= 1) {
    goto LABEL_28;
  }
  if (__OFADD__(v30, 1)) {
    goto LABEL_25;
  }
  *(double *)(v31 + 8 * (v30 + 1)) = v10 * v14.__sinval;
  *(double *)(v31 + ((16 * v28) | 8)) = v10 * (v14.__cosval * v20);
  if ((unint64_t)v28 <= 2) {
    goto LABEL_28;
  }
  BOOL v32 = __OFADD__(v30, 2);
  uint64_t v33 = v30 + 2;
  if (v32)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(double *)(v31 + 8 * v33) = v22 / *(double *)(v23 + 56);
  if ((unint64_t)v29 > 4)
  {
    if ((unint64_t)(v28 - 0x2000000000000000) >> 62 == 3)
    {
      long double v34 = cos(v15);
      *(long double *)(v31 + 32 * v28 + 16) = v10 * v20 / (v34 * v34);
      return sub_25434F220(a1);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

void DKAckermannMotionFilter.__allocating_init(configuration:stateSize:)()
{
}

void DKAckermannMotionFilter.init(configuration:stateSize:)()
{
}

uint64_t sub_2543221D4()
{
  return swift_release();
}

uint64_t DKAckermannMotionFilter.deinit()
{
  uint64_t v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKAckermannMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_254322290(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKAckermannMotionFilter_ackermannConfiguration) = a1;
  uint64_t v2 = swift_retain();
  sub_254353F8C(v2, 5);
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  unint64_t v5 = v4[2];
  if ((uint64_t)v5 < 1) {
    goto LABEL_37;
  }
  unint64_t v6 = v4[3];
  if ((uint64_t)v6 <= 0) {
    goto LABEL_37;
  }
  uint64_t v7 = (void *)v4[4];
  *uint64_t v7 = 0x3F747AE147AE147BLL;
  if (v5 < 2 || v6 == 1) {
    goto LABEL_37;
  }
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v7[v5 + 1] = 0x3F747AE147AE147BLL;
  if (v5 < 3 || v6 <= 2) {
    goto LABEL_37;
  }
  if ((uint64_t)(v5 + 0x4000000000000000) < 0) {
    goto LABEL_31;
  }
  if (__OFADD__(2 * v5, 2))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v7[2 * v5 + 2] = 0x3F789374BC6A7EFALL;
  if (v5 < 4 || v6 <= 3) {
    goto LABEL_37;
  }
  uint64_t v11 = 3 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)3) >> 64 != (uint64_t)(3 * v5) >> 63) {
    goto LABEL_33;
  }
  BOOL v12 = __OFADD__(v11, 3);
  uint64_t v13 = v11 + 3;
  if (v12)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7[v13] = 0x3F647AE147AE147BLL;
  if (v5 < 5 || v6 <= 4) {
    goto LABEL_37;
  }
  if ((v5 - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t v15 = 4 * v5;
    BOOL v12 = __OFADD__(v15, 4);
    uint64_t v16 = v15 + 4;
    if (!v12)
    {
      v7[v16] = 0x3F847AE147AE147BLL;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_25436D4F0();
  __break(1u);
}

unint64_t sub_25432243C()
{
  unint64_t result = qword_269DD9A08;
  if (!qword_269DD9A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9A08);
  }
  return result;
}

unint64_t sub_254322494()
{
  unint64_t result = qword_269DD9A10;
  if (!qword_269DD9A10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD9A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9A10);
  }
  return result;
}

uint64_t sub_2543224F0()
{
  return type metadata accessor for DKAckermannMotionFilter(0);
}

uint64_t type metadata accessor for DKAckermannMotionFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9A20);
}

uint64_t method lookup function for DKAckermannMotionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKAckermannMotionFilter);
}

uint64_t dispatch thunk of DKAckermannMotionFilter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.updateQ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.getState(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.setState(index:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t sub_2543225C8()
{
  return type metadata accessor for DKAckermannMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKAckermannMotionFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9A30);
}

uint64_t method lookup function for DKAckermannMotionFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKAckermannMotionFilter.Measurement);
}

unsigned char *storeEnumTagSinglePayload for DKAckermannMotionFilter.Index(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2543226D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKAckermannMotionFilter.Index()
{
  return &type metadata for DKAckermannMotionFilter.Index;
}

uint64_t type metadata accessor for DKAckermannMotionFilter.Configuration()
{
  return self;
}

id DKRepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  return DKRepeatingTimer.init(interval:fireOnce:queue:_:)(a1, a2, a3, a4, a5);
}

id DKRepeatingTimer.init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  unsigned int v6 = v5;
  uint64_t v61 = a4;
  id v62 = a2;
  uint64_t v54 = a3;
  LODWORD(v53) = a1;
  uint64_t v8 = sub_25436CA10();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25436CA30();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25436CA00();
  uint64_t v49 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v48 = (void **)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (void **)((char *)&v48 - v14);
  uint64_t v16 = sub_25436CA50();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v22 = (char *)&v48 - v21;
  uint64_t v23 = sub_25436D040();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD84D0);
  uint64_t v28 = swift_allocObject();
  *(_DWORD *)(v28 + 16) = 0;
  *(void *)&v6[v27] = v28;
  v6[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state] = 0;
  sub_254322DF0();
  uint64_t v29 = v6;
  sub_25436D030();
  uint64_t v30 = sub_25436D050();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  *(void *)&v29[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_timer] = v30;
  uint64_t ObjectType = swift_getObjectType();
  sub_25436CA40();
  MEMORY[0x25A275150](v19, a5);
  BOOL v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v51 = v16;
  uint64_t v50 = v17 + 8;
  v32(v19, v16);
  if (v53)
  {
    uint64_t v33 = *MEMORY[0x263F8F010];
    uint64_t v34 = v49;
    uint64_t v53 = ObjectType;
    uint64_t v35 = *(void (**)(void *, uint64_t, uint64_t))(v49 + 104);
    uint64_t v36 = v52;
    v35(v15, v33, v52);
    uint64_t v37 = v48;
    *uint64_t v48 = 0;
    v35(v37, *MEMORY[0x263F8EFE0], v36);
    MEMORY[0x25A2757A0](v22, v15, v37, v53);
    uint64_t v38 = *(void (**)(void *, uint64_t))(v34 + 8);
    v38(v37, v36);
    v38(v15, v36);
  }
  else
  {
    void *v15 = 0;
    uint64_t v39 = v49;
    uint64_t v40 = v52;
    (*(void (**)(void *, void, uint64_t))(v49 + 104))(v15, *MEMORY[0x263F8EFE0], v52);
    MEMORY[0x25A2757B0](v22, v15, ObjectType, a5);
    (*(void (**)(void *, uint64_t))(v39 + 8))(v15, v40);
  }
  v32(v22, v51);
  swift_getObjectType();
  aBlock[4] = v54;
  aBlock[5] = v61;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_254322EA8;
  aBlock[3] = &block_descriptor_0;
  BOOL v41 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v42 = v55;
  sub_25436CA20();
  double v43 = v58;
  sub_254322F04();
  sub_25436D060();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  swift_release();
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF910]), sel_init);
  *(void *)&v29[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_date] = v44;

  uint64_t v45 = (objc_class *)type metadata accessor for DKRepeatingTimer();
  v63.receiver = v29;
  v63.super_class = v45;
  id v46 = objc_msgSendSuper2(&v63, sel_init);
  sub_2543230F4();

  swift_release();
  return v46;
}

unint64_t sub_254322DF0()
{
  unint64_t result = qword_269DD9A58;
  if (!qword_269DD9A58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269DD9A58);
  }
  return result;
}

uint64_t sub_254322E30@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x263F8EFE0];
  uint64_t v3 = sub_25436CA00();
  unsigned int v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_254322EA8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_254322F04()
{
  return sub_25436D1F0();
}

uint64_t type metadata accessor for DKRepeatingTimer()
{
  return self;
}

id DKRepeatingTimer.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  uint64_t v3 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock];
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_25436D070();
  swift_unknownObjectRelease();
  unsigned int v4 = *(os_unfair_lock_s **)&v1[v2];
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  sub_2543230F4();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DKRepeatingTimer();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_2543230F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 1;
    swift_getObjectType();
    sub_25436D080();
  }
  unsigned int v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_2543231A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) == 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 0;
    swift_getObjectType();
    sub_25436D090();
  }
  unsigned int v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_25432324C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) == 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 2;
    swift_getObjectType();
    sub_25436D070();
  }
  unsigned int v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

BOOL sub_2543232FC()
{
  uint64_t v1 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state);
  unsigned int v4 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  return v3 == 1;
}

double sub_25432337C()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_date), sel_timeIntervalSinceNow);
  return fabs(v1);
}

id DKRepeatingTimer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DKRepeatingTimer.init()()
{
}

uint64_t method lookup function for DKRepeatingTimer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKRepeatingTimer);
}

uint64_t dispatch thunk of DKRepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKRepeatingTimer.resume()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DKRepeatingTimer.suspend()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DKRepeatingTimer.cancel()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DKRepeatingTimer.isValid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DKRepeatingTimer.timeSinceInit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

unsigned char *storeEnumTagSinglePayload for DKRepeatingTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25432363CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKRepeatingTimer.State()
{
  return &type metadata for DKRepeatingTimer.State;
}

unint64_t sub_254323678()
{
  unint64_t result = qword_269DD9A78;
  if (!qword_269DD9A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9A78);
  }
  return result;
}

unint64_t sub_2543236CC()
{
  unint64_t result = qword_269DD9A80;
  if (!qword_269DD9A80)
  {
    sub_25436CA10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9A80);
  }
  return result;
}

unint64_t sub_254323724()
{
  unint64_t result = qword_269DD9A90;
  if (!qword_269DD9A90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DD9A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9A90);
  }
  return result;
}

uint64_t DKDataLogRecorder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DKDataLogRecorder.init()();
  return v0;
}

unint64_t sub_2543237B8()
{
  return 0xD000000000000018;
}

uint64_t sub_2543237D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25432953C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_254323800(uint64_t a1)
{
  unint64_t v2 = sub_2543247A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432383C(uint64_t a1)
{
  unint64_t v2 = sub_2543247A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254323878(uint64_t a1)
{
  unint64_t v2 = sub_2543247FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2543238B4(uint64_t a1)
{
  unint64_t v2 = sub_2543247FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKDataLog.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AA0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v15 = v3;
  uint64_t v16 = v4;
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AA8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2543247A8();
  sub_25436D950();
  sub_2543247FC();
  swift_retain();
  sub_25436D680();
  uint64_t v17 = v11;
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_254324850(&qword_269DD80D8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
  uint64_t v12 = v15;
  sub_25436D710();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t DKDataLog.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AC0);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AC8);
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2543247A8();
  sub_25436D940();
  if (v2) {
    goto LABEL_5;
  }
  uint64_t v19 = a1;
  uint64_t v20 = v7;
  uint64_t v10 = v23;
  if (*(void *)(sub_25436D660() + 16) != 1)
  {
    uint64_t v12 = sub_25436D350();
    swift_allocError();
    uint64_t v13 = v10;
    uint64_t v15 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    void *v15 = &type metadata for DKDataLog;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v13);
    a1 = v19;
LABEL_5:
    uint64_t v17 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  sub_2543247FC();
  sub_25436D5B0();
  uint64_t v11 = v20;
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_254324850(&qword_269DD80C8, (void (*)(uint64_t))type metadata accessor for DKIntelligentTrackingState);
  sub_25436D650();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  void *v21 = v24;
  uint64_t v17 = (uint64_t)v19;
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_254323EF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DKDataLog.init(from:)(a1, a2);
}

uint64_t sub_254323F10(void *a1)
{
  return DKDataLog.encode(to:)(a1);
}

uint64_t DKDataLogStamped.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DKDataLogStamped.time.setter(uint64_t a1)
{
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*DKDataLogStamped.time.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogStamped.log.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for DKDataLogStamped(0) + 20));
  return swift_retain();
}

uint64_t DKDataLogStamped.log.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for DKDataLogStamped(0) + 20);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = v2;
  return result;
}

uint64_t (*DKDataLogStamped.log.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2543240E4()
{
  if (*v0) {
    return 6778732;
  }
  else {
    return 1701669236;
  }
}

uint64_t sub_254324110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2543295C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254324138(uint64_t a1)
{
  unint64_t v2 = sub_2543248B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254324174(uint64_t a1)
{
  unint64_t v2 = sub_2543248B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKDataLogStamped.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2543248B8();
  sub_25436D950();
  char v12 = 0;
  sub_25436C7B0();
  sub_254324850(&qword_269DD8110, MEMORY[0x263F07490]);
  sub_25436D710();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for DKDataLogStamped(0) + 20));
    v10[15] = 1;
    sub_25432490C();
    sub_25436D710();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKDataLogStamped.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_25436C7B0();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9AE8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DKDataLogStamped(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2543248B8();
  sub_25436D940();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v23;
  char v29 = 0;
  sub_254324850(&qword_269DD8220, MEMORY[0x263F07490]);
  uint64_t v15 = v26;
  uint64_t v16 = v24;
  sub_25436D650();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v28 = 1;
  sub_254324960();
  sub_25436D650();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v16);
  uint64_t v18 = v20;
  *(void *)(v20 + *(int *)(v21 + 20)) = v27;
  sub_2543249B4(v18, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_254309748(v18);
}

uint64_t sub_2543246D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DKDataLogStamped.init(from:)(a1, a2);
}

uint64_t sub_2543246F0(void *a1)
{
  return DKDataLogStamped.encode(to:)(a1);
}

uint64_t DKDataLogRecorder.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  sub_25436C460();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_25436C450();
  type metadata accessor for DKLockActor();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 1;
  *(void *)(v3 + 120) = v2;
  *(void *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = xmmword_254376A20;
  *(void *)(v1 + 56) = 0;
  sub_25436C7F0();
  return v1;
}

unint64_t sub_2543247A8()
{
  unint64_t result = qword_269DD9AB0;
  if (!qword_269DD9AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9AB0);
  }
  return result;
}

unint64_t sub_2543247FC()
{
  unint64_t result = qword_269DD9AB8;
  if (!qword_269DD9AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9AB8);
  }
  return result;
}

uint64_t sub_254324850(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DKDataLogStamped(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9B58);
}

unint64_t sub_2543248B8()
{
  unint64_t result = qword_269DD9AD8;
  if (!qword_269DD9AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9AD8);
  }
  return result;
}

unint64_t sub_25432490C()
{
  unint64_t result = qword_269DD9AE0;
  if (!qword_269DD9AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9AE0);
  }
  return result;
}

unint64_t sub_254324960()
{
  unint64_t result = qword_269DD9AF0;
  if (!qword_269DD9AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269DD9AF0);
  }
  return result;
}

uint64_t sub_2543249B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254324A18()
{
  v1[9] = v0;
  uint64_t v2 = type metadata accessor for DKDataLogStamped(0);
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v3 = sub_25436CC50();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v4 = sub_25436C800();
  v1[17] = v4;
  v1[18] = *(void *)(v4 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  v1[20] = swift_task_alloc();
  uint64_t v5 = sub_25436C610();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254324C3C, 0, 0);
}

uint64_t sub_254324C3C()
{
  v0[25] = *(void *)(v0[9] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[26] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_254324CE0;
  return sub_2543026D0();
}

uint64_t sub_254324CE0()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254324DF8, 0, 0);
}

uint64_t sub_254324DF8()
{
  uint64_t v71 = v0;
  uint64_t v1 = v0[9];
  if (!*(void *)(v1 + 40) || *(void *)(v1 + 56) > 0xA00000uLL)
  {
    uint64_t v2 = v0[22];
    uint64_t v66 = v0[21];
    uint64_t v3 = v0[19];
    uint64_t v4 = v0[20];
    uint64_t v5 = v0[17];
    uint64_t v6 = v0[18];
    type metadata accessor for DKUtils();
    unint64_t v69 = 0x2D79726F74736968;
    unint64_t v70 = 0xE800000000000000;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid, v5);
    uint64_t v7 = sub_25436C7C0();
    unint64_t v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    uint64_t v11 = sub_25432915C(5, v7, v9, v10);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    MEMORY[0x25A275370](v11, v13, v15, v17);
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25431DC18(0x2D79726F74736968, 0xE800000000000000, 6778732, 0xE300000000000000, v4);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v66) != 1)
    {
      (*(void (**)(void, void, void))(v0[22] + 32))(v0[24], v0[20], v0[21]);
      v0[6] = 0;
      v0[7] = 0xE000000000000000;
      sub_25436CC40();
      sub_2543291F8();
      sub_25436D1D0();
      uint64_t v32 = v0[24];
      uint64_t v40 = v0[22];
      uint64_t v39 = v0[23];
      uint64_t v41 = v0[21];
      (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[13]);
      swift_bridgeObjectRelease();
      sub_25432924C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v32, v41);
      id v42 = sub_2543256C4(v39);
      uint64_t v43 = v0[24];
      uint64_t v44 = v0[21];
      uint64_t v45 = v0[22];
      uint64_t v47 = v0[9];
      uint64_t v48 = *(void **)(v1 + 40);
      *(void *)(v1 + 40) = v42;

      *(void *)(v47 + 56) = 0;
      LOBYTE(v67) = 12;
      sub_25436D290();
      swift_bridgeObjectRelease();
      unint64_t v69 = 0xD000000000000014;
      unint64_t v70 = 0x800000025437DAA0;
      sub_25436C580();
      sub_25436CCB0();
      swift_bridgeObjectRelease();
      os_log_type_t v49 = sub_25436D020();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v67, 0xD000000000000014, 0x800000025437DAA0, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      uint64_t v19 = *(void **)(v1 + 40);
      if (v19) {
        goto LABEL_6;
      }
LABEL_18:
      sub_254261A48();
      uint64_t v50 = (void *)swift_allocError();
      *(void *)uint64_t v51 = 0xD000000000000017;
      *(void *)(v51 + 8) = 0x800000025437DA40;
      *(unsigned char *)(v51 + 16) = 0;
      swift_willThrow();
      LOBYTE(v67) = 12;
      unint64_t v69 = 0;
      unint64_t v70 = 0xE000000000000000;
      sub_25436D290();
      unint64_t v52 = v70;
      v0[2] = v69;
      v0[3] = v52;
      sub_25436CCB0();
      v0[8] = v50;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD80D0);
      sub_25436D460();
      uint64_t v54 = v0[2];
      unint64_t v53 = v0[3];
      os_log_type_t v55 = sub_25436D010();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v67, v54, v53, v55);

LABEL_19:
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void *)(v0[9] + 32);
      v0[27] = v56;
      swift_retain();
      return MEMORY[0x270FA2498](sub_2543255FC, v56, 0);
    }
    sub_25425042C(v0[20], &qword_269DD7A28);
    LOBYTE(v69) = 12;
    os_log_type_t v18 = sub_25436D010();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v69, 0xD000000000000019, 0x800000025437DA80, v18);
  }
  uint64_t v19 = *(void **)(v1 + 40);
  if (!v19) {
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v20 = v0[9];
  unint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v23 = v0[11];
    uint64_t v65 = v20;
    uint64_t v24 = v21 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v25 = *(void *)(v23 + 72);
    v19;
    swift_bridgeObjectRetain();
    do
    {
      sub_2543249B4(v24, v0[12]);
      sub_254324850(&qword_269DD9B00, (void (*)(uint64_t))type metadata accessor for DKDataLogStamped);
      uint64_t v26 = sub_25436C440();
      unint64_t v28 = v27;
      sub_25436CC40();
      uint64_t v29 = sub_25436CC20();
      uint64_t v31 = v0[12];
      if (v30)
      {
        unint64_t v69 = v29;
        unint64_t v70 = v30;
        sub_25436CCB0();
        sub_25436CCB0();
        sub_2542564BC(v26, v28);
        swift_bridgeObjectRelease();
        sub_254309748(v31);
      }
      else
      {
        sub_254309748(v0[12]);
        sub_2542564BC(v26, v28);
      }
      v24 += v25;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    unint64_t v34 = v67;
    unint64_t v35 = v68;
    uint64_t v20 = v65;
  }
  else
  {
    id v33 = v19;
    unint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_25432581C(v34, v35);
  unint64_t v38 = v37;
  v0[4] = v36;
  v0[5] = v37;
  sub_254329108();
  sub_25436CFE0();
  uint64_t v46 = 0;
  switch(v38 >> 62)
  {
    case 1uLL:
      LODWORD(v46) = HIDWORD(v36) - v36;
      if (__OFSUB__(HIDWORD(v36), v36)) {
        goto LABEL_29;
      }
      uint64_t v46 = (int)v46;
      goto LABEL_25;
    case 2uLL:
      uint64_t v58 = *(void *)(v36 + 16);
      uint64_t v57 = *(void *)(v36 + 24);
      BOOL v59 = __OFSUB__(v57, v58);
      uint64_t v46 = v57 - v58;
      if (v59) {
        goto LABEL_30;
      }
LABEL_25:
      if (v46 < 0) {
        goto LABEL_31;
      }
LABEL_26:
      uint64_t v60 = v0[9];
      uint64_t v61 = *(void *)(v60 + 56);
      BOOL v62 = __CFADD__(v61, v46);
      uint64_t v63 = v61 + v46;
      if (!v62)
      {
        *(void *)(v60 + 56) = v63;
        *(void *)(v20 + 16) = MEMORY[0x263F8EE78];
        swift_bridgeObjectRelease();

        sub_2542564BC(v36, v38);
        goto LABEL_19;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      uint64_t result = sub_25436D4E0();
      break;
    case 3uLL:
      goto LABEL_26;
    default:
      uint64_t v46 = BYTE6(v38);
      goto LABEL_26;
  }
  return result;
}

uint64_t sub_2543255FC()
{
  sub_2543038D4();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_2543256C4(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_25436C5B0();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_25436C610();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_25436C570();

    swift_willThrow();
    uint64_t v9 = sub_25436C610();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_25432581C(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9BF8);
  if (swift_dynamicCast())
  {
    sub_25425DF80(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_25436C500();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_25425042C((uint64_t)v38, &qword_269DD9C00);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      id v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_25436D360();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      id v7 = (uint64_t *)v4;
    }
    id v8 = sub_2543294D8(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_25436CCC0();
    goto LABEL_17;
  }
LABEL_69:
  id v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_254256138(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_254255844((void *(*)(uint64_t *__return_ptr, char *, char *))sub_25432B08C);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_25436C660();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_254327748(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_25436CCF0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_25436D360();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_254327748(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_25436CCD0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_25436C670();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  id v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_25436C670();
    sub_25431C740(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_25431C740((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_254325D4C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *(void *)(type metadata accessor for DKDataLogStamped(0) - 8);
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254325E08, 0, 0);
}

uint64_t sub_254325E08()
{
  v0[6] = *(void *)(v0[3] + 32);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_254325EAC;
  return sub_2543026D0();
}

uint64_t sub_254325EAC()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_254325FC4, 0, 0);
}

uint64_t sub_254325FC4()
{
  uint64_t v1 = v0[3];
  sub_2543249B4(v0[2], v0[5]);
  unint64_t v2 = *(void *)(v1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 16) = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v2 = sub_254258D80(0, *(void *)(v2 + 16) + 1, 1, v2);
    *(void *)(v1 + 16) = v2;
  }
  unint64_t v5 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  if (v5 >= v4 >> 1)
  {
    unint64_t v2 = sub_254258D80(v4 > 1, v5 + 1, 1, v2);
    *(void *)(v1 + 16) = v2;
  }
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = v0[3];
  *(void *)(v2 + 16) = v5 + 1;
  sub_25432928C(v6, v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5);
  uint64_t v9 = *(void *)(v8 + 32);
  v0[8] = v9;
  swift_retain();
  return MEMORY[0x270FA2498](sub_2543260E0, v9, 0);
}

uint64_t sub_2543260E0()
{
  sub_2543038D4();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DKDataLogRecorder.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid;
  uint64_t v2 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKDataLogRecorder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid;
  uint64_t v2 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKDataLogGenerator.logs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKDataLogGenerator.logs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DKDataLogGenerator.logs.modify())()
{
  return nullsub_1;
}

double DKDataLogGenerator.delay.getter()
{
  return *(double *)(v0 + 8);
}

void DKDataLogGenerator.delay.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKDataLogGenerator.delay.modify())()
{
  return nullsub_1;
}

double DKDataLogGenerator.rate.getter()
{
  return *(double *)(v0 + 16);
}

void DKDataLogGenerator.rate.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*DKDataLogGenerator.rate.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogGenerator.index.getter()
{
  return swift_retain();
}

uint64_t DKDataLogGenerator.index.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKDataLogGenerator.index.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogGenerator.next()(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for DKDataLogStamped(0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_25436D430();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2543264CC, 0, 0);
}

uint64_t sub_2543264CC()
{
  uint64_t v1 = v0[3];
  if (*(void *)(*(void *)(v1 + 24) + 16) >= *(void *)(*(void *)v1 + 16) - 1
    || *(double *)(v1 + 8) < 0.0
    || *(double *)(v1 + 16) <= 1.0e-10)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[5] + 56))(v0[2], 1, 1, v0[4]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v2 = sub_25436D960();
    uint64_t v4 = v3;
    sub_25436D420();
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269DD9B30 + dword_269DD9B30);
    unint64_t v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    *unint64_t v5 = v0;
    v5[1] = sub_254326664;
    return v8(v2, v4, 0, 0, 1);
  }
}

uint64_t sub_254326664()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_25432B118;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_2543267FC;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2543267FC()
{
  uint64_t v1 = (uint64_t *)v0[3];
  unint64_t v2 = *(void *)(v1[3] + 16);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *v1;
  unint64_t v4 = *(void *)(v3 + 16);
  if (v2 >= v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  uint64_t result = sub_2543249B4(v6 + v7 * v2, v0[7]);
  unint64_t v9 = v2 + 1;
  if (v2 + 1 >= v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[5];
  uint64_t v14 = v6 + v7 * v9;
  uint64_t v15 = v0[2];
  uint64_t v16 = v0[3];
  sub_2543249B4(v14, v11);
  sub_25436C700();
  double v18 = v17;
  sub_254309748(v11);
  *(double *)(v16 + 8) = v18 / *(double *)(v16 + 16);
  sub_25432928C(v10, v15);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  uint64_t v19 = *(void *)(v16 + 24);
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  *(void *)(v19 + 16) = v22;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t DKDataLogGenerator.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_2543269AC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  __n128 result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v2;
  return result;
}

uint64_t sub_2543269C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25431B628;
  return DKDataLogGenerator.next()(a1);
}

uint64_t sub_254326A60(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25432B11C;
  return DKDataLogGenerator.next()(a1);
}

uint64_t DKDataLogIndex.deinit()
{
  return v0;
}

uint64_t DKDataLogIndex.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DKDataLogPlayer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for DKDataLogIndex();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t DKDataLogPlayer.init()()
{
  type metadata accessor for DKDataLogIndex();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_254326B9C()
{
  sub_25436CF00();
  *(void *)(v0 + 16) = sub_25436CEF0();
  uint64_t v2 = sub_25436CEC0();
  return MEMORY[0x270FA2498](sub_254326C30, v2, v1);
}

uint64_t sub_254326C30()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254326C90(void *a1)
{
  uint64_t v3 = sub_25436C610();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v26 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  sub_2543277C4(&v27);
  v20[2] = v27;
  uint64_t v21 = v1;
  uint64_t v9 = v27[2];
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    uint64_t v12 = (char *)v27 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v23 = *(void *)(v10 + 56);
    uint64_t v24 = v11;
    unint64_t v13 = v10 + 40;
    uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v22 = (void (**)(uint64_t, char *, uint64_t))(v10 + 16);
    uint64_t v25 = v10;
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v10 - 8);
    v20[1] = v13 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = (uint64_t)v26;
    while (1)
    {
      v24(v8, v12, v3);
      double v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v13;
      (*(void (**)(char *, void, uint64_t, uint64_t))v13)(v8, 0, 1, v3);
      if ((*v14)(v8, 1, v3) == 1) {
        break;
      }
      (*v22)(v16, v8, v3);
      unint64_t v18 = sub_254329698(v16);
      sub_25427D92C(v18);
      (*v15)(v16, v3);
      v12 += v23;
      if (!--v9) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    double v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v17(v8, 1, 1, v3);
  }
  swift_release();
  *(void *)(v21 + 24) = v28;
  return swift_bridgeObjectRelease();
}

uint64_t sub_254326F14@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)a1 = *(void *)(v3 + 24);
  *(double *)(a1 + 8) = a2;
  *(double *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_254326F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  unint64_t v5 = *(void *)(v4 + 16);
  if ((v5 & 0x8000000000000000) != 0 || (uint64_t v6 = *(void *)(v2 + 24), v5 >= *(void *)(v6 + 16)))
  {
    uint64_t v11 = type metadata accessor for DKDataLogStamped(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a2, 1, 1, v11);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DKDataLogStamped(0);
    uint64_t v9 = *(void *)(v8 - 8);
    sub_2543249B4(v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v5, a2);
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
    if (__OFADD__(v5, a1)) {
      __break(1u);
    }
    else {
      *(void *)(v4 + 16) = v5 + a1;
    }
  }
  return result;
}

uint64_t sub_2543270B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  unint64_t v5 = *(void *)(v4 + 16);
  if ((v5 & 0x8000000000000000) != 0 || (uint64_t v6 = *(void *)(v2 + 24), v5 >= *(void *)(v6 + 16)))
  {
    uint64_t v11 = type metadata accessor for DKDataLogStamped(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a2, 1, 1, v11);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DKDataLogStamped(0);
    uint64_t v9 = *(void *)(v8 - 8);
    sub_2543249B4(v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v5, a2);
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
    if (__OFSUB__(v5, a1)) {
      __break(1u);
    }
    else {
      *(void *)(v4 + 16) = v5 - a1;
    }
  }
  return result;
}

void sub_254327208()
{
  *(void *)(*(void *)(v0 + 16) + 16) = 0;
}

uint64_t DKDataLogPlayer.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDataLogPlayer.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_25432727C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_25436D410();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_254327380, 0, 0);
}

uint64_t sub_254327380()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_25436D430();
  uint64_t v5 = sub_254324850(&qword_269DD9BE8, MEMORY[0x263F8F710]);
  sub_25436D860();
  sub_254324850(&qword_269DD9BF0, MEMORY[0x263F8F6D8]);
  sub_25436D440();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_254327520;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_254327520()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2543276DC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2543276DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254327748(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_25436CD00();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x25A2753D0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

void sub_2543277C4(void **a1)
{
  uint64_t v2 = *(void *)(sub_25436C610() - 8);
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v3 = (void *)sub_254345438(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_25432786C(v5);
  *a1 = v3;
}

void sub_25432786C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C610();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v153 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v165 = (char *)&v145 - v8;
  MEMORY[0x270FA5388](v9);
  CGRect v168 = (char *)&v145 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v167 = (char *)&v145 - v12;
  MEMORY[0x270FA5388](v13);
  unint64_t v148 = (char *)&v145 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v155 = (char *)&v145 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v151 = (char *)&v145 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v150 = (char *)&v145 - v20;
  v170 = a1;
  uint64_t v21 = a1[1];
  uint64_t v22 = sub_25436D750();
  if (v22 >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      sub_254328580(0, v21, 1, v170);
    }
    return;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  uint64_t v146 = v22;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          float64x2_t v138 = v28;
          unint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_2543288CC(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            float64x2_t v138 = sub_254345370((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          float64x2_t v143 = &v138[16 * v137 + 32];
          *(void *)float64x2_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_25436CE40();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v25;
    unint64_t v156 = v25 + v27;
  }
  uint64_t v29 = 0;
  uint64_t v161 = v26 + 16;
  uint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  char v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    uint64_t v154 = v29;
    if (v29 + 1 >= v21)
    {
      uint64_t v40 = v29 + 1;
      goto LABEL_69;
    }
    uint64_t v163 = v21;
    os_log_type_t v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_25436C580();
    uint64_t v38 = v37;
    if (v36 != sub_25436C580()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_25436D7B0();
    uint64_t v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    uint64_t v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      uint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        uint64_t v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_25436C580();
        uint64_t v50 = v49;
        if (v48 == sub_25436C580() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_25436D7B0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        uint64_t v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          uint64_t v54 = v163;
          uint64_t v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      uint64_t v40 = v46;
    }
    uint64_t v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    uint64_t v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        uint64_t v63 = &v56[v58];
        uint64_t v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    uint64_t v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_254344E28(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    uint64_t v163 = v40;
    if (v85 >= v84 >> 1)
    {
      float64x2_t v135 = sub_254344E28((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    uint64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    uint64_t v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          long long v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          double v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            float64x2_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        uint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        unint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        float64x2_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        float64x2_t v129 = v28;
        float64x2_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        float64x2_t v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_2543288CC(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)float64x2_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v21 = v170[1];
    uint64_t v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    uint64_t v65 = v54;
  }
  else {
    uint64_t v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      os_log_type_t v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      unint64_t v67 = (char *)(v40 * v66);
      uint64_t v152 = v65;
      do
      {
        uint64_t v70 = 0;
        uint64_t v71 = v31;
        uint64_t v163 = v40;
        uint64_t v160 = v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = (uint64_t)&v67[v70 + *v170];
          uint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_25436C580();
          uint64_t v77 = v76;
          if (v75 == sub_25436C580() && v77 == v78) {
            break;
          }
          char v79 = sub_25436D7B0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          unint64_t v67 = v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          uint64_t v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        unint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        uint64_t v69 = v163;
        unint64_t v67 = v160;
LABEL_60:
        uint64_t v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        uint64_t v31 = v154;
      }
      while (v40 != v152);
      uint64_t v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  sub_25436D4E0();
  __break(1u);
}

void sub_254328580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_25436C610();
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v32 - v9;
  v12.n128_f64[0] = MEMORY[0x270FA5388](v10);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v38 = v11 + 16;
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      uint64_t v22 = v37;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v37)(v47, v21, v6, v12);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_25436C580();
      uint64_t v25 = v24;
      if (v23 == sub_25436C580() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        v17(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return;
        }
        goto LABEL_6;
      }
      char v27 = sub_25436D7B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      v28(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      unint64_t v30 = (char *)(v29 + v41 + v18);
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      v31(v30, (uint64_t)v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_2543288CC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_25436C610();
  uint64_t v8 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v58 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v58 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          uint64_t v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_25436C580();
          uint64_t v49 = v48;
          if (v47 == sub_25436C580() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_25436D7B0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_254345230(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_25436C580();
        uint64_t v30 = v29;
        if (v28 == sub_25436C580() && v30 == v31) {
          break;
        }
        char v34 = sub_25436D7B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

unsigned char *sub_254328F94@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_254329314(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_2543293D8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_254329454((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_25432900C(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_25432907C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D2A0();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_254329108()
{
  unint64_t result = qword_269DD9B08;
  if (!qword_269DD9B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9B08);
  }
  return result;
}

uint64_t sub_25432915C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_25436CCA0();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return MEMORY[0x270F9D8F0](a1, a2, a3, a4);
}

unint64_t sub_2543291F8()
{
  unint64_t result = qword_269DD9B10;
  if (!qword_269DD9B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9B10);
  }
  return result;
}

unint64_t sub_25432924C()
{
  unint64_t result = qword_269DD9B18;
  if (!qword_269DD9B18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_269DD9B18);
  }
  return result;
}

uint64_t sub_25432928C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DKDataLogIndex()
{
  return self;
}

uint64_t sub_254329314(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2543293D8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25436C4F0();
  swift_allocObject();
  uint64_t result = sub_25436C4A0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25436C650();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_254329454(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_25436C4F0();
  swift_allocObject();
  uint64_t result = sub_25436C4A0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_2543294D8(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_254329314(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_2543293D8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_254329454((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_25432953C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000025437DBA0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2543295C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778732 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_254329698(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9BD8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v41 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for DKDataLogStamped(0);
  uint64_t v40 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v39 - v7;
  uint64_t v9 = sub_25436C480();
  unint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = (void (**)(char *, uint64_t))v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25436CC50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  sub_25436CC40();
  uint64_t v17 = sub_25436CBC0();
  v39[1] = a1;
  uint64_t v45 = v12;
  uint64_t v42 = v8;
  unint64_t v43 = v5;
  uint64_t v53 = v17;
  unint64_t v54 = v18;
  sub_25436C470();
  sub_2543291F8();
  uint64_t v19 = sub_25436D1B0();
  (*(void (**)(char *, void))(v48 + 8))(v11, v49);
  swift_bridgeObjectRelease();
  sub_25436C3F0();
  swift_allocObject();
  uint64_t v46 = sub_25436C3E0();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v49 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v44 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56);
    swift_bridgeObjectRetain();
    v39[0] = v19;
    uint64_t v21 = (unint64_t *)(v19 + 40);
    unint64_t v48 = MEMORY[0x263F8EE78];
    uint64_t v22 = (uint64_t)v41;
    uint64_t v23 = v45;
    do
    {
      unint64_t v24 = *v21;
      uint64_t v53 = *(v21 - 1);
      unint64_t v54 = v24;
      uint64_t v51 = 10;
      unint64_t v52 = 0xE100000000000000;
      v50[0] = 0;
      v50[1] = 0xE000000000000000;
      sub_25436D1C0();
      sub_25436CC40();
      uint64_t v25 = sub_25436CC10();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      (*v49)(v15, v23);
      if (v27 >> 60 != 15)
      {
        sub_254324850(&qword_269DD9BE0, (void (*)(uint64_t))type metadata accessor for DKDataLogStamped);
        uint64_t v28 = v47;
        sub_25436C3D0();
        (*v44)(v22, 0, 1, v28);
        uint64_t v29 = (uint64_t)v42;
        sub_25432928C(v22, (uint64_t)v42);
        sub_2543249B4(v29, (uint64_t)v43);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v30 = v48;
        }
        else {
          unint64_t v30 = sub_254258D80(0, *(void *)(v48 + 16) + 1, 1, v48);
        }
        unint64_t v32 = *(void *)(v30 + 16);
        unint64_t v31 = *(void *)(v30 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v30 = sub_254258D80(v31 > 1, v32 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v32 + 1;
        unint64_t v33 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        unint64_t v48 = v30;
        sub_25432928C((uint64_t)v43, v30 + v33 + *(void *)(v40 + 72) * v32);
        sub_25431C740(v25, v27);
        sub_254309748((uint64_t)v42);
        uint64_t v22 = (uint64_t)v41;
        uint64_t v23 = v45;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
    uint64_t v19 = v39[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v48 = MEMORY[0x263F8EE78];
  }
  LOBYTE(v50[0]) = 12;
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  sub_25436D290();
  swift_bridgeObjectRelease();
  uint64_t v53 = 0x2064616552;
  unint64_t v54 = 0xE500000000000000;
  uint64_t v34 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  uint64_t v51 = v34;
  sub_25436D760();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  sub_25436CCB0();
  sub_25436C580();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  uint64_t v35 = v53;
  unint64_t v36 = v54;
  os_log_type_t v37 = sub_25436D020();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v35, v36, v37);
  swift_bridgeObjectRelease();
  swift_release();
  return v48;
}

unint64_t sub_254329DDC()
{
  unint64_t result = qword_269DD9B40[0];
  if (!qword_269DD9B40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269DD9B40);
  }
  return result;
}

uint64_t sub_254329E30()
{
  return MEMORY[0x263F8E658];
}

void *__swift_initWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

void *__swift_assignWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_assignWithTake_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKDataLog(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKDataLog(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKDataLog()
{
  return &type metadata for DKDataLog;
}

uint64_t *initializeBufferWithCopyOfBuffer for DKDataLogStamped(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_25436C7B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for DKDataLogStamped(uint64_t a1)
{
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25432A2D8);
}

uint64_t sub_25432A2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25436C7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25432A3AC);
}

uint64_t sub_25432A3AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25436C7B0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25432A468()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25432A500()
{
  return type metadata accessor for DKDataLogRecorder(0);
}

uint64_t type metadata accessor for DKDataLogRecorder(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DD9B68);
}

uint64_t sub_25432A528()
{
  uint64_t result = sub_25436C800();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKDataLogRecorder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKDataLogRecorder);
}

uint64_t dispatch thunk of DKDataLogRecorder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of DKDataLogRecorder.save()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 264) + **(int **)(*(void *)v0 + 264));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426C7EC;
  return v4();
}

uint64_t dispatch thunk of DKDataLogRecorder.log(log:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 272) + **(int **)(*(void *)v1 + 272));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25426C7EC;
  return v6(a1);
}

uint64_t destroy for DKDataLogGenerator()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DKDataLogGenerator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DKDataLogGenerator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DKDataLogGenerator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DKDataLogGenerator()
{
  return &type metadata for DKDataLogGenerator;
}

uint64_t method lookup function for DKDataLogIndex(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKDataLogIndex);
}

uint64_t type metadata accessor for DKDataLogPlayer()
{
  return self;
}

uint64_t method lookup function for DKDataLogPlayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKDataLogPlayer);
}

uint64_t dispatch thunk of DKDataLogPlayer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKDataLogPlayer.openVideosMetafile()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 152) + **(int **)(*(void *)v0 + 152));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25426BA30;
  return v4();
}

uint64_t dispatch thunk of DKDataLogPlayer.load(urls:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKDataLogPlayer.play(delay:rate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKDataLogPlayer.next(skip:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKDataLogPlayer.prev(skip:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKDataLogPlayer.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

unsigned char *storeEnumTagSinglePayload for DKDataLogStamped.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25432AC54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKDataLogStamped.CodingKeys()
{
  return &type metadata for DKDataLogStamped.CodingKeys;
}

ValueMetadata *type metadata accessor for DKDataLog.CodingKeys()
{
  return &type metadata for DKDataLog.CodingKeys;
}

unsigned char *_s23IntelligentTrackingCore9DKDataLogO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25432AD3CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKDataLog.IntelligentTrackingStateCodingKeys()
{
  return &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys;
}

unint64_t sub_25432AD78()
{
  unint64_t result = qword_269DD9B90;
  if (!qword_269DD9B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9B90);
  }
  return result;
}

unint64_t sub_25432ADD0()
{
  unint64_t result = qword_269DD9B98;
  if (!qword_269DD9B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9B98);
  }
  return result;
}

unint64_t sub_25432AE28()
{
  unint64_t result = qword_269DD9BA0;
  if (!qword_269DD9BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BA0);
  }
  return result;
}

unint64_t sub_25432AE80()
{
  unint64_t result = qword_269DD9BA8;
  if (!qword_269DD9BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BA8);
  }
  return result;
}

unint64_t sub_25432AED8()
{
  unint64_t result = qword_269DD9BB0;
  if (!qword_269DD9BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BB0);
  }
  return result;
}

unint64_t sub_25432AF30()
{
  unint64_t result = qword_269DD9BB8;
  if (!qword_269DD9BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BB8);
  }
  return result;
}

unint64_t sub_25432AF88()
{
  unint64_t result = qword_269DD9BC0;
  if (!qword_269DD9BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BC0);
  }
  return result;
}

unint64_t sub_25432AFE0()
{
  unint64_t result = qword_269DD9BC8;
  if (!qword_269DD9BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BC8);
  }
  return result;
}

unint64_t sub_25432B038()
{
  unint64_t result = qword_269DD9BD0;
  if (!qword_269DD9BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9BD0);
  }
  return result;
}

void *sub_25432B08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  unint64_t result = sub_25432900C((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_25432B0F8, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_25432B0F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25432907C(a1, a2);
}

uint64_t DKFramingEngine.__allocating_init(config:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_254330088(a1);
  swift_release();
  return v2;
}

uint64_t sub_25432B16C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9EC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436E690;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = sub_254268D44((uint64_t)&unk_2703B2078);
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_254268D44((uint64_t)&unk_2703B20F8);
  unint64_t v1 = sub_254268D64(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9EC8);
  uint64_t result = swift_arrayDestroy();
  qword_269DDB0F0 = v1;
  return result;
}

uint64_t sub_25432B228()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9EB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436E690;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = sub_254268D84((uint64_t)&unk_2703B2178);
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_254268D84((uint64_t)&unk_2703B21E0);
  unint64_t v1 = sub_254268E90(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9EB8);
  uint64_t result = swift_arrayDestroy();
  qword_269DDB0F8 = v1;
  return result;
}

unint64_t sub_25432B2E4()
{
  unint64_t result = sub_254269118((uint64_t)&unk_2703B22B8);
  qword_269DDB100 = result;
  return result;
}

uint64_t DKFramingEngine.Config.deinit()
{
  return v0;
}

uint64_t DKFramingEngine.Config.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static DKFramingEngine.Orientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DKFramingEngine.Orientation.hash(into:)()
{
  return sub_25436D900();
}

uint64_t sub_25432B368()
{
  if (*v0) {
    return 0x7469617274726F70;
  }
  else {
    return 0x70616373646E616CLL;
  }
}

uint64_t sub_25432B3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254331AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25432B3D0(uint64_t a1)
{
  unint64_t v2 = sub_25433029C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432B40C(uint64_t a1)
{
  unint64_t v2 = sub_25433029C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432B448(uint64_t a1)
{
  unint64_t v2 = sub_254330344();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432B484(uint64_t a1)
{
  unint64_t v2 = sub_254330344();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432B4C0(uint64_t a1)
{
  unint64_t v2 = sub_2543302F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432B4FC(uint64_t a1)
{
  unint64_t v2 = sub_2543302F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFramingEngine.Orientation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C08);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C10);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C18);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25433029C();
  sub_25436D950();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2543302F0();
    uint64_t v14 = v18;
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_254330344();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t DKFramingEngine.Orientation.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C38);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C40);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C48);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25433029C();
  uint64_t v11 = v32;
  sub_25436D940();
  if (v11) {
    goto LABEL_6;
  }
  unint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_25436D660();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_25436D350();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *char v22 = &type metadata for DKFramingEngine.Orientation;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2543302F0();
    unint64_t v18 = v14;
    sub_25436D5B0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_254330344();
    sub_25436D5B0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_25432BC38@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKFramingEngine.Orientation.init(from:)(a1, a2);
}

uint64_t sub_25432BC50(void *a1)
{
  return DKFramingEngine.Orientation.encode(to:)(a1);
}

uint64_t sub_25432BC68(uint64_t a1)
{
  unint64_t v2 = sub_254330440();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432BCA4(uint64_t a1)
{
  unint64_t v2 = sub_254330440();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432BCE0()
{
  if (*v0) {
    return 0x6C61756E616DLL;
  }
  else {
    return 0x6974616D6F747561;
  }
}

uint64_t sub_25432BD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254331BA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25432BD44(uint64_t a1)
{
  unint64_t v2 = sub_254330398();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432BD80(uint64_t a1)
{
  unint64_t v2 = sub_254330398();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432BDBC(uint64_t a1)
{
  unint64_t v2 = sub_2543303EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432BDF8(uint64_t a1)
{
  unint64_t v2 = sub_2543303EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFramingEngine.Mode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C50);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C58);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C60);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254330398();
  sub_25436D950();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2543303EC();
    uint64_t v14 = v18;
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_254330440();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t DKFramingEngine.Mode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C80);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C88);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C90);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254330398();
  uint64_t v11 = v32;
  sub_25436D940();
  if (v11) {
    goto LABEL_6;
  }
  unint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_25436D660();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_25436D350();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *char v22 = &type metadata for DKFramingEngine.Mode;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2543303EC();
    unint64_t v18 = v14;
    sub_25436D5B0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_254330440();
    sub_25436D5B0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_25432C534@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKFramingEngine.Mode.init(from:)(a1, a2);
}

uint64_t sub_25432C54C(void *a1)
{
  return DKFramingEngine.Mode.encode(to:)(a1);
}

uint64_t sub_25432C564(uint64_t a1)
{
  unint64_t v2 = sub_2543305E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432C5A0(uint64_t a1)
{
  unint64_t v2 = sub_2543305E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432C5DC(uint64_t a1)
{
  unint64_t v2 = sub_2543304E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432C618(uint64_t a1)
{
  unint64_t v2 = sub_2543304E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432C654()
{
  uint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1952867692;
      break;
    case 2:
      uint64_t result = 0x7468676972;
      break;
    case 3:
      uint64_t result = 0x69547265746E6563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25432C6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254331C98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25432C704(uint64_t a1)
{
  unint64_t v2 = sub_254330494();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432C740(uint64_t a1)
{
  unint64_t v2 = sub_254330494();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432C77C(uint64_t a1)
{
  unint64_t v2 = sub_254330590();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432C7B8(uint64_t a1)
{
  unint64_t v2 = sub_254330590();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432C7F4(uint64_t a1)
{
  unint64_t v2 = sub_25433053C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432C830(uint64_t a1)
{
  unint64_t v2 = sub_25433053C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFramingEngine.HorizontalFraming.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9C98);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CA0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CA8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CB0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CB8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254330494();
  sub_25436D950();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_254330590();
      char v17 = v23;
      sub_25436D680();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_25433053C();
      char v17 = v26;
      sub_25436D680();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_2543304E8();
      char v17 = v29;
      sub_25436D680();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_2543305E4();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKFramingEngine.HorizontalFraming.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CE8);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9CF8);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D00);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D08);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_254330494();
  uint64_t v19 = v52;
  sub_25436D940();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_25436D660();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_25436D350();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *uint64_t v29 = &type metadata for DKFramingEngine.HorizontalFraming;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_254330590();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_25436D5B0();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_25433053C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_25436D5B0();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_2543304E8();
      uint64_t v37 = v52;
      sub_25436D5B0();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_2543305E4();
      uint64_t v26 = v52;
      sub_25436D5B0();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      unint64_t v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_25432D2E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKFramingEngine.HorizontalFraming.init(from:)(a1, a2);
}

uint64_t sub_25432D2FC(void *a1)
{
  return DKFramingEngine.HorizontalFraming.encode(to:)(a1);
}

BOOL static DKFramingEngine.VerticalFraming.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKFramingEngine.VerticalFraming.hash(into:)()
{
  return sub_25436D900();
}

uint64_t sub_25432D354(uint64_t a1)
{
  unint64_t v2 = sub_25433068C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432D390(uint64_t a1)
{
  unint64_t v2 = sub_25433068C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432D3CC(uint64_t a1)
{
  unint64_t v2 = sub_254330734();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432D408(uint64_t a1)
{
  unint64_t v2 = sub_254330734();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432D444()
{
  uint64_t v1 = 7368564;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D6F74746F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265746E6563;
  }
}

uint64_t sub_25432D490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254331E4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25432D4B8(uint64_t a1)
{
  unint64_t v2 = sub_254330638();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432D4F4(uint64_t a1)
{
  unint64_t v2 = sub_254330638();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25432D530(uint64_t a1)
{
  unint64_t v2 = sub_2543306E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25432D56C(uint64_t a1)
{
  unint64_t v2 = sub_2543306E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKFramingEngine.VerticalFraming.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D10);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D18);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D20);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D28);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254330638();
  sub_25436D950();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2543306E0();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_25433068C();
      char v17 = v23;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_254330734();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DKFramingEngine.VerticalFraming.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D50);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D58);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D60);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9D68);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254330638();
  uint64_t v12 = (uint64_t)v39;
  sub_25436D940();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_25436D660();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_25436D350();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *uint64_t v23 = &type metadata for DKFramingEngine.VerticalFraming;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2543306E0();
      uint64_t v18 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_25433068C();
      uint64_t v25 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_254330734();
    uint64_t v24 = v30;
    sub_25436D5B0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_25432DEC8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKFramingEngine.VerticalFraming.init(from:)(a1, a2);
}

uint64_t sub_25432DEE0(void *a1)
{
  return DKFramingEngine.VerticalFraming.encode(to:)(a1);
}

uint64_t DKFramingEngine.init(config:)(uint64_t a1)
{
  uint64_t v1 = sub_254330088(a1);
  swift_release();
  return v1;
}

void sub_25432DF2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v61 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v53 - v7;
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v15 - 8);
  int v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DKCamera();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v65 = (uint64_t)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25432E6D8(a1);
  if (*(unsigned char *)(v1 + 41)) {
    return;
  }
  if ((*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) | 4) != 5)
  {
    sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v17, &qword_269DD7808);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    {
      sub_25425042C((uint64_t)v17, &qword_269DD7808);
      return;
    }
    uint64_t v21 = (uint64_t)v17;
    uint64_t v22 = v65;
    sub_2542502F0(v21, v65);
    unint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
    if (!v23)
    {
      sub_254250354(v22);
      return;
    }
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v52 = sub_25436D530();
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_11:
        unint64_t v58 = v23 >> 62;
        unint64_t v59 = v23;
        if ((v23 & 0xC000000000000001) != 0)
        {
          uint64_t v25 = MEMORY[0x25A275A00](0, v23);
        }
        else
        {
          if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          uint64_t v25 = *(void *)(v23 + 32);
          swift_retain();
        }
        uint64_t v26 = *(void (**)(char *))(v9 + 16);
        uint64_t v56 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
        v26(v14);
        uint64_t v60 = v25;
        uint64_t v54 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
        char v55 = (void (*)(char *, uint64_t, uint64_t))v26;
        v26(v11);
        sub_254331F84();
        int v57 = sub_25436CBB0();
        char v27 = *(void (**)(char *, uint64_t))(v9 + 8);
        v27(v11, v8);
        v27(v14, v8);
        if ((v57 & 1) == 0)
        {
          v55(v14, v54, v8);
          (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v56, v14, v8);
          uint64_t v29 = v62;
          uint64_t v28 = v63;
          uint64_t v30 = v64;
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v64);
          (*(void (**)(uint64_t, char *, uint64_t))(v28 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v29, v30);
        }
        uint64_t v31 = v65;
        unsigned __int8 v72 = *(unsigned char *)(v65 + 1);
        sub_25432EB18(&v72);
        uint64_t v32 = v60;
        char v33 = *(unsigned char *)(v60 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
        *(unsigned char *)(v2 + 40) = v33;
        unint64_t v34 = v58;
        if ((v33 & 0xFE) == 2)
        {
          char v66 = 0;
          uint64_t v35 = (unsigned __int8 *)&v66;
        }
        else
        {
          char v71 = 1;
          uint64_t v35 = (unsigned __int8 *)&v71;
        }
        sub_25432EE30(v35);
        if (v34)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_25436D530();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v36 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v36 < 2)
        {
          if ((sub_25432F03C(v32) & 1) == 0)
          {
            if (*(unsigned char *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification))
            {
              sub_254250354(v31);
              swift_release();
              return;
            }
            unsigned int v38 = (0x10200u >> (8
                              * *(unsigned char *)(v32
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection))) & 3;
            uint64_t v39 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
            char v40 = v62;
            uint64_t v41 = v63;
            char v42 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
            uint64_t v43 = v64;
            v42(v62, v39, v64);
            uint64_t v44 = v61;
            v42(v61, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate, v43);
            sub_25436C700();
            double v46 = v45;
            uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
            v47(v44, v43);
            v47(v40, v43);
            v42(v40, v39, v43);
            v42(v44, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v43);
            sub_25436C700();
            double v49 = v48;
            v47(v44, v43);
            v47(v40, v43);
            char v50 = v38;
            if (v38 - 1 >= 2)
            {
              uint64_t v31 = v65;
              if (v46 <= 3.0 || v49 <= 3.0) {
                goto LABEL_28;
              }
              char v69 = v50;
              uint64_t v51 = (unsigned __int8 *)&v69;
            }
            else
            {
              uint64_t v31 = v65;
              if (v46 <= 1.0 || v49 <= 3.0) {
                goto LABEL_28;
              }
              char v70 = v50;
              uint64_t v51 = (unsigned __int8 *)&v70;
            }
            sub_25432EC24(v51);
LABEL_28:
            swift_release();
            sub_254250354(v31);
            return;
          }
          char v68 = 0;
          uint64_t v37 = (unsigned __int8 *)&v68;
        }
        else
        {
          char v67 = 3;
          uint64_t v37 = (unsigned __int8 *)&v67;
        }
        sub_25432EC24(v37);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v24) {
        goto LABEL_11;
      }
    }
    sub_254250354(v22);
    swift_bridgeObjectRelease();
    return;
  }
  sub_25432EA84();
}

void sub_25432E6D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DKCamera();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) & 1) == 0)
  {
    uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID + 8);
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
      sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v6, &qword_269DD7808);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_25425042C((uint64_t)v6, &qword_269DD7808);
        return;
      }
      sub_2542502F0((uint64_t)v6, (uint64_t)v10);
      uint64_t v13 = (double *)&v10[*(int *)(v7 + 40)];
      if ((_BYTE)v13[2]) {
        goto LABEL_11;
      }
      double v15 = *v13;
      double v14 = v13[1];
      char v25 = 3;
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_25436D290();
      sub_25436CCB0();
      sub_25436CCB0();
      sub_25436CCB0();
      v22[23] = *(unsigned char *)(v2 + 44);
      sub_25436D460();
      uint64_t v16 = v23;
      unint64_t v17 = v24;
      os_log_type_t v18 = sub_25436D000();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v25, v16, v17, v18);
      swift_bridgeObjectRelease();
      if (v12 == 0xD000000000000012 && v11 == 0x800000025437DED0 || (sub_25436D7B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        double v19 = 1.0;
        double v20 = 0.5;
      }
      else if (v12 == 0xD000000000000011 && v11 == 0x800000025437DEF0 || (sub_25436D7B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        double v19 = 1.0;
        double v20 = 1.0;
      }
      else
      {
        if (v12 == 0xD000000000000011 && v11 == 0x800000025437DF10)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v21 = sub_25436D7B0();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0) {
            goto LABEL_11;
          }
        }
        if (*(unsigned char *)(v2 + 44) != 1) {
          goto LABEL_11;
        }
        double v19 = 16.0;
        double v20 = 9.0;
      }
      sub_25432F258(0, v19, v20, v15, v14);
LABEL_11:
      sub_254250354((uint64_t)v10);
    }
  }
}

uint64_t sub_25432EA84()
{
  unsigned __int8 v7 = 0;
  sub_25432EC24(&v7);
  if (*(unsigned char *)(v0 + 40) == 3)
  {
    char v4 = 0;
    uint64_t v1 = (unsigned __int8 *)&v4;
  }
  else
  {
    char v6 = 1;
    uint64_t v1 = (unsigned __int8 *)&v6;
  }
  sub_25432EE30(v1);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = 0;
  char v5 = 3;
  os_log_type_t v2 = sub_25436D020();
  return _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v5, 0x7266207465736552, 0xED0000676E696D61, v2);
}

unsigned __int8 *sub_25432EB18(unsigned __int8 *result)
{
  unsigned int v2 = *result - 1;
  if (v2 > 1)
  {
    if (!v1[44]) {
      return result;
    }
    goto LABEL_5;
  }
  if ((v1[44] & 1) == 0)
  {
LABEL_5:
    v1[44] = v2 < 2;
    LOBYTE(v6) = v1[42];
    sub_25432EC24((unsigned __int8 *)&v6);
    LOBYTE(v6) = v1[43];
    sub_25432EE30((unsigned __int8 *)&v6);
    char v8 = 3;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    sub_25436D290();
    sub_25436CCB0();
    sub_25436D460();
    uint64_t v3 = v6;
    unint64_t v4 = v7;
    os_log_type_t v5 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v8, v3, v4, v5);
    return (unsigned __int8 *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25432EC24(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (*(unsigned __int8 *)(v2 + 42) != v9)
  {
    sub_25436C7A0();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate, v8, v4);
    *(unsigned char *)(v2 + 42) = v9;
    uint64_t v10 = *(void *)(v2 + 24);
    if (*(void *)(v10 + 16))
    {
      uint64_t result = sub_254351600(*(unsigned __int8 *)(v2 + 44));
      if (v11)
      {
        uint64_t v12 = *(void *)(*(void *)(v10 + 56) + 8 * result);
        if (*(void *)(v12 + 16))
        {
          uint64_t result = sub_2543517E0(v9);
          if (v13)
          {
            *(_OWORD *)(v2 + 48) = *(_OWORD *)(*(void *)(v12 + 56) + 16 * result);
            char v20 = 3;
            uint64_t v18 = 0;
            unint64_t v19 = 0xE000000000000000;
            sub_25436D290();
            sub_25436CCB0();
            HIBYTE(v17) = *(unsigned char *)(v2 + 42);
            sub_25436D460();
            sub_25436CCB0();
            HIBYTE(v17) = v9;
            sub_25436D460();
            uint64_t v14 = v18;
            unint64_t v15 = v19;
            os_log_type_t v16 = sub_25436D020();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, v14, v15, v16);
            return swift_bridgeObjectRelease();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_25432EE30(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (*(unsigned __int8 *)(v2 + 43) != v9)
  {
    sub_25436C7A0();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v8, v4);
    *(unsigned char *)(v2 + 43) = v9;
    uint64_t v10 = *(void *)(v2 + 32);
    if (*(void *)(v10 + 16))
    {
      uint64_t result = sub_254351600(*(unsigned __int8 *)(v2 + 44));
      if (v11)
      {
        uint64_t v12 = *(void *)(*(void *)(v10 + 56) + 8 * result);
        if (*(void *)(v12 + 16))
        {
          uint64_t result = sub_2543517E0(v9);
          if (v13)
          {
            *(_OWORD *)(v2 + 64) = *(_OWORD *)(*(void *)(v12 + 56) + 16 * result);
            char v20 = 3;
            uint64_t v18 = 0;
            unint64_t v19 = 0xE000000000000000;
            sub_25436D290();
            sub_25436CCB0();
            HIBYTE(v17) = *(unsigned char *)(v2 + 43);
            sub_25436D460();
            sub_25436CCB0();
            HIBYTE(v17) = v9;
            sub_25436D460();
            uint64_t v14 = v18;
            unint64_t v15 = v19;
            os_log_type_t v16 = sub_25436D020();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, v14, v15, v16);
            return swift_bridgeObjectRelease();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_25432F03C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542503C8(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, (uint64_t)v6, &qword_269DD7810);
  uint64_t v7 = type metadata accessor for DKMotion3();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result)
  {
    sub_25425042C((uint64_t)v6, &qword_269DD7810);
    return 0;
  }
  else
  {
    uint64_t v9 = *(void *)&v6[*(int *)(v7 + 20)];
    if (*(void *)(v9 + 16) < 3uLL)
    {
      __break(1u);
    }
    else
    {
      double v10 = *(double *)(v9 + 48);
      sub_25425042C((uint64_t)v6, &qword_269DD7810);
      uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera;
      BOOL v12 = v10 >= 0.65 && v10 <= 0.85;
      if (!v12
        && v10 < 0.65 != *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera))
      {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = v10 < 0.65;
        char v19 = 3;
        unint64_t v17 = 0;
        unint64_t v18 = 0xE000000000000000;
        sub_25436D290();
        swift_bridgeObjectRelease();
        unint64_t v17 = 0xD000000000000023;
        unint64_t v18 = 0x800000025437DE60;
        sub_25436CCB0();
        swift_bridgeObjectRelease();
        uint64_t v13 = v17;
        unint64_t v14 = v18;
        os_log_type_t v15 = sub_25436D020();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v19, v13, v14, v15);
        swift_bridgeObjectRelease();
        uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera;
      }
      return *(unsigned __int8 *)(v2 + v11);
    }
  }
  return result;
}

void sub_25432F258(char a1, double a2, double a3, double a4, double a5)
{
  if (*(unsigned char *)(v5 + 44)) {
    double v10 = a4;
  }
  else {
    double v10 = a5;
  }
  if (*(unsigned char *)(v5 + 44)) {
    double v11 = a5;
  }
  else {
    double v11 = a4;
  }
  double v12 = a2 / a3;
  if (a2 / a3 >= v11 / v10)
  {
    double v18 = v11 / v12;
    double v15 = (v10 - v18) * 0.5 / v10;
    double v16 = v18 / v10;
    double v14 = 0.0;
    double v17 = 1.0;
  }
  else
  {
    double v13 = v12 * v10;
    double v14 = (v11 - v13) * 0.5 / v11;
    double v15 = 0.0;
    double v16 = 1.0;
    double v17 = v13 / v11;
  }
  v21.origin.CGFloat x = v14;
  v21.origin.CGFloat y = v15;
  v21.size.CGFloat width = v17;
  v21.size.CGFloat height = v16;
  if (!CGRectEqualToRect(v21, *(CGRect *)(v5 + 80)))
  {
    sub_25432F464(a1 & 1, v14, v15, v17, v16);
    if (v6) {
      return;
    }
    char v20 = 3;
    sub_25436D290();
    sub_25436CCB0();
    type metadata accessor for CGSize(0);
    sub_25436D460();
    sub_25436CCB0();
    type metadata accessor for CGRect(0);
    sub_25436D460();
    os_log_type_t v19 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, 0, 0xE000000000000000, v19);
    swift_bridgeObjectRelease();
  }
  if (a1) {
    *(unsigned char *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 1;
  }
}

void sub_25432F464(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  if (qword_269DD76A0 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_269DDB100;
  if (*(void *)(qword_269DDB100 + 16))
  {
    uint64_t v13 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
    if (v14)
    {
      if (*(void *)(v12 + 16))
      {
        double v15 = *(double *)(*(void *)(v12 + 56) + 16 * v13);
        uint64_t v16 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
        if (v17)
        {
          double v18 = *(double *)(*(void *)(v12 + 56) + 16 * v16 + 8);
          v92.origin.CGFloat x = a2;
          v92.origin.CGFloat y = a3;
          v92.size.CGFloat width = a4;
          v92.size.CGFloat height = a5;
          if (CGRectGetMinX(v92) < 0.0) {
            goto LABEL_15;
          }
          v93.origin.CGFloat x = a2;
          v93.origin.CGFloat y = a3;
          v93.size.CGFloat width = a4;
          v93.size.CGFloat height = a5;
          if (CGRectGetMinX(v93) > 1.0) {
            goto LABEL_15;
          }
          v94.origin.CGFloat x = a2;
          v94.origin.CGFloat y = a3;
          v94.size.CGFloat width = a4;
          v94.size.CGFloat height = a5;
          double MaxX = CGRectGetMaxX(v94);
          v95.origin.CGFloat x = a2;
          v95.origin.CGFloat y = a3;
          v95.size.CGFloat width = a4;
          v95.size.CGFloat height = a5;
          if (MaxX <= CGRectGetMinX(v95)) {
            goto LABEL_15;
          }
          v96.origin.CGFloat x = a2;
          v96.origin.CGFloat y = a3;
          v96.size.CGFloat width = a4;
          v96.size.CGFloat height = a5;
          if (CGRectGetMaxX(v96) > 1.0) {
            goto LABEL_15;
          }
          v97.origin.CGFloat x = a2;
          v97.origin.CGFloat y = a3;
          v97.size.CGFloat width = a4;
          v97.size.CGFloat height = a5;
          if (CGRectGetMinY(v97) < 0.0) {
            goto LABEL_15;
          }
          v98.origin.CGFloat x = a2;
          v98.origin.CGFloat y = a3;
          v98.size.CGFloat width = a4;
          v98.size.CGFloat height = a5;
          if (CGRectGetMinY(v98) > 1.0) {
            goto LABEL_15;
          }
          v99.origin.CGFloat x = a2;
          v99.origin.CGFloat y = a3;
          v99.size.CGFloat width = a4;
          v99.size.CGFloat height = a5;
          double MaxY = CGRectGetMaxY(v99);
          v100.origin.CGFloat x = a2;
          v100.origin.CGFloat y = a3;
          v100.size.CGFloat width = a4;
          v100.size.CGFloat height = a5;
          if (MaxY <= CGRectGetMinY(v100)
            || (v101.origin.CGFloat x = a2,
                v101.origin.CGFloat y = a3,
                v101.size.CGFloat width = a4,
                v101.size.CGFloat height = a5,
                CGRectGetMaxY(v101) > 1.0))
          {
LABEL_15:
            sub_254261A48();
            swift_allocError();
            *(void *)uint64_t v21 = 0xD000000000000029;
            unint64_t v22 = 0x800000025437DF90;
LABEL_16:
            *(void *)(v21 + 8) = v22;
            *(unsigned char *)(v21 + 16) = 2;
            swift_willThrow();
            return;
          }
          v102.origin.CGFloat x = a2;
          v102.origin.CGFloat y = a3;
          v102.size.CGFloat width = a4;
          v102.size.CGFloat height = a5;
          if (CGRectGetWidth(v102) < v15
            || (v103.origin.CGFloat x = a2,
                v103.origin.CGFloat y = a3,
                v103.size.CGFloat width = a4,
                v103.size.CGFloat height = a5,
                CGRectGetHeight(v103) < v18))
          {
            LOBYTE(v85) = 3;
            sub_25436D290();
            swift_bridgeObjectRelease();
            CGFloat v87 = -2.31584178e77;
            unint64_t v88 = 0x800000025437DF30;
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            os_log_type_t v23 = sub_25436D020();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v85, 0xD000000000000028, 0x800000025437DF30, v23);
            swift_bridgeObjectRelease();
            CGFloat v87 = 0.0;
            unint64_t v88 = 0xE000000000000000;
            sub_25436D290();
            swift_bridgeObjectRelease();
            CGFloat v87 = -2.31584178e77;
            unint64_t v88 = 0x800000025437DF60;
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            CGFloat v24 = v87;
            unint64_t v22 = v88;
            sub_254261A48();
            swift_allocError();
            *(CGFloat *)uint64_t v21 = v24;
            goto LABEL_16;
          }
          *(CGFloat *)(v6 + 80) = a2;
          *(CGFloat *)(v6 + 88) = a3;
          *(CGFloat *)(v6 + 96) = a4;
          *(CGFloat *)(v6 + 104) = a5;
          if (qword_269DD7698 != -1) {
            swift_once();
          }
          for (uint64_t i = 0; i != 3; ++i)
          {
            uint64_t v26 = qword_269DDB0F8;
            if (*(void *)(qword_269DDB0F8 + 16))
            {
              uint64_t v27 = byte_2703B2308[i + 32];
              uint64_t v28 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
              if (v29)
              {
                uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
                if (*(void *)(v30 + 16))
                {
                  uint64_t v31 = sub_2543517E0(v27);
                  if (v32)
                  {
                    char v33 = (double *)(*(void *)(v30 + 56) + 16 * v31);
                    double v82 = *v33;
                    double v91 = v33[1];
                    v104.origin.CGFloat x = a2;
                    v104.origin.CGFloat y = a3;
                    v104.size.CGFloat width = a4;
                    v104.size.CGFloat height = a5;
                    double v34 = CGRectGetMaxY(v104);
                    v105.origin.CGFloat x = a2;
                    v105.origin.CGFloat y = a3;
                    v105.size.CGFloat width = a4;
                    v105.size.CGFloat height = a5;
                    double MinY = CGRectGetMinY(v105);
                    v106.origin.CGFloat x = a2;
                    v106.origin.CGFloat y = a3;
                    v106.size.CGFloat width = a4;
                    v106.size.CGFloat height = a5;
                    double v36 = CGRectGetMinY(v106);
                    v107.origin.CGFloat x = a2;
                    v107.origin.CGFloat y = a3;
                    v107.size.CGFloat width = a4;
                    v107.size.CGFloat height = a5;
                    double v37 = CGRectGetMinY(v107);
                    char v38 = *(unsigned char *)(v6 + 44);
                    uint64_t v39 = sub_254277CEC();
                    char v40 = sub_2542F4750(&v85, v38);
                    if (*v41)
                    {
                      uint64_t v43 = sub_2542F47B4(v84, v27);
                      if ((*(unsigned char *)(v42 + 16) & 1) == 0)
                      {
                        double v44 = v37 + v91 * (v34 - MinY);
                        *(double *)uint64_t v42 = v36 + v82 * (v34 - MinY);
                        *(double *)(v42 + 8) = v44;
                      }
                      ((void (*)(void *, void))v43)(v84, 0);
                    }
                    ((void (*)(uint64_t *, void))v40)(&v85, 0);
                    ((void (*)(CGFloat *, void))v39)(&v87, 0);
                  }
                }
              }
            }
          }
          if (qword_269DD7690 != -1) {
            swift_once();
          }
          for (uint64_t j = 0; j != 4; ++j)
          {
            uint64_t v46 = qword_269DDB0F0;
            if (*(void *)(qword_269DDB0F0 + 16))
            {
              uint64_t v47 = byte_2703B2330[j + 32];
              uint64_t v48 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
              if (v49)
              {
                uint64_t v50 = *(void *)(*(void *)(v46 + 56) + 8 * v48);
                if (*(void *)(v50 + 16))
                {
                  uint64_t v51 = sub_2543517E0(v47);
                  if (v52)
                  {
                    uint64_t v53 = (double *)(*(void *)(v50 + 56) + 16 * v51);
                    double v83 = *v53;
                    double v91 = v53[1];
                    v108.origin.CGFloat x = a2;
                    v108.origin.CGFloat y = a3;
                    v108.size.CGFloat width = a4;
                    v108.size.CGFloat height = a5;
                    double v54 = CGRectGetMaxX(v108);
                    v109.origin.CGFloat x = a2;
                    v109.origin.CGFloat y = a3;
                    v109.size.CGFloat width = a4;
                    v109.size.CGFloat height = a5;
                    double MinX = CGRectGetMinX(v109);
                    v110.origin.CGFloat x = a2;
                    v110.origin.CGFloat y = a3;
                    v110.size.CGFloat width = a4;
                    v110.size.CGFloat height = a5;
                    double v56 = CGRectGetMinX(v110);
                    v111.origin.CGFloat x = a2;
                    v111.origin.CGFloat y = a3;
                    v111.size.CGFloat width = a4;
                    v111.size.CGFloat height = a5;
                    double v57 = CGRectGetMinX(v111);
                    char v58 = *(unsigned char *)(v6 + 44);
                    unint64_t v59 = sub_254277CB4();
                    uint64_t v60 = sub_2542F4814(&v85, v58);
                    if (*v61)
                    {
                      uint64_t v63 = sub_2542F4874(v84, v47);
                      if ((*(unsigned char *)(v62 + 16) & 1) == 0)
                      {
                        double v64 = v57 + v91 * (v54 - MinX);
                        *(double *)uint64_t v62 = v56 + v83 * (v54 - MinX);
                        *(double *)(v62 + 8) = v64;
                      }
                      ((void (*)(void *, void))v63)(v84, 0);
                    }
                    ((void (*)(uint64_t *, void))v60)(&v85, 0);
                    ((void (*)(CGFloat *, void))v59)(&v87, 0);
                  }
                }
              }
            }
          }
          uint64_t v65 = *(void *)(v6 + 24);
          if (*(void *)(v65 + 16))
          {
            uint64_t v66 = *(unsigned __int8 *)(v6 + 42);
            uint64_t v67 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
            if (v68)
            {
              uint64_t v69 = *(void *)(*(void *)(v65 + 56) + 8 * v67);
              if (*(void *)(v69 + 16))
              {
                uint64_t v70 = sub_2543517E0(v66);
                if (v71)
                {
                  *(_OWORD *)(v6 + 48) = *(_OWORD *)(*(void *)(v69 + 56) + 16 * v70);
                  uint64_t v72 = *(void *)(v6 + 32);
                  if (*(void *)(v72 + 16))
                  {
                    uint64_t v73 = *(unsigned __int8 *)(v6 + 43);
                    uint64_t v74 = sub_254351600(*(unsigned __int8 *)(v6 + 44));
                    if (v75)
                    {
                      uint64_t v76 = *(void *)(*(void *)(v72 + 56) + 8 * v74);
                      if (*(void *)(v76 + 16))
                      {
                        uint64_t v77 = sub_2543517E0(v73);
                        if (v78)
                        {
                          *(_OWORD *)(v6 + 64) = *(_OWORD *)(*(void *)(v76 + 56) + 16 * v77);
                          LOBYTE(v84[0]) = 3;
                          CGFloat v87 = 0.0;
                          unint64_t v88 = 0xE000000000000000;
                          sub_25436D290();
                          uint64_t v85 = *(void *)&v87;
                          unint64_t v86 = v88;
                          sub_25436CCB0();
                          CGFloat v87 = a2;
                          unint64_t v88 = *(void *)&a3;
                          CGFloat v89 = a4;
                          CGFloat v90 = a5;
                          type metadata accessor for CGRect(0);
                          sub_25436D460();
                          uint64_t v79 = v85;
                          unint64_t v80 = v86;
                          os_log_type_t v81 = sub_25436D020();
                          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v84, v79, v80, v81);
                          swift_bridgeObjectRelease();
                          if (a1) {
                            *(unsigned char *)(v6
                          }
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 1;
                          return;
                        }
LABEL_64:
                        __break(1u);
                        return;
                      }
LABEL_63:
                      __break(1u);
                      goto LABEL_64;
                    }
LABEL_62:
                    __break(1u);
                    goto LABEL_63;
                  }
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
LABEL_60:
                __break(1u);
                goto LABEL_61;
              }
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_59;
        }
      }
    }
  }
}

double sub_25432FD48(unsigned __int8 *a1, double a2)
{
  int v4 = *a1;
  double v5 = v2[6];
  double v6 = v2[7] - v5;
  double v7 = v2[8];
  double v8 = v2[9] - v7;
  v12.origin.CGFloat x = v5;
  v12.origin.CGFloat y = v7;
  v12.size.CGFloat width = v6;
  v12.size.CGFloat height = v8;
  double v9 = CGRectGetMidX(v12) + -0.5;
  if (v4 == 1) {
    double v9 = -v9;
  }
  double v11 = v9;
  v13.origin.CGFloat x = v5;
  v13.origin.CGFloat y = v7;
  v13.size.CGFloat width = v6;
  v13.size.CGFloat height = v8;
  CGRectGetMidY(v13);
  v14.origin.CGFloat x = v5;
  v14.origin.CGFloat y = v7;
  v14.size.CGFloat width = v6;
  v14.size.CGFloat height = v8;
  CGRectGetWidth(v14);
  v15.origin.CGFloat x = v5;
  v15.origin.CGFloat y = v7;
  v15.size.CGFloat width = v6;
  v15.size.CGFloat height = v8;
  CGRectGetHeight(v15);
  return v11 * a2;
}

uint64_t DKFramingEngine.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t DKFramingEngine.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
  uint64_t v5 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_254330088(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 24) = sub_254268D64(MEMORY[0x263F8EE78]);
  *(void *)(v2 + 32) = sub_254268E90(v4);
  *(_DWORD *)(v2 + 40) = 0x1000000;
  *(unsigned char *)(v2 + 44) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v2 + 96) = _Q0;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(v2 + 112) = _Q0;
  sub_25436C6E0();
  sub_25436C6E0();
  sub_25436C6E0();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = 0;
  sub_25436C7F0();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 0;
  *(void *)(v2 + 16) = a1;
  uint64_t v10 = qword_269DD7690;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  *(void *)(v2 + 24) = qword_269DDB0F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_269DD7698 != -1) {
    swift_once();
  }
  *(void *)(v2 + 32) = qword_269DDB0F8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v2 + 24);
  if (!*(void *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = *(unsigned __int8 *)(v2 + 42);
  uint64_t result = sub_254351600(*(unsigned __int8 *)(v2 + 44));
  if ((v14 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * result);
  if (!*(void *)(v15 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = sub_2543517E0(v13);
  if ((v16 & 1) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(*(void *)(v15 + 56) + 16 * result);
  uint64_t v17 = *(void *)(v2 + 32);
  if (!*(void *)(v17 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v18 = *(unsigned __int8 *)(v2 + 43);
  uint64_t result = sub_254351600(*(unsigned __int8 *)(v2 + 44));
  if ((v19 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * result);
  if (!*(void *)(v20 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t result = sub_2543517E0(v18);
  if (v21)
  {
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(*(void *)(v20 + 56) + 16 * result);
    return v2;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_25433029C()
{
  unint64_t result = qword_269DD9C20;
  if (!qword_269DD9C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C20);
  }
  return result;
}

unint64_t sub_2543302F0()
{
  unint64_t result = qword_269DD9C28;
  if (!qword_269DD9C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C28);
  }
  return result;
}

unint64_t sub_254330344()
{
  unint64_t result = qword_269DD9C30;
  if (!qword_269DD9C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C30);
  }
  return result;
}

unint64_t sub_254330398()
{
  unint64_t result = qword_269DD9C68;
  if (!qword_269DD9C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C68);
  }
  return result;
}

unint64_t sub_2543303EC()
{
  unint64_t result = qword_269DD9C70;
  if (!qword_269DD9C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C70);
  }
  return result;
}

unint64_t sub_254330440()
{
  unint64_t result = qword_269DD9C78;
  if (!qword_269DD9C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9C78);
  }
  return result;
}

unint64_t sub_254330494()
{
  unint64_t result = qword_269DD9CC0;
  if (!qword_269DD9CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9CC0);
  }
  return result;
}

unint64_t sub_2543304E8()
{
  unint64_t result = qword_269DD9CC8;
  if (!qword_269DD9CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9CC8);
  }
  return result;
}

unint64_t sub_25433053C()
{
  unint64_t result = qword_269DD9CD0;
  if (!qword_269DD9CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9CD0);
  }
  return result;
}

unint64_t sub_254330590()
{
  unint64_t result = qword_269DD9CD8;
  if (!qword_269DD9CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9CD8);
  }
  return result;
}

unint64_t sub_2543305E4()
{
  unint64_t result = qword_269DD9CE0;
  if (!qword_269DD9CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9CE0);
  }
  return result;
}

unint64_t sub_254330638()
{
  unint64_t result = qword_269DD9D30;
  if (!qword_269DD9D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D30);
  }
  return result;
}

unint64_t sub_25433068C()
{
  unint64_t result = qword_269DD9D38;
  if (!qword_269DD9D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D38);
  }
  return result;
}

unint64_t sub_2543306E0()
{
  unint64_t result = qword_269DD9D40;
  if (!qword_269DD9D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D40);
  }
  return result;
}

unint64_t sub_254330734()
{
  unint64_t result = qword_269DD9D48;
  if (!qword_269DD9D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D48);
  }
  return result;
}

unint64_t sub_25433078C()
{
  unint64_t result = qword_269DD9D70;
  if (!qword_269DD9D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D70);
  }
  return result;
}

unint64_t sub_2543307E4()
{
  unint64_t result = qword_269DD9D78;
  if (!qword_269DD9D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D78);
  }
  return result;
}

unint64_t sub_25433083C()
{
  unint64_t result = qword_269DD9D80;
  if (!qword_269DD9D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D80);
  }
  return result;
}

unint64_t sub_254330894()
{
  unint64_t result = qword_269DD9D88;
  if (!qword_269DD9D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9D88);
  }
  return result;
}

uint64_t sub_2543308E8()
{
  return type metadata accessor for DKFramingEngine();
}

uint64_t type metadata accessor for DKFramingEngine()
{
  uint64_t result = qword_269DD9D90;
  if (!qword_269DD9D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25433093C()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25436C800();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKFramingEngine(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFramingEngine);
}

uint64_t dispatch thunk of DKFramingEngine.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t type metadata accessor for DKFramingEngine.Config()
{
  return self;
}

uint64_t method lookup function for DKFramingEngine.Config(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKFramingEngine.Config);
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation()
{
  return &type metadata for DKFramingEngine.Orientation;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode()
{
  return &type metadata for DKFramingEngine.Mode;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming()
{
  return &type metadata for DKFramingEngine.HorizontalFraming;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming()
{
  return &type metadata for DKFramingEngine.VerticalFraming;
}

unsigned char *_s23IntelligentTrackingCore15DKFramingEngineC15VerticalFramingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254330BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.CodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.CenterCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.TopCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.TopCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.BottomCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.BottomCodingKeys;
}

unsigned char *_s23IntelligentTrackingCore15DKFramingEngineC17HorizontalFramingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254330D24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CenterCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.LeftCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.RightCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.RightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.CodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.AutomaticCodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.ManualCodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.ManualCodingKeys;
}

unsigned char *_s23IntelligentTrackingCore15DKFramingEngineC11OrientationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254330E98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.CodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.LandscapeCodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.LandscapeCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.PortraitCodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.PortraitCodingKeys;
}

unint64_t sub_254330EF4()
{
  unint64_t result = qword_269DD9DA0;
  if (!qword_269DD9DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DA0);
  }
  return result;
}

unint64_t sub_254330F4C()
{
  unint64_t result = qword_269DD9DA8;
  if (!qword_269DD9DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DA8);
  }
  return result;
}

unint64_t sub_254330FA4()
{
  unint64_t result = qword_269DD9DB0;
  if (!qword_269DD9DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DB0);
  }
  return result;
}

unint64_t sub_254330FFC()
{
  unint64_t result = qword_269DD9DB8;
  if (!qword_269DD9DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DB8);
  }
  return result;
}

unint64_t sub_254331054()
{
  unint64_t result = qword_269DD9DC0;
  if (!qword_269DD9DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DC0);
  }
  return result;
}

unint64_t sub_2543310AC()
{
  unint64_t result = qword_269DD9DC8;
  if (!qword_269DD9DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DC8);
  }
  return result;
}

unint64_t sub_254331104()
{
  unint64_t result = qword_269DD9DD0;
  if (!qword_269DD9DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DD0);
  }
  return result;
}

unint64_t sub_25433115C()
{
  unint64_t result = qword_269DD9DD8;
  if (!qword_269DD9DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DD8);
  }
  return result;
}

unint64_t sub_2543311B4()
{
  unint64_t result = qword_269DD9DE0;
  if (!qword_269DD9DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DE0);
  }
  return result;
}

unint64_t sub_25433120C()
{
  unint64_t result = qword_269DD9DE8;
  if (!qword_269DD9DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DE8);
  }
  return result;
}

unint64_t sub_254331264()
{
  unint64_t result = qword_269DD9DF0;
  if (!qword_269DD9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DF0);
  }
  return result;
}

unint64_t sub_2543312BC()
{
  unint64_t result = qword_269DD9DF8;
  if (!qword_269DD9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9DF8);
  }
  return result;
}

unint64_t sub_254331314()
{
  unint64_t result = qword_269DD9E00;
  if (!qword_269DD9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E00);
  }
  return result;
}

unint64_t sub_25433136C()
{
  unint64_t result = qword_269DD9E08;
  if (!qword_269DD9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E08);
  }
  return result;
}

unint64_t sub_2543313C4()
{
  unint64_t result = qword_269DD9E10;
  if (!qword_269DD9E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E10);
  }
  return result;
}

unint64_t sub_25433141C()
{
  unint64_t result = qword_269DD9E18;
  if (!qword_269DD9E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E18);
  }
  return result;
}

unint64_t sub_254331474()
{
  unint64_t result = qword_269DD9E20;
  if (!qword_269DD9E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E20);
  }
  return result;
}

unint64_t sub_2543314CC()
{
  unint64_t result = qword_269DD9E28;
  if (!qword_269DD9E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E28);
  }
  return result;
}

unint64_t sub_254331524()
{
  unint64_t result = qword_269DD9E30;
  if (!qword_269DD9E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E30);
  }
  return result;
}

unint64_t sub_25433157C()
{
  unint64_t result = qword_269DD9E38;
  if (!qword_269DD9E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E38);
  }
  return result;
}

unint64_t sub_2543315D4()
{
  unint64_t result = qword_269DD9E40;
  if (!qword_269DD9E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E40);
  }
  return result;
}

unint64_t sub_25433162C()
{
  unint64_t result = qword_269DD9E48;
  if (!qword_269DD9E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E48);
  }
  return result;
}

unint64_t sub_254331684()
{
  unint64_t result = qword_269DD9E50;
  if (!qword_269DD9E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E50);
  }
  return result;
}

unint64_t sub_2543316DC()
{
  unint64_t result = qword_269DD9E58;
  if (!qword_269DD9E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E58);
  }
  return result;
}

unint64_t sub_254331734()
{
  unint64_t result = qword_269DD9E60;
  if (!qword_269DD9E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E60);
  }
  return result;
}

unint64_t sub_25433178C()
{
  unint64_t result = qword_269DD9E68;
  if (!qword_269DD9E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E68);
  }
  return result;
}

unint64_t sub_2543317E4()
{
  unint64_t result = qword_269DD9E70;
  if (!qword_269DD9E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E70);
  }
  return result;
}

unint64_t sub_25433183C()
{
  unint64_t result = qword_269DD9E78;
  if (!qword_269DD9E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E78);
  }
  return result;
}

unint64_t sub_254331894()
{
  unint64_t result = qword_269DD9E80;
  if (!qword_269DD9E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E80);
  }
  return result;
}

unint64_t sub_2543318EC()
{
  unint64_t result = qword_269DD9E88;
  if (!qword_269DD9E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E88);
  }
  return result;
}

unint64_t sub_254331944()
{
  unint64_t result = qword_269DD9E90;
  if (!qword_269DD9E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E90);
  }
  return result;
}

unint64_t sub_25433199C()
{
  unint64_t result = qword_269DD9E98;
  if (!qword_269DD9E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9E98);
  }
  return result;
}

unint64_t sub_2543319F4()
{
  unint64_t result = qword_269DD9EA0;
  if (!qword_269DD9EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9EA0);
  }
  return result;
}

unint64_t sub_254331A4C()
{
  unint64_t result = qword_269DD9EA8;
  if (!qword_269DD9EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD9EA8);
  }
  return result;
}

uint64_t sub_254331AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70616373646E616CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254331BA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254331C98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69547265746E6563 && a2 == 0xEB00000000746867)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_254331E4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_254331F84()
{
  unint64_t result = qword_269DD7E78;
  if (!qword_269DD7E78)
  {
    sub_25436C800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DD7E78);
  }
  return result;
}

uint64_t DKIMUManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  sub_25436C9E0();
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F01788]), sel_init);
  return v0;
}

uint64_t sub_254332090()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_25433209C(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t DKIMUManager.init()()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  sub_25436C9E0();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F01788]), sel_init);
  uint64_t v2 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = v1;

  return v0;
}

uint64_t DKIMUManager.deinit()
{
  objc_msgSend(*(id *)(v0 + 16), sel_stopDeviceMotionUpdates);

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKIMUManager.__deallocating_deinit()
{
  objc_msgSend(*(id *)(v0 + 16), sel_stopDeviceMotionUpdates);

  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_254332270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25436C9F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *(void **)(v1 + 16);
  if (!v7)
  {
    sub_25436C790();
    uint64_t v47 = (int *)type metadata accessor for DKMotion3();
    *(void *)(a1 + v47[5]) = &unk_2703B1FD0;
    *(void *)(a1 + v47[6]) = &unk_2703B2008;
    uint64_t v48 = v47[7];
    char v49 = &unk_2703B2040;
LABEL_17:
    *(void *)(a1 + v48) = v49;
    char v55 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v47 - 1) + 56);
    return v55(a1, 0, 1, v47);
  }
  id v8 = v7;
  if ((objc_msgSend(v8, sel_isDeviceMotionActive) & 1) == 0
    && objc_msgSend(v8, sel_isDeviceMotionAvailable))
  {
    objc_msgSend(v8, sel_setDeviceMotionUpdateInterval_, 0.0166666667);
    objc_msgSend(v8, sel_setShowsDeviceMovementDisplay_, 1);
    objc_msgSend(v8, sel_startDeviceMotionUpdatesUsingReferenceFrame_, 1);
  }
  id v9 = objc_msgSend(v8, sel_deviceMotion);
  if (v9)
  {
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_gravity);
    double v12 = v11;
    double v14 = v13;
    long double v16 = v15;
    id v17 = objc_msgSend(v10, sel_attitude);
    objc_msgSend(v17, sel_quaternion);
    long long v58 = v19;
    float64x2_t v59 = v18;
    long long v56 = v21;
    long long v57 = v20;

    *(void *)&v22.f64[0] = v57;
    *(void *)&v22.f64[1] = v56;
    v23.f64[0] = v59.f64[0];
    *(void *)&v23.f64[1] = v58;
    int8x16_t v24 = (int8x16_t)vnegq_f64(v23);
    float64x2_t v25 = vmulq_f64(v22, (float64x2_t)xmmword_254378070);
    float64x2_t v26 = (float64x2_t)vextq_s8((int8x16_t)v25, (int8x16_t)vnegq_f64(v25), 8uLL);
    float64x2_t v27 = vmlaq_f64(vmulq_f64(v23, (float64x2_t)0), (float64x2_t)0, (float64x2_t)vextq_s8(v24, (int8x16_t)v23, 8uLL));
    float64x2_t v28 = (float64x2_t)vextq_s8((int8x16_t)v23, v24, 8uLL);
    float64x2_t v29 = vaddq_f64(v26, v27);
    float64x2_t v30 = vaddq_f64(v28, vmlaq_f64(vmulq_f64(v25, (float64x2_t)0), (float64x2_t)0, v26));
    float64x2_t v59 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v30, *(double *)&v56), (float64x2_t)vextq_s8((int8x16_t)vnegq_f64(v30), (int8x16_t)v30, 8uLL), *(double *)&v57), vmlaq_n_f64(vmulq_n_f64(v29, *(double *)&v58), (float64x2_t)vextq_s8((int8x16_t)v29, (int8x16_t)vnegq_f64(v29), 8uLL), v59.f64[0]));
    long double v31 = sqrt(v12 * v12 + v14 * v14);
    long double v32 = atan2(-v12, -v14);
    long double v33 = atan2(v16, v31);
    double v34 = atan2(v59.f64[1], v59.f64[0]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_25436E6A0;
    *(double *)(v35 + 32) = v34;
    *(long double *)(v35 + 40) = v33;
    *(long double *)(v35 + 48) = v32;
    objc_msgSend(v10, sel_rotationRate);
    double v37 = v36;
    double v39 = v38;
    double v41 = v40;
    objc_msgSend(v10, sel_gravity);
    sub_254332794(&v60, v37, v39, v41, v42, v43, v44);
    uint64_t v45 = v60;
    if (*(unsigned char *)(v1 + 32))
    {
      *(double *)(v1 + 24) = v34;
      *(unsigned char *)(v1 + 32) = 0;
      double i = 0.0;
    }
    else
    {
      for (double i = v34 - *(double *)(v1 + 24); i > 3.14159265; double i = i + -6.28318531)
        ;
      for (; i < -3.14159265; double i = i + 6.28318531)
        ;
    }
    *(double *)(v35 + 32) = i;
    sub_25436C790();

    uint64_t v47 = (int *)type metadata accessor for DKMotion3();
    *(void *)(a1 + v47[5]) = v35;
    *(void *)(a1 + v47[6]) = v45;
    uint64_t v48 = v47[7];
    char v49 = &unk_2703B1F98;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger, v3);
  uint64_t v50 = sub_25436C9D0();
  os_log_type_t v51 = sub_25436D000();
  if (os_log_type_enabled(v50, v51))
  {
    char v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v52 = 0;
    _os_log_impl(&dword_254249000, v50, v51, "CMDeviceMotion not available", v52, 2u);
    MEMORY[0x25A276B10](v52, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v53 = type metadata accessor for DKMotion3();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(a1, 1, 1, v53);
}

double sub_254332794@<D0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, long double a7@<D5>)
{
  long double v9 = sqrt(a5 * a5 + a6 * a6);
  double v10 = atan2(-a5, -a6);
  long double v11 = atan2(a7, v9);
  __double2 v13 = __sincos_stret(v11 * 0.5);
  v12.f64[0] = v13.__sinval;
  *(void *)&double v30 = *(_OWORD *)&vmulq_f64(v12, (float64x2_t)0);
  float64x2_t v29 = vmulq_n_f64((float64x2_t)xmmword_254378080, v13.__sinval);
  __double2 v14 = __sincos_stret(v10 * 0.5);
  float64x2_t v15 = vmulq_n_f64((float64x2_t)0, v14.__sinval);
  float64x2_t v16 = vnegq_f64(v15);
  float64x2_t v17 = (float64x2_t)vextq_s8((int8x16_t)v14, (int8x16_t)vnegq_f64((float64x2_t)v14), 8uLL);
  float64x2_t v18 = vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v14, v29, 1), v17, v29.f64[0]);
  float64x2_t v19 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64((float64x2_t)v14, v13.__cosval), v17, v30), vmlaq_n_f64(vmulq_laneq_f64(v16, v29, 1), (float64x2_t)vextq_s8((int8x16_t)v15, (int8x16_t)v16, 8uLL), v29.f64[0]));
  float64x2_t v20 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v15, v13.__cosval), (float64x2_t)vextq_s8((int8x16_t)v16, (int8x16_t)v15, 8uLL), v30), v18);
  int8x16_t v21 = (int8x16_t)vnegq_f64(v20);
  float64x2_t v22 = vmulq_f64(v19, (float64x2_t)xmmword_254378070);
  float64x2_t v23 = (float64x2_t)vextq_s8((int8x16_t)v22, (int8x16_t)vnegq_f64(v22), 8uLL);
  float64x2_t v24 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v20, a3), (float64x2_t)vextq_s8(v21, (int8x16_t)v20, 8uLL), a2), v23, a4);
  float64x2_t v25 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v22, a3), v23, a2), (float64x2_t)vextq_s8((int8x16_t)v20, v21, 8uLL), a4);
  float64x2_t v35 = vmlaq_n_f64(vmulq_laneq_f64(v24, v20, 1), (float64x2_t)vextq_s8((int8x16_t)v24, (int8x16_t)vnegq_f64(v24), 8uLL), v20.f64[0]);
  float64x2_t v33 = vmlaq_n_f64(vmulq_laneq_f64(v25, v19, 1), (float64x2_t)vextq_s8((int8x16_t)vnegq_f64(v25), (int8x16_t)v25, 8uLL), v19.f64[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
  uint64_t v26 = swift_allocObject();
  *(void *)&double result = 3;
  int8x16_t v28 = (int8x16_t)vaddq_f64(v33, v35);
  *(_OWORD *)(v26 + 16) = xmmword_25436E6A0;
  *(int8x16_t *)(v26 + 32) = vextq_s8(v28, v28, 8uLL);
  *(void *)(v26 + 48) = 0;
  *a1 = v26;
  return result;
}

double sub_254332930@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, long double a5@<D2>)
{
  sub_2543329F0(a1, (uint64_t)v14);
  long double v9 = 0.0;
  if ((v15 & 1) == 0) {
    long double v9 = atan2(v14[1], v14[0]);
  }
  long double v10 = atan2(a5, sqrt(a3 * a3 + a4 * a4));
  long double v11 = atan2(-a3, -a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7818);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v12 + 16) = xmmword_25436E6A0;
  *(long double *)(v12 + 32) = v9;
  *(long double *)(v12 + 40) = v10;
  *(long double *)(v12 + 48) = v11;
  *a2 = v12;
  return result;
}

uint64_t sub_2543329F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_254332A58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_254332A68(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*(void *)a2 + 16);
  *(void *)(*(void *)a2 + 16) = *a1;
  id v3 = v2;
}

uint64_t sub_254332AB0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(*(void *)result + 32);
  *(void *)a2 = *(void *)(*(void *)result + 24);
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_254332AC8(uint64_t result, uint64_t *a2)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *a2;
  *(void *)(v3 + 24) = *(void *)result;
  *(unsigned char *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_254332AE0()
{
  return type metadata accessor for DKIMUManager();
}

uint64_t type metadata accessor for DKIMUManager()
{
  uint64_t result = qword_269DD9EE0;
  if (!qword_269DD9EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254332B34()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKIMUManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKIMUManager);
}

uint64_t dispatch thunk of DKIMUManager.imu.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DKIMUManager.imu.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DKIMUManager.imu.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 136))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKIMUManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKIMUManager.getIMUMotion()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKIMUManager.calculateVelocityWorldFrame(velocityLocal:gravity:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKIMUManager.calculateOrientationFromGravity(gravity:normal:)(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(*(void *)v1 + 200);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  char v7 = v2;
  return v3(v6);
}

uint64_t destroy for DKSubjectSelectionRequest(uint64_t a1)
{
  return sub_25426B318(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s23IntelligentTrackingCore25DKSubjectSelectionRequestOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25426B2F0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKSubjectSelectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25426B2F0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25426B318(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKSubjectSelectionRequest(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25426B318(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKSubjectSelectionRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DKSubjectSelectionRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_254332F3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_254332F44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DKSubjectSelectionRequest()
{
  return &type metadata for DKSubjectSelectionRequest;
}

uint64_t sub_254332F5C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t (*sub_254332FC0())()
{
  return nullsub_1;
}

void *sub_254332FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel) = 0;
  uint64_t v12 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_primaryTrackerId;
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  __double2 v13 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest;
  *(void *)__double2 v13 = 0;
  *((void *)v13 + 1) = 0;
  unsigned char v13[16] = -1;
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_useFramingFeedback) = 1;
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection;
  type metadata accessor for LegacySubjectSelection();
  swift_allocObject();
  swift_retain();
  *(void *)((char *)v5 + v14) = sub_25428D64C();
  if (!*(unsigned char *)(a3 + 89))
  {
    type metadata accessor for DKISSModel();
    swift_allocObject();
    *(void *)((char *)v5 + v11) = DKISSModel.init()();
    swift_release();
  }
  type metadata accessor for DKSubjectClustering();
  *(void *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_clustering) = swift_allocObject();
  swift_release();
  sub_25436C9E0();
  uint64_t v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_2543331BC()
{
  v1[2] = v0;
  uint64_t v2 = sub_25436C800();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_25436C7B0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2543332D8, 0, 0);
}

uint64_t sub_2543332D8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v39 = v3;
  uint64_t v4 = v0[2];
  sub_254334358();
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *(void *)(*(void *)(v4 + 40)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v3);
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  unint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  long double v9 = (void *)swift_task_alloc();
  _OWORD v9[2] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  long double v10 = sub_254277A90((uint64_t (*)(uint64_t *))sub_254309E90, v9, v8);
  swift_task_dealloc();
  *(void *)(v6 + v7) = v10;
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v6 + v7);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v12 + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_2542778C4((void (*)(uint64_t *__return_ptr, uint64_t *))sub_254309EB0, v12, v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v39);
  uint64_t v14 = v4;
  *(void *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = v13;
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs))
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_254335C44(v15);
  }
  else
  {
    uint64_t v16 = v0[2];
    if (*(unsigned char *)(*(void *)(v4 + 48)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode))
    {
      sub_2543362DC();
    }
    else
    {
      sub_254336DB0();
      *(unsigned char *)(*(void *)(v16
                           + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection)
               + 56) = 0;
    }
    uint64_t v17 = v0[2];
    uint64_t v18 = swift_retain();
    sub_25433A040(v18);
    swift_release();
    uint64_t v19 = *(void *)(v4 + 48);
    swift_retain();
    swift_retain();
    unint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_254339DC4(v20, v17);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = v21;
    swift_release();
  }
  swift_bridgeObjectRelease();
  sub_254333814();
  unint64_t v22 = *(void *)(*(void *)(v4 + 48)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v22)
  {
    uint64_t v36 = *(void *)(v4 + 40);
LABEL_23:
    uint64_t v37 = MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25436D530();
    if (v23) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E294C(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v25 = 0;
  uint64_t v26 = v0[4];
  float64x2_t v27 = (void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  unint64_t v40 = v22 & 0xC000000000000001;
  unint64_t v28 = v22;
  do
  {
    uint64_t v29 = v0[5];
    uint64_t v30 = v0[3];
    if (v40)
    {
      uint64_t v31 = MEMORY[0x25A275A00](v25, v22);
      (*v27)(v29, v31 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v30);
      swift_unknownObjectRelease();
    }
    else
    {
      (*v27)(v29, *(void *)(v22 + 8 * v25 + 32) + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v30);
    }
    unint64_t v33 = *(void *)(v41 + 16);
    unint64_t v32 = *(void *)(v41 + 24);
    if (v33 >= v32 >> 1) {
      sub_2542E294C(v32 > 1, v33 + 1, 1);
    }
    uint64_t v34 = v0[5];
    uint64_t v35 = v0[3];
    ++v25;
    *(void *)(v41 + 16) = v33 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v41+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v33, v34, v35);
    unint64_t v22 = v28;
  }
  while (v23 != v25);
  swift_bridgeObjectRelease();
  uint64_t v14 = v4;
LABEL_22:
  swift_retain();
  sub_25427CECC();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v14 + 40);
  uint64_t v37 = *(void *)(*(void *)(v14 + 48)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v37) {
    goto LABEL_23;
  }
LABEL_24:
  *(void *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  double v38 = (uint64_t (*)(uint64_t))v0[1];
  return v38(1);
}

void sub_254333814()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(*(void *)(v0 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (v5)
  {
    uint64_t v6 = *(double **)(*(void *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine);
    CGFloat v7 = v6[10];
    CGFloat v8 = v6[11];
    CGFloat v9 = v6[12];
    CGFloat v10 = v6[13];
    swift_retain();
    swift_bridgeObjectRetain();
    v52.origin.CGFloat x = v7;
    v52.origin.CGFloat y = v8;
    v52.size.CGFloat width = v9;
    v52.size.CGFloat height = v10;
    double v11 = CGRectGetWidth(v52) * 0.9;
    v53.origin.CGFloat x = v7;
    v53.origin.CGFloat y = v8;
    v53.size.CGFloat width = v9;
    v53.size.CGFloat height = v10;
    CGFloat Height = CGRectGetHeight(v53);
    unint64_t v13 = sub_25430E9AC(v5, v11, Height * 0.9);
    swift_release();
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_25433A8DC(v5, v13);
      swift_bridgeObjectRelease();
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_25436D530();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v45 = v13;
      uint64_t v46 = v1;
      unint64_t v44 = v14;
      if (v15 < 1)
      {
        if (!((unint64_t)v5 >> 62))
        {
          uint64_t v35 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v35)
          {
LABEL_43:
            swift_bridgeObjectRelease();
LABEL_44:
            sub_254338874(v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
LABEL_28:
          if (v35 < 1)
          {
            __break(1u);
            return;
          }
          uint64_t v36 = 0;
          do
          {
            if ((v5 & 0xC000000000000001) != 0)
            {
              uint64_t v37 = MEMORY[0x25A275A00](v36, v5);
            }
            else
            {
              uint64_t v37 = *(void *)(v5 + 8 * v36 + 32);
              swift_retain();
            }
            ++v36;
            v50[0] = 2;
            unint64_t v48 = 0;
            unint64_t v49 = 0xE000000000000000;
            sub_25436D290();
            swift_bridgeObjectRelease();
            unint64_t v48 = 0xD000000000000016;
            unint64_t v49 = 0x800000025437E160;
            uint64_t v47 = *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
            sub_25436D760();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            double v38 = (CGRect *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
            CGRectGetMidX(*(CGRect *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            CGRectGetMidY(*v38);
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            uint64_t v39 = v48;
            unint64_t v40 = v49;
            os_log_type_t v41 = sub_25436D000();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v39, v40, v41);
            swift_bridgeObjectRelease();
            swift_release();
          }
          while (v35 != v36);
          swift_bridgeObjectRelease();
          unint64_t v14 = v44;
          goto LABEL_44;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (!v35) {
          goto LABEL_43;
        }
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        int64_t v5 = sub_25436D530();
        if (v5)
        {
LABEL_8:
          unint64_t v43 = v14 >> 62;
          if (v5 < 1)
          {
            __break(1u);
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
          uint64_t v16 = 0;
          unint64_t v17 = v13 & 0xC000000000000001;
          do
          {
            if (v17)
            {
              uint64_t v18 = MEMORY[0x25A275A00](v16, v13);
            }
            else
            {
              uint64_t v18 = *(void *)(v13 + 8 * v16 + 32);
              swift_retain();
            }
            ++v16;
            v50[0] = 2;
            unint64_t v48 = 0;
            unint64_t v49 = 0xE000000000000000;
            sub_25436D290();
            swift_bridgeObjectRelease();
            unint64_t v48 = 0xD000000000000017;
            unint64_t v49 = 0x800000025437E180;
            uint64_t v47 = *(void *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
            sub_25436D760();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            uint64_t v19 = (CGRect *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
            CGRectGetMidX(*(CGRect *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            CGRectGetMidY(*v19);
            sub_25436CF40();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            uint64_t v20 = v48;
            unint64_t v21 = v49;
            os_log_type_t v22 = sub_25436D000();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v20, v21, v22);
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v13 = v45;
          }
          while (v5 != v16);
          swift_bridgeObjectRelease();
          unint64_t v14 = v44;
          uint64_t v23 = v44 & 0xFFFFFFFFFFFFFF8;
          if (!v43) {
            goto LABEL_18;
          }
          goto LABEL_38;
        }
      }
      else
      {
        int64_t v5 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v5) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = v14 & 0xFFFFFFFFFFFFFF8;
      if (!(v14 >> 62))
      {
LABEL_18:
        int64_t v5 = *(void *)(v23 + 16);
        swift_bridgeObjectRetain();
        if (!v5) {
          goto LABEL_43;
        }
        goto LABEL_19;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      int64_t v5 = sub_25436D530();
      if (!v5) {
        goto LABEL_43;
      }
LABEL_19:
      if (v5 >= 1)
      {
        uint64_t v24 = 0;
        unint64_t v43 = v14 & 0xC000000000000001;
        do
        {
          if (v43)
          {
            uint64_t v25 = MEMORY[0x25A275A00](v24, v14);
          }
          else
          {
            uint64_t v25 = *(void *)(v14 + 8 * v24 + 32);
            swift_retain();
          }
          ++v24;
          v50[0] = 2;
          unint64_t v48 = 0;
          unint64_t v49 = 0xE000000000000000;
          sub_25436D290();
          swift_bridgeObjectRelease();
          unint64_t v48 = 0xD000000000000019;
          unint64_t v49 = 0x800000025437E1A0;
          uint64_t v26 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId;
          uint64_t v47 = *(void *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
          sub_25436D760();
          sub_25436CCB0();
          swift_bridgeObjectRelease();
          sub_25436CCB0();
          float64x2_t v27 = (CGRect *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          CGRectGetMidX(*(CGRect *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          sub_25436CF40();
          sub_25436CCB0();
          swift_bridgeObjectRelease();
          sub_25436CCB0();
          CGRectGetMidY(*v27);
          sub_25436CF40();
          sub_25436CCB0();
          swift_bridgeObjectRelease();
          uint64_t v28 = v48;
          unint64_t v29 = v49;
          os_log_type_t v30 = sub_25436D000();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v28, v29, v30);
          swift_bridgeObjectRelease();
          uint64_t v31 = *(void *)(v25 + v26);
          uint64_t v32 = *(void *)(v46 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
          uint64_t v33 = sub_25436C7B0();
          uint64_t v34 = *(void *)(v33 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v4, v32, v33);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v4, 0, 1, v33);
          sub_2542EBC2C((uint64_t)v4, v31);
          swift_release();
          unint64_t v14 = v44;
        }
        while (v5 != v24);
        goto LABEL_43;
      }
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_254334080(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_17:
    type metadata accessor for DKPersonTrackerState(0);
    sub_25433AA9C(&qword_269DD9178, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
    uint64_t v14 = sub_25436D2B0();
    char v15 = sub_254332F5C(v14, v5);
    swift_bridgeObjectRelease();
    return (v15 & 1) == 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25436D530();
  if (!v3) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2542E2B34(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v16;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        MEMORY[0x25A275A00](i, a2);
        type metadata accessor for DKPersonTrackerState(0);
        sub_25433AA9C(&qword_269DD9178, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
        uint64_t v7 = sub_25436D2B0();
        swift_unknownObjectRelease();
        unint64_t v9 = *(void *)(v16 + 16);
        unint64_t v8 = *(void *)(v16 + 24);
        if (v9 >= v8 >> 1) {
          sub_2542E2B34(v8 > 1, v9 + 1, 1);
        }
        *(void *)(v16 + 16) = v9 + 1;
        *(void *)(v16 + 8 * v9 + 32) = v7;
      }
    }
    else
    {
      type metadata accessor for DKPersonTrackerState(0);
      sub_25433AA9C(&qword_269DD9178, (void (*)(uint64_t))type metadata accessor for DKPersonTrackerState);
      for (uint64_t j = 0; j != v3; ++j)
      {
        swift_retain();
        uint64_t v11 = sub_25436D2B0();
        swift_release();
        unint64_t v13 = *(void *)(v16 + 16);
        unint64_t v12 = *(void *)(v16 + 24);
        if (v13 >= v12 >> 1) {
          sub_2542E2B34(v12 > 1, v13 + 1, 1);
        }
        *(void *)(v16 + 16) = v13 + 1;
        *(void *)(v16 + 8 * v13 + 32) = v11;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_254334358()
{
  uint64_t v1 = (unint64_t *)sub_25436C7B0();
  uint64_t v2 = *(v1 - 1);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v5 - 8);
  v188 = (char *)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (unint64_t)&v173 - v8;
  MEMORY[0x270FA5388](v10);
  unint64_t v196 = (unint64_t)&v173 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t (**)())((char *)&v173 - v13);
  uint64_t v15 = sub_25436C800();
  uint64_t v189 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v190 = (char *)&v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v199 = (uint64_t (**)())((char *)&v173 - v18);
  MEMORY[0x270FA5388](v19);
  v177 = (char *)&v173 - v20;
  MEMORY[0x270FA5388](v21);
  v195 = (char *)&v173 - v22;
  MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t (*)())((char *)&v173 - v25);
  MEMORY[0x270FA5388](v27);
  unint64_t v197 = (unint64_t)&v173 - v28;
  MEMORY[0x270FA5388](v29);
  unint64_t v198 = (char *)&v173 - v31;
  uint64_t v32 = (uint64_t *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
  int v33 = *(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest
                           + 16);
  uint64_t v191 = v0;
  unint64_t v35 = v34;
  unint64_t v200 = v34;
  if (v33 != 255)
  {
    uint64_t v193 = v30;
    uint64_t v36 = *v32;
    uint64_t v37 = v32[1];
    int64_t v174 = (uint64_t *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
    *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs) = MEMORY[0x263F8EE78];
    double v187 = *(double *)&v36;
    v185 = (char *)v37;
    sub_25426B2F0(v36, v37, v33);
    swift_bridgeObjectRelease();
    switch(v33)
    {
      case 1:
        unint64_t v59 = *(void *)(*(void *)(*(void *)(v0 + 40)
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
        if (v59 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_25436D530();
        }
        else
        {
          uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        uint64_t v61 = (uint64_t)v185;
        if (!v60) {
          goto LABEL_127;
        }
        unint64_t v62 = 0;
        uint64_t v38 = *(void *)(*(void *)&v187 + 16);
        unint64_t v183 = v59 & 0xC000000000000001;
        uint64_t v176 = v59 & 0xFFFFFFFFFFFFFF8;
        unint64_t v175 = v59 + 32;
        unint64_t v196 = v189 + 16;
        uint64_t v193 = (void (**)(char *, unint64_t, unint64_t))(v189 + 32);
        uint64_t v194 = (unsigned int (**)(unint64_t, uint64_t, unint64_t))(v189 + 48);
        int64_t v192 = (void (**)(char *, unint64_t))(v189 + 8);
        unint64_t v198 = (char *)(v189 + 56);
        unint64_t v178 = (v189 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v181 = v59;
        uint64_t v180 = v60;
        uint64_t v179 = v38;
        while (1)
        {
          if (v183)
          {
            uint64_t v63 = MEMORY[0x25A275A00](v62, v59);
            BOOL v46 = __OFADD__(v62++, 1);
            if (v46) {
              goto LABEL_157;
            }
          }
          else
          {
            if (v62 >= *(void *)(v176 + 16)) {
              goto LABEL_163;
            }
            uint64_t v63 = swift_retain();
            BOOL v46 = __OFADD__(v62++, 1);
            if (v46)
            {
LABEL_157:
              __break(1u);
              goto LABEL_158;
            }
          }
          uint64_t v186 = v63;
          if (v38)
          {
            unint64_t v184 = v62;
            unint64_t v199 = (uint64_t (**)())(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid);
            uint64_t v64 = v189;
            unint64_t v182 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
            unint64_t v65 = *(void *)&v187 + v182;
            sub_25433A8C8(*(uint64_t *)&v187, v61, 1u);
            unint64_t v197 = *(void *)(v64 + 72);
            uint64_t v66 = *(void (**)(unint64_t, unint64_t, unint64_t))(v64 + 16);
            while (1)
            {
              unint64_t v35 = v200;
              v66(v9, v65, v200);
              uint64_t v67 = *(void (**)(unint64_t, uint64_t, uint64_t))v198;
              (*(void (**)(unint64_t, void, uint64_t, unint64_t))v198)(v9, 0, 1, v35);
              if ((*v194)(v9, 1, v35) == 1) {
                break;
              }
              char v68 = *v193;
              uint64_t v69 = v195;
              (*v193)(v195, v9, v35);
              sub_25433AA9C((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
              char v70 = sub_25436CBB0();
              (*v192)(v69, v35);
              if (v70)
              {
                uint64_t v61 = (uint64_t)v185;
                sub_25426B304(*(uint64_t *)&v187, (uint64_t)v185, 1u);
                uint64_t v74 = sub_254332FC0();
                unint64_t v62 = v184;
                uint64_t v38 = v179;
                if (*v73)
                {
                  char v75 = v73;
                  v66((unint64_t)v177, (unint64_t)v199, v200);
                  unint64_t v76 = *v75;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t *v75 = v76;
                  v173 = v74;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    unint64_t v76 = sub_2542584AC(0, *(void *)(v76 + 16) + 1, 1, v76);
                    unint64_t *v75 = v76;
                  }
                  unint64_t v79 = *(void *)(v76 + 16);
                  unint64_t v78 = *(void *)(v76 + 24);
                  if (v79 >= v78 >> 1)
                  {
                    unint64_t v76 = sub_2542584AC(v78 > 1, v79 + 1, 1, v76);
                    unint64_t *v75 = v76;
                  }
                  uint64_t v0 = v191;
                  *(void *)(v76 + 16) = v79 + 1;
                  unint64_t v35 = v200;
                  ((void (*)(unint64_t, char *))v68)(v76 + v182 + v79 * v197, v177);
                  ((void (*)(unsigned char *, void))v173)(v201, 0);
                }
                else
                {
                  ((void (*)(unsigned char *, void))v74)(v201, 0);
                  uint64_t v0 = v191;
                  unint64_t v35 = v200;
                }
                unint64_t v59 = v181;
                uint64_t v60 = v180;
                goto LABEL_38;
              }
              v65 += v197;
              if (!--v38)
              {
                uint64_t v0 = v191;
                unint64_t v71 = v200;
                uint64_t v61 = (uint64_t)v185;
                uint64_t v72 = *(void *)&v187;
                unint64_t v59 = v181;
                uint64_t v60 = v180;
                unint64_t v62 = v184;
                uint64_t v38 = v179;
                goto LABEL_52;
              }
            }
            uint64_t v61 = (uint64_t)v185;
            sub_25426B304(*(uint64_t *)&v187, (uint64_t)v185, 1u);
            uint64_t v0 = v191;
            unint64_t v59 = v181;
            uint64_t v60 = v180;
            unint64_t v62 = v184;
            uint64_t v38 = v179;
          }
          else
          {
            uint64_t v72 = *(void *)&v187;
            sub_25433A8C8(*(uint64_t *)&v187, v61, 1u);
            uint64_t v67 = *(void (**)(unint64_t, uint64_t, uint64_t))v198;
            unint64_t v71 = v35;
LABEL_52:
            unint64_t v35 = v71;
            v67(v9, 1, 1);
            sub_25426B304(v72, v61, 1u);
          }
LABEL_38:
          swift_release();
          if (v62 == v60)
          {
LABEL_127:
            sub_25426B304(*(uint64_t *)&v187, v61, 1u);
            goto LABEL_137;
          }
        }
      case 2:
        unint64_t v196 = *(void *)(*(void *)(*(void *)(v0 + 40)
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                         + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
        if (v196 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v38 = sub_25436D530();
        }
        else
        {
          uint64_t v38 = *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        unint64_t v9 = *(void *)&v187;
        unint64_t v80 = v35;
        if (!v38)
        {
          sub_25426B304(*(uint64_t *)&v187, (uint64_t)v185, 2u);
          goto LABEL_137;
        }
        unint64_t v81 = 0;
        unint64_t v35 = v196;
        double v82 = (void (*)(void, void, void))(v196 & 0xC000000000000001);
        uint64_t v194 = (unsigned int (**)(unint64_t, uint64_t, unint64_t))(v196 + 32);
        v195 = (char *)(v196 & 0xFFFFFFFFFFFFFF8);
        uint64_t v193 = (void (**)(char *, unint64_t, unint64_t))(v189 + 16);
        int64_t v192 = (void (**)(char *, unint64_t))(v189 + 32);
        unint64_t v199 = (uint64_t (**)())(v196 & 0xC000000000000001);
        while (v82)
        {
          uint64_t v83 = MEMORY[0x25A275A00](v81, v35);
          BOOL v46 = __OFADD__(v81++, 1);
          if (v46)
          {
LABEL_159:
            __break(1u);
            goto LABEL_160;
          }
LABEL_72:
          uint64_t v84 = *(void *)(v83 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
          if (v84)
          {
            uint64_t v85 = *(void *)(v9 + 16);
            if (v85)
            {
              uint64_t v86 = *(void *)(v84 + qword_269DDAA08);
              if (*(void *)(v9 + 32) != v86)
              {
                if (v85 == 1) {
                  goto LABEL_91;
                }
                if (*(void *)(v9 + 40) != v86)
                {
                  if (v85 == 2) {
                    goto LABEL_91;
                  }
                  uint64_t v97 = 6;
                  while (1)
                  {
                    uint64_t v98 = v97 - 3;
                    if (__OFADD__(v97 - 4, 1)) {
                      goto LABEL_161;
                    }
                    if (*(void *)(v9 + 8 * v97) == v86) {
                      break;
                    }
                    ++v97;
                    if (v98 == v85) {
                      goto LABEL_91;
                    }
                  }
                }
              }
              swift_retain();
              unint64_t v88 = sub_254332FC0();
              if (*v87)
              {
                CGFloat v89 = v87;
                (*v193)(v198, v83 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v80);
                unint64_t v90 = *v89;
                char v91 = swift_isUniquelyReferenced_nonNull_native();
                *CGFloat v89 = v90;
                uint64_t v92 = v189;
                if ((v91 & 1) == 0)
                {
                  unint64_t v90 = sub_2542584AC(0, *(void *)(v90 + 16) + 1, 1, v90);
                  *CGFloat v89 = v90;
                }
                unint64_t v94 = *(void *)(v90 + 16);
                unint64_t v93 = *(void *)(v90 + 24);
                if (v94 >= v93 >> 1)
                {
                  unint64_t v90 = sub_2542584AC(v93 > 1, v94 + 1, 1, v90);
                  *CGFloat v89 = v90;
                }
                CGRect v95 = v198;
                double v82 = (void (*)(void, void, void))v199;
                *(void *)(v90 + 16) = v94 + 1;
                unint64_t v96 = v90
                    + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))
                    + *(void *)(v92 + 72) * v94;
                unint64_t v80 = v200;
                (*(void (**)(unint64_t, char *, unint64_t))(v92 + 32))(v96, v95, v200);
                ((void (*)(unsigned char *, void))v88)(v201, 0);
                uint64_t v0 = v191;
                unint64_t v9 = *(void *)&v187;
                unint64_t v35 = v196;
              }
              else
              {
                ((void (*)(unsigned char *, void))v88)(v201, 0);
                double v82 = (void (*)(void, void, void))v199;
              }
              swift_release();
            }
          }
LABEL_91:
          uint64_t v99 = *(void *)(v83 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
          if (!v99) {
            goto LABEL_65;
          }
          uint64_t v100 = *(void *)(v9 + 16);
          if (!v100) {
            goto LABEL_65;
          }
          uint64_t v101 = *(void *)(v99 + qword_269DDAA08);
          if (*(void *)(v9 + 32) == v101)
          {
LABEL_96:
            swift_retain();
            CGRect v103 = sub_254332FC0();
            if (*v102)
            {
              CGRect v104 = v102;
              (*v193)((char *)v197, v83 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v80);
              unint64_t v105 = *v104;
              char v106 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t *v104 = v105;
              uint64_t v107 = v189;
              if ((v106 & 1) == 0)
              {
                unint64_t v105 = sub_2542584AC(0, *(void *)(v105 + 16) + 1, 1, v105);
                unint64_t *v104 = v105;
              }
              unint64_t v109 = *(void *)(v105 + 16);
              unint64_t v108 = *(void *)(v105 + 24);
              if (v109 >= v108 >> 1)
              {
                unint64_t v105 = sub_2542584AC(v108 > 1, v109 + 1, 1, v105);
                unint64_t *v104 = v105;
              }
              *(void *)(v105 + 16) = v109 + 1;
              unint64_t v110 = v105
                   + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))
                   + *(void *)(v107 + 72) * v109;
              double v82 = (void (*)(void, void, void))v199;
              unint64_t v80 = v200;
              (*(void (**)(unint64_t, unint64_t, unint64_t))(v107 + 32))(v110, v197, v200);
              ((void (*)(unsigned char *, void))v103)(v201, 0);
              swift_release();
              swift_release();
              uint64_t v0 = v191;
              unint64_t v9 = *(void *)&v187;
              unint64_t v35 = v196;
            }
            else
            {
              ((void (*)(unsigned char *, void))v103)(v201, 0);
              swift_release();
              swift_release();
              double v82 = (void (*)(void, void, void))v199;
            }
            if (v81 == v38)
            {
LABEL_129:
              unint64_t v35 = v80;
              sub_25426B304(v9, (uint64_t)v185, 2u);
LABEL_137:
              swift_bridgeObjectRelease();
LABEL_138:
              uint64_t v151 = v174;
              uint64_t v152 = *v174;
              uint64_t v153 = v174[1];
              *int64_t v174 = 0;
              v151[1] = 0;
              unsigned __int8 v154 = *((unsigned char *)v151 + 16);
              *((unsigned char *)v151 + 16) = -1;
              sub_25426B304(v152, v153, v154);
              goto LABEL_139;
            }
          }
          else
          {
            if (v100 != 1)
            {
              if (*(void *)(v9 + 40) == v101) {
                goto LABEL_96;
              }
              if (v100 != 2)
              {
                uint64_t v111 = 6;
                do
                {
                  uint64_t v112 = v111 - 3;
                  if (__OFADD__(v111 - 4, 1)) {
                    goto LABEL_162;
                  }
                  if (*(void *)(v9 + 8 * v111) == v101) {
                    goto LABEL_96;
                  }
                  ++v111;
                }
                while (v112 != v100);
              }
            }
LABEL_65:
            swift_release();
            if (v81 == v38) {
              goto LABEL_129;
            }
          }
        }
        if (v81 < *((void *)v195 + 2))
        {
          uint64_t v83 = (uint64_t)v194[v81];
          swift_retain();
          BOOL v46 = __OFADD__(v81++, 1);
          if (v46) {
            goto LABEL_159;
          }
          goto LABEL_72;
        }
LABEL_165:
        __break(1u);
LABEL_166:
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_25436D530();
LABEL_5:
        uint64_t v40 = (uint64_t)v185;
        uint64_t v41 = *(void *)&v187;
        if (!v39)
        {
LABEL_128:
          sub_25426B304(v41, v40, 0);
          swift_bridgeObjectRelease();
          uint64_t v0 = v38;
          goto LABEL_138;
        }
        uint64_t v42 = 0;
        uint64_t v43 = *(void *)(*(void *)&v187 + 16);
        unint64_t v44 = v9 & 0xC000000000000001;
        v195 = (char *)(v9 + 32);
        unint64_t v196 = v9 & 0xFFFFFFFFFFFFFF8;
        uint64_t v193 = (void (**)(char *, unint64_t, unint64_t))(v189 + 32);
        uint64_t v194 = (unsigned int (**)(unint64_t, uint64_t, unint64_t))(v189 + 16);
        unint64_t v197 = v9 & 0xC000000000000001;
        unint64_t v198 = (char *)v39;
        while (1)
        {
          if (v44)
          {
            uint64_t v45 = MEMORY[0x25A275A00](v42, v9);
            BOOL v46 = __OFADD__(v42++, 1);
            if (v46) {
              goto LABEL_158;
            }
          }
          else
          {
            if ((unint64_t)v42 >= *(void *)(v196 + 16)) {
              goto LABEL_164;
            }
            uint64_t v45 = *(void *)&v195[8 * (void)v42];
            swift_retain();
            BOOL v46 = __OFADD__(v42++, 1);
            if (v46)
            {
LABEL_158:
              __break(1u);
              goto LABEL_159;
            }
          }
          if (!v43) {
            goto LABEL_7;
          }
          uint64_t v47 = *(void *)(v45 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
          if (*(void *)(v41 + 32) == v47)
          {
LABEL_16:
            unint64_t v48 = v9;
            uint64_t v50 = sub_254332FC0();
            if (*v49)
            {
              os_log_type_t v51 = v49;
              (*v194)((unint64_t)v199, v45 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v35);
              unint64_t v52 = *v51;
              char v53 = swift_isUniquelyReferenced_nonNull_native();
              *os_log_type_t v51 = v52;
              if ((v53 & 1) == 0)
              {
                unint64_t v52 = sub_2542584AC(0, *(void *)(v52 + 16) + 1, 1, v52);
                *os_log_type_t v51 = v52;
              }
              unint64_t v55 = *(void *)(v52 + 16);
              unint64_t v54 = *(void *)(v52 + 24);
              if (v55 >= v54 >> 1)
              {
                unint64_t v52 = sub_2542584AC(v54 > 1, v55 + 1, 1, v52);
                *os_log_type_t v51 = v52;
              }
              uint64_t v41 = *(void *)&v187;
              unint64_t v9 = v48;
              *(void *)(v52 + 16) = v55 + 1;
              unint64_t v56 = v52
                  + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))
                  + *(void *)(v189 + 72) * v55;
              unint64_t v35 = v200;
              (*(void (**)(unint64_t, uint64_t (**)()))(v189 + 32))(v56, v199);
              ((void (*)(unsigned char *, void))v50)(v201, 0);
              swift_release();
              uint64_t v38 = v191;
              uint64_t v40 = (uint64_t)v185;
            }
            else
            {
              ((void (*)(unsigned char *, void))v50)(v201, 0);
              swift_release();
              uint64_t v41 = *(void *)&v187;
            }
            unint64_t v44 = v197;
            uint64_t v39 = (uint64_t)v198;
            if (v42 == v198) {
              goto LABEL_128;
            }
          }
          else
          {
            if (v43 != 1)
            {
              if (*(void *)(v41 + 40) == v47) {
                goto LABEL_16;
              }
              if (v43 != 2)
              {
                uint64_t v57 = 6;
                while (1)
                {
                  uint64_t v58 = v57 - 3;
                  if (__OFADD__(v57 - 4, 1)) {
                    break;
                  }
                  if (*(void *)(v41 + 8 * v57) == v47) {
                    goto LABEL_16;
                  }
                  ++v57;
                  if (v58 == v43) {
                    goto LABEL_7;
                  }
                }
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
                goto LABEL_165;
              }
            }
LABEL_7:
            swift_release();
            if (v42 == (char *)v39) {
              goto LABEL_128;
            }
          }
        }
      case 3:
        unint64_t v197 = *(void *)(v189 + 56);
        unint64_t v198 = (char *)(v189 + 56);
        ((void (*)(uint64_t (**)(), uint64_t, uint64_t, unint64_t))v197)(v14, 1, 1, v35);
        unint64_t v113 = *(void *)(*(void *)(*(void *)(v0 + 40)
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                         + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
        unint64_t v199 = v14;
        int64_t v192 = (void (**)(char *, unint64_t))v26;
        if (v113 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v114 = sub_25436D530();
        }
        else
        {
          uint64_t v114 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        uint64_t v115 = (uint64_t (*)())v189;
        if (!v114) {
          goto LABEL_125;
        }
        if (v114 < 1)
        {
          __break(1u);
        }
        else
        {
          uint64_t v116 = 0;
          double v117 = v187;
          double v118 = *(double *)&v185;
          unint64_t v119 = v113 & 0xC000000000000001;
          float64x2_t v120 = (void (**)(char *, uint64_t, unint64_t *))(v2 + 16);
          uint64_t v121 = (void (**)(char *, unint64_t *))(v2 + 8);
          uint64_t v194 = (unsigned int (**)(unint64_t, uint64_t, unint64_t))(v189 + 16);
          v195 = (char *)v121;
          double v122 = INFINITY;
          do
          {
            if (v119) {
              MEMORY[0x25A275A00](v116, v113);
            }
            else {
              swift_retain();
            }
            (*v120)(v4, *(void *)(v191 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
            uint64_t v123 = sub_254349BD4((uint64_t)v4);
            (*v121)(v4, v1);
            if (!v123) {
              goto LABEL_116;
            }
            CGFloat v124 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
            CGFloat v125 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 8);
            CGFloat v126 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
            CGFloat v127 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 24);
            v202.origin.CGFloat x = v124;
            v202.origin.CGFloat y = v125;
            v202.size.CGFloat width = v126;
            v202.size.CGFloat height = v127;
            CGFloat v128 = CGRectGetMidX(v202) - v117;
            v203.origin.CGFloat x = v124;
            v203.origin.CGFloat y = v125;
            v203.size.CGFloat width = v126;
            v203.size.CGFloat height = v127;
            double MidY = CGRectGetMidY(v203);
            swift_release();
            double v130 = sqrt(v128 * v128 + (MidY - v118) * (MidY - v118));
            if (v130 < v122)
            {
              uint64_t v131 = v120;
              float64x2_t v132 = v4;
              uint64_t v133 = v1;
              unint64_t v134 = v113;
              unint64_t v135 = v119;
              uint64_t v136 = v114;
              unint64_t v137 = v199;
              sub_25425042C((uint64_t)v199, &qword_269DD7F58);
              unint64_t v138 = v200;
              (*v194)((unint64_t)v137, v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v200);
              swift_release();
              unint64_t v139 = v137;
              uint64_t v114 = v136;
              unint64_t v119 = v135;
              unint64_t v113 = v134;
              uint64_t v1 = v133;
              uint64_t v4 = v132;
              float64x2_t v120 = v131;
              uint64_t v121 = (void (**)(char *, unint64_t *))v195;
              ((void (*)(uint64_t (**)(), void, uint64_t, unint64_t))v197)(v139, 0, 1, v138);
              double v122 = v130;
            }
            else
            {
LABEL_116:
              swift_release();
            }
            uint64_t v115 = (uint64_t (*)())v189;
            ++v116;
          }
          while (v114 != v116);
LABEL_125:
          swift_bridgeObjectRelease();
          uint64_t v140 = v199;
          unint64_t v141 = v196;
          sub_2542503C8((uint64_t)v199, v196, &qword_269DD7F58);
          unint64_t v142 = v200;
          if ((*((unsigned int (**)(unint64_t, uint64_t, unint64_t))v115 + 6))(v141, 1, v200) == 1)
          {
            unint64_t v35 = v142;
            sub_25426B304(*(uint64_t *)&v187, (uint64_t)v185, 3u);
            sub_25425042C((uint64_t)v140, &qword_269DD7F58);
            float64x2_t v143 = (void (*)(void, void, void))v141;
LABEL_135:
            sub_25425042C((uint64_t)v143, &qword_269DD7F58);
            uint64_t v0 = v191;
            goto LABEL_138;
          }
          uint64_t v14 = (uint64_t (**)())*((void *)v115 + 4);
          unint64_t v144 = v192;
          ((void (*)(void (**)(char *, unint64_t), unint64_t, unint64_t))v14)(v192, v141, v142);
          uint64_t v145 = v115;
          uint64_t v0 = v191;
          uint64_t v115 = sub_254332FC0();
          uint64_t v4 = v185;
          if (!*v146)
          {
            ((void (*)(unsigned char *, void))v115)(v201, 0);
            sub_25426B304(*(uint64_t *)&v187, (uint64_t)v4, 3u);
            unint64_t v172 = v144;
            unint64_t v35 = v142;
            (*((void (**)(void, unint64_t))v145 + 1))(v172, v142);
            sub_25425042C((uint64_t)v199, &qword_269DD7F58);
            goto LABEL_138;
          }
          uint64_t v1 = v146;
          (*((void (**)(void (**)(void, void), void (**)(char *, unint64_t), unint64_t))v145
           + 2))((void (**)(void, void))v193, v144, v142);
          unint64_t v113 = *v1;
          char v147 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v1 = v113;
          uint64_t v26 = v145;
          if (v147)
          {
LABEL_132:
            unint64_t v149 = *(void *)(v113 + 16);
            unint64_t v148 = *(void *)(v113 + 24);
            if (v149 >= v148 >> 1)
            {
              unint64_t v113 = sub_2542584AC(v148 > 1, v149 + 1, 1, v113);
              *uint64_t v1 = v113;
            }
            *(void *)(v113 + 16) = v149 + 1;
            unint64_t v150 = v200;
            ((void (*)(unint64_t, void, unint64_t))v14)(v113+ ((*((unsigned __int8 *)v26 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v26 + 80))+ *((void *)v26 + 9) * v149, v193, v200);
            ((void (*)(unsigned char *, void))v115)(v201, 0);
            sub_25426B304(*(uint64_t *)&v187, (uint64_t)v4, 3u);
            unint64_t v35 = v150;
            (*((void (**)(void, unint64_t))v26 + 1))(v192, v150);
            float64x2_t v143 = (void (*)(void, void, void))v199;
            goto LABEL_135;
          }
        }
        unint64_t v113 = sub_2542584AC(0, *(void *)(v113 + 16) + 1, 1, v113);
        *uint64_t v1 = v113;
        goto LABEL_132;
      default:
        uint64_t v38 = v0;
        unint64_t v9 = *(void *)(*(void *)(*(void *)(v0 + 40)
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
        if (v9 >> 62) {
          goto LABEL_166;
        }
        uint64_t v39 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        goto LABEL_5;
    }
  }
LABEL_139:
  uint64_t v194 = (unsigned int (**)(unint64_t, uint64_t, unint64_t))OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs);
  if (result && *(void *)(result + 16))
  {
    unint64_t v156 = v188;
    unint64_t v157 = v35;
  }
  else
  {
    v158 = v194;
    *(unsigned int (**)(unint64_t, uint64_t, unint64_t))((char *)v194 + v0) = 0;
    swift_bridgeObjectRelease();
    uint64_t result = *(uint64_t *)((char *)v158 + v0);
    unint64_t v156 = v188;
    unint64_t v157 = v35;
    if (!result) {
      return result;
    }
  }
  uint64_t v159 = *(void *)(result + 16);
  uint64_t v193 = (void (**)(char *, unint64_t, unint64_t))result;
  if (v159)
  {
    uint64_t v160 = v0;
    uint64_t v161 = *(uint64_t (***)())(v189 + 16);
    unint64_t v162 = result + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
    unint64_t v163 = *(void *)(v189 + 72);
    uint64_t v164 = (void (**)(char *, uint64_t, uint64_t, unint64_t))(v189 + 56);
    unint64_t v198 = (char *)(v189 + 48);
    unint64_t v199 = v161;
    unint64_t v196 = v189 + 32;
    unint64_t v197 = v163;
    v195 = (char *)(v189 + 8);
    swift_bridgeObjectRetain();
    int64_t v192 = (void (**)(char *, unint64_t))((unint64_t)v164 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    unint64_t v165 = v190;
    while (1)
    {
      ((void (*)(char *, unint64_t, unint64_t))v199)(v156, v162, v157);
      char v166 = *v164;
      (*v164)(v156, 0, 1, v157);
      if ((*(unsigned int (**)(char *, uint64_t, unint64_t))v198)(v156, 1, v157) == 1) {
        break;
      }
      uint64_t v167 = (*(uint64_t (**)(char *, char *, unint64_t))v196)(v165, v156, v157);
      unint64_t v168 = *(void *)(*(void *)(*(void *)(v160 + 40)
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      MEMORY[0x270FA5388](v167);
      *(&v173 - 2) = (uint64_t (*)())v165;
      swift_bridgeObjectRetain();
      unint64_t v169 = (unint64_t)sub_254277A90((uint64_t (*)(uint64_t *))sub_25427DCAC, &v173 - 4, v168);
      if (v169 >> 62) {
        uint64_t v170 = sub_25436D530();
      }
      else {
        uint64_t v170 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (!v170)
      {
        *(unsigned int (**)(unint64_t, uint64_t, unint64_t))((char *)v194 + v191) = 0;
        swift_bridgeObjectRelease();
      }
      unint64_t v157 = v200;
      (*(void (**)(char *, unint64_t))v195)(v190, v200);
      v162 += v197;
      --v159;
      uint64_t v160 = v191;
      unint64_t v156 = v188;
      if (!v159)
      {
        v166(v188, 1, 1, v157);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    unint64_t v171 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v189 + 56);
    swift_bridgeObjectRetain();
    v171(v156, 1, 1, v157);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_254335C44(uint64_t a1)
{
  uint64_t v3 = sub_25436C800();
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v1;
  unint64_t v9 = *(void *)(*(void *)(*(void *)(v1 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  unint64_t v52 = (void (**)(char *, uint64_t))MEMORY[0x263F8EE78];
  unint64_t v37 = v9;
  if (v9 >> 62) {
    goto LABEL_42;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    if (!v10)
    {
      uint64_t v21 = (void (**)(char *, uint64_t))MEMORY[0x263F8EE78];
      goto LABEL_25;
    }
    unint64_t v12 = 0;
    uint64_t v43 = v37 & 0xFFFFFFFFFFFFFF8;
    unint64_t v44 = v37 & 0xC000000000000001;
    unint64_t v42 = v37 + 32;
    unint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    uint64_t v50 = v41 + 16;
    uint64_t v47 = (void (**)(char *, uint64_t))(v41 + 8);
    unint64_t v48 = (void (**)(char *, char *, uint64_t))(v41 + 32);
    os_log_type_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    unint64_t v38 = (v41 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v39 = v10;
    uint64_t v40 = a1;
LABEL_8:
    if (v44) {
      break;
    }
    if (v12 < *(void *)(v43 + 16))
    {
      uint64_t v13 = *(void *)(v42 + 8 * v12);
      swift_retain();
      BOOL v14 = __OFADD__(v12++, 1);
      if (v14) {
        goto LABEL_22;
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25436D530();
  }
  uint64_t v13 = MEMORY[0x25A275A00](v12, v37);
  BOOL v14 = __OFADD__(v12++, 1);
  if (!v14)
  {
LABEL_11:
    uint64_t v15 = *(void *)(a1 + 16);
    if (!v15)
    {
      uint64_t v19 = *v51;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    unint64_t v46 = v12;
    uint64_t v45 = v13;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
    uint64_t v17 = *(void *)(v41 + 72);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v18(v8, v16, v3);
      uint64_t v19 = *v51;
      (*v51)(v8, 0, 1, v3);
      if ((*v49)(v8, 1, v3) == 1) {
        break;
      }
      (*v48)(v5, v8, v3);
      sub_25433AA9C((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      char v20 = sub_25436CBB0();
      (*v47)(v5, v3);
      if (v20)
      {
        a1 = v40;
        swift_bridgeObjectRelease();
        sub_25436D370();
        sub_25436D3B0();
        sub_25436D3C0();
        sub_25436D380();
        goto LABEL_6;
      }
      v16 += v17;
      if (!--v15)
      {
        uint64_t v10 = v39;
        a1 = v40;
        unint64_t v12 = v46;
LABEL_18:
        v19(v8, 1, 1, v3);
        swift_release();
        swift_bridgeObjectRelease();
LABEL_7:
        if (v12 == v10) {
          goto LABEL_23;
        }
        goto LABEL_8;
      }
    }
    swift_release();
    a1 = v40;
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v10 = v39;
    unint64_t v12 = v46;
    goto LABEL_7;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t v21 = v52;
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v36;
  swift_retain();
  uint64_t v23 = sub_254339BA8(v21, v22);
  swift_release();
  swift_release();
  uint64_t v24 = sub_254336204(v23);
  swift_bridgeObjectRelease();
  if (v24) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = v11;
  }
  *(void *)(*(void *)(v22 + 48)
            + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v22 + 48);
  if (*(void *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects)) {
    unint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  }
  else {
    unint64_t v27 = v11;
  }
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_33;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_25436D530();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v28) {
    return swift_bridgeObjectRelease();
  }
LABEL_33:
  if (v28 >= 1)
  {
    if ((v27 & 0xC000000000000001) != 0)
    {
      uint64_t v30 = 0;
      do
      {
        uint64_t v31 = MEMORY[0x25A275A00](v30++, v27);
        uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
        *(void *)(v32 + 24) = 0x3FF0000000000000;
        swift_retain();
        swift_unknownObjectRelease();
        *(void *)(v32 + 16) = 1;
        swift_release();
      }
      while (v28 != v30);
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v34 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      do
      {
        uint64_t v35 = *(void *)(*(void *)(v27 + 8 * v33++ + 32) + v34);
        *(void *)(v35 + 16) = 1;
        *(void *)(v35 + 24) = 0x3FF0000000000000;
      }
      while (v28 != v33);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_254336204(uint64_t a1)
{
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25436D3A0();
  if (!v2) {
    return v5;
  }
  uint64_t v3 = a1 + 32;
  type metadata accessor for DKPersonTrackerState(0);
  while (1)
  {
    v3 += 8;
    if (!swift_dynamicCastClass()) {
      break;
    }
    swift_retain();
    sub_25436D370();
    sub_25436D3B0();
    sub_25436D3C0();
    sub_25436D380();
    if (!--v2) {
      return v5;
    }
  }
  swift_release();
  return 0;
}

uint64_t sub_2543362DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25436C800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v55 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v49 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v52 = (uint64_t)&v49 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection;
  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25428E284(v21, v22);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = *(void **)(v0 + v20);
  uint64_t v24 = v23[2];
  uint64_t v63 = v19;
  if (v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v19, v24 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v5);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v25(v19, 0, 1, v5);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v25(v19, 1, 1, v5);
  }
  uint64_t v26 = v23[3];
  uint64_t v27 = v52;
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v52, v26 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v5);
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = 1;
  }
  v25((char *)v27, v28, 1, v5);
  unint64_t v29 = *(void *)(*(void *)(*(void *)(v1 + 40)
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  uint64_t v30 = v23[6];
  uint64_t v31 = *(void **)(v30 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  objc_msgSend(v31, sel_lock);
  int v56 = *(unsigned __int8 *)(v30 + 16);
  objc_msgSend(v31, sel_unlock);
  swift_release();
  unint64_t v32 = v29;
  uint64_t result = swift_release();
  os_log_type_t v51 = v10;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_25436D530();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v35 = (uint64_t)v55;
  uint64_t v36 = (uint64_t)v63;
  uint64_t v37 = (uint64_t)v64;
  if (v34)
  {
    if (v34 >= 1)
    {
      uint64_t v38 = 0;
      unsigned int v59 = v56 - 2;
      uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      unint64_t v58 = v32 & 0xC000000000000001;
      char v53 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      unint64_t v54 = (void (**)(char *, uint64_t))(v6 + 8);
      unint64_t v61 = v32;
      uint64_t v62 = v5;
      uint64_t v60 = v34;
      while (1)
      {
        if (v58)
        {
          uint64_t v41 = MEMORY[0x25A275A00](v38, v32);
        }
        else
        {
          uint64_t v41 = *(void *)(v32 + 8 * v38 + 32);
          swift_retain();
        }
        if (v59 <= 2)
        {
          sub_2542503C8(v36, v37, &qword_269DD7F58);
          unint64_t v42 = *v57;
          if ((*v57)(v37, 1, v5) == 1)
          {
            sub_25425042C(v37, &qword_269DD7F58);
          }
          else
          {
            uint64_t v43 = v51;
            (*v53)(v51, v37, v5);
            if (sub_25436C7D0())
            {
              *(unsigned char *)(*(void *)(v41
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                       + 136) = 1;
              uint64_t v44 = sub_25436C7B0();
              uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
              v45(v4, 1, 1, v44);
              swift_retain();
              swift_retain();
              sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 1.0);
              swift_release();
              sub_25425042C((uint64_t)v4, &qword_269DD7A40);
              swift_release();
              v45(v4, 1, 1, v44);
              swift_retain();
              swift_retain();
              sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 1.0);
              swift_release();
              swift_release();
              sub_25425042C((uint64_t)v4, &qword_269DD7A40);
              v45(v4, 1, 1, v44);
              uint64_t v5 = v62;
              swift_retain();
              swift_retain();
              sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 1.0);
              swift_release();
              swift_release();
              swift_release();
              sub_25425042C((uint64_t)v4, &qword_269DD7A40);
              (*v54)(v43, v5);
              uint64_t v35 = (uint64_t)v55;
              goto LABEL_14;
            }
            (*v54)(v43, v5);
            uint64_t v35 = (uint64_t)v55;
          }
          if (v56 == 4)
          {
            sub_2542503C8(v52, v35, &qword_269DD7F58);
            if (v42(v35, 1, v5) == 1)
            {
              sub_25425042C(v35, &qword_269DD7F58);
            }
            else
            {
              unint64_t v46 = v50;
              (*v53)(v50, v35, v5);
              if (sub_25436C7D0())
              {
                *(unsigned char *)(*(void *)(v41
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                         + 136) = 1;
                uint64_t v47 = sub_25436C7B0();
                unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
                v48(v4, 1, 1, v47);
                swift_retain();
                swift_retain();
                sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 1.0);
                swift_release();
                sub_25425042C((uint64_t)v4, &qword_269DD7A40);
                swift_release();
                v48(v4, 1, 1, v47);
                swift_retain();
                swift_retain();
                sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 1.0);
                swift_release();
                swift_release();
                sub_25425042C((uint64_t)v4, &qword_269DD7A40);
                v48(v4, 1, 1, v47);
                uint64_t v35 = (uint64_t)v55;
                uint64_t v5 = v62;
                swift_retain();
                swift_retain();
                sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 0.5);
                swift_release();
                swift_release();
                swift_release();
                sub_25425042C((uint64_t)v4, &qword_269DD7A40);
                (*v54)(v46, v5);
                goto LABEL_14;
              }
              (*v54)(v46, v5);
            }
          }
        }
        *(unsigned char *)(*(void *)(v41 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                 + 136) = 0;
        uint64_t v39 = sub_25436C7B0();
        uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
        v40(v4, 1, 1, v39);
        swift_retain();
        swift_retain();
        sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 0.0);
        swift_release();
        sub_25425042C((uint64_t)v4, &qword_269DD7A40);
        swift_release();
        v40(v4, 1, 1, v39);
        swift_retain();
        swift_retain();
        sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 0.0);
        swift_release();
        swift_release();
        sub_25425042C((uint64_t)v4, &qword_269DD7A40);
        v40(v4, 1, 1, v39);
        uint64_t v5 = v62;
        swift_retain();
        swift_retain();
        sub_25435D340(0x3FF0000000000000, 0, (uint64_t)v4, 0.0);
        swift_release();
        swift_release();
        swift_release();
        sub_25425042C((uint64_t)v4, &qword_269DD7A40);
LABEL_14:
        ++v38;
        unint64_t v32 = v61;
        uint64_t v36 = (uint64_t)v63;
        uint64_t v37 = (uint64_t)v64;
        if (v60 == v38) {
          goto LABEL_29;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    sub_25425042C(v52, &qword_269DD7F58);
    return sub_25425042C(v36, &qword_269DD7F58);
  }
  return result;
}

void sub_254336DB0()
{
  uint64_t v1 = v0;
  uint64_t v168 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  MEMORY[0x270FA5388](v168);
  v177 = (uint64_t *)((char *)&v155 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v169 = (char *)&v155 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v155 - v9;
  MEMORY[0x270FA5388](v11);
  unint64_t v172 = (char *)&v155 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v176 = (uint64_t)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DKMotion3();
  uint64_t v170 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v179 = (uint64_t)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (unint64_t)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for DKCamera();
  uint64_t v167 = *(char **)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v21 = (char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25436C7B0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  MEMORY[0x270FA5388](v24);
  unint64_t v175 = (char *)&v155 - v25;
  MEMORY[0x270FA5388](v26);
  double v31 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (uint64_t)&v155 - v28;
  uint64_t v33 = *(void *)((char *)v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel);
  if (v33)
  {
    uint64_t v157 = v30;
    uint64_t v163 = v29;
    char v166 = v10;
    uint64_t v164 = v5;
    uint64_t v34 = v1[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    int64_t v192 = *(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16);
    uint64_t v193 = v23 + 16;
    v192((char *)&v155 - v28, v34, v22, v31);
    uint64_t v165 = v33;
    swift_retain();
    sub_25436C770();
    double v36 = v35;
    uint64_t v37 = v23 + 8;
    uint64_t v189 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v189(v32, v22);
    type metadata accessor for DKISSDetections();
    uint64_t inited = swift_initStackObject();
    *(double *)(inited + 16) = v36;
    uint64_t v159 = inited;
    *(void *)(inited + 24) = MEMORY[0x263F8EE78];
    unint64_t v181 = (void *)(inited + 24);
    unint64_t v39 = *(void *)(*(void *)(v1[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    unint64_t v178 = v15;
    unint64_t v182 = v21;
    uint64_t v158 = v23;
    if (v39 >> 62) {
      goto LABEL_127;
    }
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_4:
    uint64_t v41 = (unsigned int (**)(void, void, void))v39;
    unint64_t v171 = v19;
    uint64_t v191 = v22;
    uint64_t v187 = v32;
    uint64_t v188 = v37;
    unint64_t v42 = v189;
    unint64_t v190 = v1;
    if (v40)
    {
      if (v40 < 1)
      {
        __break(1u);
LABEL_131:
        __break(1u);
        return;
      }
      uint64_t v43 = 0;
      unint64_t v183 = v39 & 0xC000000000000001;
      uint64_t v180 = (unsigned int (**)(void, void, void))v39;
      unint64_t v184 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v40;
      do
      {
        if (v183)
        {
          uint64_t v50 = MEMORY[0x25A275A00](v43, v41);
        }
        else
        {
          uint64_t v50 = (uint64_t)v41[(void)v43 + 4];
          swift_retain();
        }
        uint64_t v51 = *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
        ((void (*)(uint64_t, uint64_t, uint64_t))v192)(v32, v1[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v22);
        swift_retain();
        sub_2542CF4A4(v32);
        uint64_t v52 = *(void *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
        swift_retain();
        swift_release();
        v42(v32, v22);
        if (v52)
        {
          uint64_t v53 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
          uint64_t v54 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 8);
          uint64_t v55 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 16);
          uint64_t v56 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 24);
          unint64_t v186 = *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
          uint64_t v57 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
          int v58 = *(unsigned __int8 *)(v52
                                   + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw
                                   + 8);
          uint64_t v59 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
          int v60 = *(unsigned __int8 *)(v52
                                   + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch
                                   + 8);
          uint64_t v61 = *(void *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
          uint64_t v62 = *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
          char v63 = *(unsigned char *)(v52 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll + 8);
          uint64_t v64 = *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
          uint64_t v65 = *(void *)(v64 + 16);
          if (*(unsigned char *)(v65 + 33))
          {
            if (*(unsigned char *)(v65 + 32)) {
              long double v66 = atan2(*(long double *)(v65 + 48), *(long double *)(v65 + 56));
            }
            else {
              long double v66 = *(double *)(v65 + 40);
            }
          }
          else
          {
            long double v66 = *(double *)(v64 + 24);
          }
          uint64_t v67 = *(void *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
          uint64_t v68 = *(void *)(v67 + 16);
          if (*(unsigned char *)(v68 + 33) == 1)
          {
            if (*(unsigned char *)(v68 + 32)) {
              long double v44 = atan2(*(long double *)(v68 + 48), *(long double *)(v68 + 56));
            }
            else {
              long double v44 = *(double *)(v68 + 40);
            }
          }
          else
          {
            long double v44 = *(double *)(v67 + 24);
          }
          if (v58) {
            uint64_t v45 = 0;
          }
          else {
            uint64_t v45 = v57;
          }
          if (v60) {
            uint64_t v46 = 0;
          }
          else {
            uint64_t v46 = v59;
          }
          type metadata accessor for DKISSDetection();
          uint64_t v47 = swift_allocObject();
          *(double *)(v47 + 16) = v36;
          *(void *)(v47 + 24) = v53;
          *(void *)(v47 + 32) = v54;
          *(void *)(v47 + 40) = v55;
          *(void *)(v47 + 48) = v56;
          *(void *)(v47 + 56) = v186;
          *(unsigned char *)(v47 + 64) = 0;
          *(void *)(v47 + 72) = 0;
          *(void *)(v47 + 80) = v45;
          *(unsigned char *)(v47 + 88) = 0;
          *(void *)(v47 + 96) = v46;
          *(unsigned char *)(v47 + 104) = 0;
          *(void *)(v47 + 112) = v61;
          *(unsigned char *)(v47 + 120) = v63;
          *(void *)(v47 + 128) = v62;
          *(long double *)(v47 + 136) = v66;
          *(unsigned char *)(v47 + 144) = 0;
          *(long double *)(v47 + 152) = v44;
          *(unsigned char *)(v47 + 160) = 0;
          swift_retain();
          uint64_t v48 = swift_retain();
          uint64_t v49 = v181;
          MEMORY[0x25A275490](v48);
          if (*(void *)((*v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25436CE10();
          }
          sub_25436CE60();
          sub_25436CDE0();
          swift_release();
          swift_release();
          uint64_t v1 = v190;
          uint64_t v22 = v191;
          uint64_t v32 = v187;
          unint64_t v42 = v189;
          uint64_t v41 = v180;
        }
        uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v43 + 1);
        swift_release();
      }
      while (v184 != v43);
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_25429630C(v159, *(unsigned char *)(v1[5]+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection), v36);
    unint64_t v39 = sub_2542697A0(MEMORY[0x263F8EE78]);
    unint64_t v19 = *(void *)(*(void *)(v1[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_25436D530();
    }
    else
    {
      uint64_t v69 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v186 = v39;
    uint64_t v180 = (unsigned int (**)(void, void, void))v19;
    if (v69)
    {
      unint64_t v70 = 0;
      uint64_t v71 = v37 + 64;
      unint64_t v184 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 & 0xC000000000000001);
      uint64_t v174 = v19 & 0xFFFFFFFFFFFFFF8;
      v173 = (uint64_t (**)(uint64_t, uint64_t, unint64_t))(v19 + 32);
      uint64_t v32 = 24;
      unint64_t v183 = v69;
      do
      {
        if (v184)
        {
          uint64_t v73 = MEMORY[0x25A275A00](v70, v180);
          BOOL v74 = __OFADD__(v70++, 1);
          if (v74) {
            goto LABEL_122;
          }
        }
        else
        {
          if (v70 >= *(void *)(v174 + 16)) {
            goto LABEL_123;
          }
          uint64_t v73 = (uint64_t)v173[v70];
          swift_retain();
          BOOL v74 = __OFADD__(v70++, 1);
          if (v74) {
            goto LABEL_122;
          }
        }
        int64_t v75 = 0;
        uint64_t v76 = 1 << *(unsigned char *)(v37 + 32);
        if (v76 < 64) {
          uint64_t v77 = ~(-1 << v76);
        }
        else {
          uint64_t v77 = -1;
        }
        unint64_t v78 = v77 & *(void *)(v37 + 64);
        int64_t v79 = (unint64_t)(v76 + 63) >> 6;
        do
        {
          if (v78)
          {
            unint64_t v80 = __clz(__rbit64(v78));
            v78 &= v78 - 1;
            unint64_t v81 = v80 | (v75 << 6);
          }
          else
          {
            int64_t v82 = v75 + 1;
            if (__OFADD__(v75, 1))
            {
              __break(1u);
              goto LABEL_121;
            }
            if (v82 >= v79) {
              goto LABEL_35;
            }
            unint64_t v83 = *(void *)(v71 + 8 * v82);
            ++v75;
            if (!v83)
            {
              int64_t v75 = v82 + 1;
              if (v82 + 1 >= v79) {
                goto LABEL_35;
              }
              unint64_t v83 = *(void *)(v71 + 8 * v75);
              if (!v83)
              {
                int64_t v75 = v82 + 2;
                if (v82 + 2 >= v79) {
                  goto LABEL_35;
                }
                unint64_t v83 = *(void *)(v71 + 8 * v75);
                if (!v83)
                {
                  int64_t v84 = v82 + 3;
                  if (v84 >= v79)
                  {
LABEL_35:
                    unint64_t v72 = sub_2542696C4((uint64_t)&unk_2703B24B0);
                    uint64_t v22 = v187;
                    unint64_t v19 = v191;
                    ((void (*)(uint64_t, uint64_t, uint64_t))v192)(v187, v1[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v191);
                    unint64_t v39 = v73;
                    sub_2543496E8(v72, v22);
                    swift_bridgeObjectRelease();
                    swift_release();
                    v189(v22, v19);
                    goto LABEL_36;
                  }
                  unint64_t v83 = *(void *)(v71 + 8 * v84);
                  if (!v83)
                  {
                    while (1)
                    {
                      int64_t v75 = v84 + 1;
                      if (__OFADD__(v84, 1)) {
                        break;
                      }
                      if (v75 >= v79) {
                        goto LABEL_35;
                      }
                      unint64_t v83 = *(void *)(v71 + 8 * v75);
                      ++v84;
                      if (v83) {
                        goto LABEL_62;
                      }
                    }
LABEL_121:
                    __break(1u);
LABEL_122:
                    __break(1u);
LABEL_123:
                    __break(1u);
LABEL_124:
                    __break(1u);
LABEL_125:
                    __break(1u);
LABEL_126:
                    __break(1u);
LABEL_127:
                    swift_bridgeObjectRetain();
                    uint64_t v40 = sub_25436D530();
                    goto LABEL_4;
                  }
                  int64_t v75 = v84;
                }
              }
            }
LABEL_62:
            unint64_t v78 = (v83 - 1) & v83;
            unint64_t v81 = __clz(__rbit64(v83)) + (v75 << 6);
          }
          uint64_t v85 = *(void *)(v37 + 56);
          uint64_t v86 = *(void *)(v85 + 24 * v81);
        }
        while (v86 < 0
             || v86 != *(void *)(v73 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId));
        unint64_t v181 = *(void **)(*(void *)(v37 + 48) + 8 * v81);
        uint64_t v22 = *(void *)(v85 + 24 * v81 + 16);
        uint64_t v87 = v1[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
        unint64_t v19 = v187;
        uint64_t v88 = v191;
        ((void (*)(uint64_t, uint64_t, uint64_t))v192)(v187, v87, v191);
        swift_bridgeObjectRetain();
        uint64_t v89 = swift_bridgeObjectRetain();
        sub_2543496E8(v89, v19);
        uint64_t v90 = v88;
        uint64_t v1 = v190;
        v189(v19, v90);
        unint64_t v91 = v186;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v195 = v91;
        unint64_t v39 = (unint64_t)&v195;
        sub_2542522BC((uint64_t)v181, v86, isUniquelyReferenced_nonNull_native);
        unint64_t v186 = v195;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_36:
        ;
      }
      while (v70 != v183);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v93 = *(void *)(*(void *)(v1[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    if (v93 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_25436D530();
    }
    else
    {
      uint64_t v94 = *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v32 = v171;
    if (v94)
    {
      if (v94 >= 1)
      {
        uint64_t v37 = 0;
        unint64_t v95 = v93 & 0xC000000000000001;
        unint64_t v96 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        uint64_t v180 = (unsigned int (**)(void, void, void))(v170 + 48);
        unint64_t v184 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56);
        v173 = (uint64_t (**)(uint64_t, uint64_t, unint64_t))(v158 + 48);
        unint64_t v162 = (void (**)(uint64_t, unint64_t, unint64_t))(v158 + 32);
        uint64_t v156 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_useFramingFeedback;
        uint64_t v160 = (void *)v93;
        unint64_t v183 = v94;
        unint64_t v161 = v93 & 0xC000000000000001;
        unint64_t v181 = v167 + 48;
        while (1)
        {
          uint64_t v1 = (void *)v93;
          if (v95)
          {
            uint64_t v97 = MEMORY[0x25A275A00](v37, v93);
          }
          else
          {
            uint64_t v97 = *(void *)(v93 + 8 * v37 + 32);
            swift_retain();
          }
          uint64_t v98 = v190[6];
          sub_2542503C8(v98 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v32, &qword_269DD7808);
          if ((*v96)(v32, 1, v185) != 1) {
            break;
          }
          swift_release();
          sub_25425042C(v32, &qword_269DD7808);
LABEL_72:
          ++v37;
          unint64_t v93 = (unint64_t)v1;
          if (v94 == v37) {
            goto LABEL_118;
          }
        }
        uint64_t v99 = (uint64_t)v182;
        sub_25428C970(v32, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for DKCamera);
        uint64_t v100 = v98 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
        uint64_t v101 = v187;
        uint64_t v102 = v191;
        ((void (*)(uint64_t, uint64_t, uint64_t))v192)(v187, v100, v191);
        uint64_t v103 = sub_254349BD4(v101);
        v189(v101, v102);
        if (!v103)
        {
          sub_25433A868(v99, (uint64_t (*)(void))type metadata accessor for DKCamera);
          swift_release();
          goto LABEL_81;
        }
        uint64_t v104 = v176;
        unint64_t v19 = (unint64_t)&qword_269DD7810;
        sub_2542503C8(v103 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, v176, &qword_269DD7810);
        unint64_t v39 = v178;
        if ((*v180)(v104, 1, v178) == 1)
        {
          sub_25433A868((uint64_t)v182, (uint64_t (*)(void))type metadata accessor for DKCamera);
          swift_release();
          swift_release();
          sub_25425042C(v104, &qword_269DD7810);
LABEL_81:
          uint64_t v94 = v183;
LABEL_114:
          unint64_t v96 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v181;
          goto LABEL_72;
        }
        uint64_t v105 = v104;
        uint64_t v106 = v179;
        sub_25428C970(v105, v179, (uint64_t (*)(void))type metadata accessor for DKMotion3);
        uint64_t v22 = *(int *)(v39 + 20);
        uint64_t v107 = *(void *)(v106 + v22);
        if (*(void *)(v107 + 16) < 3uLL) {
          goto LABEL_124;
        }
        uint64_t v174 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
        double v36 = exp(-(*(double *)(v107 + 48) * *(double *)(v107 + 48)));
        unint64_t v108 = (char *)*v184;
        uint64_t v109 = (uint64_t)v172;
        (*v184)(v172, 1, 1, v191);
        swift_retain();
        swift_retain();
        sub_25435D340(0, 1, v109, v36);
        swift_release();
        sub_25425042C(v109, &qword_269DD7A40);
        swift_release();
        uint64_t v1 = v190;
        uint64_t v110 = *(void *)(v190[5]
                         + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks);
        uint64_t v111 = *(void *)(v110 + 16);
        uint64_t v167 = v108;
        uint64_t v170 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
        if (v111
          && (unint64_t v112 = sub_254351604(*(void *)(v97 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId)),
              (v113 & 1) != 0))
        {
          uint64_t v114 = v158;
          unint64_t v115 = *(void *)(v110 + 56) + *(void *)(v158 + 72) * v112;
          uint64_t v116 = (uint64_t)v166;
          uint64_t v117 = v191;
          ((void (*)(char *, unint64_t, uint64_t))v192)(v166, v115, v191);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v108)(v116, 0, 1, v117);
          int v118 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v116, 1, v117);
          uint64_t v119 = (uint64_t)v169;
          if (v118 != 1)
          {
            unint64_t v19 = v191;
            (*v162)(v157, v116, v191);
            uint64_t v120 = v187;
            ((void (*)(uint64_t, uint64_t, unint64_t))v192)(v187, v103 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v19);
            sub_25436C700();
            double v36 = v121;
            double v122 = (void (*)(uint64_t, unint64_t))v189;
            v189(v120, v19);
            if (v36 >= *(double *)(v1[4] + 168))
            {
              v122(v157, v19);
            }
            else
            {
              if (*((unsigned char *)v1 + v156) == 1)
              {
                uint64_t v123 = *(void *)(v97 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
                *(unsigned char *)(v123 + 49) = 0;
                uint64_t v124 = *(void *)(v123 + 16);
                *(unsigned char *)(v124 + 33) = 0;
                uint64_t v125 = v124 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                swift_retain();
                swift_retain();
                sub_25425042C(v125, &qword_269DD7A40);
                uint64_t v126 = v125;
                uint64_t v127 = v191;
                ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v126, 1, 1, v191);
                swift_release();
                swift_release();
                v189(v157, v127);
                uint64_t v1 = v160;
LABEL_113:
                char v197 = 2;
                uint64_t v195 = 0;
                unint64_t v196 = 0xE000000000000000;
                sub_25436D290();
                sub_25436CCB0();
                uint64_t v194 = *(void *)(v103 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
                sub_25436D760();
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                sub_25436CCB0();
                sub_25436CF50();
                sub_25436CCB0();
                sub_25436CF50();
                sub_25436CCB0();
                sub_254272A08();
                swift_release();
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                sub_25436CCB0();
                sub_254272A08();
                swift_release();
                sub_25436CF50();
                sub_25436CCB0();
                sub_254272A08();
                swift_release();
                sub_25436CCB0();
                swift_bridgeObjectRelease();
                sub_25436CCB0();
                double v36 = *(double *)(sub_254272A08() + 24);
                swift_release();
                sub_25436CF50();
                sub_25436CCB0();
                uint64_t v152 = v195;
                unint64_t v153 = v196;
                os_log_type_t v154 = sub_25436D000();
                _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v197, v152, v153, v154);
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                sub_25433A868(v179, (uint64_t (*)(void))type metadata accessor for DKMotion3);
                sub_25433A868((uint64_t)v182, (uint64_t (*)(void))type metadata accessor for DKCamera);
                uint64_t v94 = v183;
                unint64_t v95 = v161;
                goto LABEL_114;
              }
              unint64_t v19 = v191;
              v189(v157, v191);
            }
            unint64_t v39 = (unint64_t)v164;
            unint64_t v108 = v167;
LABEL_91:
            uint64_t v128 = *(void *)(v179 + v22);
            if (*(void *)(v128 + 16) < 3uLL) {
              goto LABEL_125;
            }
            uint64_t v129 = *(void *)(v179 + *(int *)(v178 + 24));
            if (*(void *)(v129 + 16) < 3uLL) {
              goto LABEL_126;
            }
            uint64_t v130 = *(void *)(*(void *)(v103
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence)
                             + 24);
            uint64_t v131 = *(void *)(*(void *)(v103
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence)
                             + 24);
            uint64_t v132 = *(void *)(v128 + 48);
            uint64_t v133 = *(void *)(v129 + 48);
            uint64_t v134 = *(void *)(v97 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
            if (v134)
            {
              ((void (*)(uint64_t, uint64_t, unint64_t))v192)(v119, v134 + qword_269DDAA28, v19);
              ((void (*)(uint64_t, void, uint64_t, unint64_t))v108)(v119, 0, 1, v19);
              int v135 = (*v173)(v119, 1, v19);
              uint64_t v136 = v162;
              if (v135 != 1)
              {
                (*v162)((uint64_t)v175, v119, v19);
                goto LABEL_98;
              }
            }
            else
            {
              ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v108)(v119, 1, 1, v19);
              uint64_t v136 = v162;
            }
            sub_25436C6E0();
            sub_25425042C(v119, &qword_269DD7A40);
LABEL_98:
            uint64_t v137 = *(void *)(v97 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
            if (v137)
            {
              ((void (*)(unint64_t, uint64_t, unint64_t))v192)(v39, v137 + qword_269DDAA28, v19);
              ((void (*)(unint64_t, void, uint64_t, unint64_t))v108)(v39, 0, 1, v19);
              if ((*v173)(v39, 1, v19) != 1)
              {
                unint64_t v138 = v39;
                unint64_t v139 = *v136;
                unint64_t v140 = v163;
                (*v136)(v163, v138, v19);
                goto LABEL_103;
              }
            }
            else
            {
              ((void (*)(unint64_t, uint64_t, uint64_t, unint64_t))v108)(v39, 1, 1, v19);
            }
            unint64_t v140 = v163;
            sub_25436C6E0();
            sub_25425042C(v39, &qword_269DD7A40);
            unint64_t v139 = *v136;
LABEL_103:
            double v141 = *(double *)(*(void *)(v103
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence)
                             + 24);
            char v142 = v182[*(int *)(v185 + 36)];
            float64x2_t v143 = v177;
            void *v177 = v130;
            v143[1] = v131;
            v143[2] = v132;
            v143[3] = v133;
            unint64_t v144 = (int *)v168;
            uint64_t v145 = v191;
            v139((uint64_t)v143 + *(int *)(v168 + 32), (unint64_t)v175, v191);
            v139((uint64_t)v143 + v144[9], v140, v145);
            *(double *)((char *)v143 + v144[10]) = v141;
            *((unsigned char *)v143 + v144[11]) = v142;
            int v146 = *(unsigned __int8 *)(*(void *)(v97
                                                  + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                                      + 137);
            if (v146 == 1)
            {
              swift_retain();
              BOOL v148 = sub_25436AD9C((uint64_t)v177);
              uint64_t v32 = v171;
              uint64_t v1 = v160;
            }
            else
            {
              uint64_t v32 = v171;
              uint64_t v1 = v160;
              if (v146 != 2)
              {
                BOOL v148 = 0;
LABEL_109:
                unint64_t v149 = v186;
                if (*(void *)(v186 + 16))
                {
                  unint64_t v150 = sub_254351604(*(void *)(v97 + v170));
                  if (v151 & v148) {
                    sub_25429768C(*(void *)(*(void *)(v149 + 56) + 8 * v150));
                  }
                }
                sub_25433A868((uint64_t)v177, type metadata accessor for DKPersonSelectionFilter.Signals);
                goto LABEL_113;
              }
              uint64_t v147 = (uint64_t)v172;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v172, 1, 1, v191);
              swift_retain();
              swift_retain();
              sub_25435D340(0, 1, v147, v141);
              swift_release();
              sub_25425042C(v147, &qword_269DD7A40);
              BOOL v148 = 0;
            }
            swift_release();
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v116 = (uint64_t)v166;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v108)(v166, 1, 1, v191);
          uint64_t v119 = (uint64_t)v169;
        }
        sub_25425042C(v116, &qword_269DD7A40);
        unint64_t v39 = (unint64_t)v164;
        unint64_t v19 = v191;
        goto LABEL_91;
      }
      goto LABEL_131;
    }
LABEL_118:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_254338874(unint64_t a1)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(v1 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if (v3 >> 62) {
    goto LABEL_38;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_25436D530();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v6 = 0;
    unint64_t v24 = v3 & 0xC000000000000001;
    unint64_t v20 = v3 + 32;
    uint64_t v21 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v7 = a1 & 0xC000000000000001;
    uint64_t v22 = v4;
    unint64_t v23 = v3;
    while (v24)
    {
      uint64_t v8 = MEMORY[0x25A275A00](v6, v3);
      BOOL v9 = __OFADD__(v6++, 1);
      if (v9) {
        goto LABEL_34;
      }
LABEL_13:
      if (v5)
      {
        if (v7)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = MEMORY[0x25A275A00](0, a1);
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t v10 = *(void *)(a1 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        unint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
        if (*(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) == *(void *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId))
        {
LABEL_18:
          swift_bridgeObjectRelease();
          uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_saliencyFilter);
          *(unsigned char *)(v11 + 49) = 0;
          uint64_t v12 = *(void *)(v11 + 16);
          *(unsigned char *)(v12 + 33) = 0;
          uint64_t v13 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          swift_retain();
          swift_retain();
          sub_25425042C(v13, &qword_269DD7A40);
          uint64_t v14 = sub_25436C7B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          if (v5 != 1)
          {
            uint64_t v15 = 5;
            do
            {
              unint64_t v16 = v15 - 4;
              if (v7)
              {
                uint64_t v17 = MEMORY[0x25A275A00](v15 - 4, a1);
                BOOL v9 = __OFADD__(v16, 1);
                uint64_t v18 = v15 - 3;
                if (v9) {
                  goto LABEL_33;
                }
              }
              else
              {
                if (v16 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_35;
                }
                uint64_t v17 = *(void *)(a1 + 8 * v15);
                swift_retain();
                BOOL v9 = __OFADD__(v16, 1);
                uint64_t v18 = v15 - 3;
                if (v9)
                {
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
              }
              if (*(void *)(v8 + v3) == *(void *)(v17
                                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId))
                goto LABEL_18;
              swift_release();
              ++v15;
            }
            while (v18 != v5);
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        uint64_t v4 = v22;
        unint64_t v3 = v23;
        if (v6 == v22) {
          goto LABEL_39;
        }
      }
      else
      {
        swift_release();
        if (v6 == v4) {
          goto LABEL_39;
        }
      }
    }
    if (v6 >= *(void *)(v21 + 16)) {
      goto LABEL_37;
    }
    uint64_t v8 = *(void *)(v20 + 8 * v6);
    swift_retain();
    BOOL v9 = __OFADD__(v6++, 1);
    if (!v9) {
      goto LABEL_13;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25436D530();
  }
LABEL_39:
  return swift_bridgeObjectRelease();
}

uint64_t sub_254338BD4()
{
  swift_release();
  sub_25426B304(*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest), *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 16));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_254338C4C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_25426B304(*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest), *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_254338D2C()
{
  sub_254338C4C();
  return swift_deallocClassInstance();
}

uint64_t sub_254338D84()
{
  return type metadata accessor for DKSubjectSelectionTask();
}

uint64_t type metadata accessor for DKSubjectSelectionTask()
{
  uint64_t result = qword_269DD9EF0;
  if (!qword_269DD9EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254338DD8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_254338E4C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2543453FC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_254338EC8(v6);
  return sub_25436D380();
}

void sub_254338EC8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_25436D750();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_162;
    }
    if (v4) {
      sub_2543396E4(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_170;
  }
  uint64_t v7 = v5;
  uint64_t v109 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v117 = MEMORY[0x263F8EE78];
    __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_128:
      uint64_t v101 = v10;
      if (v13 >= 2)
      {
        uint64_t v102 = *v109;
        do
        {
          unint64_t v103 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_157;
          }
          if (!v102) {
            goto LABEL_169;
          }
          uint64_t v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v13 + 24];
          sub_254339828((char *)(v102 + 8 * v105), (char *)(v102 + 8 * *(void *)&v101[16 * v13 + 16]), v102 + 8 * v106, __dst);
          if (v2) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_158;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v104 = sub_254345370((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_159;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v13 > v108) {
            goto LABEL_160;
          }
          memmove(&v104[16 * v13 + 16], &v104[16 * v13 + 32], 16 * (v108 - v13));
          uint64_t v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v13 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_25436CDE0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for DKPersonTracker();
    uint64_t v9 = sub_25436CE40();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v117 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v110 = *a1 - 8;
  uint64_t v111 = v7;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v113 = v4;
  while (1)
  {
    uint64_t v14 = v11++;
    if (v11 < v4)
    {
      uint64_t v15 = *(void *)(v12 + 8 * v11);
      uint64_t v16 = *(void *)(v12 + 8 * v14);
      uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
      uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
      uint64_t v19 = *(void *)(v18 + 16);
      if (*(unsigned char *)(v19 + 33) == 1)
      {
        if (*(unsigned char *)(v19 + 32)) {
          double v20 = atan2(*(long double *)(v19 + 48), *(long double *)(v19 + 56));
        }
        else {
          double v20 = *(double *)(v19 + 40);
        }
      }
      else
      {
        double v20 = *(double *)(v18 + 24);
      }
      uint64_t v21 = *(void *)(v16 + v17);
      uint64_t v22 = *(void *)(v21 + 16);
      if (*(unsigned char *)(v22 + 33) == 1)
      {
        if (*(unsigned char *)(v22 + 32)) {
          double v23 = atan2(*(long double *)(v22 + 48), *(long double *)(v22 + 56));
        }
        else {
          double v23 = *(double *)(v22 + 40);
        }
      }
      else
      {
        double v23 = *(double *)(v21 + 24);
      }
      uint64_t v11 = v14 + 2;
      if (v14 + 2 < v113)
      {
        while (1)
        {
          uint64_t v24 = *(void *)(v12 + 8 * v11);
          uint64_t v25 = *(void *)(v24 + v17);
          uint64_t v26 = *(void *)(v25 + 16);
          if (*(unsigned char *)(v26 + 33) == 1) {
            double v27 = (*(unsigned char *)(v26 + 32) & 1) != 0
          }
                ? atan2(*(long double *)(v26 + 48), *(long double *)(v26 + 56))
                : *(double *)(v26 + 40);
          else {
            double v27 = *(double *)(v25 + 24);
          }
          uint64_t v28 = *(void *)(v15 + v17);
          uint64_t v29 = *(void *)(v28 + 16);
          if (*(unsigned char *)(v29 + 33) == 1) {
            double v30 = (*(unsigned char *)(v29 + 32) & 1) != 0
          }
                ? atan2(*(long double *)(v29 + 48), *(long double *)(v29 + 56))
                : *(double *)(v29 + 40);
          else {
            double v30 = *(double *)(v28 + 24);
          }
          if (v23 < v20 == v30 >= v27) {
            break;
          }
          ++v11;
          uint64_t v15 = v24;
          if (v113 == v11)
          {
            uint64_t v4 = v113;
            uint64_t v11 = v113;
            if (v23 < v20) {
              goto LABEL_42;
            }
            goto LABEL_49;
          }
        }
      }
      uint64_t v4 = v113;
      if (v23 < v20)
      {
LABEL_42:
        if (v11 < v14) {
          goto LABEL_163;
        }
        if (v14 < v11)
        {
          double v31 = (uint64_t *)(v110 + 8 * v11);
          uint64_t v32 = v11;
          uint64_t v33 = v14;
          uint64_t v34 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v33 != --v32)
            {
              if (!v12) {
                goto LABEL_168;
              }
              uint64_t v35 = *v34;
              *uint64_t v34 = *v31;
              *double v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
LABEL_49:
    if (v11 >= v4) {
      goto LABEL_77;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_161;
    }
    if (v11 - v14 >= v111) {
      goto LABEL_77;
    }
    if (__OFADD__(v14, v111)) {
      goto LABEL_164;
    }
    uint64_t v36 = v14 + v111 >= v4 ? v4 : v14 + v111;
    if (v36 < v14) {
      break;
    }
    if (v11 != v36)
    {
      uint64_t v37 = (uint64_t *)(v110 + 8 * v11);
      uint64_t v112 = v14;
      uint64_t v114 = v36;
      do
      {
        uint64_t v38 = *(void *)(v12 + 8 * v11);
        unint64_t v39 = v37;
        do
        {
          uint64_t v40 = *v39;
          uint64_t v41 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
          uint64_t v42 = *(void *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
          uint64_t v43 = *(void *)(v42 + 16);
          if (*(unsigned char *)(v43 + 33) == 1)
          {
            if (*(unsigned char *)(v43 + 32)) {
              double v44 = atan2(*(long double *)(v43 + 48), *(long double *)(v43 + 56));
            }
            else {
              double v44 = *(double *)(v43 + 40);
            }
          }
          else
          {
            double v44 = *(double *)(v42 + 24);
          }
          uint64_t v45 = *(void *)(v40 + v41);
          uint64_t v46 = *(void *)(v45 + 16);
          if (*(unsigned char *)(v46 + 33) == 1)
          {
            if (*(unsigned char *)(v46 + 32))
            {
              if (atan2(*(long double *)(v46 + 48), *(long double *)(v46 + 56)) >= v44) {
                break;
              }
            }
            else if (*(double *)(v46 + 40) >= v44)
            {
              break;
            }
          }
          else if (*(double *)(v45 + 24) >= v44)
          {
            break;
          }
          if (!v12) {
            goto LABEL_166;
          }
          *unint64_t v39 = v38;
          v39[1] = v40;
          --v39;
          ++v14;
        }
        while (v11 != v14);
        ++v11;
        ++v37;
        uint64_t v14 = v112;
      }
      while (v11 != v114);
      uint64_t v11 = v114;
    }
LABEL_77:
    if (v11 < v14) {
      goto LABEL_156;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_254344E28(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v48 = *((void *)v10 + 2);
    unint64_t v47 = *((void *)v10 + 3);
    unint64_t v13 = v48 + 1;
    if (v48 >= v47 >> 1) {
      uint64_t v10 = sub_254344E28((char *)(v47 > 1), v48 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    uint64_t v49 = v10 + 32;
    uint64_t v50 = &v10[16 * v48 + 32];
    *(void *)uint64_t v50 = v14;
    *((void *)v50 + 1) = v11;
    if (v48)
    {
      uint64_t v115 = v11;
      while (1)
      {
        unint64_t v51 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v56 = &v49[16 * v13];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_145;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_146;
          }
          unint64_t v63 = v13 - 2;
          uint64_t v64 = &v49[16 * v13 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_148;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_151;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_155;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_115;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v80 = *((void *)v10 + 4);
            uint64_t v81 = *((void *)v10 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_109;
          }
          uint64_t v53 = *((void *)v10 + 4);
          uint64_t v52 = *((void *)v10 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_147;
        }
        unint64_t v63 = v13 - 2;
        uint64_t v69 = &v49[16 * v13 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_150;
        }
        int64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_153;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_154;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_115:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_117;
        }
LABEL_109:
        if (v74) {
          goto LABEL_149;
        }
        int64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_152;
        }
        if (v85 < v73) {
          goto LABEL_14;
        }
LABEL_117:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          goto LABEL_165;
        }
        uint64_t v91 = v12;
        if (!v12) {
          goto LABEL_167;
        }
        uint64_t v92 = v10;
        unint64_t v93 = &v49[16 * v90];
        uint64_t v94 = *(void *)v93;
        unint64_t v95 = v49;
        unint64_t v96 = v51;
        uint64_t v97 = &v49[16 * v51];
        uint64_t v98 = *((void *)v97 + 1);
        uint64_t v99 = v91;
        sub_254339828((char *)(v91 + 8 * *(void *)v93), (char *)(v91 + 8 * *(void *)v97), v91 + 8 * v98, __dst);
        if (v1) {
          goto LABEL_125;
        }
        if (v98 < v94) {
          goto LABEL_142;
        }
        if (v96 > *((void *)v92 + 2)) {
          goto LABEL_143;
        }
        *(void *)unint64_t v93 = v94;
        *(void *)&v95[16 * v90 + 8] = v98;
        unint64_t v100 = *((void *)v92 + 2);
        if (v96 >= v100) {
          goto LABEL_144;
        }
        uint64_t v10 = v92;
        unint64_t v13 = v100 - 1;
        memmove(v97, v97 + 16, 16 * (v100 - 1 - v96));
        uint64_t v49 = v95;
        *((void *)v92 + 2) = v100 - 1;
        uint64_t v12 = v99;
        uint64_t v11 = v115;
        if (v100 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v4 = v113;
    if (v11 >= v113)
    {
      uint64_t v2 = v1;
      goto LABEL_128;
    }
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  sub_25436D4E0();
  __break(1u);
}

void sub_2543396E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void *)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v9 = (uint64_t *)v6;
    while (1)
    {
      uint64_t v10 = *v9;
      uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
      uint64_t v12 = *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
      uint64_t v13 = *(void *)(v12 + 16);
      if (*(unsigned char *)(v13 + 33) == 1) {
        double v14 = (*(unsigned char *)(v13 + 32) & 1) != 0
      }
            ? atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56))
            : *(double *)(v13 + 40);
      else {
        double v14 = *(double *)(v12 + 24);
      }
      uint64_t v15 = *(void *)(v10 + v11);
      uint64_t v16 = *(void *)(v15 + 16);
      if (*(unsigned char *)(v16 + 33) == 1)
      {
        if (*(unsigned char *)(v16 + 32))
        {
          if (atan2(*(long double *)(v16 + 48), *(long double *)(v16 + 56)) >= v14) {
            goto LABEL_4;
          }
        }
        else if (*(double *)(v16 + 40) >= v14)
        {
          goto LABEL_4;
        }
      }
      else if (*(double *)(v15 + 24) >= v14)
      {
        goto LABEL_4;
      }
      if (!v5) {
        break;
      }
      *uint64_t v9 = v7;
      v9[1] = v10;
      --v9;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_254339828(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = (uint64_t *)__dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v38 = (uint64_t *)__dst;
  unint64_t v39 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v24 = &v4[v13];
      uint64_t v37 = v24;
      unint64_t v39 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v25 = (char *)(a3 - 8);
        do
        {
          double v27 = v6 - 8;
          uint64_t v26 = *((void *)v6 - 1);
          uint64_t v28 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
          uint64_t v29 = *(void *)(*(v24 - 1) + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
          uint64_t v30 = *(void *)(v29 + 16);
          if (*(unsigned char *)(v30 + 33) == 1)
          {
            if (*(unsigned char *)(v30 + 32)) {
              double v31 = atan2(*(long double *)(v30 + 48), *(long double *)(v30 + 56));
            }
            else {
              double v31 = *(double *)(v30 + 40);
            }
          }
          else
          {
            double v31 = *(double *)(v29 + 24);
          }
          uint64_t v32 = *(void *)(v26 + v28);
          uint64_t v33 = *(void *)(v32 + 16);
          if (*(unsigned char *)(v33 + 33) == 1)
          {
            if (*(unsigned char *)(v33 + 32)) {
              double v34 = atan2(*(long double *)(v33 + 48), *(long double *)(v33 + 56));
            }
            else {
              double v34 = *(double *)(v33 + 40);
            }
          }
          else
          {
            double v34 = *(double *)(v32 + 24);
          }
          uint64_t v35 = v25 + 8;
          if (v34 >= v31)
          {
            uint64_t v37 = v24 - 1;
            if (v35 < (char *)v24 || v25 >= (char *)v24 || v35 != (char *)v24) {
              *(void *)uint64_t v25 = *(v24 - 1);
            }
            --v24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            if (v35 != v6 || v25 >= v6) {
              *(void *)uint64_t v25 = v26;
            }
            unint64_t v39 = v6 - 8;
            v6 -= 8;
            if (v27 <= v7) {
              break;
            }
          }
          v25 -= 8;
        }
        while (v24 > v4);
      }
LABEL_62:
      sub_254345170((void **)&v39, (const void **)&v38, &v37);
      return 1;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v37 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        uint64_t v15 = *(void *)v6;
        uint64_t v16 = *v4;
        uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
        uint64_t v18 = *(void *)(*(void *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
        uint64_t v19 = *(void *)(v18 + 16);
        if (*(unsigned char *)(v19 + 33) == 1)
        {
          if (*(unsigned char *)(v19 + 32)) {
            double v20 = atan2(*(long double *)(v19 + 48), *(long double *)(v19 + 56));
          }
          else {
            double v20 = *(double *)(v19 + 40);
          }
        }
        else
        {
          double v20 = *(double *)(v18 + 24);
        }
        uint64_t v21 = *(void *)(v16 + v17);
        uint64_t v22 = *(void *)(v21 + 16);
        if (*(unsigned char *)(v22 + 33) == 1)
        {
          if (*(unsigned char *)(v22 + 32))
          {
            if (atan2(*(long double *)(v22 + 48), *(long double *)(v22 + 56)) < v20) {
              goto LABEL_22;
            }
          }
          else if (*(double *)(v22 + 40) < v20)
          {
LABEL_22:
            double v23 = v6 + 8;
            if (v7 < v6 || v7 >= v23 || v7 != v6) {
              *(void *)uint64_t v7 = v15;
            }
            goto LABEL_30;
          }
        }
        else if (*(double *)(v21 + 24) < v20)
        {
          goto LABEL_22;
        }
        if (v7 != (char *)v4) {
          *(void *)uint64_t v7 = v16;
        }
        uint64_t v38 = ++v4;
        double v23 = v6;
LABEL_30:
        v7 += 8;
        if (v4 < v14)
        {
          uint64_t v6 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        unint64_t v39 = v7;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_254339BA8(void (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v16 = a2;
  uint64_t v5 = sub_25436C7B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v9) {
      break;
    }
    uint64_t v17 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25436D3A0();
    if (v9 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v13 = v3;
    double v14 = a1;
    uint64_t v11 = 0;
    unint64_t v15 = (unint64_t)a1 & 0xC000000000000001;
    uint64_t v12 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    a1 = (void (**)(char *, uint64_t))(v6 + 8);
    while (v9 != v11)
    {
      if (v15) {
        MEMORY[0x25A275A00](v11, v14);
      }
      else {
        swift_retain();
      }
      ++v11;
      (*v12)(v8, *(void *)(v16 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
      uint64_t v6 = sub_254349BD4((uint64_t)v8);
      (*a1)(v8, v5);
      swift_release();
      sub_25436D370();
      uint64_t v3 = *(void *)(v17 + 16);
      sub_25436D3B0();
      sub_25436D3C0();
      sub_25436D380();
      if (v9 == v11) {
        return v17;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_254339DC4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v19 = a2;
  uint64_t v18 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_25436D530();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      unint64_t v20 = a1 & 0xC000000000000001;
      v16[1] = v3;
      uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      uint64_t v9 = (void (**)(char *, uint64_t))(v5 + 8);
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v11 = i - 4;
        if (v20)
        {
          uint64_t v5 = MEMORY[0x25A275A00](i - 4, a1);
          uint64_t v12 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * i);
          swift_retain();
          uint64_t v12 = i - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        if (*(uint64_t *)(*(void *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence)
                        + 16) < 1)
        {
          swift_release();
        }
        else
        {
          uint64_t v3 = v18;
          (*v17)(v7, *(void *)(v19 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v18);
          uint64_t v13 = sub_254349BD4((uint64_t)v7);
          (*v9)(v7, v3);
          uint64_t v14 = swift_release();
          if (v13)
          {
            uint64_t v3 = a1;
            MEMORY[0x25A275490](v14);
            if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_25436CE10();
            }
            sub_25436CE60();
            sub_25436CDE0();
          }
        }
        if (v12 == v8)
        {
          swift_bridgeObjectRelease();
          return v21;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_25433A040(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  uint64_t v44 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  uint64_t v47 = MEMORY[0x263F8EE78];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v1 = v7;
    }
    else {
      uint64_t v1 = v7 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_25436D530();
    uint64_t v45 = v6;
    if (v8) {
      goto LABEL_3;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  uint64_t v45 = v6;
  if (!v8) {
    goto LABEL_32;
  }
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_50;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x25A275A00](i, v7);
    }
    else
    {
      uint64_t v11 = *(void *)(v7 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
    uint64_t v13 = *(void *)(v12 + 16);
    if (*(unsigned char *)(v13 + 33) == 1)
    {
      if (*(unsigned char *)(v13 + 32)) {
        double v14 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      }
      else {
        double v14 = *(double *)(v13 + 40);
      }
    }
    else
    {
      double v14 = *(double *)(v12 + 24);
    }
    double v15 = *(double *)(v12 + 32);
    if (*(unsigned char *)(v12 + 48))
    {
      uint64_t v10 = (unsigned char *)(v12 + 49);
      if (v15 < v14) {
        goto LABEL_6;
      }
LABEL_22:
      *uint64_t v10 = 0;
      goto LABEL_23;
    }
    if (v15 < v14)
    {
      uint64_t v10 = (unsigned char *)(v12 + 49);
LABEL_6:
      *uint64_t v10 = 1;
LABEL_7:
      sub_25436D370();
      unint64_t v2 = *(void *)(v47 + 16);
      sub_25436D3B0();
      sub_25436D3C0();
      sub_25436D380();
      continue;
    }
    uint64_t v10 = (unsigned char *)(v12 + 49);
    if (v14 < *(double *)(v12 + 40)) {
      goto LABEL_22;
    }
    if (*v10) {
      goto LABEL_7;
    }
LABEL_23:
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = v47;
  if (v47 < 0)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25436D530();
    swift_release();
    if (!v16) {
      goto LABEL_38;
    }
LABEL_35:
    uint64_t v6 = 0;
    if ((v1 & 0x8000000000000000) == 0) {
      goto LABEL_52;
    }
LABEL_91:
    while (2)
    {
      while (2)
      {
        unint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v24 = (uint64_t)sub_2543526F8(v41);
        swift_bridgeObjectRelease();
LABEL_54:
        uint64_t v47 = v24;
        sub_254338E4C(&v47);
        if (v6) {
          goto LABEL_101;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = v47;
        if (v8)
        {
          if (v8 >= 1)
          {
            uint64_t v6 = 0;
            do
            {
              if ((v7 & 0xC000000000000001) != 0)
              {
                uint64_t v28 = MEMORY[0x25A275A00](v6, v7);
              }
              else
              {
                uint64_t v28 = *(void *)(v7 + 8 * v6 + 32);
                swift_retain();
              }
              uint64_t v29 = *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
              uint64_t v30 = *(void *)(v29 + 16);
              if (*(unsigned char *)(v30 + 33) == 1)
              {
                if (*(unsigned char *)(v30 + 32)) {
                  long double v26 = atan2(*(long double *)(v30 + 48), *(long double *)(v30 + 56));
                }
                else {
                  long double v26 = *(double *)(v30 + 40);
                }
              }
              else
              {
                long double v26 = *(double *)(v29 + 24);
              }
              ++v6;
              __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
              uint64_t v27 = swift_allocObject();
              *(void *)(v27 + 16) = -1;
              *(long double *)(v27 + 24) = v26;
              unint64_t v2 = *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence);
              *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence) = v27;
              swift_release();
              swift_release();
            }
            while (v8 != v6);
            break;
          }
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          uint64_t v19 = MEMORY[0x25A275A00](0, v2);
LABEL_47:
          swift_release();
          swift_release();
          unint64_t v2 = *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
          *(unsigned char *)(v2 + 136) = 1;
          uint64_t v20 = sub_25436C7B0();
          uint64_t v21 = (uint64_t)v43;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v43, 1, 1, v20);
          swift_retain();
          swift_retain();
          sub_25435D340(0x3FF0000000000000, 0, v21, 1.0);
          swift_release();
          sub_25425042C(v21, &qword_269DD7A40);
          swift_release();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_254378100;
          *(void *)(v22 + 32) = v19;
          uint64_t v47 = v22;
          sub_25436CDE0();
          uint64_t v1 = v47;
          if (v47 < 0) {
            continue;
          }
LABEL_52:
          if ((v1 & 0x4000000000000000) != 0) {
            continue;
          }
          uint64_t v24 = v1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          goto LABEL_54;
        }
        break;
      }
      swift_bridgeObjectRelease();
      if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_25436D530();
        swift_release();
        if (v7)
        {
LABEL_70:
          if (v7 >= 1)
          {
            uint64_t v6 = 0;
            unint64_t v2 = v25 & 0xC000000000000001;
            uint64_t v8 = (uint64_t)&qword_269DD8010;
            while (1)
            {
              if (v2)
              {
                uint64_t v31 = MEMORY[0x25A275A00](v6, v25);
              }
              else
              {
                uint64_t v31 = *(void *)(v25 + 8 * v6 + 32);
                swift_retain();
              }
              uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
              uint64_t v33 = *(void *)(v32 + 16);
              if (*(unsigned char *)(v33 + 33) == 1) {
                long double v34 = (*(unsigned char *)(v33 + 32) & 1) != 0
              }
                    ? atan2(*(long double *)(v33 + 48), *(long double *)(v33 + 56))
                    : *(double *)(v33 + 40);
              else {
                long double v34 = *(double *)(v32 + 24);
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
              uint64_t v35 = swift_allocObject();
              *(void *)(v35 + 16) = v6 + 1;
              *(long double *)(v35 + 24) = v34;
              *(void *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence) = v35;
              swift_release();
              swift_release();
              if (v6 == 0x7FFFFFFFFFFFFFFELL) {
                break;
              }
              if (v7 == ++v6) {
                goto LABEL_82;
              }
            }
            __break(1u);
            continue;
          }
          goto LABEL_97;
        }
      }
      else
      {
        uint64_t v7 = *(void *)(v25 + 16);
        if (v7) {
          goto LABEL_70;
        }
      }
      break;
    }
LABEL_82:
    swift_release();
    uint64_t v7 = *(void *)(v45 + v44);
    if ((unint64_t)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_25436D530();
      if (!v6) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v6 >= 1)
    {
      uint64_t v36 = 0;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v37 = MEMORY[0x25A275A00](v36, v7);
        }
        else
        {
          uint64_t v37 = *(void *)(v7 + 8 * v36 + 32);
          swift_retain();
        }
        ++v36;
        v49[0] = 2;
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        sub_25436D290();
        swift_bridgeObjectRelease();
        uint64_t v47 = 0x3D6E6F73726550;
        unint64_t v48 = 0xE700000000000000;
        uint64_t v46 = *(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
        sub_25436D760();
        sub_25436CCB0();
        swift_bridgeObjectRelease();
        sub_25436CCB0();
        uint64_t v46 = *(void *)(*(void *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence)
                        + 16);
        sub_25436D760();
        sub_25436CCB0();
        swift_bridgeObjectRelease();
        uint64_t v38 = v47;
        unint64_t v39 = v48;
        os_log_type_t v40 = sub_25436D000();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v49, v38, v39, v40);
        swift_bridgeObjectRelease();
        swift_release();
      }
      while (v6 != v36);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_98;
  }
LABEL_33:
  if ((v1 & 0x4000000000000000) != 0) {
    goto LABEL_37;
  }
  if (*(void *)(v1 + 16)) {
    goto LABEL_35;
  }
LABEL_38:
  if ((unint64_t)v7 >> 62)
  {
    unint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t)sub_2543526F8(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = v17;
  uint64_t v6 = 0;
  sub_254338E4C(&v47);
  unint64_t v2 = v47;
  if (v47 < 0 || (v47 & 0x4000000000000000) != 0)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25436D530();
    swift_release();
    if (v23) {
      goto LABEL_44;
    }
LABEL_51:
    swift_release();
    if ((v1 & 0x8000000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_91;
  }
  if (!*(void *)(v47 + 16)) {
    goto LABEL_51;
  }
LABEL_44:
  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_99;
  }
  if (*(void *)(v2 + 16))
  {
    uint64_t v19 = *(void *)(v2 + 32);
    swift_retain();
    goto LABEL_47;
  }
  __break(1u);
LABEL_101:
  swift_release();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_25433A868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25433A8C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_25426B2F0(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_25433A8DC(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a1;
  unint64_t v16 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v5 = sub_25436D530();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v5;
      unint64_t v14 = v4;
      while (1)
      {
        if (v7)
        {
          uint64_t v9 = MEMORY[0x25A275A00](v6, v4);
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(void *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v9 = *(void *)(v4 + 8 * v6 + 32);
          swift_retain();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v15 = v9;
        char v11 = sub_254334080((uint64_t)&v15, a2);
        if (v2) {
          goto LABEL_15;
        }
        if (v11)
        {
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
          uint64_t v5 = v13;
          unint64_t v4 = v14;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_25433AA9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25433AAE4()
{
  v1[17] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v2 = sub_25436C7B0();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[29] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DKCamera();
  v1[30] = v3;
  v1[31] = *(void *)(v3 - 8);
  v1[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25433ACBC, 0, 0);
}

uint64_t sub_25433ACBC()
{
  uint64_t v137 = v0;
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v129 = v0[17];
  sub_2542503C8(*(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v3, &qword_269DD7808);
  LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if (v4 == 1)
  {
    sub_25425042C(v0[29], &qword_269DD7808);
    goto LABEL_133;
  }
  uint64_t v128 = v0;
  uint64_t v5 = v0[17];
  sub_2542502F0(v0[29], v0[32]);
  unint64_t v6 = *(void *)(*(void *)(*(void *)(v5 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if ((v6 & 0x8000000000000000) != 0 || (v6 & 0x4000000000000000) != 0)
  {
LABEL_137:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (uint64_t)sub_2543526F8(v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  uint64_t v135 = v7;
  sub_25433CAE4(&v135);
  int v115 = (int)v4;
  swift_bridgeObjectRelease();
  uint64_t v127 = v135;
  if (v135 < 0 || (v135 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_25436D530();
    swift_release();
  }
  else
  {
    uint64_t v122 = *(void *)(v135 + 16);
  }
  unint64_t v4 = v128;
  if (!v122)
  {
LABEL_131:
    swift_release();
    sub_254250354(v4[32]);
    uint64_t v0 = v4;
    goto LABEL_132;
  }
  unint64_t v6 = 0;
  uint64_t v114 = v128[32];
  uint64_t v8 = v128[22];
  uint64_t v113 = v128[17];
  uint64_t v112 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_cachedModel;
  uint64_t v124 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v126 = (void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v9 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v120 = (void (**)(void, void, uint64_t))(v8 + 32);
  int v118 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  while (1)
  {
    if ((v127 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x25A275A00](v6, v127);
      unint64_t v12 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_136;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(v127 + 8 * v6 + 32);
      swift_retain();
      unint64_t v12 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
LABEL_136:
        __break(1u);
        goto LABEL_137;
      }
    }
    uint64_t v13 = *(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
    unint64_t v132 = v6;
    uint64_t v133 = v11;
    unint64_t v130 = v12;
    if (v13)
    {
      uint64_t v14 = *(void *)(v13 + *(void *)(*(void *)v13 + 200));
      if (v14)
      {
        uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop);
        if (v15)
        {
          if ((*(unsigned char *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8) & 1) == 0) {
            break;
          }
        }
      }
    }
LABEL_117:
    uint64_t v80 = v4[21];
    uint64_t v81 = v4[19];
    sub_2542503C8(*(void *)(*(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v81, &qword_269DD7A40);
    int64_t v82 = *v9;
    if ((*v9)(v81, 1, v80) == 1)
    {
      sub_25425042C(v4[19], &qword_269DD7A40);
    }
    else
    {
      uint64_t v83 = v4[27];
      uint64_t v84 = v4[21];
      (*v120)(v4[24], v4[19], v84);
      (*v126)(v83, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v84);
      sub_25436C700();
      double v86 = v85;
      uint64_t v87 = *v124;
      (*v124)(v83, v84);
      uint64_t v88 = v4[24];
      uint64_t v89 = v4[21];
      if (v86 <= 2.0)
      {
        v87(v4[24], v4[21]);
        uint64_t v11 = v133;
      }
      else
      {
        uint64_t v90 = v128[20];
        (*v118)(v90, 1, 1, v89);
        swift_retain();
        swift_retain();
        sub_25435D340(0, 1, v90, 0.0);
        swift_release();
        swift_release();
        uint64_t v91 = v90;
        unint64_t v4 = v128;
        sub_25425042C(v91, &qword_269DD7A40);
        uint64_t v92 = v89;
        uint64_t v11 = v133;
        v87(v88, v92);
      }
      uint64_t v9 = v119;
    }
    uint64_t v93 = v4[21];
    uint64_t v94 = v4[18];
    sub_2542503C8(*(void *)(*(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v94, &qword_269DD7A40);
    if (v82(v94, 1, v93) == 1)
    {
      uint64_t v10 = v4[18];
      swift_release();
      sub_25425042C(v10, &qword_269DD7A40);
    }
    else
    {
      uint64_t v95 = v4[27];
      uint64_t v96 = v4[21];
      (*v120)(v4[23], v4[18], v96);
      (*v126)(v95, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v96);
      sub_25436C700();
      double v98 = v97;
      uint64_t v99 = *v124;
      (*v124)(v95, v96);
      uint64_t v100 = v4[23];
      uint64_t v101 = v4[21];
      if (v98 <= 2.0)
      {
        v99(v4[23], v4[21]);
        swift_release();
      }
      else
      {
        uint64_t v102 = v128[20];
        (*v118)(v102, 1, 1, v101);
        swift_retain();
        swift_retain();
        sub_25435D340(0, 1, v102, 0.0);
        swift_release();
        uint64_t v9 = v119;
        swift_release();
        swift_release();
        uint64_t v103 = v102;
        unint64_t v4 = v128;
        sub_25425042C(v103, &qword_269DD7A40);
        v99(v100, v101);
      }
    }
    unint64_t v6 = v132 + 1;
    if (v130 == v122) {
      goto LABEL_131;
    }
  }
  unint64_t v16 = (unint64_t *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer);
  unint64_t v17 = *(void *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v116 = v16;
    if (v18) {
      goto LABEL_25;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_25436D530();
  uint64_t v116 = v16;
  if (!v18) {
    goto LABEL_39;
  }
LABEL_25:
  BOOL v21 = __OFSUB__(v18, 1);
  unint64_t v22 = v18 - 1;
  if (!v21)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      MEMORY[0x25A275A00](v22, v17);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v22 & 0x8000000000000000) != 0) {
        goto LABEL_139;
      }
      unint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v22 >= v23) {
        goto LABEL_140;
      }
    }
    uint64_t v24 = *v126;
    (*v126)(v4[28], *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v4[21]);
    unint64_t v25 = *v16;
    if (*v16 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_25436D530();
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_154;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v26) {
        goto LABEL_154;
      }
    }
    unint64_t v27 = v26 - 1;
    if (__OFSUB__(v26, 1)) {
      goto LABEL_141;
    }
    if ((v25 & 0xC000000000000001) != 0)
    {
      uint64_t v28 = v24;
      uint64_t v29 = MEMORY[0x25A275A00](v27, v25);
    }
    else
    {
      if ((v27 & 0x8000000000000000) != 0) {
        goto LABEL_142;
      }
      if (v27 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_143;
      }
      uint64_t v28 = v24;
      uint64_t v29 = *(void *)(v25 + 8 * v27 + 32);
      swift_retain();
    }
    uint64_t v30 = v4;
    uint64_t v31 = v4[28];
    uint64_t v32 = v30[27];
    uint64_t v33 = v30[21];
    swift_bridgeObjectRelease();
    v28(v32, v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v33);
    swift_release();
    sub_25436C700();
    double v35 = v34;
    uint64_t v36 = *v124;
    (*v124)(v32, v33);
    v36(v31, v33);
    if (v35 <= 0.125)
    {
      swift_release();
      swift_release();
      swift_release();
      unint64_t v4 = v128;
      uint64_t v11 = v133;
      goto LABEL_117;
    }
LABEL_40:
    v128[15] = 128;
    uint64_t v135 = sub_25436D760();
    unint64_t v136 = v37;
    sub_25436CCB0();
    v128[14] = 128;
    sub_25436D760();
    sub_25436CCB0();
    swift_bridgeObjectRelease();
    uint64_t v38 = v135;
    uint64_t v39 = v136;
    uint64_t v40 = *(void *)(v15 + 56);
    if (*(void *)(v40 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_2543516FC(v38, v39);
      if (v42)
      {
        pixelBuffer = (__CVBuffer *)*(id *)(*(void *)(v40 + 56) + 8 * v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_45:
        unint64_t v4 = v128;
        uint64_t v11 = v133;
        if (*(unsigned char *)v128[32] == 1)
        {
          switch(*(unsigned char *)(v114 + 1))
          {
            case 1:
              uint64_t v43 = pixelBuffer;
              uint64_t v44 = 90;
              goto LABEL_54;
            case 2:
              uint64_t v43 = pixelBuffer;
              uint64_t v44 = -90;
              goto LABEL_54;
            case 3:
              uint64_t v43 = pixelBuffer;
              uint64_t v44 = 0;
              char v45 = 0;
              char v46 = 1;
              goto LABEL_60;
            case 4:
              uint64_t v43 = pixelBuffer;
              uint64_t v44 = 0;
LABEL_54:
              char v45 = 1;
              goto LABEL_59;
            default:
              goto LABEL_50;
          }
        }
        switch(*(unsigned char *)(v114 + 1))
        {
          case 1:
            uint64_t v43 = pixelBuffer;
            uint64_t v44 = 90;
            goto LABEL_58;
          case 2:
            uint64_t v43 = pixelBuffer;
            uint64_t v44 = -90;
            goto LABEL_58;
          case 3:
            uint64_t v43 = pixelBuffer;
            uint64_t v44 = 0;
            goto LABEL_58;
          case 4:
            uint64_t v43 = pixelBuffer;
            uint64_t v44 = 180;
LABEL_58:
            char v45 = 0;
LABEL_59:
            char v46 = 0;
LABEL_60:
            CVPixelBufferRef v47 = _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(v43, v44, v45, v46);
            if (!v47)
            {
              swift_release();

              swift_release();
LABEL_116:
              swift_release();
              uint64_t v11 = v133;
              goto LABEL_117;
            }
            uint64_t v48 = v128[26];
            uint64_t v49 = *v126;
            (*v126)(v48, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v128[21]);
            type metadata accessor for DKImageRGBBufferStamped();
            swift_allocObject();
            uint64_t v50 = v47;
            sub_25425770C(v50, v48);
            uint64_t v110 = v49;
            uint64_t v111 = v50;
            uint64_t v51 = swift_retain();
            MEMORY[0x25A275490](v51);
            if (*(void *)((*v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_25436CE10();
            }
            sub_25436CE60();
            sub_25436CDE0();
            unint64_t v52 = *v116;
            uint64_t v53 = v50;
            if (*v116 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v75 = sub_25436D530();
              swift_bridgeObjectRelease();
              unint64_t v52 = *v116;
              if (v75 <= 8) {
                goto LABEL_77;
              }
            }
            else if (*(uint64_t *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 8)
            {
              goto LABEL_77;
            }
            if (v52 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v77 = sub_25436D530();
              swift_bridgeObjectRelease();
              if (!v77) {
                goto LABEL_147;
              }
            }
            else if (!*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_147;
            }
            unint64_t v54 = *v116;
            if (*v116 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v78 = sub_25436D530();
              swift_bridgeObjectRelease();
              if (!v78) {
                goto LABEL_148;
              }
            }
            else if (!*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_148;
            }
            if ((v54 & 0xC000000000000001) != 0)
            {
              MEMORY[0x25A275A00](0, v54);
            }
            else
            {
              if (!*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                swift_bridgeObjectRelease();
                __break(1u);
                JUMPOUT(0x25433C494);
              }
              swift_retain();
            }
            if (*v116 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v79 = sub_25436D530();
              swift_bridgeObjectRelease();
              if (!v79) {
                goto LABEL_150;
              }
            }
            else if (!*(void *)((*v116 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_150;
            }
            sub_25425B4C8(0, 1);
            swift_release();
            unint64_t v52 = *v116;
            unint64_t v4 = v128;
LABEL_77:
            if (v52 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v76 = sub_25436D530();
              swift_bridgeObjectRelease();
              if (v76 != 8) {
                goto LABEL_114;
              }
            }
            else if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) != 8)
            {
              goto LABEL_114;
            }
            unint64_t v55 = *v116;
            if (*v116 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              if (!sub_25436D530())
              {
LABEL_113:
                swift_bridgeObjectRelease();
LABEL_114:
                swift_release();

                swift_release();
                goto LABEL_115;
              }
            }
            else
            {
              uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v56) {
                goto LABEL_113;
              }
            }
            if ((v55 & 0xC000000000000001) != 0)
            {
              uint64_t v57 = MEMORY[0x25A275A00](0, v55);
            }
            else
            {
              if (!*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_149;
              }
              uint64_t v57 = *(void *)(v55 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            unint64_t v58 = *v116;
            if (*v116 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v50;
              uint64_t v59 = sub_25436D530();
              if (!v59)
              {
LABEL_129:
                swift_bridgeObjectRelease();
                swift_release();

                swift_release();
                swift_release();
LABEL_115:
                swift_release();
                goto LABEL_116;
              }
            }
            else
            {
              uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v59) {
                goto LABEL_129;
              }
            }
            unint64_t v60 = v59 - 1;
            if (__OFSUB__(v59, 1)) {
              goto LABEL_151;
            }
            if ((v58 & 0xC000000000000001) != 0)
            {
              uint64_t v61 = MEMORY[0x25A275A00](v60, v58);
            }
            else
            {
              if ((v60 & 0x8000000000000000) != 0) {
                goto LABEL_152;
              }
              if (v60 >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_153;
              }
              uint64_t v61 = *(void *)(v58 + 8 * v60 + 32);
              swift_retain();
            }
            uint64_t v62 = v4[27];
            uint64_t v63 = v4[25];
            uint64_t v64 = v128[21];
            swift_bridgeObjectRelease();
            v110(v62, v61 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v64);
            v110(v63, v57 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v64);
            sub_25436C700();
            double v66 = v65;
            uint64_t v67 = *v124;
            (*v124)(v63, v64);
            uint64_t v68 = v64;
            unint64_t v4 = v128;
            v67(v62, v68);
            char v134 = 4;
            uint64_t v135 = 0;
            unint64_t v136 = 0xE000000000000000;
            sub_25436D290();
            unint64_t v69 = v136;
            v128[9] = v135;
            v128[10] = v69;
            sub_25436CCB0();
            uint64_t v11 = v133;
            v128[12] = *(void *)(v133 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
            sub_25436D760();
            sub_25436CCB0();
            swift_bridgeObjectRelease();
            sub_25436CCB0();
            sub_25436CF50();
            uint64_t v71 = v128[9];
            unint64_t v70 = v128[10];
            os_log_type_t v72 = sub_25436D000();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v134, v71, v70, v72);
            swift_bridgeObjectRelease();
            if (v66 < 2.0)
            {
              if (!*(void *)(v113 + v112))
              {
                type metadata accessor for DKSpeechDetectionModel();
                swift_allocObject();
                sub_2543643CC();
                *(void *)(v113 + v112) = v73;
                swift_retain();
                swift_release();
              }
              swift_retain();
              unint64_t v74 = swift_bridgeObjectRetain();
              sub_254364BF8(v74);
              goto LABEL_144;
            }
            swift_release();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v9 = v119;
            break;
          default:
LABEL_50:
            swift_release();

            swift_release();
            swift_release();
            goto LABEL_117;
        }
        goto LABEL_117;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    pixelBuffer = sub_25430D554(v38, v39, (__CVBuffer *)0x80, 0x80uLL);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  uint64_t v0 = v128;
  uint64_t v131 = v128[32];
  uint64_t v106 = v128[21];
  uint64_t v123 = v128[27];
  uint64_t v125 = v128[22];
  uint64_t v107 = v128[20];
  double v108 = v20;
  double v109 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v110(v107, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v106);
  double v121 = *v118;
  (*v118)(v107, 0, 1, v106);
  swift_retain();
  swift_retain();
  sub_25435D340(0, 1, v107, v109);
  swift_release();
  swift_release();
  sub_25425042C(v107, &qword_269DD7A40);
  v110(v107, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v106);
  v121(v107, 0, 1, v106);
  swift_retain();
  swift_retain();
  sub_25435D340(0, 1, v107, v108);
  swift_release();
  swift_release();
  sub_25425042C(v107, &qword_269DD7A40);
  v110(v123, *(void *)(v129 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v106);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 40))(v133 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v123, v106);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_254250354(v131);
LABEL_132:
  LODWORD(v4) = v115;
LABEL_133:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v104 = (uint64_t (*)(BOOL))v0[1];
  return v104(v4 != 1);
}

uint64_t sub_25433C4B4()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  double v35 = (char *)&v28 - v5;
  uint64_t v33 = v0;
  unint64_t v6 = *(void *)(*(void *)(*(void *)(v0 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if (v6 >> 62) {
    goto LABEL_43;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v7)
  {
    unint64_t v8 = v6 & 0xC000000000000001;
    double v34 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v28 = (void (**)(char *, uint64_t))(v2 + 8);
    unint64_t v29 = v6 & 0xC000000000000001;
    uint64_t v9 = 4;
    uint64_t v30 = v7;
    uint64_t v31 = (void (*)(void, void, void))v6;
    while (1)
    {
      uint64_t v10 = v9 - 4;
      if (!v8) {
        break;
      }
      uint64_t v2 = MEMORY[0x25A275A00](v9 - 4, v6);
      uint64_t v11 = v9 - 3;
      if (__OFADD__(v10, 1)) {
        goto LABEL_36;
      }
LABEL_11:
      uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
      if (v12 && *(void *)(v12 + *(void *)(*(void *)v12 + 200)))
      {
        uint64_t v13 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer;
        unint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer);
        if (v14 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain_n();
          swift_retain();
          uint64_t v15 = sub_25436D530();
          swift_bridgeObjectRelease();
          if (!v15)
          {
LABEL_34:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            return 1;
          }
        }
        else
        {
          uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (!v15) {
            goto LABEL_34;
          }
        }
        BOOL v16 = __OFSUB__(v15, 1);
        unint64_t v17 = v15 - 1;
        if (v16) {
          goto LABEL_37;
        }
        if ((v14 & 0xC000000000000001) != 0)
        {
          MEMORY[0x25A275A00](v17, v14);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_38;
          }
          unint64_t v6 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          if (v17 >= v6) {
            goto LABEL_39;
          }
        }
        unint64_t v6 = (unint64_t)*v34;
        (*v34)(v35, *(void *)(v33 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
        unint64_t v18 = *(void *)(v2 + v13);
        if (v18 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v19 = sub_25436D530();
          swift_bridgeObjectRelease();
          if (!v19)
          {
LABEL_45:
            uint64_t result = swift_bridgeObjectRelease();
            __break(1u);
            return result;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v19) {
            goto LABEL_45;
          }
        }
        unint64_t v20 = v19 - 1;
        if (__OFSUB__(v19, 1)) {
          goto LABEL_40;
        }
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v21 = MEMORY[0x25A275A00](v20, v18);
        }
        else
        {
          if ((v20 & 0x8000000000000000) != 0) {
            goto LABEL_41;
          }
          if (v20 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_42;
          }
          uint64_t v21 = *(void *)(v18 + 8 * v20 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = v32;
        ((void (*)(char *, uint64_t, uint64_t))v6)(v32, v21 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v1);
        swift_release();
        unint64_t v23 = v35;
        sub_25436C700();
        double v25 = v24;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v26 = *v28;
        (*v28)(v22, v1);
        v26(v23, v1);
        uint64_t v7 = v30;
        unint64_t v6 = (unint64_t)v31;
        unint64_t v8 = v29;
        if (v25 > 0.125)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        swift_release();
      }
      ++v9;
      if (v11 == v7) {
        goto LABEL_44;
      }
    }
    uint64_t v2 = *(void *)(v6 + 8 * v9);
    swift_retain();
    uint64_t v11 = v9 - 3;
    if (!__OFADD__(v10, 1)) {
      goto LABEL_11;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
LABEL_44:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25433C95C()
{
  return swift_release();
}

uint64_t sub_25433C96C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25433CA40()
{
  return type metadata accessor for DKSpeakerDetectionTask();
}

uint64_t type metadata accessor for DKSpeakerDetectionTask()
{
  uint64_t result = qword_269DD9F08;
  if (!qword_269DD9F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25433CA94()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_25433CAE4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2543453FC();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_25433CB60(v6);
  return sub_25436D380();
}

void sub_25433CB60(uint64_t *a1)
{
  uint64_t v129 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v131 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v130 = (char *)&v113 - v6;
  uint64_t v7 = a1[1];
  uint64_t v118 = sub_25436D750();
  if (v118 >= v7)
  {
    if (v7 < 0) {
      goto LABEL_135;
    }
    if (v7) {
      sub_25433D508(0, v7, 1, a1);
    }
    return;
  }
  if (v7 >= 0) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_143;
  }
  uint64_t v117 = a1;
  uint64_t v124 = v1;
  if (v7 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v134 = MEMORY[0x263F8EE78];
    uint64_t v123 = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v7 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_101:
      if (v14 >= 2)
      {
        uint64_t v106 = *v117;
        do
        {
          unint64_t v107 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_130;
          }
          if (!v106) {
            goto LABEL_142;
          }
          uint64_t v108 = *(void *)&v11[16 * v107 + 32];
          uint64_t v109 = *(void *)&v11[16 * v14 + 24];
          uint64_t v110 = v124;
          sub_25433D750((char *)(v106 + 8 * v108), (char *)(v106 + 8 * *(void *)&v11[16 * v14 + 16]), (char *)(v106 + 8 * v109), v123);
          uint64_t v124 = v110;
          if (v110) {
            break;
          }
          if (v109 < v108) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_254345370((uint64_t)v11);
          }
          if (v107 >= *((void *)v11 + 2)) {
            goto LABEL_132;
          }
          uint64_t v111 = &v11[16 * v107 + 32];
          *(void *)uint64_t v111 = v108;
          *((void *)v111 + 1) = v109;
          unint64_t v112 = *((void *)v11 + 2);
          if (v14 > v112) {
            goto LABEL_133;
          }
          memmove(&v11[16 * v14 + 16], &v11[16 * v14 + 32], 16 * (v112 - v14));
          *((void *)v11 + 2) = v112 - 1;
          unint64_t v14 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_112:
      swift_bridgeObjectRelease();
      *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_25436CDE0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    type metadata accessor for DKPersonTracker();
    uint64_t v10 = sub_25436CE40();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v123 = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v134 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *v117;
  uint64_t v127 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v128 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v114 = v13 - 8;
  uint64_t v115 = v13 + 16;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v120 = v7;
  uint64_t v126 = v13;
  while (1)
  {
    uint64_t v15 = (uint64_t)v12;
    uint64_t v16 = (uint64_t)(v12 + 1);
    uint64_t v121 = v15;
    if (v16 >= v7)
    {
      uint64_t v35 = v118;
    }
    else
    {
      uint64_t v17 = *(void *)(v13 + 8 * v15);
      uint64_t v18 = *(void *)(v13 + 8 * v16)
          + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime;
      uint64_t v19 = v129;
      unint64_t v20 = *v128;
      uint64_t v21 = v130;
      (*v128)(v130, v18, v129);
      uint64_t v22 = v17 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime;
      unint64_t v23 = v131;
      unint64_t v132 = (char *)v20;
      v20(v131, v22, v19);
      swift_retain();
      swift_retain();
      int v133 = sub_25436C730();
      double v24 = (void (*)(char *, uint64_t, uint64_t))*v127;
      double v25 = v23;
      uint64_t v15 = v121;
      (*v127)(v25, v19);
      uint64_t v125 = v24;
      ((void (*)(char *, uint64_t))v24)(v21, v19);
      swift_release();
      swift_release();
      uint64_t v26 = v15 + 2;
      if (v15 + 2 >= v7)
      {
        uint64_t v16 = v15 + 2;
      }
      else
      {
        uint64_t v116 = v11;
        unint64_t v27 = (void *)(v115 + 8 * v15);
        while (1)
        {
          uint64_t v28 = *(v27 - 1);
          uint64_t v30 = v129;
          unint64_t v29 = v130;
          uint64_t v31 = v132;
          ((void (*)(char *, uint64_t, uint64_t))v132)(v130, *v27 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v129);
          uint64_t v32 = v131;
          ((void (*)(char *, uint64_t, uint64_t))v31)(v131, v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v30);
          swift_retain();
          swift_retain();
          int v33 = sub_25436C730();
          double v34 = v125;
          ((void (*)(char *, uint64_t))v125)(v32, v30);
          ((void (*)(char *, uint64_t))v34)(v29, v30);
          swift_release();
          swift_release();
          if ((v133 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v7 = v120;
          if (v120 == ++v26)
          {
            uint64_t v16 = v120;
            uint64_t v11 = v116;
            goto LABEL_24;
          }
        }
        uint64_t v11 = v116;
        uint64_t v7 = v120;
        uint64_t v16 = v26;
LABEL_24:
        uint64_t v15 = v121;
      }
      uint64_t v35 = v118;
      uint64_t v13 = v126;
      if (v133)
      {
        if (v16 < v15) {
          goto LABEL_136;
        }
        if (v15 < v16)
        {
          uint64_t v36 = (uint64_t *)(v114 + 8 * v16);
          uint64_t v37 = v16;
          uint64_t v38 = v15;
          uint64_t v39 = (uint64_t *)(v126 + 8 * v15);
          do
          {
            if (v38 != --v37)
            {
              if (!v13) {
                goto LABEL_141;
              }
              uint64_t v40 = *v39;
              *uint64_t v39 = *v36;
              *uint64_t v36 = v40;
            }
            ++v38;
            --v36;
            ++v39;
          }
          while (v38 < v37);
        }
      }
    }
    if (v16 < v7)
    {
      if (__OFSUB__(v16, v15)) {
        goto LABEL_134;
      }
      if (v16 - v15 < v35) {
        break;
      }
    }
LABEL_52:
    if (v16 < v15) {
      goto LABEL_129;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v132 = (char *)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = sub_254344E28(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v54 = *((void *)v11 + 2);
    unint64_t v53 = *((void *)v11 + 3);
    unint64_t v14 = v54 + 1;
    if (v54 >= v53 >> 1) {
      uint64_t v11 = sub_254344E28((char *)(v53 > 1), v54 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v14;
    unint64_t v55 = v11 + 32;
    uint64_t v56 = &v11[16 * v54 + 32];
    uint64_t v57 = v132;
    *(void *)uint64_t v56 = v15;
    *((void *)v56 + 1) = v57;
    if (v54)
    {
      while (1)
      {
        unint64_t v58 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v63 = &v55[16 * v14];
          uint64_t v64 = *((void *)v63 - 8);
          uint64_t v65 = *((void *)v63 - 7);
          BOOL v69 = __OFSUB__(v65, v64);
          uint64_t v66 = v65 - v64;
          if (v69) {
            goto LABEL_118;
          }
          uint64_t v68 = *((void *)v63 - 6);
          uint64_t v67 = *((void *)v63 - 5);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v61 = v67 - v68;
          char v62 = v69;
          if (v69) {
            goto LABEL_119;
          }
          unint64_t v70 = v14 - 2;
          uint64_t v71 = &v55[16 * v14 - 32];
          uint64_t v73 = *(void *)v71;
          uint64_t v72 = *((void *)v71 + 1);
          BOOL v69 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v69) {
            goto LABEL_121;
          }
          BOOL v69 = __OFADD__(v61, v74);
          uint64_t v75 = v61 + v74;
          if (v69) {
            goto LABEL_124;
          }
          if (v75 >= v66)
          {
            uint64_t v93 = &v55[16 * v58];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v69 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v69) {
              goto LABEL_128;
            }
            BOOL v86 = v61 < v96;
            goto LABEL_89;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v87 = *((void *)v11 + 4);
            uint64_t v88 = *((void *)v11 + 5);
            BOOL v69 = __OFSUB__(v88, v87);
            uint64_t v80 = v88 - v87;
            char v81 = v69;
            goto LABEL_83;
          }
          uint64_t v60 = *((void *)v11 + 4);
          uint64_t v59 = *((void *)v11 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
        }
        if (v62) {
          goto LABEL_120;
        }
        unint64_t v70 = v14 - 2;
        uint64_t v76 = &v55[16 * v14 - 32];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v80 = v77 - v78;
        char v81 = v79;
        if (v79) {
          goto LABEL_123;
        }
        int64_t v82 = &v55[16 * v58];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v69 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v69) {
          goto LABEL_126;
        }
        if (__OFADD__(v80, v85)) {
          goto LABEL_127;
        }
        if (v80 + v85 >= v61)
        {
          BOOL v86 = v61 < v85;
LABEL_89:
          if (v86) {
            unint64_t v58 = v70;
          }
          goto LABEL_91;
        }
LABEL_83:
        if (v81) {
          goto LABEL_122;
        }
        uint64_t v89 = &v55[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_125;
        }
        if (v92 < v80) {
          goto LABEL_14;
        }
LABEL_91:
        unint64_t v97 = v58 - 1;
        if (v58 - 1 >= v14)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v13) {
          goto LABEL_140;
        }
        double v98 = v11;
        uint64_t v99 = &v55[16 * v97];
        uint64_t v100 = *(void *)v99;
        uint64_t v101 = v55;
        uint64_t v102 = &v55[16 * v58];
        uint64_t v103 = *((void *)v102 + 1);
        uint64_t v104 = v124;
        sub_25433D750((char *)(v13 + 8 * *(void *)v99), (char *)(v13 + 8 * *(void *)v102), (char *)(v13 + 8 * v103), v123);
        uint64_t v124 = v104;
        if (v104) {
          goto LABEL_112;
        }
        if (v103 < v100) {
          goto LABEL_115;
        }
        if (v58 > *((void *)v98 + 2)) {
          goto LABEL_116;
        }
        *(void *)uint64_t v99 = v100;
        *(void *)&v101[16 * v97 + 8] = v103;
        unint64_t v105 = *((void *)v98 + 2);
        if (v58 >= v105) {
          goto LABEL_117;
        }
        uint64_t v11 = v98;
        unint64_t v14 = v105 - 1;
        memmove(v102, v102 + 16, 16 * (v105 - 1 - v58));
        unint64_t v55 = v101;
        *((void *)v98 + 2) = v105 - 1;
        if (v105 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v7 = v120;
    uint64_t v12 = v132;
    if ((uint64_t)v132 >= v120) {
      goto LABEL_101;
    }
  }
  if (__OFADD__(v15, v35)) {
    goto LABEL_137;
  }
  if (v15 + v35 >= v7) {
    uint64_t v41 = v7;
  }
  else {
    uint64_t v41 = v15 + v35;
  }
  if (v41 >= v15)
  {
    if (v16 != v41)
    {
      uint64_t v116 = v11;
      uint64_t v125 = *v128;
      char v42 = (void *)(v114 + 8 * v16);
      uint64_t v119 = (char *)v41;
      do
      {
        unint64_t v132 = (char *)v16;
        uint64_t v43 = *(void *)(v13 + 8 * v16);
        uint64_t v44 = v15;
        uint64_t v122 = v42;
        while (1)
        {
          uint64_t v45 = *v42;
          uint64_t v47 = v129;
          char v46 = v130;
          uint64_t v48 = v125;
          v125(v130, v43 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v129);
          uint64_t v49 = v131;
          v48(v131, v45 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v47);
          swift_retain();
          swift_retain();
          int v133 = sub_25436C730();
          uint64_t v50 = (void (*)(char *, uint64_t, uint64_t))*v127;
          (*v127)(v49, v47);
          ((void (*)(char *, uint64_t))v50)(v46, v47);
          swift_release();
          swift_release();
          if ((v133 & 1) == 0) {
            break;
          }
          uint64_t v13 = v126;
          if (!v126) {
            goto LABEL_139;
          }
          uint64_t v51 = *v42;
          uint64_t v43 = v42[1];
          *char v42 = v43;
          v42[1] = v51;
          --v42;
          if (v132 == (char *)++v44) {
            goto LABEL_45;
          }
        }
        uint64_t v13 = v126;
LABEL_45:
        uint64_t v16 = (uint64_t)(v132 + 1);
        uint64_t v15 = v121;
        char v42 = v122 + 1;
      }
      while (v132 + 1 != v119);
      uint64_t v16 = (uint64_t)v119;
      uint64_t v11 = v116;
    }
    goto LABEL_52;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  sub_25436D4E0();
  __break(1u);
}

void sub_25433D508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v30 = sub_25436C7B0();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x270FA5388](v8);
  uint64_t v31 = (char *)&v23 - v11;
  uint64_t v24 = a2;
  uint64_t v34 = a3;
  if (a3 != a2)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v29 = v9 + 16;
    uint64_t v12 = *a4;
    unint64_t v27 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v33 = v12;
    uint64_t v13 = (void *)(v12 + 8 * v34 - 8);
    uint64_t v15 = v30;
    unint64_t v14 = v31;
LABEL_5:
    uint64_t v16 = *(void *)(v33 + 8 * v34);
    uint64_t v17 = v25;
    uint64_t v26 = v13;
    while (1)
    {
      uint64_t v18 = *v13;
      uint64_t v19 = v28;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v28)(v14, v16 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v15, v10);
      unint64_t v20 = v32;
      v19(v32, v18 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v15);
      swift_retain();
      swift_retain();
      int v35 = sub_25436C730();
      uint64_t v21 = *v27;
      (*v27)(v20, v15);
      v21(v14, v15);
      swift_release();
      swift_release();
      if ((v35 & 1) == 0)
      {
LABEL_4:
        uint64_t v13 = v26 + 1;
        if (++v34 == v24) {
          return;
        }
        goto LABEL_5;
      }
      if (!v33) {
        break;
      }
      uint64_t v22 = *v13;
      uint64_t v16 = v13[1];
      *uint64_t v13 = v16;
      v13[1] = v22;
      --v13;
      if (v34 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_25433D750(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v55 = sub_25436C7B0();
  uint64_t v8 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  unint64_t v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v53 = (char *)&v44 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v13 = a2 - a1;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v51 = a3;
  uint64_t v15 = a3 - a2;
  uint64_t v16 = v15 / 8;
  uint64_t v60 = a1;
  uint64_t v59 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7) {
      goto LABEL_44;
    }
    if (a4 != a2 || &a2[8 * v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    uint64_t v28 = &a4[8 * v16];
    unint64_t v58 = v28;
    uint64_t v60 = a2;
    if (v15 < 8 || a1 >= a2) {
      goto LABEL_43;
    }
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v52 = v8 + 16;
    uint64_t v45 = (void (**)(char *, uint64_t))(v8 + 8);
    char v46 = v29;
    uint64_t v30 = v51 - 8;
    uint64_t v31 = a2;
    uint64_t v47 = a4;
    uint64_t v56 = a1;
    uint64_t v32 = v53;
    uint64_t v33 = v55;
    while (1)
    {
      uint64_t v57 = a2;
      uint64_t v50 = v28;
      uint64_t v51 = v30 + 8;
      uint64_t v34 = *((void *)v28 - 1);
      uint64_t v35 = *((void *)v31 - 1);
      uint64_t v48 = v28 - 8;
      uint64_t v49 = v31 - 8;
      uint64_t v36 = v46;
      v46(v32, v34 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v33);
      uint64_t v37 = v54;
      v36(v54, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v33);
      swift_retain();
      swift_retain();
      LOBYTE(v36) = sub_25436C730();
      uint64_t v38 = *v45;
      (*v45)(v37, v33);
      v38(v32, v33);
      swift_release();
      swift_release();
      if (v36) {
        break;
      }
      uint64_t v39 = v48;
      unint64_t v58 = v48;
      uint64_t v40 = v57;
      if (v51 < v50 || v30 >= v50)
      {
        *(void *)uint64_t v30 = *(void *)v48;
        uint64_t v31 = v40;
        uint64_t v28 = v39;
        goto LABEL_41;
      }
      uint64_t v41 = v47;
      char v42 = v56;
      if (v51 != v50) {
        *(void *)uint64_t v30 = *(void *)v48;
      }
      uint64_t v31 = v40;
      uint64_t v28 = v39;
      if (v39 <= v41) {
        goto LABEL_43;
      }
LABEL_42:
      v30 -= 8;
      a2 = v31;
      if (v31 <= v42) {
        goto LABEL_43;
      }
    }
    uint64_t v28 = v50;
    uint64_t v31 = v49;
    if (v51 != v57 || v30 >= v57) {
      *(void *)uint64_t v30 = *(void *)v49;
    }
    uint64_t v60 = v31;
LABEL_41:
    char v42 = v56;
    if (v28 <= v47) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[8 * v14] <= a4) {
      memmove(a4, a1, 8 * v14);
    }
    uint64_t v50 = &a4[8 * v14];
    unint64_t v58 = v50;
    if (v12 >= 8 && a2 < v51)
    {
      uint64_t v17 = *(char **)(v8 + 16);
      uint64_t v52 = v8 + 16;
      uint64_t v48 = (char *)(v8 + 8);
      uint64_t v49 = v17;
      uint64_t v19 = v54;
      uint64_t v18 = v55;
      do
      {
        uint64_t v56 = a1;
        uint64_t v57 = a2;
        uint64_t v20 = *(void *)a4;
        uint64_t v21 = *(void *)a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime;
        uint64_t v22 = v53;
        uint64_t v23 = v49;
        ((void (*)(char *, uint64_t, uint64_t))v49)(v53, v21, v18);
        ((void (*)(char *, uint64_t, uint64_t))v23)(v19, v20 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v18);
        swift_retain();
        swift_retain();
        LOBYTE(v23) = sub_25436C730();
        uint64_t v24 = *(void (**)(char *, uint64_t))v48;
        (*(void (**)(char *, uint64_t))v48)(v19, v18);
        v24(v22, v18);
        swift_release();
        swift_release();
        if (v23)
        {
          uint64_t v25 = v56;
          uint64_t v26 = v57 + 8;
          if (v56 < v57 || v56 >= v26 || v56 != v57) {
            *(void *)uint64_t v56 = *(void *)v57;
          }
        }
        else
        {
          uint64_t v25 = v56;
          unint64_t v27 = v57;
          if (v56 != a4) {
            *(void *)uint64_t v56 = *(void *)a4;
          }
          a4 += 8;
          uint64_t v59 = a4;
          uint64_t v26 = v27;
        }
        a1 = v25 + 8;
        uint64_t v60 = a1;
        if (a4 >= v50) {
          break;
        }
        a2 = v26;
      }
      while (v26 < v51);
    }
LABEL_43:
    sub_254345170((void **)&v60, (const void **)&v59, &v58);
    return 1;
  }
LABEL_44:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_25433DC64()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25433DC84, 0, 0);
}

uint64_t sub_25433DC84()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 48);
  swift_retain();
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = sub_25433DD18();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_25433DD18()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  }
  else
  {
    uint64_t v2 = sub_25427E068(0);
    uint64_t v1 = *(void *)(v0 + 48);
  }
  double v3 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  swift_bridgeObjectRetain();
  if (v3 == 0.0)
  {
    CGFloat v4 = COERCE_DOUBLE(sub_25427E050(0));
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    CGFloat v4 = v3;
  }
  double v5 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  swift_bridgeObjectRetain();
  if (v5 == 0.0) {
    CGFloat y = COERCE_DOUBLE(sub_25427E038(0));
  }
  else {
    CGFloat y = v5;
  }
  uint64_t v436 = sub_25424F7DC();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_2542EB3C4(v7);
  uint64_t v415 = v8;
  if (v8)
  {
    uint64_t v9 = v8;
    if (v8 < 1) {
      goto LABEL_338;
    }
    if (sub_25434DEEC(v2))
    {
      uint64_t v10 = 0;
      uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      do
      {
        if ((*(unsigned char *)(*(void *)(v2 + 8 * v10 + 32) + v11 + 8) & 1) == 0)
        {
          swift_retain();
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
          uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
        }
        ++v10;
      }
      while (v9 != v10);
    }
    else
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if ((*(unsigned char *)(MEMORY[0x25A275A00](i, v2)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId
                       + 8) & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_25436D370();
          sub_25436D3B0();
          sub_25436D3C0();
          sub_25436D380();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_2542EB3C4(v436);
  swift_release();
  rect.origin.CGFloat y = y;
  rect.size.CGFloat width = v4;
  uint64_t v412 = v2;
  if (v13 <= 0)
  {
    uint64_t v436 = sub_25424F7DC();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_2542EB3C4(v14);
    uint64_t v16 = v15;
    if (v15)
    {
      if (v15 < 1) {
        goto LABEL_351;
      }
      if (sub_25434DEE0(*(uint64_t *)&v4))
      {
        uint64_t v17 = 0;
        uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
        do
        {
          if ((*(unsigned char *)(*(void *)(*(void *)&v4 + 8 * v17 + 32) + v18 + 8) & 1) == 0)
          {
            swift_retain();
            sub_25436D370();
            sub_25436D3B0();
            sub_25436D3C0();
            sub_25436D380();
            uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
          }
          ++v17;
        }
        while (v16 != v17);
      }
      else
      {
        uint64_t v19 = 0;
        do
        {
          if ((*(unsigned char *)(MEMORY[0x25A275A00](v19, *(void *)&v4)
                         + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId
                         + 8) & 1) != 0)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            sub_25436D370();
            sub_25436D3B0();
            sub_25436D3C0();
            sub_25436D380();
          }
          ++v19;
        }
        while (v16 != v19);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_2542EB3C4(v436);
    swift_release();
    if (v20 <= 0)
    {
      uint64_t v436 = sub_25424F7DC();
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = sub_2542EB3C4(v21);
      uint64_t v23 = v22;
      if (v22)
      {
        if (v22 < 1) {
          goto LABEL_352;
        }
        if (sub_25434DEEC(*(uint64_t *)&y))
        {
          uint64_t v24 = 0;
          uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
          do
          {
            if ((*(unsigned char *)(*(void *)(*(void *)&y + 8 * v24 + 32) + v25 + 8) & 1) == 0)
            {
              swift_retain();
              sub_25436D370();
              sub_25436D3B0();
              sub_25436D3C0();
              sub_25436D380();
              uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
            }
            ++v24;
          }
          while (v23 != v24);
        }
        else
        {
          uint64_t v26 = 0;
          do
          {
            if ((*(unsigned char *)(MEMORY[0x25A275A00](v26, *(void *)&y)
                           + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId
                           + 8) & 1) != 0)
            {
              swift_unknownObjectRelease();
            }
            else
            {
              sub_25436D370();
              sub_25436D3B0();
              sub_25436D3C0();
              sub_25436D380();
            }
            ++v26;
          }
          while (v23 != v26);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_2542EB3C4(v436);
      swift_release();
      if (v27 <= 0)
      {
        uint64_t v97 = MEMORY[0x263F8EE78];
        uint64_t v436 = MEMORY[0x263F8EE78];
        uint64_t v397 = v23;
        if (v415)
        {
          BOOL v396 = sub_25434DEEC(v2);
          uint64_t v395 = v2 + 32;
          swift_bridgeObjectRetain();
          uint64_t v98 = 0;
          do
          {
            sub_2542F5CAC(v98, v396, v2);
            if (v396)
            {
              uint64_t v100 = *(void *)(v395 + 8 * v98);
              swift_retain();
            }
            else
            {
              uint64_t v100 = MEMORY[0x25A275A00](v98, v2);
            }
            uint64_t v99 = v98 + 1;
            if (__OFADD__(v98, 1)) {
              goto LABEL_335;
            }
            if (v16)
            {
              if (v16 < 1) {
                goto LABEL_337;
              }
              uint64_t v101 = *(void *)&v4;
              uint64_t v102 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
              uint64_t v103 = (CGFloat *)(v100 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
              BOOL v104 = sub_25434DEE0(v101);
              swift_bridgeObjectRetain();
              if (v104)
              {
                for (uint64_t j = 0; j != v16; ++j)
                {
                  uint64_t v127 = *(void *)(*(void *)&rect.size.width + 8 * j + 32);
                  if (*(unsigned char *)(v100 + v102) == 1)
                  {
                    swift_retain();
                    sub_2542F5B4C();
                    uint64_t v128 = *(void *)(v436 + 16);
                    sub_2542F5C08(v128);
                    double v125 = 1.79769313e308;
                    uint64_t v122 = v128;
                    uint64_t v123 = v98;
                    uint64_t v124 = j;
                  }
                  else
                  {
                    CGFloat v107 = *v103;
                    CGFloat v106 = v103[1];
                    CGFloat v109 = v103[2];
                    CGFloat v108 = v103[3];
                    CGFloat v110 = *(double *)(v127 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                    CGFloat v420 = *(double *)(v127 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                    CGFloat v111 = *(double *)(v127 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                    CGFloat v112 = *(double *)(v127 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                    swift_retain();
                    v437.origin.CGFloat x = v107;
                    v437.origin.CGFloat y = v106;
                    v437.size.CGFloat width = v109;
                    v437.size.CGFloat height = v108;
                    double Width = CGRectGetWidth(v437);
                    v438.origin.CGFloat x = v110;
                    v438.origin.CGFloat y = v420;
                    v438.size.CGFloat width = v111;
                    v438.size.CGFloat height = v112;
                    double v114 = CGRectGetWidth(v438);
                    if (v114 >= Width) {
                      double v114 = Width;
                    }
                    double v406 = fmax(v114, 0.01);
                    v439.origin.CGFloat x = v107;
                    v439.origin.CGFloat y = v106;
                    v439.size.CGFloat width = v109;
                    v439.size.CGFloat height = v108;
                    double Height = CGRectGetHeight(v439);
                    v440.origin.CGFloat x = v110;
                    v440.origin.CGFloat y = v420;
                    v440.size.CGFloat width = v111;
                    v440.size.CGFloat height = v112;
                    double v116 = CGRectGetHeight(v440);
                    if (v116 >= Height) {
                      double v116 = Height;
                    }
                    double v404 = fmax(v116, 0.01);
                    v441.origin.CGFloat x = v107;
                    v441.origin.CGFloat y = v106;
                    v441.size.CGFloat width = v109;
                    v441.size.CGFloat height = v108;
                    double MidX = CGRectGetMidX(v441);
                    v442.origin.CGFloat x = v110;
                    v442.origin.CGFloat y = v420;
                    v442.size.CGFloat width = v111;
                    v442.size.CGFloat height = v112;
                    double v407 = (MidX - CGRectGetMidX(v442)) / v406;
                    v443.origin.CGFloat x = v107;
                    v443.origin.CGFloat y = v106;
                    v443.size.CGFloat width = v109;
                    v443.size.CGFloat height = v108;
                    double MidY = CGRectGetMidY(v443);
                    v444.origin.CGFloat x = v110;
                    v444.origin.CGFloat y = v420;
                    v444.size.CGFloat width = v111;
                    v444.size.CGFloat height = v112;
                    CGFloat v119 = CGRectGetMidY(v444);
                    double v120 = sqrt(v407 * v407 + (MidY - v119) / v404 * ((MidY - v119) / v404));
                    sub_2542F5B4C();
                    uint64_t v121 = *(void *)(v436 + 16);
                    sub_2542F5C08(v121);
                    uint64_t v122 = v121;
                    uint64_t v123 = v98;
                    uint64_t v124 = j;
                    double v125 = v120;
                  }
                  uint64_t v126 = sub_2542F5C88(v122, v123, v124, v125);
                  nullsub_1(v126);
                  swift_release();
                }
              }
              else
              {
                for (uint64_t k = 0; k != v16; ++k)
                {
                  uint64_t v136 = MEMORY[0x25A275A00](k, *(void *)&rect.size.width);
                  if (*(unsigned char *)(v100 + v102) == 1)
                  {
                    sub_2542F5B4C();
                    uint64_t v130 = *(void *)(v436 + 16);
                    sub_2542F5C08(v130);
                    double v131 = 1.79769313e308;
                    uint64_t v132 = v130;
                    uint64_t v133 = v98;
                    uint64_t v134 = k;
                  }
                  else
                  {
                    CGFloat v137 = *v103;
                    CGFloat v138 = v103[1];
                    v445.size.CGFloat width = v103[2];
                    v445.size.CGFloat height = v103[3];
                    CGFloat v400 = v445.size.height;
                    CGFloat v401 = v445.size.width;
                    CGFloat v139 = *(double *)(v136 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                    CGFloat v140 = *(double *)(v136 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                    CGFloat v141 = *(double *)(v136 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                    CGFloat v398 = *(double *)(v136 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                    v445.origin.CGFloat x = *v103;
                    CGFloat v402 = *v103;
                    v445.origin.CGFloat y = v138;
                    double v142 = CGRectGetWidth(v445);
                    v446.origin.CGFloat x = v139;
                    v446.origin.CGFloat y = v140;
                    v446.size.CGFloat width = v141;
                    v446.size.CGFloat height = v398;
                    double v143 = CGRectGetWidth(v446);
                    if (v143 >= v142) {
                      double v143 = v142;
                    }
                    double v421 = fmax(v143, 0.01);
                    v447.origin.CGFloat x = v137;
                    v447.origin.CGFloat y = v138;
                    v447.size.CGFloat width = v401;
                    v447.size.CGFloat height = v400;
                    double v144 = CGRectGetHeight(v447);
                    v448.origin.CGFloat x = v139;
                    v448.origin.CGFloat y = v140;
                    v448.size.CGFloat width = v141;
                    v448.size.CGFloat height = v398;
                    double v145 = CGRectGetHeight(v448);
                    if (v145 >= v144) {
                      double v145 = v144;
                    }
                    double v408 = fmax(v145, 0.01);
                    v449.origin.CGFloat x = v402;
                    v449.origin.CGFloat y = v138;
                    v449.size.CGFloat width = v401;
                    v449.size.CGFloat height = v400;
                    double v146 = CGRectGetMidX(v449);
                    v450.origin.CGFloat x = v139;
                    v450.origin.CGFloat y = v140;
                    v450.size.CGFloat width = v141;
                    v450.size.CGFloat height = v398;
                    double v422 = (v146 - CGRectGetMidX(v450)) / v421;
                    v451.origin.CGFloat x = v402;
                    v451.origin.CGFloat y = v138;
                    v451.size.CGFloat width = v401;
                    v451.size.CGFloat height = v400;
                    double v147 = CGRectGetMidY(v451);
                    v452.origin.CGFloat x = v139;
                    v452.origin.CGFloat y = v140;
                    v452.size.CGFloat width = v141;
                    v452.size.CGFloat height = v398;
                    CGFloat v148 = CGRectGetMidY(v452);
                    double v149 = sqrt(v422 * v422 + (v147 - v148) / v408 * ((v147 - v148) / v408));
                    sub_2542F5B4C();
                    uint64_t v150 = *(void *)(v436 + 16);
                    sub_2542F5C08(v150);
                    uint64_t v132 = v150;
                    uint64_t v133 = v98;
                    uint64_t v134 = k;
                    double v131 = v149;
                  }
                  uint64_t v135 = sub_2542F5C88(v132, v133, v134, v131);
                  nullsub_1(v135);
                  swift_unknownObjectRelease();
                }
              }
              swift_release();
              CGFloat v4 = rect.size.width;
              swift_bridgeObjectRelease();
              uint64_t v99 = v98 + 1;
            }
            else
            {
              swift_release();
            }
            uint64_t v98 = v99;
            uint64_t v2 = v412;
          }
          while (v99 != v415);
          swift_bridgeObjectRelease();
          uint64_t v97 = v436;
          uint64_t v23 = v397;
        }
        uint64_t v435 = v97;
        swift_bridgeObjectRetain_n();
        sub_2543407C0(&v435, sub_2543453E8, &qword_269DD9F40, (void (*)(void, void, void))sub_25434509C);
        uint64_t v394 = 0;
        swift_bridgeObjectRelease();
        uint64_t v151 = v435;
        uint64_t v152 = sub_25427DE78(0);
        if (sub_254354CD4(v152)) {
          uint64_t v153 = sub_2542FEE98(v152);
        }
        else {
          uint64_t v153 = MEMORY[0x263F8EE88];
        }
        swift_bridgeObjectRelease();
        uint64_t v435 = v153;
        uint64_t v154 = sub_25427DE78(0);
        if (sub_254354CD4(v154)) {
          uint64_t v155 = sub_2542FEE98(v154);
        }
        else {
          uint64_t v155 = MEMORY[0x263F8EE88];
        }
        swift_bridgeObjectRelease();
        uint64_t v434 = v155;
        uint64_t v433 = (void *)MEMORY[0x263F8EE78];
        uint64_t v156 = sub_254354CD4(v151);
        if (!v156 || (uint64_t v157 = v156, sub_2542F5CA8(0, 1, v151), *(double *)(v151 + 48) < COERCE_DOUBLE(1)))
        {
          swift_release();
          goto LABEL_150;
        }
        uint64_t v176 = v151 + 32;
        v177 = (uint64_t *)(v151 + 40);
        uint64_t v423 = v2 + 32;
        uint64_t v409 = v151;
        uint64_t v411 = *(void *)&v4 + 32;
        unint64_t v178 = 1;
        uint64_t v179 = v151 + 32;
        uint64_t v403 = v151 + 32;
        uint64_t v405 = v157;
        while (1)
        {
          uint64_t v180 = *v177;
          uint64_t v181 = *(void *)v179;
          uint64_t v182 = v435;
          if (*(void *)(v435 + 16))
          {
            uint64_t v183 = sub_25436D8E0();
            uint64_t v184 = -1 << *(unsigned char *)(v182 + 32);
            unint64_t v185 = v183 & ~v184;
            if ((*(void *)(v182 + 56 + ((v185 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v185))
            {
              uint64_t v186 = *(void *)(v182 + 48);
              if (*(void *)(v186 + 8 * v185) == v181) {
                goto LABEL_183;
              }
              uint64_t v187 = ~v184;
              while (1)
              {
                unint64_t v185 = (v185 + 1) & v187;
                if (((*(void *)(v182 + 56 + ((v185 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v185) & 1) == 0) {
                  break;
                }
                if (*(void *)(v186 + 8 * v185) == v181) {
                  goto LABEL_183;
                }
              }
            }
          }
          if (!sub_254350E28(v180, v434))
          {
            uint64_t v188 = sub_2542EB3BC((uint64_t)v433);
            BOOL v189 = sub_25434DEEC(v412);
            sub_2542F5CAC(v181, v189, v412);
            if (v189) {
              uint64_t v190 = swift_retain();
            }
            else {
              uint64_t v190 = MEMORY[0x25A275A00](v181, v412);
            }
            uint64_t v191 = v190 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
            *(void *)uint64_t v191 = v188;
            *(unsigned char *)(v191 + 8) = 0;
            swift_release();
            BOOL v192 = sub_25434DEE0(*(uint64_t *)&rect.size.width);
            sub_2542F5CAC(v180, v192, *(void *)&rect.size.width);
            if (v192)
            {
              uint64_t v193 = *(void *)(v411 + 8 * v180) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
              *(void *)uint64_t v193 = v188;
              *(unsigned char *)(v193 + 8) = 0;
              if (v189) {
                goto LABEL_176;
              }
LABEL_180:
              uint64_t v194 = MEMORY[0x25A275A00](v181, v412);
              *(void *)&rect.origin.CGFloat x = v188;
              if (v192) {
                goto LABEL_181;
              }
LABEL_177:
              uint64_t v195 = MEMORY[0x25A275A00](v180, *(void *)&rect.size.width);
            }
            else
            {
              uint64_t v196 = MEMORY[0x25A275A00](v180, *(void *)&rect.size.width)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
              *(void *)uint64_t v196 = v188;
              *(unsigned char *)(v196 + 8) = 0;
              swift_unknownObjectRelease();
              if (!v189) {
                goto LABEL_180;
              }
LABEL_176:
              uint64_t v194 = *(void *)(v423 + 8 * v181);
              swift_retain();
              *(void *)&rect.origin.CGFloat x = v188;
              if (!v192) {
                goto LABEL_177;
              }
LABEL_181:
              uint64_t v195 = *(void *)(v411 + 8 * v180);
              swift_retain();
            }
            unint64_t v197 = sub_25427E038(0);
            swift_retain();
            swift_retain();
            uint64_t v198 = sub_254278FE0(v197);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release_n();
            sub_2542F5B34();
            uint64_t v199 = v433[2];
            sub_2542F5BF0(v199);
            uint64_t v200 = sub_2542F5C6C(v199, *(uint64_t *)&rect.origin.x, v194, v195, v198);
            nullsub_1(v200);
            sub_2542683B0(&v432, v181);
            sub_2542683B0(&v432, v180);
            uint64_t v157 = v405;
            uint64_t v151 = v409;
            uint64_t v176 = v403;
          }
LABEL_183:
          if (v178 == v157) {
            goto LABEL_328;
          }
          sub_2542F5CA8(v178, 1, v151);
          CGFloat v4 = rect.size.width;
          uint64_t v2 = v412;
          if (__OFADD__(v178, 1)) {
            goto LABEL_350;
          }
          uint64_t v179 = v176 + 24 * v178;
          v177 = (uint64_t *)(v179 + 8);
          ++v178;
          if (*(double *)(v179 + 16) < COERCE_DOUBLE(1))
          {
            swift_release();
            uint64_t v23 = v397;
            goto LABEL_150;
          }
        }
      }
    }
  }
  uint64_t v28 = v415;
  if (!v415)
  {
    rect.origin.CGFloat x = 0.0;
    uint64_t v30 = (void *)MEMORY[0x263F8EE80];
LABEL_69:
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_2542EB3C4(*(void *)&v4);
    CGFloat y = rect.origin.y;
    if (!v49)
    {
      uint64_t v51 = 0;
LABEL_89:
      uint64_t v412 = (uint64_t)v51;
      swift_bridgeObjectRelease();
      *(double *)&uint64_t v70 = COERCE_DOUBLE(sub_2542EB3C4(*(void *)&y));
      if (*(double *)&v70 == 0.0)
      {
        uint64_t v74 = 0;
LABEL_109:
        swift_bridgeObjectRelease();
        uint64_t v94 = swift_bridgeObjectRetain();
        uint64_t v95 = sub_254352610(v94);
        swift_bridgeObjectRelease_n();
        sub_2542509EC(*(uint64_t *)&rect.origin.x);
        sub_2542509EC(v412);
        sub_2542509EC((uint64_t)v74);
        return (uint64_t)v95;
      }
      CGFloat v71 = *(double *)&v70;
      BOOL v72 = sub_25434DEEC(*(uint64_t *)&y);
      BOOL v73 = v72;
      uint64_t v74 = 0;
      uint64_t v16 = 4;
      rect.size.CGFloat width = v71;
      LODWORD(v415) = v72;
      while (1)
      {
        if (v73)
        {
          uint64_t v77 = *(void *)(*(void *)&y + 8 * v16);
          swift_retain();
        }
        else
        {
          uint64_t v77 = MEMORY[0x25A275A00](v16 - 4, *(void *)&y);
        }
        uint64_t v78 = v16 - 3;
        if (__OFADD__(v16 - 4, 1)) {
          goto LABEL_327;
        }
        if (*(unsigned char *)(v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId + 8) != 1)
        {
          uint64_t v79 = *(void *)(v77 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
          *(void *)(swift_allocObject() + 16) = v79;
          sub_2542509EC((uint64_t)v74);
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v436 = (uint64_t)v30;
          unint64_t v82 = sub_254351604(v79);
          uint64_t v83 = v30[2];
          BOOL v84 = (v81 & 1) == 0;
          uint64_t v85 = v83 + v84;
          if (__OFADD__(v83, v84)) {
            goto LABEL_331;
          }
          char v86 = v81;
          if (v30[3] >= v85)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_25429CE4C();
              uint64_t v30 = (void *)v436;
            }
          }
          else
          {
            sub_254299F08(v85, isUniquelyReferenced_nonNull_native);
            uint64_t v30 = (void *)v436;
            unint64_t v87 = sub_254351604(v79);
            if ((v86 & 1) != (v88 & 1)) {
              goto LABEL_353;
            }
            unint64_t v82 = v87;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          if ((v86 & 1) == 0)
          {
            unint64_t v89 = sub_25427E038(0);
            uint64_t v90 = sub_254278FE0(v89);
            swift_bridgeObjectRelease();
            v30[(v82 >> 6) + 8] |= 1 << v82;
            *(void *)(v30[6] + 8 * v82) = v79;
            uint64_t v91 = (uint64_t *)(v30[7] + 32 * v82);
            uint64_t *v91 = v79;
            v91[1] = 0;
            v91[2] = 0;
            v91[3] = v90;
            uint64_t v92 = v30[2];
            BOOL v46 = __OFADD__(v92, 1);
            uint64_t v93 = v92 + 1;
            if (v46) {
              goto LABEL_334;
            }
            v30[2] = v93;
          }
          uint64_t v75 = v30[7];
          uint64_t v76 = swift_bridgeObjectRelease();
          MEMORY[0x25A275490](v76);
          sub_2542F5BC0(*(void *)(*(void *)(v75 + 32 * v82 + 24) + 16));
          sub_25436CE60();
          sub_25436CDE0();
          uint64_t v74 = sub_254341248;
          CGFloat y = rect.origin.y;
          CGFloat v71 = rect.size.width;
          BOOL v73 = v415;
        }
        swift_release();
        ++v16;
        if (v78 == *(void *)&v71) {
          goto LABEL_109;
        }
      }
    }
    uint64_t v50 = v49;
    LODWORD(v415) = sub_25434DEE0(*(uint64_t *)&v4);
    uint64_t v51 = 0;
    uint64_t v52 = 4;
    uint64_t v412 = v50;
    while (1)
    {
      if (v415)
      {
        uint64_t v53 = *(void *)(*(void *)&v4 + 8 * v52);
        swift_retain();
      }
      else
      {
        uint64_t v53 = MEMORY[0x25A275A00](v52 - 4, *(void *)&v4);
      }
      uint64_t v16 = v52 - 3;
      if (__OFADD__(v52 - 4, 1)) {
        break;
      }
      if (*(unsigned char *)(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId + 8) == 1)
      {
        swift_release();
      }
      else
      {
        uint64_t v54 = *(void *)(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
        *(void *)(swift_allocObject() + 16) = v54;
        sub_2542509EC((uint64_t)v51);
        swift_retain();
        char v55 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v436 = (uint64_t)v30;
        unint64_t v57 = sub_254351604(v54);
        uint64_t v58 = v30[2];
        BOOL v59 = (v56 & 1) == 0;
        uint64_t v60 = v58 + v59;
        if (__OFADD__(v58, v59)) {
          goto LABEL_330;
        }
        char v61 = v56;
        if (v30[3] >= v60)
        {
          if ((v55 & 1) == 0)
          {
            sub_25429CE4C();
            uint64_t v30 = (void *)v436;
          }
        }
        else
        {
          sub_254299F08(v60, v55);
          uint64_t v30 = (void *)v436;
          unint64_t v62 = sub_254351604(v54);
          if ((v61 & 1) != (v63 & 1)) {
            goto LABEL_353;
          }
          unint64_t v57 = v62;
        }
        CGFloat v4 = rect.size.width;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((v61 & 1) == 0)
        {
          unint64_t v64 = sub_25427E038(0);
          uint64_t v65 = sub_254278FE0(v64);
          swift_bridgeObjectRelease();
          v30[(v57 >> 6) + 8] |= 1 << v57;
          *(void *)(v30[6] + 8 * v57) = v54;
          uint64_t v66 = (uint64_t *)(v30[7] + 32 * v57);
          *uint64_t v66 = v54;
          v66[1] = 0;
          v66[2] = 0;
          v66[3] = v65;
          uint64_t v67 = v30[2];
          BOOL v46 = __OFADD__(v67, 1);
          uint64_t v68 = v67 + 1;
          if (v46) {
            goto LABEL_333;
          }
          v30[2] = v68;
        }
        uint64_t v69 = v30[7];
        swift_bridgeObjectRelease();
        *(void *)(v69 + 32 * v57 + 16) = v53;
        swift_release();
        swift_release();
        uint64_t v51 = sub_254341248;
        CGFloat y = rect.origin.y;
        uint64_t v50 = v412;
      }
      ++v52;
      if (v16 == v50) {
        goto LABEL_89;
      }
    }
LABEL_326:
    __break(1u);
LABEL_327:
    __break(1u);
LABEL_328:
    swift_release();
    uint64_t v23 = v397;
    CGFloat v4 = rect.size.width;
    uint64_t v2 = v412;
LABEL_150:
    if (!v415) {
      goto LABEL_199;
    }
    uint64_t v158 = v435;
    uint64_t v159 = v435 + 56;
    if (sub_25434DEEC(v2))
    {
      uint64_t v160 = v2 + 32;
      swift_bridgeObjectRetain();
      uint64_t v161 = 0;
      while (1)
      {
        sub_2542F5CAC(v161, 1, v2);
        uint64_t v170 = v161 + 1;
        if (__OFADD__(v161, 1)) {
          goto LABEL_339;
        }
        if (*(void *)(v158 + 16))
        {
          uint64_t v171 = sub_25436D8E0();
          uint64_t v172 = -1 << *(unsigned char *)(v158 + 32);
          unint64_t v173 = v171 & ~v172;
          if ((*(void *)(v159 + ((v173 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v173))
          {
            uint64_t v174 = *(void *)(v158 + 48);
            if (*(void *)(v174 + 8 * v173) == v161) {
              goto LABEL_154;
            }
            uint64_t v175 = ~v172;
            while (1)
            {
              unint64_t v173 = (v173 + 1) & v175;
              if (((*(void *)(v159 + ((v173 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v173) & 1) == 0) {
                break;
              }
              if (*(void *)(v174 + 8 * v173) == v161) {
                goto LABEL_154;
              }
            }
          }
        }
        uint64_t v162 = sub_2542EB3BC((uint64_t)v433);
        uint64_t v163 = *(void *)(v160 + 8 * v161) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
        *(void *)uint64_t v163 = v162;
        *(unsigned char *)(v163 + 8) = 0;
        uint64_t v164 = *(void *)(v160 + 8 * v161);
        swift_retain();
        unint64_t v165 = sub_25427E038(0);
        swift_retain();
        uint64_t v166 = sub_254278FE0(v165);
        swift_release();
        swift_bridgeObjectRelease();
        sub_2542F5B34();
        uint64_t v167 = v433[2];
        sub_2542F5BF0(v167);
        uint64_t v168 = sub_2542F5C6C(v167, v162, v164, 0, v166);
        nullsub_1(v168);
LABEL_154:
        uint64_t v161 = v170;
        BOOL v169 = v170 == v415;
        uint64_t v2 = v412;
        if (v169) {
          goto LABEL_198;
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v201 = 0;
    while (1)
    {
      sub_2542F5CAC(v201, 0, v2);
      MEMORY[0x25A275A00](v201, v2);
      swift_unknownObjectRelease();
      uint64_t v209 = v201 + 1;
      if (__OFADD__(v201, 1)) {
        goto LABEL_340;
      }
      if (*(void *)(v158 + 16))
      {
        uint64_t v210 = sub_25436D8E0();
        uint64_t v211 = -1 << *(unsigned char *)(v158 + 32);
        unint64_t v212 = v210 & ~v211;
        if ((*(void *)(v159 + ((v212 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v212))
        {
          uint64_t v213 = *(void *)(v158 + 48);
          if (*(void *)(v213 + 8 * v212) == v201) {
            goto LABEL_189;
          }
          uint64_t v214 = ~v211;
          while (1)
          {
            unint64_t v212 = (v212 + 1) & v214;
            if (((*(void *)(v159 + ((v212 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v212) & 1) == 0) {
              break;
            }
            if (*(void *)(v213 + 8 * v212) == v201) {
              goto LABEL_189;
            }
          }
        }
      }
      uint64_t v202 = sub_2542EB3BC((uint64_t)v433);
      uint64_t v203 = MEMORY[0x25A275A00](v201, v412) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      *(void *)uint64_t v203 = v202;
      *(unsigned char *)(v203 + 8) = 0;
      swift_unknownObjectRelease();
      uint64_t v204 = MEMORY[0x25A275A00](v201, v412);
      unint64_t v205 = sub_25427E038(0);
      swift_retain();
      uint64_t v206 = sub_254278FE0(v205);
      swift_release();
      swift_bridgeObjectRelease();
      sub_2542F5B34();
      uint64_t v207 = v433[2];
      sub_2542F5BF0(v207);
      uint64_t v208 = sub_2542F5C6C(v207, v202, v204, 0, v206);
      nullsub_1(v208);
LABEL_189:
      uint64_t v201 = v209;
      BOOL v169 = v209 == v415;
      uint64_t v2 = v412;
      if (v169)
      {
LABEL_198:
        swift_bridgeObjectRelease();
        CGFloat y = rect.origin.y;
        CGFloat v4 = rect.size.width;
        uint64_t v23 = v397;
LABEL_199:
        swift_bridgeObjectRelease();
        if (!v16) {
          goto LABEL_224;
        }
        uint64_t v215 = v434;
        uint64_t v216 = v434 + 56;
        if (sub_25434DEE0(*(uint64_t *)&v4))
        {
          uint64_t v217 = *(void *)&v4 + 32;
          swift_bridgeObjectRetain();
          uint64_t v218 = 0;
          while (1)
          {
            sub_2542F5CAC(v218, 1, *(void *)&rect.size.width);
            uint64_t v226 = v218 + 1;
            if (__OFADD__(v218, 1)) {
              goto LABEL_341;
            }
            if (*(void *)(v215 + 16))
            {
              uint64_t v227 = sub_25436D8E0();
              uint64_t v228 = -1 << *(unsigned char *)(v215 + 32);
              unint64_t v229 = v227 & ~v228;
              if ((*(void *)(v216 + ((v229 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v229))
              {
                uint64_t v230 = *(void *)(v215 + 48);
                if (*(void *)(v230 + 8 * v229) == v218) {
                  goto LABEL_203;
                }
                uint64_t v231 = ~v228;
                while (1)
                {
                  unint64_t v229 = (v229 + 1) & v231;
                  if (((*(void *)(v216 + ((v229 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v229) & 1) == 0) {
                    break;
                  }
                  if (*(void *)(v230 + 8 * v229) == v218) {
                    goto LABEL_203;
                  }
                }
              }
            }
            uint64_t v219 = sub_2542EB3BC((uint64_t)v433);
            uint64_t v220 = *(void *)(v217 + 8 * v218) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
            *(void *)uint64_t v220 = v219;
            *(unsigned char *)(v220 + 8) = 0;
            uint64_t v221 = *(void *)(v217 + 8 * v218);
            swift_retain();
            unint64_t v222 = sub_25427E038(0);
            swift_retain();
            uint64_t v223 = sub_254278FE0(v222);
            swift_release();
            swift_bridgeObjectRelease();
            sub_2542F5B34();
            uint64_t v224 = v433[2];
            sub_2542F5BF0(v224);
            uint64_t v225 = sub_2542F5C6C(v224, v219, 0, v221, v223);
            nullsub_1(v225);
LABEL_203:
            uint64_t v218 = v226;
            if (v226 == v16) {
              goto LABEL_223;
            }
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v232 = 0;
        while (2)
        {
          sub_2542F5CAC(v232, 0, *(void *)&rect.size.width);
          MEMORY[0x25A275A00](v232, *(void *)&rect.size.width);
          swift_unknownObjectRelease();
          uint64_t v240 = v232 + 1;
          if (__OFADD__(v232, 1)) {
            goto LABEL_342;
          }
          if (*(void *)(v215 + 16)
            && (uint64_t v241 = sub_25436D8E0(),
                uint64_t v242 = -1 << *(unsigned char *)(v215 + 32),
                unint64_t v243 = v241 & ~v242,
                ((*(void *)(v216 + ((v243 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v243) & 1) != 0))
          {
            uint64_t v244 = *(void *)(v215 + 48);
            if (*(void *)(v244 + 8 * v243) != v232)
            {
              uint64_t v245 = ~v242;
              do
              {
                unint64_t v243 = (v243 + 1) & v245;
                if (((*(void *)(v216 + ((v243 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v243) & 1) == 0) {
                  goto LABEL_213;
                }
              }
              while (*(void *)(v244 + 8 * v243) != v232);
            }
          }
          else
          {
LABEL_213:
            uint64_t v233 = sub_2542EB3BC((uint64_t)v433);
            uint64_t v234 = MEMORY[0x25A275A00](v232, *(void *)&rect.size.width)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
            *(void *)uint64_t v234 = v233;
            *(unsigned char *)(v234 + 8) = 0;
            swift_unknownObjectRelease();
            uint64_t v235 = MEMORY[0x25A275A00](v232, *(void *)&rect.size.width);
            unint64_t v236 = sub_25427E038(0);
            swift_retain();
            uint64_t v237 = sub_254278FE0(v236);
            swift_release();
            swift_bridgeObjectRelease();
            sub_2542F5B34();
            uint64_t v238 = v433[2];
            sub_2542F5BF0(v238);
            uint64_t v239 = sub_2542F5C6C(v238, v233, 0, v235, v237);
            nullsub_1(v239);
          }
          uint64_t v232 = v240;
          if (v240 != v16) {
            continue;
          }
          break;
        }
LABEL_223:
        swift_bridgeObjectRelease();
        CGFloat y = rect.origin.y;
        uint64_t v23 = v397;
LABEL_224:
        swift_bridgeObjectRelease();
        uint64_t v432 = MEMORY[0x263F8EE78];
        if (!v23) {
          goto LABEL_272;
        }
        uint64_t v246 = (uint64_t)v433;
        uint64_t v247 = *(void *)&y;
        uint64_t v248 = sub_254354CD4((uint64_t)v433);
        if (sub_25434DEEC(v247))
        {
          uint64_t v399 = v247 + 32;
          swift_bridgeObjectRetain();
          uint64_t v249 = 0;
          while (1)
          {
            sub_2542F5CAC(v249, 1, *(void *)&rect.origin.y);
            uint64_t v250 = v249 + 1;
            if (__OFADD__(v249, 1)) {
              goto LABEL_343;
            }
            if (v248) {
              break;
            }
LABEL_228:
            uint64_t v249 = v250;
            if (v250 == v397) {
              goto LABEL_271;
            }
          }
          if (v248 < 1) {
            goto LABEL_348;
          }
          uint64_t v251 = *(void *)(v399 + 8 * v249) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v252 = 0;
          uint64_t v253 = v246 + 56;
          while (2)
          {
            uint64_t v271 = *(void *)(v253 - 16);
            uint64_t v270 = *(void *)(v253 - 8);
            if (v270)
            {
              CGFloat v255 = *(double *)v251;
              CGFloat v254 = *(double *)(v251 + 8);
              CGFloat v257 = *(double *)(v251 + 16);
              CGFloat v256 = *(double *)(v251 + 24);
              CGFloat v258 = *(double *)(v270 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
              rect.size.CGFloat width = *(CGFloat *)(v270 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
              CGFloat v259 = *(double *)(v270 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
              CGFloat v413 = *(double *)(v270 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v453.origin.CGFloat x = v255;
              v453.origin.CGFloat y = v254;
              v453.size.CGFloat width = v257;
              v453.size.CGFloat height = v256;
              double v260 = CGRectGetWidth(v453);
              v454.origin.CGFloat x = rect.size.width;
              v454.origin.CGFloat y = v258;
              v454.size.CGFloat width = v413;
              v454.size.CGFloat height = v259;
              double v261 = CGRectGetWidth(v454);
              if (v261 >= v260) {
                double v261 = v260;
              }
              double v424 = fmax(v261, 0.01);
              v455.origin.CGFloat x = v255;
              v455.origin.CGFloat y = v254;
              v455.size.CGFloat width = v257;
              v455.size.CGFloat height = v256;
              double v262 = CGRectGetHeight(v455);
              v456.origin.CGFloat x = rect.size.width;
              v456.origin.CGFloat y = v258;
              v456.size.CGFloat width = v413;
              v456.size.CGFloat height = v259;
              double v263 = CGRectGetHeight(v456);
              if (v263 >= v262) {
                double v263 = v262;
              }
              double v416 = fmax(v263, 0.01);
              v457.origin.CGFloat x = v255;
              v457.origin.CGFloat y = v254;
              v457.size.CGFloat width = v257;
              v457.size.CGFloat height = v256;
              double v264 = CGRectGetMidX(v457);
              v458.origin.CGFloat x = rect.size.width;
              v458.origin.CGFloat y = v258;
              v458.size.CGFloat width = v413;
              v458.size.CGFloat height = v259;
              double v425 = (v264 - CGRectGetMidX(v458)) / v424;
              v459.origin.CGFloat x = v255;
              v459.origin.CGFloat y = v254;
              v459.size.CGFloat width = v257;
              v459.size.CGFloat height = v256;
              double v265 = CGRectGetMidY(v459);
              v460.origin.CGFloat x = rect.size.width;
              v460.origin.CGFloat y = v258;
              v460.size.CGFloat width = v413;
              v460.size.CGFloat height = v259;
              CGFloat v266 = CGRectGetMidY(v460);
              double v267 = sqrt(v425 * v425 + (v265 - v266) / v416 * ((v265 - v266) / v416));
              sub_2542F5B1C();
              uint64_t v268 = *(void *)(v432 + 16);
              sub_2542F5BD8(v268);
              uint64_t v269 = sub_2543025B0(v268, v249, v252, v267);
              nullsub_1(v269);
              swift_bridgeObjectRelease();
              swift_release();
LABEL_238:
              swift_release_n();
            }
            else
            {
              if (v271)
              {
                CGFloat v272 = *(double *)v251;
                CGFloat v273 = *(double *)(v251 + 8);
                CGFloat v275 = *(double *)(v251 + 16);
                CGFloat v274 = *(double *)(v251 + 24);
                CGFloat v277 = *(double *)(v271 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
                CGFloat v276 = *(double *)(v271 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
                CGFloat v278 = *(double *)(v271 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
                CGFloat v417 = *(double *)(v271 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
                swift_retain_n();
                swift_bridgeObjectRetain();
                v461.origin.CGFloat x = v272;
                v461.origin.CGFloat y = v273;
                v461.size.CGFloat width = v275;
                v461.size.CGFloat height = v274;
                double v279 = CGRectGetWidth(v461);
                v462.origin.CGFloat x = v277;
                v462.origin.CGFloat y = v276;
                v462.size.CGFloat width = v278;
                v462.size.CGFloat height = v417;
                double v280 = CGRectGetWidth(v462);
                if (v280 >= v279) {
                  double v280 = v279;
                }
                rect.origin.CGFloat x = fmax(v280, 0.01);
                v463.origin.CGFloat x = v272;
                v463.origin.CGFloat y = v273;
                v463.size.CGFloat width = v275;
                v463.size.CGFloat height = v274;
                double v281 = CGRectGetHeight(v463);
                v464.origin.CGFloat x = v277;
                v464.origin.CGFloat y = v276;
                v464.size.CGFloat width = v278;
                v464.size.CGFloat height = v417;
                double v282 = CGRectGetHeight(v464);
                if (v282 >= v281) {
                  double v282 = v281;
                }
                double v426 = fmax(v282, 0.01);
                v465.origin.CGFloat x = v272;
                v465.origin.CGFloat y = v273;
                v465.size.CGFloat width = v275;
                v465.size.CGFloat height = v274;
                double v283 = CGRectGetMidX(v465);
                v466.origin.CGFloat x = v277;
                v466.origin.CGFloat y = v276;
                v466.size.CGFloat width = v278;
                v466.size.CGFloat height = v417;
                rect.origin.CGFloat x = (v283 - CGRectGetMidX(v466)) / rect.origin.x;
                v467.origin.CGFloat x = v272;
                v467.origin.CGFloat y = v273;
                v467.size.CGFloat width = v275;
                v467.size.CGFloat height = v274;
                double v284 = CGRectGetMidY(v467);
                v468.origin.CGFloat x = v277;
                v468.origin.CGFloat y = v276;
                v468.size.CGFloat width = v278;
                v468.size.CGFloat height = v417;
                CGFloat v285 = CGRectGetMidY(v468);
                double v286 = sqrt(rect.origin.x * rect.origin.x + (v284 - v285) / v426 * ((v284 - v285) / v426));
                sub_2542F5B1C();
                uint64_t v287 = *(void *)(v432 + 16);
                sub_2542F5BD8(v287);
                uint64_t v288 = sub_2543025B0(v287, v249, v252, v286);
                nullsub_1(v288);
                swift_bridgeObjectRelease();
                goto LABEL_238;
              }
              swift_bridgeObjectRetain();
              sub_2542F5B1C();
              uint64_t v289 = *(void *)(v432 + 16);
              sub_2542F5BD8(v289);
              uint64_t v290 = sub_2543025B0(v289, v249, v252, -1.0);
              nullsub_1(v290);
              swift_bridgeObjectRelease();
            }
            ++v252;
            v253 += 32;
            if (v248 == v252)
            {
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v250 = v249 + 1;
              goto LABEL_228;
            }
            continue;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v291 = 0;
        while (2)
        {
          sub_2542F5CAC(v291, 0, *(void *)&rect.origin.y);
          uint64_t v293 = MEMORY[0x25A275A00](v291, *(void *)&rect.origin.y);
          uint64_t v292 = v291 + 1;
          if (__OFADD__(v291, 1)) {
            goto LABEL_344;
          }
          if (v248)
          {
            if (v248 < 1) {
              goto LABEL_349;
            }
            v294 = (CGFloat *)(v293 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
            swift_bridgeObjectRetain();
            uint64_t v295 = 0;
            uint64_t v296 = v246 + 56;
            while (2)
            {
              uint64_t v314 = *(void *)(v296 - 16);
              uint64_t v313 = *(void *)(v296 - 8);
              if (v313)
              {
                CGFloat v298 = *v294;
                CGFloat v297 = v294[1];
                CGFloat v300 = v294[2];
                CGFloat v299 = v294[3];
                CGFloat v301 = *(double *)(v313 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                rect.size.CGFloat width = *(CGFloat *)(v313 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                CGFloat v302 = *(double *)(v313 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                CGFloat v414 = *(double *)(v313 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                swift_retain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                v469.origin.CGFloat x = v298;
                v469.origin.CGFloat y = v297;
                v469.size.CGFloat width = v300;
                v469.size.CGFloat height = v299;
                double v303 = CGRectGetWidth(v469);
                v470.origin.CGFloat x = rect.size.width;
                v470.origin.CGFloat y = v301;
                v470.size.CGFloat width = v414;
                v470.size.CGFloat height = v302;
                double v304 = CGRectGetWidth(v470);
                if (v304 >= v303) {
                  double v304 = v303;
                }
                double v427 = fmax(v304, 0.01);
                v471.origin.CGFloat x = v298;
                v471.origin.CGFloat y = v297;
                v471.size.CGFloat width = v300;
                v471.size.CGFloat height = v299;
                double v305 = CGRectGetHeight(v471);
                v472.origin.CGFloat x = rect.size.width;
                v472.origin.CGFloat y = v301;
                v472.size.CGFloat width = v414;
                v472.size.CGFloat height = v302;
                double v306 = CGRectGetHeight(v472);
                if (v306 >= v305) {
                  double v306 = v305;
                }
                double v418 = fmax(v306, 0.01);
                v473.origin.CGFloat x = v298;
                v473.origin.CGFloat y = v297;
                v473.size.CGFloat width = v300;
                v473.size.CGFloat height = v299;
                double v307 = CGRectGetMidX(v473);
                v474.origin.CGFloat x = rect.size.width;
                v474.origin.CGFloat y = v301;
                v474.size.CGFloat width = v414;
                v474.size.CGFloat height = v302;
                double v428 = (v307 - CGRectGetMidX(v474)) / v427;
                v475.origin.CGFloat x = v298;
                v475.origin.CGFloat y = v297;
                v475.size.CGFloat width = v300;
                v475.size.CGFloat height = v299;
                double v308 = CGRectGetMidY(v475);
                v476.origin.CGFloat x = rect.size.width;
                v476.origin.CGFloat y = v301;
                v476.size.CGFloat width = v414;
                v476.size.CGFloat height = v302;
                CGFloat v309 = CGRectGetMidY(v476);
                double v310 = sqrt(v428 * v428 + (v308 - v309) / v418 * ((v308 - v309) / v418));
                sub_2542F5B1C();
                uint64_t v311 = *(void *)(v432 + 16);
                sub_2542F5BD8(v311);
                uint64_t v312 = sub_2543025B0(v311, v291, v295, v310);
                nullsub_1(v312);
                swift_bridgeObjectRelease();
                swift_release();
LABEL_260:
                swift_release_n();
              }
              else
              {
                if (v314)
                {
                  CGFloat v315 = *v294;
                  CGFloat v316 = v294[1];
                  CGFloat v318 = v294[2];
                  CGFloat v317 = v294[3];
                  CGFloat v320 = *(double *)(v314 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
                  CGFloat v319 = *(double *)(v314 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
                  CGFloat v321 = *(double *)(v314 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
                  CGFloat v419 = *(double *)(v314 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  v477.origin.CGFloat x = v315;
                  v477.origin.CGFloat y = v316;
                  v477.size.CGFloat width = v318;
                  v477.size.CGFloat height = v317;
                  double v322 = CGRectGetWidth(v477);
                  v478.origin.CGFloat x = v320;
                  v478.origin.CGFloat y = v319;
                  v478.size.CGFloat width = v321;
                  v478.size.CGFloat height = v419;
                  double v323 = CGRectGetWidth(v478);
                  if (v323 >= v322) {
                    double v323 = v322;
                  }
                  rect.origin.CGFloat x = fmax(v323, 0.01);
                  v479.origin.CGFloat x = v315;
                  v479.origin.CGFloat y = v316;
                  v479.size.CGFloat width = v318;
                  v479.size.CGFloat height = v317;
                  double v324 = CGRectGetHeight(v479);
                  v480.origin.CGFloat x = v320;
                  v480.origin.CGFloat y = v319;
                  v480.size.CGFloat width = v321;
                  v480.size.CGFloat height = v419;
                  double v325 = CGRectGetHeight(v480);
                  if (v325 >= v324) {
                    double v325 = v324;
                  }
                  double v429 = fmax(v325, 0.01);
                  v481.origin.CGFloat x = v315;
                  v481.origin.CGFloat y = v316;
                  v481.size.CGFloat width = v318;
                  v481.size.CGFloat height = v317;
                  double v326 = CGRectGetMidX(v481);
                  v482.origin.CGFloat x = v320;
                  v482.origin.CGFloat y = v319;
                  v482.size.CGFloat width = v321;
                  v482.size.CGFloat height = v419;
                  rect.origin.CGFloat x = (v326 - CGRectGetMidX(v482)) / rect.origin.x;
                  v483.origin.CGFloat x = v315;
                  v483.origin.CGFloat y = v316;
                  v483.size.CGFloat width = v318;
                  v483.size.CGFloat height = v317;
                  double v327 = CGRectGetMidY(v483);
                  v484.origin.CGFloat x = v320;
                  v484.origin.CGFloat y = v319;
                  v484.size.CGFloat width = v321;
                  v484.size.CGFloat height = v419;
                  CGFloat v328 = CGRectGetMidY(v484);
                  double v329 = sqrt(rect.origin.x * rect.origin.x + (v327 - v328) / v429 * ((v327 - v328) / v429));
                  sub_2542F5B1C();
                  uint64_t v330 = *(void *)(v432 + 16);
                  sub_2542F5BD8(v330);
                  uint64_t v331 = sub_2543025B0(v330, v291, v295, v329);
                  nullsub_1(v331);
                  swift_bridgeObjectRelease();
                  goto LABEL_260;
                }
                swift_bridgeObjectRetain();
                sub_2542F5B1C();
                uint64_t v332 = *(void *)(v432 + 16);
                sub_2542F5BD8(v332);
                uint64_t v333 = sub_2543025B0(v332, v291, v295, -1.0);
                nullsub_1(v333);
                swift_bridgeObjectRelease();
              }
              ++v295;
              v296 += 32;
              if (v248 == v295)
              {
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v292 = v291 + 1;
                goto LABEL_250;
              }
              continue;
            }
          }
          swift_unknownObjectRelease();
LABEL_250:
          uint64_t v291 = v292;
          if (v292 != v397) {
            continue;
          }
          break;
        }
LABEL_271:
        CGFloat y = rect.origin.y;
        swift_bridgeObjectRelease();
        uint64_t v23 = v397;
LABEL_272:
        uint64_t v431 = v432;
        swift_bridgeObjectRetain_n();
        sub_2543407C0(&v431, sub_2543453D4, &qword_269DD9F38, (void (*)(void, void, void))sub_25434509C);
        if (v394) {
          goto LABEL_354;
        }
        swift_bridgeObjectRelease_n();
        uint64_t v334 = v431;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v335 = sub_25427DE78(0);
        if (sub_254354CD4(v335)) {
          uint64_t v336 = sub_2542FEE98(v335);
        }
        else {
          uint64_t v336 = MEMORY[0x263F8EE88];
        }
        swift_bridgeObjectRelease();
        uint64_t v431 = v336;
        uint64_t v337 = sub_254354CD4(v334);
        if (v337)
        {
          uint64_t v338 = v337;
          unint64_t v339 = 0;
          uint64_t v340 = v334 + 32;
          *(void *)&rect.size.CGFloat width = *(void *)&y + 32;
          do
          {
            sub_2542F5CA8(v339, 1, v334);
            unint64_t v344 = v339 + 1;
            if (__OFADD__(v339, 1)) {
              goto LABEL_336;
            }
            if (*(double *)(v340 + 24 * v339 + 16) >= -0.5)
            {
              v345 = (uint64_t *)(v340 + 24 * v339);
              uint64_t v346 = *v345;
              CGFloat y = *((double *)v345 + 1);
              uint64_t v347 = v431;
              if (*(void *)(v431 + 16))
              {
                uint64_t v348 = sub_25436D8E0();
                uint64_t v349 = -1 << *(unsigned char *)(v347 + 32);
                unint64_t v350 = v348 & ~v349;
                if ((*(void *)(v347 + 56 + ((v350 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v350))
                {
                  uint64_t v351 = *(void *)(v347 + 48);
                  if (*(void *)(v351 + 8 * v350) == v346) {
                    goto LABEL_280;
                  }
                  uint64_t v352 = ~v349;
                  while (1)
                  {
                    unint64_t v350 = (v350 + 1) & v352;
                    if (((*(void *)(v347 + 56 + ((v350 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v350) & 1) == 0) {
                      break;
                    }
                    if (*(void *)(v351 + 8 * v350) == v346) {
                      goto LABEL_280;
                    }
                  }
                }
              }
              BOOL v353 = sub_25434DEEC(*(uint64_t *)&rect.origin.y);
              sub_2542F5CAC(v346, v353, *(void *)&rect.origin.y);
              if (v353)
              {
                uint64_t v23 = *(void *)(*(void *)&rect.size.width + 8 * v346);
                swift_retain();
              }
              else
              {
                uint64_t v23 = MEMORY[0x25A275A00](v346, *(void *)&rect.origin.y);
              }
              unint64_t v354 = v433;
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                if ((*(void *)&y & 0x8000000000000000) != 0) {
                  goto LABEL_299;
                }
              }
              else
              {
                unint64_t v354 = sub_25436327C(v354);
                uint64_t v433 = v354;
                if ((*(void *)&y & 0x8000000000000000) != 0)
                {
LABEL_299:
                  __break(1u);
                  break;
                }
              }
              if (v354[2] <= *(void *)&y) {
                goto LABEL_347;
              }
              MEMORY[0x25A275490]();
              sub_2542F5BC0(*(void *)(v354[4 * *(void *)&y + 7] + 16));
              sub_25436CE60();
              uint64_t v355 = sub_25436CDE0();
              nullsub_1(v355);
              if (v353)
              {
                uint64_t v341 = *(void *)(*(void *)&rect.size.width + 8 * v346);
                swift_retain();
              }
              else
              {
                uint64_t v341 = MEMORY[0x25A275A00](v346, *(void *)&rect.origin.y);
              }
              uint64_t v23 = v397;
              uint64_t v342 = (uint64_t)v433;
              sub_2542F5CA8(*(unint64_t *)&y, 1, (uint64_t)v433);
              uint64_t v343 = v341 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
              *(void *)uint64_t v343 = *(void *)(v342 + 32 * *(void *)&y + 32);
              *(unsigned char *)(v343 + 8) = 0;
              swift_release();
              sub_2542683B0((uint64_t *)&rect.size.height, v346);
            }
LABEL_280:
            unint64_t v339 = v344;
            CGFloat y = rect.origin.y;
          }
          while (v344 != v338);
        }
        swift_release();
        if (!v23)
        {
LABEL_324:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v433;
        }
        uint64_t v356 = v431;
        uint64_t v357 = 0;
        if (sub_25434DEEC(*(uint64_t *)&y))
        {
          uint64_t v358 = *(void *)&y + 32;
          uint64_t v359 = v356 + 56;
          while (1)
          {
            sub_2542F5CAC(v357, 1, *(void *)&y);
            uint64_t v369 = v357 + 1;
            if (__OFADD__(v357, 1)) {
              goto LABEL_345;
            }
            uint64_t v370 = *(void *)(v358 + 8 * v357);
            if (*(void *)(v356 + 16))
            {
              uint64_t v371 = sub_25436D8E0();
              uint64_t v372 = -1 << *(unsigned char *)(v356 + 32);
              unint64_t v373 = v371 & ~v372;
              if ((*(void *)(v359 + ((v373 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v373))
              {
                uint64_t v374 = *(void *)(v356 + 48);
                if (*(void *)(v374 + 8 * v373) == v357) {
                  goto LABEL_304;
                }
                uint64_t v375 = ~v372;
                while (1)
                {
                  unint64_t v373 = (v373 + 1) & v375;
                  if (((*(void *)(v359 + ((v373 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v373) & 1) == 0) {
                    break;
                  }
                  if (*(void *)(v374 + 8 * v373) == v357) {
                    goto LABEL_304;
                  }
                }
              }
            }
            uint64_t v360 = sub_2542EB3BC((uint64_t)v433);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
            uint64_t inited = swift_initStackObject();
            uint64_t v362 = sub_2542F5B08(inited, 1);
            *uint64_t v363 = v370;
            sub_2542EB388();
            unint64_t v364 = v362;
            swift_retain_n();
            uint64_t v365 = sub_254278FE0(v364);
            swift_bridgeObjectRelease();
            sub_2542F5B34();
            uint64_t v366 = v433[2];
            sub_2542F5BF0(v366);
            uint64_t v367 = v366;
            CGFloat y = rect.origin.y;
            uint64_t v368 = sub_2542F5C6C(v367, v360, 0, 0, v365);
            nullsub_1(v368);
            swift_release();
LABEL_304:
            uint64_t v357 = v369;
            if (v369 == v397) {
              goto LABEL_324;
            }
          }
        }
        uint64_t v376 = v356 + 56;
        while (2)
        {
          sub_2542F5CAC(v357, 0, *(void *)&y);
          uint64_t v386 = MEMORY[0x25A275A00](v357, *(void *)&y);
          uint64_t v387 = v357 + 1;
          if (__OFADD__(v357, 1)) {
            goto LABEL_346;
          }
          uint64_t v388 = v386;
          if (*(void *)(v356 + 16)
            && (uint64_t v389 = sub_25436D8E0(),
                uint64_t v390 = -1 << *(unsigned char *)(v356 + 32),
                unint64_t v391 = v389 & ~v390,
                ((*(void *)(v376 + ((v391 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v391) & 1) != 0))
          {
            uint64_t v392 = *(void *)(v356 + 48);
            if (*(void *)(v392 + 8 * v391) != v357)
            {
              uint64_t v393 = ~v390;
              do
              {
                unint64_t v391 = (v391 + 1) & v393;
                if (((*(void *)(v376 + ((v391 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v391) & 1) == 0) {
                  goto LABEL_314;
                }
              }
              while (*(void *)(v392 + 8 * v391) != v357);
            }
            swift_unknownObjectRelease();
          }
          else
          {
LABEL_314:
            uint64_t v377 = sub_2542EB3BC((uint64_t)v433);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
            uint64_t v378 = swift_initStackObject();
            uint64_t v379 = sub_2542F5B08(v378, 1);
            *uint64_t v380 = v388;
            sub_2542EB388();
            unint64_t v381 = v379;
            swift_retain();
            uint64_t v382 = sub_254278FE0(v381);
            swift_bridgeObjectRelease();
            sub_2542F5B34();
            uint64_t v383 = v433[2];
            sub_2542F5BF0(v383);
            uint64_t v384 = v383;
            CGFloat y = rect.origin.y;
            uint64_t v385 = sub_2542F5C6C(v384, v377, 0, 0, v382);
            nullsub_1(v385);
            swift_release();
          }
          uint64_t v357 = v387;
          if (v387 == v397) {
            goto LABEL_324;
          }
          continue;
        }
      }
    }
  }
  BOOL v29 = sub_25434DEEC(v2);
  rect.origin.CGFloat x = 0.0;
  uint64_t v30 = (void *)MEMORY[0x263F8EE80];
  *(void *)&CGFloat y = 4;
  BOOL v410 = v29;
  while (1)
  {
    if (v29)
    {
      uint64_t v31 = *(void *)(v2 + 8 * *(void *)&y);
      swift_retain();
    }
    else
    {
      uint64_t v31 = MEMORY[0x25A275A00](*(void *)&y - 4, v2);
    }
    uint64_t v16 = *(void *)&y - 3;
    if (__OFADD__(*(void *)&y - 4, 1))
    {
      __break(1u);
      goto LABEL_326;
    }
    if (*(unsigned char *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId + 8) == 1)
    {
      swift_release();
      goto LABEL_52;
    }
    uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
    *(void *)(swift_allocObject() + 16) = v32;
    sub_2542509EC(*(uint64_t *)&rect.origin.x);
    swift_retain();
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v436 = (uint64_t)v30;
    unint64_t v35 = sub_254351604(v32);
    uint64_t v36 = v30[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (v30[3] >= v38)
    {
      if ((v33 & 1) == 0)
      {
        sub_25429CE4C();
        uint64_t v30 = (void *)v436;
      }
    }
    else
    {
      sub_254299F08(v38, v33);
      uint64_t v30 = (void *)v436;
      unint64_t v40 = sub_254351604(v32);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_353;
      }
      unint64_t v35 = v40;
    }
    CGFloat v4 = rect.size.width;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v39 & 1) == 0)
    {
      unint64_t v42 = sub_25427E038(0);
      uint64_t v43 = sub_254278FE0(v42);
      swift_bridgeObjectRelease();
      v30[(v35 >> 6) + 8] |= 1 << v35;
      *(void *)(v30[6] + 8 * v35) = v32;
      uint64_t v44 = (uint64_t *)(v30[7] + 32 * v35);
      *uint64_t v44 = v32;
      v44[1] = 0;
      v44[2] = 0;
      v44[3] = v43;
      uint64_t v45 = v30[2];
      BOOL v46 = __OFADD__(v45, 1);
      uint64_t v47 = v45 + 1;
      if (v46) {
        goto LABEL_332;
      }
      v30[2] = v47;
    }
    uint64_t v48 = v30[7];
    swift_bridgeObjectRelease();
    *(void *)(v48 + 32 * v35 + 8) = v31;
    swift_release();
    swift_release();
    *(void *)&rect.origin.CGFloat x = sub_254341248;
    uint64_t v2 = v412;
    uint64_t v28 = v415;
    BOOL v29 = v410;
LABEL_52:
    ++*(void *)&y;
    if (v16 == v28) {
      goto LABEL_69;
    }
  }
  __break(1u);
LABEL_330:
  __break(1u);
LABEL_331:
  __break(1u);
LABEL_332:
  __break(1u);
LABEL_333:
  __break(1u);
LABEL_334:
  __break(1u);
LABEL_335:
  __break(1u);
LABEL_336:
  __break(1u);
LABEL_337:
  __break(1u);
LABEL_338:
  __break(1u);
LABEL_339:
  __break(1u);
LABEL_340:
  __break(1u);
LABEL_341:
  __break(1u);
LABEL_342:
  __break(1u);
LABEL_343:
  __break(1u);
LABEL_344:
  __break(1u);
LABEL_345:
  __break(1u);
LABEL_346:
  __break(1u);
LABEL_347:
  __break(1u);
LABEL_348:
  __break(1u);
LABEL_349:
  __break(1u);
LABEL_350:
  __break(1u);
LABEL_351:
  __break(1u);
LABEL_352:
  __break(1u);
LABEL_353:
  sub_25436D850();
  __break(1u);
  swift_release();
  __break(1u);
LABEL_354:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_254340724()
{
  return type metadata accessor for DKSubjectGroupingTask();
}

uint64_t type metadata accessor for DKSubjectGroupingTask()
{
  uint64_t result = qword_269DD9F20;
  if (!qword_269DD9F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254340778()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2543407C0(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, void (*a4)(void, void, void))
{
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a2(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  uint64_t result = sub_25434084C(v11, a3, a4);
  *a1 = v8;
  return result;
}

uint64_t sub_25434084C(uint64_t *a1, uint64_t *a2, void (*a3)(void, void, void))
{
  uint64_t v6 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v6 >= 2)
    {
      uint64_t v87 = *a1;
      uint64_t v88 = *a1 + 16;
      uint64_t v89 = -1;
      for (uint64_t i = 1; i != v6; ++i)
      {
        double v91 = *(double *)(v87 + 24 * i + 16);
        uint64_t v92 = v89;
        uint64_t v93 = v88;
        do
        {
          if (v91 >= *(double *)v93) {
            break;
          }
          if (!v87) {
            goto LABEL_141;
          }
          long long v94 = *(_OWORD *)(v93 + 8);
          *(_OWORD *)(v93 + 8) = *(_OWORD *)(v93 - 16);
          *(void *)(v93 + 24) = *(void *)v93;
          *(_OWORD *)(v93 - 16) = v94;
          *(double *)uint64_t v93 = v91;
          v93 -= 24;
        }
        while (!__CFADD__(v92++, 1));
        v88 += 24;
        --v89;
      }
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_146;
  }
  uint64_t v107 = result;
  BOOL v104 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    CGFloat v110 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v6 != 1)
    {
      unint64_t v15 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v14 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v106 = v11;
      if (v15 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_132;
          }
          if (!v96) {
            goto LABEL_145;
          }
          uint64_t v98 = v14;
          uint64_t v99 = v14 + 32;
          uint64_t v100 = *(void *)&v14[16 * v97 + 32];
          uint64_t v101 = *(void *)&v99[16 * v15 - 8];
          sub_254340F60((char *)(v96 + 24 * v100), (char *)(v96 + 24 * *(void *)&v99[16 * v15 - 16]), v96 + 24 * v101, v110, a3);
          if (v3) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_254345370((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_134;
          }
          uint64_t v102 = &v98[16 * v97 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v98 + 2);
          if (v15 > v103) {
            goto LABEL_135;
          }
          memmove(&v98[16 * v15 + 16], &v98[16 * v15 + 32], 16 * (v103 - v15));
          uint64_t v14 = v98;
          *((void *)v98 + 2) = v103 - 1;
          unint64_t v15 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v10 = sub_25436CE40();
    *(void *)(v10 + 16) = v9;
    uint64_t v106 = v10;
    CGFloat v110 = (char *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v105 = *a1 + 64;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  uint64_t v108 = v6;
  uint64_t v109 = *a1;
  while (1)
  {
    uint64_t v16 = v12++;
    if (v12 < v6)
    {
      double v17 = *(double *)(v13 + 24 * v12 + 16);
      double v18 = *(double *)(v13 + 24 * v16 + 16);
      uint64_t v12 = v16 + 2;
      if (v16 + 2 < v6)
      {
        uint64_t v19 = (double *)(v105 + 24 * v16);
        double v20 = v17;
        while (1)
        {
          double v21 = v20;
          double v20 = *v19;
          if (v17 < v18 == *v19 >= v21) {
            break;
          }
          ++v12;
          v19 += 3;
          if (v6 == v12)
          {
            uint64_t v12 = v6;
            break;
          }
        }
      }
      if (v17 < v18)
      {
        if (v12 < v16) {
          goto LABEL_138;
        }
        if (v16 < v12)
        {
          uint64_t v22 = 24 * v12;
          uint64_t v23 = 24 * v16;
          uint64_t v24 = v12;
          uint64_t v25 = v16;
          do
          {
            if (v25 != --v24)
            {
              if (!v13) {
                goto LABEL_144;
              }
              uint64_t v26 = v13 + v23;
              uint64_t v27 = v13 + v22;
              uint64_t v28 = *(void *)(v13 + v23 + 16);
              long long v29 = *(_OWORD *)(v13 + v23);
              uint64_t v30 = *(void *)(v13 + v22 - 8);
              *(_OWORD *)uint64_t v26 = *(_OWORD *)(v13 + v22 - 24);
              *(void *)(v26 + 16) = v30;
              *(_OWORD *)(v27 - 24) = v29;
              *(void *)(v27 - 8) = v28;
            }
            ++v25;
            v22 -= 24;
            v23 += 24;
          }
          while (v25 < v24);
        }
      }
    }
    if (v12 >= v6) {
      goto LABEL_46;
    }
    if (__OFSUB__(v12, v16)) {
      goto LABEL_136;
    }
    if (v12 - v16 >= v107) {
      goto LABEL_46;
    }
    uint64_t v31 = v16 + v107;
    if (__OFADD__(v16, v107)) {
      goto LABEL_139;
    }
    if (v31 >= v6) {
      uint64_t v31 = v6;
    }
    if (v31 < v16) {
      break;
    }
    if (v12 != v31)
    {
      uint64_t v32 = (long long *)(v13 + 24 * v12);
      do
      {
        double v33 = *(double *)(v13 + 24 * v12 + 16);
        uint64_t v34 = v16;
        unint64_t v35 = (double *)v32;
        do
        {
          if (v33 >= *(v35 - 1)) {
            break;
          }
          if (!v13) {
            goto LABEL_142;
          }
          long long v36 = *(_OWORD *)v35;
          *(_OWORD *)unint64_t v35 = *(_OWORD *)(v35 - 3);
          v35[2] = *(v35 - 1);
          *(v35 - 1) = v33;
          *(_OWORD *)(v35 - 3) = v36;
          v35 -= 3;
          ++v34;
        }
        while (v12 != v34);
        ++v12;
        uint64_t v32 = (long long *)((char *)v32 + 24);
      }
      while (v12 != v31);
      uint64_t v12 = v31;
    }
LABEL_46:
    if (v12 < v16) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_254344E28(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v38 = *((void *)v14 + 2);
    unint64_t v37 = *((void *)v14 + 3);
    unint64_t v15 = v38 + 1;
    uint64_t v13 = v109;
    if (v38 >= v37 >> 1)
    {
      char v86 = sub_254344E28((char *)(v37 > 1), v38 + 1, 1, v14);
      uint64_t v13 = v109;
      uint64_t v14 = v86;
    }
    *((void *)v14 + 2) = v15;
    char v39 = v14 + 32;
    unint64_t v40 = &v14[16 * v38 + 32];
    *(void *)unint64_t v40 = v16;
    *((void *)v40 + 1) = v12;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v15 - 1;
        if (v15 >= 4)
        {
          BOOL v46 = &v39[16 * v15];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_120;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_121;
          }
          unint64_t v53 = v15 - 2;
          uint64_t v54 = &v39[16 * v15 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_123;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_126;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_130;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v70 = *((void *)v14 + 4);
            uint64_t v71 = *((void *)v14 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v14 + 4);
          uint64_t v42 = *((void *)v14 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_122;
        }
        unint64_t v53 = v15 - 2;
        BOOL v59 = &v39[16 * v15 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_125;
        }
        uint64_t v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_128;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_129;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_124;
        }
        BOOL v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_127;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v13) {
          goto LABEL_143;
        }
        char v81 = &v39[16 * v80];
        uint64_t v82 = *(void *)v81;
        uint64_t v83 = &v39[16 * v41];
        uint64_t v84 = *((void *)v83 + 1);
        sub_254340F60((char *)(v13 + 24 * *(void *)v81), (char *)(v13 + 24 * *(void *)v83), v13 + 24 * v84, v110, a3);
        if (v3) {
          goto LABEL_114;
        }
        if (v84 < v82) {
          goto LABEL_117;
        }
        if (v41 > *((void *)v14 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v81 = v82;
        *(void *)&v39[16 * v80 + 8] = v84;
        unint64_t v85 = *((void *)v14 + 2);
        if (v41 >= v85) {
          goto LABEL_119;
        }
        unint64_t v15 = v85 - 1;
        memmove(&v39[16 * v41], v83 + 16, 16 * (v85 - 1 - v41));
        *((void *)v14 + 2) = v85 - 1;
        uint64_t v13 = v109;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v6 = v108;
    if (v12 >= v108)
    {
      uint64_t v11 = v106;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254340F60(char *__src, char *a2, unint64_t a3, char *__dst, void (*a5)(void, void, void))
{
  double v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 24;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 24;
  long long v29 = __src;
  uint64_t v28 = __dst;
  if (v10 >= v12)
  {
    if (v11 >= -23)
    {
      if (__dst != a2 || &a2[24 * v12] <= __dst)
      {
        uint64_t v19 = a5;
        memmove(__dst, a2, 24 * v12);
        a5 = v19;
      }
      double v20 = &v5[24 * v12];
      uint64_t v27 = v20;
      long long v29 = v7;
      if (v8 < v7 && v11 >= 24)
      {
        unint64_t v21 = a3 - 24;
        do
        {
          uint64_t v22 = (char *)(v21 + 24);
          if (*((double *)v20 - 1) >= *((double *)v7 - 1))
          {
            uint64_t v27 = v20 - 24;
            if (v22 < v20 || v21 >= (unint64_t)v20 || v22 != v20)
            {
              long long v25 = *(_OWORD *)(v20 - 24);
              *(void *)(v21 + 16) = *((void *)v20 - 1);
              *(_OWORD *)unint64_t v21 = v25;
            }
            uint64_t v23 = v7;
            v20 -= 24;
            if (v7 <= v8) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v7 - 24;
            if (v22 != v7 || v21 >= (unint64_t)v7)
            {
              long long v24 = *(_OWORD *)v23;
              *(void *)(v21 + 16) = *((void *)v7 - 1);
              *(_OWORD *)unint64_t v21 = v24;
            }
            long long v29 = v7 - 24;
            if (v23 <= v8) {
              break;
            }
          }
          v21 -= 24;
          uint64_t v7 = v23;
        }
        while (v20 > v5);
      }
LABEL_40:
      a5(&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v9 >= -23)
  {
    if (__dst != __src || &__src[24 * v10] <= __dst)
    {
      uint64_t v13 = a5;
      memmove(__dst, __src, 24 * v10);
      a5 = v13;
    }
    uint64_t v14 = &v5[24 * v10];
    uint64_t v27 = v14;
    if ((unint64_t)v7 < a3 && v9 >= 24)
    {
      unint64_t v15 = v5;
      while (1)
      {
        if (*((double *)v7 + 2) >= *((double *)v15 + 2))
        {
          double v5 = v15 + 24;
          double v17 = v15;
          uint64_t v16 = v7;
          if (v8 == v15)
          {
            v15 += 24;
            if (v8 < v5) {
              goto LABEL_18;
            }
          }
          else
          {
            v15 += 24;
          }
        }
        else
        {
          uint64_t v16 = v7 + 24;
          double v17 = v7;
          if (v8 == v7 && v8 < v16) {
            goto LABEL_18;
          }
        }
        long long v18 = *(_OWORD *)v17;
        *((void *)v8 + 2) = *((void *)v17 + 2);
        *(_OWORD *)uint64_t v8 = v18;
LABEL_18:
        v8 += 24;
        if (v15 < v14)
        {
          uint64_t v7 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v28 = v5;
        long long v29 = v8;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_254341238()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25434124C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25434125C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25434126C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = sub_254278FE0(MEMORY[0x263F8EE78]);
  *a1 = v3;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = result;
  return result;
}

id DKPIDController.__allocating_init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  id v13 = objc_allocWithZone(v6);
  return DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(a1, a2, a3, a4, a5, a6);
}

id DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kp;
  uint64_t v8 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_ki;
  uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd;
  uint64_t v10 = MEMORY[0x263F8EE78];
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd] = MEMORY[0x263F8EE78];
  uint64_t v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv] = v10;
  uint64_t v12 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError] = v10;
  uint64_t v13 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError] = v10;
  uint64_t v14 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError] = v10;
  uint64_t v15 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit] = v10;
  uint64_t v16 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError] = v10;
  uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError] = v10;
  uint64_t v24 = v17;
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero;
  v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero] = 0;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralThres] = 0x3FB999999999999ALL;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampDerivativeThres] = 0x3FC999999999999ALL;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_derivativeErrorSmoothing] = 0x3FECCCCCCCCCCCCDLL;
  uint64_t v18 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize;
  *(void *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize] = 0;
  unint64_t v19 = *(void *)(a1 + 16);
  *(void *)&v6[v18] = v19;
  *(void *)&v6[v7] = a1;
  *(void *)&v6[v8] = a2;
  *(void *)&v6[v9] = a3;
  uint64_t v23 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v11] = a4;
  swift_bridgeObjectRelease();
  *(void *)&v6[v15] = a5;
  swift_bridgeObjectRelease();
  *(void *)&v6[v12] = sub_25425182C(v19, 0.0);
  swift_bridgeObjectRelease();
  *(void *)&v6[v13] = sub_25425182C(v19, 0.0);
  swift_bridgeObjectRelease();
  *(void *)&v6[v14] = sub_25425182C(v19, 0.0);
  swift_bridgeObjectRelease();
  *(void *)&v6[v16] = sub_25425182C(v19, 0.0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v6[v24] = sub_25425182C(v19, 0.0);
  swift_bridgeObjectRelease();
  v6[v25] = a6;
  *(void *)&v23[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DKRateControl()), sel_init);

  v27.receiver = v23;
  v27.super_class = (Class)type metadata accessor for DKPIDController();
  return objc_msgSendSuper2(&v27, sel_init);
}

uint64_t type metadata accessor for DKPIDController()
{
  return self;
}

void *sub_25434159C(uint64_t a1)
{
  uint64_t v3 = (void *)sub_25425182C(*(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize), 0.0);
  CGFloat v4 = sub_2543415F8(a1, v3);
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_2543415F8(uint64_t a1, void *a2)
{
  uint64_t v6 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl;
  uint64_t v7 = (char *)*(id *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl);
  double v8 = CACurrentMediaTime();
  double v9 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs];
  if (v9 == 0.0) {
    double v10 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed];
  }
  else {
    double v10 = v8 - v9;
  }
  *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = v8;
  double v11 = 1.0 / v10;
  if (*(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] > 1.0 / v10) {
    double v11 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps];
  }
  if (*(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] < v11) {
    double v11 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps];
  }
  *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = v11;

  double v12 = *(double *)(*(void *)(v2 + v6) + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed);
  uint64_t v13 = *(void **)(a1 + 16);
  char v81 = (void *)sub_25425182C((unint64_t)v13, 0.0);
  unint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize);
  if ((v14 & 0x8000000000000000) != 0) {
    goto LABEL_120;
  }
  if (v14)
  {
    if (!v13) {
      goto LABEL_121;
    }
    if (v14 - 1 >= (unint64_t)v13)
    {
LABEL_122:
      __break(1u);
    }
    else if (v14 - 1 < a2[2])
    {
      uint64_t v3 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError;
      uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v2 + v3) = v13;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_14:
        uint64_t v16 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError;
        *(void *)(v2 + v3) = v13;
        uint64_t v17 = *(void **)(v2 + v16);
        char v18 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v16) = v17;
        if ((v18 & 1) == 0) {
          uint64_t v17 = sub_2543631E4(v17);
        }
        uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
        *(void *)(v2 + v16) = v17;
        double v20 = *(void **)(v2 + v19);
        char v21 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v19) = v20;
        if ((v21 & 1) == 0) {
          double v20 = sub_2543631E4(v20);
        }
        uint64_t v22 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError;
        *(void *)(v2 + v19) = v20;
        uint64_t v23 = *(void **)(v2 + v22);
        char v24 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v22) = v23;
        if ((v24 & 1) == 0) {
          uint64_t v23 = sub_2543631E4(v23);
        }
        uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError;
        *(void *)(v2 + v22) = v23;
        uint64_t v26 = *(void **)(v2 + v25);
        char v27 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v25) = v26;
        if ((v27 & 1) == 0) {
          uint64_t v26 = sub_2543631E4(v26);
        }
        *(void *)(v2 + v25) = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v81 = sub_2543631E4(v81);
        }
        uint64_t v28 = *(void **)(v2 + v3);
        char v29 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v3) = v28;
        if ((v29 & 1) == 0) {
          uint64_t v28 = sub_2543631E4(v28);
        }
        *(void *)(v2 + v3) = v28;
        uint64_t v30 = *(void **)(v2 + v16);
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v16) = v30;
        if ((v31 & 1) == 0) {
          uint64_t v30 = sub_2543631E4(v30);
        }
        *(void *)(v2 + v16) = v30;
        uint64_t v32 = *(void **)(v2 + v19);
        char v33 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v19) = v32;
        if ((v33 & 1) == 0) {
          uint64_t v32 = sub_2543631E4(v32);
        }
        *(void *)(v2 + v19) = v32;
        uint64_t v34 = *(void **)(v2 + v22);
        char v35 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v22) = v34;
        if ((v35 & 1) == 0) {
          uint64_t v34 = sub_2543631E4(v34);
        }
        *(void *)(v2 + v22) = v34;
        uint64_t v13 = *(void **)(v2 + v25);
        char v36 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v25) = v13;
        unint64_t v72 = v14;
        if ((v36 & 1) == 0) {
          uint64_t v13 = sub_2543631E4(v13);
        }
        unint64_t v14 = 0;
        double v12 = v12 + v12;
        uint64_t v79 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampDerivativeThres;
        uint64_t v80 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_derivativeErrorSmoothing;
        uint64_t v77 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit;
        uint64_t v78 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralThres;
        uint64_t v37 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero;
        uint64_t v75 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_ki;
        uint64_t v76 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kp;
        a1 += 32;
        uint64_t v71 = a2 + 4;
        uint64_t v73 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv;
        uint64_t v74 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd;
        *(void *)(v2 + v25) = v13;
        uint64_t v70 = v37;
        while (1)
        {
          a2 = *(void **)(v2 + v3);
          if (v14 >= a2[2])
          {
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
            goto LABEL_122;
          }
          uint64_t v13 = (void *)(8 * v14);
          double v38 = *(double *)&a2[v14 + 4];
          double v39 = *(double *)(v2 + v80);
          double v40 = *(double *)(a1 + 8 * v14);
          char v41 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + v3) = a2;
          if ((v41 & 1) == 0) {
            a2 = sub_2543631E4(a2);
          }
          if (v14 >= a2[2]) {
            goto LABEL_96;
          }
          *(double *)((char *)v13 + (void)a2 + 32) = v38 * v39 + v40 * (1.0 - v39);
          *(void *)(v2 + v3) = a2;
          uint64_t v42 = *(void *)(a1 + 8 * v14);
          a2 = *(void **)(v2 + v16);
          char v43 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + v16) = a2;
          if ((v43 & 1) == 0) {
            a2 = sub_2543631E4(a2);
          }
          if (v14 >= a2[2]) {
            goto LABEL_97;
          }
          *(void *)((char *)v13 + (void)a2 + 32) = v42;
          *(void *)(v2 + v16) = a2;
          double v44 = *(double *)(a1 + 8 * v14);
          a2 = *(void **)(v2 + v19);
          char v45 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + v19) = a2;
          if ((v45 & 1) == 0) {
            a2 = sub_2543631E4(a2);
          }
          if (v14 >= a2[2]) {
            goto LABEL_98;
          }
          *(double *)&a2[v14 + 4] = v10 * v44 + *(double *)&a2[v14 + 4];
          *(void *)(v2 + v19) = a2;
          uint64_t v46 = *(void *)(v2 + v3);
          if (v14 >= *(void *)(v46 + 16)) {
            goto LABEL_99;
          }
          uint64_t v47 = *(void *)(v2 + v25);
          if (v14 >= *(void *)(v47 + 16)) {
            goto LABEL_100;
          }
          double v48 = *(double *)(v46 + 8 * v14 + 32);
          double v49 = *(double *)(v47 + 8 * v14 + 32);
          a2 = *(void **)(v2 + v22);
          char v50 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + v22) = a2;
          if ((v50 & 1) == 0) {
            a2 = sub_2543631E4(a2);
          }
          if (v14 >= a2[2]) {
            goto LABEL_101;
          }
          *(double *)&a2[v14 + 4] = (v48 - v49) / v10;
          *(void *)(v2 + v22) = a2;
          uint64_t v51 = *(void *)(v2 + v3);
          if (v14 >= *(void *)(v51 + 16)) {
            goto LABEL_102;
          }
          if (fabs(*(double *)(v51 + 8 * v14 + 32)) < *(double *)(v2 + v79) || v12 < v10)
          {
            char v52 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v2 + v22) = a2;
            if ((v52 & 1) == 0) {
              a2 = sub_2543631E4(a2);
            }
            if (v14 >= a2[2]) {
              goto LABEL_115;
            }
            a2[v14 + 4] = 0;
            *(void *)(v2 + v22) = a2;
          }
          if (fabs(*(double *)(a1 + 8 * v14)) < *(double *)(v2 + v78) || v12 < v10)
          {
            a2 = *(void **)(v2 + v19);
            char v53 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v2 + v19) = a2;
            if ((v53 & 1) == 0) {
              a2 = sub_2543631E4(a2);
            }
            if (v14 >= a2[2]) {
              goto LABEL_116;
            }
            a2[v14 + 4] = 0;
            *(void *)(v2 + v19) = a2;
          }
          uint64_t v54 = *(void *)(v2 + v3);
          if (v14 >= *(void *)(v54 + 16)) {
            goto LABEL_103;
          }
          uint64_t v55 = *(void *)(v54 + 8 * v14 + 32);
          a2 = *(void **)(v2 + v25);
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + v25) = a2;
          if ((v56 & 1) == 0) {
            a2 = sub_2543631E4(a2);
          }
          if (v14 >= a2[2]) {
            goto LABEL_104;
          }
          a2[v14 + 4] = v55;
          *(void *)(v2 + v25) = a2;
          a2 = *(void **)(v2 + v19);
          if (v14 >= a2[2]) {
            goto LABEL_105;
          }
          uint64_t v57 = *(void *)(v2 + v77);
          if (v14 >= *(void *)(v57 + 16)) {
            goto LABEL_106;
          }
          double v58 = *(double *)&a2[v14 + 4];
          double v59 = *(double *)(v57 + 8 * v14 + 32);
          if (v59 < v58) {
            break;
          }
          double v59 = -v59;
          if (v58 < v59)
          {
            char v61 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v2 + v19) = a2;
            if ((v61 & 1) == 0) {
              a2 = sub_2543631E4(a2);
            }
            if (v14 >= a2[2]) {
              goto LABEL_119;
            }
            goto LABEL_78;
          }
LABEL_79:
          if (*(double *)(a1 + 8 * v14) == 0.0 && *(unsigned char *)(v2 + v70) == 1)
          {
            char v62 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v2 + v19) = a2;
            if ((v62 & 1) == 0) {
              a2 = sub_2543631E4(a2);
            }
            if (v14 >= a2[2]) {
              goto LABEL_118;
            }
            a2[v14 + 4] = 0;
            *(void *)(v2 + v19) = a2;
          }
          uint64_t v63 = *(void *)(v2 + v16);
          if (v14 >= *(void *)(v63 + 16)) {
            goto LABEL_107;
          }
          uint64_t v64 = *(void *)(v2 + v76);
          if (v14 >= *(void *)(v64 + 16)) {
            goto LABEL_108;
          }
          if (v14 >= a2[2]) {
            goto LABEL_109;
          }
          uint64_t v65 = *(void *)(v2 + v75);
          if (v14 >= *(void *)(v65 + 16)) {
            goto LABEL_110;
          }
          uint64_t v66 = *(void *)(v2 + v22);
          if (v14 >= *(void *)(v66 + 16)) {
            goto LABEL_111;
          }
          uint64_t v67 = *(void *)(v2 + v74);
          if (v14 >= *(void *)(v67 + 16)) {
            goto LABEL_112;
          }
          uint64_t v68 = *(void *)(v2 + v73);
          if (v14 >= *(void *)(v68 + 16)) {
            goto LABEL_113;
          }
          if (v14 >= v81[2]) {
            goto LABEL_114;
          }
          ++v14;
          *(double *)((char *)v13 + (void)(v81 + 4)) = *(double *)((char *)v13 + v63 + 32)
                                                       * *(double *)((char *)v13 + v64 + 32)
                                                       + *(double *)((char *)v13 + (void)a2 + 32)
                                                       * *(double *)((char *)v13 + v65 + 32)
                                                       + *(double *)((char *)v13 + v66 + 32)
                                                       * *(double *)((char *)v13 + v67 + 32)
                                                       + *(double *)((char *)v13 + (void)v71)
                                                       * *(double *)((char *)v13 + v68 + 32);
          if (v72 == v14) {
            return v81;
          }
        }
        char v60 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v2 + v19) = a2;
        if ((v60 & 1) == 0) {
          a2 = sub_2543631E4(a2);
        }
        if (v14 >= a2[2]) {
          goto LABEL_117;
        }
LABEL_78:
        *(double *)&a2[v14 + 4] = v59;
        *(void *)(v2 + v19) = a2;
        goto LABEL_79;
      }
LABEL_124:
      uint64_t v13 = sub_2543631E4(v13);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_124;
  }
  return v81;
}

void sub_254341EA8()
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize);
  if (v3 < 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t v0 = sub_2543631E4(v0);
    goto LABEL_4;
  }
  if (!v3) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
  uint64_t v0 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + v2) = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_18;
  }
LABEL_4:
  unint64_t v5 = v0[2];
  unint64_t v6 = v3 - 1;
  if (v5 < v3 - 1) {
    unint64_t v6 = v0[2];
  }
  if (v6 >= 4)
  {
    unint64_t v8 = v6 + 1;
    uint64_t v9 = v8 & 3;
    if ((v8 & 3) == 0) {
      uint64_t v9 = 4;
    }
    unint64_t v7 = v8 - v9;
    double v10 = v0 + 6;
    unint64_t v11 = v7;
    do
    {
      *(v10 - 1) = 0uLL;
      *double v10 = 0uLL;
      v10 += 2;
      v11 -= 4;
    }
    while (v11);
  }
  else
  {
    unint64_t v7 = 0;
  }
  do
  {
    if (v7 >= v5)
    {
      __break(1u);
      goto LABEL_17;
    }
    v0[v7++ + 4] = 0;
  }
  while (v3 != v7);
  *(void *)(v1 + v2) = v0;
}

id DKPIDController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DKPIDController.init()()
{
}

id DKPIDController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKPIDController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DKPIDController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPIDController);
}

uint64_t dispatch thunk of DKPIDController.__allocating_init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)()
{
  return (*(uint64_t (**)(void))(v0 + 592))();
}

uint64_t dispatch thunk of DKPIDController.getTotalError(error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x258))();
}

uint64_t dispatch thunk of DKPIDController.getTotalError(error:velocity:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x260))();
}

uint64_t dispatch thunk of DKPIDController.zeroIntegralError()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x268))();
}

uint64_t sub_25434220C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v74 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v77 = (char *)&v71 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)&v71 - v9;
  MEMORY[0x270FA5388](v10);
  unint64_t v72 = (char *)&v71 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v12 - 8);
  char v81 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v80 = (char *)&v71 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v76 = (uint64_t)&v71 - v17;
  MEMORY[0x270FA5388](v18);
  double v20 = (char *)&v71 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v75 = (char *)&v71 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v78 = (char *)&v71 - v24;
  MEMORY[0x270FA5388](v25);
  char v27 = (char *)&v71 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v71 - v29;
  double v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v71 - v33;
  uint64_t v35 = *(void *)(a1 + 8);
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v83 = v4;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v4 + 56);
  v37((char *)&v71 - v33, 1, 1, v3, v32);
  uint64_t v84 = v30;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v30, 1, 1, v3);
  if (v35 && (*(unsigned char *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8) & 1) == 0)
  {
    uint64_t v38 = *(void *)(*(void *)(v79 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime);
    if (*(void *)(v38 + 16)
      && (unint64_t v39 = sub_254351604(*(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId)),
          (v40 & 1) != 0))
    {
      uint64_t v41 = *(void *)(v38 + 56);
      uint64_t v42 = v83;
      (*(void (**)(char *, unint64_t, uint64_t))(v83 + 16))(v27, v41 + *(void *)(v83 + 72) * v39, v3);
      ((void (*)(char *, void, uint64_t, uint64_t))v37)(v27, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v27, 1, v3) != 1)
      {
        sub_25425042C((uint64_t)v34, &qword_269DD7A40);
        char v43 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
        double v44 = v72;
        v43(v72, v27, v3);
        v43(v34, v44, v3);
        ((void (*)(char *, void, uint64_t, uint64_t))v37)(v34, 0, 1, v3);
        goto LABEL_9;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v27, 1, 1, v3);
    }
    swift_retain();
    sub_25425042C((uint64_t)v27, &qword_269DD7A40);
    uint64_t v45 = (uint64_t)v78;
    sub_25436C6E0();
    swift_release();
    sub_25425042C((uint64_t)v34, &qword_269DD7A40);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v37)(v45, 0, 1, v3);
    sub_25434707C(v45, (uint64_t)v34);
  }
LABEL_9:
  if (v36 && (*(unsigned char *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8) & 1) == 0)
  {
    uint64_t v46 = *(void *)(*(void *)(v79 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime);
    if (*(void *)(v46 + 16)
      && (unint64_t v47 = sub_254351604(*(void *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId)),
          (v48 & 1) != 0))
    {
      uint64_t v49 = v83;
      uint64_t v50 = (uint64_t)v75;
      (*(void (**)(char *, unint64_t, uint64_t))(v83 + 16))(v75, *(void *)(v46 + 56) + *(void *)(v83 + 72) * v47, v3);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v37)(v50, 0, 1, v3);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v3) != 1)
      {
        uint64_t v51 = (uint64_t)v84;
        sub_25425042C((uint64_t)v84, &qword_269DD7A40);
        char v52 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
        char v53 = v73;
        v52(v73, v50, v3);
        v52((char *)v51, (uint64_t)v53, v3);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v37)(v51, 0, 1, v3);
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v50 = (uint64_t)v75;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v75, 1, 1, v3);
    }
    swift_retain();
    sub_25425042C(v50, &qword_269DD7A40);
    uint64_t v54 = (uint64_t)v78;
    sub_25436C6E0();
    swift_release();
    uint64_t v55 = (uint64_t)v84;
    sub_25425042C((uint64_t)v84, &qword_269DD7A40);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v37)(v54, 0, 1, v3);
    sub_25434707C(v54, v55);
  }
LABEL_17:
  sub_2542503C8((uint64_t)v34, (uint64_t)v20, &qword_269DD7A40);
  uint64_t v56 = v83;
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
  if (v57(v20, 1, v3) == 1)
  {
    uint64_t v58 = (uint64_t)v20;
    uint64_t v60 = (uint64_t)v80;
    uint64_t v59 = (uint64_t)v81;
    uint64_t v61 = (uint64_t)v84;
    goto LABEL_21;
  }
  char v62 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v63 = v77;
  v62(v77, v20, v3);
  uint64_t v61 = (uint64_t)v84;
  uint64_t v64 = v76;
  sub_2542503C8((uint64_t)v84, v76, &qword_269DD7A40);
  if (v57((char *)v64, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v63, v3);
    uint64_t v60 = (uint64_t)v80;
    uint64_t v59 = (uint64_t)v81;
    uint64_t v58 = v64;
LABEL_21:
    sub_25425042C(v58, &qword_269DD7A40);
    sub_2542503C8((uint64_t)v34, v60, &qword_269DD7A40);
    if (v57((char *)v60, 1, v3) == 1)
    {
      sub_25425042C(v60, &qword_269DD7A40);
      sub_2542503C8(v61, v59, &qword_269DD7A40);
      if (v57((char *)v59, 1, v3) == 1)
      {
        sub_25425042C(v59, &qword_269DD7A40);
        sub_25436C6F0();
        sub_25425042C(v61, &qword_269DD7A40);
        return sub_25425042C((uint64_t)v34, &qword_269DD7A40);
      }
      else
      {
        sub_25425042C(v61, &qword_269DD7A40);
        sub_25425042C((uint64_t)v34, &qword_269DD7A40);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v82, v59, v3);
      }
    }
    else
    {
      sub_25425042C(v61, &qword_269DD7A40);
      sub_25425042C((uint64_t)v34, &qword_269DD7A40);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v82, v60, v3);
    }
  }
  uint64_t v66 = v74;
  v62(v74, (char *)v64, v3);
  char v67 = sub_25436C730();
  sub_25425042C(v61, &qword_269DD7A40);
  sub_25425042C((uint64_t)v34, &qword_269DD7A40);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v56 + 8);
  if (v67)
  {
    v68(v66, v3);
    uint64_t v69 = v82;
    uint64_t v70 = v63;
  }
  else
  {
    v68(v63, v3);
    uint64_t v69 = v82;
    uint64_t v70 = v66;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v62)(v69, v70, v3);
}

uint64_t sub_254342AC0()
{
  v1[39] = v0;
  uint64_t v2 = sub_25436C9F0();
  v1[40] = v2;
  v1[41] = *(void *)(v2 - 8);
  v1[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  uint64_t v3 = sub_25436C800();
  v1[47] = v3;
  v1[48] = *(void *)(v3 - 8);
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  uint64_t v4 = sub_25436C7B0();
  v1[52] = v4;
  v1[53] = *(void *)(v4 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7808);
  v1[58] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DKCamera();
  v1[59] = v5;
  v1[60] = *(void *)(v5 - 8);
  v1[61] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254342D8C, 0, 0);
}

void sub_254342D8C()
{
  unint64_t v243 = v0;
  v242[4] = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[39];
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = v0[59];
  uint64_t v5 = v0[60];
  uint64_t v6 = v0[58];
  sub_2542503C8(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v6, &qword_269DD7808);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    sub_25425042C(v0[58], &qword_269DD7808);
LABEL_4:
    unsigned int v230 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (void (*)(void))v0[1];
    v7(v230);
    return;
  }
  sub_2542502F0(v0[58], v0[61]);
  if (!*(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups)) {
    goto LABEL_18;
  }
  uint64_t v8 = v0[39];
  v242[0] = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
  swift_bridgeObjectRetain_n();
  swift_retain();
  id v9 = v3;
  sub_254346F40(v242, v8);
  swift_release();
  swift_bridgeObjectRelease();
  if (!*(void *)(v242[0] + 16))
  {
    swift_release();

LABEL_18:
    sub_254250354(v0[61]);
LABEL_19:
    unsigned int v230 = 1;
    goto LABEL_5;
  }
  id v232 = v9;
  uint64_t v11 = v0[56];
  uint64_t v10 = v0[57];
  uint64_t v12 = v1;
  uint64_t v13 = v0[52];
  uint64_t v14 = v0[53];
  uint64_t v235 = (void *)v0[39];
  uint64_t v238 = v0;
  uint64_t v16 = *(void *)(v242[0] + 32);
  uint64_t v15 = *(void *)(v242[0] + 40);
  uint64_t v18 = *(void *)(v242[0] + 48);
  uint64_t v17 = *(void *)(v242[0] + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v228 = v12;
  uint64_t v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v226(v10, *(void *)(v12 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v13);
  v242[0] = v16;
  v242[1] = v15;
  uint64_t v19 = v17;
  uint64_t v0 = v238;
  uint64_t v237 = v18;
  v242[2] = v18;
  v242[3] = v19;
  sub_25434220C((uint64_t)v242, v11);
  sub_25436C700();
  double v21 = v20;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v22(v11, v13);
  v22(v10, v13);
  if (*(double *)(v235[4] + 104) >= v21)
  {
    sub_254250354(v238[61]);

    swift_release();
    swift_release();
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v231 = v15;
  uint64_t v225 = v238 + 38;
  uint64_t v23 = DKCamera.getCGImagePropertyOrientation()();
  id v24 = v232;
  unint64_t v25 = MEMORY[0x263F8EE78];
  sub_2542646C0(MEMORY[0x263F8EE78]);
  id v26 = objc_allocWithZone(MEMORY[0x263F1EF40]);
  type metadata accessor for VNImageOption(0);
  sub_254347034(&qword_269DD7878, type metadata accessor for VNImageOption);
  char v27 = (void *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  id v229 = objc_msgSend(v26, sel_initWithCVPixelBuffer_orientation_options_, v24, v23, v27);

  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1EE50]), sel_init);
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1EE60]), sel_init);
  objc_msgSend(v28, sel_setDetectionLevel_, 2);
  objc_msgSend(v29, sel_setDetectionLevel_, 2);
  unint64_t v239 = v25;
  unint64_t v240 = v25;
  v238[32] = 0;
  id v236 = v28;
  unsigned int v30 = objc_msgSend(v28, sel_setRevision_error_, 3737841669, v238 + 32);
  uint64_t v31 = (void *)v238[32];
  if (!v30
    || (v238[35] = 0,
        id v32 = v31,
        unsigned int v33 = objc_msgSend(v29, sel_setRevision_error_, 3737841672, v238 + 35),
        uint64_t v31 = (void *)v238[35],
        !v33))
  {
    id v52 = v31;
    swift_bridgeObjectRelease_n();
    char v53 = (void *)sub_25436C570();

    swift_willThrow();
LABEL_23:
    swift_bridgeObjectRelease();
    (*(void (**)(void, uint64_t, void))(v0[41] + 16))(v0[42], v0[39] + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger, v0[40]);
    id v54 = v53;
    id v55 = v53;
    uint64_t v56 = sub_25436C9D0();
    os_log_type_t v57 = sub_25436D010();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v59 = v0[61];
    uint64_t v60 = v0[41];
    uint64_t v61 = v0[42];
    uint64_t v62 = v0[40];
    if (v58)
    {
      uint64_t v227 = v0[41];
      uint64_t v224 = v24;
      uint64_t v63 = swift_slowAlloc();
      uint64_t v219 = v62;
      uint64_t v64 = (void *)swift_slowAlloc();
      uint64_t v217 = v61;
      uint64_t v65 = swift_slowAlloc();
      v242[0] = v65;
      *(_DWORD *)uint64_t v63 = 136315394;
      v0[37] = sub_25431B720(0x2865747563657865, 0xE900000000000029, v242);
      sub_25436D180();
      *(_WORD *)(v63 + 12) = 2112;
      id v66 = v53;
      id v234 = v29;
      uint64_t v67 = _swift_stdlib_bridgeErrorToNSError();
      v0[36] = v67;
      sub_25436D180();
      *uint64_t v64 = v67;

      _os_log_impl(&dword_254249000, v56, v57, "%s Unable to create face/torso print error=%@", (uint8_t *)v63, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F60);
      swift_arrayDestroy();
      MEMORY[0x25A276B10](v64, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25A276B10](v65, -1, -1);
      uint64_t v0 = v238;
      MEMORY[0x25A276B10](v63, -1, -1);

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v217, v219);
    }
    else
    {

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v62);
    }
    sub_254250354(v59);
    unsigned int v230 = 0;
    goto LABEL_5;
  }
  id v233 = v29;
  uint64_t v34 = (SEL *)&unk_2653A7000;
  uint64_t v223 = v24;
  if (v231)
  {
    double v35 = *(double *)(v231 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    double v36 = *(double *)(v231 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
    double v37 = *(double *)(v231 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    double v38 = *(double *)(v231 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
    id v39 = v31;
    swift_retain();
    v245.origin.CGFloat x = v35;
    v245.origin.CGFloat y = v36;
    v245.size.CGFloat width = v37;
    v245.size.CGFloat height = v38;
    double v40 = 1.0 - v36 - CGRectGetHeight(v245);
    id v41 = objc_msgSend(self, sel_observationWithBoundingBox_, v35, v40, v37, v38);
    MEMORY[0x25A275490]();
    if (*(void *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    uint64_t v42 = v238[51];
    uint64_t v43 = v238[48];
    uint64_t v218 = v238[47];
    sub_25436CE60();
    sub_25436CDE0();
    id v44 = objc_msgSend(v41, sel_uuid);
    sub_25436C7E0();

    v238[10] = type metadata accessor for DKFaceObservation(0);
    v238[11] = sub_254347034(&qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
    v238[7] = v231;
    sub_25425DF80((long long *)(v238 + 7), (uint64_t)(v238 + 2));
    swift_retain();
    uint64_t v45 = MEMORY[0x263F8EE80];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v242[0] = v45;
    uint64_t v47 = v238[5];
    uint64_t v48 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v238 + 2), v47);
    uint64_t v49 = *(void *)(v47 - 8);
    uint64_t v50 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v50, v48, v47);
    sub_25434544C(*v50, v42, isUniquelyReferenced_nonNull_native, v242);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v238 + 2));
    swift_task_dealloc();
    uint64_t v51 = v242[0];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v218);

    swift_release();
    id v24 = v223;
    uint64_t v34 = (SEL *)&unk_2653A7000;
  }
  else
  {
    id v68 = v31;
    uint64_t v51 = MEMORY[0x263F8EE80];
  }
  if (v237)
  {
    double v69 = *(double *)(v237 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    double v70 = *(double *)(v237 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
    double v71 = *(double *)(v237 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    double v72 = *(double *)(v237 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
    swift_retain();
    v246.origin.CGFloat x = v69;
    v246.origin.CGFloat y = v70;
    v246.size.CGFloat width = v71;
    v246.size.CGFloat height = v72;
    double v73 = 1.0 - v70 - CGRectGetHeight(v246);
    id v74 = objc_msgSend(self, v34[507], v69, v73, v71, v72);
    MEMORY[0x25A275490]();
    if (*(void *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    uint64_t v75 = v238[51];
    uint64_t v76 = v238[48];
    uint64_t v220 = v238[47];
    sub_25436CE60();
    sub_25436CDE0();
    id v77 = objc_msgSend(v74, sel_uuid);
    sub_25436C7E0();

    v238[20] = type metadata accessor for DKBodyObservation(0);
    v238[21] = sub_254347034(&qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
    v238[17] = v237;
    sub_25425DF80((long long *)(v238 + 17), (uint64_t)(v238 + 12));
    swift_retain();
    LOBYTE(v77) = swift_isUniquelyReferenced_nonNull_native();
    v242[0] = v51;
    uint64_t v78 = v238[15];
    uint64_t v79 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v238 + 12), v78);
    uint64_t v80 = v74;
    uint64_t v81 = *(void *)(v78 - 8);
    uint64_t v82 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v81 + 16))(v82, v79, v78);
    sub_254345738(*v82, v75, (char)v77, v242);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v238 + 12));
    swift_task_dealloc();
    uint64_t v51 = v242[0];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v220);

    swift_release();
    unint64_t v83 = v240;
    id v24 = v223;
  }
  else
  {
    unint64_t v83 = MEMORY[0x263F8EE78];
  }
  sub_2543130B4(0, &qword_269DD9FE8);
  swift_bridgeObjectRetain();
  uint64_t v84 = (void *)sub_25436CDB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v236, sel_setInputFaceObservations_, v84);

  if (v83 >> 62)
  {
    sub_2543130B4(0, &qword_269DD9FF0);
    swift_bridgeObjectRetain();
    sub_25436D500();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_25436D7C0();
    sub_2543130B4(0, &qword_269DD9FF0);
  }
  uint64_t v0 = v238;
  swift_bridgeObjectRelease();
  sub_2543130B4(0, &qword_269DD9FF0);
  unint64_t v85 = (void *)sub_25436CDB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v233, sel_setInputDetectedObjectObservations_, v85);

  unint64_t v241 = MEMORY[0x263F8EE78];
  if (v239 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v86 = *(void *)((v239 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v29 = v233;
  uint64_t v210 = v51;
  if (v86 >= 1)
  {
    id v87 = v236;
    MEMORY[0x25A275490]();
    if (*(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_25436D530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v88 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v88 >= 1)
  {
    id v89 = v233;
    MEMORY[0x25A275490]();
    if (*(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_25436CE10();
    }
    sub_25436CE60();
    sub_25436CDE0();
  }
  uint64_t v90 = (void **)(v238 + 33);
  if (v241 >> 62)
  {
    sub_2543130B4(0, &qword_269DD9FF8);
    swift_bridgeObjectRetain();
    sub_25436D500();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_25436D7C0();
    sub_2543130B4(0, &qword_269DD9FF8);
  }
  swift_bridgeObjectRelease();
  sub_2543130B4(0, &qword_269DD9FF8);
  double v91 = (void *)sub_25436CDB0();
  swift_bridgeObjectRelease();
  *uint64_t v90 = 0;
  unsigned int v92 = objc_msgSend(v229, sel_performRequests_error_, v91, v238 + 33);

  uint64_t v93 = *v90;
  if (!v92)
  {
    id v143 = v93;
    char v53 = (void *)sub_25436C570();

    swift_willThrow();
    goto LABEL_23;
  }
  id v94 = v93;
  id v95 = objc_msgSend(v236, sel_results);
  if (!v95)
  {
LABEL_97:
    id v144 = objc_msgSend(v29, sel_results);
    if (v144)
    {
      double v145 = v144;
      unint64_t v146 = sub_25436CDD0();

      if (v146 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v147 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (v147) {
          goto LABEL_100;
        }
      }
      else
      {
        uint64_t v147 = *(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v147)
        {
LABEL_100:
          if (v147 < 1) {
            goto LABEL_148;
          }
          uint64_t v148 = 0;
          unint64_t v222 = v238 + 27;
          uint64_t v214 = v147;
          uint64_t v216 = (void (**)(void, void))(v238[48] + 8);
          uint64_t v149 = v238[53];
          unint64_t v212 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v149 + 56);
          uint64_t v201 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48);
          uint64_t v204 = v238[39];
          uint64_t v199 = (void (**)(unint64_t, uint64_t, uint64_t))(v149 + 32);
          uint64_t v195 = v149;
          do
          {
            if ((v146 & 0xC000000000000001) != 0) {
              id v150 = (id)MEMORY[0x25A275A00](v148, v146);
            }
            else {
              id v150 = *(id *)(v146 + 8 * v148 + 32);
            }
            uint64_t v151 = v150;
            self;
            uint64_t v152 = (void *)swift_dynamicCastObjCClass();
            if (v152 && (id v153 = objc_msgSend(v152, sel_torsoprint)) != 0)
            {
              uint64_t v154 = v153;
              id v155 = objc_msgSend(v151, sel_uuid);
              sub_25436C7E0();

              if (*(void *)(v51 + 16))
              {
                unint64_t v156 = sub_254351890(v238[49]);
                if (v157)
                {
                  sub_25427215C(*(void *)(v51 + 56) + 40 * v156, (uint64_t)v222);
                }
                else
                {
                  v238[31] = 0;
                  *unint64_t v222 = 0u;
                  *(_OWORD *)(v238 + 29) = 0u;
                }
              }
              else
              {
                v238[31] = 0;
                *unint64_t v222 = 0u;
                *(_OWORD *)(v238 + 29) = 0u;
              }
              (*v216)(v238[49], v238[47]);
              if (v238[30])
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
                type metadata accessor for DKBodyObservation(0);
                if (swift_dynamicCast())
                {
                  uint64_t v158 = *v225;
                  uint64_t v159 = *(void **)(*v225 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
                  *(void *)(v158 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = v154;
                  id v160 = v154;

                  objc_msgSend(v160, sel_confidence);
                  uint64_t v162 = v158 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
                  *(double *)uint64_t v162 = v161;
                  *(unsigned char *)(v162 + 8) = 0;
                  if (*(unsigned char *)(v158 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8) == 1)
                  {
                  }
                  else
                  {
                    uint64_t v206 = v160;
                    uint64_t v209 = *(void *)(v158 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
                    uint64_t v163 = v238[52];
                    uint64_t v164 = v238[44];
                    uint64_t v165 = *(void *)(v204 + 40);
                    v226(v164, *(void *)(v228 + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v163);
                    unint64_t v197 = *v212;
                    (*v212)(v164, 0, 1, v163);
                    uint64_t v166 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime;
                    if ((*v201)(v164, 1, v163) == 1)
                    {
                      uint64_t v167 = v238[44];
                      swift_retain();
                      sub_25425042C(v167, &qword_269DD7A40);
                      unint64_t v168 = sub_254351604(v209);
                      if (v169)
                      {
                        unint64_t v170 = v168;
                        char v171 = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v172 = *(void *)(v165 + v166);
                        v242[0] = v172;
                        *(void *)(v165 + v166) = 0x8000000000000000;
                        if ((v171 & 1) == 0)
                        {
                          sub_25429C910();
                          uint64_t v172 = v242[0];
                        }
                        unint64_t v173 = v238;
                        (*(void (**)(void, unint64_t, void))(v195 + 32))(v238[43], *(void *)(v172 + 56) + *(void *)(v195 + 72) * v170, v238[52]);
                        sub_2542F9C7C(v170, v172);
                        *(void *)(v165 + v166) = v172;
                        swift_bridgeObjectRelease();
                        uint64_t v174 = 0;
                      }
                      else
                      {
                        uint64_t v174 = 1;
                        unint64_t v173 = v238;
                      }
                      uint64_t v185 = v173[43];
                      v197(v185, v174, 1, v173[52]);
                      sub_25425042C(v185, &qword_269DD7A40);

                      swift_release();
                      swift_release();
                      id v29 = v233;
                      uint64_t v51 = v210;
                      uint64_t v147 = v214;
                      goto LABEL_103;
                    }
                    BOOL v192 = *v199;
                    (*v199)(v238[54], v238[44], v238[52]);
                    swift_retain();
                    int v175 = swift_isUniquelyReferenced_nonNull_native();
                    v242[0] = *(void *)(v165 + v166);
                    uint64_t v176 = (void *)v242[0];
                    uint64_t v193 = v165;
                    *(void *)(v165 + v166) = 0x8000000000000000;
                    unint64_t v178 = sub_254351604(v209);
                    uint64_t v179 = v176[2];
                    BOOL v180 = (v177 & 1) == 0;
                    uint64_t v181 = v179 + v180;
                    if (__OFADD__(v179, v180)) {
                      goto LABEL_149;
                    }
                    char v182 = v177;
                    if (v176[3] >= v181)
                    {
                      if ((v175 & 1) == 0)
                      {
                        sub_25429C910();
                        uint64_t v176 = (void *)v242[0];
                      }
                    }
                    else
                    {
                      sub_25429970C(v181, v175);
                      uint64_t v176 = (void *)v242[0];
                      unint64_t v183 = sub_254351604(v209);
                      if ((v182 & 1) != (v184 & 1)) {
                        goto LABEL_140;
                      }
                      unint64_t v178 = v183;
                    }
                    uint64_t v186 = v238[54];
                    uint64_t v187 = v238[52];
                    if (v182)
                    {
                      (*(void (**)(unint64_t, uint64_t, uint64_t))(v195 + 40))(v176[7] + *(void *)(v195 + 72) * v178, v186, v187);
                    }
                    else
                    {
                      v176[(v178 >> 6) + 8] |= 1 << v178;
                      *(void *)(v176[6] + 8 * v178) = v209;
                      v192(v176[7] + *(void *)(v195 + 72) * v178, v186, v187);
                      uint64_t v188 = v176[2];
                      BOOL v141 = __OFADD__(v188, 1);
                      uint64_t v189 = v188 + 1;
                      if (v141) {
                        goto LABEL_151;
                      }
                      v176[2] = v189;
                    }
                    uint64_t v51 = v210;
                    *(void *)(v193 + v166) = v176;
                    swift_bridgeObjectRelease();

                    swift_release();
                  }
                  swift_release();
                  id v29 = v233;
                  uint64_t v147 = v214;
                }
                else
                {

                  uint64_t v147 = v214;
                  id v29 = v233;
                }
              }
              else
              {

                sub_25425042C((uint64_t)v222, &qword_269DDA000);
                uint64_t v147 = v214;
                id v29 = v233;
              }
            }
            else
            {
            }
LABEL_103:
            ++v148;
          }
          while (v147 != v148);
        }
      }

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v0 = v238;
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      id v29 = v229;
    }
    uint64_t v190 = v0[61];

    sub_254250354(v190);
    goto LABEL_21;
  }
  uint64_t v96 = v95;
  unint64_t v97 = sub_25436CDD0();

  unint64_t v98 = v97;
  unint64_t v215 = v97;
  if (v97 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v98 = v97;
    uint64_t v99 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v99) {
      goto LABEL_53;
    }
    goto LABEL_96;
  }
  uint64_t v99 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v99)
  {
LABEL_96:
    swift_bridgeObjectRelease();
    uint64_t v0 = v238;
    id v24 = v223;
    goto LABEL_97;
  }
LABEL_53:
  if (v99 >= 1)
  {
    uint64_t v100 = 0;
    uint64_t v101 = v238 + 22;
    unint64_t v221 = v98 & 0xC000000000000001;
    uint64_t v102 = v238[53];
    uint64_t v211 = v238 + 34;
    uint64_t v213 = (void (**)(void, void))(v238[48] + 8);
    unint64_t v205 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56);
    uint64_t v198 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    uint64_t v200 = v238[39];
    uint64_t v194 = v102;
    uint64_t v196 = (void (**)(unint64_t, uint64_t, uint64_t))(v102 + 32);
    while (1)
    {
      if (v221) {
        id v103 = (id)MEMORY[0x25A275A00](v100, v98);
      }
      else {
        id v103 = *(id *)(v98 + 8 * v100 + 32);
      }
      BOOL v104 = v103;
      id v105 = objc_msgSend(v103, sel_faceprint);
      if (v105)
      {
        uint64_t v106 = v105;
        id v107 = objc_msgSend(v104, sel_uuid);
        sub_25436C7E0();

        if (*(void *)(v51 + 16) && (unint64_t v108 = sub_254351890(v238[50]), (v109 & 1) != 0))
        {
          sub_25427215C(*(void *)(v51 + 56) + 40 * v108, (uint64_t)v101);
        }
        else
        {
          v238[26] = 0;
          *uint64_t v101 = 0u;
          *((_OWORD *)v238 + 12) = 0u;
        }
        (*v213)(v238[50], v238[47]);
        if (v238[25])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7BA8);
          type metadata accessor for DKFaceObservation(0);
          if (swift_dynamicCast())
          {
            uint64_t v110 = *v211;
            CGFloat v111 = *(void **)(*v211 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
            *(void *)(*v211 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = v106;
            id v112 = v106;

            objc_msgSend(v112, sel_confidence);
            uint64_t v114 = v110 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
            *(double *)uint64_t v114 = v113;
            *(unsigned char *)(v114 + 8) = 0;
            if (*(unsigned char *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8) == 1)
            {
            }
            else
            {
              uint64_t v207 = v112;
              uint64_t v208 = *(void *)(v110 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
              uint64_t v115 = v238[52];
              uint64_t v116 = v238[46];
              uint64_t v117 = *(void *)(v200 + 40);
              v226(v116, *(void *)(v228 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v115);
              uint64_t v202 = *v205;
              (*v205)(v116, 0, 1, v115);
              uint64_t v118 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime;
              if ((*v198)(v116, 1, v115) == 1)
              {
                uint64_t v119 = v238[46];
                swift_retain();
                sub_25425042C(v119, &qword_269DD7A40);
                unint64_t v120 = sub_254351604(v208);
                if (v121)
                {
                  unint64_t v122 = v120;
                  char v123 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v124 = *(void *)(v117 + v118);
                  v242[0] = v124;
                  *(void *)(v117 + v118) = 0x8000000000000000;
                  if ((v123 & 1) == 0)
                  {
                    sub_25429C910();
                    uint64_t v124 = v242[0];
                  }
                  double v125 = v238;
                  (*(void (**)(void, unint64_t, void))(v194 + 32))(v238[45], *(void *)(v124 + 56) + *(void *)(v194 + 72) * v122, v238[52]);
                  sub_2542F9C7C(v122, v124);
                  *(void *)(v117 + v118) = v124;
                  swift_bridgeObjectRelease();
                  uint64_t v126 = 0;
                }
                else
                {
                  uint64_t v126 = 1;
                  double v125 = v238;
                }
                uint64_t v137 = v125[45];
                v202(v137, v126, 1, v125[52]);
                sub_25425042C(v137, &qword_269DD7A40);

                swift_release();
                swift_release();
                id v29 = v233;
                uint64_t v51 = v210;
                unint64_t v98 = v215;
                goto LABEL_56;
              }
              uint64_t v191 = *v196;
              (*v196)(v238[55], v238[46], v238[52]);
              swift_retain();
              int v127 = swift_isUniquelyReferenced_nonNull_native();
              v242[0] = *(void *)(v117 + v118);
              uint64_t v128 = (void *)v242[0];
              uint64_t v203 = v118;
              *(void *)(v117 + v118) = 0x8000000000000000;
              unint64_t v130 = sub_254351604(v208);
              uint64_t v131 = v128[2];
              BOOL v132 = (v129 & 1) == 0;
              uint64_t v133 = v131 + v132;
              if (__OFADD__(v131, v132))
              {
                __break(1u);
                break;
              }
              char v134 = v129;
              if (v128[3] >= v133)
              {
                if ((v127 & 1) == 0)
                {
                  sub_25429C910();
                  uint64_t v128 = (void *)v242[0];
                }
              }
              else
              {
                sub_25429970C(v133, v127);
                uint64_t v128 = (void *)v242[0];
                unint64_t v135 = sub_254351604(v208);
                if ((v134 & 1) != (v136 & 1))
                {
LABEL_140:
                  sub_25436D850();
                  return;
                }
                unint64_t v130 = v135;
              }
              uint64_t v138 = v238[55];
              uint64_t v139 = v238[52];
              if (v134)
              {
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v194 + 40))(v128[7] + *(void *)(v194 + 72) * v130, v138, v139);
              }
              else
              {
                v128[(v130 >> 6) + 8] |= 1 << v130;
                *(void *)(v128[6] + 8 * v130) = v208;
                v191(v128[7] + *(void *)(v194 + 72) * v130, v138, v139);
                uint64_t v140 = v128[2];
                BOOL v141 = __OFADD__(v140, 1);
                uint64_t v142 = v140 + 1;
                if (v141) {
                  goto LABEL_150;
                }
                v128[2] = v142;
              }
              uint64_t v51 = v210;
              *(void *)(v117 + v203) = v128;
              swift_bridgeObjectRelease();

              swift_release();
            }
            swift_release();
            id v29 = v233;
            unint64_t v98 = v215;
          }
          else
          {

            unint64_t v98 = v215;
          }
        }
        else
        {

          sub_25425042C((uint64_t)v101, &qword_269DDA000);
          unint64_t v98 = v215;
        }
      }
      else
      {
      }
LABEL_56:
      if (v99 == ++v100) {
        goto LABEL_96;
      }
    }
  }
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
}

uint64_t sub_254344B90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19[-1] - v7;
  uint64_t v9 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
  if (v9)
  {
    v19[0] = v9;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_254346F40(v19, v1);
    swift_bridgeObjectRelease();
    swift_release();
    if (*(void *)(v19[0] + 16))
    {
      uint64_t v11 = *(void *)(v19[0] + 32);
      uint64_t v10 = *(void *)(v19[0] + 40);
      uint64_t v12 = *(void *)(v19[0] + 48);
      uint64_t v13 = *(void *)(v19[0] + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v2);
      v19[0] = v11;
      v19[1] = v10;
      v19[2] = v12;
      v19[3] = v13;
      sub_25434220C((uint64_t)v19, (uint64_t)v5);
      sub_25436C700();
      double v15 = v14;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
      v16(v5, v2);
      v16(v8, v2);
      if (*(double *)(*(void *)(v1 + 32) + 104) < v15) {
        return 1;
      }
    }
    else
    {
      swift_release();
    }
  }
  return 0;
}

uint64_t sub_254344DD4()
{
  return type metadata accessor for DKPrintExtractionTask();
}

uint64_t type metadata accessor for DKPrintExtractionTask()
{
  uint64_t result = qword_269DD9FC8;
  if (!qword_269DD9FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_254344E28(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD9FE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  double v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_254344F24(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_25436D570();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_254344FE0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_25436D570();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_2543450A0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_25436D570();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_254345174(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_25436D570();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_254345230(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_25436C610();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_25436D570();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_254345370(uint64_t a1)
{
  return sub_254344E28(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_254345384(uint64_t a1)
{
  return sub_2542E2CBC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_254345398(uint64_t a1)
{
  return sub_2542E2B5C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2543453AC(uint64_t a1)
{
  return sub_2542E2CC8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2543453C0(uint64_t a1)
{
  return sub_2542E2E34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2543453D4(uint64_t a1)
{
  return sub_2542E2FE8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2543453E8(uint64_t a1)
{
  return sub_2542E2FF4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_2543453FC()
{
}

uint64_t sub_254345410(void *a1)
{
  return sub_2542E3460(0, a1[2], 0, a1);
}

uint64_t sub_254345424(uint64_t a1)
{
  return sub_2542E3CB4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_254345438(void *a1)
{
  return sub_2542E3F74(0, a1[2], 0, a1);
}

uint64_t sub_25434544C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DKFaceObservation(0);
  uint64_t v33 = sub_254347034(&qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
  *(void *)&long long v31 = a1;
  uint64_t v12 = (void *)*a4;
  unint64_t v14 = sub_254351890(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    double v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 40 * v14;
      __swift_destroy_boxed_opaque_existential_1(v21);
      return sub_25425DF80(&v31, v21);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25429CBA0();
    goto LABEL_7;
  }
  sub_254299AB4(v17, a3 & 1);
  unint64_t v23 = sub_254351890(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  double v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v31, v32);
  double v26 = MEMORY[0x270FA5388](v25);
  id v28 = (uint64_t *)((char *)&v30 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v29 + 16))(v28, v26);
  sub_254345A24(v14, (uint64_t)v11, *v28, v20, type metadata accessor for DKFaceObservation, &qword_269DD7BD0, (void (*)(uint64_t))type metadata accessor for DKFaceObservation);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

uint64_t sub_254345738(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = sub_25436C800();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DKBodyObservation(0);
  uint64_t v33 = sub_254347034(&qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
  *(void *)&long long v31 = a1;
  uint64_t v12 = (void *)*a4;
  unint64_t v14 = sub_254351890(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    double v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 40 * v14;
      __swift_destroy_boxed_opaque_existential_1(v21);
      return sub_25425DF80(&v31, v21);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_25429CBA0();
    goto LABEL_7;
  }
  sub_254299AB4(v17, a3 & 1);
  unint64_t v23 = sub_254351890(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_25436D850();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  double v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v31, v32);
  double v26 = MEMORY[0x270FA5388](v25);
  id v28 = (uint64_t *)((char *)&v30 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v29 + 16))(v28, v26);
  sub_254345A24(v14, (uint64_t)v11, *v28, v20, type metadata accessor for DKBodyObservation, &qword_269DD7BC8, (void (*)(uint64_t))type metadata accessor for DKBodyObservation);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

uint64_t sub_254345A24(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t v20 = a5(0);
  uint64_t v21 = sub_254347034(a6, a7);
  *(void *)&long long v19 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v13 = a4[6];
  uint64_t v14 = sub_25436C800();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13 + *(void *)(*(void *)(v14 - 8) + 72) * a1, a2, v14);
  uint64_t result = sub_25425DF80(&v19, a4[7] + 40 * a1);
  uint64_t v16 = a4[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a4[2] = v18;
  }
  return result;
}

uint64_t sub_254345B2C(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v74 = a5;
  uint64_t v73 = sub_25436C7B0();
  uint64_t v9 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  double v72 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  double v71 = &v61[-v12];
  uint64_t v13 = a2 - a1;
  uint64_t v14 = a2 - a1 + 31;
  if (a2 - a1 >= 0) {
    uint64_t v14 = a2 - a1;
  }
  uint64_t v15 = v14 >> 5;
  uint64_t v16 = a2;
  unint64_t v67 = a3;
  uint64_t v17 = a3 - (void)a2;
  uint64_t v18 = v17 / 32;
  unint64_t v83 = a1;
  uint64_t v82 = a4;
  if (v14 >> 5 >= v17 / 32)
  {
    if (v17 < -31) {
      goto LABEL_46;
    }
    double v38 = v16;
    if (a4 != v16 || &v16[32 * v18] <= a4) {
      memmove(a4, v16, 32 * v18);
    }
    uint64_t v63 = a4;
    id v39 = &a4[32 * v18];
    uint64_t v81 = v39;
    unint64_t v83 = v16;
    if (v17 < 32 || a1 >= v16) {
      goto LABEL_45;
    }
    uint64_t v62 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
    double v40 = (char *)(v67 - 32);
    uint64_t v75 = a1;
    while (1)
    {
      uint64_t v76 = v38;
      uint64_t v41 = *((void *)v39 - 4);
      uint64_t v43 = (char *)*((void *)v39 - 3);
      uint64_t v42 = v39 - 32;
      unint64_t v69 = (unint64_t)v39;
      double v70 = v40 + 32;
      unint64_t v45 = *((void *)v39 - 2);
      uint64_t v44 = *((void *)v39 - 1);
      uint64_t v46 = *((void *)v16 - 4);
      uint64_t v47 = (char *)*((void *)v16 - 3);
      v16 -= 32;
      id v66 = v47;
      unint64_t v67 = v45;
      uint64_t v48 = (void (**)(void, uint64_t))*((void *)v16 + 2);
      uint64_t v49 = *((void *)v16 + 3);
      uint64_t v77 = v41;
      uint64_t v78 = v43;
      uint64_t v68 = (uint64_t)v43;
      uint64_t v79 = (void (**)(void, uint64_t))v45;
      uint64_t v80 = v44;
      uint64_t v50 = v48;
      uint64_t v64 = v46;
      uint64_t v65 = (void (**)(unsigned char *, uint64_t))v48;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v51 = v71;
      sub_25434220C((uint64_t)&v77, (uint64_t)v71);
      uint64_t v77 = v64;
      uint64_t v78 = v47;
      uint64_t v79 = v50;
      uint64_t v80 = v49;
      id v52 = v72;
      sub_25434220C((uint64_t)&v77, (uint64_t)v72);
      LODWORD(v64) = sub_25436C730();
      char v53 = *v62;
      id v54 = v52;
      uint64_t v55 = v73;
      (*v62)(v54, v73);
      v53(v51, v55);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (v64)
      {
        id v39 = (char *)v69;
        if (v70 != v76 || v40 >= v76)
        {
          long long v56 = *((_OWORD *)v16 + 1);
          *(_OWORD *)double v40 = *(_OWORD *)v16;
          *((_OWORD *)v40 + 1) = v56;
        }
        unint64_t v83 = v16;
      }
      else
      {
        uint64_t v81 = v42;
        uint64_t v16 = v76;
        if ((unint64_t)v70 >= v69 && (unint64_t)v40 < v69)
        {
          os_log_type_t v57 = v75;
          if (v70 != (char *)v69)
          {
            long long v58 = *((_OWORD *)v42 + 1);
            *(_OWORD *)double v40 = *(_OWORD *)v42;
            *((_OWORD *)v40 + 1) = v58;
          }
          id v39 = v42;
          goto LABEL_41;
        }
        long long v59 = *((_OWORD *)v42 + 1);
        *(_OWORD *)double v40 = *(_OWORD *)v42;
        *((_OWORD *)v40 + 1) = v59;
        id v39 = v42;
      }
      os_log_type_t v57 = v75;
LABEL_41:
      if (v39 > v63)
      {
        v40 -= 32;
        double v38 = v16;
        if (v16 > v57) {
          continue;
        }
      }
      goto LABEL_45;
    }
  }
  if (v13 >= -31)
  {
    if (a4 != a1 || &a1[32 * v15] <= a4) {
      memmove(a4, a1, 32 * v15);
    }
    id v66 = &a4[32 * v15];
    uint64_t v81 = v66;
    if (v13 >= 32 && (unint64_t)v16 < v67)
    {
      long long v19 = a4;
      uint64_t v65 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
      uint64_t v20 = v71;
      do
      {
        uint64_t v75 = a1;
        uint64_t v76 = v16;
        uint64_t v21 = *(void *)v16;
        uint64_t v22 = (char *)*((void *)v16 + 1);
        char v24 = (void (**)(void, uint64_t))*((void *)v16 + 2);
        uint64_t v23 = *((void *)v16 + 3);
        uint64_t v25 = v19;
        uint64_t v26 = *(void *)v19;
        unint64_t v27 = *((void *)v25 + 2);
        double v70 = (char *)*((void *)v25 + 1);
        id v28 = v70;
        uint64_t v29 = *((void *)v25 + 3);
        uint64_t v77 = v21;
        uint64_t v78 = v22;
        uint64_t v79 = v24;
        uint64_t v80 = v23;
        uint64_t v68 = v26;
        unint64_t v69 = v27;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_25434220C((uint64_t)&v77, (uint64_t)v20);
        uint64_t v77 = v68;
        uint64_t v78 = v28;
        uint64_t v79 = (void (**)(void, uint64_t))v27;
        uint64_t v80 = v29;
        uint64_t v30 = v72;
        sub_25434220C((uint64_t)&v77, (uint64_t)v72);
        LODWORD(v68) = sub_25436C730();
        long long v31 = *v65;
        uint64_t v32 = v30;
        uint64_t v33 = v73;
        (*v65)(v32, v73);
        v31(v20, v33);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        if (v68)
        {
          uint64_t v34 = v75;
          double v35 = v76 + 32;
          if (v75 < v76 || v75 >= v35 || v75 != v76)
          {
            long long v36 = *((_OWORD *)v76 + 1);
            *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
            *((_OWORD *)v34 + 1) = v36;
          }
        }
        else
        {
          uint64_t v34 = v75;
          double v35 = v76;
          if (v75 != v25)
          {
            long long v37 = *((_OWORD *)v25 + 1);
            *(_OWORD *)uint64_t v75 = *(_OWORD *)v25;
            *((_OWORD *)v34 + 1) = v37;
          }
          v25 += 32;
          uint64_t v82 = v25;
        }
        a1 = v34 + 32;
        unint64_t v83 = a1;
        if (v25 >= v66) {
          break;
        }
        long long v19 = v25;
        uint64_t v16 = v35;
      }
      while ((unint64_t)v35 < v67);
    }
LABEL_45:
    sub_254344FE0((void **)&v83, (const void **)&v82, &v81);
    return 1;
  }
LABEL_46:
  swift_release();
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

void sub_2543460C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v41 = a5;
  uint64_t v35 = a1;
  uint64_t v40 = sub_25436C7B0();
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  double v38 = (char *)&v33 - v11;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v12 = *a4;
    long long v37 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v42 = v12;
    uint64_t v13 = (void *)(v12 + 32 * a3 + 24);
    uint64_t v14 = (uint64_t)v38;
LABEL_5:
    uint64_t v15 = (uint64_t *)(v42 + 32 * a3);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    uint64_t v19 = v15[3];
    uint64_t v43 = a3;
    uint64_t v44 = v35;
    long long v36 = v13;
    while (1)
    {
      uint64_t v20 = *(v13 - 7);
      uint64_t v22 = (long long *)(v13 - 7);
      uint64_t v47 = *(v13 - 6);
      uint64_t v21 = v47;
      uint64_t v48 = v16;
      uint64_t v23 = *(v13 - 5);
      uint64_t v24 = *(v13 - 4);
      uint64_t v49 = v17;
      uint64_t v50 = v18;
      uint64_t v51 = v19;
      uint64_t v25 = v23;
      uint64_t v45 = v20;
      uint64_t v46 = v23;
      uint64_t v52 = v17;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_25434220C((uint64_t)&v48, v14);
      uint64_t v48 = v45;
      uint64_t v49 = v21;
      uint64_t v50 = v25;
      uint64_t v51 = v24;
      uint64_t v26 = v39;
      sub_25434220C((uint64_t)&v48, v39);
      LODWORD(v45) = sub_25436C730();
      unint64_t v27 = *v37;
      uint64_t v28 = v26;
      uint64_t v29 = v40;
      (*v37)(v28, v40);
      v27(v14, v29);
      uint64_t v30 = v43;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((v45 & 1) == 0)
      {
LABEL_4:
        a3 = v30 + 1;
        uint64_t v13 = v36 + 4;
        if (a3 == v34) {
          return;
        }
        goto LABEL_5;
      }
      if (!v42) {
        break;
      }
      uint64_t v19 = *v13;
      long long v32 = *v22;
      long long v31 = *(_OWORD *)(v13 - 5);
      *(v13 - 4) = *v13;
      v13 -= 4;
      uint64_t v16 = v13[1];
      uint64_t v17 = v13[2];
      uint64_t v18 = v13[3];
      v22[2] = v32;
      void v22[3] = v31;
      *(v13 - 3) = v16;
      *(v13 - 2) = v17;
      *(v13 - 1) = v18;
      if (v30 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_254346370(uint64_t *a1, uint64_t a2)
{
  uint64_t v172 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  uint64_t v171 = (uint64_t)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v170 = (uint64_t)&v157 - v8;
  uint64_t v9 = a1[1];
  swift_retain_n();
  uint64_t v10 = sub_25436D750();
  if (v10 >= v9)
  {
    if (v9 < 0) {
      goto LABEL_140;
    }
    if (v9)
    {
      swift_retain();
      sub_2543460C8(0, v9, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  if (v9 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v9 + 1;
  }
  if (v9 < -1) {
    goto LABEL_148;
  }
  uint64_t v174 = a2;
  uint64_t v164 = v9;
  uint64_t v161 = v10;
  uint64_t v168 = v2;
  uint64_t v158 = a1;
  if (v9 < 2)
  {
    uint64_t v14 = (char *)MEMORY[0x263F8EE78];
    uint64_t v167 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v160 = MEMORY[0x263F8EE78];
    if (v9 == 1) {
      goto LABEL_13;
    }
    unint64_t v18 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
    if (v18 >= 2)
    {
      uint64_t v142 = (char *)*v158;
      char v184 = (char *)*v158;
      uint64_t v143 = v174;
      do
      {
        unint64_t v144 = v18 - 2;
        if (v18 < 2) {
          goto LABEL_135;
        }
        if (!v142) {
          goto LABEL_147;
        }
        double v145 = v14;
        unint64_t v146 = v14 + 32;
        uint64_t v147 = *(void *)&v14[16 * v144 + 32];
        uint64_t v148 = *(void *)&v146[16 * v18 - 8];
        uint64_t v149 = &v142[32 * v147];
        id v150 = &v142[32 * *(void *)&v146[16 * v18 - 16]];
        unint64_t v151 = (unint64_t)&v142[32 * v148];
        swift_retain();
        uint64_t v152 = v149;
        uint64_t v153 = v168;
        sub_254345B2C(v152, v150, v151, v167, v143);
        uint64_t v168 = v153;
        if (v153) {
          goto LABEL_101;
        }
        swift_release();
        if (v148 < v147) {
          goto LABEL_136;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v145 = sub_254345370((uint64_t)v145);
        }
        if (v144 >= *((void *)v145 + 2)) {
          goto LABEL_137;
        }
        uint64_t v154 = &v145[16 * v144 + 32];
        *(void *)uint64_t v154 = v147;
        *((void *)v154 + 1) = v148;
        unint64_t v155 = *((void *)v145 + 2);
        if (v18 > v155) {
          goto LABEL_138;
        }
        uint64_t v14 = v145;
        memmove(&v145[16 * v18 + 16], &v145[16 * v18 + 32], 16 * (v155 - v18));
        *((void *)v145 + 2) = v155 - 1;
        unint64_t v18 = v155 - 1;
        uint64_t v142 = v184;
      }
      while (v155 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v160 + 16) = 0;
LABEL_116:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v12 = v11 >> 1;
  uint64_t v13 = sub_25436CE40();
  *(void *)(v13 + 16) = v12;
  uint64_t v160 = v13;
  uint64_t v167 = (char *)(v13 + 32);
LABEL_13:
  uint64_t v15 = 0;
  uint64_t v16 = *a1;
  char v169 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v159 = v16 + 48;
  uint64_t v157 = v16 + 24;
  uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  uint64_t v17 = v164;
  uint64_t v173 = v16;
  while (1)
  {
    uint64_t v19 = (uint64_t)v15;
    uint64_t v20 = (uint64_t)(v15 + 1);
    uint64_t v21 = (char *)v17;
    uint64_t v165 = (char *)v19;
    if (v20 >= v17)
    {
      uint64_t v175 = v20;
    }
    else
    {
      uint64_t v162 = v14;
      uint64_t v22 = (uint64_t *)(v16 + 32 * v20);
      uint64_t v23 = (char *)*v22;
      uint64_t v24 = (char *)v22[1];
      uint64_t v26 = (char *)v22[2];
      uint64_t v25 = v22[3];
      unint64_t v27 = (uint64_t *)(v16 + 32 * v19);
      uint64_t v29 = (char *)*v27;
      uint64_t v179 = (char *)v27[1];
      uint64_t v28 = v179;
      BOOL v180 = v23;
      uint64_t v30 = (char *)v27[2];
      uint64_t v31 = v27[3];
      uint64_t v181 = v24;
      char v182 = v26;
      char v184 = v24;
      uint64_t v183 = v25;
      long long v32 = v30;
      unint64_t v178 = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v33 = v170;
      sub_25434220C((uint64_t)&v180, v170);
      BOOL v180 = v29;
      uint64_t v181 = v28;
      char v182 = v32;
      uint64_t v183 = v31;
      uint64_t v34 = v171;
      sub_25434220C((uint64_t)&v180, v171);
      LODWORD(v177) = sub_25436C730();
      uint64_t v35 = (char *)*v169;
      uint64_t v36 = v34;
      uint64_t v19 = (uint64_t)v165;
      uint64_t v37 = v172;
      (*v169)(v36, v172);
      uint64_t v176 = (void (*)(uint64_t, uint64_t))v35;
      ((void (*)(uint64_t, uint64_t))v35)(v33, v37);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      double v38 = (char *)(v19 + 2);
      if (v19 + 2 >= (uint64_t)v21)
      {
        uint64_t v175 = v19 + 2;
      }
      else
      {
        uint64_t v39 = (void *)(v159 + 32 * v19);
        uint64_t v40 = v39;
        while (1)
        {
          uint64_t v175 = (uint64_t)v38;
          uint64_t v41 = (char *)v39[2];
          uint64_t v42 = (char *)v39[3];
          uint64_t v43 = (char *)v40[4];
          v40 += 4;
          uint64_t v44 = v39[5];
          uint64_t v45 = (char *)*(v39 - 2);
          char v184 = (char *)*(v39 - 1);
          uint64_t v46 = v184;
          uint64_t v48 = (char *)*v39;
          uint64_t v47 = v39[1];
          BOOL v180 = v41;
          uint64_t v181 = v42;
          char v182 = v43;
          uint64_t v183 = v44;
          unint64_t v178 = v45;
          uint64_t v179 = v48;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v49 = v170;
          sub_25434220C((uint64_t)&v180, v170);
          BOOL v180 = v178;
          uint64_t v181 = v46;
          char v182 = v48;
          uint64_t v183 = v47;
          uint64_t v50 = v171;
          sub_25434220C((uint64_t)&v180, v171);
          LODWORD(v178) = sub_25436C730();
          uint64_t v51 = v172;
          uint64_t v52 = v176;
          v176(v50, v172);
          v52(v49, v51);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v177 ^ v178)) {
            break;
          }
          double v38 = (char *)(v175 + 1);
          uint64_t v39 = v40;
          uint64_t v21 = (char *)v164;
          if (v164 == v175 + 1)
          {
            uint64_t v175 = v164;
            goto LABEL_25;
          }
        }
        uint64_t v21 = (char *)v164;
LABEL_25:
        uint64_t v19 = (uint64_t)v165;
      }
      uint64_t v16 = v173;
      uint64_t v14 = v162;
      if (v177)
      {
        uint64_t v53 = v175;
        if (v175 < v19) {
          goto LABEL_141;
        }
        if (v19 < v175)
        {
          uint64_t v54 = 32 * v175;
          uint64_t v55 = 32 * v19;
          uint64_t v56 = v19;
          do
          {
            if (v56 != --v53)
            {
              if (!v16) {
                goto LABEL_146;
              }
              os_log_type_t v57 = (_OWORD *)(v16 + v55);
              uint64_t v58 = v16 + v54;
              uint64_t v59 = *(void *)(v16 + v55 + 16);
              uint64_t v60 = *(void *)(v16 + v55 + 24);
              long long v61 = *(_OWORD *)(v16 + v55);
              long long v62 = *(_OWORD *)(v16 + v54 - 16);
              *os_log_type_t v57 = *(_OWORD *)(v16 + v54 - 32);
              v57[1] = v62;
              *(_OWORD *)(v58 - 32) = v61;
              *(void *)(v58 - 16) = v59;
              *(void *)(v58 - 8) = v60;
            }
            ++v56;
            v54 -= 32;
            v55 += 32;
          }
          while (v56 < v53);
        }
      }
    }
    if (v175 < (uint64_t)v21)
    {
      if (__OFSUB__(v175, v19)) {
        goto LABEL_139;
      }
      if (v175 - v19 < v161) {
        break;
      }
    }
LABEL_53:
    if (v175 < v19) {
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_254344E28(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v86 = *((void *)v14 + 2);
    unint64_t v85 = *((void *)v14 + 3);
    unint64_t v18 = v86 + 1;
    uint64_t v16 = v173;
    if (v86 >= v85 >> 1)
    {
      BOOL v141 = sub_254344E28((char *)(v85 > 1), v86 + 1, 1, v14);
      uint64_t v16 = v173;
      uint64_t v14 = v141;
    }
    *((void *)v14 + 2) = v18;
    id v87 = v14 + 32;
    uint64_t v88 = &v14[16 * v86 + 32];
    uint64_t v89 = v175;
    *(void *)uint64_t v88 = v19;
    *((void *)v88 + 1) = v89;
    if (v86)
    {
      uint64_t v179 = v14 + 32;
      while (1)
      {
        unint64_t v90 = v18 - 1;
        if (v18 >= 4)
        {
          id v95 = &v87[16 * v18];
          uint64_t v96 = *((void *)v95 - 8);
          uint64_t v97 = *((void *)v95 - 7);
          BOOL v101 = __OFSUB__(v97, v96);
          uint64_t v98 = v97 - v96;
          if (v101) {
            goto LABEL_123;
          }
          uint64_t v100 = *((void *)v95 - 6);
          uint64_t v99 = *((void *)v95 - 5);
          BOOL v101 = __OFSUB__(v99, v100);
          uint64_t v93 = v99 - v100;
          char v94 = v101;
          if (v101) {
            goto LABEL_124;
          }
          unint64_t v102 = v18 - 2;
          id v103 = &v87[16 * v18 - 32];
          uint64_t v105 = *(void *)v103;
          uint64_t v104 = *((void *)v103 + 1);
          BOOL v101 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v101) {
            goto LABEL_126;
          }
          BOOL v101 = __OFADD__(v93, v106);
          uint64_t v107 = v93 + v106;
          if (v101) {
            goto LABEL_129;
          }
          if (v107 >= v98)
          {
            double v125 = &v87[16 * v90];
            uint64_t v127 = *(void *)v125;
            uint64_t v126 = *((void *)v125 + 1);
            BOOL v101 = __OFSUB__(v126, v127);
            uint64_t v128 = v126 - v127;
            if (v101) {
              goto LABEL_133;
            }
            BOOL v118 = v93 < v128;
            goto LABEL_91;
          }
        }
        else
        {
          if (v18 != 3)
          {
            uint64_t v119 = *((void *)v14 + 4);
            uint64_t v120 = *((void *)v14 + 5);
            BOOL v101 = __OFSUB__(v120, v119);
            uint64_t v112 = v120 - v119;
            char v113 = v101;
            goto LABEL_85;
          }
          uint64_t v92 = *((void *)v14 + 4);
          uint64_t v91 = *((void *)v14 + 5);
          BOOL v101 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          char v94 = v101;
        }
        if (v94) {
          goto LABEL_125;
        }
        unint64_t v102 = v18 - 2;
        unint64_t v108 = &v87[16 * v18 - 32];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v111 = __OFSUB__(v109, v110);
        uint64_t v112 = v109 - v110;
        char v113 = v111;
        if (v111) {
          goto LABEL_128;
        }
        uint64_t v114 = &v87[16 * v90];
        uint64_t v116 = *(void *)v114;
        uint64_t v115 = *((void *)v114 + 1);
        BOOL v101 = __OFSUB__(v115, v116);
        uint64_t v117 = v115 - v116;
        if (v101) {
          goto LABEL_131;
        }
        if (__OFADD__(v112, v117)) {
          goto LABEL_132;
        }
        if (v112 + v117 >= v93)
        {
          BOOL v118 = v93 < v117;
LABEL_91:
          if (v118) {
            unint64_t v90 = v102;
          }
          goto LABEL_93;
        }
LABEL_85:
        if (v113) {
          goto LABEL_127;
        }
        char v121 = &v87[16 * v90];
        uint64_t v123 = *(void *)v121;
        uint64_t v122 = *((void *)v121 + 1);
        BOOL v101 = __OFSUB__(v122, v123);
        uint64_t v124 = v122 - v123;
        if (v101) {
          goto LABEL_130;
        }
        if (v124 < v112) {
          goto LABEL_15;
        }
LABEL_93:
        unint64_t v129 = v90 - 1;
        if (v90 - 1 >= v18)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v16) {
          goto LABEL_145;
        }
        unint64_t v130 = &v87[16 * v129];
        uint64_t v131 = *(void *)v130;
        unint64_t v132 = v90;
        uint64_t v133 = &v87[16 * v90];
        uint64_t v134 = *((void *)v133 + 1);
        unint64_t v135 = (char *)(v16 + 32 * *(void *)v130);
        char v184 = (char *)(v16 + 32 * *(void *)v133);
        unint64_t v136 = v16 + 32 * v134;
        uint64_t v137 = v174;
        swift_retain();
        uint64_t v138 = v135;
        uint64_t v139 = v168;
        sub_254345B2C(v138, v184, v136, v167, v137);
        uint64_t v168 = v139;
        if (v139)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v160 + 16) = 0;
          goto LABEL_116;
        }
        swift_release();
        if (v134 < v131) {
          goto LABEL_120;
        }
        if (v132 > *((void *)v14 + 2)) {
          goto LABEL_121;
        }
        *(void *)unint64_t v130 = v131;
        id v87 = v179;
        *(void *)&v179[16 * v129 + 8] = v134;
        unint64_t v140 = *((void *)v14 + 2);
        if (v132 >= v140) {
          goto LABEL_122;
        }
        unint64_t v18 = v140 - 1;
        memmove(v133, v133 + 16, 16 * (v140 - 1 - v132));
        *((void *)v14 + 2) = v140 - 1;
        uint64_t v16 = v173;
        if (v140 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v18 = 1;
LABEL_15:
    uint64_t v17 = v164;
    uint64_t v15 = (char *)v175;
    if (v175 >= v164) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v19, v161)) {
    goto LABEL_142;
  }
  if (v19 + v161 >= (uint64_t)v21) {
    uint64_t v63 = v21;
  }
  else {
    uint64_t v63 = (char *)(v19 + v161);
  }
  if ((uint64_t)v63 >= v19)
  {
    uint64_t v64 = v175;
    if ((char *)v175 != v63)
    {
      uint64_t v162 = v14;
      uint64_t v65 = (void *)(v157 + 32 * v175);
      uint64_t v163 = v63;
      do
      {
        unint64_t v67 = (uint64_t *)(v16 + 32 * v64);
        uint64_t v68 = (char *)*v67;
        unint64_t v69 = (char *)v67[1];
        double v71 = (char *)v67[2];
        uint64_t v70 = v67[3];
        uint64_t v166 = v65;
        uint64_t v175 = v64;
        while (1)
        {
          uint64_t v73 = (long long *)(v65 - 7);
          double v72 = (char *)*(v65 - 7);
          uint64_t v176 = (void (*)(uint64_t, uint64_t))v19;
          char v177 = v72;
          uint64_t v74 = (char *)*(v65 - 5);
          uint64_t v179 = (char *)*(v65 - 6);
          uint64_t v75 = v179;
          BOOL v180 = v68;
          uint64_t v76 = *(v65 - 4);
          uint64_t v181 = v69;
          char v182 = v71;
          uint64_t v183 = v70;
          uint64_t v77 = v74;
          unint64_t v178 = v74;
          char v184 = v69;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v78 = v170;
          sub_25434220C((uint64_t)&v180, v170);
          BOOL v180 = v177;
          uint64_t v181 = v75;
          char v182 = v77;
          uint64_t v183 = v76;
          uint64_t v79 = v171;
          sub_25434220C((uint64_t)&v180, v171);
          LODWORD(v177) = sub_25436C730();
          uint64_t v80 = *v169;
          uint64_t v81 = v79;
          uint64_t v82 = v172;
          (*v169)(v81, v172);
          v80(v78, v82);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v177 & 1) == 0) {
            break;
          }
          uint64_t v16 = v173;
          id v66 = (char *)v175;
          if (!v173) {
            goto LABEL_144;
          }
          uint64_t v70 = *v65;
          long long v84 = *v73;
          long long v83 = *(_OWORD *)(v65 - 5);
          *(v65 - 4) = *v65;
          v65 -= 4;
          uint64_t v68 = (char *)v65[1];
          unint64_t v69 = (char *)v65[2];
          double v71 = (char *)v65[3];
          v73[2] = v84;
          v73[3] = v83;
          *(v65 - 3) = v68;
          *(v65 - 2) = v69;
          *(v65 - 1) = v71;
          uint64_t v19 = (uint64_t)v176 + 1;
          if (v66 == (char *)v176 + 1) {
            goto LABEL_46;
          }
        }
        uint64_t v16 = v173;
        id v66 = (char *)v175;
LABEL_46:
        uint64_t v64 = (uint64_t)(v66 + 1);
        uint64_t v19 = (uint64_t)v165;
        uint64_t v65 = v166 + 4;
      }
      while ((char *)v64 != v163);
      uint64_t v175 = (uint64_t)v163;
      uint64_t v14 = v162;
    }
    goto LABEL_53;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_254346F40(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_2543453AC(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_254346370(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_254347034(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25434707C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2543470E8()
{
  return sub_2543472E0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_254347120()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2543471E0()
{
  return type metadata accessor for DKIntelligentTrackingTask();
}

uint64_t type metadata accessor for DKIntelligentTrackingTask()
{
  uint64_t result = qword_269DDA008;
  if (!qword_269DDA008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254347234()
{
  uint64_t result = sub_25436C9F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2543472E0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

void sub_2543472F0()
{
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_25434B5F0(v1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v4 == 1)
  {
    uint64_t v5 = 0;
    double v6 = 0.0;
  }
  else
  {
    uint64_t v5 = v4 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v7 = (double *)(v3 + 40);
    double v6 = 0.0;
    uint64_t v8 = v4 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v6 = v6 + *(v7 - 1) + *v7;
      v7 += 2;
      v8 -= 2;
    }
    while (v8);
    if (v4 == v5) {
      goto LABEL_10;
    }
  }
  uint64_t v9 = v4 - v5;
  uint64_t v10 = (double *)(v3 + 8 * v5 + 32);
  do
  {
    double v11 = *v10++;
    double v6 = v6 + v11;
    --v9;
  }
  while (v9);
LABEL_10:
  swift_bridgeObjectRelease();
  if (v6 <= COERCE_DOUBLE(1)) {
    return;
  }
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v14 = v13 + 64;
  uint64_t v15 = -1;
  uint64_t v16 = -1 << *(unsigned char *)(v13 + 32);
  if (-v16 < 64) {
    uint64_t v15 = ~(-1 << -(char)v16);
  }
  unint64_t v17 = v15 & *(void *)(v13 + 64);
  int64_t v18 = (unint64_t)(63 - v16) >> 6;
  while (v17)
  {
    unint64_t v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v21 = v20 | (v12 << 6);
LABEL_32:
    uint64_t v26 = *(void *)(*(void *)(v13 + 56) + 8 * v21);
    if (*(unsigned char *)(v26 + 33) == 1)
    {
      if (*(unsigned char *)(v26 + 32) == 1) {
        double v19 = atan2(*(long double *)(v26 + 48), *(long double *)(v26 + 56));
      }
      else {
        double v19 = *(double *)(v26 + 40);
      }
      *(double *)(v26 + 40) = v19 / v6;
    }
  }
  int64_t v22 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v22 >= v18) {
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v22);
  int64_t v24 = v12 + 1;
  if (v23) {
    goto LABEL_31;
  }
  int64_t v24 = v12 + 2;
  if (v12 + 2 >= v18) {
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23) {
    goto LABEL_31;
  }
  int64_t v24 = v12 + 3;
  if (v12 + 3 >= v18) {
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
LABEL_31:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v12 = v24;
    goto LABEL_32;
  }
  int64_t v25 = v12 + 4;
  if (v12 + 4 >= v18)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    sub_2542774CC();
    return;
  }
  unint64_t v23 = *(void *)(v14 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v12 + 4;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v18) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v14 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_31;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t DKPersonTrackerConfiguration.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 176) = xmmword_25436FEB0;
  *(_OWORD *)(v0 + 192) = xmmword_2543782D0;
  *(_OWORD *)(v0 + 208) = xmmword_2543782E0;
  *(_OWORD *)(v0 + 224) = xmmword_2543782F0;
  *(unsigned char *)(v0 + 240) = 1;
  *(_OWORD *)(v0 + 248) = xmmword_254378300;
  *(void *)(v0 + 264) = 0x3FECCCCCCCCCCCCDLL;
  return DKTrackerConfiguration.init()();
}

uint64_t DKPersonTracker.__allocating_init(currentTime:configuration:uuid:trackerId:camera:)(uint64_t a1, double *a2, uint64_t a3, uint64_t (*a4)(), uint64_t a5)
{
  swift_allocObject();
  uint64_t v10 = sub_25434B830(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

BOOL sub_254347644()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 240));
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + qword_269DDAA28, v1, v3);
  sub_25436C700();
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v9 = 56;
  if (v6) {
    uint64_t v9 = 64;
  }
  return *(double *)(*(void *)(v0 + qword_269DDAA20) + v9) < v8;
}

double sub_254347790()
{
  return *(double *)(v0 + 192);
}

void sub_254347798(double a1)
{
  *(double *)(v1 + 192) = a1;
}

uint64_t (*sub_2543477A0())()
{
  return nullsub_1;
}

double sub_2543477C0()
{
  return *(double *)(v0 + 200);
}

void sub_2543477C8(double a1)
{
  *(double *)(v1 + 200) = a1;
}

uint64_t (*sub_2543477D0())()
{
  return nullsub_1;
}

double sub_2543477F0()
{
  return *(double *)(v0 + 208);
}

void sub_2543477F8(double a1)
{
  *(double *)(v1 + 208) = a1;
}

uint64_t (*sub_254347800())()
{
  return nullsub_1;
}

double sub_254347820()
{
  return *(double *)(v0 + 216);
}

void sub_254347828(double a1)
{
  *(double *)(v1 + 216) = a1;
}

uint64_t (*sub_254347830())()
{
  return nullsub_1;
}

double sub_254347850()
{
  return *(double *)(v0 + 224);
}

void sub_254347858(double a1)
{
  *(double *)(v1 + 224) = a1;
}

uint64_t (*sub_254347860())()
{
  return nullsub_1;
}

double sub_254347880()
{
  return *(double *)(v0 + 232);
}

void sub_254347888(double a1)
{
  *(double *)(v1 + 232) = a1;
}

uint64_t (*sub_254347890())()
{
  return nullsub_1;
}

uint64_t sub_2543478B0()
{
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_2543478B8(uint64_t result)
{
  *(unsigned char *)(v1 + 240) = result;
  return result;
}

uint64_t (*sub_2543478C0())()
{
  return nullsub_1;
}

double sub_2543478E0()
{
  return *(double *)(v0 + 248);
}

void sub_2543478E8(double a1)
{
  *(double *)(v1 + 248) = a1;
}

uint64_t (*sub_2543478F0())()
{
  return nullsub_1;
}

double sub_254347910()
{
  return *(double *)(v0 + 256);
}

void sub_254347918(double a1)
{
  *(double *)(v1 + 256) = a1;
}

uint64_t (*sub_254347920())()
{
  return nullsub_1;
}

double sub_254347940()
{
  return *(double *)(v0 + 264);
}

void sub_254347948(double a1)
{
  *(double *)(v1 + 264) = a1;
}

uint64_t (*sub_254347950())()
{
  return nullsub_1;
}

uint64_t DKPersonTrackerConfiguration.init()()
{
  *(_OWORD *)(v0 + 176) = xmmword_25436FEB0;
  *(_OWORD *)(v0 + 192) = xmmword_2543782D0;
  *(_OWORD *)(v0 + 208) = xmmword_2543782E0;
  *(_OWORD *)(v0 + 224) = xmmword_2543782F0;
  *(unsigned char *)(v0 + 240) = 1;
  *(_OWORD *)(v0 + 248) = xmmword_254378300;
  *(void *)(v0 + 264) = 0x3FECCCCCCCCCCCCDLL;
  return DKTrackerConfiguration.init()();
}

void DKPersonTrackerConfiguration.__allocating_init(configuration:)()
{
}

void DKPersonTrackerConfiguration.init(configuration:)()
{
}

uint64_t DKPersonTrackerConfiguration.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKPersonTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_254347A98@<X0>(uint64_t a1@<X8>)
{
  return sub_254347FA0(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, MEMORY[0x263F07490], a1);
}

uint64_t sub_254347AB8(uint64_t a1)
{
  return sub_254347EE4(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, MEMORY[0x263F07490]);
}

uint64_t (*sub_254347AD8())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_254347B10@<X0>(uint64_t a1@<X8>)
{
  return sub_2542503C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, a1, &qword_269DD7F58);
}

uint64_t sub_254347B40(uint64_t a1)
{
  return sub_25434C080(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId);
}

uint64_t (*sub_254347B50())()
{
  return nullsub_1;
}

uint64_t sub_254347B78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2542503C8(a1, (uint64_t)v10, &qword_269DD7F58);
  return sub_25434C080((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_254347C24@<X0>(uint64_t a1@<X8>)
{
  return sub_2542503C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, a1, &qword_269DD7F58);
}

uint64_t sub_254347C54(uint64_t a1)
{
  return sub_25434C080(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId);
}

uint64_t (*sub_254347C64())()
{
  return nullsub_1;
}

uint64_t sub_254347C8C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25428CF24(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return sub_25428C90C((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
}

uint64_t sub_254347D38@<X0>(uint64_t a1@<X8>)
{
  return sub_25428CF24(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, a1, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_254347D74(uint64_t a1)
{
  return sub_25428C90C(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
}

uint64_t (*sub_254347D84())()
{
  return nullsub_1;
}

uint64_t sub_254347DAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void *a6)
{
  uint64_t v9 = a5(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  return (*(uint64_t (**)(void, char *, uint64_t))(v10 + 40))(*a2 + *a6, v12, v9);
}

uint64_t sub_254347EA4@<X0>(uint64_t a1@<X8>)
{
  return sub_254347FA0(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, MEMORY[0x263F90268], a1);
}

uint64_t sub_254347EC4(uint64_t a1)
{
  return sub_254347EE4(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, MEMORY[0x263F90268]);
}

uint64_t sub_254347EE4(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3 + *a2;
  uint64_t v6 = a3(0);
  double v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  return v7(v5, a1, v6);
}

uint64_t (*sub_254347F58())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_254347FA0(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, MEMORY[0x263F07508], a1);
}

uint64_t sub_254347FA0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *a1;
  uint64_t v6 = a2(0);
  double v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_254348014()
{
  return *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
}

uint64_t sub_254348024(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = result;
  return result;
}

uint64_t (*sub_254348034())()
{
  return nullsub_1;
}

double sub_25434805C@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity + 8);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_25434807C(uint64_t a1)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_25434809C())()
{
  return nullsub_1;
}

uint64_t sub_2543480C4()
{
  return swift_retain();
}

uint64_t sub_2543480D4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2543480EC())()
{
  return nullsub_1;
}

uint64_t sub_254348114()
{
  return swift_retain();
}

uint64_t sub_254348124(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = a1;
  return swift_release();
}

uint64_t (*sub_25434813C())()
{
  return nullsub_1;
}

uint64_t sub_254348164()
{
  return swift_retain();
}

uint64_t sub_254348174(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = a1;
  return swift_release();
}

uint64_t (*sub_25434818C())()
{
  return nullsub_1;
}

uint64_t sub_2543481B4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2543481C4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2543481DC())()
{
  return nullsub_1;
}

uint64_t sub_254348204()
{
  return swift_retain();
}

uint64_t sub_254348214(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter) = a1;
  return swift_release();
}

uint64_t (*sub_25434822C())()
{
  return nullsub_1;
}

uint64_t sub_254348254()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254348264(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_25434827C())()
{
  return nullsub_1;
}

uint64_t sub_2543482A4()
{
  return swift_retain();
}

uint64_t sub_2543482B4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = a1;
  return swift_release();
}

uint64_t (*sub_2543482CC())()
{
  return nullsub_1;
}

uint64_t sub_2543482F4()
{
  return swift_retain();
}

uint64_t sub_254348304(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) = a1;
  return swift_release();
}

uint64_t (*sub_25434831C())()
{
  return nullsub_1;
}

uint64_t sub_254348344()
{
  return swift_retain();
}

uint64_t sub_254348354(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) = a1;
  return swift_release();
}

uint64_t (*sub_25434836C())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.init(currentTime:configuration:uuid:trackerId:camera:)(uint64_t a1, double *a2, uint64_t a3, uint64_t (*a4)(), uint64_t a5)
{
  uint64_t v5 = sub_25434B830(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

BOOL sub_2543483C8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  if (v1
    && *(void *)(*(void *)(v1 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v1 + qword_269DDAA20) + 80))
  {
    return 1;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  return v2
      && *(void *)(*(void *)(v2 + qword_269DDAA38) + 16) >= *(void *)(*(void *)(v2 + qword_269DDAA20) + 80);
}

uint64_t sub_25434844C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera;
  sub_25428CA3C(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428CF24(a1, v3, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter)
     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  swift_retain();
  sub_25428CA3C(v4, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428CF24(a1, v4, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return swift_release();
}

uint64_t sub_254348504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA020);
  MEMORY[0x270FA5388](v112);
  *(void *)&long long v125 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25436C800();
  uint64_t v126 = *(void *)(v10 - 8);
  uint64_t v127 = v10;
  MEMORY[0x270FA5388](v10);
  char v113 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v110 = (uint64_t)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v114 = (uint64_t)&v109 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v116 = (uint64_t)&v109 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v119 = (char *)&v109 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v111 = (uint64_t)&v109 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v117 = (uint64_t)&v109 - v23;
  uint64_t v24 = sub_25436C7B0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v109 - v29;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = a2;
  swift_retain();
  swift_release();
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = a3;
  uint64_t v120 = a3;
  swift_retain();
  swift_release();
  uint64_t v128 = v4;
  *(void *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v31(v30, a1, v24);
  char v121 = v30;
  v31(v27, (uint64_t)v30, v24);
  type metadata accessor for DKPersonMotionFilter.Measurement(0);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect;
  *(_OWORD *)uint64_t v33 = 0u;
  *(_OWORD *)(v33 + 16) = 0u;
  int v34 = 1;
  *(unsigned char *)(v33 + 32) = 1;
  uint64_t v35 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect;
  *(_OWORD *)uint64_t v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  uint64_t v115 = (_OWORD *)v35;
  *(unsigned char *)(v35 + 32) = 1;
  uint64_t v36 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  *(void *)uint64_t v36 = 0;
  uint64_t v124 = v36;
  *(unsigned char *)(v36 + 8) = 1;
  uint64_t v37 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = 1;
  uint64_t v38 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  uint64_t v39 = v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  *(void *)uint64_t v39 = 0;
  uint64_t v118 = v39;
  *(unsigned char *)(v39 + 8) = 1;
  uint64_t v122 = v25;
  uint64_t v123 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, v27, v24);
  if (!a2)
  {
    uint64_t v51 = 0;
    int v52 = 4;
    uint64_t v53 = v127;
    uint64_t v41 = v125;
    goto LABEL_20;
  }
  uint64_t v40 = *(void *)(a2 + *(void *)(*(void *)a2 + 200));
  uint64_t v41 = v125;
  if (!v40)
  {
    uint64_t v51 = 0;
    int v52 = 4;
    goto LABEL_19;
  }
  uint64_t v109 = v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId;
  uint64_t v42 = v117;
  sub_2542503C8(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, v117, &qword_269DD7F58);
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  int v44 = v43(v42, 1, v127);
  swift_retain();
  sub_25425042C(v42, &qword_269DD7F58);
  if (v44 != 1)
  {
    uint64_t v45 = v111;
    sub_2542503C8(v109, v111, &qword_269DD7F58);
    uint64_t v46 = v127;
    uint64_t result = v43(v45, 1, v127);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v48 = v126;
    uint64_t v49 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v113, v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v46);
    sub_254331F84();
    LODWORD(v117) = sub_25436CBB0();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v48 + 8);
    v50(v49, v46);
    v50((char *)v45, v46);
    uint64_t v41 = v125;
    if (v117)
    {
      swift_release();
      uint64_t v51 = 0;
      int v52 = 4;
      int v34 = 1;
LABEL_19:
      uint64_t v53 = v127;
LABEL_20:
      uint64_t v65 = v120;
      if (!v120) {
        goto LABEL_38;
      }
LABEL_21:
      uint64_t v72 = *(void *)(v65 + *(void *)(*(void *)v65 + 200));
      if (!v72) {
        goto LABEL_38;
      }
      LODWORD(v111) = v52;
      uint64_t v117 = v51;
      uint64_t v120 = v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId;
      uint64_t v73 = v116;
      sub_2542503C8(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, v116, &qword_269DD7F58);
      uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
      int v75 = v74(v73, 1, v53);
      swift_retain();
      sub_25425042C(v73, &qword_269DD7F58);
      if (v75 != 1)
      {
        uint64_t v78 = v126;
        uint64_t v77 = v127;
        uint64_t v79 = v114;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v114, v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v127);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v77);
        uint64_t v80 = v41 + *(int *)(v112 + 48);
        sub_2542503C8(v120, v125, &qword_269DD7F58);
        uint64_t v81 = v125;
        sub_2542503C8(v79, v80, &qword_269DD7F58);
        if (v74(v81, 1, v77) == 1)
        {
          sub_25425042C(v79, &qword_269DD7F58);
          if (v74(v80, 1, v77) == 1)
          {
            sub_25425042C(v81, &qword_269DD7F58);
LABEL_37:
            swift_release();
            uint64_t v51 = v117;
            LOBYTE(v52) = v111;
            goto LABEL_38;
          }
          goto LABEL_28;
        }
        uint64_t v82 = v110;
        sub_2542503C8(v81, v110, &qword_269DD7F58);
        if (v74(v80, 1, v77) == 1)
        {
          sub_25425042C(v114, &qword_269DD7F58);
          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v82, v77);
LABEL_28:
          sub_25425042C(v81, &qword_269DDA020);
          goto LABEL_29;
        }
        uint64_t v99 = v126;
        uint64_t v100 = v113;
        (*(void (**)(char *, uint64_t, uint64_t))(v126 + 32))(v113, v80, v77);
        sub_254331F84();
        char v101 = sub_25436CBB0();
        unint64_t v102 = *(void (**)(char *, uint64_t))(v99 + 8);
        v102(v100, v77);
        sub_25425042C(v114, &qword_269DD7F58);
        v102((char *)v82, v77);
        sub_25425042C(v81, &qword_269DD7F58);
        if (v101) {
          goto LABEL_37;
        }
      }
LABEL_29:
      uint64_t v83 = v118;
      if (*(unsigned char *)(v118 + 8) == 1)
      {
        char v84 = *(unsigned char *)(v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8);
        *(void *)uint64_t v118 = *(void *)(v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
        *(unsigned char *)(v83 + 8) = v84;
      }
      uint64_t v85 = v127;
      unint64_t v86 = (long long *)(v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
      uint64_t v51 = v117;
      if (*(unsigned char *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera) == 1)
      {
        double v87 = *(double *)v86;
        *(void *)&long long v76 = *((void *)v86 + 1);
        long long v125 = v76;
        uint64_t v88 = *((void *)v86 + 2);
        uint64_t v89 = *((void *)v86 + 3);
        uint64_t v90 = v88;
        uint64_t v91 = v89;
        *(double *)&long long v92 = 1.0 - v87 - CGRectGetWidth(*(CGRect *)((char *)&v76 - 8));
        *((void *)&v92 + 1) = v125;
        uint64_t v93 = v88;
        uint64_t v94 = v89;
      }
      else
      {
        long long v92 = *v86;
        uint64_t v93 = *((void *)v86 + 2);
        uint64_t v94 = *((void *)v86 + 3);
      }
      id v95 = v115;
      *uint64_t v115 = v92;
      *((void *)v95 + 2) = v93;
      *((void *)v95 + 3) = v94;
      *((unsigned char *)v95 + 32) = 0;
      uint64_t v96 = v126;
      uint64_t v97 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v119, v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v85);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v97, 0, 1, v85);
      sub_25434C080(v97, v120);
      uint64_t v98 = *(void *)(v72 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
      swift_bridgeObjectRetain();
      swift_release();
      LOBYTE(v52) = v111;
      if (v34) {
        LOBYTE(v52) = 1;
      }
      goto LABEL_39;
    }
  }
  char v54 = *(unsigned char *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8);
  uint64_t v55 = v124;
  *(void *)uint64_t v124 = *(void *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
  *(unsigned char *)(v55 + 8) = v54;
  char v56 = *(unsigned char *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8);
  *(void *)uint64_t v37 = *(void *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
  *(unsigned char *)(v37 + 8) = v56;
  char v57 = *(unsigned char *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8);
  *(void *)uint64_t v38 = *(void *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
  *(unsigned char *)(v38 + 8) = v57;
  char v58 = *(unsigned char *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8);
  uint64_t v59 = v118;
  *(void *)uint64_t v118 = *(void *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
  *(unsigned char *)(v59 + 8) = v58;
  double v61 = *(double *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
  CGFloat v60 = *(double *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
  CGFloat v62 = *(double *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
  CGFloat v63 = *(double *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
  if (*(unsigned char *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera) == 1) {
    double v61 = 1.0
  }
        - v61
        - CGRectGetWidth(*(CGRect *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect));
  uint64_t v53 = v127;
  *(double *)uint64_t v33 = v61;
  *(CGFloat *)(v33 + 8) = v60;
  *(CGFloat *)(v33 + 16) = v62;
  *(CGFloat *)(v33 + 24) = v63;
  *(unsigned char *)(v33 + 32) = 0;
  int v64 = *(unsigned __int8 *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isFrontal);
  uint64_t v65 = v120;
  if (v64 != 2 && (v64 & 1) == 0)
  {
    v131.origin.CGFloat x = v61;
    v131.origin.CGFloat y = v60;
    v131.size.CGFloat width = v62;
    v131.size.CGFloat height = v63;
    double MidX = CGRectGetMidX(v131);
    v132.origin.CGFloat x = v61;
    v132.origin.CGFloat y = v60;
    v132.size.CGFloat width = v62;
    v132.size.CGFloat height = v63;
    CGRectGetMidY(v132);
    v133.origin.CGFloat x = v61;
    v133.origin.CGFloat y = v60;
    v133.size.CGFloat width = v62;
    v133.size.CGFloat height = v63;
    CGRectGetMidX(v133);
    v134.origin.CGFloat x = v61;
    v134.origin.CGFloat y = v60;
    v134.size.CGFloat width = v62;
    v134.size.CGFloat height = v63;
    double MidY = CGRectGetMidY(v134);
    v135.origin.CGFloat x = v61;
    v135.origin.CGFloat y = v60;
    v135.size.CGFloat width = v62;
    v135.size.CGFloat height = v63;
    CGFloat v68 = CGRectGetWidth(v135) * 0.614973262;
    v136.origin.CGFloat x = v61;
    v136.origin.CGFloat y = v60;
    v136.size.CGFloat width = v62;
    v136.size.CGFloat height = v63;
    CGFloat v69 = CGRectGetHeight(v136) * 0.614973262;
    *(double *)uint64_t v33 = MidX - v68 * 0.5;
    *(double *)(v33 + 8) = MidY - v69 * 0.5;
    *(CGFloat *)(v33 + 16) = v68;
    *(CGFloat *)(v33 + 24) = v69;
    *(unsigned char *)(v33 + 32) = 0;
  }
  uint64_t v70 = v126;
  uint64_t v71 = (uint64_t)v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v119, v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v53);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v53);
  sub_25434C080(v71, v109);
  uint64_t v51 = *(void *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
  LODWORD(v70) = *(unsigned __int8 *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType);
  swift_bridgeObjectRetain();
  swift_release();
  int v34 = 0;
  if (v70) {
    int v52 = 3;
  }
  else {
    int v52 = 0;
  }
  if (v65) {
    goto LABEL_21;
  }
LABEL_38:
  uint64_t v98 = 0;
  uint64_t v103 = 0;
  if ((v34 & 1) == 0)
  {
LABEL_39:
    *(unsigned char *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType) = v52;
    uint64_t v103 = v98;
  }
  if (*(unsigned char *)(v124 + 8))
  {
    char v130 = *(unsigned char *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
    uint64_t v104 = &v130;
    uint64_t v105 = 0;
  }
  else
  {
    uint64_t v105 = *(void *)v124;
    char v129 = *(unsigned char *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
    uint64_t v104 = &v129;
  }
  sub_25434930C(v105, 0, v104);
  swift_retain();
  sub_2542CE344(v32);
  swift_release();
  sub_254349610(v51, v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v106 = (uint64_t)v121;
  sub_254349BD4((uint64_t)v121);
  swift_release();
  swift_setDeallocating();
  uint64_t v107 = v123;
  unint64_t v108 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
  v108(v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, v123);
  swift_deallocClassInstance();
  return ((uint64_t (*)(uint64_t, uint64_t))v108)(v106, v107);
}

uint64_t sub_25434930C(uint64_t a1, char a2, char *a3)
{
  char v4 = *a3;
  if (a2)
  {
    a1 = 0;
  }
  else
  {
    char v17 = 3;
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_25436D290();
    sub_25436CCB0();
    sub_25436CF50();
    sub_25436CCB0();
    os_log_type_t v6 = sub_25436D000();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v17, 0, 0xE000000000000000, v6);
    swift_bridgeObjectRelease();
  }
  char v17 = v4;
  sub_2542AB324(&v17, (char *)&v15, *(double *)&a1);
  char v7 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA038);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436F130;
  *(unsigned char *)(inited + 32) = v7;
  *(void *)(inited + 40) = 0x3FF0000000000000;
  unint64_t v9 = sub_25426948C(inited);
  swift_setDeallocating();
  swift_retain();
  sub_25431317C(v9, 0, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2543472F0();
  swift_release();
  double v10 = *(double *)(*(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration) + 264);
  swift_retain();
  sub_2542A4BEC(v10, 0, (uint64_t)&v15);
  uint64_t result = swift_release();
  if (v15 != 4
    && (_BYTE)v15
    && *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) != v15)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) = v15;
    char v17 = 3;
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_25436D290();
    sub_25436CCB0();
    sub_25436D460();
    sub_25436CCB0();
    sub_25436CF50();
    uint64_t v12 = v15;
    unint64_t v13 = v16;
    os_log_type_t v14 = sub_25436D020();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v17, v12, v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_254349610(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    swift_retain();
    uint64_t v5 = a1;
  }
  else
  {
    if (!a2) {
      goto LABEL_6;
    }
    swift_retain();
    uint64_t v5 = a2;
  }
  sub_254277360(v5);
  swift_release();
LABEL_6:
  swift_retain();
  sub_2542A49DC();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t result = swift_release();
  os_log_type_t v14 = (void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  if (v12)
  {
    *os_log_type_t v14 = -1;
    v14[1] = 0;
  }
  else
  {
    *os_log_type_t v14 = v8;
    v14[1] = v10;
  }
  return result;
}

void sub_2543496E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    unint64_t v7 = sub_254351604(1);
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 56);
      double v10 = *(double *)(v9 + 8 * v7);
      unint64_t v11 = sub_254351604(0);
      if (v12)
      {
        double v13 = v10 + *(double *)(v9 + 8 * v11);
        if (fabs(v13) < 0.00001) {
          double v13 = dbl_254376420[v13 > 0.0];
        }
        double v14 = v10 / v13;
        uint64_t v15 = sub_25436C7B0();
        uint64_t v16 = *(void *)(v15 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v6, a2, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v15);
        swift_retain();
        swift_retain();
        sub_25435D340(0, 1, (uint64_t)v6, v14);
        swift_release();
        swift_release();
        sub_25425042C((uint64_t)v6, &qword_269DD7A40);
      }
    }
  }
}

uint64_t sub_25434989C()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker))
  {
    swift_retain();
    BOOL v5 = sub_254347644();
    swift_release();
    if (!v5) {
      return 0;
    }
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker))
  {
    swift_retain();
    BOOL v6 = sub_254347644();
    swift_release();
    if (!v6) {
      return 0;
    }
  }
  unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (v7 >> 62) {
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_25436D530())
  {
    uint64_t v27 = v8;
    uint64_t v9 = 0;
    double v10 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    unint64_t v11 = (void (**)(char *, uint64_t))(v2 + 8);
    if ((v7 & 0xC000000000000001) != 0)
    {
      while (1)
      {
        uint64_t v12 = MEMORY[0x25A275A00](v9, v7);
        uint64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          break;
        }
        uint64_t v2 = v12;
        char v14 = *(unsigned char *)(v12 + *(void *)(*(void *)v12 + 240));
        (*v10)(v4, v12 + qword_269DDAA28, v1);
        sub_25436C700();
        double v16 = v15;
        (*v11)(v4, v1);
        uint64_t v17 = *(void *)(v2 + qword_269DDAA20);
        if (v14) {
          double v18 = *(double *)(v17 + 64);
        }
        else {
          double v18 = *(double *)(v17 + 56);
        }
        swift_unknownObjectRelease();
        if (v18 >= v16) {
          goto LABEL_21;
        }
        ++v9;
        if (v13 == v27) {
          goto LABEL_14;
        }
      }
      __break(1u);
    }
    else
    {
      while (1)
      {
        uint64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          break;
        }
        uint64_t v2 = *(void *)(v7 + 8 * v9 + 32);
        char v21 = *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 240));
        (*v10)(v4, v2 + qword_269DDAA28, v1);
        swift_retain();
        sub_25436C700();
        double v23 = v22;
        (*v11)(v4, v1);
        uint64_t v24 = *(void *)(v2 + qword_269DDAA20);
        if (v21) {
          double v25 = *(double *)(v24 + 64);
        }
        else {
          double v25 = *(double *)(v24 + 56);
        }
        swift_release();
        if (v25 >= v23)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v9;
        if (v20 == v27) {
          goto LABEL_14;
        }
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_254349BD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v138 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v131 = (uint64_t)&v109 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v130 = (uint64_t)&v109 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v129 = (uint64_t)&v109 - v11;
  uint64_t v127 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x270FA5388](v127);
  uint64_t v128 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v109 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v134 = (uint64_t)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25436C800();
  uint64_t v139 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v142 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  CGRect v136 = (char *)&v109 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v109 - v23;
  uint64_t v132 = sub_25436C7B0();
  uint64_t v25 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v126 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  CGRect v133 = (char *)&v109 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v109 - v30;
  uint64_t v32 = type metadata accessor for DKMotion3();
  uint64_t v144 = *(void *)(v32 - 8);
  uint64_t v145 = v32;
  MEMORY[0x270FA5388](v32);
  int v34 = (char *)&v109 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
  swift_retain();
  uint64_t v36 = a1;
  sub_2542CF4A4(a1);
  uint64_t v37 = *(void *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (!v37) {
    return 0;
  }
  uint64_t v122 = v15;
  uint64_t v38 = v37 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion;
  uint64_t v135 = v37;
  sub_25428CF24(v37 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  sub_25434ABB0((uint64_t)v34);
  sub_25428CA3C((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  unint64_t v146 = (char *)v25;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v120 = v31;
  uint64_t v40 = v36;
  uint64_t v41 = v132;
  v39(v31, v40, v132);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16);
  char v121 = v24;
  uint64_t v137 = v139 + 16;
  uint64_t v143 = v42;
  v42((uint64_t)v24, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v18);
  double v43 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  double v44 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 8);
  double v45 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 16);
  double v46 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 24);
  uint64_t v47 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity + 8);
  v153[0] = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  v153[1] = v47;
  uint64_t v125 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
  uint64_t v119 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
  uint64_t v48 = v38;
  uint64_t v49 = v134;
  uint64_t v50 = v135;
  sub_25428CF24(v48, v134, (uint64_t (*)(void))type metadata accessor for DKMotion3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v144 + 56))(v49, 0, 1, v145);
  v39(v133, v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, v41);
  uint64_t v118 = *(void *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
  uint64_t v117 = *(void *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
  int v116 = *(unsigned __int8 *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw + 8);
  uint64_t v115 = *(void *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
  int v114 = *(unsigned __int8 *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch + 8);
  uint64_t v113 = *(void *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
  int v112 = *(unsigned __int8 *)(v50 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll + 8);
  uint64_t v123 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker;
  uint64_t v51 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  uint64_t v124 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker;
  uint64_t v52 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  uint64_t v141 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers;
  unint64_t v140 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (v51)
  {
    uint64_t v53 = *(void *)(v51 + *(void *)(*(void *)v51 + 200));
    swift_retain();
    uint64_t v54 = (uint64_t)v146;
    if (v52)
    {
LABEL_4:
      uint64_t v145 = *(void *)(v52 + *(void *)(*(void *)v52 + 200));
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v54 = (uint64_t)v146;
    if (v52) {
      goto LABEL_4;
    }
  }
  uint64_t v145 = 0;
LABEL_8:
  *(void *)&long long v150 = MEMORY[0x263F8EE78];
  if (v140 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t result = sub_25436D530();
    uint64_t v56 = result;
  }
  else
  {
    uint64_t v56 = *(void *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_retain();
  }
  uint64_t v111 = v51;
  uint64_t v110 = v52;
  if (v56)
  {
    if (v56 >= 1)
    {
      uint64_t v58 = v2;
      uint64_t v59 = 0;
      unint64_t v60 = v140 & 0xC000000000000001;
      unint64_t v61 = v140 + 32;
      while (1)
      {
        if (v60)
        {
          uint64_t v62 = MEMORY[0x25A275A00](v59++, v140);
          uint64_t v63 = *(void *)(v62 + *(void *)(*(void *)v62 + 200));
          swift_retain();
          swift_unknownObjectRelease();
          if (v63) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v64 = *(void *)(v61 + 8 * v59++);
          if (*(void *)(v64 + *(void *)(*(void *)v64 + 200)))
          {
            swift_retain();
LABEL_13:
            MEMORY[0x25A275490]();
            if (*(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_25436CE10();
            }
            sub_25436CE60();
            sub_25436CDE0();
            uint64_t v54 = (uint64_t)v146;
          }
        }
        if (v59 == v56)
        {
          swift_bridgeObjectRelease();
          unint64_t v65 = v150;
          goto LABEL_24;
        }
      }
    }
    __break(1u);
    goto LABEL_50;
  }
  swift_bridgeObjectRelease();
  unint64_t v65 = MEMORY[0x263F8EE78];
  uint64_t v58 = v2;
LABEL_24:
  uint64_t v66 = v139;
  swift_bridgeObjectRelease();
  uint64_t v67 = v145;
  swift_retain();
  swift_retain();
  uint64_t v68 = sub_254278FE0(v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  *(void *)&long long v150 = 0;
  *((void *)&v150 + 1) = v53;
  uint64_t v151 = v67;
  uint64_t v152 = v68;
  uint64_t v109 = *(void *)(v58 + v125);
  uint64_t v69 = 1;
  uint64_t v144 = *(void *)(v66 + 56);
  uint64_t v145 = v66 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144)(v129, 1, 1, v18);
  uint64_t v70 = *(void *)(v58 + v123);
  if (v70)
  {
    uint64_t v71 = v130;
    v143(v130, v70 + qword_269DDA9F0, v18);
    uint64_t v69 = 0;
    uint64_t v72 = v131;
  }
  else
  {
    uint64_t v72 = v131;
    uint64_t v71 = v130;
  }
  uint64_t v73 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144)(v71, v69, 1, v18);
  uint64_t v74 = v58;
  uint64_t v75 = *(void *)(v58 + v124);
  if (v75)
  {
    v143(v72, v75 + qword_269DDA9F0, v18);
    uint64_t v73 = 0;
  }
  uint64_t v76 = (uint64_t)v138;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144)(v72, v73, 1, v18);
  unint64_t v77 = *(void *)(v58 + v141);
  if (v77 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v74 = v58;
    uint64_t result = sub_25436D530();
    uint64_t v78 = result;
  }
  else
  {
    uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  uint64_t v125 = v74;
  unint64_t v79 = MEMORY[0x263F8EE78];
  if (!v78) {
    goto LABEL_45;
  }
  if (v78 >= 1)
  {
    uint64_t v141 = v78;
    uint64_t v80 = 0;
    unint64_t v81 = v77;
    unint64_t v82 = v77 & 0xC000000000000001;
    uint64_t v83 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
    char v84 = (void (**)(char *, uint64_t, uint64_t))(v139 + 32);
    do
    {
      if (v82)
      {
        uint64_t v85 = MEMORY[0x25A275A00](v80, v81);
      }
      else
      {
        uint64_t v85 = *(void *)(v81 + 8 * v80 + 32);
        swift_retain();
      }
      v143(v76, v85 + qword_269DDA9F0, v18);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v144)(v76, 0, 1, v18);
      swift_release();
      if ((*v83)(v76, 1, v18) == 1)
      {
        sub_25425042C(v76, &qword_269DD7F58);
        uint64_t v54 = (uint64_t)v146;
      }
      else
      {
        unint64_t v86 = *v84;
        double v87 = v136;
        (*v84)(v136, v76, v18);
        v86(v142, (uint64_t)v87, v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v79 = sub_2542584AC(0, *(void *)(v79 + 16) + 1, 1, v79);
        }
        unint64_t v89 = *(void *)(v79 + 16);
        unint64_t v88 = *(void *)(v79 + 24);
        if (v89 >= v88 >> 1) {
          unint64_t v79 = sub_2542584AC(v88 > 1, v89 + 1, 1, v79);
        }
        *(void *)(v79 + 16) = v89 + 1;
        v86((char *)(v79+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v89), (uint64_t)v142, v18);
        uint64_t v76 = (uint64_t)v138;
        uint64_t v54 = (uint64_t)v146;
      }
      ++v80;
    }
    while (v141 != v80);
LABEL_45:
    swift_bridgeObjectRelease_n();
    uint64_t v90 = v126;
    sub_25436C6E0();
    uint64_t v91 = (int *)v127;
    long long v92 = v128;
    unint64_t v146 = &v128[*(int *)(v127 + 28)];
    uint64_t v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v144;
    ((void (*)(void))v144)();
    uint64_t v94 = (uint64_t)&v92[v91[8]];
    v93(v94, 1, 1, v18);
    uint64_t v95 = (uint64_t)&v92[v91[9]];
    v93(v95, 1, 1, v18);
    uint64_t v96 = v91[10];
    *(void *)&v92[v96] = MEMORY[0x263F8EE78];
    *(void *)long long v92 = v109;
    *((void *)v92 + 1) = 0;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v92[v91[6]], v90, v132);
    sub_25434C080(v129, (uint64_t)v146);
    sub_25434C080(v130, v94);
    sub_25434C080(v131, v95);
    swift_bridgeObjectRelease();
    *(void *)&v92[v96] = v79;
    uint64_t v97 = (uint64_t)v122;
    sub_2542E5520((uint64_t)v92, (uint64_t)v122);
    double v98 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
    double v99 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 8);
    double v100 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 16);
    double v101 = *(double *)(v135 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 24);
    uint64_t v102 = v125;
    uint64_t v103 = *(void *)(v125 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
    uint64_t v104 = sub_254272A08();
    uint64_t v105 = sub_254272A08();
    uint64_t v106 = *(void *)(v102 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence);
    uint64_t v107 = sub_254272A08();
    uint64_t v108 = sub_254272A08();
    char v149 = *(unsigned char *)(v102 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType);
    char v148 = *(unsigned char *)(v102 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification);
    char v147 = *(unsigned char *)(v102 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection);
    type metadata accessor for DKPersonTrackerState(0);
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v55 = sub_2542DFDA4((uint64_t)v120, (uint64_t)v121, v153, -1, v119, v119, v134, (uint64_t)v133, v43, v44, v45, v46, v98, v99, v100, v101, v118, v117, v116,
            v115,
            v114,
            v113,
            v112,
            v111,
            v110,
            v140,
            &v150,
            v97,
            v103,
            v104,
            v105,
            v106,
            v107,
            v108,
            &v149,
            &v148,
            &v147);
    sub_25434ACEC();
    swift_release();
    return v55;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_25434ABB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t result = type metadata accessor for DKMotion3();
  uint64_t v5 = *(void *)(a1 + *(int *)(result + 24));
  if (*(void *)(v5 + 16))
  {
    double v6 = fabs(*(double *)(v5 + 32));
    if (v6 >= 0.05)
    {
      if (v6 >= 0.1) {
        uint64_t v7 = &unk_2703B1DD0;
      }
      else {
        uint64_t v7 = &unk_2703B1DA0;
      }
    }
    else
    {
      uint64_t v7 = &unk_2703B1D70;
    }
    unint64_t v8 = sub_254268D24((uint64_t)v7);
    swift_retain();
    sub_2543139D8(v8, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_2543472F0();
    swift_release();
    swift_retain();
    sub_2542A4DE4(&v9, 0x3FECCCCCCCCCCCCDLL, 0);
    uint64_t result = swift_release();
    if (v9 != 3) {
      *(unsigned char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification) = v9;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25434ACEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
  uint64_t v3 = swift_retain();
  MEMORY[0x25A275490](v3);
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_31;
  }
  while (1)
  {
    sub_25436CE60();
    uint64_t result = sub_25436CDE0();
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_25436D530();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration);
    if (*(void *)(v6 + 72) >= v5) {
      return result;
    }
    while (1)
    {
      uint64_t v1 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (!v8) {
          goto LABEL_28;
        }
      }
      else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      uint64_t v1 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (!v9) {
          goto LABEL_29;
        }
      }
      else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if ((v1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v1 = MEMORY[0x25A275A00](0, v1);
LABEL_12:
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_25436D530();
        swift_bridgeObjectRelease();
        if (!v10) {
          goto LABEL_30;
        }
      }
      else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_30;
      }
      sub_25425A8CC(0, 1);
      uint64_t result = swift_release();
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_25436D530();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (*(void *)(v6 + 72) >= v7) {
        return result;
      }
    }
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v1 = *(void *)(v1 + 32);
      swift_retain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_25436CE10();
  }
}

uint64_t sub_25434AF4C(char a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  if (v3) {
    *(unsigned char *)(v3 + *(void *)(*(void *)v3 + 240)) = a1 & 1;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  if (v4) {
    *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 240)) = a1 & 1;
  }
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_25436D530();
    uint64_t v6 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_14;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    char v9 = a1 & 1;
    do
    {
      uint64_t v10 = MEMORY[0x25A275A00](v8++, v5);
      *(unsigned char *)(v10 + *(void *)(*(void *)v10 + 240)) = v9;
      swift_unknownObjectRelease();
    }
    while (v6 != v8);
  }
  else
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      uint64_t v12 = *(void *)(v5 + 8 * i + 32);
      *(unsigned char *)(v12 + *(void *)(*(void *)v12 + 240)) = a1 & 1;
    }
  }
LABEL_14:
  return swift_bridgeObjectRelease();
}

uint64_t DKPersonTracker.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, &qword_269DD7F58);
  sub_25425042C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, &qword_269DD7F58);
  sub_25428CA3C(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger;
  uint64_t v5 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
  uint64_t v7 = sub_25436C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v2);
  return v0;
}

uint64_t DKPersonTracker.__deallocating_deinit()
{
  DKPersonTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_25434B390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_25434B408()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
}

uint64_t sub_25434B41C(uint64_t result)
{
  *(void *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = result;
  return result;
}

uint64_t (*sub_25434B430())()
{
  return nullsub_1;
}

uint64_t sub_25434B45C()
{
  return sub_25434989C() & 1;
}

BOOL sub_25434B484()
{
  return sub_2543483C8();
}

uint64_t sub_25434B4AC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera;
  sub_25428CA3C(v4, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428CF24(a1, v4, (uint64_t (*)(void))type metadata accessor for DKCamera);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter)
     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  swift_retain();
  sub_25428CA3C(v5, (uint64_t (*)(void))type metadata accessor for DKCamera);
  sub_25428CF24(a1, v5, (uint64_t (*)(void))type metadata accessor for DKCamera);
  return swift_release();
}

uint64_t sub_25434B568(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_25434B5F0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v23 = *(void *)(a1 + 16);
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_2542E27D8(0, v1, 0);
    uint64_t v4 = sub_25434B568(a1);
    uint64_t v5 = v23;
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 64;
    char v8 = *(unsigned char *)(a1 + 32);
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v8)
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_28;
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v4);
      double v12 = 0.5;
      if (*(unsigned char *)(v11 + 33) == 1)
      {
        if (*(unsigned char *)(v11 + 32) == 1)
        {
          uint64_t v13 = v3;
          long double v14 = atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
          uint64_t v3 = v13;
          uint64_t v5 = v23;
          double v12 = v14;
        }
        else
        {
          double v12 = *(double *)(v11 + 40);
        }
      }
      unint64_t v16 = *(void *)(v24 + 16);
      unint64_t v15 = *(void *)(v24 + 24);
      if (v16 >= v15 >> 1)
      {
        uint64_t v22 = v3;
        sub_2542E27D8(v15 > 1, v16 + 1, 1);
        uint64_t v3 = v22;
        uint64_t v5 = v23;
      }
      *(void *)(v24 + 16) = v16 + 1;
      *(double *)(v24 + 8 * v16 + 32) = v12;
      char v8 = *(unsigned char *)(a1 + 32);
      unint64_t v9 = 1 << v8;
      if (v4 >= 1 << v8) {
        goto LABEL_29;
      }
      uint64_t v17 = *(void *)(v7 + 8 * v10);
      if ((v17 & (1 << v4)) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_31;
      }
      unint64_t v18 = v17 & (-2 << (v4 & 0x3F));
      if (v18)
      {
        unint64_t v9 = __clz(__rbit64(v18)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v19 = v10 + 1;
        unint64_t v20 = (v9 + 63) >> 6;
        if (v10 + 1 < v20)
        {
          unint64_t v21 = *(void *)(v7 + 8 * v19);
          if (v21)
          {
LABEL_24:
            unint64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
          }
          else
          {
            while (v20 - 2 != v10)
            {
              unint64_t v21 = *(void *)(a1 + 80 + 8 * v10++);
              if (v21)
              {
                unint64_t v19 = v10 + 1;
                goto LABEL_24;
              }
            }
          }
        }
      }
      ++v6;
      uint64_t v4 = v9;
      if (v6 == v5) {
        return;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_25434B830(uint64_t a1, double *a2, uint64_t a3, uint64_t (*a4)(), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v58 = a5;
  uint64_t v59 = a1;
  uint64_t v50 = a4;
  uint64_t v60 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)&v49 - v11;
  uint64_t v12 = type metadata accessor for DKCamera();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v56 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25436C7B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v49 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId;
  uint64_t v18 = sub_25436C800();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v53 = v19;
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v20(v17, 1, 1, v18);
  uint64_t v52 = v18;
  v20(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, 1, 1, v18);
  sub_25436C9E0();
  unint64_t v21 = (void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  void *v21 = -1;
  v21[1] = 0;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = 0;
  uint64_t v22 = MEMORY[0x263F8EE78];
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = MEMORY[0x263F8EE78];
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history) = v22;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = 0;
  uint64_t v23 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter;
  type metadata accessor for DKPersonSelectionFilter(0);
  swift_allocObject();
  *(void *)(v6 + v23) = sub_25436AB80(1);
  uint64_t v24 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
  type metadata accessor for DKPersonRankingFilter();
  swift_allocObject();
  *(void *)(v6 + v24) = sub_25435E1E4();
  uint64_t v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8010);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = -1;
  *(void *)(v26 + 24) = 0x3FF0000000000000;
  *(void *)(v6 + v25) = v26;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer) = v22;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) = 3;
  sub_25436C6E0();
  uint64_t v57 = v15;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v28 = v59;
  uint64_t v55 = v14;
  v27(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, v59, v14);
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration) = a2;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v60, v18);
  uint64_t v29 = v58;
  uint64_t v50 = type metadata accessor for DKCamera;
  sub_25428CF24(v58, v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(void))type metadata accessor for DKCamera);
  double v30 = a2[2];
  double v31 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_269DD8770);
  swift_allocObject();
  swift_retain();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter) = sub_2542A7C48(MEMORY[0x263F8EE78], v30, v31);
  uint64_t v32 = (uint64_t)v49;
  v27((uint64_t)v49, v28, v14);
  uint64_t v33 = v56;
  sub_25428CF24(v29, v56, (uint64_t (*)(void))type metadata accessor for DKCamera);
  type metadata accessor for DKPersonMotionFilter(0);
  swift_allocObject();
  swift_retain();
  uint64_t v34 = sub_2542D12C0(v32, a2, v33);
  swift_release();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter) = v34;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v35 = (uint64_t)v51;
  uint64_t v36 = v55;
  v49(v51, 1, 1, v55);
  uint64_t v56 = type metadata accessor for DKBinaryProbabilityFilter();
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 49) = 0;
  *(void *)(v37 + 24) = 0;
  uint64_t v38 = v54;
  sub_2542503C8(v35, v54, &qword_269DD7A40);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  uint64_t v39 = sub_25435D778(0, 0, 0x3FE0000000000000, 0, 0, v38, 0, 1, 0.1, 0, 1);
  sub_25425042C(v35, &qword_269DD7A40);
  *(void *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = 0x3FE0000000000000;
  *(void *)(v37 + 40) = 0;
  *(unsigned char *)(v37 + 48) = 1;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) = v37;
  uint64_t v40 = v36;
  uint64_t v41 = v36;
  uint64_t v42 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v49;
  v49((char *)v35, 1, 1, v40);
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 49) = 0;
  *(void *)(v43 + 24) = 0;
  sub_2542503C8(v35, v38, &qword_269DD7A40);
  swift_allocObject();
  uint64_t v44 = sub_25435D778(0, 0, 0x3FE0000000000000, 0, 0, v38, 0, 1, 0.1, 0, 1);
  sub_25425042C(v35, &qword_269DD7A40);
  *(void *)(v43 + 16) = v44;
  *(void *)(v43 + 32) = 0x3FE0000000000000;
  *(void *)(v43 + 40) = 0;
  *(unsigned char *)(v43 + 48) = 1;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) = v43;
  v42(v35, 1, 1, v41);
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 49) = 0;
  *(void *)(v45 + 24) = 0;
  sub_2542503C8(v35, v38, &qword_269DD7A40);
  swift_allocObject();
  uint64_t v46 = sub_25435D778(0, 0, 0x3FF0000000000000, 0, 0, v38, 0, 1, 1.0, 0, 1);
  sub_25425042C(v35, &qword_269DD7A40);
  *(void *)(v45 + 16) = v46;
  *(void *)(v45 + 32) = 0x3FE0000000000000;
  *(void *)(v45 + 40) = 0;
  *(unsigned char *)(v45 + 48) = 1;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_saliencyFilter) = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA040);
  swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_motionClassificationFilter) = sub_2542A8290((uint64_t)&unk_2703B2410, 0.1, 0.1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA048);
  swift_allocObject();
  uint64_t v47 = sub_2542A85BC((uint64_t)&unk_2703B2438, 0.5, 0.5);
  sub_25428CA3C(v58, (uint64_t (*)(void))v50);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v60, v52);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v55);
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceDirectionFilter) = v47;
  return v6;
}

uint64_t sub_25434C080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_25434C0E8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_25434C0F8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 176) = *a1;
  return result;
}

double sub_25434C108@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 184);
  *a2 = result;
  return result;
}

double sub_25434C118(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 184) = *a1;
  return result;
}

double sub_25434C128@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 192);
  *a2 = result;
  return result;
}

double sub_25434C138(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 192) = *a1;
  return result;
}

double sub_25434C148@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 200);
  *a2 = result;
  return result;
}

double sub_25434C158(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 200) = *a1;
  return result;
}

double sub_25434C168@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 208);
  *a2 = result;
  return result;
}

double sub_25434C178(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 208) = *a1;
  return result;
}

double sub_25434C188@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 216);
  *a2 = result;
  return result;
}

double sub_25434C198(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 216) = *a1;
  return result;
}

double sub_25434C1A8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 224);
  *a2 = result;
  return result;
}

double sub_25434C1B8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 224) = *a1;
  return result;
}

double sub_25434C1C8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 232);
  *a2 = result;
  return result;
}

double sub_25434C1D8(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 232) = *a1;
  return result;
}

uint64_t sub_25434C1E8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 240);
  return result;
}

unsigned char *sub_25434C1F8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 240) = *result;
  return result;
}

double sub_25434C208@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 248);
  *a2 = result;
  return result;
}

double sub_25434C218(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 248) = *a1;
  return result;
}

double sub_25434C228@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 256);
  *a2 = result;
  return result;
}

double sub_25434C238(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 256) = *a1;
  return result;
}

double sub_25434C248@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 264);
  *a2 = result;
  return result;
}

double sub_25434C258(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 264) = *a1;
  return result;
}

uint64_t sub_25434C268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_35Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, MEMORY[0x263F07490], a2);
}

uint64_t sub_25434C288(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254347DAC(a1, a2, a3, a4, MEMORY[0x263F07490], &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate);
}

uint64_t sub_25434C2BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542503C8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, a2, &qword_269DD7F58);
}

uint64_t sub_25434C2F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254347B78(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId);
}

uint64_t sub_25434C310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2542503C8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, a2, &qword_269DD7F58);
}

uint64_t sub_25434C344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254347B78(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId);
}

uint64_t sub_25434C364@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25428CF24(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, a2, (uint64_t (*)(void))type metadata accessor for DKCamera);
}

uint64_t sub_25434C3A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_35Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, MEMORY[0x263F90268], a2);
}

uint64_t keypath_get_35Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1 + *a2;
  uint64_t v6 = a3(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a4, v5, v6);
}

uint64_t sub_25434C440(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_254347DAC(a1, a2, a3, a4, MEMORY[0x263F90268], &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger);
}

void *sub_25434C474@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
  return result;
}

void *sub_25434C48C(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = *result;
  return result;
}

double sub_25434C4A4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  double result = *(double *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_25434C4C8(uint64_t a1, void *a2)
{
  double result = *(double *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  *(void *)uint64_t v3 = *(void *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t sub_25434C4EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter);
  return swift_retain();
}

uint64_t sub_25434C504(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter);
}

uint64_t sub_25434C510@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker, a2);
}

uint64_t sub_25434C51C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
}

uint64_t sub_25434C528@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker, a2);
}

uint64_t sub_25434C534(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
}

uint64_t sub_25434C540@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25434C558(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
}

uint64_t sub_25434C564@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
  return swift_retain();
}

uint64_t sub_25434C57C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
}

uint64_t sub_25434C588@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
  return swift_bridgeObjectRetain();
}

uint64_t sub_25434C5A0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_14Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
}

uint64_t sub_25434C5AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_47Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints, a2);
}

uint64_t sub_25434C5B8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
}

uint64_t sub_25434C5C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
  return swift_retain();
}

uint64_t sub_25434C5DC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
}

uint64_t sub_25434C5E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
  return swift_retain();
}

uint64_t sub_25434C600(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_61Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
}

uint64_t type metadata accessor for DKPersonTrackerConfiguration()
{
  return self;
}

uint64_t method lookup function for DKPersonTrackerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonTrackerConfiguration);
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 944))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 992))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1000))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1008))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1040))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1048))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1072))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1080))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1096))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1104))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1112))();
}

uint64_t sub_25434CC78()
{
  return type metadata accessor for DKPersonTracker();
}

uint64_t type metadata accessor for DKPersonTracker()
{
  uint64_t result = qword_269DDA028;
  if (!qword_269DDA028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25434CCCC()
{
  sub_25436C7B0();
  if (v0 <= 0x3F)
  {
    sub_254300CBC();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DKCamera();
      if (v2 <= 0x3F)
      {
        sub_25436C9F0();
        if (v3 <= 0x3F)
        {
          sub_25436C800();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for DKPersonTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKPersonTracker);
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonTracker.history.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of DKPersonTracker.history.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonTracker.history.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonTracker.__allocating_init(currentTime:configuration:uuid:trackerId:camera:)()
{
  return (*(uint64_t (**)(void))(v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTracker.isActivated()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTracker.update(camera:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 976))();
}

uint64_t dispatch thunk of DKPersonTracker.update(currentTime:face:body:hands:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTracker.updateSaliency(probability:time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1008))();
}

uint64_t dispatch thunk of DKPersonTracker.isExpired(currentTime:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t dispatch thunk of DKPersonTracker.getState(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t dispatch thunk of DKPersonTracker.getHistory()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1056))();
}

uint64_t dispatch thunk of DKPersonTracker.setSelected(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1064))();
}

uint64_t sub_25434D894(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DKIntelligentTrackingErrors(uint64_t a1)
{
  return sub_25434D8BC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_25434D8BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23IntelligentTrackingCore27DKIntelligentTrackingErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25434D894(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingErrors(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25434D894(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25434D8BC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DKIntelligentTrackingErrors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25434D8BC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingErrors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingErrors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingErrors()
{
  return &type metadata for DKIntelligentTrackingErrors;
}

uint64_t sub_25434DA5C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25434DA7C, 0, 0);
}

uint64_t sub_25434DA7C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = MEMORY[0x263F8EE78];
  if (*(void *)(*(void *)(v1 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
    unint64_t v3 = *(void *)(*(void *)(v1 + 48)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  else {
    unint64_t v3 = MEMORY[0x263F8EE78];
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_25436D530();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_13;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = MEMORY[0x25A275A00](v6++, v3);
      *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      swift_release();
      unsigned __int8 v8 = *(void **)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      *(void *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
  }
  else
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(v3 + 8 * v9++ + 32);
      *(void *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      swift_retain();
      swift_release();
      uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      *(void *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      swift_release();
    }
    while (v4 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v1 + 48);
  if (*(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies)) {
    unint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  }
  else {
    unint64_t v13 = v2;
  }
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25436D530();
    uint64_t result = swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_18:
      if (v14 >= 1)
      {
        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = 0;
          do
          {
            uint64_t v16 = MEMORY[0x25A275A00](v15++, v13);
            *(void *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
            swift_release();
            uint64_t v17 = *(void **)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
            *(void *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
            swift_unknownObjectRelease();
          }
          while (v14 != v15);
        }
        else
        {
          uint64_t v18 = 0;
          do
          {
            uint64_t v19 = *(void *)(v13 + 8 * v18++ + 32);
            *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
            swift_retain();
            swift_release();
            unint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
            *(void *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
            swift_release();
          }
          while (v14 != v18);
        }
        goto LABEL_25;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v1 + 48);
  if (*(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands)) {
    unint64_t v22 = *(void *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  }
  else {
    unint64_t v22 = v2;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25436D530();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_37;
    }
  }
  if (v23 < 1)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = MEMORY[0x25A275A00](v24++, v22);
      *(void *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
      swift_unknownObjectRelease();
      swift_release();
    }
    while (v23 != v24);
  }
  else
  {
    for (uint64_t i = 0; i != v23; ++i)
    {
      uint64_t v27 = *(void *)(v22 + 8 * i + 32);
      *(void *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
      swift_release();
    }
  }
LABEL_37:
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v1 + 48);
  uint64_t v29 = *(void **)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(void *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;

  double v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v30(1);
}

uint64_t sub_25434DE8C()
{
  return type metadata accessor for DKCleanupTask();
}

uint64_t type metadata accessor for DKCleanupTask()
{
  uint64_t result = qword_269DDA050;
  if (!qword_269DDA050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL sub_25434DEE0(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t DKMotionStatisticsFilter.__allocating_init(duration:)(double a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x263F8EE78];
  *(double *)(result + 24) = a1;
  return result;
}

uint64_t DKMotionStatisticsFilter.init(duration:)(double a1)
{
  uint64_t result = v1;
  *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
  *(double *)(v1 + 24) = a1;
  return result;
}

uint64_t sub_25434DF48(uint64_t a1)
{
  uint64_t v47 = a1;
  uint64_t v44 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - v5;
  uint64_t v48 = type metadata accessor for DKMotion3();
  uint64_t v6 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v38 = (void (**)(char *, uint64_t))((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7810);
  v12.n128_f64[0] = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v45 = v6;
  uint64_t v46 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v1 + 16);
  if (*((void *)v14 + 2))
  {
    unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
    uint64_t v40 = v2 + 8;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v17 = v42;
    uint64_t v18 = (void (**)(char *, uint64_t))(v2 + 8);
    while (1)
    {
      uint64_t v19 = v46;
      sub_25434E3B4((uint64_t)v14 + v15, v46);
      uint64_t v14 = *v16;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v16)(v19, 0, 1, v48);
      sub_2542E44C8(v19);
      sub_25434E3B4(v47, (uint64_t)v10);
      uint64_t v20 = *(void *)(v1 + 16);
      if (!*(void *)(v20 + 16)) {
        break;
      }
      uint64_t v39 = v14;
      unint64_t v21 = v15;
      uint64_t v22 = v44;
      (*v41)(v17, v20 + v15, v44);
      uint64_t v23 = v43;
      sub_25436C750();
      char v24 = sub_25436C730();
      uint64_t v25 = *v18;
      (*v18)(v23, v22);
      v25(v17, v22);
      sub_254291788((uint64_t)v10);
      if ((v24 & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v1 + 16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v1 + 16) = v14;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_254363348((unint64_t)v14);
        *(void *)(v1 + 16) = v14;
      }
      unint64_t v15 = v21;
      uint64_t v27 = *((void *)v14 + 2);
      if (!v27) {
        goto LABEL_22;
      }
      uint64_t v28 = v27 - 1;
      sub_254291788((uint64_t)v14 + v21);
      uint64_t v29 = *(void *)(v45 + 72);
      if (v29 > 0 || (unint64_t)v14 + v21 >= (unint64_t)v14 + v21 + v29 + v29 * v28)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v29)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *((void *)v14 + 2) = v28;
      *(void *)(v1 + 16) = v14;
      if (!*((void *)v14 + 2))
      {
        double v30 = v39;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  double v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56);
LABEL_16:
  uint64_t v31 = v46;
  v30(v46, 1, 1, v48, v12);
  sub_2542E44C8(v31);
  sub_25434E3B4(v47, (uint64_t)v10);
  sub_254291788((uint64_t)v10);
LABEL_17:
  uint64_t v18 = v38;
  sub_25434E3B4(v47, (uint64_t)v38);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v1 + 16);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 16) = v14;
  if ((v32 & 1) == 0)
  {
LABEL_23:
    uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_254259D50(0, *((void *)v14 + 2) + 1, 1, (unint64_t)v14);
    *(void *)(v1 + 16) = v14;
  }
  uint64_t v33 = v45;
  unint64_t v35 = *((void *)v14 + 2);
  unint64_t v34 = *((void *)v14 + 3);
  if (v35 >= v34 >> 1)
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))sub_254259D50(v34 > 1, v35 + 1, 1, (unint64_t)v14);
    *(void *)(v1 + 16) = v14;
  }
  *((void *)v14 + 2) = v35 + 1;
  return sub_254291724((uint64_t)v18, (uint64_t)v14+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v35);
}

uint64_t sub_25434E3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25434E418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = type metadata accessor for DKMotion3();
  uint64_t v6 = *(void *)(v5 - 8);
  if (v4)
  {
    uint64_t v10 = *(void *)(v5 - 8);
    sub_25434E3B4(v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a1);
    uint64_t v6 = v10;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  return v8(a1, v7, 1, v5);
}

uint64_t sub_25434E4E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = type metadata accessor for DKMotion3();
    uint64_t v13 = *(void *)(v6 - 8);
    sub_25434E3B4(v3+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v5, a1);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v8 = a1;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = type metadata accessor for DKMotion3();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

void sub_25434E5F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for DKMotion3();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = v1
       + *(int *)(v3 + 20)
       + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    double v7 = 1.79769313e308;
    double v8 = -1.79769313e308;
    while (*(void *)(*(void *)v6 + 16))
    {
      uint64_t v9 = *(void *)v6;
      double v10 = *(double *)(*(void *)v6 + 32);
      if (v10 < v7) {
        double v7 = *(double *)(v9 + 32);
      }
      if (v8 <= v10) {
        double v8 = *(double *)(v9 + 32);
      }
      v6 += v5;
      if (!--v2) {
        return;
      }
    }
    __break(1u);
  }
}

void sub_25434E6D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for DKMotion3();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = v1
       + *(int *)(v3 + 20)
       + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    double v7 = 1.79769313e308;
    double v8 = -1.79769313e308;
    while (*(void *)(*(void *)v6 + 16) >= 2uLL)
    {
      uint64_t v9 = *(void *)v6;
      double v10 = *(double *)(*(void *)v6 + 40);
      if (v10 < v7) {
        double v7 = *(double *)(v9 + 40);
      }
      if (v8 <= v10) {
        double v8 = *(double *)(v9 + 40);
      }
      v6 += v5;
      if (!--v2) {
        return;
      }
    }
    __break(1u);
  }
}

void sub_25434E7B4()
{
  uint64_t v1 = type metadata accessor for DKMotion3();
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = *(int *)(v2 + 24);
    uint64_t v9 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    double v11 = 0.0;
    double v12 = 0.0;
    while (1)
    {
      sub_25434E3B4(v9, (uint64_t)v5);
      uint64_t v13 = *(void *)&v5[v8];
      uint64_t v14 = *(void *)(v13 + 16);
      if (!v14) {
        break;
      }
      if (v14 == 1) {
        goto LABEL_9;
      }
      double v15 = *(double *)(v13 + 40);
      double v12 = v12 + *(double *)(v13 + 32);
      sub_254291788((uint64_t)v5);
      double v11 = v11 + v15;
      v9 += v10;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

void sub_25434E918()
{
  uint64_t v1 = sub_25436C7B0();
  MEMORY[0x270FA5388](v1);
  uint64_t v51 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = v0;
  uint64_t v6 = *(void *)(*(void *)(v0 + 16) + 16);
  if (!v6)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (v6 != 1)
  {
    uint64_t v7 = (void (**)(char *, uint64_t))(v4 + 8);
    double v8 = 0.0;
    unint64_t v9 = 1;
    double v10 = 0.0;
    double v11 = 0.0;
    uint64_t v49 = (void (**)(char *))(v4 + 16);
    uint64_t v50 = (char *)&v46 - v5;
    uint64_t v46 = v6;
    while (1)
    {
      uint64_t v12 = *(void *)(v52 + 16);
      if (v9 >= *(void *)(v12 + 16)) {
        break;
      }
      uint64_t v13 = type metadata accessor for DKMotion3();
      unint64_t v14 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
      uint64_t v15 = v12 + v14;
      uint64_t v16 = *(void *)(*(void *)(v13 - 8) + 72);
      uint64_t v17 = *(int *)(v13 + 24);
      uint64_t v18 = *(void *)(v12 + v14 + v16 * v9 + v17);
      if (!*(void *)(v18 + 16)) {
        goto LABEL_16;
      }
      uint64_t v19 = v16 * (v9 - 1);
      uint64_t v20 = v15 + v19;
      uint64_t v21 = *(void *)(v15 + v19 + v17);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_17;
      }
      uint64_t v22 = v13;
      unint64_t v47 = v16 * v9;
      unint64_t v48 = v14;
      double v23 = *(double *)(v18 + 32);
      double v24 = *(double *)(v21 + 32);
      uint64_t v25 = v50;
      uint64_t v26 = *v49;
      unint64_t v53 = v9 - 1;
      v26(v50);
      if (v53 >= *(void *)(v12 + 16)) {
        goto LABEL_18;
      }
      uint64_t v27 = v1;
      uint64_t v28 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v26)(v51, v20, v27);
      sub_25436C700();
      double v30 = v29;
      uint64_t v31 = *v7;
      (*v7)(v28, v27);
      v31(v25, v27);
      uint64_t v32 = *(void *)(v52 + 16);
      if (v9 >= *(void *)(v32 + 16)) {
        goto LABEL_19;
      }
      uint64_t v33 = v32 + v48;
      uint64_t v34 = *(int *)(v22 + 24);
      uint64_t v35 = *(void *)(v32 + v48 + v47 + v34);
      if (*(void *)(v35 + 16) < 2uLL) {
        goto LABEL_20;
      }
      uint64_t v36 = v33 + v19;
      uint64_t v37 = *(void *)(v33 + v19 + v34);
      if (*(void *)(v37 + 16) < 2uLL) {
        goto LABEL_21;
      }
      double v38 = *(double *)(v35 + 40);
      double v39 = *(double *)(v37 + 40);
      uint64_t v40 = v50;
      v26(v50);
      if (v53 >= *(void *)(v32 + 16)) {
        goto LABEL_22;
      }
      double v8 = v8 + 1.0;
      double v41 = (v23 - v24) / v30;
      uint64_t v42 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v26)(v51, v36, v27);
      sub_25436C700();
      double v44 = v43;
      uint64_t v45 = v42;
      uint64_t v1 = v27;
      v31(v45, v27);
      v31(v40, v27);
      double v11 = v11 + v41;
      double v10 = v10 + (v38 - v39) / v44;
      if (v46 == ++v9) {
        return;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
}

uint64_t DKMotionStatisticsFilter.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMotionStatisticsFilter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKMotionStatisticsFilter()
{
  return self;
}

uint64_t method lookup function for DKMotionStatisticsFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKMotionStatisticsFilter);
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.__allocating_init(duration:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.add(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getFirst()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getLast()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getMinMaxYaw()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getMinMaxPitch()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getAverageVelocity()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getAverageAcceleration()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_25434EE84(unint64_t a1, double a2, double a3)
{
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  uint64_t v5 = v3;
  sub_2542683B0(&v12, a1);
  uint64_t v8 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement;
  unint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v5 + v8) = v9;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((a1 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = sub_2543631E4(v9);
  if ((a1 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
LABEL_4:
  if (v9[2] <= a1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(double *)&v9[a1 + 4] = a2;
  *(void *)(v5 + v8) = v9;
  uint64_t v8 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
  unint64_t v9 = *(void **)(v5 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v5 + v8) = v9;
  if ((result & 1) == 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_2543631E4(v9);
    unint64_t v9 = (void *)result;
  }
  if (v9[2] > a1)
  {
    *(double *)&v9[a1 + 4] = a3;
    *(void *)(v5 + v8) = v9;
    return result;
  }
  __break(1u);
LABEL_13:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

uint64_t DKKalmanFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKKalmanFilter.Configuration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25434F090()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_25434F098(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t DKKalmanFilter.init(configuration:stateSize:)(uint64_t a1, uint64_t a2)
{
  sub_254353F8C(a1, a2);
  uint64_t v3 = v2;
  swift_release();
  return v3;
}

uint64_t sub_25434F0D4(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25425178C(a1, a2, a3);
}

uint64_t sub_25434F100(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(void *)(v2 + 16) <= result || result < 0 || *(uint64_t *)(v2 + 24) <= 0)
  {
    uint64_t result = sub_25436D4F0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25434F188(uint64_t a1, double a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (v3[2] <= a1 || a1 < 0 || (uint64_t)v3[3] <= 0)
  {
    uint64_t result = sub_25436D4F0();
    __break(1u);
  }
  else
  {
    *(double *)(v3[4] + 8 * a1) = a2;
    return sub_254350764();
  }
  return result;
}

uint64_t sub_25434F220(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v3 = sub_25436C7B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime;
  double v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11((char *)&v54 - v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v3);
  sub_25436C6E0();
  char v12 = sub_25436C780();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v7, v3);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v13)(v9, v3);
  if ((v12 & 1) == 0)
  {
    uint64_t v55 = v10;
    uint64_t v56 = v11;
    v11(v9, v10, v3);
    sub_25436C700();
    double v16 = v15;
    v13(v9, v3);
    uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F;
    uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
    uint64_t v19 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
    uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
    swift_retain();
    swift_retain();
    uint64_t v21 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v18, v20);
    swift_release();
    swift_release();
    *(void *)(v2 + v19) = v21;
    swift_release();
    int v22 = *(unsigned __int8 *)(*(void *)(v2 + 16) + 32);
    uint64_t v54 = (void (*)(uint64_t, uint64_t))v13;
    if (v22 == 1) {
      uint64_t v17 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
    }
    double v23 = *(void **)(v2 + v17);
    uint64_t v24 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
    uint64_t v25 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
    swift_retain();
    swift_retain();
    uint64_t v26 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v23, v25);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v27 = (void *)DKMatrix<>.transpose()();
    swift_release();
    uint64_t v28 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v26, v27);
    swift_release();
    swift_release();
    double v29 = (void *)swift_retain();
    uint64_t v30 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGSd_AEtFZ_0(v29, v16);
    swift_release();
    uint64_t v31 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v28, v30);
    swift_release();
    swift_release();
    *(void *)(v2 + v24) = v31;
    swift_release();
    sub_254350764();
    sub_25435092C();
    uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize);
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
    uint64_t v33 = v57;
    uint64_t v35 = v55;
    if ((v32 & 0x8000000000000000) == 0)
    {
      if (!v32)
      {
LABEL_30:
        v54(v35, v3);
        return v34(v35, v33, v3);
      }
      uint64_t v36 = 0;
      uint64_t v37 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
      uint64_t v38 = v37[2];
      while (v36 != v32)
      {
        if (v36 == (v38 & ~(v38 >> 63))) {
          goto LABEL_40;
        }
        uint64_t v39 = v37[3];
        if (v39 < 1) {
          goto LABEL_40;
        }
        uint64_t v40 = v37[4];
        if ((~*(void *)(v40 + 8 * v36) & 0x7FF0000000000000) == 0) {
          goto LABEL_40;
        }
        uint64_t v41 = v36 + 1;
        uint64_t v42 = *(void *)(v2 + 16);
        uint64_t v43 = v37[2];
        uint64_t v44 = 1;
        uint64_t v45 = v38;
        while (1)
        {
          uint64_t v46 = v44 - 1;
          uint64_t v47 = (v44 - 1) * v45;
          if ((unsigned __int128)((v44 - 1) * (__int128)v45) >> 64 != v47 >> 63)
          {
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          if (__OFADD__(v47, v36)) {
            goto LABEL_33;
          }
          double v48 = *(double *)(v40 + 8 * (v47 + v36));
          if (*(double *)(v42 + 16) > v48) {
            double v48 = *(double *)(v42 + 16);
          }
          if (*(double *)(v42 + 24) < v48) {
            double v48 = *(double *)(v42 + 24);
          }
          if (v36 >= v43 || v46 >= v39) {
            goto LABEL_40;
          }
          uint64_t v49 = v46 * v43;
          if ((unsigned __int128)(v46 * (__int128)v43) >> 64 != (v46 * v43) >> 63) {
            goto LABEL_34;
          }
          BOOL v50 = __OFADD__(v49, v36);
          uint64_t v51 = v49 + v36;
          if (v50) {
            goto LABEL_35;
          }
          *(double *)(v40 + 8 * v51) = v48;
          if (v32 == v44) {
            break;
          }
          uint64_t v45 = v37[2];
          if (v36 >= v45) {
            goto LABEL_40;
          }
          uint64_t v39 = v37[3];
          if (v44 >= v39) {
            goto LABEL_40;
          }
          uint64_t v52 = v44 * v45;
          if ((unsigned __int128)(v44 * (__int128)v45) >> 64 != (v44 * v45) >> 63) {
            goto LABEL_36;
          }
          BOOL v50 = __OFADD__(v52, v36);
          uint64_t v53 = v52 + v36;
          if (v50) {
            goto LABEL_37;
          }
          ++v44;
          if ((~*(void *)(v37[4] + 8 * v53) & 0x7FF0000000000000) == 0) {
            goto LABEL_40;
          }
        }
        ++v36;
        if (v41 == v32) {
          goto LABEL_30;
        }
      }
LABEL_38:
      __break(1u);
    }
    __break(1u);
LABEL_40:
    uint64_t result = sub_25436D4F0();
    __break(1u);
  }
  return result;
}

void sub_25434F738(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v43 - v9;
  uint64_t v12 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices;
  if (!*(void *)(*(void *)(a1
                              + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices)
                  + 16))
    return;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v44 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime;
  uint64_t v45 = v13;
  ((void (*)(char *, double))v13)((char *)&v43 - v9, v10);
  sub_25436C6E0();
  sub_254354AFC((unint64_t *)&qword_269DD8FB8, MEMORY[0x263F07490]);
  char v14 = sub_25436CBB0();
  uint64_t v46 = v5;
  double v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  v15(v11, v4);
  if ((v14 & 1) == 0)
  {
    uint64_t v28 = v45;
    v45(v11, a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time, v4);
    (*(void (**)(char *))(*(void *)v2 + 456))(v11);
    v15(v11, v4);
    sub_25434FEC4(a1);
    uint64_t v27 = v46;
LABEL_33:
    uint64_t v41 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
    v28(v11, a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time, v4);
    uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 40);
    v42(v44, v11, v4);
    v28(v11, v41, v4);
    v42(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v11, v4);
    return;
  }
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(a1 + v12);
  uint64_t v18 = v17 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v17 + 56);
  uint64_t v22 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  uint64_t v23 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement;
  uint64_t v24 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
  uint64_t v25 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
  int64_t v26 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v28 = v45;
  uint64_t v27 = v46;
  if (!v21) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v29 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v29 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v16 << 6))
  {
    int64_t v34 = *(void *)(*(void *)(v17 + 48) + 8 * i);
    if (v34 < 0)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v35 = *(void *)(a1 + v23);
    if ((unint64_t)v34 >= *(void *)(v35 + 16)) {
      goto LABEL_36;
    }
    uint64_t v36 = *(void **)(v2 + v22);
    if (v34 >= v36[2] || (uint64_t)v36[3] <= 0) {
      goto LABEL_42;
    }
    *(void *)(v36[4] + 8 * v34) = *(void *)(v35 + 8 * v34 + 32);
    uint64_t v37 = *(void *)(a1 + v25);
    if ((unint64_t)v34 >= *(void *)(v37 + 16)) {
      goto LABEL_37;
    }
    uint64_t v38 = *(void **)(v2 + v24);
    uint64_t v39 = v38[2];
    if (v34 >= v39 || v34 >= v38[3]) {
      goto LABEL_42;
    }
    uint64_t v40 = v34 * v39;
    if ((unsigned __int128)(v34 * (__int128)v39) >> 64 != (v34 * v39) >> 63) {
      goto LABEL_38;
    }
    if (__OFADD__(v40, v34)) {
      goto LABEL_39;
    }
    *(void *)(v38[4] + 8 * (v40 + v34)) = *(void *)(v37 + 8 * v34 + 32);
    if (v21) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v31 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_40;
    }
    if (v31 >= v26) {
      goto LABEL_33;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v31);
    ++v16;
    if (!v32)
    {
      int64_t v16 = v31 + 1;
      if (v31 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v32 = *(void *)(v18 + 8 * v16);
      if (!v32)
      {
        int64_t v16 = v31 + 2;
        if (v31 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v32 = *(void *)(v18 + 8 * v16);
        if (!v32) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v21 = (v32 - 1) & v32;
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v26) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v18 + 8 * v33);
  if (v32)
  {
    int64_t v16 = v33;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v16 >= v26) {
      goto LABEL_33;
    }
    unint64_t v32 = *(void *)(v18 + 8 * v16);
    ++v33;
    if (v32) {
      goto LABEL_20;
    }
  }
LABEL_41:
  __break(1u);
LABEL_42:
  sub_25436D4F0();
  __break(1u);
}

uint64_t DKKalmanFilter.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

BOOL sub_25434FCF0()
{
  uint64_t v1 = sub_25436C7B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))((char *)&v12 - v7, v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v1, v6);
  sub_25436C6E0();
  sub_254354AFC((unint64_t *)&qword_269DD8FB8, MEMORY[0x263F07490]);
  char v9 = sub_25436CBB0();
  double v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v4, v1);
  v10(v8, v1);
  return (v9 & 1) == 0;
}

uint64_t sub_25434FE6C(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25425178C(a1, a2, a3);
}

uint64_t sub_25434FE98(uint64_t a1, uint64_t a2, double a3)
{
  return sub_25425178C(a1, a2, a3);
}

uint64_t sub_25434FEC4(uint64_t a1)
{
  v96[31] = *MEMORY[0x263EF8340];
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_2543523D0(v1);
  swift_bridgeObjectRelease();
  v96[0] = (uint64_t)v2;
  swift_retain();
  sub_254352364(v96);
  swift_release();
  uint64_t v3 = v96[0];
  unint64_t v4 = *(void *)(v96[0] + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v4;
  inited[3] = 1;
  if (v4 >> 60)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  double v6 = inited;
  inited[4] = swift_slowAlloc();
  v6[5] = v4;
  uint64_t v85 = (uint64_t)v6;
  sub_254350D9C(0.0);
  uint64_t v7 = (void *)swift_initStackObject();
  uint64_t v7[2] = v4;
  v7[3] = 1;
  v7[4] = swift_slowAlloc();
  v7[5] = v4;
  uint64_t v91 = v7;
  sub_254350D9C(0.0);
  uint64_t v8 = (void *)swift_initStackObject();
  v8[2] = v4;
  v8[3] = v4;
  long long v92 = v8;
  uint64_t v9 = v4 * v4;
  if ((unsigned __int128)((uint64_t)v4 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v4 * v4) >> 63)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if ((unint64_t)(v9 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v8[4] = swift_slowAlloc();
  v92[5] = v9;
  sub_254350D9C(0.0);
  uint64_t v10 = *(void *)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize);
  uint64_t v11 = swift_initStackObject();
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = v4 * v10;
  uint64_t v88 = v10;
  if ((unsigned __int128)((uint64_t)v4 * (__int128)v10) >> 64 != (uint64_t)(v4 * v10) >> 63)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
  }
  uint64_t v13 = (void *)v11;
  uint64_t v90 = swift_slowAlloc();
  v13[4] = v90;
  v13[5] = v12;
  uint64_t v83 = v13;
  sub_254350D9C(0.0);
  uint64_t v84 = v3;
  uint64_t v14 = v85;
  uint64_t v94 = *(void *)(v3 + 16);
  if (v94)
  {
    uint64_t v15 = 0;
    uint64_t v86 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
    uint64_t v16 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
    uint64_t v17 = v3 + 32;
    uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement);
    uint64_t v19 = v18 + 32;
    uint64_t v20 = *(void *)(v93 + 16);
    unint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v20 + 40);
    uint64_t v23 = *(void *)(v22 + 16);
    do
    {
      unint64_t v24 = *(void *)(v17 + 8 * v15);
      if (v24 >= v21) {
        goto LABEL_66;
      }
      double v25 = *(double *)(v19 + 8 * v24);
      if (v23)
      {
        unint64_t v26 = sub_254351604(*(void *)(v17 + 8 * v15));
        if (v27)
        {
          uint64_t v28 = *(void *)(v22 + 56) + 32 * v26;
          double v29 = *(double *)v28;
          int v30 = *(unsigned __int8 *)(v28 + 8);
          double v31 = *(double *)(v28 + 16);
          int v32 = *(unsigned __int8 *)(v28 + 24);
          if (v30) {
            double v29 = -1.79769313e308;
          }
          if (v32) {
            double v31 = 1.79769313e308;
          }
          if (v29 <= v25) {
            double v29 = v25;
          }
          if (v31 >= v29) {
            double v25 = v29;
          }
          else {
            double v25 = v31;
          }
        }
        uint64_t v14 = v85;
      }
      if (v4 == v15) {
        goto LABEL_79;
      }
      *(double *)(v91[4] + 8 * v15) = v25;
      int64_t v33 = *(void **)(v93 + v86);
      if ((int64_t)v24 >= v33[2] || (uint64_t)v33[3] <= 0) {
        goto LABEL_79;
      }
      *(void *)(*(void *)(v14 + 32) + 8 * v15) = *(void *)(v33[4] + 8 * v24);
      uint64_t v34 = *(void *)(a1 + v16);
      if (v24 >= *(void *)(v34 + 16)) {
        goto LABEL_67;
      }
      double v35 = *(double *)(v34 + 8 * v24 + 32);
      if (*(double *)(v20 + 16) > v35) {
        double v35 = *(double *)(v20 + 16);
      }
      if (*(double *)(v20 + 24) < v35) {
        double v35 = *(double *)(v20 + 24);
      }
      uint64_t v36 = v15 * v4;
      if ((unsigned __int128)(v15 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v15 * v4) >> 63) {
        goto LABEL_68;
      }
      BOOL v37 = __OFADD__(v36, v15);
      uint64_t v38 = v36 + v15;
      if (v37) {
        goto LABEL_69;
      }
      *(double *)(v92[4] + 8 * v38) = v35;
      if ((uint64_t)v24 >= v88) {
        goto LABEL_79;
      }
      uint64_t v39 = v24 * v4;
      if ((unsigned __int128)((uint64_t)v24 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v24 * v4) >> 63) {
        goto LABEL_70;
      }
      BOOL v37 = __OFADD__(v39, v15);
      uint64_t v40 = v39 + v15;
      if (v37) {
        goto LABEL_71;
      }
      ++v15;
      *(void *)(v90 + 8 * v40) = 0x3FF0000000000000;
    }
    while (v94 != v15);
  }
  uint64_t v41 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
  uint64_t v42 = *(void **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
  swift_retain();
  uint64_t v43 = (void *)DKMatrix<>.transpose()();
  uint64_t v44 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v42, v43);
  swift_release();
  swift_release();
  uint64_t v45 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v83, v44);
  uint64_t v46 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v45, (uint64_t)v92);
  swift_release();
  swift_initStackObject();
  uint64_t v47 = (void *)swift_retain();
  double v48 = (void *)sub_254354310(v47);
  swift_release();
  if (!v48[4])
  {
    while (1)
    {
LABEL_79:
      sub_25436D4F0();
      __break(1u);
      swift_release();
      __break(1u);
    }
  }
  uint64_t v49 = *(void *)(v46 + 16);
  if (v49 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_77;
  }
  if (v49 > 0x7FFFFFFF) {
    goto LABEL_78;
  }
  LODWORD(v96[0]) = *(void *)(v46 + 16);
  sub_254254890((uint64_t)v96, v46);
  swift_release();
  double v87 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v44, v48);
  BOOL v50 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(v91, v85);
  if (v94)
  {
    uint64_t v82 = v41;
    uint64_t v51 = 0;
    uint64_t v52 = *(void *)(v84 + 16);
    uint64_t v53 = *(void *)(*(void *)(v93 + 16) + 48);
    uint64_t v54 = *(void *)(v53 + 16);
    uint64_t v55 = v53 + 56;
    while (v51 != v52)
    {
      if (v54)
      {
        uint64_t v56 = *(void *)(v84 + 32 + 8 * v51);
        uint64_t v57 = sub_25436D8E0();
        uint64_t v58 = -1 << *(unsigned char *)(v53 + 32);
        unint64_t v59 = v57 & ~v58;
        if ((*(void *)(v55 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59))
        {
          uint64_t v60 = *(void *)(v53 + 48);
          if (*(void *)(v60 + 8 * v59) == v56)
          {
LABEL_48:
            if (v51 >= v50[2] || (uint64_t)v50[3] <= 0) {
              goto LABEL_79;
            }
            uint64_t v62 = v50[4];
            for (double i = *(double *)(v62 + 8 * v51); i > 3.14159265; double i = i + -6.28318531)
              ;
            while (i < -3.14159265)
              double i = i + 6.28318531;
            *(double *)(v62 + 8 * v51) = i;
          }
          else
          {
            uint64_t v61 = ~v58;
            while (1)
            {
              unint64_t v59 = (v59 + 1) & v61;
              if (((*(void *)(v55 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0) {
                break;
              }
              if (*(void *)(v60 + 8 * v59) == v56) {
                goto LABEL_48;
              }
            }
          }
        }
      }
      if (++v51 == v94)
      {
        uint64_t v64 = v83;
        swift_release();
        uint64_t v41 = v82;
        goto LABEL_58;
      }
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v64 = v83;
  swift_release();
LABEL_58:
  uint64_t v65 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  uint64_t v66 = *(void **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  swift_retain();
  uint64_t v67 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v50);
  uint64_t v68 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v66, v67);
  swift_release();
  swift_release();
  *(void *)(v93 + v65) = v68;
  swift_release();
  sub_25435092C();
  uint64_t v69 = *(void **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_I);
  swift_retain();
  uint64_t v70 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v64);
  uint64_t v95 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(v69, v70);
  swift_release();
  swift_release();
  uint64_t v71 = *(void **)(v93 + v41);
  swift_retain();
  uint64_t v72 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v95, v71);
  swift_release();
  uint64_t v73 = (void *)DKMatrix<>.transpose()();
  uint64_t v74 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v72, v73);
  swift_release();
  swift_release();
  uint64_t v75 = (void *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v92);
  uint64_t v76 = (void *)DKMatrix<>.transpose()();
  uint64_t v77 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v75, v76);
  swift_release();
  swift_release();
  uint64_t v78 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v74, v77);
  swift_release();
  swift_release();
  *(void *)(v93 + v41) = v78;
  swift_release();
  sub_254350764();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  MEMORY[0x25A276B10](v90, -1, -1);
  swift_setDeallocating();
  uint64_t v79 = v92[4];
  if (v79) {
    MEMORY[0x25A276B10](v79, -1, -1);
  }
  swift_setDeallocating();
  uint64_t v80 = v91[4];
  if (v80) {
    MEMORY[0x25A276B10](v80, -1, -1);
  }
  swift_setDeallocating();
  uint64_t result = *(void *)(v85 + 32);
  if (result) {
    return MEMORY[0x25A276B10](result, -1, -1);
  }
  return result;
}

uint64_t sub_254350764()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 48);
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v2 + 56;
  unint64_t v6 = v4 & *(void *)(v2 + 56);
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  int64_t v8 = (unint64_t)(v3 + 63) >> 6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t v15 = *(void **)(v0 + v7);
    if (v14 >= v15[2] || v14 < 0 || (uint64_t)v15[3] <= 0) {
      break;
    }
    uint64_t v16 = v15[4];
    for (double j = *(double *)(v16 + 8 * v14); j > 3.14159265; double j = j + -6.28318531)
      ;
    while (j < -3.14159265)
      double j = j + 6.28318531;
    *(double *)(v16 + 8 * v14) = j;
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    if (v11 >= v8) {
      return result;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v1;
    if (!v12)
    {
      int64_t v1 = v11 + 1;
      if (v11 + 1 >= v8) {
        return result;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v1);
      if (!v12)
      {
        int64_t v1 = v11 + 2;
        if (v11 + 2 >= v8) {
          return result;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v1);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v8) {
            return result;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v1 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_31;
              }
              if (v1 >= v8) {
                return result;
              }
              unint64_t v12 = *(void *)(v5 + 8 * v1);
              ++v13;
              if (v12) {
                goto LABEL_18;
              }
            }
          }
          int64_t v1 = v13;
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
  }
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

void sub_25435092C()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 40);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  uint64_t v7 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t v15 = *(void **)(v0 + v7);
    if (v14 >= v15[2] || v14 < 0 || (uint64_t)v15[3] <= 0) {
      break;
    }
    uint64_t v16 = *(void *)(v2 + 56) + 32 * i;
    double v17 = *(double *)v16;
    int v18 = *(unsigned __int8 *)(v16 + 8);
    double v19 = *(double *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 24);
    uint64_t v21 = v15[4];
    uint64_t v22 = 8 * v14;
    if (v18) {
      double v17 = -1.79769313e308;
    }
    if (v20) {
      double v19 = 1.79769313e308;
    }
    if (v17 <= *(double *)(v21 + v22)) {
      double v17 = *(double *)(v21 + v22);
    }
    if (v19 < v17) {
      double v17 = v19;
    }
    *(double *)(v21 + v22) = v17;
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      break;
    }
    if (v11 >= v8) {
      return;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v1;
    if (!v12)
    {
      int64_t v1 = v11 + 1;
      if (v11 + 1 >= v8) {
        return;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v1);
      if (!v12)
      {
        int64_t v1 = v11 + 2;
        if (v11 + 2 >= v8) {
          return;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v1);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v8) {
            return;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v1 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_34;
              }
              if (v1 >= v8) {
                return;
              }
              unint64_t v12 = *(void *)(v3 + 8 * v1);
              ++v13;
              if (v12) {
                goto LABEL_18;
              }
            }
          }
          int64_t v1 = v13;
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
  }
  sub_25436D4F0();
  __break(1u);
}

double sub_254350B04(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + 16) + 40);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_254351604(a1);
    if (v6)
    {
      uint64_t v7 = *(void *)(v4 + 56) + 32 * v5;
      double v8 = *(double *)v7;
      int v9 = *(unsigned __int8 *)(v7 + 8);
      double v10 = *(double *)(v7 + 16);
      int v11 = *(unsigned __int8 *)(v7 + 24);
      double v12 = -1.79769313e308;
      if (!v9) {
        double v12 = v8;
      }
      double v13 = 1.79769313e308;
      if (!v11) {
        double v13 = v10;
      }
      if (v12 > a2) {
        a2 = v12;
      }
      if (v13 < a2) {
        return v13;
      }
    }
  }
  return a2;
}

uint64_t sub_254350B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7 = a7 >> 62;
  uint64_t v8 = a3;
  uint64_t v9 = 0;
  switch(a7 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a6) - a6;
      if (__OFSUB__(HIDWORD(a6), a6))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 < 1) {
        return 0;
      }
      if (a5) {
        goto LABEL_16;
      }
      if (a3 != a4)
      {
        if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v7 = a4 - a3;
        if (__OFSUB__(a4, a3))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        uint64_t v10 = 8 * a2;
        if (v7 >= 8 * a2) {
          uint64_t v7 = 8 * a2;
        }
        uint64_t v14 = a3 + v7;
        if (__OFADD__(a3, v7)) {
          goto LABEL_39;
        }
        if (v14 >= a3) {
          goto LABEL_26;
        }
        __break(1u);
LABEL_16:
        if (v7)
        {
          if (v7 == 1) {
            uint64_t v8 = (int)a6;
          }
          else {
            uint64_t v8 = *(void *)(a6 + 16);
          }
        }
        else
        {
          uint64_t v8 = 0;
        }
        if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
        {
          uint64_t v15 = 8 * a2;
          if (v10 < 8 * a2) {
            uint64_t v15 = v10;
          }
          uint64_t v14 = v8 + v15;
          if (!__OFADD__(v8, v15))
          {
            if (v14 >= v8)
            {
LABEL_26:
              if (v8 == v14) {
                return 0;
              }
              if (!a1)
              {
LABEL_40:
                __break(1u);
                JUMPOUT(0x254350D04);
              }
              sub_25436C680();
              uint64_t v9 = v14 - v8;
              if (!__OFSUB__(v14, v8)) {
                return v9;
              }
              goto LABEL_36;
            }
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      return 0;
    case 2uLL:
      uint64_t v12 = *(void *)(a6 + 16);
      uint64_t v11 = *(void *)(a6 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_32;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a7);
      goto LABEL_6;
  }
}

uint64_t sub_254350D14(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    return result;
  }
  uint64_t v3 = a3 * a3;
  if ((unsigned __int128)(a3 * (__int128)a3) >> 64 != (a3 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 == -1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  BOOL v5 = v3 >= 0;
  if (v4 > 0) {
    BOOL v5 = v3 < 1;
  }
  if (!v5)
  {
    int64_t v6 = 0;
    do
    {
      *(void *)(result + 8 * v6) = 0x3FF0000000000000;
      if (__OFADD__(v6, v4)) {
        int64_t v6 = ((v6 + v4) >> 63) ^ 0x8000000000000000;
      }
      else {
        v6 += v4;
      }
      BOOL v7 = v3 >= v6;
      if (v4 > 0) {
        BOOL v7 = v6 >= v3;
      }
    }
    while (!v7);
  }
  return result;
}

void sub_254350D9C(double a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = v1[3];
  if (__OFSUB__(v4, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (((v4 - 1) & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v1[4];
    while (1)
    {
      *(double *)(v6 + 8 * v5) = a1;
      if (v4 != 1) {
        break;
      }
LABEL_11:
      if (v5 == v3) {
        return;
      }
      BOOL v9 = __OFADD__(v5++, 1);
      if (v9)
      {
        __break(1u);
        return;
      }
    }
    uint64_t v7 = 1;
    while (1)
    {
      uint64_t v8 = v7 * v2;
      if ((unsigned __int128)(v7 * (__int128)v2) >> 64 != (v7 * v2) >> 63) {
        break;
      }
      BOOL v9 = __OFADD__(v8, v5);
      uint64_t v10 = v8 + v5;
      if (v9) {
        goto LABEL_17;
      }
      *(double *)(v6 + 8 * v10) = a1;
      if (v4 == ++v7) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

BOOL sub_254350E28(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_25436D8E0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_254350EF4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_25436D8F0();
  sub_25436D900();
  uint64_t v4 = sub_25436D930();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_254350FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_25436D8F0();
  sub_25436C7B0();
  sub_254354AFC(&qword_269DD7E68, MEMORY[0x263F07490]);
  sub_25436CB50();
  sub_25436C800();
  sub_254354AFC(&qword_269DD7E70, MEMORY[0x263F07508]);
  sub_25436CB50();
  uint64_t v7 = sub_25436D930();
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  uint64_t v11 = *(void *)(v4 + 72);
  while (1)
  {
    sub_254354A94(*(void *)(a2 + 48) + v11 * v9, (uint64_t)v6, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    if (sub_25436C780() & 1) != 0 && (sub_25436C7D0()) {
      break;
    }
    sub_25426C6DC((uint64_t)v6);
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  sub_25426C6DC((uint64_t)v6);
  return 1;
}

uint64_t sub_254351228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_25436C800();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_254354AFC(&qword_269DD7E70, MEMORY[0x263F07508]),
        uint64_t v7 = sub_25436CB40(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_254354AFC((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      char v15 = sub_25436CBB0();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t DKKalmanFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKKalmanFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKKalmanFilter.__allocating_init(configuration:stateSize:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  sub_254353F8C(a1, a2);
  uint64_t v5 = v4;
  swift_release();
  return v5;
}

uint64_t DKKalmanFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_254351604(uint64_t a1)
{
  uint64_t v2 = sub_25436D8E0();
  return sub_254351A28(a1, v2);
}

unint64_t sub_254351648(uint64_t a1)
{
  sub_25436D8F0();
  type metadata accessor for CFString(0);
  sub_254354AFC(&qword_269DDA0A0, type metadata accessor for CFString);
  sub_25436C880();
  uint64_t v2 = sub_25436D930();
  return sub_254351AC4(a1, v2);
}

unint64_t sub_2543516FC(uint64_t a1, uint64_t a2)
{
  sub_25436D8F0();
  sub_25436CC90();
  uint64_t v4 = sub_25436D930();
  return sub_254351C20(a1, a2, v4);
}

unint64_t sub_254351774(char a1)
{
  char v1 = a1 & 1;
  sub_25436D8F0();
  sub_25436D900();
  uint64_t v2 = sub_25436D930();
  return sub_254351D04(v1, v2);
}

unint64_t sub_2543517E4(unsigned __int8 a1)
{
  sub_25436D8F0();
  sub_25436D900();
  uint64_t v2 = sub_25436D930();
  return sub_25435214C(a1, v2);
}

unint64_t sub_25435184C(uint64_t a1)
{
  uint64_t v2 = sub_25436D220();
  return sub_254351DC0(a1, v2);
}

unint64_t sub_254351890(uint64_t a1)
{
  sub_25436C800();
  sub_254354AFC(&qword_269DD7E70, MEMORY[0x263F07508]);
  uint64_t v2 = sub_25436CB40();
  return sub_254351E88(a1, v2);
}

unint64_t sub_254351928(uint64_t a1)
{
  sub_25436D8F0();
  sub_25429E1D0(v4, a1);
  uint64_t v2 = sub_25436D930();
  return sub_254352048(a1, v2);
}

unint64_t sub_254351994(uint64_t a1)
{
  sub_25436CC00();
  sub_25436D8F0();
  sub_25436CC90();
  uint64_t v2 = sub_25436D930();
  swift_bridgeObjectRelease();
  return sub_2543521EC(a1, v2);
}

unint64_t sub_254351A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_254351AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_254354AFC(&qword_269DDA0A0, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_25436C870();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_25436C870();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_254351C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25436D7B0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25436D7B0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_254351D04(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_254351DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_254354B44(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25A275920](v9, a1);
      sub_254354BA0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_254351E88(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_25436C800();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_254354AFC((unint64_t *)&qword_269DD7E78, MEMORY[0x263F07508]);
      char v16 = sub_25436CBB0();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_254352048(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_2542FD50C(v7, a1);
    char v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = ~v4;
      for (unint64_t i = (i + 1) & v10; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v10)
      {
        uint64_t v11 = swift_bridgeObjectRetain();
        sub_2542FD50C(v11, a1);
        char v13 = v12;
        swift_bridgeObjectRelease();
        if (v13) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_25435214C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2543521EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_25436CC00();
    uint64_t v8 = v7;
    if (v6 == sub_25436CC00() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_25436CC00();
          uint64_t v15 = v14;
          if (v13 == sub_25436CC00() && v15 == v16) {
            break;
          }
          char v18 = sub_25436D7B0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_254352364(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_254345384(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_254352A1C(v5);
  *a1 = v2;
  return result;
}

void *sub_2543523D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B10);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_2543538EC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2542774CC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

size_t sub_2543524BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA0A8);
  uint64_t v3 = *(void *)(type metadata accessor for DKPersonGroup(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_254353A80(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_2542774CC();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_254352610(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A58);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_254353D60(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2542774CC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2543526F8(unint64_t a1)
{
  return sub_254352770(a1, (void (*)(void))type metadata accessor for DKPersonTracker, &qword_269DDA090, &qword_269DDA088, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25427E198);
}

void *sub_254352734(unint64_t a1)
{
  return sub_254352770(a1, (void (*)(void))type metadata accessor for DKPersonTrackerState, &qword_269DDA098, &qword_269DD7A88, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_25427E12C);
}

void *sub_254352770(unint64_t a1, void (*a2)(void), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v10 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8D10);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      uint64_t v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_2543536C8((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))v10) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (!v10) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v11;
}

uint64_t sub_254352898(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 32;
        uint64_t v11 = (char *)(a2 + 24 * a3);
        if (v11 < &v8[24 * v5 + 32] && v10 < &v11[24 * v5]) {
          goto LABEL_17;
        }
        memcpy(v10, v11, 24 * v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A90);
      uint64_t v8 = (char *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      *((void *)v8 + 2) = v5;
      *((void *)v8 + 3) = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

uint64_t sub_254352A1C(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_25436D750();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          double v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_2543530A8((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_254345370((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_25436CE40();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  long long v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        double v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *double v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_254344E28(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_254344E28((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    double v29 = v11 + 32;
    int v30 = &v11[16 * v28 + 32];
    *(void *)int v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_2543530A8((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        double v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_25436D4E0();
  __break(1u);
  return result;
}

uint64_t sub_2543530A8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_254344F24((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

void *sub_254353318(void *result, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v3 = *result;
  unint64_t v2 = result[1];
  uint64_t v5 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v32 = *result;
      uint64_t v33 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = (void *)sub_254353624((int *)&v32, a2);
      uint64_t v14 = v32;
      unint64_t v15 = v33 | 0x4000000000000000;
      goto LABEL_18;
    case 2uLL:
      uint64_t v32 = *result;
      uint64_t v33 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25436C620();
      uint64_t v16 = v33;
      uint64_t v17 = *(void *)(v32 + 16);
      uint64_t v31 = *(void *)(v32 + 24);
      uint64_t v18 = sub_25436C4B0();
      if (!v18)
      {
        __break(1u);
        JUMPOUT(0x254353614);
      }
      uint64_t v19 = v18;
      uint64_t v20 = sub_25436C4E0();
      uint64_t v21 = v17 - v20;
      if (__OFSUB__(v17, v20)) {
        goto LABEL_40;
      }
      BOOL v22 = __OFSUB__(v31, v17);
      uint64_t v23 = v31 - v17;
      if (v22) {
        goto LABEL_43;
      }
      uint64_t v24 = sub_25436C4D0();
      if (v24 >= v23) {
        uint64_t v25 = v23;
      }
      else {
        uint64_t v25 = v24;
      }
      uint64_t result = (void *)sub_254350D14(v19 + v21, v19 + v21 + v25, a2);
      *uint64_t v5 = v32;
      v5[1] = v16 | 0x8000000000000000;
      return result;
    case 3uLL:
      uint64_t v26 = a2 * a2;
      if ((unsigned __int128)(a2 * (__int128)a2) >> 64 != (a2 * a2) >> 63) {
        goto LABEL_41;
      }
      uint64_t v27 = a2 + 1;
      if (__OFADD__(a2, 1)) {
        goto LABEL_44;
      }
      if (a2 == -1) {
        goto LABEL_46;
      }
      BOOL v28 = v26 >= 0;
      if (v27 > 0) {
        BOOL v28 = v26 < 1;
      }
      if (!v28)
      {
        int64_t v29 = 0;
        do
        {
          BOOL v22 = __OFADD__(v29, v27);
          v29 += v27;
          if (v22) {
            int64_t v29 = (v29 >> 63) ^ 0x8000000000000000;
          }
          BOOL v30 = v26 >= v29;
          if (v27 > 0) {
            BOOL v30 = v29 >= v26;
          }
        }
        while (!v30);
      }
      return result;
    default:
      LOWORD(v32) = *result;
      BYTE2(v32) = BYTE2(v3);
      BYTE3(v32) = BYTE3(v3);
      BYTE4(v32) = BYTE4(v3);
      BYTE5(v32) = BYTE5(v3);
      BYTE6(v32) = BYTE6(v3);
      HIBYTE(v32) = HIBYTE(v3);
      LOWORD(v33) = v2;
      BYTE2(v33) = BYTE2(v2);
      unint64_t v6 = HIDWORD(v2);
      BYTE3(v33) = BYTE3(v2);
      unint64_t v7 = v2 >> 40;
      BYTE4(v33) = BYTE4(v2);
      unint64_t v8 = HIWORD(v2);
      uint64_t v9 = a2 * a2;
      BYTE5(v33) = v7;
      BYTE6(v33) = v8;
      if ((unsigned __int128)(a2 * (__int128)a2) >> 64 != (a2 * a2) >> 63)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v10 = a2 + 1;
      if (__OFADD__(a2, 1)) {
        goto LABEL_42;
      }
      if (a2 == -1)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
      }
      BOOL v11 = v9 >= 0;
      if (v10 > 0) {
        BOOL v11 = v9 < 1;
      }
      if (!v11)
      {
        int64_t v12 = 0;
        do
        {
          *(&v32 + v12) = 0x3FF0000000000000;
          if (__OFADD__(v12, v10)) {
            int64_t v12 = ((v12 + v10) >> 63) ^ 0x8000000000000000;
          }
          else {
            v12 += v10;
          }
          BOOL v13 = v9 >= v12;
          if (v10 > 0) {
            BOOL v13 = v12 >= v9;
          }
        }
        while (!v13);
        LOBYTE(v6) = BYTE4(v33);
        LOBYTE(v7) = BYTE5(v33);
        LOBYTE(v8) = BYTE6(v33);
      }
      uint64_t v14 = v32;
      unint64_t v15 = v33 | ((unint64_t)v6 << 32) | ((unint64_t)v7 << 40) | ((unint64_t)v8 << 48);
LABEL_18:
      *uint64_t v5 = v14;
      v5[1] = v15;
      return result;
  }
}

uint64_t sub_254353624(int *a1, uint64_t a2)
{
  uint64_t result = sub_25436C640();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_25436C4B0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = sub_25436C4E0();
  uint64_t v8 = v5 - result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v6 - v5;
  uint64_t v10 = sub_25436C4D0();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  return sub_254350D14(v7 + v8, v7 + v8 + v11, a2);
}

uint64_t sub_2543536C8(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_25436D530();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_254354A44(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          BOOL v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

void *sub_2543538EC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_254353A80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DKPersonGroup(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v29 - v13;
  uint64_t v34 = a4;
  uint64_t v17 = *(void *)(a4 + 64);
  uint64_t v16 = a4 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = -1 << *(unsigned char *)(v16 - 32);
  if (-v18 < 64) {
    uint64_t v19 = ~(-1 << -(char)v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  if (!a2)
  {
    int64_t v21 = 0;
LABEL_37:
    *a1 = v34;
    a1[1] = v16;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    int64_t v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v31 = -1 << *(unsigned char *)(v16 - 32);
  uint64_t v32 = a1;
  int64_t v21 = 0;
  uint64_t v22 = 0;
  int64_t v33 = (unint64_t)(63 - v18) >> 6;
  int64_t v30 = v33 - 1;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    uint64_t v28 = *(void *)(v9 + 72);
    sub_254354A94(*(void *)(v34 + 56) + v28 * v24, (uint64_t)v11, type metadata accessor for DKPersonGroup);
    sub_2542E5520((uint64_t)v11, (uint64_t)v14);
    sub_2542E5520((uint64_t)v14, a2);
    if (v22 == a3) {
      goto LABEL_36;
    }
    a2 += v28;
    if (v20) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v16 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v21);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v33) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    unint64_t v20 = 0;
    int64_t v21 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v21);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v21;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    unint64_t v20 = 0;
LABEL_36:
    uint64_t v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  unint64_t v26 = *(void *)(v16 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v33)
    {
      unint64_t v20 = 0;
      int64_t v21 = v30;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v16 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
}

void *sub_254353D60(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v24 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = (void *)(*(void *)(a4 + 56) + 32 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    uint64_t v22 = v19[3];
    *uint64_t v10 = *v19;
    v10[1] = v20;
    _OWORD v10[2] = v21;
    v10[3] = v22;
    if (v12 == v9)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v10 += 4;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v23;
      uint64_t result = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_254353F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_25436C6E0();
  sub_25436C6E0();
  uint64_t v6 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + v6) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = 1;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  swift_retain();
  *(void *)(v8 + 32) = swift_slowAlloc();
  *(void *)(v8 + 40) = a2;
  sub_254350D9C(0.0);
  *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x) = v8;
  uint64_t v9 = a2 * a2;
  if ((unsigned __int128)(a2 * (__int128)a2) >> 64 != (a2 * a2) >> 63)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((unint64_t)(v9 - 0x1000000000000000) >> 61 == 7)
  {
    uint64_t v35 = sub_254256138(8 * v9);
    unint64_t v36 = v10;
    sub_254353318(&v35, a2);
    uint64_t v11 = v35;
    unint64_t v12 = v36;
    int64_t v13 = (void *)swift_allocObject();
    void v13[2] = a2;
    v13[3] = a2;
    uint64_t v14 = swift_slowAlloc();
    v13[4] = v14;
    v13[5] = v9;
    sub_254350B94(v14, a2 * a2, 0, 0, 1, v11, v12);
    sub_2542564BC(v11, v12);
    *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P) = v13;
    uint64_t v35 = sub_254256138(8 * v9);
    unint64_t v36 = v15;
    sub_254353318(&v35, a2);
    uint64_t v16 = v35;
    unint64_t v17 = v36;
    int64_t v18 = (void *)swift_allocObject();
    v18[2] = a2;
    v18[3] = a2;
    uint64_t v19 = swift_slowAlloc();
    v18[4] = v19;
    v18[5] = v9;
    sub_254350B94(v19, a2 * a2, 0, 0, 1, v16, v17);
    sub_2542564BC(v16, v17);
    *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_I) = v18;
    uint64_t v35 = sub_254256138(8 * v9);
    unint64_t v36 = v20;
    sub_254353318(&v35, a2);
    uint64_t v21 = v35;
    unint64_t v22 = v36;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a2;
    v23[3] = a2;
    uint64_t v24 = swift_slowAlloc();
    v23[4] = v24;
    v23[5] = v9;
    sub_254350B94(v24, a2 * a2, 0, 0, 1, v21, v22);
    sub_2542564BC(v21, v22);
    *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q) = v23;
    uint64_t v35 = sub_254256138(8 * v9);
    unint64_t v36 = v25;
    sub_254353318(&v35, a2);
    uint64_t v26 = v35;
    unint64_t v27 = v36;
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = a2;
    v28[3] = a2;
    uint64_t v29 = swift_slowAlloc();
    v28[4] = v29;
    v28[5] = v9;
    sub_254350B94(v29, a2 * a2, 0, 0, 1, v26, v27);
    sub_2542564BC(v26, v27);
    *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F) = v28;
    uint64_t v35 = sub_254256138(8 * v9);
    unint64_t v36 = v30;
    sub_254353318(&v35, a2);
    uint64_t v31 = v35;
    unint64_t v32 = v36;
    int64_t v33 = (void *)swift_allocObject();
    v33[2] = a2;
    v33[3] = a2;
    uint64_t v34 = swift_slowAlloc();
    v33[4] = v34;
    v33[5] = v9;
    sub_254350B94(v34, a2 * a2, 0, 0, 1, v31, v32);
    sub_2542564BC(v31, v32);
    *(void *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v33;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_254354310(void *a1)
{
  uint64_t v2 = a1[2];
  v1[2] = v2;
  uint64_t v3 = a1[3];
  v1[3] = v3;
  uint64_t v4 = v2 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 != (v2 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = (void *)swift_slowAlloc();
  v1[4] = v6;
  v1[5] = v4;
  uint64_t v7 = (const void *)a1[4];
  if (!v7) {
    return (uint64_t)v1;
  }
  if (((8 * v4) & 0x8000000000000000) == 0)
  {
    memmove(v6, v7, 8 * v4);
    return (uint64_t)v1;
  }
LABEL_9:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

double sub_2543543F0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_254354400(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 16) = *a1;
  return result;
}

double sub_254354410@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_254354420(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 24) = *a1;
  return result;
}

uint64_t sub_254354430@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 32);
  return result;
}

unsigned char *sub_254354440(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 32) = *result;
  return result;
}

uint64_t sub_254354450()
{
  return type metadata accessor for DKKalmanFilter(0);
}

uint64_t type metadata accessor for DKKalmanFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DDA068);
}

uint64_t sub_254354478()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKKalmanFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKKalmanFilter);
}

uint64_t dispatch thunk of DKKalmanFilter.__allocating_init(configuration:stateSize:)()
{
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKKalmanFilter.isInitialized()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateF(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateQ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateJ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKKalmanFilter.getState(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKKalmanFilter.setState(index:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKKalmanFilter.predict(time:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKKalmanFilter.correct(measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKKalmanFilter.update(measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKKalmanFilter.wrapStateAngles()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKKalmanFilter.clampStateToLimits()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKKalmanFilter.clampMeasurementToLimits(index:measurement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t sub_254354770()
{
  return type metadata accessor for DKKalmanFilter.Measurement(0);
}

uint64_t type metadata accessor for DKKalmanFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DDA078);
}

uint64_t sub_254354798()
{
  uint64_t result = sub_25436C7B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKKalmanFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKKalmanFilter.Measurement);
}

uint64_t type metadata accessor for DKKalmanFilter.Configuration()
{
  return self;
}

uint64_t method lookup function for DKKalmanFilter.Configuration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKKalmanFilter.Configuration);
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DKKalmanFilter.Configuration.Limit(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DKKalmanFilter.Configuration.Limit(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DKKalmanFilter.Configuration.Limit()
{
  return &type metadata for DKKalmanFilter.Configuration.Limit;
}

uint64_t sub_254354A44(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254354A94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254354AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254354B44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_254354BA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_254354BF4(void *a1)
{
  uint64_t v2 = a1[2];
  v1[2] = v2;
  uint64_t v3 = a1[3];
  v1[3] = v3;
  uint64_t v4 = v2 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 != (v2 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)(v4 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = (void *)swift_slowAlloc();
  v1[4] = v6;
  v1[5] = v4;
  uint64_t v7 = (const void *)a1[4];
  if (!v7) {
    return (uint64_t)v1;
  }
  if (((4 * v4) & 0x8000000000000000) == 0)
  {
    memmove(v6, v7, 4 * v4);
    return (uint64_t)v1;
  }
LABEL_9:
  uint64_t result = sub_25436D570();
  __break(1u);
  return result;
}

void *static DKOmni3DMotionFilter.Index.allCases.getter()
{
  return &unk_2703B35F0;
}

uint64_t DKOmni3DMotionFilter.Index.rawValue.getter()
{
  return *v0;
}

uint64_t DKOmni3DMotionFilter.Measurement.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKOmni3DMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  uint64_t v2 = sub_25436C7B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional __swiftcall DKOmni3DMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 15;
  if ((unint64_t)rawValue < 0xF) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional sub_254354E84(Swift::Int *a1)
{
  return DKOmni3DMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_254354E8C(void *a1@<X8>)
{
  *a1 = &unk_2703B35F0;
}

uint64_t DKOmni3DMotionFilter.Configuration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKOmni3DMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKOmni3DMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  swift_allocObject();
  sub_2543559AC(a1);
  uint64_t v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKOmni3DMotionFilter.init(configuration:)(uint64_t a1)
{
  sub_2543559AC(a1);
  uint64_t v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_254354F84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25436C7B0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_25436C700();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  uint64_t v12 = v11[2];
  if (v12 < 6) {
    goto LABEL_55;
  }
  if ((uint64_t)v11[3] <= 0) {
    goto LABEL_55;
  }
  if ((unint64_t)v12 <= 0xE) {
    goto LABEL_55;
  }
  int64_t v13 = (double *)v11[4];
  double v15 = v13[3];
  double v14 = v13[4];
  double v17 = v13[5];
  double v16 = v13[6];
  double v18 = v13[7];
  double v97 = v13[8];
  double v98 = v16;
  double v19 = v13[10];
  double v95 = v13[9];
  double v96 = v18;
  double v20 = v13[12];
  double v21 = v13[13];
  double v99 = v13[14];
  double v100 = v20;
  __double2 v22 = __sincos_stret(v14);
  double sinval = v22.__sinval;
  __double2 v23 = __sincos_stret(v17);
  __double2 v24 = __sincos_stret(v15);
  unint64_t v25 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  uint64_t v26 = v25[2];
  if (v26 < 1) {
    goto LABEL_55;
  }
  unint64_t v27 = v25[3];
  if ((uint64_t)v27 <= 6) {
    goto LABEL_55;
  }
  uint64_t v28 = 6 * v26;
  if ((unsigned __int128)(v26 * (__int128)6) >> 64 != (6 * v26) >> 63)
  {
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v29 = v25[4];
  *(double *)(v29 + 48 * v26) = v10 * (v22.__cosval * v24.__cosval);
  if (v27 <= 7) {
    goto LABEL_55;
  }
  uint64_t v30 = 8 * v26;
  uint64_t v31 = 7 * v26;
  double v32 = sinval;
  if ((unsigned __int128)(v26 * (__int128)7) >> 64 != (7 * v26) >> 63) {
    goto LABEL_40;
  }
  double v33 = sinval * v24.__cosval;
  double v34 = v23.__sinval * (sinval * v24.__cosval) - v23.__cosval * v24.__sinval;
  *(double *)(v29 + 56 * v26) = v10 * v34;
  if (v27 <= 8) {
    goto LABEL_55;
  }
  if ((unint64_t)(v26 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_41;
  }
  double v35 = v23.__sinval * v24.__sinval + v23.__cosval * v33;
  *(double *)(v29 + (v26 << 6)) = v10 * v35;
  if (v27 <= 0xC) {
    goto LABEL_55;
  }
  uint64_t v36 = 12 * v26;
  if ((unsigned __int128)(v26 * (__int128)12) >> 64 != (12 * v26) >> 63) {
    goto LABEL_42;
  }
  *(double *)(v29 + 96 * v26) = v10 * (*(double *)(v29 + 48 * v26) * 0.5);
  if (v27 <= 0xD) {
    goto LABEL_55;
  }
  uint64_t v37 = 13 * v26;
  if ((unsigned __int128)(v26 * (__int128)13) >> 64 != (13 * v26) >> 63) {
    goto LABEL_43;
  }
  *(double *)(v29 + 104 * v26) = v10 * (*(double *)(v29 + 56 * v26) * 0.5);
  if (v27 <= 0xE) {
    goto LABEL_55;
  }
  uint64_t v38 = 14 * v26;
  if ((unsigned __int128)(v26 * (__int128)14) >> 64 != (14 * v26) >> 63) {
    goto LABEL_44;
  }
  *(double *)(v29 + 112 * v26) = v10 * (*(double *)(v29 + (v26 << 6)) * 0.5);
  if ((unint64_t)v26 <= 1) {
    goto LABEL_55;
  }
  uint64_t v39 = v28 | 1;
  *(double *)(v29 + 8 * (v28 | 1)) = v10 * (v22.__cosval * v24.__sinval);
  uint64_t v40 = v31 + 1;
  if (__OFADD__(v31, 1)) {
    goto LABEL_45;
  }
  *(double *)(v29 + 8 * v40) = v10 * (v23.__cosval * v24.__cosval + v23.__sinval * (v32 * v24.__sinval));
  *(double *)(v29 + 8 * (v30 | 1)) = v10 * (v23.__cosval * (v32 * v24.__sinval) - v23.__sinval * v24.__cosval);
  *(double *)(v29 + ((96 * v26) | 8)) = v10 * (*(double *)(v29 + 8 * v39) * 0.5);
  if (__OFADD__(v37, 1))
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  *(double *)(v29 + 8 * (v37 + 1)) = v10 * (*(double *)(v29 + 8 * v40) * 0.5);
  *(double *)(v29 + ((112 * v26) | 8)) = v10 * (*(double *)(v29 + 8 * (v30 | 1)) * 0.5);
  if ((unint64_t)v26 <= 2) {
    goto LABEL_55;
  }
  if (__OFADD__(v38, 2)) {
    goto LABEL_47;
  }
  double v94 = v19;
  *(double *)(v29 + 8 * (v38 + 2)) = v10 * (*(double *)(v29 + ((v26 << 6) | 0x10)) * 0.5);
  if ((unint64_t)v26 <= 5) {
    goto LABEL_55;
  }
  double v41 = 1.0 / v22.__cosval;
  double v42 = v32 * (1.0 / v22.__cosval);
  *(double *)(v29 + 88 * v26 + 40) = v10;
  unint64_t v43 = (double *)(v29 + 80 * v26);
  v43[5] = v10 * (v23.__sinval * v42);
  uint64_t v44 = (double *)(v29 + 72 * v26);
  v44[5] = v10 * (v23.__cosval * v42);
  CGFloat v43[4] = v10 * v23.__cosval;
  v44[4] = -(v23.__sinval * v10);
  v43[3] = v10 * (v23.__sinval * (1.0 / v22.__cosval));
  v44[3] = v10 * (v23.__cosval * (1.0 / v22.__cosval));
  if (v26 == 6) {
    goto LABEL_55;
  }
  BOOL v45 = __OFADD__(v36, 6);
  uint64_t v46 = v36 + 6;
  if (v45) {
    goto LABEL_48;
  }
  *(double *)(v29 + 8 * v46) = v10;
  if ((unint64_t)v26 <= 7) {
    goto LABEL_55;
  }
  if (__OFADD__(v37, 7)) {
    goto LABEL_49;
  }
  *(double *)(v29 + 8 * (v37 + 7)) = v10;
  if ((unint64_t)v26 <= 8) {
    goto LABEL_55;
  }
  if (__OFADD__(v38, 8)) {
    goto LABEL_50;
  }
  double v89 = v23.__sinval * v24.__cosval;
  double v90 = v23.__cosval * v24.__cosval;
  double v86 = v23.__cosval * (v32 * v24.__sinval) - v23.__sinval * v24.__cosval;
  double v87 = v22.__cosval * v24.__sinval;
  double v82 = v23.__cosval * (1.0 / v22.__cosval);
  double v83 = v23.__sinval * (1.0 / v22.__cosval);
  double v84 = v23.__cosval * v24.__sinval;
  double v85 = v23.__sinval * v24.__sinval;
  double v92 = v24.__sinval;
  double cosval = v22.__cosval;
  double v47 = v35;
  double v88 = v34;
  double v91 = v21;
  double v48 = v22.__cosval * v24.__cosval;
  *(double *)(v29 + 8 * (v38 + 8)) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7988);
  swift_allocObject();
  uint64_t v49 = (void *)swift_retain();
  uint64_t v50 = sub_254354310(v49);
  swift_release();
  uint64_t v51 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(void *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v50;
  swift_release();
  BOOL v52 = *(void **)(v2 + v51);
  uint64_t v53 = v52[2];
  if (v53 < 1 || (uint64_t)v52[3] <= 5) {
    goto LABEL_55;
  }
  uint64_t v54 = 5 * v53;
  double v56 = v99;
  double v55 = v100;
  double v58 = v97;
  double v57 = v98;
  double v59 = sinval;
  if ((unsigned __int128)(v53 * (__int128)5) >> 64 != (5 * v53) >> 63) {
    goto LABEL_51;
  }
  double v60 = v10 * (v10 * 0.5);
  double v61 = -(v24.__cosval * sinval);
  double v62 = v96;
  double v63 = v91;
  double v64 = v10 * (v47 * v96 + (v23.__cosval * v24.__sinval + v23.__sinval * v61) * v97)
      + v60 * (v47 * v91 + (v23.__cosval * v24.__sinval + v23.__sinval * v61) * v99);
  double v65 = v10 * (v61 * v98 + v23.__sinval * v48 * v96 + v23.__cosval * v48 * v97)
      + v60 * (v61 * v100 + v23.__sinval * v48 * v91 + v23.__cosval * v48 * v99);
  double v66 = cosval;
  double v67 = -(v92 * sinval);
  double v68 = v23.__sinval * v67 - v90;
  double v69 = v10 * (-(v92 * cosval) * v98 + v68 * v96 + (v89 + v23.__cosval * v67) * v97)
      + v60 * (-(v92 * cosval) * v100 + v68 * v91 + (v89 + v23.__cosval * v67) * v99);
  uint64_t v70 = v52[4];
  *(double *)(v70 + 40 * v53) = v64;
  *(double *)(v70 + 32 * v53) = v65;
  *(double *)(v70 + 24 * v53) = v69;
  if ((unint64_t)v53 <= 1) {
    goto LABEL_55;
  }
  if (__OFADD__(v54, 1)) {
    goto LABEL_52;
  }
  double v71 = v10 * (v67 * v57 + v23.__sinval * v87 * v62 + v23.__cosval * v87 * v58)
      + v60 * (v67 * v55 + v23.__sinval * v87 * v63 + v23.__cosval * v87 * v56);
  double v72 = v10 * (v48 * v57 + v88 * v62 + v47 * v58) + v60 * (v48 * v55 + v88 * v63 + v47 * v56);
  *(double *)(v70 + 8 * (v54 + 1)) = v10 * (v86 * v62 + v68 * v58) + v60 * (v86 * v63 + v68 * v56);
  uint64_t v73 = 32 * v53;
  *(double *)(v70 + ((32 * v53) | 8)) = v71;
  *(double *)(v70 + 24 * v53 + 8) = v72;
  if ((unint64_t)v53 <= 2) {
    goto LABEL_55;
  }
  if (__OFADD__(v54, 2))
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  *(double *)(v70 + 8 * (v54 + 2)) = v10 * (v23.__cosval * v66 * v62 + -(v66 * v23.__sinval) * v58)
                                   + v60 * (v23.__cosval * v66 * v63 + -(v66 * v23.__sinval) * v56);
  *(double *)(v70 + (v73 | 0x10)) = v10 * (-(v59 * v23.__sinval) * v62 - v66 * v57 + -(v59 * v23.__cosval) * v58)
                                  + v60 * (-(v59 * v23.__sinval) * v63 - v66 * v55 + -(v59 * v23.__cosval) * v56);
  if ((unint64_t)v53 > 5)
  {
    double v74 = v85;
    double v75 = v84;
    double v76 = v83;
    double v77 = v82;
    if (!__OFADD__(v54, 5))
    {
      double v78 = v94;
      double v79 = v95;
      *(double *)(v70 + 8 * (v54 + 5)) = v10 * (v84 * v94 - v85 * v95) + 1.0;
      *(double *)(v73 + v70 + 40) = v10 * (v23.__sinval * (v41 * v41) * v78 + v23.__cosval * (v41 * v41) * v79);
      uint64_t v80 = v70 + 40 * v53;
      *(double *)(v80 + 24) = v10 * (v77 * v78 - v76 * v79);
      *(double *)(v80 + 32) = v10 * (v78 * -v23.__sinval - v23.__cosval * v79);
      *(double *)(v70 + (v73 | 0x18)) = v10 * (v41 * v74 * v78 + v41 * v75 * v79);
      return sub_25434F220(a1);
    }
    goto LABEL_54;
  }
LABEL_55:
  uint64_t result = sub_25436D4F0();
  __break(1u);
  return result;
}

void DKOmni3DMotionFilter.__allocating_init(configuration:stateSize:)()
{
}

void DKOmni3DMotionFilter.init(configuration:stateSize:)()
{
}

uint64_t sub_2543558F0()
{
  return swift_release();
}

uint64_t DKOmni3DMotionFilter.deinit()
{
  uint64_t v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKOmni3DMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2543559AC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKOmni3DMotionFilter_omni3DConfiguration) = a1;
  uint64_t v2 = qword_2703B3600;
  uint64_t v3 = swift_retain();
  sub_254353F8C(v3, v2);
  uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  unint64_t v6 = v5[2];
  if ((uint64_t)v6 < 1) {
    goto LABEL_73;
  }
  unint64_t v7 = v5[3];
  if ((uint64_t)v7 <= 0) {
    goto LABEL_73;
  }
  uint64_t v8 = (void *)v5[4];
  void *v8 = 0x3FAEB851EB851EB8;
  if (v6 < 2 || v7 == 1) {
    goto LABEL_73;
  }
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v8[v6 + 1] = 0x3FAEB851EB851EB8;
  if (v6 < 3 || v7 <= 2) {
    goto LABEL_73;
  }
  if ((uint64_t)(v6 + 0x4000000000000000) < 0) {
    goto LABEL_55;
  }
  if (__OFADD__(2 * v6, 2))
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v8[2 * v6 + 2] = 0x3FAEB851EB851EB8;
  if (v6 < 6 || v7 <= 5) {
    goto LABEL_73;
  }
  uint64_t v12 = 5 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)5) >> 64 != (uint64_t)(5 * v6) >> 63) {
    goto LABEL_57;
  }
  BOOL v13 = __OFADD__(v12, 5);
  uint64_t v14 = v12 + 5;
  if (v13)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v8[v14] = 0x3F9EB851EB851EB8;
  v8[4 * v6 + 4] = 0x3F9EB851EB851EB8;
  v8[3 * v6 + 3] = 0x3FE1EB851EB851ECLL;
  if (v6 < 7 || v7 <= 6) {
    goto LABEL_73;
  }
  uint64_t v16 = 6 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)6) >> 64 != (uint64_t)(6 * v6) >> 63) {
    goto LABEL_59;
  }
  BOOL v13 = __OFADD__(v16, 6);
  uint64_t v17 = v16 + 6;
  if (v13)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v8[v17] = 0x3F9999999999999ALL;
  if (v6 < 8 || v7 <= 7) {
    goto LABEL_73;
  }
  uint64_t v18 = 8 * v6;
  uint64_t v19 = 7 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)7) >> 64 != (uint64_t)(7 * v6) >> 63) {
    goto LABEL_61;
  }
  BOOL v13 = __OFADD__(v19, 7);
  uint64_t v20 = v19 + 7;
  if (v13)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v8[v20] = 0x3F9999999999999ALL;
  if (v6 < 9 || v7 <= 8) {
    goto LABEL_73;
  }
  if ((v6 - 0x1000000000000000) >> 61 != 7) {
    goto LABEL_63;
  }
  BOOL v13 = __OFADD__(v18, 8);
  uint64_t v21 = v18 + 8;
  if (v13)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v8[v21] = 0x3FA47AE147AE147BLL;
  if (v6 < 0xC || v7 <= 0xB) {
    goto LABEL_73;
  }
  uint64_t v22 = 11 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)11) >> 64 != (uint64_t)(11 * v6) >> 63) {
    goto LABEL_65;
  }
  BOOL v13 = __OFADD__(v22, 11);
  uint64_t v23 = v22 + 11;
  if (v13)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v8[v23] = 0x3F847AE147AE147BLL;
  v8[10 * v6 + 10] = 0x3F847AE147AE147BLL;
  v8[9 * v6 + 9] = 0x3F947AE147AE147BLL;
  if (v6 < 0xD || v7 <= 0xC) {
    goto LABEL_73;
  }
  uint64_t v24 = 12 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)12) >> 64 != (uint64_t)(12 * v6) >> 63) {
    goto LABEL_67;
  }
  BOOL v13 = __OFADD__(v24, 12);
  uint64_t v25 = v24 + 12;
  if (v13)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v8[v25] = 0x3F847AE147AE147BLL;
  if (v6 < 0xE || v7 <= 0xD) {
    goto LABEL_73;
  }
  uint64_t v26 = 13 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)13) >> 64 != (uint64_t)(13 * v6) >> 63) {
    goto LABEL_69;
  }
  BOOL v13 = __OFADD__(v26, 13);
  uint64_t v27 = v26 + 13;
  if (v13)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v8[v27] = 0x3F847AE147AE147BLL;
  if (v6 < 0xF || v7 <= 0xE) {
    goto LABEL_73;
  }
  uint64_t v28 = 14 * v6;
  if ((unsigned __int128)((uint64_t)v6 * (__int128)14) >> 64 == (uint64_t)(14 * v6) >> 63)
  {
    if (!__OFADD__(v28, 14))
    {
      v8[v28 + 14] = 0x3F8EB851EB851EB8;
      return;
    }
    goto LABEL_72;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  sub_25436D4F0();
  __break(1u);
}

unint64_t sub_254355D58()
{
  unint64_t result = qword_269DDA0B0;
  if (!qword_269DDA0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA0B0);
  }
  return result;
}

unint64_t sub_254355DB0()
{
  unint64_t result = qword_269DDA0B8;
  if (!qword_269DDA0B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269DDA0C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA0B8);
  }
  return result;
}

uint64_t sub_254355E0C()
{
  return type metadata accessor for DKOmni3DMotionFilter(0);
}

uint64_t type metadata accessor for DKOmni3DMotionFilter(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DDA0C8);
}

uint64_t method lookup function for DKOmni3DMotionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKOmni3DMotionFilter);
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.updateQ(row:column:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.getState(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.setState(index:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t sub_254355EE4()
{
  return type metadata accessor for DKOmni3DMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKOmni3DMotionFilter.Measurement(uint64_t a1)
{
  return sub_254252A6C(a1, (uint64_t *)&unk_269DDA0D8);
}

uint64_t method lookup function for DKOmni3DMotionFilter.Measurement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKOmni3DMotionFilter.Measurement);
}

uint64_t getEnumTagSinglePayload for DKOmni3DMotionFilter.Index(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DKOmni3DMotionFilter.Index(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254356080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKOmni3DMotionFilter.Index()
{
  return &type metadata for DKOmni3DMotionFilter.Index;
}

uint64_t type metadata accessor for DKOmni3DMotionFilter.Configuration()
{
  return self;
}

BOOL static DKIntelligentTrackingConfig.PipelineMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void __swiftcall DKPIDConfig.init(kp:kd:ki:kv:clampIntegralZero:integralLimits:)(IntelligentTrackingCore::DKPIDConfig *__return_ptr retstr, Swift::OpaquePointer kp, Swift::OpaquePointer kd, Swift::OpaquePointer ki, Swift::OpaquePointer kv, Swift::Bool clampIntegralZero, Swift::OpaquePointer integralLimits)
{
  retstr->kp = kp;
  retstr->kd = kd;
  retstr->kuint64_t i = ki;
  retstr->kv = kv;
  retstr->clampIntegralZero = clampIntegralZero;
  retstr->integralLimits = integralLimits;
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.hash(into:)()
{
  return sub_25436D900();
}

uint64_t sub_254356130()
{
  uint64_t v1 = 0x657069506574696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x657265666E496F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657069506C6C7566;
  }
}

uint64_t sub_254356198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254358568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2543561C0(uint64_t a1)
{
  unint64_t v2 = sub_254356704();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2543561FC(uint64_t a1)
{
  unint64_t v2 = sub_254356704();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254356238(uint64_t a1)
{
  unint64_t v2 = sub_254356800();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254356274(uint64_t a1)
{
  unint64_t v2 = sub_254356800();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2543562B0(uint64_t a1)
{
  unint64_t v2 = sub_2543567AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2543562EC(uint64_t a1)
{
  unint64_t v2 = sub_2543567AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254356328(uint64_t a1)
{
  unint64_t v2 = sub_254356758();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254356364(uint64_t a1)
{
  unint64_t v2 = sub_254356758();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA0E8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA0F0);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA0F8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA100);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254356704();
  sub_25436D950();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_2543567AC();
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_254356758();
      uint64_t v17 = v23;
      sub_25436D680();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_254356800();
    sub_25436D680();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_254356704()
{
  unint64_t result = qword_269DDA108;
  if (!qword_269DDA108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA108);
  }
  return result;
}

unint64_t sub_254356758()
{
  unint64_t result = qword_269DDA110;
  if (!qword_269DDA110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA110);
  }
  return result;
}

unint64_t sub_2543567AC()
{
  unint64_t result = qword_269DDA118;
  if (!qword_269DDA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA118);
  }
  return result;
}

unint64_t sub_254356800()
{
  unint64_t result = qword_269DDA120;
  if (!qword_269DDA120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA120);
  }
  return result;
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.hashValue.getter()
{
  return sub_25436D930();
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  double v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA128);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA130);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA138);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA140);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254356704();
  uint64_t v12 = (uint64_t)v39;
  sub_25436D940();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  double v15 = v11;
  uint64_t v16 = sub_25436D660();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_25436D350();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD8390);
    *uint64_t v23 = &type metadata for DKIntelligentTrackingConfig.PipelineMode;
    sub_25436D5C0();
    sub_25436D340();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_2543567AC();
      uint64_t v18 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_254356758();
      uint64_t v25 = v30;
      sub_25436D5B0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_254356800();
    uint64_t v24 = v30;
    sub_25436D5B0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_254356E54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DKIntelligentTrackingConfig.PipelineMode.init(from:)(a1, a2);
}

uint64_t sub_254356E6C(void *a1)
{
  return DKIntelligentTrackingConfig.PipelineMode.encode(to:)(a1);
}

uint64_t sub_254356E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(*(void *)a1 + 40);
  char v5 = *(unsigned char *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 56);
  *(void *)a2 = *(void *)(*(void *)a1 + 16);
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_254356EFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *a2;
  *(void *)(v7 + 16) = *(void *)a1;
  *(void *)(v7 + 24) = v2;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v4;
  *(unsigned char *)(v7 + 48) = v5;
  *(void *)(v7 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254356FC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_254357038(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2543570BC()
{
  return swift_retain();
}

uint64_t sub_2543570C4(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t sub_2543570D4()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_2543570DC(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t sub_2543570E4()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t sub_2543570EC(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

uint64_t (*sub_2543570F4())()
{
  return nullsub_1;
}

uint64_t sub_254357114@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254357120(void *a1)
{
  *(void *)(v1 + 80) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_254357130()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_254357138(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

void sub_254357140(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 89);
}

unsigned char *sub_25435714C(unsigned char *result)
{
  *(unsigned char *)(v1 + 89) = *result;
  return result;
}

uint64_t (*sub_254357158())()
{
  return nullsub_1;
}

uint64_t sub_254357178()
{
  return swift_retain();
}

uint64_t sub_254357180(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return swift_release();
}

double sub_254357190()
{
  return *(double *)(v0 + 112);
}

void sub_254357198(double a1)
{
  *(double *)(v1 + 112) = a1;
}

__n128 sub_2543571A0@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 152);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 sub_2543571B8(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 136) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 152) = result;
  return result;
}

uint64_t DKIntelligentTrackingConfig.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DKIntelligentTrackingConfig.init()();
  return v0;
}

uint64_t DKIntelligentTrackingConfig.init()()
{
  *(unsigned char *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 104) = xmmword_254378740;
  *(_OWORD *)(v0 + 168) = xmmword_254378750;
  *(void *)(v0 + 16) = &unk_2703B3620;
  *(void *)(v0 + 24) = &unk_2703B3650;
  *(void *)(v0 + 32) = &unk_2703B3680;
  *(void *)(v0 + 40) = &unk_2703B36B0;
  *(unsigned char *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = &unk_2703B36E0;
  type metadata accessor for DKMultiSubjectTrackerConfiguration();
  swift_allocObject();
  *(void *)(v0 + 64) = DKMultiSubjectTrackerConfiguration.init()();
  *(_WORD *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = &unk_2703B3710;
  *(unsigned char *)(v0 + 89) = 0;
  type metadata accessor for DKFramingEngine.Config();
  *(void *)(v0 + 96) = swift_allocObject();
  *(_OWORD *)(v0 + 120) = xmmword_254378760;
  *(_OWORD *)(v0 + 136) = xmmword_254378770;
  *(_OWORD *)(v0 + 152) = xmmword_254378780;
  return v0;
}

uint64_t DKIntelligentTrackingConfig.__allocating_init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t *a5, char *a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v16 = swift_allocObject();
  DKIntelligentTrackingConfig.init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t DKIntelligentTrackingConfig.init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t *a5, char *a6, uint64_t a7, _OWORD *a8)
{
  *(_OWORD *)(v8 + 104) = xmmword_254378740;
  *(_OWORD *)(v8 + 168) = xmmword_254378750;
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  long long v10 = a8[1];
  *(_OWORD *)(v8 + 120) = *a8;
  char v11 = *(unsigned char *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *a5;
  char v14 = *a6;
  *(unsigned char *)(v8 + 88) = 0;
  *(unsigned char *)(v8 + 48) = v11;
  *(void *)(v8 + 56) = v12;
  *(void *)(v8 + 64) = a2;
  *(unsigned char *)(v8 + 72) = a3;
  *(unsigned char *)(v8 + 73) = a4;
  *(void *)(v8 + 80) = v13;
  *(unsigned char *)(v8 + 89) = v14;
  *(void *)(v8 + 96) = a7;
  *(_OWORD *)(v8 + 136) = v10;
  *(_OWORD *)(v8 + 152) = a8[2];
  return v8;
}

uint64_t DKIntelligentTrackingConfig.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DKIntelligentTrackingConfig.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_254357504()
{
  unint64_t result = qword_269DDA148;
  if (!qword_269DDA148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA148);
  }
  return result;
}

uint64_t sub_254357560@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 64);
  return swift_retain();
}

uint64_t sub_254357570(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 64) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2543575B4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 72);
  return result;
}

unsigned char *sub_2543575C4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 72) = *result;
  return result;
}

uint64_t sub_2543575D4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 73);
  return result;
}

unsigned char *sub_2543575E4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 73) = *result;
  return result;
}

uint64_t sub_2543575F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254357604(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 80) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254357648@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 88);
  return result;
}

unsigned char *sub_254357658(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 88) = *result;
  return result;
}

uint64_t sub_254357668@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 89);
  return result;
}

unsigned char *sub_254357678(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 89) = *result;
  return result;
}

uint64_t sub_254357688@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 96);
  return swift_retain();
}

uint64_t sub_254357698(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 96) = *a1;
  swift_retain();
  return swift_release();
}

double sub_2543576DC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 104);
  *a2 = result;
  return result;
}

double sub_2543576EC(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 104) = *a1;
  return result;
}

double sub_2543576FC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 112);
  *a2 = result;
  return result;
}

double sub_25435770C(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 112) = *a1;
  return result;
}

__n128 sub_25435771C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  long long v3 = *(_OWORD *)(*a1 + 136);
  *(_OWORD *)a2 = *(_OWORD *)(*a1 + 120);
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(v2 + 152);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

__n128 sub_254357738(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 136) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v2 + 152) = result;
  return result;
}

double sub_254357754@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 168);
  *a2 = result;
  return result;
}

double sub_254357764(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 168) = *a1;
  return result;
}

double sub_254357774@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(*(void *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_254357784(double *a1, uint64_t a2)
{
  double result = *a1;
  *(double *)(*(void *)a2 + 176) = *a1;
  return result;
}

uint64_t destroy for DKPIDConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPIDConfig(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPIDConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPIDConfig()
{
  return &type metadata for DKPIDConfig;
}

uint64_t type metadata accessor for DKIntelligentTrackingConfig()
{
  return self;
}

uint64_t method lookup function for DKIntelligentTrackingConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DKIntelligentTrackingConfig);
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.__allocating_init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)()
{
  return (*(uint64_t (**)(void))(v0 + 504))();
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode;
}

unsigned char *_s23IntelligentTrackingCore27DKIntelligentTrackingConfigC12PipelineModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2543581E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys;
}

unint64_t sub_254358254()
{
  unint64_t result = qword_269DDA150;
  if (!qword_269DDA150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA150);
  }
  return result;
}

unint64_t sub_2543582AC()
{
  unint64_t result = qword_269DDA158;
  if (!qword_269DDA158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA158);
  }
  return result;
}

unint64_t sub_254358304()
{
  unint64_t result = qword_269DDA160;
  if (!qword_269DDA160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA160);
  }
  return result;
}

unint64_t sub_25435835C()
{
  unint64_t result = qword_269DDA168;
  if (!qword_269DDA168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA168);
  }
  return result;
}

unint64_t sub_2543583B4()
{
  unint64_t result = qword_269DDA170;
  if (!qword_269DDA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA170);
  }
  return result;
}

unint64_t sub_25435840C()
{
  unint64_t result = qword_269DDA178;
  if (!qword_269DDA178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA178);
  }
  return result;
}

unint64_t sub_254358464()
{
  unint64_t result = qword_269DDA180;
  if (!qword_269DDA180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA180);
  }
  return result;
}

unint64_t sub_2543584BC()
{
  unint64_t result = qword_269DDA188;
  if (!qword_269DDA188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA188);
  }
  return result;
}

unint64_t sub_254358514()
{
  unint64_t result = qword_269DDA190;
  if (!qword_269DDA190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269DDA190);
  }
  return result;
}

uint64_t sub_254358568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657069506C6C7566 && a2 == 0xEC000000656E696CLL;
  if (v2 || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657069506574696CLL && a2 == 0xEC000000656E696CLL || (sub_25436D7B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657265666E496F6ELL && a2 == 0xEB0000000065636ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_25436D7B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t DKLogVideoRecorder.__allocating_init(url:)(uint64_t a1)
{
  swift_allocObject();
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_254314D08;
  return DKLogVideoRecorder.init(url:)(a1);
}

uint64_t DKLogVideoRecorder.init(url:)(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  uint64_t v3 = sub_25436C610();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25435886C, 0, 0);
}

uint64_t sub_25435886C()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[24];
  *(unsigned char *)(v0[25] + 32) = 0;
  sub_25436C9E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = (void *)*MEMORY[0x263EF9898];
  id v6 = objc_allocWithZone(MEMORY[0x263EFA518]);
  id v7 = v5;
  id v8 = sub_25435B930(v1, (uint64_t)v7);

  uint64_t v9 = v0[27];
  uint64_t v11 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v12 = v0[24];
  *(void *)(v11 + 16) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269DDA1A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25436E6A0;
  *(void *)(inited + 32) = sub_25436CC00();
  *(void *)(inited + 40) = v14;
  double v15 = (void *)*MEMORY[0x263EFA368];
  type metadata accessor for AVVideoCodecType(0);
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 48) = v15;
  *(void *)(inited + 80) = sub_25436CC00();
  *(void *)(inited + 88) = v17;
  uint64_t v18 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 120) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 96) = 1920;
  *(void *)(inited + 128) = sub_25436CC00();
  *(void *)(inited + 136) = v19;
  *(void *)(inited + 168) = v18;
  *(void *)(inited + 144) = 1080;
  id v20 = v15;
  sub_2542649E4(inited);
  uint64_t v21 = (void *)*MEMORY[0x263EF9D48];
  id v22 = objc_allocWithZone(MEMORY[0x263EFA520]);
  id v23 = v21;
  uint64_t v24 = (void *)sub_25436CAA0();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithMediaType_outputSettings_, v23, v24);

  *(void *)(v11 + 24) = v25;
  objc_msgSend(*(id *)(v11 + 16), sel_addInput_, v25);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v10);
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v27 = v0[25];
  return v26(v27);
}

uint64_t sub_254358BEC()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_254358C0C, 0, 0);
}

uint64_t sub_254358C0C()
{
  uint64_t v1 = v0[15];
  objc_msgSend(*(id *)(v1 + 24), sel_markAsFinished);
  uint64_t v2 = *(void **)(v1 + 16);
  v0[16] = v2;
  v0[2] = v0;
  v0[3] = sub_254358D18;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_254358ED0;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v2, sel_finishWritingWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_254358D18()
{
  return MEMORY[0x270FA2498](sub_254358DF8, 0, 0);
}

uint64_t sub_254358DF8()
{
  uint64_t v1 = *(void *)(v0 + 120);

  if (objc_msgSend(*(id *)(v1 + 16), sel_status) != (id)2)
  {
    sub_254261A48();
    swift_allocError();
    *(void *)uint64_t v3 = 0xD000000000000014;
    *(void *)(v3 + 8) = 0x800000025437ED10;
    *(unsigned char *)(v3 + 16) = 0;
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_254358ED0(uint64_t a1)
{
  return MEMORY[0x270FA2400](*(void *)(a1 + 32));
}

void sub_254358ED8(__CVBuffer *a1, Float64 a2)
{
  CMSampleBufferRef v3 = sub_25435BAA4(a1, a2);
  if (v3)
  {
    CMSampleBufferRef v4 = v3;
    objc_msgSend(*(id *)(v2 + 24), sel_appendSampleBuffer_);
  }
}

uint64_t DKLogVideoRecorder.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKLogVideoRecorder_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKLogVideoRecorder.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKLogVideoRecorder_logger;
  uint64_t v2 = sub_25436C9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKLogKeyframeRecorder.__allocating_init(logFolder:startTime:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25431D6E4;
  return DKLogKeyframeRecorder.init(logFolder:startTime:)(a1, a2);
}

uint64_t DKLogKeyframeRecorder.init(logFolder:startTime:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_25436C9C0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_25436C610();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25435927C, 0, 0);
}

uint64_t sub_25435927C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v19 = v0[6];
  uint64_t v20 = v0[12];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes) = MEMORY[0x263F8EE78];
  sub_25436C9E0();
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe) = 0;
  uint64_t v9 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger;
  v0[14] = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger;
  *(void *)(v6 + v9) = 0;
  uint64_t v10 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
  uint64_t v11 = sub_25436C7B0();
  v0[15] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v0[16] = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v8, v11);
  uint64_t v13 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v14(v13, v7, v2);
  sub_25436C9A0();
  sub_25436C5C0();
  double v15 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[17] = v15;
  v0[18] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v5, v19);
  v14(v20, v1, v2);
  type metadata accessor for DKLogVideoRecorder(0);
  swift_allocObject();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[19] = v16;
  void *v16 = v0;
  v16[1] = sub_2543594F4;
  uint64_t v17 = v0[12];
  return DKLogVideoRecorder.init(url:)(v17);
}

uint64_t sub_2543594F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_254359868;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_254359644;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_254359644()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[17];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  *(void *)(v0[5] + v0[14]) = v0[21];
  swift_release();
  sub_25436C9B0();
  sub_25436C5C0();
  v1(v2, v3);
  id v4 = objc_msgSend(self, sel_defaultManager);
  uint64_t v5 = (void *)sub_25436C5B0();
  v0[2] = 0;
  LODWORD(v3) = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 0, 0, v0 + 2);

  uint64_t v6 = (void *)v0[2];
  if (v3)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = v6;
    uint64_t v9 = (void *)sub_25436C570();

    swift_willThrow();
  }
  uint64_t v10 = v0[13];
  uint64_t v12 = v0[10];
  uint64_t v11 = v0[11];
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[3];
  (*(void (**)(void, void))(v0[16] + 8))(v0[4], v0[15]);
  double v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v15(v14, v13);
  v15(v11, v13);
  v15(v10, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v17 = v0[5];
  return v16(v17);
}

uint64_t sub_254359868()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
  id v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v7, v5);
  v8(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_254359994()
{
  v1[3] = v0;
  uint64_t v2 = sub_25436C9C0();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_25436C610();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_254359AC0, 0, 0);
}

uint64_t sub_254359AC0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes;
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes);
  if (!(v3 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_25436D530();
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
LABEL_3:
    sub_25436C460();
    swift_allocObject();
    sub_25436C450();
    v0[2] = *(void *)(v1 + v2);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD98F0);
    sub_25435BBA0();
    uint64_t v4 = sub_25436C440();
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v10 = v0[3];
    uint64_t v18 = v0[4];
    unint64_t v19 = v11;
    uint64_t v20 = v4;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder, v6);
    sub_25436C9A0();
    sub_25436C5C0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v18);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v12(v5, v6);
    sub_25436C6C0();
    v12(v0[10], v0[7]);
    sub_2542564BC(v20, v19);
    swift_release();
  }
LABEL_5:
  uint64_t v14 = *(void *)(v0[3] + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger);
  v0[11] = v14;
  if (v14)
  {
    swift_retain();
    double v15 = (void *)swift_task_alloc();
    v0[12] = v15;
    void *v15 = v0;
    v15[1] = sub_254359DFC;
    v15[15] = v14;
    return MEMORY[0x270FA2498](sub_254358C0C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_254359DFC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_254359F90;
  }
  else {
    uint64_t v2 = sub_254359F10;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_254359F10()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_254359F90()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25435A018()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe;
  if (!*(void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe)) {
    goto LABEL_4;
  }
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes);
  uint64_t v8 = swift_retain_n();
  MEMORY[0x25A275490](v8);
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_7;
  }
  while (1)
  {
    sub_25436CE60();
    sub_25436CDE0();
    swift_release();
LABEL_4:
    sub_25436C790();
    type metadata accessor for DKKeyframeStorage(0);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x263F8EE78];
    uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    *uint64_t v10 = 0;
    v10[1] = 0;
    unint64_t v11 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v3 += 32;
    v11(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v5, v2);
    *uint64_t v10 = 0;
    v10[1] = 0;
    swift_bridgeObjectRelease();
    *(void *)(v1 + v6) = v9;
    uint64_t result = swift_release();
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex);
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14) {
      break;
    }
    __break(1u);
LABEL_7:
    sub_25436CE10();
  }
  *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex) = v15;
  return result;
}

uint64_t sub_25435A1E4(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
  {
    uint64_t v2 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25436F130;
    sub_25427215C(v2, inited + 32);
    swift_retain();
    uint64_t v4 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7B08);
    swift_arrayDestroy();
    sub_25427DB14((uint64_t)v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_25435A2B4(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
  {
    uint64_t v2 = result;
    swift_retain();
    uint64_t v3 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(v2);
    sub_25427DB14((uint64_t)v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_25435A334(__CVBuffer *a1)
{
  BOOL v52 = a1;
  uint64_t v2 = sub_25436C7B0();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  double v47 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v45 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269DD7A28);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_25436C9C0();
  uint64_t v9 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  unint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25436C610();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v50 = v1;
  uint64_t v51 = v20;
  ((void (*)(char *, uint64_t, uint64_t, double))v20)(v15, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder, v12, v17);
  uint64_t v55 = 0x2F6567616D69;
  unint64_t v56 = 0xE600000000000000;
  uint64_t v45 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex;
  uint64_t v54 = *(void *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex);
  sub_25436D760();
  sub_25436CCB0();
  swift_bridgeObjectRelease();
  sub_25436CCB0();
  sub_25436C9A0();
  sub_25436C5C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v53);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  id v22 = v15;
  id v23 = v52;
  v21(v22, v12);
  uint64_t v53 = (uint64_t)v19;
  uint64_t v24 = v19;
  uint64_t v25 = v12;
  v51(v8, v24, v12);
  uint64_t v26 = v50;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v23, (uint64_t)v8);
  uint64_t v28 = v27;
  sub_254257ADC((uint64_t)v8);
  if (v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe);
    if (v29)
    {
      uint64_t v55 = *(void *)(v26 + v45);
      swift_retain();
      uint64_t v30 = sub_25436D760();
      uint64_t v31 = (uint64_t *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
      *uint64_t v31 = v30;
      v31[1] = v32;
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = *(void *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger);
  if (v33)
  {
    swift_retain();
    uint64_t v34 = v46;
    sub_25436C7A0();
    uint64_t v35 = v26 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
    uint64_t v37 = v47;
    uint64_t v36 = v48;
    uint64_t v38 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v35, v49);
    sub_25436C700();
    Float64 v40 = v39;
    char v41 = *(void (**)(char *, uint64_t))(v36 + 8);
    v41(v37, v38);
    v41(v34, v38);
    CMSampleBufferRef v42 = sub_25435BAA4(v23, v40);
    if (v42)
    {
      CMSampleBufferRef v43 = v42;
      objc_msgSend(*(id *)(v33 + 24), sel_appendSampleBuffer_, v42);
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v21)(v53, v25);
}