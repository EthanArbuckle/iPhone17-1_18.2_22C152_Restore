void sub_24FAD0794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSiriSimpleActivationSourceClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!SiriActivationLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x263EF8330];
    v3[2] = (void *)3221225472;
    v3[3] = __SiriActivationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_265340728;
    uint64_t v5 = 0;
    SiriActivationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!SiriActivationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getSiriSimpleActivationSourceClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("SiriSimpleActivationSource");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getSiriSimpleActivationSourceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SiriActivationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SiriActivationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_24FAD0964(unint64_t a1)
{
  uint64_t v2 = v1;
  long long v4 = (uint64_t *)(v1 + 16);
  uint64_t v5 = (unint64_t *)(v1 + 24);
  swift_beginAccess();
  for (i = *(void **)(v2 + 16); ; i = (void *)*v4)
  {
    unint64_t v8 = i[2];
    if ((uint64_t)v8 <= (uint64_t)a1) {
      break;
    }
    swift_beginAccess();
    v9 = (void *)*v4;
    if (*(void *)(*v4 + 16))
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *long long v4 = (uint64_t)v9;
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v8 = v9[2];
        if (!v8) {
          goto LABEL_20;
        }
      }
      else
      {
        v9 = sub_24FAD4E20(v9);
        *long long v4 = (uint64_t)v9;
        unint64_t v8 = v9[2];
        if (!v8)
        {
LABEL_20:
          __break(1u);
          break;
        }
      }
      v9[2] = v8 - 1;
      *long long v4 = (uint64_t)v9;
    }
    swift_endAccess();
    swift_beginAccess();
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_24FB48518();
      swift_bridgeObjectRelease();
      if (!v17)
      {
LABEL_2:
        v7 = 0;
        goto LABEL_3;
      }
    }
    else if (!*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_2;
    }
    unint64_t v11 = *v5;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v5 = v11;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v11 & 0x8000000000000000) != 0
      || (v11 & 0x4000000000000000) != 0)
    {
      sub_24FAD4DA4(v11);
      unint64_t v11 = v13;
      *uint64_t v5 = v13;
    }
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFFF8;
    uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
    {
      __break(1u);
      return;
    }
    uint64_t v16 = v15 - 1;
    v7 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20);
    *(void *)(v14 + 16) = v16;
    sub_24FB48168();
LABEL_3:
    swift_endAccess();
  }
  if (v8 < a1)
  {
    uint64_t v18 = *MEMORY[0x263F815B0];
    do
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F816C8]), sel_initWithMarkerFormat_options_, v18, 0);
      uint64_t v19 = swift_beginAccess();
      MEMORY[0x25336E4C0](v19);
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24FB48188();
      }
      sub_24FB481B8();
      sub_24FB48168();
      swift_endAccess();
      swift_beginAccess();
      v20 = (void *)*v4;
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      *long long v4 = (uint64_t)v20;
      if ((v21 & 1) == 0)
      {
        v20 = sub_24FAD47C4(0, v20[2] + 1, 1, v20);
        *long long v4 = (uint64_t)v20;
      }
      unint64_t v23 = v20[2];
      unint64_t v22 = v20[3];
      if (v23 >= v22 >> 1)
      {
        v20 = sub_24FAD47C4((void *)(v22 > 1), v23 + 1, 1, v20);
        *long long v4 = (uint64_t)v20;
      }
      v20[2] = v23 + 1;
      v20[v23 + 4] = 0;
      uint64_t v24 = *v4;
      swift_endAccess();
    }
    while (*(void *)(v24 + 16) < a1);
  }
}

uint64_t sub_24FAD0C48(uint64_t a1, void *a2)
{
  uint64_t v5 = (unint64_t *)(v2 + 24);
  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(void *)(v2 + 24);
  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
LABEL_3:
    unint64_t v8 = (unint64_t *)(v2 + 16);
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)(v2 + 16) + 16)) {
      return result;
    }
    unint64_t v9 = *v5;
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_24FB48518();
      swift_bridgeObjectRelease();
      unint64_t v11 = v17 - 1;
      if (!__OFSUB__(v17, 1)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v11 = v10 - 1;
      if (!__OFSUB__(v10, 1))
      {
LABEL_6:
        swift_beginAccess();
        unint64_t v12 = *v5;
        unint64_t v9 = a2;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v5 = v12;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v12 & 0x8000000000000000) != 0
          || (v12 & 0x4000000000000000) != 0)
        {
          sub_24FAD4DA4(v12);
          unint64_t v12 = (unint64_t)v14;
          *uint64_t v5 = (unint64_t)v14;
        }
        if ((v11 & 0x8000000000000000) == 0)
        {
          if (v11 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v15 = *(void **)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20);
            *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20) = v9;

            sub_24FB48168();
            swift_endAccess();
            a2 = *(void **)(*v8 + 16);
            swift_beginAccess();
            unint64_t v9 = *v8;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *unint64_t v8 = v9;
            if (result)
            {
              if (a2) {
                goto LABEL_14;
              }
              goto LABEL_25;
            }
LABEL_24:
            uint64_t result = (uint64_t)sub_24FAD4E20((void *)v9);
            unint64_t v9 = result;
            *unint64_t v8 = result;
            if (a2)
            {
LABEL_14:
              if ((unint64_t)a2 <= *(void *)(v9 + 16))
              {
                *(void *)(v9 + 8 * ((uint64_t)a2 - 1) + 32) = a1;
                return swift_endAccess();
              }
LABEL_26:
              __break(1u);
              return result;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24FB48518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_24FAD0E54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ListTracker()
{
  return self;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_24FAD0EC8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24FAD0EE8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

id sub_24FAD0F24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E3F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24FB48F20;
  uint64_t v1 = (void *)*MEMORY[0x263F815B8];
  uint64_t v2 = (void *)*MEMORY[0x263F815D0];
  *(void *)(v0 + 32) = *MEMORY[0x263F815B8];
  *(void *)(v0 + 40) = v2;
  id v6 = (id)*MEMORY[0x263F815D8];
  *(void *)(v0 + 48) = *MEMORY[0x263F815D8];
  off_269A4E2A8 = (_UNKNOWN *)v0;
  id v3 = v1;
  id v4 = v2;
  return v6;
}

uint64_t sub_24FAD0FC0@<X0>(void (**a1)(char *, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v288 = sub_24FB46E68();
  uint64_t v265 = *(void *)(v288 - 8);
  MEMORY[0x270FA5388](v288);
  v295 = (char *)&v264 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E300);
  uint64_t v4 = MEMORY[0x270FA5388](v327);
  v326 = (char *)&v264 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v325 = (char *)&v264 - v6;
  uint64_t v329 = type metadata accessor for RestoreWhiteSpaceLocation();
  uint64_t v7 = *(void *)(v329 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v329);
  v330 = (char *)&v264 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v282 = (char *)&v264 - v10;
  uint64_t v318 = sub_24FB46DF8();
  uint64_t v275 = *(void *)(v318 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v318);
  v315 = (uint64_t *)((char *)&v264 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  v310 = (char *)&v264 - v13;
  uint64_t v312 = sub_24FB46DB8();
  uint64_t v291 = *(void *)(v312 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v312);
  v309 = (char *)&v264 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v301 = (char *)&v264 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E308);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  v287 = (char *)&v264 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v296 = (uint64_t)&v264 - v21;
  MEMORY[0x270FA5388](v20);
  v280 = (char *)&v264 - v22;
  uint64_t v302 = sub_24FB46E08();
  uint64_t v274 = *(void *)(v302 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v302);
  v294 = (char *)&v264 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v281 = (char *)&v264 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E310);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  v297 = (char *)&v264 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v279 = (char *)&v264 - v29;
  uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E318);
  uint64_t v286 = *(void *)(v278 - 8);
  MEMORY[0x270FA5388](v278);
  v277 = (char *)&v264 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E320);
  uint64_t v283 = *(void *)(v314 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v314);
  v300 = (char *)&v264 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v337 = (char *)&v264 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E328);
  MEMORY[0x270FA5388](v34 - 8);
  v321 = (char *)&v264 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v336 = sub_24FB46D88();
  v320 = *(uint64_t (***)(void, void))(v336 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v336);
  v335 = (char *)&v264 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  v338 = (char *)&v264 - v38;
  uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E330);
  uint64_t v39 = MEMORY[0x270FA5388](v334);
  uint64_t v306 = (uint64_t)&v264 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v316 = (uint64_t)&v264 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v324 = (char *)&v264 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v333 = (uint64_t)&v264 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v49 = (char *)&v264 - v48;
  MEMORY[0x270FA5388](v47);
  v353 = (void (*)(char *, uint64_t))((char *)&v264 - v50);
  unint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E338);
  MEMORY[0x270FA5388](v345);
  uint64_t v344 = (uint64_t)&v264 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24FB46CC8();
  uint64_t v351 = *(void *)(v52 - 8);
  uint64_t v352 = v52;
  uint64_t v53 = MEMORY[0x270FA5388](v52);
  v347 = (char *)&v264 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  v348 = (char *)&v264 - v55;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E340);
  uint64_t v57 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  v350 = (char *)&v264 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_24FB46C98();
  uint64_t v289 = *(void *)(v285 - 8);
  MEMORY[0x270FA5388](v285);
  v284 = (char *)&v264 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_24FB46D18();
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  v343 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v264 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E348);
  MEMORY[0x270FA5388](v63 - 8);
  v323 = (char *)&v264 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E350);
  uint64_t v65 = MEMORY[0x270FA5388](v349);
  v67 = (char *)&v264 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  uint64_t v328 = (uint64_t)&v264 - v68;
  uint64_t v332 = v61;
  v69 = *(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v61 + 16);
  v346 = a1;
  uint64_t v331 = v60;
  unint64_t v341 = v61 + 16;
  v340 = v69;
  v69(a1, v1, v60);
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81720]), sel_init);
  id v71 = objc_msgSend(v70, sel_fontDescriptorWithSymbolicTraits_, 2);
  if (!v71) {
    id v71 = v70;
  }
  v311 = v49;
  uint64_t v339 = v7;
  id v72 = objc_msgSend(v70, sel_fontDescriptorWithSymbolicTraits_, 1);
  if (!v72) {
    id v72 = v70;
  }
  v73 = v72;
  v74 = v70;
  id v75 = objc_msgSend(self, sel_currentDevice);
  id v76 = objc_msgSend(v75, sel_userInterfaceIdiom);

  v77 = self;
  v78 = (void *)MEMORY[0x263F83618];
  if (v76 == (id)1) {
    v78 = (void *)MEMORY[0x263F83628];
  }
  id v307 = objc_msgSend(v77, sel_preferredFontDescriptorWithTextStyle_, *v78);
  v79 = self;
  uint64_t v80 = *MEMORY[0x263F83570];
  id v81 = v71;
  id v269 = objc_msgSend(v79, sel_preferredFontForTextStyle_, v80);
  objc_msgSend(v269, sel_pointSize);
  double v83 = v82;
  id v271 = v74;
  id v84 = objc_msgSend(v79, sel_fontWithDescriptor_size_, v74);
  id v308 = v81;
  id v299 = objc_msgSend(v79, sel_fontWithDescriptor_size_, v81, v83);
  id v270 = v73;
  id v298 = objc_msgSend(v79, sel_fontWithDescriptor_size_, v73, v83);
  double v85 = *MEMORY[0x263F81838];
  id v305 = v79;
  id v304 = objc_msgSend(v79, sel_monospacedSystemFontOfSize_weight_, v83, v85);
  uint64_t KeyPath = swift_getKeyPath();
  *(&v264 - 2) = MEMORY[0x270FA5388](KeyPath);
  swift_getKeyPath();
  uint64_t v357 = (uint64_t)v84;
  unint64_t v87 = sub_24FAD5454();
  id v268 = v84;
  unint64_t v317 = v87;
  v88 = v346;
  sub_24FB46B18();
  v89 = v343;
  uint64_t v90 = v331;
  v340(v343, (uint64_t)v88, v331);
  v91 = v284;
  sub_24FB46CB8();
  v92 = *(void (***)(char *, uint64_t))(v332 + 8);
  v332 += 8;
  v342 = v92;
  ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v92)(v89, v90);
  unint64_t v93 = sub_24FAD54D4();
  v94 = v350;
  v319 = (void (**)(char *, uint64_t))v93;
  sub_24FB46CA8();
  v95 = *(void (**)(char *, uint64_t))(v289 + 8);
  v289 += 8;
  v276 = v95;
  v95(v91, v285);
  v96 = v323;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v323, v94, v56);
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v67, v96, v56);
  sub_24FAD57F0(&qword_269A4E368, &qword_269A4E340);
  v97 = v348;
  sub_24FB482A8();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v96, v56);
  uint64_t v98 = v349;
  v99 = &v67[*(int *)(v349 + 36)];
  uint64_t v100 = v351;
  v101 = *(void (**)(char *, char *, uint64_t))(v351 + 32);
  v323 = (char *)(v351 + 32);
  v322 = v101;
  v101(v99, v97, v352);
  uint64_t v102 = v328;
  sub_24FAD5730((uint64_t)v67, v328, &qword_269A4E350);
  uint64_t v103 = v102 + *(int *)(v98 + 36);
  v350 = *(char **)(v100 + 16);
  uint64_t v351 = v100 + 16;
  uint64_t v349 = v100 + 8;
  uint64_t v104 = v352;
  while (1)
  {
    v106 = v348;
    ((void (*)(char *, uint64_t, uint64_t))v350)(v348, v103, v104);
    v107 = v347;
    sub_24FB48288();
    uint64_t v108 = v56;
    uint64_t v109 = sub_24FAD568C(&qword_269A4E370, MEMORY[0x263F067E8]);
    char v110 = sub_24FB48018();
    v111 = v107;
    v112 = *(void (**)(char *, uint64_t))v349;
    (*(void (**)(char *, uint64_t))v349)(v111, v104);
    v112(v106, v104);
    if (v110) {
      break;
    }
    sub_24FAD57F0(&qword_269A4E378, &qword_269A4E340);
    sub_24FB47FF8();
    v113 = (void (*)(uint64_t *, void))sub_24FB482C8();
    uint64_t v114 = v344;
    sub_24FAD5834(v115, v344, &qword_269A4E338);
    v113(&v357, 0);
    uint64_t v116 = *(void *)v114;
    char v117 = *(unsigned char *)(v114 + 8);
    sub_24FAD5730(v114 + *(int *)(v345 + 48), (uint64_t)v353, &qword_269A4E330);
    uint64_t v56 = v108;
    if ((v117 & 1) == 0 && (v116 == 128 || v116 == 64))
    {
      uint64_t v355 = 10;
      unint64_t v356 = 0xE100000000000000;
      v118 = (void (*)(uint64_t *, void))sub_24FB46AD8();
      sub_24FAD5570();
      uint64_t v119 = (uint64_t)v353;
      sub_24FB46AF8();
      v118(&v357, 0);
      uint64_t v105 = v119;
    }
    else
    {
      uint64_t v105 = (uint64_t)v353;
    }
    sub_24FAD5794(v105, &qword_269A4E330);
  }
  v353 = v112;
  uint64_t v328 = v109;
  sub_24FAD5794(v102, &qword_269A4E350);
  uint64_t v120 = 0;
  v121 = (void (**)(char *, uint64_t))(v320 + 1);
  uint64_t v122 = (uint64_t)v311;
  do
  {
    uint64_t v132 = *(void *)((char *)&unk_270125540 + v120 + 32);
    sub_24FB46D78();
    switch(v132)
    {
      case 1:
        uint64_t v133 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v133);
        swift_getKeyPath();
        uint64_t v357 = 1;
        char v358 = 0;
        sub_24FB46D68();
        uint64_t v134 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v134);
        swift_getKeyPath();
        uint64_t v122 = (uint64_t)v311;
        v125 = (uint64_t *)&v330;
        goto LABEL_17;
      case 2:
        uint64_t v135 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v135);
        swift_getKeyPath();
        uint64_t v357 = 2;
        char v358 = 0;
        sub_24FB46D68();
        uint64_t v136 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v136);
        swift_getKeyPath();
        uint64_t v122 = (uint64_t)v311;
        v125 = &v331;
        goto LABEL_17;
      case 4:
        uint64_t v123 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v123);
        swift_getKeyPath();
        uint64_t v357 = 4;
        char v358 = 0;
        sub_24FB46D68();
        uint64_t v124 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v124);
        swift_getKeyPath();
        uint64_t v122 = (uint64_t)v311;
        v125 = &v336;
LABEL_17:
        uint64_t v357 = *(v125 - 32);
        id v126 = (id)v357;
        goto LABEL_18;
      case 32:
        uint64_t v137 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v137);
        swift_getKeyPath();
        uint64_t v357 = 32;
        char v358 = 0;
        sub_24FB46D68();
        uint64_t v138 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v138);
        swift_getKeyPath();
        uint64_t v122 = (uint64_t)v311;
        v139 = v321;
        sub_24FB479D8();
        uint64_t v140 = sub_24FB479E8();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 0, 1, v140);
        sub_24FAD5984();
LABEL_18:
        sub_24FB46D68();
        break;
      default:
        break;
    }
    v127 = v335;
    sub_24FB46D78();
    uint64_t v128 = swift_getKeyPath();
    *(&v264 - 2) = MEMORY[0x270FA5388](v128);
    swift_getKeyPath();
    uint64_t v357 = v132;
    char v358 = 0;
    sub_24FB46D68();
    sub_24FB46B88();
    v129 = *v121;
    v130 = v338;
    uint64_t v131 = v336;
    (*v121)(v127, v336);
    v129(v130, v131);
    v120 += 8;
  }
  while (v120 != 64);
  v141 = v343;
  uint64_t v142 = v331;
  v340(v343, (uint64_t)v346, v331);
  v143 = v284;
  sub_24FB46CB8();
  ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v342)(v141, v142);
  unint64_t v144 = sub_24FAD55D4();
  v145 = v277;
  unint64_t v290 = v144;
  sub_24FB46CA8();
  v276(v143, v285);
  uint64_t v146 = v278;
  MEMORY[0x25336CFA0](v278);
  v147 = *(void (**)(char *, uint64_t))(v286 + 8);
  v286 += 8;
  v272 = v147;
  v147(v145, v146);
  v335 = 0;
  int v148 = 0;
  v313 = (unsigned int (**)(uint64_t, uint64_t, char *))(v274 + 48);
  v293 = (void (**)(char *, uint64_t, char *))(v274 + 32);
  v321 = (char *)(v291 + 16);
  v320 = (uint64_t (**)(void, void))(v275 + 88);
  int v273 = *MEMORY[0x263F06920];
  LODWORD(v344) = *MEMORY[0x263F06938];
  v319 = (void (**)(char *, uint64_t))(v291 + 8);
  v303 = (void (**)(char *, uint64_t))(v275 + 8);
  v292 = (void (**)(char *, uint64_t))(v274 + 8);
  unint64_t v345 = MEMORY[0x263F8EE78];
  v149 = (char *)v302;
  uint64_t v150 = (uint64_t)v330;
  v151 = v301;
  uint64_t v152 = (uint64_t)v280;
  v153 = v279;
  uint64_t v154 = v122;
  while (1)
  {
    sub_24FB46C38();
    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E390);
    uint64_t v156 = *(void *)(v155 - 8);
    v157 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
    v158 = (char *)(v156 + 48);
    if (v157(v153, 1, v155) == 1) {
      break;
    }
    sub_24FAD5730((uint64_t)&v153[*(int *)(v155 + 48)], v154, &qword_269A4E330);
    sub_24FAD5730((uint64_t)v153, v152, &qword_269A4E308);
    if ((*v313)(v152, 1, v149) == 1)
    {
      sub_24FAD5794(v154, &qword_269A4E330);
      sub_24FAD5794(v152, &qword_269A4E308);
    }
    else
    {
      (*v293)(v281, v152, v149);
      uint64_t v159 = sub_24FB46DC8();
      uint64_t v160 = *(void *)(v159 + 16);
      if (!v160)
      {
        swift_bridgeObjectRelease();
        char v172 = 0;
        char v173 = 0;
        uint64_t v154 = (uint64_t)v311;
        if ((v148 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_40;
      }
      int v267 = v148;
      char v161 = 0;
      LODWORD(v336) = 0;
      unint64_t v162 = (*(unsigned __int8 *)(v291 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v291 + 80);
      uint64_t v266 = v159;
      unint64_t v163 = v159 + v162;
      uint64_t v164 = *(void *)(v291 + 72);
      v165 = *(void (**)(char *, unint64_t, uint64_t))(v291 + 16);
      LODWORD(v338) = 1;
      uint64_t v166 = v312;
      uint64_t v167 = (uint64_t)v335;
      int v168 = v273;
      v165(v151, v159 + v162, v312);
      while (1)
      {
        v169 = v151;
        v170 = v310;
        sub_24FB46D98();
        int v171 = (*v320)(v170, v318);
        if (v171 == v168)
        {
          (*v319)(v169, v166);
          char v161 = 1;
          v151 = v169;
        }
        else
        {
          v151 = v301;
          if (v171 == v344)
          {
            LODWORD(v338) = v167 != sub_24FB46DA8();
            uint64_t v167 = sub_24FB46DA8();
            uint64_t v166 = v312;
            (*v319)(v151, v312);
            LODWORD(v336) = 1;
          }
          else
          {
            uint64_t v166 = v312;
            (*v319)(v301, v312);
            (*v303)(v310, v318);
          }
        }
        v163 += v164;
        if (!--v160) {
          break;
        }
        v165(v151, v163, v166);
      }
      v335 = (char *)v167;
      swift_bridgeObjectRelease();
      if (v267 & v338)
      {
        uint64_t v150 = (uint64_t)v330;
        uint64_t v152 = (uint64_t)v280;
        v153 = v279;
        uint64_t v154 = (uint64_t)v311;
        LODWORD(v160) = v336;
        char v172 = v161;
LABEL_40:
        char v173 = v172 ^ 1;
        goto LABEL_42;
      }
      char v173 = 0;
      uint64_t v150 = (uint64_t)v330;
      uint64_t v152 = (uint64_t)v280;
      v153 = v279;
      uint64_t v154 = (uint64_t)v311;
      LODWORD(v160) = v336;
LABEL_42:
      v174 = v282;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v350)(v282, v154, v352);
      v174[*(int *)(v329 + 20)] = v173 & 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v345 = sub_24FAD48D4(0, *(void *)(v345 + 16) + 1, 1, v345);
      }
      unint64_t v176 = *(void *)(v345 + 16);
      unint64_t v175 = *(void *)(v345 + 24);
      if (v176 >= v175 >> 1) {
        unint64_t v345 = sub_24FAD48D4(v175 > 1, v176 + 1, 1, v345);
      }
      unint64_t v177 = v345;
      *(void *)(v345 + 16) = v176 + 1;
      sub_24FAD591C((uint64_t)v282, v177+ ((*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80))+ *(void *)(v339 + 72) * v176);
      v149 = (char *)v302;
      (*v292)(v281, v302);
      sub_24FAD5794(v154, &qword_269A4E330);
      int v148 = v160;
    }
  }
  v301 = v158;
  v310 = (char *)v157;
  v311 = (char *)v155;
  v178 = *(unsigned char **)(v283 + 8);
  v283 += 8;
  v282 = v178;
  ((void (*)(char *, uint64_t))v178)(v337, v314);
  uint64_t v179 = *(void *)(v345 + 16);
  uint64_t v180 = v331;
  uint64_t v181 = v328;
  if (v179)
  {
    uint64_t v344 = v345 + ((*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80));
    while (v179 <= *(void *)(v345 + 16))
    {
      --v179;
      sub_24FAD5628(v344 + *(void *)(v339 + 72) * v179, v150);
      v153 = v348;
      uint64_t v198 = v352;
      ((void (*)(char *, uint64_t, uint64_t))v350)(v348, v150, v352);
      v199 = v343;
      v340(v343, (uint64_t)v346, v180);
      v200 = v347;
      sub_24FB46AE8();
      ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v342)(v199, v180);
      uint64_t v155 = sub_24FB48018();
      v201 = v200;
      v149 = (char *)v349;
      v202 = v353;
      v353(v201, v198);
      v202(v153, v198);
      if ((v155 & 1) == 0)
      {
        v338 = (char *)v179;
        if (*(unsigned char *)(v150 + *(int *)(v329 + 20)) == 1)
        {
          v203 = v343;
          sub_24FB46B28();
          sub_24FAD568C(&qword_269A4E3B8, MEMORY[0x263F06828]);
          sub_24FB46CD8();
          ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v342)(v203, v180);
        }
        uint64_t v182 = sub_24FB46AD8();
        uint64_t v184 = v183;
        uint64_t v355 = 10;
        unint64_t v356 = 0xE100000000000000;
        sub_24FAD568C(&qword_269A4E398, MEMORY[0x263F067E8]);
        if ((sub_24FB48008() & 1) == 0)
        {
          __break(1u);
          goto LABEL_95;
        }
        uint64_t v185 = v327;
        uint64_t v186 = *(int *)(v327 + 48);
        v337 = (char *)v182;
        v187 = v325;
        v188 = &v325[v186];
        uint64_t v189 = v352;
        uint64_t v336 = v184;
        v190 = (void (*)(char *, uint64_t, uint64_t))v350;
        ((void (*)(char *, uint64_t, uint64_t))v350)(v325, v150, v352);
        v335 = v188;
        v190(v188, v150, v189);
        v191 = v326;
        v192 = &v326[*(int *)(v185 + 48)];
        v190(v326, (uint64_t)v187, v189);
        v190(v192, (uint64_t)v188, v189);
        uint64_t v193 = (uint64_t)v324;
        v153 = v323;
        v194 = v322;
        v322(v324, v191, v189);
        v149 = (char *)v349;
        v195 = v353;
        v353(v192, v189);
        v196 = &v191[*(int *)(v185 + 48)];
        v194(v191, v187, v189);
        v194(v196, v335, v189);
        v194((char *)(v193 + *(int *)(v334 + 36)), v196, v189);
        uint64_t v181 = v328;
        v195(v191, v189);
        uint64_t v197 = v333;
        sub_24FAD5730(v193, v333, &qword_269A4E330);
        sub_24FB46B08();
        sub_24FAD568C(&qword_269A4E3A0, MEMORY[0x263F066D8]);
        sub_24FAD5570();
        uint64_t v155 = v336;
        uint64_t v150 = (uint64_t)v330;
        sub_24FB482D8();
        uint64_t v180 = v331;
        sub_24FAD5794(v197, &qword_269A4E330);
        ((void (*)(uint64_t *, void))v337)(&v357, 0);
        uint64_t v179 = (uint64_t)v338;
      }
      sub_24FAD56D4(v150);
      if (!v179) {
        goto LABEL_56;
      }
    }
    __break(1u);
LABEL_59:
    v350 = (char *)(v275 + 96);
    v343 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v274 + 56);
    v342 = (void (**)(char *, uint64_t))(v265 + 8);
    LODWORD(v352) = *MEMORY[0x263F06918];
    LODWORD(v349) = *MEMORY[0x263F06930];
    LODWORD(v348) = *MEMORY[0x263F068F0];
    LODWORD(v347) = *MEMORY[0x263F06900];
    v338 = (char *)*MEMORY[0x263F815B0];
LABEL_62:
    v217 = v153;
    uint64_t v218 = v316;
    sub_24FAD5730(v155 + *(int *)(v181 + 48), v316, &qword_269A4E330);
    uint64_t v219 = v296;
    sub_24FAD5730(v155, v296, &qword_269A4E308);
    uint64_t v220 = v302;
    if ((*v313)(v219, 1, (char *)v302) == 1)
    {
      sub_24FAD5794(v218, &qword_269A4E330);
      sub_24FAD5794(v219, &qword_269A4E308);
      v153 = v217;
      goto LABEL_61;
    }
    v221 = v294;
    (*v293)(v294, v219, (char *)v220);
    uint64_t v222 = sub_24FAD57F0(&qword_269A4E3A8, &qword_269A4E330);
    v223 = v295;
    uint64_t v351 = v222;
    sub_24FB46D38();
    unint64_t v224 = sub_24FB46DD8();
    sub_24FAD0964(v224);
    uint64_t v225 = sub_24FB46DC8();
    uint64_t v226 = *(void *)(v225 + 16);
    if (!v226)
    {
      swift_bridgeObjectRelease();
      v245 = v223;
      goto LABEL_89;
    }
    unint64_t v341 = v224;
    unint64_t v227 = (*(unsigned __int8 *)(v291 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v291 + 80);
    uint64_t v344 = v225;
    unint64_t v228 = v225 + v227;
    v353 = *(void (**)(char *, uint64_t))(v291 + 72);
    v229 = *(void (**)(char *, unint64_t, uint64_t))(v291 + 16);
    uint64_t v230 = v312;
    v229(v149, v225 + v227, v312);
    while (1)
    {
      uint64_t v236 = sub_24FB46DA8();
      v237 = v149;
      v238 = v315;
      sub_24FB46D98();
      v239 = v238;
      int v240 = (*v320)(v238, v179);
      if (v240 == v352)
      {
        (*(void (**)(uint64_t *, uint64_t))v350)(v238, v179);
        uint64_t v231 = *v238;
        uint64_t v232 = v306;
        sub_24FAD5834(v316, v306, &qword_269A4E330);
        uint64_t v233 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v233);
        swift_getKeyPath();
        if (v231 >= 4) {
          id v234 = v308;
        }
        else {
          id v234 = v307;
        }
        id v354 = objc_msgSend(v305, sel_fontWithDescriptor_size_, v234, v83);
        v235 = (void (*)(uint64_t *, void))sub_24FB46D28();
        sub_24FB46E58();
        v235(&v357, 0);
        uint64_t v179 = v318;
        sub_24FAD5794(v232, &qword_269A4E330);
        (*v319)(v237, v230);
        v149 = v237;
      }
      else if (v240 == v349)
      {
        (*(void (**)(uint64_t *, uint64_t))v350)(v238, v179);
        swift_bridgeObjectRelease();
        uint64_t v241 = v333;
        sub_24FAD5834(v316, v333, &qword_269A4E330);
        uint64_t v242 = swift_getKeyPath();
        *(&v264 - 2) = MEMORY[0x270FA5388](v242);
        swift_getKeyPath();
        id v354 = v304;
        id v243 = v304;
        v244 = (void (*)(uint64_t *, void))sub_24FB46D28();
        uint64_t v179 = v318;
        sub_24FB46E58();
        v244(&v357, 0);
        sub_24FAD5794(v241, &qword_269A4E330);
        v149 = v309;
        uint64_t v230 = v312;
        (*v319)(v309, v312);
      }
      else
      {
        v149 = v309;
        if (v240 == v348)
        {
          swift_bridgeObjectRelease();
          uint64_t v246 = *(void *)(*(void *)v340 + 16);
          v245 = v295;
          v221 = v294;
          if (v246 && v236 == *(void *)(*(void *)v340 + 8 * v246 + 24)) {
            goto LABEL_88;
          }
          if (qword_269A4E2A0 != -1) {
            swift_once();
          }
          if (!__OFSUB__(v341, 1))
          {
            uint64_t v247 = (uint64_t)(v341 - 1) % 3;
            if (v247 >= 0)
            {
              if ((unint64_t)v247 < *((void *)off_269A4E2A8 + 2))
              {
                id v248 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F816C8]), sel_initWithMarkerFormat_options_, *((void *)off_269A4E2A8 + v247 + 4), 0);
                sub_24FAD0C48(v236, v248);

LABEL_88:
                uint64_t v249 = v333;
                sub_24FAD5834(v316, v333, &qword_269A4E330);
                uint64_t v250 = swift_getKeyPath();
                *(&v264 - 2) = MEMORY[0x270FA5388](v250);
                swift_getKeyPath();
                swift_bridgeObjectRetain();
                id v251 = sub_24FAD50C0();
                swift_bridgeObjectRelease();
                id v354 = v251;
                v252 = (void (*)(uint64_t *, void))sub_24FB46D28();
                sub_24FAD58BC();
                sub_24FB46E58();
                v252(&v357, 0);
                sub_24FAD5794(v249, &qword_269A4E330);
                (*v319)(v149, v312);
                goto LABEL_89;
              }
LABEL_97:
              __break(1u);
              JUMPOUT(0x24FAD40D4);
            }
LABEL_96:
            __break(1u);
            goto LABEL_97;
          }
LABEL_95:
          __break(1u);
          goto LABEL_96;
        }
        if (v240 == v347)
        {
          swift_bridgeObjectRelease();
          uint64_t v257 = *(void *)(*(void *)v340 + 16);
          if (!v257 || v236 != *(void *)(*(void *)v340 + 8 * v257 + 24))
          {
            id v258 = objc_allocWithZone(MEMORY[0x263F816C8]);
            id v259 = objc_msgSend(v258, sel_initWithMarkerFormat_options_, v338, 0);
            sub_24FAD0C48(v236, v259);
          }
          uint64_t v260 = v333;
          sub_24FAD5834(v316, v333, &qword_269A4E330);
          uint64_t v261 = swift_getKeyPath();
          *(&v264 - 2) = MEMORY[0x270FA5388](v261);
          swift_getKeyPath();
          swift_bridgeObjectRetain();
          id v262 = sub_24FAD50C0();
          swift_bridgeObjectRelease();
          id v354 = v262;
          v263 = (void (*)(uint64_t *, void))sub_24FB46D28();
          sub_24FAD58BC();
          sub_24FB46E58();
          v263(&v357, 0);
          sub_24FAD5794(v260, &qword_269A4E330);
          (*v319)(v149, v312);
LABEL_78:
          v245 = v295;
          v221 = v294;
LABEL_89:
          uint64_t v253 = v333;
          sub_24FAD5834(v316, v333, &qword_269A4E330);
          uint64_t v254 = swift_getKeyPath();
          *(&v264 - 2) = MEMORY[0x270FA5388](v254);
          swift_getKeyPath();
          uint64_t v255 = v302;
          (*v343)(v287, 1, 1, v302);
          v256 = (void (*)(uint64_t *, void))sub_24FB46D28();
          sub_24FB46E58();
          v256(&v357, 0);
          sub_24FAD5794(v253, &qword_269A4E330);
          (*v342)(v245, v288);
          (*v292)(v221, v255);
          sub_24FAD5794(v316, &qword_269A4E330);
          uint64_t v179 = v318;
          uint64_t v181 = (uint64_t)v311;
          v153 = v310;
LABEL_61:
          v216 = v297;
          sub_24FB46C38();
          uint64_t v155 = (uint64_t)v216;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v153)(v216, 1, v181) == 1) {
            goto LABEL_57;
          }
          goto LABEL_62;
        }
        uint64_t v230 = v312;
        (*v319)(v309, v312);
        (*v303)((char *)v239, v179);
      }
      v228 += (unint64_t)v353;
      if (!--v226)
      {
        swift_bridgeObjectRelease();
        goto LABEL_78;
      }
      v229(v149, v228, v230);
    }
  }
LABEL_56:
  swift_bridgeObjectRelease();
  type metadata accessor for ListTracker();
  uint64_t inited = swift_initStackObject();
  uint64_t v205 = MEMORY[0x263F8EE78];
  *(void *)(inited + 16) = MEMORY[0x263F8EE78];
  v206 = (void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(inited + 16);
  unint64_t v345 = inited;
  *(void *)(inited + 24) = v205;
  uint64_t v207 = inited + 24;
  v208 = v343;
  v340(v343, (uint64_t)v346, v180);
  v209 = v284;
  sub_24FB46CB8();
  ((void (*)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v342)(v208, v180);
  v210 = v277;
  sub_24FB46CA8();
  v276(v209, v285);
  uint64_t v211 = v278;
  MEMORY[0x25336CFA0](v278);
  v272(v210, v211);
  v340 = v206;
  swift_beginAccess();
  uint64_t v339 = v207;
  swift_beginAccess();
  v212 = v297;
  sub_24FB46C38();
  uint64_t v155 = (uint64_t)v212;
  uint64_t v181 = (uint64_t)v311;
  v153 = v310;
  int v213 = ((uint64_t (*)(char *, uint64_t, char *))v310)(v212, 1, v311);
  uint64_t v179 = v318;
  v149 = v309;
  if (v213 != 1) {
    goto LABEL_59;
  }
LABEL_57:
  ((void (*)(char *, uint64_t))v282)(v300, v314);

  id v214 = v308;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAD4154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4E400);
}

uint64_t sub_24FAD4160(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4E400);
}

void sub_24FAD416C()
{
}

void sub_24FAD4194()
{
}

uint64_t sub_24FAD41B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4E3F8);
}

uint64_t sub_24FAD41BC(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4E3F8);
}

void sub_24FAD41C8()
{
}

void sub_24FAD41F0()
{
}

uint64_t sub_24FAD420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4E3C8);
}

uint64_t sub_24FAD4218(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4E3C8);
}

void sub_24FAD4224()
{
}

void sub_24FAD424C()
{
}

uint64_t sub_24FAD4268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4E3E8);
}

uint64_t sub_24FAD4274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_24FB48018() & 1;
}

uint64_t sub_24FAD42CC(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4E3E8);
}

uint64_t keypath_hash_29Tm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_24FB47FE8();
}

void sub_24FAD431C()
{
}

void sub_24FAD4344()
{
}

uint64_t sub_24FAD4360(uint64_t a1, uint64_t a2)
{
  return sub_24FAD462C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24FAD4378(uint64_t a1, id *a2)
{
  uint64_t result = sub_24FB48048();
  *a2 = 0;
  return result;
}

uint64_t sub_24FAD43F0(uint64_t a1, id *a2)
{
  char v3 = sub_24FB48058();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24FAD4470@<X0>(uint64_t *a1@<X8>)
{
  sub_24FB48068();
  uint64_t v2 = sub_24FB48028();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_24FAD44B4(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_24FAD44C8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24FAD44D8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24FAD44E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24FB48028();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24FAD452C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB48068();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24FAD4558(uint64_t a1)
{
  uint64_t v2 = sub_24FAD568C(&qword_269A4E448, type metadata accessor for MarkerFormat);
  uint64_t v3 = sub_24FAD568C(&qword_269A4E450, type metadata accessor for MarkerFormat);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24FAD4614(uint64_t a1, uint64_t a2)
{
  return sub_24FAD462C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24FAD462C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24FB48068();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24FAD4670()
{
  sub_24FB48068();
  sub_24FB480C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAD46C4()
{
  sub_24FB48068();
  sub_24FB48728();
  sub_24FB480C8();
  uint64_t v0 = sub_24FB48748();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24FAD4738()
{
  uint64_t v0 = sub_24FB48068();
  uint64_t v2 = v1;
  if (v0 == sub_24FB48068() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24FB48688();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_24FAD47C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E2D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24FAD4E78(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24FAD48D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E3D0);
  uint64_t v10 = *(void *)(type metadata accessor for RestoreWhiteSpaceLocation() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24FB48508();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for RestoreWhiteSpaceLocation() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24FAD4F68(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_24FAD4B3C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E408);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24FAD5204(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24FAD4C4C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FAD4C74(a1, a2, a3, a4, &qword_269A4E2E0, &qword_269A4E2E8);
}

void *sub_24FAD4C60(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FAD4C74(a1, a2, a3, a4, &qword_269A4E2F0, &qword_269A4E2F8);
}

void *sub_24FAD4C74(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      BOOL v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      BOOL v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24FAD52F8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_24FAD4DA4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24FB48518();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x25336E800);
}

void *sub_24FAD4E20(void *a1)
{
  return sub_24FAD47C4(0, a1[2], 0, a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

char *sub_24FAD4E78(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FAD4F68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for RestoreWhiteSpaceLocation() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

id sub_24FAD50C0()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_defaultParagraphStyle);
  objc_msgSend(v1, sel_mutableCopy);

  sub_24FB483B8();
  swift_unknownObjectRelease();
  sub_24FAD59E4(0, &qword_269A4E3D8);
  if (swift_dynamicCast())
  {
    sub_24FAD59E4(0, &qword_269A4E3E0);
    uint64_t v2 = (void *)sub_24FB48158();
    objc_msgSend(v5, sel_setTextLists_, v2);

    return v5;
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_defaultParagraphStyle);
    return v4;
  }
}

uint64_t sub_24FAD5204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FAD52F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RestoreWhiteSpaceLocation()
{
  uint64_t result = qword_269A4E420;
  if (!qword_269A4E420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24FAD5454()
{
  unint64_t result = qword_269A4E358;
  if (!qword_269A4E358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E358);
  }
  return result;
}

uint64_t sub_24FAD54A8()
{
  return 8;
}

uint64_t sub_24FAD54B4()
{
  return swift_release();
}

uint64_t sub_24FAD54BC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FAD54C8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24FAD54D4()
{
  unint64_t result = qword_269A4E360;
  if (!qword_269A4E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E360);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24FAD5570()
{
  unint64_t result = qword_269A4E380;
  if (!qword_269A4E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E380);
  }
  return result;
}

uint64_t sub_24FAD55C8()
{
  return 8;
}

unint64_t sub_24FAD55D4()
{
  unint64_t result = qword_269A4E388;
  if (!qword_269A4E388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E388);
  }
  return result;
}

uint64_t sub_24FAD5628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAD568C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAD56D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FAD5730(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAD5794(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24FAD57F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAD5834(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAD58A4()
{
  return 8;
}

unint64_t sub_24FAD58BC()
{
  unint64_t result = qword_269A4E3B0;
  if (!qword_269A4E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E3B0);
  }
  return result;
}

uint64_t sub_24FAD5910()
{
  return 8;
}

uint64_t sub_24FAD591C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24FAD5984()
{
  unint64_t result = qword_269A4E3C0;
  if (!qword_269A4E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E3C0);
  }
  return result;
}

uint64_t sub_24FAD59D8()
{
  return 8;
}

uint64_t sub_24FAD59E4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for MarkerFormat(uint64_t a1)
{
}

void type metadata accessor for InlinePresentationIntent(uint64_t a1)
{
}

void sub_24FAD5A48(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void *sub_24FAD5A90(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46CC8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_24FAD5B5C(uint64_t a1)
{
  uint64_t v2 = sub_24FB46CC8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_24FAD5BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46CC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24FAD5C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46CC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24FAD5CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46CC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24FAD5D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46CC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24FAD5DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAD5DC4);
}

uint64_t sub_24FAD5DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46CC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_24FAD5E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAD5EA8);
}

uint64_t sub_24FAD5EA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46CC8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24FAD5F64()
{
  uint64_t result = sub_24FB46CC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FAD5FF8()
{
  return sub_24FAD568C(&qword_269A4E430, type metadata accessor for MarkerFormat);
}

uint64_t sub_24FAD6040()
{
  return sub_24FAD568C(&qword_269A4E438, type metadata accessor for MarkerFormat);
}

uint64_t sub_24FAD6088()
{
  return sub_24FAD568C(&qword_269A4E440, type metadata accessor for MarkerFormat);
}

unint64_t static GenerativeResultModels.bundleName.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_24FAD611C(char a1)
{
  unint64_t result = 0xD00000000000001FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24FAD61B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24FAD61C8()
{
  return sub_24FB48748();
}

uint64_t sub_24FAD6210()
{
  return sub_24FB48738();
}

uint64_t sub_24FAD623C()
{
  return sub_24FB48748();
}

unint64_t sub_24FAD6280()
{
  return sub_24FAD611C(*v0);
}

uint64_t sub_24FAD6288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FADA234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24FAD62B0()
{
  return 0;
}

void sub_24FAD62BC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24FAD62C8(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6DE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAD6304(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6DE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FAD6340()
{
  return 1;
}

void sub_24FAD6354(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24FAD6360(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6F48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAD639C(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6F48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FAD63D8(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAD6414(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FAD6450(uint64_t a1)
{
  unint64_t v2 = sub_24FAD7044();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAD648C(uint64_t a1)
{
  unint64_t v2 = sub_24FAD7044();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FAD64C8()
{
  return sub_24FB48748();
}

uint64_t sub_24FAD650C()
{
  return sub_24FB48738();
}

uint64_t sub_24FAD6534()
{
  return sub_24FB48748();
}

uint64_t sub_24FAD6574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FADA3CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24FAD65A0(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6EA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAD65DC(uint64_t a1)
{
  unint64_t v2 = sub_24FAD6EA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeResultModels.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E458);
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E460);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for GenerativeMediaConfirmationSnippetModel(0);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E468);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E470);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unsigned int v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GenerativeResultModels();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E478);
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v50 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAD6DE8();
  sub_24FB48768();
  sub_24FAD6E3C(v53, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = *v16;
      uint64_t v31 = v16[1];
      LOBYTE(v51) = 1;
      sub_24FAD6F9C();
      uint64_t v33 = v37;
      uint64_t v34 = v50;
      sub_24FB485F8();
      uint64_t v51 = v32;
      uint64_t v52 = v31;
      sub_24FAD6FF0();
      uint64_t v35 = v40;
      sub_24FB48658();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v35);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v34);
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v20 = type metadata accessor for GenerativeMediaConfirmationSnippetModel;
      uint64_t v24 = v42;
      sub_24FAD7B34((uint64_t)v16, v42, type metadata accessor for GenerativeMediaConfirmationSnippetModel);
      LOBYTE(v51) = 2;
      sub_24FAD6F48();
      uint64_t v25 = v43;
      uint64_t v21 = v50;
      sub_24FB485F8();
      sub_24FAD7C80(&qword_269A4E4A0, (void (*)(uint64_t))type metadata accessor for GenerativeMediaConfirmationSnippetModel);
      uint64_t v26 = v46;
      sub_24FB48658();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v26);
      uint64_t v23 = v24;
      goto LABEL_4;
    case 3u:
      LOBYTE(v51) = 3;
      sub_24FAD6EA0();
      uint64_t v28 = v44;
      uint64_t v29 = v50;
      sub_24FB485F8();
      sub_24FAD6EF4();
      uint64_t v30 = v48;
      sub_24FB48658();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v30);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v29);
      break;
    default:
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for GenerativeRichTextResultSnippetModel;
      sub_24FAD7B34((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GenerativeRichTextResultSnippetModel);
      LOBYTE(v51) = 0;
      sub_24FAD7044();
      uint64_t v21 = v50;
      sub_24FB485F8();
      sub_24FAD7C80(&qword_269A4E4C0, (void (*)(uint64_t))type metadata accessor for GenerativeRichTextResultSnippetModel);
      uint64_t v22 = v38;
      sub_24FB48658();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v22);
      uint64_t v23 = (uint64_t)v13;
LABEL_4:
      sub_24FAD9008(v23, v20);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v21);
      break;
  }
  return result;
}

uint64_t type metadata accessor for GenerativeResultModels()
{
  uint64_t result = qword_269A4E530;
  if (!qword_269A4E530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24FAD6DE8()
{
  unint64_t result = qword_269A4E480;
  if (!qword_269A4E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E480);
  }
  return result;
}

uint64_t sub_24FAD6E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeResultModels();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24FAD6EA0()
{
  unint64_t result = qword_269A4E488;
  if (!qword_269A4E488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E488);
  }
  return result;
}

unint64_t sub_24FAD6EF4()
{
  unint64_t result = qword_269A4E490;
  if (!qword_269A4E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E490);
  }
  return result;
}

unint64_t sub_24FAD6F48()
{
  unint64_t result = qword_269A4E498;
  if (!qword_269A4E498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E498);
  }
  return result;
}

unint64_t sub_24FAD6F9C()
{
  unint64_t result = qword_269A4E4A8;
  if (!qword_269A4E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E4A8);
  }
  return result;
}

unint64_t sub_24FAD6FF0()
{
  unint64_t result = qword_269A4E4B0;
  if (!qword_269A4E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E4B0);
  }
  return result;
}

unint64_t sub_24FAD7044()
{
  unint64_t result = qword_269A4E4B8;
  if (!qword_269A4E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E4B8);
  }
  return result;
}

uint64_t GenerativeResultModels.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4C8);
  uint64_t v64 = *(void *)(v57 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  id v71 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  uint64_t v63 = v5;
  ((void (*)(void))MEMORY[0x270FA5388])();
  id v70 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4D8);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v66 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4E0);
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v68 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4E8);
  uint64_t v67 = *(void *)(v69 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for GenerativeResultModels();
  uint64_t v13 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v53 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v53 - v25;
  uint64_t v27 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_24FAD6DE8();
  uint64_t v28 = (uint64_t)v76;
  sub_24FB48758();
  if (v28) {
    goto LABEL_9;
  }
  uint64_t v54 = v21;
  uint64_t v55 = v15;
  uint64_t v56 = v24;
  uint64_t v29 = v18;
  uint64_t v30 = v68;
  uint64_t v31 = v69;
  uint64_t v32 = v70;
  uint64_t v33 = v71;
  id v76 = v26;
  uint64_t v34 = v72;
  uint64_t v35 = sub_24FB485E8();
  if (*(void *)(v35 + 16) != 1)
  {
    uint64_t v40 = sub_24FB484A8();
    swift_allocError();
    uint64_t v42 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4F0);
    *uint64_t v42 = v34;
    sub_24FB48578();
    sub_24FB48498();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, *MEMORY[0x263F8DCB0], v40);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v31);
LABEL_9:
    uint64_t v38 = (uint64_t)v73;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  switch(*(unsigned char *)(v35 + 32))
  {
    case 1:
      LOBYTE(v74) = 1;
      sub_24FAD6F9C();
      uint64_t v43 = v66;
      sub_24FB48568();
      sub_24FAD7B9C();
      uint64_t v45 = v61;
      sub_24FB485D8();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v31);
      uint64_t v46 = v75;
      uint64_t v29 = v54;
      *uint64_t v54 = v74;
      v29[1] = v46;
      goto LABEL_11;
    case 2:
      LOBYTE(v74) = 2;
      sub_24FAD6F48();
      sub_24FB48568();
      type metadata accessor for GenerativeMediaConfirmationSnippetModel(0);
      sub_24FAD7C80(&qword_269A4E500, (void (*)(uint64_t))type metadata accessor for GenerativeMediaConfirmationSnippetModel);
      uint64_t v47 = v62;
      sub_24FB485D8();
      uint64_t v48 = v67;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v31);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = (uint64_t)v29;
      goto LABEL_12;
    case 3:
      id v70 = (char *)v35;
      LOBYTE(v74) = 3;
      sub_24FAD6EA0();
      sub_24FB48568();
      sub_24FAD7AE0();
      uint64_t v49 = v57;
      sub_24FB485D8();
      uint64_t v50 = v67;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v31);
      uint64_t v51 = (uint64_t)v55;
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v51;
LABEL_12:
      uint64_t v39 = (uint64_t)v76;
      sub_24FAD7B34(v52, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for GenerativeResultModels);
      uint64_t v38 = (uint64_t)v73;
      break;
    default:
      LOBYTE(v74) = 0;
      sub_24FAD7044();
      sub_24FB48568();
      type metadata accessor for GenerativeRichTextResultSnippetModel();
      sub_24FAD7C80(&qword_269A4E510, (void (*)(uint64_t))type metadata accessor for GenerativeRichTextResultSnippetModel);
      uint64_t v36 = (uint64_t)v56;
      uint64_t v37 = v59;
      sub_24FB485D8();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v31);
      uint64_t v38 = (uint64_t)v73;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = (uint64_t)v76;
      sub_24FAD7B34(v36, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for GenerativeResultModels);
      break;
  }
  sub_24FAD7B34(v39, v65, (uint64_t (*)(void))type metadata accessor for GenerativeResultModels);
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_24FAD7AE0()
{
  unint64_t result = qword_269A4E4F8;
  if (!qword_269A4E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E4F8);
  }
  return result;
}

uint64_t sub_24FAD7B34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24FAD7B9C()
{
  unint64_t result = qword_269A4E508;
  if (!qword_269A4E508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E508);
  }
  return result;
}

uint64_t sub_24FAD7BF0()
{
  return sub_24FAD7C80(&qword_269A4E518, (void (*)(uint64_t))type metadata accessor for GenerativeResultModels);
}

uint64_t sub_24FAD7C38()
{
  return sub_24FAD7C80(&qword_269A4E520, (void (*)(uint64_t))type metadata accessor for GenerativeResultModels);
}

uint64_t sub_24FAD7C80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FAD7CC8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24FAD7CE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenerativeResultModels.init(from:)(a1, a2);
}

uint64_t sub_24FAD7D00(void *a1)
{
  return GenerativeResultModels.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenerativeResultModels(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      uint64_t v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      uint64_t v21 = a2[7];
      a1[6] = a2[6];
      a1[7] = v21;
      uint64_t v22 = a2[9];
      a1[8] = a2[8];
      a1[9] = v22;
      uint64_t v23 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
      uint64_t v24 = v23[9];
      uint64_t v55 = (char *)a2 + v24;
      __dsta = (char *)a1 + v24;
      uint64_t v25 = sub_24FB47028();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53(__dsta, v55, v25);
      uint64_t v26 = v23[10];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_24FB46F88();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v40 = v23[11];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      uint64_t v43 = sub_24FB46F68();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      *(uint64_t *)((char *)a1 + v23[12]) = *(uint64_t *)((char *)a2 + v23[12]);
      uint64_t v47 = v23[13];
      uint64_t v48 = (uint64_t *)((char *)a1 + v47);
      uint64_t v49 = (uint64_t *)((char *)a2 + v47);
      uint64_t v50 = v49[1];
      *uint64_t v48 = *v49;
      v48[1] = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      uint64_t v10 = a2[5];
      a1[4] = a2[4];
      a1[5] = v10;
      uint64_t v11 = type metadata accessor for GenerativeRichTextResultSnippetModel();
      uint64_t v12 = *(int *)(v11 + 32);
      uint64_t v54 = v11;
      __dst = (char *)a1 + v12;
      uint64_t v52 = (char *)a2 + v12;
      uint64_t v13 = sub_24FB46F68();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v51(v52, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(__dst, v52, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v52, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v54 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(v54 + 36));
      uint64_t v33 = *(int *)(v54 + 40);
      uint64_t v34 = (uint64_t *)((char *)a1 + v33);
      uint64_t v35 = (uint64_t *)((char *)a2 + v33);
      uint64_t v36 = *(uint64_t *)((char *)a2 + v33 + 8);
      swift_bridgeObjectRetain();
      if (v36)
      {
        *uint64_t v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v35[3];
        v34[2] = v35[2];
        v34[3] = v37;
        uint64_t v38 = v35[4];
        uint64_t v39 = v35[5];
        v34[4] = v38;
        v34[5] = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *((_OWORD *)v35 + 1);
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        *((_OWORD *)v34 + 1) = v46;
        *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for GenerativeResultModels(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
      uint64_t v8 = a1 + v7[9];
      uint64_t v9 = sub_24FB47028();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v10 = a1 + v7[10];
      uint64_t v11 = sub_24FB46F88();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      }
      uint64_t v13 = a1 + v7[11];
      uint64_t v14 = sub_24FB46F68();
      uint64_t v15 = *(void *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 1:
LABEL_14:
      return swift_bridgeObjectRelease();
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for GenerativeRichTextResultSnippetModel();
      uint64_t v4 = a1 + *(int *)(v3 + 32);
      uint64_t v5 = sub_24FB46F68();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(a1 + *(int *)(v3 + 40) + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      break;
  }
  return result;
}

void *initializeWithCopy for GenerativeResultModels(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = a2[3];
      a1[2] = a2[2];
      a1[3] = v17;
      uint64_t v18 = a2[5];
      a1[4] = a2[4];
      a1[5] = v18;
      uint64_t v19 = a2[7];
      a1[6] = a2[6];
      a1[7] = v19;
      uint64_t v20 = a2[9];
      a1[8] = a2[8];
      a1[9] = v20;
      uint64_t v21 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
      uint64_t v22 = v21[9];
      uint64_t v53 = (char *)a2 + v22;
      __dsta = (char *)a1 + v22;
      uint64_t v23 = sub_24FB47028();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(__dsta, v53, v23);
      uint64_t v24 = v21[10];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_24FB46F88();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v38 = v21[11];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = sub_24FB46F68();
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      *(void *)((char *)a1 + v21[12]) = *(void *)((char *)a2 + v21[12]);
      uint64_t v45 = v21[13];
      long long v46 = (void *)((char *)a1 + v45);
      uint64_t v47 = (void *)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      *long long v46 = *v47;
      v46[1] = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 1:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      swift_bridgeObjectRetain();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      uint64_t v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      uint64_t v10 = type metadata accessor for GenerativeRichTextResultSnippetModel();
      uint64_t v11 = *(int *)(v10 + 32);
      uint64_t v52 = v10;
      __dst = (char *)a1 + v11;
      uint64_t v50 = (char *)a2 + v11;
      uint64_t v12 = sub_24FB46F68();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v50, 1, v12))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(__dst, v50, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v50, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      *(void *)((char *)a1 + *(int *)(v52 + 36)) = *(void *)((char *)a2 + *(int *)(v52 + 36));
      uint64_t v31 = *(int *)(v52 + 40);
      uint64_t v32 = (void *)((char *)a1 + v31);
      uint64_t v33 = (void *)((char *)a2 + v31);
      uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
      swift_bridgeObjectRetain();
      if (v34)
      {
        *uint64_t v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v33[3];
        v32[2] = v33[2];
        v32[3] = v35;
        uint64_t v36 = v33[4];
        uint64_t v37 = v33[5];
        v32[4] = v36;
        v32[5] = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v44 = *((_OWORD *)v33 + 1);
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v44;
        *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      }
      goto LABEL_19;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for GenerativeResultModels(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24FAD9008((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for GenerativeResultModels);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        uint64_t v13 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
        uint64_t v14 = v13[9];
        uint64_t v41 = (char *)a2 + v14;
        uint64_t v43 = (char *)a1 + v14;
        uint64_t v15 = sub_24FB47028();
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dsta(v43, v41, v15);
        uint64_t v16 = v13[10];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_24FB46F88();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v22 = v13[11];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_24FB46F68();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
          memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        *(void *)((char *)a1 + v13[12]) = *(void *)((char *)a2 + v13[12]);
        uint64_t v28 = v13[13];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v7 = type metadata accessor for GenerativeRichTextResultSnippetModel();
        uint64_t v8 = *(int *)(v7 + 32);
        __dst = (char *)a1 + v8;
        uint64_t v40 = v7;
        uint64_t v42 = (char *)a2 + v8;
        uint64_t v9 = sub_24FB46F68();
        uint64_t v10 = *(void *)(v9 - 8);
        uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v11(v42, 1, v9))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
          memcpy(__dst, v42, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v42, v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
        }
        *(void *)((char *)a1 + *(int *)(v40 + 36)) = *(void *)((char *)a2 + *(int *)(v40 + 36));
        uint64_t v31 = *(int *)(v40 + 40);
        uint64_t v32 = (void *)((char *)a1 + v31);
        uint64_t v33 = (void *)((char *)a2 + v31);
        uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
        swift_bridgeObjectRetain();
        if (v34)
        {
          *uint64_t v32 = *v33;
          v32[1] = v33[1];
          v32[2] = v33[2];
          v32[3] = v33[3];
          v32[4] = v33[4];
          v32[5] = v33[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v35 = *(_OWORD *)v33;
          long long v36 = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 1) = *((_OWORD *)v33 + 1);
          *((_OWORD *)v32 + 2) = v36;
          *(_OWORD *)uint64_t v32 = v35;
        }
        goto LABEL_20;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24FAD9008(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for GenerativeResultModels(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    long long v15 = a2[3];
    a1[2] = a2[2];
    a1[3] = v15;
    a1[4] = a2[4];
    uint64_t v16 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
    uint64_t v17 = v16[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_24FB47028();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    uint64_t v21 = v16[10];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_24FB46F88();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v31 = v16[11];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_24FB46F68();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    *(void *)((char *)a1 + v16[12]) = *(void *)((char *)a2 + v16[12]);
    *(_OWORD *)((char *)a1 + v16[13]) = *(_OWORD *)((char *)a2 + v16[13]);
    goto LABEL_15;
  }
  if (!EnumCaseMultiPayload)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
    *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
    *((void *)a1 + 5) = *((void *)a2 + 5);
    uint64_t v7 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
    uint64_t v8 = v7[8];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24FB46F68();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    uint64_t v27 = v7[10];
    uint64_t v28 = (_OWORD *)((char *)a1 + v27);
    uint64_t v29 = (_OWORD *)((char *)a2 + v27);
    long long v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    v28[2] = v29[2];
LABEL_15:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for GenerativeResultModels(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24FAD9008((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for GenerativeResultModels);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      long long v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      a1[4] = a2[4];
      uint64_t v16 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
      uint64_t v17 = v16[9];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_24FB47028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = v16[10];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24FB46F88();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v31 = v16[11];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = sub_24FB46F68();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(void *)((char *)a1 + v16[12]) = *(void *)((char *)a2 + v16[12]);
      *(_OWORD *)((char *)a1 + v16[13]) = *(_OWORD *)((char *)a2 + v16[13]);
      goto LABEL_16;
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      uint64_t v7 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
      uint64_t v8 = v7[8];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24FB46F68();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
      uint64_t v27 = v7[10];
      uint64_t v28 = (_OWORD *)((char *)a1 + v27);
      uint64_t v29 = (_OWORD *)((char *)a2 + v27);
      long long v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      v28[2] = v29[2];
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeResultModels(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for GenerativeResultModels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24FAD990C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24FAD991C()
{
  uint64_t result = type metadata accessor for GenerativeRichTextResultSnippetModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttachmentConfirmationPayload(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativeResultModels.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GenerativeResultModels.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FAD9B5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_24FAD9B84(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24FAD9B8C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativeResultModels.CodingKeys()
{
  return &type metadata for GenerativeResultModels.CodingKeys;
}

uint64_t sub_24FAD9BB0()
{
  return 0;
}

ValueMetadata *type metadata accessor for GenerativeResultModels.GenerativeRichTextResultSnippetCodingKeys()
{
  return &type metadata for GenerativeResultModels.GenerativeRichTextResultSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for GenerativeResultModels.GenerativeNoResultSnippetCodingKeys()
{
  return &type metadata for GenerativeResultModels.GenerativeNoResultSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for GenerativeResultModels.GenerativeMediaConfirmationSnippetCodingKeys()
{
  return &type metadata for GenerativeResultModels.GenerativeMediaConfirmationSnippetCodingKeys;
}

uint64_t getEnumTagSinglePayload for GenerativeMediaConfirmationSnippetModel.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s21GenerativeAssistantUI22GenerativeResultModelsO41GenerativeRichTextResultSnippetCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FAD9CD4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeResultModels.GenerativeTAHandoffSnippetCodingKeys()
{
  return &type metadata for GenerativeResultModels.GenerativeTAHandoffSnippetCodingKeys;
}

unint64_t sub_24FAD9D10()
{
  unint64_t result = qword_269A4E540;
  if (!qword_269A4E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E540);
  }
  return result;
}

unint64_t sub_24FAD9D68()
{
  unint64_t result = qword_269A4E548;
  if (!qword_269A4E548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E548);
  }
  return result;
}

unint64_t sub_24FAD9DC0()
{
  unint64_t result = qword_269A4E550;
  if (!qword_269A4E550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E550);
  }
  return result;
}

unint64_t sub_24FAD9E18()
{
  unint64_t result = qword_269A4E558;
  if (!qword_269A4E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E558);
  }
  return result;
}

unint64_t sub_24FAD9E70()
{
  unint64_t result = qword_269A4E560;
  if (!qword_269A4E560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E560);
  }
  return result;
}

unint64_t sub_24FAD9EC8()
{
  unint64_t result = qword_269A4E568;
  if (!qword_269A4E568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E568);
  }
  return result;
}

unint64_t sub_24FAD9F20()
{
  unint64_t result = qword_269A4E570;
  if (!qword_269A4E570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E570);
  }
  return result;
}

unint64_t sub_24FAD9F78()
{
  unint64_t result = qword_269A4E578;
  if (!qword_269A4E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E578);
  }
  return result;
}

unint64_t sub_24FAD9FD0()
{
  unint64_t result = qword_269A4E580;
  if (!qword_269A4E580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E580);
  }
  return result;
}

unint64_t sub_24FADA028()
{
  unint64_t result = qword_269A4E588;
  if (!qword_269A4E588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E588);
  }
  return result;
}

unint64_t sub_24FADA080()
{
  unint64_t result = qword_269A4E590;
  if (!qword_269A4E590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E590);
  }
  return result;
}

unint64_t sub_24FADA0D8()
{
  unint64_t result = qword_269A4E598;
  if (!qword_269A4E598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E598);
  }
  return result;
}

unint64_t sub_24FADA130()
{
  unint64_t result = qword_269A4E5A0;
  if (!qword_269A4E5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E5A0);
  }
  return result;
}

unint64_t sub_24FADA188()
{
  unint64_t result = qword_269A4E5A8;
  if (!qword_269A4E5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E5A8);
  }
  return result;
}

unint64_t sub_24FADA1E0()
{
  unint64_t result = qword_269A4E5B0;
  if (!qword_269A4E5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E5B0);
  }
  return result;
}

uint64_t sub_24FADA234(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x800000024FB4FB20 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024FB4FB40 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000024FB4FB60 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024FB4FB90)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24FADA3CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24FB48688();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24FADA43C()
{
  return 12383;
}

uint64_t DisabledResponseView.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_24FB475E8();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E5B8);
  return sub_24FADA4AC();
}

uint64_t sub_24FADA4AC()
{
  sub_24FADA9E0();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_24FB47A18();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  sub_24FB478A8();
  uint64_t v5 = sub_24FB479C8();
  uint64_t v10 = v6;
  uint64_t v11 = v5;
  char v8 = v7;
  swift_release();
  sub_24FADAA34(v0, v2, v4);
  swift_bridgeObjectRelease();
  sub_24FB47828();
  sub_24FB47178();
  sub_24FB47818();
  sub_24FB47178();
  sub_24FB47838();
  sub_24FB47178();
  sub_24FB47858();
  sub_24FB47178();
  sub_24FB478E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E5D0);
  sub_24FADAA94(&qword_269A4E5D8, &qword_269A4E5D0, (void (*)(void))sub_24FADAA44);
  sub_24FB47A98();
  sub_24FADAA34(v11, v10, v8 & 1);
  return swift_bridgeObjectRelease();
}

GenerativeAssistantUI::DisabledResponseView __swiftcall DisabledResponseView.init(model:)(GenerativeAssistantUI::DisabledResponseView model)
{
  uint64_t v2 = *(void *)(model.snippetModel.result._countAndFlagsBits + 8);
  *uint64_t v1 = *(void *)model.snippetModel.result._countAndFlagsBits;
  v1[1] = v2;
  return model;
}

uint64_t sub_24FADA7A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FADA7C4()
{
  return sub_24FB47B08();
}

uint64_t sub_24FADA7E0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_24FB475E8();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E5B8);
  return sub_24FADA4AC();
}

void *initializeBufferWithCopyOfBuffer for GenerativeNoResultSnippetModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GenerativeNoResultSnippetModel()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for GenerativeNoResultSnippetModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for GenerativeNoResultSnippetModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeNoResultSnippetModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativeNoResultSnippetModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisabledResponseView()
{
  return &type metadata for DisabledResponseView;
}

unint64_t sub_24FADA984()
{
  unint64_t result = qword_269A4E5C0;
  if (!qword_269A4E5C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E5C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E5C0);
  }
  return result;
}

unint64_t sub_24FADA9E0()
{
  unint64_t result = qword_269A4E930;
  if (!qword_269A4E930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E930);
  }
  return result;
}

uint64_t sub_24FADAA34(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24FADAA44()
{
  return sub_24FADAA94(&qword_269A4E5E0, &qword_269A4E5E8, (void (*)(void))sub_24FADAA6C);
}

uint64_t sub_24FADAA6C()
{
  return sub_24FADAA94(&qword_269A4E5F0, &qword_269A4E5F8, (void (*)(void))sub_24FADAB14);
}

uint64_t sub_24FADAA94(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FADAB14()
{
  unint64_t result = qword_269A4E600;
  if (!qword_269A4E600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E600);
  }
  return result;
}

uint64_t sub_24FADAB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v173 = a1;
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E618);
  MEMORY[0x270FA5388](v153);
  uint64_t v154 = (_OWORD *)((char *)&v151 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EA90);
  MEMORY[0x270FA5388](v172);
  uint64_t v155 = (char *)&v151 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E620);
  MEMORY[0x270FA5388](v168);
  uint64_t v171 = (uint64_t)&v151 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E628);
  MEMORY[0x270FA5388](v162);
  uint64_t v164 = (_OWORD *)((char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E630);
  MEMORY[0x270FA5388](v161);
  unint64_t v170 = (unint64_t)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA20);
  MEMORY[0x270FA5388](v163);
  uint64_t v160 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA10);
  MEMORY[0x270FA5388](v169);
  v165 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9D0);
  MEMORY[0x270FA5388](v158);
  uint64_t v159 = (uint64_t)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_24FB47388();
  MEMORY[0x270FA5388](v157);
  uint64_t v10 = (_OWORD *)((char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24FB47C98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v14 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA30);
  uint64_t v15 = MEMORY[0x270FA5388](v166);
  v151 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v152 = (uint64_t)&v151 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v151 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v156 = (uint64_t)&v151 - v22;
  uint64_t v23 = sub_24FB47028();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v167, v23);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 == *MEMORY[0x263F40738]) {
    goto LABEL_2;
  }
  uint64_t v167 = v11;
  unint64_t v63 = v170;
  if (v27 != *MEMORY[0x263F40768])
  {
    if (v27 == *MEMORY[0x263F40748])
    {
      sub_24FB47C78();
      uint64_t v75 = v167;
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v167);
      unint64_t v170 = sub_24FB47CC8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v75);
      sub_24FB47E58();
      sub_24FB47238();
      uint64_t v76 = v174;
      char v77 = v175;
      uint64_t v78 = *((void *)&v175 + 1);
      char v79 = v176;
      unint64_t v80 = v177;
      uint64_t v167 = (uint64_t)v178;
      char v81 = sub_24FB47808();
      sub_24FB47178();
      uint64_t v83 = v82;
      uint64_t v85 = v84;
      uint64_t v87 = v86;
      uint64_t v89 = v88;
      v165 = (char *)sub_24FB47C08();
      uint64_t KeyPath = swift_getKeyPath();
      char v190 = 1;
      char v187 = v77;
      char v186 = v79;
      char v183 = 0;
      id v91 = objc_msgSend(self, sel_systemGray3Color);
      uint64_t v92 = MEMORY[0x25336DFD0](v91);
      char v93 = sub_24FB47808();
      long long v191 = v170;
      LOBYTE(v192) = v190;
      BYTE1(v192) = 1;
      *(_DWORD *)((char *)&v192 + 2) = v188;
      WORD3(v192) = v189;
      *((void *)&v192 + 1) = v76;
      LOBYTE(v193) = v187;
      *(_DWORD *)((char *)&v193 + 1) = v201;
      DWORD1(v193) = *(_DWORD *)((char *)&v201 + 3);
      *((void *)&v193 + 1) = v78;
      LOBYTE(v194) = v186;
      DWORD1(v194) = *(_DWORD *)&v185[3];
      *(_DWORD *)((char *)&v194 + 1) = *(_DWORD *)v185;
      *((void *)&v194 + 1) = v80;
      *(void *)&long long v195 = v167;
      BYTE8(v195) = v81;
      HIDWORD(v195) = *(_DWORD *)&v184[3];
      *(_DWORD *)((char *)&v195 + 9) = *(_DWORD *)v184;
      *(void *)&long long v196 = v83;
      *((void *)&v196 + 1) = v85;
      *(void *)&long long v197 = v87;
      *((void *)&v197 + 1) = v89;
      LOBYTE(v198) = v183;
      *(_DWORD *)((char *)&v198 + 1) = *(_DWORD *)v182;
      DWORD1(v198) = *(_DWORD *)&v182[3];
      *((void *)&v198 + 1) = KeyPath;
      *(void *)&long long v199 = v165;
      *((void *)&v199 + 1) = v92;
      char v200 = v93;
      v94 = v10;
      v95 = (char *)v10 + *(int *)(v157 + 20);
      uint64_t v96 = *MEMORY[0x263F19860];
      uint64_t v97 = sub_24FB475C8();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 104))(v95, v96, v97);
      __asm { FMOV            V0.2D, #10.0 }
      _OWORD *v94 = _Q0;
      uint64_t v99 = v159;
      sub_24FADC744((uint64_t)v94, v159);
      *(_WORD *)(v99 + *(int *)(v158 + 36)) = 256;
      uint64_t v100 = (uint64_t)v151;
      sub_24FAD5834(v99, (uint64_t)&v151[*(int *)(v166 + 36)], &qword_269A4E9D0);
      long long v101 = v198;
      long long v102 = v199;
      long long v103 = v196;
      *(_OWORD *)(v100 + 96) = v197;
      *(_OWORD *)(v100 + 112) = v101;
      *(_OWORD *)(v100 + 128) = v102;
      long long v104 = v194;
      long long v105 = v195;
      long long v106 = v192;
      *(_OWORD *)(v100 + 32) = v193;
      *(_OWORD *)(v100 + 48) = v104;
      *(unsigned char *)(v100 + 144) = v200;
      *(_OWORD *)(v100 + 64) = v105;
      *(_OWORD *)(v100 + 80) = v103;
      *(_OWORD *)uint64_t v100 = v191;
      *(_OWORD *)(v100 + 16) = v106;
      sub_24FADC7A8((uint64_t)&v191);
      sub_24FAD5794(v99, &qword_269A4E9D0);
      sub_24FADC7FC((uint64_t)v94);
      sub_24FADC858((uint64_t)&v191);
      uint64_t v107 = v152;
      sub_24FADC8AC(v100, v152);
      sub_24FAD5834(v107, (uint64_t)v154, (uint64_t *)&unk_269A4EA30);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
      sub_24FADC914();
      sub_24FADCA2C();
      uint64_t v108 = (uint64_t)v155;
      sub_24FB476C8();
      sub_24FAD5834(v108, v171, &qword_269A4EA90);
      swift_storeEnumTagMultiPayload();
      sub_24FADCCB4(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
      sub_24FADCCB4(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
      sub_24FB476C8();
      sub_24FAD5794(v108, &qword_269A4EA90);
      uint64_t v61 = v107;
      return sub_24FAD5794(v61, (uint64_t *)&unk_269A4EA30);
    }
    unint64_t v63 = v172;
    if (v27 == *MEMORY[0x263F40778])
    {
      uint64_t v109 = v171;
      char v110 = v165;
      if (qword_269A4E2B0 != -1) {
        swift_once();
      }
      id v111 = (id)qword_269A58F30;
      sub_24FB47CD8();
      uint64_t v112 = v12;
      v113 = *(void (**)(char *, void, uint64_t))(v12 + 104);
      uint64_t v114 = v167;
      v113(v14, *MEMORY[0x263F1B4B8], v167);
      uint64_t v115 = sub_24FB47CC8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v114);
      sub_24FB47E58();
      sub_24FB47238();
      uint64_t v174 = v115;
      long long v175 = xmmword_24FB49B90;
      uint64_t v176 = v201;
      unint64_t v177 = v202;
      v178 = v203;
      uint64_t v179 = v204;
      long long v180 = v205;
      char v181 = 0;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4E9F0);
      sub_24FADC988();
      sub_24FB476C8();
      uint64_t v116 = v195;
      char v117 = BYTE8(v195);
      long long v118 = v192;
      long long v119 = v193;
      uint64_t v120 = v164;
      *uint64_t v164 = v191;
      v120[1] = v118;
      long long v121 = v194;
      v120[2] = v119;
      v120[3] = v121;
      *((void *)v120 + 8) = v116;
      *((unsigned char *)v120 + 72) = v117;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
      sub_24FADCD3C();
      sub_24FADC914();
      sub_24FB476C8();
      v73 = (uint64_t *)&unk_269A4EA10;
      uint64_t v122 = (uint64_t)v110;
    }
    else
    {
      char v110 = v165;
      if (v27 != *MEMORY[0x263F40758])
      {
        if (v27 == *MEMORY[0x263F40740])
        {
          uint64_t v134 = v171;
          if (qword_269A4E2B0 != -1) {
            swift_once();
          }
          id v135 = (id)qword_269A58F30;
          sub_24FB47CD8();
          uint64_t v136 = v12;
          uint64_t v137 = *(void (**)(char *, void, uint64_t))(v12 + 104);
          uint64_t v138 = v167;
          v137(v14, *MEMORY[0x263F1B4B8], v167);
          uint64_t v139 = sub_24FB47CC8();
          swift_release();
          (*(void (**)(char *, uint64_t))(v136 + 8))(v14, v138);
          sub_24FB47E58();
          sub_24FB47238();
          uint64_t v174 = v139;
          long long v175 = xmmword_24FB49B90;
          uint64_t v176 = v201;
          unint64_t v177 = v202;
          v178 = v203;
          uint64_t v179 = v204;
          long long v180 = v205;
          char v181 = 0;
        }
        else
        {
          if (v27 != *MEMORY[0x263F40750])
          {
            uint64_t v11 = v167;
            if (v27 == *MEMORY[0x263F40760] || v27 == *MEMORY[0x263F40770])
            {
LABEL_2:
              sub_24FB47C78();
              (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
              uint64_t v167 = sub_24FB47CC8();
              swift_release();
              (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
              sub_24FB47E58();
              sub_24FB47238();
              uint64_t v28 = v174;
              char v29 = v175;
              v151 = (char *)*((void *)&v175 + 1);
              char v30 = v176;
              uint64_t v154 = v178;
              uint64_t v155 = (char *)v177;
              LODWORD(v152) = sub_24FB47808();
              sub_24FB47178();
              uint64_t v32 = v31;
              uint64_t v34 = v33;
              uint64_t v36 = v35;
              uint64_t v38 = v37;
              uint64_t v153 = sub_24FB47C08();
              uint64_t v39 = swift_getKeyPath();
              char v190 = 1;
              char v187 = v29;
              char v186 = v30;
              char v183 = 0;
              id v40 = objc_msgSend(self, sel_systemGray3Color);
              uint64_t v41 = MEMORY[0x25336DFD0](v40);
              char v42 = sub_24FB47808();
              long long v191 = (unint64_t)v167;
              LOBYTE(v192) = v190;
              BYTE1(v192) = 1;
              *(_DWORD *)((char *)&v192 + 2) = v188;
              WORD3(v192) = v189;
              *((void *)&v192 + 1) = v28;
              LOBYTE(v193) = v187;
              *(_DWORD *)((char *)&v193 + 1) = v201;
              DWORD1(v193) = *(_DWORD *)((char *)&v201 + 3);
              *((void *)&v193 + 1) = v151;
              LOBYTE(v194) = v186;
              DWORD1(v194) = *(_DWORD *)&v185[3];
              *(_DWORD *)((char *)&v194 + 1) = *(_DWORD *)v185;
              *((void *)&v194 + 1) = v155;
              *(void *)&long long v195 = v154;
              BYTE8(v195) = v152;
              HIDWORD(v195) = *(_DWORD *)&v184[3];
              *(_DWORD *)((char *)&v195 + 9) = *(_DWORD *)v184;
              *(void *)&long long v196 = v32;
              *((void *)&v196 + 1) = v34;
              *(void *)&long long v197 = v36;
              *((void *)&v197 + 1) = v38;
              LOBYTE(v198) = v183;
              *(_DWORD *)((char *)&v198 + 1) = *(_DWORD *)v182;
              DWORD1(v198) = *(_DWORD *)&v182[3];
              *((void *)&v198 + 1) = v39;
              *(void *)&long long v199 = v153;
              *((void *)&v199 + 1) = v41;
              char v200 = v42;
              uint64_t v43 = (char *)v10 + *(int *)(v157 + 20);
              uint64_t v44 = *MEMORY[0x263F19860];
              uint64_t v45 = sub_24FB475C8();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v43, v44, v45);
              __asm { FMOV            V0.2D, #10.0 }
              *uint64_t v10 = _Q0;
              uint64_t v51 = v159;
              sub_24FADC744((uint64_t)v10, v159);
              *(_WORD *)(v51 + *(int *)(v158 + 36)) = 256;
              sub_24FAD5834(v51, (uint64_t)&v21[*(int *)(v166 + 36)], &qword_269A4E9D0);
              long long v52 = v198;
              long long v53 = v199;
              long long v54 = v196;
              *((_OWORD *)v21 + 6) = v197;
              *((_OWORD *)v21 + 7) = v52;
              *((_OWORD *)v21 + 8) = v53;
              long long v55 = v194;
              long long v56 = v195;
              long long v57 = v192;
              *((_OWORD *)v21 + 2) = v193;
              *((_OWORD *)v21 + 3) = v55;
              v21[144] = v200;
              *((_OWORD *)v21 + 4) = v56;
              *((_OWORD *)v21 + 5) = v54;
              *(_OWORD *)uint64_t v21 = v191;
              *((_OWORD *)v21 + 1) = v57;
              sub_24FADC7A8((uint64_t)&v191);
              sub_24FAD5794(v51, &qword_269A4E9D0);
              sub_24FADC7FC((uint64_t)v10);
              sub_24FADC858((uint64_t)&v191);
              uint64_t v58 = v156;
              sub_24FADC8AC((uint64_t)v21, v156);
              sub_24FAD5834(v58, v170, (uint64_t *)&unk_269A4EA30);
              swift_storeEnumTagMultiPayload();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4E9F0);
              sub_24FADCA2C();
              sub_24FADC988();
              uint64_t v59 = (uint64_t)v160;
              sub_24FB476C8();
              sub_24FAD5834(v59, (uint64_t)v164, (uint64_t *)&unk_269A4EA20);
              swift_storeEnumTagMultiPayload();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
              sub_24FADCD3C();
              sub_24FADC914();
              uint64_t v60 = (uint64_t)v165;
              sub_24FB476C8();
              sub_24FAD5794(v59, (uint64_t *)&unk_269A4EA20);
              sub_24FAD5834(v60, v171, (uint64_t *)&unk_269A4EA10);
              swift_storeEnumTagMultiPayload();
              sub_24FADCCB4(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
              sub_24FADCCB4(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
              sub_24FB476C8();
              sub_24FAD5794(v60, (uint64_t *)&unk_269A4EA10);
              uint64_t v61 = v58;
              return sub_24FAD5794(v61, (uint64_t *)&unk_269A4EA30);
            }
            sub_24FB48678();
            __break(1u);
            goto LABEL_32;
          }
          uint64_t v134 = v171;
          if (qword_269A4E2B0 != -1) {
            swift_once();
          }
          id v140 = (id)qword_269A58F30;
          sub_24FB47CD8();
          uint64_t v141 = v12;
          uint64_t v142 = *(void (**)(char *, void, uint64_t))(v12 + 104);
          uint64_t v143 = v167;
          v142(v14, *MEMORY[0x263F1B4B8], v167);
          uint64_t v144 = sub_24FB47CC8();
          swift_release();
          (*(void (**)(char *, uint64_t))(v141 + 8))(v14, v143);
          sub_24FB47E58();
          sub_24FB47238();
          uint64_t v174 = v144;
          long long v175 = xmmword_24FB49B90;
          uint64_t v176 = v201;
          unint64_t v177 = v202;
          v178 = v203;
          uint64_t v179 = v204;
          long long v180 = v205;
          char v181 = 1;
        }
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4E9F0);
        sub_24FADC988();
        sub_24FB476C8();
        uint64_t v145 = v195;
        char v146 = BYTE8(v195);
        long long v147 = v192;
        long long v148 = v193;
        v149 = v154;
        *uint64_t v154 = v191;
        v149[1] = v147;
        long long v150 = v194;
        v149[2] = v148;
        v149[3] = v150;
        *((void *)v149 + 8) = v145;
        *((unsigned char *)v149 + 72) = v146;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
        sub_24FADC914();
        sub_24FADCA2C();
        uint64_t v72 = (uint64_t)v155;
        sub_24FB476C8();
        v73 = &qword_269A4EA90;
        sub_24FAD5834(v72, v134, &qword_269A4EA90);
        swift_storeEnumTagMultiPayload();
        sub_24FADCCB4(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
        sub_24FADCCB4(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
        goto LABEL_7;
      }
      uint64_t v109 = v171;
      if (qword_269A4E2B0 != -1) {
        swift_once();
      }
      id v123 = (id)qword_269A58F30;
      sub_24FB47CD8();
      uint64_t v124 = v12;
      v125 = *(void (**)(char *, void, uint64_t))(v12 + 104);
      uint64_t v126 = v167;
      v125(v14, *MEMORY[0x263F1B4B8], v167);
      uint64_t v127 = sub_24FB47CC8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v14, v126);
      sub_24FB47E58();
      sub_24FB47238();
      uint64_t v174 = v127;
      long long v175 = xmmword_24FB49B90;
      uint64_t v176 = v201;
      unint64_t v177 = v202;
      v178 = v203;
      uint64_t v179 = v204;
      long long v180 = v205;
      char v181 = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4E9F0);
      sub_24FADC988();
      sub_24FB476C8();
      uint64_t v128 = v195;
      char v129 = BYTE8(v195);
      long long v130 = v192;
      long long v131 = v193;
      uint64_t v132 = v164;
      *uint64_t v164 = v191;
      v132[1] = v130;
      long long v133 = v194;
      v132[2] = v131;
      v132[3] = v133;
      *((void *)v132 + 8) = v128;
      *((unsigned char *)v132 + 72) = v129;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
      sub_24FADCD3C();
      sub_24FADC914();
      sub_24FB476C8();
      v73 = (uint64_t *)&unk_269A4EA10;
      uint64_t v122 = (uint64_t)v110;
    }
    sub_24FAD5834(v122, v109, (uint64_t *)&unk_269A4EA10);
    swift_storeEnumTagMultiPayload();
    sub_24FADCCB4(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
    sub_24FADCCB4(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
    sub_24FB476C8();
    uint64_t v74 = (uint64_t)v110;
    goto LABEL_19;
  }
  if (qword_269A4E2B0 != -1) {
LABEL_32:
  }
    swift_once();
  id v64 = (id)qword_269A58F30;
  sub_24FB47CD8();
  uint64_t v65 = v167;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v167);
  uint64_t v66 = sub_24FB47CC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v65);
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v67 = v191;
  char v68 = BYTE8(v191);
  uint64_t v69 = v192;
  char v70 = BYTE8(v192);
  *(void *)unint64_t v63 = v66;
  *(void *)(v63 + 8) = 0;
  *(_WORD *)(v63 + 16) = 257;
  *(void *)(v63 + 24) = v67;
  *(unsigned char *)(v63 + 32) = v68;
  *(void *)(v63 + 40) = v69;
  *(unsigned char *)(v63 + 48) = v70;
  *(_OWORD *)(v63 + 56) = v193;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4E9F0);
  sub_24FADCA2C();
  sub_24FADC988();
  uint64_t v71 = (uint64_t)v160;
  sub_24FB476C8();
  sub_24FAD5834(v71, (uint64_t)v164, (uint64_t *)&unk_269A4EA20);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA80);
  sub_24FADCD3C();
  sub_24FADC914();
  uint64_t v72 = (uint64_t)v165;
  sub_24FB476C8();
  sub_24FAD5794(v71, (uint64_t *)&unk_269A4EA20);
  v73 = (uint64_t *)&unk_269A4EA10;
  sub_24FAD5834(v72, v171, (uint64_t *)&unk_269A4EA10);
  swift_storeEnumTagMultiPayload();
  sub_24FADCCB4(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
  sub_24FADCCB4(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
LABEL_7:
  sub_24FB476C8();
  uint64_t v74 = v72;
LABEL_19:
  sub_24FAD5794(v74, v73);
  return swift_release();
}

void sub_24FADC5E0()
{
  uint64_t v0 = (void *)sub_24FB48028();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  qword_269A58F30 = (uint64_t)v1;
}

uint64_t sub_24FADC650(float a1)
{
  if (a1 >= 1.0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E610);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_24FB49BA0;
    uint64_t v5 = MEMORY[0x263F8D648];
    *(void *)(v2 + 56) = MEMORY[0x263F8D5C8];
    *(void *)(v2 + 64) = v5;
    *(float *)(v2 + 32) = a1;
    uint64_t v4 = 0x4D2066322E25;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E610);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_24FB49BA0;
    uint64_t v3 = MEMORY[0x263F8D648];
    *(void *)(v2 + 56) = MEMORY[0x263F8D5C8];
    *(void *)(v2 + 64) = v3;
    *(float *)(v2 + 32) = a1 * 1024.0;
    uint64_t v4 = 0x4B2066302E25;
  }
  uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL | 0x42000000000000;
  return MEMORY[0x270EF1A50](v6, 0xE700000000000000, v2);
}

uint64_t sub_24FADC744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47388();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FADC7A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FADC7FC(uint64_t a1)
{
  uint64_t v2 = sub_24FB47388();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FADC858(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FADC8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4EA30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24FADC914()
{
  unint64_t result = qword_269A4E638;
  if (!qword_269A4E638)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4EA80);
    sub_24FADC988();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E638);
  }
  return result;
}

uint64_t sub_24FADC988()
{
  return sub_24FADCC38(&qword_269A4E640, (uint64_t *)&unk_269A4E9F0, (void (*)(void))sub_24FADC9B8);
}

unint64_t sub_24FADC9B8()
{
  unint64_t result = qword_269A4E648;
  if (!qword_269A4E648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E648);
  }
  return result;
}

unint64_t sub_24FADCA2C()
{
  unint64_t result = qword_269A4E650;
  if (!qword_269A4E650)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4EA30);
    sub_24FADCACC();
    sub_24FAD57F0(&qword_269A4E680, &qword_269A4E9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E650);
  }
  return result;
}

unint64_t sub_24FADCACC()
{
  unint64_t result = qword_269A4E658;
  if (!qword_269A4E658)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4EA40);
    sub_24FADCB6C();
    sub_24FAD57F0(&qword_269A4E678, (uint64_t *)&unk_269A4EA70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E658);
  }
  return result;
}

unint64_t sub_24FADCB6C()
{
  unint64_t result = qword_269A4E660;
  if (!qword_269A4E660)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4EA50);
    sub_24FADCC38(&qword_269A4E668, (uint64_t *)&unk_269A4EA60, (void (*)(void))sub_24FADC988);
    sub_24FAD57F0(&qword_269A4E670, &qword_269A4E9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E660);
  }
  return result;
}

uint64_t sub_24FADCC38(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FADCCB4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FADCD3C()
{
  return sub_24FADCCB4(&qword_269A4E690, (uint64_t *)&unk_269A4EA20, (void (*)(void))sub_24FADCA2C, (void (*)(void))sub_24FADC988);
}

uint64_t sub_24FADCD78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + *(int *)(v3 + 56);
  char v7 = *(unsigned char *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  char v16 = v7;
  uint64_t v17 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47CF8();
  int v9 = v18;
  sub_24FAE8FD4(v1, (uint64_t)v5, type metadata accessor for AttachmentConfirmationView);
  if (v9 == 1)
  {
    uint64_t v10 = &v5[*(int *)(v2 + 60)];
    char v11 = *v10;
    uint64_t v12 = *((void *)v10 + 1);
    char v16 = v11;
    uint64_t v17 = v12;
    sub_24FB47CF8();
    uint64_t v13 = v18;
  }
  else
  {
    uint64_t v13 = 0;
  }
  sub_24FAE9C4C((uint64_t)v5, type metadata accessor for AttachmentConfirmationView);
  return v13;
}

void sub_24FADCEB0()
{
  uint64_t v1 = v0;
  type metadata accessor for AttachmentConfirmationView(0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47CF8();
  sub_24FB47D08();
  swift_release();
  sub_24FB47CF8();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  if (v4 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 48);
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  qword_269A4E6A0 = v2;
  qword_269A4E6A8 = v3;
  swift_bridgeObjectRelease();
  sub_24FADCFB0();
}

void sub_24FADCFB0()
{
  uint64_t v1 = sub_24FB47EB8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  char v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB47ED8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(void **)(v0 + *(int *)(type metadata accessor for AttachmentConfirmationView(0) + 68));
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = sub_24FB47F98();

    if (v11)
    {
      sub_24FAD59E4(0, &qword_269A4EAB0);
      uint64_t v15 = sub_24FB48338();
      uint64_t v16 = v5;
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_24FAE9D04;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24FAE0AC8;
      aBlock[3] = &block_descriptor;
      uint64_t v13 = _Block_copy(aBlock);
      swift_release();
      sub_24FB47EC8();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_24FAE8F8C(&qword_269A4EB18, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB20);
      sub_24FAD57F0(&qword_269A4EB28, &qword_269A4EB20);
      sub_24FB483C8();
      long long v14 = (void *)v15;
      MEMORY[0x25336E6C0](0, v8, v4, v13);
      _Block_release(v13);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    }
  }
  else
  {
    sub_24FB47FA8();
    sub_24FAE8F8C(&qword_269A4E718, MEMORY[0x263F77980]);
    sub_24FB473C8();
    __break(1u);
  }
}

uint64_t AttachmentConfirmationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6B0);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6B8);
  MEMORY[0x270FA5388](v33);
  int v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6C0);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v31 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6C8) - 8;
  MEMORY[0x270FA5388](v35);
  uint64_t v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6D0);
  MEMORY[0x270FA5388](v37);
  uint64_t v34 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)int v9 = sub_24FB475F8();
  *((void *)v9 + 1) = 0x402C000000000000;
  v9[16] = 0;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6D8);
  sub_24FADD894(v1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  long long v14 = *(_OWORD *)(v1 + *(int *)(v4 + 60));
  uint64_t v30 = v1;
  long long v42 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
  sub_24FB47CF8();
  sub_24FAE8FD4(v1, (uint64_t)v7, type metadata accessor for AttachmentConfirmationView);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  sub_24FAE9148((uint64_t)v7, v16 + v15, type metadata accessor for AttachmentConfirmationView);
  sub_24FAD57F0(&qword_269A4E6E8, &qword_269A4E6B8);
  uint64_t v17 = v31;
  sub_24FB47B78();
  swift_release();
  sub_24FAD5794((uint64_t)v9, &qword_269A4E6B8);
  sub_24FAE8FD4(v30, (uint64_t)v7, type metadata accessor for AttachmentConfirmationView);
  uint64_t v18 = swift_allocObject();
  sub_24FAE9148((uint64_t)v7, v18 + v15, type metadata accessor for AttachmentConfirmationView);
  uint64_t v19 = v36;
  uint64_t v20 = (uint64_t)v32;
  uint64_t v21 = v38;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v17, v38);
  uint64_t v22 = (uint64_t (**)())(v20 + *(int *)(v35 + 44));
  *uint64_t v22 = sub_24FAE0810;
  v22[1] = (uint64_t (*)())v18;
  v22[2] = 0;
  v22[3] = 0;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v21);
  uint64_t v23 = sub_24FB478A8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v34;
  sub_24FAD5834(v20, v34, &qword_269A4E6C8);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(v37 + 36));
  *uint64_t v26 = KeyPath;
  v26[1] = v23;
  sub_24FAD5794(v20, &qword_269A4E6C8);
  uint64_t v27 = v39;
  sub_24FADFCE0(0, v39);
  sub_24FAE4124();
  sub_24FAD57F0(&qword_269A4E710, &qword_269A4E6B0);
  sub_24FB47B18();
  sub_24FAD5794(v27, &qword_269A4E6B0);
  return sub_24FAD5794(v25, &qword_269A4E6D0);
}

uint64_t type metadata accessor for AttachmentConfirmationView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4E728);
}

uint64_t sub_24FADD894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v172 = a2;
  uint64_t v147 = sub_24FB47388();
  MEMORY[0x270FA5388](v147);
  v149 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB30);
  MEMORY[0x270FA5388](v148);
  uint64_t v156 = (char *)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB38);
  MEMORY[0x270FA5388](v151);
  uint64_t v155 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for QuickLookPreview(0);
  MEMORY[0x270FA5388](v6 - 8);
  char v146 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v157 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB48);
  MEMORY[0x270FA5388](v150);
  uint64_t v154 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB50);
  uint64_t v164 = *(void *)(v162 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v162);
  uint64_t v153 = (uint64_t)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v152 = (uint64_t)&v145 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v168 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24FB46F68();
  uint64_t v159 = *(void *)(v16 - 8);
  uint64_t v160 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v158 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB58);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v169 = (uint64_t)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v163 = (uint64_t)&v145 - v21;
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB60);
  MEMORY[0x270FA5388](v167);
  uint64_t v166 = (uint64_t *)((char *)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB68);
  uint64_t v170 = *(void *)(v23 - 8);
  uint64_t v171 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v161 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v165 = (char *)&v145 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v173 = (char *)&v145 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB70);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  long long v180 = (char *)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v174 = (uint64_t)&v145 - v32;
  uint64_t v179 = a1;
  *(void *)&long long v207 = sub_24FAE9D24();
  *((void *)&v207 + 1) = v33;
  sub_24FADA9E0();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24FB47A18();
  uint64_t v177 = v34;
  uint64_t v178 = v35;
  uint64_t v37 = v36;
  uint64_t v38 = v35;
  char v40 = v39 & 1;
  uint64_t v176 = sub_24FADE7E8();
  int v175 = v41;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = sub_24FB47918();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = sub_24FB47C28();
  uint64_t v46 = swift_getKeyPath();
  uint64_t v196 = v34;
  uint64_t v197 = v37;
  char v198 = v40;
  uint64_t v199 = v38;
  uint64_t v200 = KeyPath;
  uint64_t v201 = v176;
  char v202 = v175 & 1;
  uint64_t v203 = v44;
  uint64_t v204 = v43;
  uint64_t v205 = v46;
  uint64_t v206 = v45;
  sub_24FB47E68();
  sub_24FAF1064(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v183, 0.0, 1, 0.0, 1);
  uint64_t v47 = v179;
  sub_24FADAA34(v177, v37, v40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v217 = v193;
  long long v218 = v194;
  uint64_t v219 = v195;
  long long v213 = v189;
  long long v214 = v190;
  long long v215 = v191;
  long long v216 = v192;
  long long v209 = v185;
  long long v210 = v186;
  long long v211 = v187;
  long long v212 = v188;
  long long v207 = v183;
  long long v208 = v184;
  uint64_t v48 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v49 = v47 + *(int *)(v48 + 56);
  char v50 = *(unsigned char *)v49;
  uint64_t v51 = *(void *)(v49 + 8);
  LOBYTE(v183) = v50;
  *((void *)&v183 + 1) = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47CF8();
  if (LOBYTE(v181[0]) != 1)
  {
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB78);
    uint64_t v77 = v174;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v174, 1, 1, v78);
    uint64_t v65 = v172;
    uint64_t v67 = (uint64_t)v180;
    goto LABEL_9;
  }
  uint64_t v52 = (uint64_t)v168;
  uint64_t v53 = sub_24FB47538();
  uint64_t v54 = (uint64_t)v166;
  *uint64_t v166 = v53;
  *(void *)(v54 + 8) = 0x402C000000000000;
  *(unsigned char *)(v54 + 16) = 0;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB88);
  sub_24FADE964(v47, v54 + *(int *)(v55 + 44));
  sub_24FAD57F0(&qword_269A4EB90, &qword_269A4EB60);
  long long v56 = v165;
  sub_24FB47A68();
  sub_24FAD5794(v54, &qword_269A4EB60);
  uint64_t v57 = v170;
  uint64_t v58 = v173;
  (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v173, v56, v171);
  uint64_t v59 = v47 + *(int *)(v48 + 60);
  char v60 = *(unsigned char *)v59;
  uint64_t v61 = *(void *)(v59 + 8);
  LOBYTE(v183) = v60;
  *((void *)&v183 + 1) = v61;
  sub_24FB47CF8();
  if (LOBYTE(v181[0]) != 1) {
    goto LABEL_5;
  }
  sub_24FAE02B8(v52);
  uint64_t v62 = v159;
  uint64_t v63 = v160;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v52, 1, v160) == 1)
  {
    sub_24FAD5794(v52, &qword_269A4E528);
LABEL_5:
    uint64_t v64 = 1;
    uint64_t v66 = v171;
    uint64_t v65 = v172;
    uint64_t v67 = (uint64_t)v180;
    uint64_t v68 = v162;
    uint64_t v69 = v163;
    uint64_t v70 = v164;
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v158, v52, v63);
  char v92 = sub_24FB46F48();
  char v93 = self;
  v94 = (void *)sub_24FB46F18();
  unsigned int v95 = objc_msgSend(v93, sel_canPreviewItem_, v94);

  if (v92) {
    sub_24FB46F38();
  }
  uint64_t v65 = v172;
  uint64_t v96 = v180;
  uint64_t v97 = (uint64_t)v156;
  uint64_t v98 = (uint64_t)v157;
  if (v95)
  {
    uint64_t v99 = (uint64_t)v146;
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v146, v158, v160);
    uint64_t v100 = sub_24FB47E58();
    sub_24FAF1238(0.0, 1, 0.0, 1, INFINITY, 0, 244.0, 0, v98, 0.0, 1, 244.0, 0, v100, v101);
    sub_24FAE9C4C(v99, type metadata accessor for QuickLookPreview);
    long long v102 = v149;
    long long v103 = &v149[*(int *)(v147 + 20)];
    uint64_t v104 = *MEMORY[0x263F19860];
    uint64_t v105 = sub_24FB475C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 104))(v103, v104, v105);
    __asm { FMOV            V0.2D, #20.0 }
    *long long v102 = _Q0;
    LODWORD(v103) = sub_24FB476F8();
    sub_24FAE8FD4((uint64_t)v102, v97, MEMORY[0x263F19048]);
    uint64_t v111 = v148;
    *(_DWORD *)(v97 + *(int *)(v148 + 52)) = v103;
    *(_WORD *)(v97 + *(int *)(v111 + 56)) = 256;
    sub_24FAE9C4C((uint64_t)v102, MEMORY[0x263F19048]);
    LOBYTE(v102) = sub_24FB477F8();
    char v112 = sub_24FB47818();
    char v113 = sub_24FB47848();
    sub_24FB47848();
    if (sub_24FB47848() != v102) {
      char v113 = sub_24FB47848();
    }
    sub_24FB47848();
    char v114 = sub_24FB47848();
    uint64_t v116 = (uint64_t)v154;
    uint64_t v115 = (uint64_t)v155;
    uint64_t v117 = v151;
    if (v114 != v112) {
      char v113 = sub_24FB47848();
    }
    sub_24FB47178();
    uint64_t v119 = v118;
    uint64_t v121 = v120;
    uint64_t v123 = v122;
    uint64_t v125 = v124;
    sub_24FAD5834(v97, v115, &qword_269A4EB30);
    uint64_t v126 = v115 + *(int *)(v117 + 36);
    *(unsigned char *)uint64_t v126 = v113;
    *(void *)(v126 + 8) = v119;
    *(void *)(v126 + 16) = v121;
    *(void *)(v126 + 24) = v123;
    *(void *)(v126 + 32) = v125;
    *(unsigned char *)(v126 + 40) = 0;
    sub_24FAD5794(v97, &qword_269A4EB30);
    uint64_t v127 = sub_24FB47E58();
    uint64_t v129 = v128;
    uint64_t v130 = v98;
    uint64_t v131 = v115;
    uint64_t v132 = v116 + *(int *)(v150 + 36);
    sub_24FAD5834(v131, v132, &qword_269A4EB38);
    long long v133 = (uint64_t *)(v132 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBA0) + 36));
    *long long v133 = v127;
    v133[1] = v129;
    sub_24FAD5834(v130, v116, &qword_269A4EB40);
    sub_24FAD5794(v131, &qword_269A4EB38);
    sub_24FAD5794(v130, &qword_269A4EB40);
    LOBYTE(v127) = sub_24FB47818();
    sub_24FB47178();
    uint64_t v135 = v134;
    uint64_t v137 = v136;
    uint64_t v139 = v138;
    uint64_t v141 = v140;
    uint64_t v142 = v153;
    sub_24FAD5834(v116, v153, &qword_269A4EB48);
    uint64_t v68 = v162;
    uint64_t v143 = v142 + *(int *)(v162 + 36);
    *(unsigned char *)uint64_t v143 = v127;
    *(void *)(v143 + 8) = v135;
    *(void *)(v143 + 16) = v137;
    *(void *)(v143 + 24) = v139;
    *(void *)(v143 + 32) = v141;
    *(unsigned char *)(v143 + 40) = 0;
    sub_24FAD5794(v116, &qword_269A4EB48);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v160);
    uint64_t v144 = v152;
    sub_24FAD5730(v142, v152, &qword_269A4EB50);
    uint64_t v69 = v163;
    sub_24FAD5730(v144, v163, &qword_269A4EB50);
    uint64_t v64 = 0;
    uint64_t v70 = v164;
    uint64_t v57 = v170;
    uint64_t v66 = v171;
    uint64_t v71 = v161;
    uint64_t v67 = (uint64_t)v180;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v159 + 8))(v158, v160);
  uint64_t v64 = 1;
  uint64_t v67 = (uint64_t)v96;
  uint64_t v68 = v162;
  uint64_t v69 = v163;
  uint64_t v70 = v164;
  uint64_t v57 = v170;
  uint64_t v66 = v171;
LABEL_6:
  uint64_t v71 = v161;
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v69, v64, 1, v68);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v72(v71, v58, v66);
  uint64_t v73 = v169;
  sub_24FAD5834(v69, v169, &qword_269A4EB58);
  v72((char *)v67, v71, v66);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB98);
  sub_24FAD5834(v73, v67 + *(int *)(v74 + 48), &qword_269A4EB58);
  sub_24FAD5794(v69, &qword_269A4EB58);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v57 + 8);
  v75(v173, v66);
  sub_24FAD5794(v73, &qword_269A4EB58);
  v75(v71, v66);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB78);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v67, 0, 1, v76);
  uint64_t v77 = v174;
  sub_24FAD5730(v67, v174, &qword_269A4EB70);
LABEL_9:
  sub_24FAD5834(v77, v67, &qword_269A4EB70);
  long long v79 = v218;
  v181[10] = v217;
  v181[11] = v218;
  long long v80 = v213;
  long long v81 = v214;
  v181[6] = v213;
  v181[7] = v214;
  long long v83 = v215;
  long long v82 = v216;
  v181[8] = v215;
  v181[9] = v216;
  long long v84 = v209;
  long long v85 = v210;
  v181[2] = v209;
  v181[3] = v210;
  long long v87 = v211;
  long long v86 = v212;
  v181[4] = v211;
  v181[5] = v212;
  long long v89 = v207;
  long long v88 = v208;
  v181[0] = v207;
  v181[1] = v208;
  *(_OWORD *)(v65 + 160) = v217;
  *(_OWORD *)(v65 + 176) = v79;
  *(_OWORD *)(v65 + 96) = v80;
  *(_OWORD *)(v65 + 112) = v81;
  *(_OWORD *)(v65 + 128) = v83;
  *(_OWORD *)(v65 + 144) = v82;
  *(_OWORD *)(v65 + 32) = v84;
  *(_OWORD *)(v65 + 48) = v85;
  *(_OWORD *)(v65 + 64) = v87;
  *(_OWORD *)(v65 + 80) = v86;
  uint64_t v182 = v219;
  *(void *)(v65 + 192) = v219;
  *(_OWORD *)uint64_t v65 = v89;
  *(_OWORD *)(v65 + 16) = v88;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EB80);
  sub_24FAD5834(v67, v65 + *(int *)(v90 + 48), &qword_269A4EB70);
  sub_24FAE9F24((uint64_t)v181);
  sub_24FAD5794(v77, &qword_269A4EB70);
  sub_24FAD5794(v67, &qword_269A4EB70);
  long long v193 = v217;
  long long v194 = v218;
  uint64_t v195 = v219;
  long long v189 = v213;
  long long v190 = v214;
  long long v191 = v215;
  long long v192 = v216;
  long long v185 = v209;
  long long v186 = v210;
  long long v187 = v211;
  long long v188 = v212;
  long long v183 = v207;
  long long v184 = v208;
  return sub_24FAE9FAC((uint64_t)&v183);
}

uint64_t sub_24FADE7E8()
{
  uint64_t v1 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - v5;
  sub_24FAE8FD4(v0, (uint64_t)&v16 - v5, type metadata accessor for AttachmentConfirmationView);
  uint64_t v7 = &v6[*(int *)(v1 + 56)];
  char v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  char v17 = v8;
  uint64_t v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47CF8();
  int v10 = v19;
  sub_24FAE8FD4((uint64_t)v6, (uint64_t)v4, type metadata accessor for AttachmentConfirmationView);
  if (v10 == 1)
  {
    uint64_t v11 = &v4[*(int *)(v1 + 60)];
    char v12 = *v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v17 = v12;
    uint64_t v18 = v13;
    sub_24FB47CF8();
    unsigned int v14 = v19;
  }
  else
  {
    unsigned int v14 = 0;
  }
  sub_24FAE9C4C((uint64_t)v4, type metadata accessor for AttachmentConfirmationView);
  sub_24FAE9C4C((uint64_t)v6, type metadata accessor for AttachmentConfirmationView);
  return v14;
}

uint64_t sub_24FADE964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v153 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBA8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v154 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v152 = (char *)&v129 - v6;
  uint64_t v137 = type metadata accessor for FileDetailsView(0);
  MEMORY[0x270FA5388](v137);
  uint64_t v138 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBB0);
  MEMORY[0x270FA5388](v149);
  uint64_t v140 = (uint64_t)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBB8);
  uint64_t v142 = *(void *)(v150 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v150);
  uint64_t v139 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v141 = (char *)&v129 - v11;
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBC0);
  MEMORY[0x270FA5388](v145);
  uint64_t v148 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6B0);
  MEMORY[0x270FA5388](v147);
  uint64_t v143 = (uint64_t)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for ImageDetailsView(0);
  MEMORY[0x270FA5388](v129);
  uint64_t v130 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBC8);
  MEMORY[0x270FA5388](v144);
  uint64_t v132 = (uint64_t)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBD0);
  uint64_t v134 = *(void *)(v146 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v146);
  uint64_t v131 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v133 = (char *)&v129 - v18;
  uint64_t v157 = sub_24FB47028();
  unint64_t v164 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v159 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBD8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v151 = (uint64_t)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v161 = (uint64_t)&v129 - v23;
  uint64_t v24 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v155 = *(void *)(v24 - 8);
  uint64_t v25 = *(void *)(v155 + 64);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = type metadata accessor for ThumbnailView(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (uint64_t *)((char *)&v129 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBE0);
  uint64_t v156 = *((void *)v158 - 1);
  MEMORY[0x270FA5388](v158);
  uint64_t v30 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EBE8);
  uint64_t v32 = v31 - 8;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v163 = (uint64_t)&v129 - v36;
  uint64_t v37 = sub_24FADFAFC();
  v165 = (int *)v24;
  uint64_t v160 = a1 + *(int *)(v24 + 36);
  uint64_t v38 = (char *)v28 + *(int *)(v26 + 20);
  char v39 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
  uint64_t v40 = v157;
  unint64_t v136 = v164 + 16;
  uint64_t v135 = v39;
  ((void (*)(char *))v39)(v38);
  *uint64_t v28 = v37;
  uint64_t v162 = a1;
  sub_24FAE8FD4(a1, (uint64_t)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AttachmentConfirmationView);
  unint64_t v41 = (*(unsigned __int8 *)(v155 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
  uint64_t v42 = swift_allocObject();
  sub_24FAE9148((uint64_t)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v42 + v41, type metadata accessor for AttachmentConfirmationView);
  sub_24FAE8F8C(&qword_269A4EBF0, (void (*)(uint64_t))type metadata accessor for ThumbnailView);
  sub_24FB47AF8();
  swift_release();
  uint64_t v43 = (uint64_t)v28;
  uint64_t v44 = v40;
  sub_24FAE9C4C(v43, type metadata accessor for ThumbnailView);
  sub_24FB47BE8();
  uint64_t v45 = sub_24FB47C18();
  swift_release();
  uint64_t v46 = v156;
  uint64_t v47 = (uint64_t)v158;
  (*(void (**)(char *, char *, char *))(v156 + 16))(v35, v30, v158);
  uint64_t v48 = &v35[*(int *)(v32 + 44)];
  *(void *)uint64_t v48 = v45;
  *(_OWORD *)(v48 + 8) = xmmword_24FB49BF0;
  *((void *)v48 + 3) = 0x4000000000000000;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v47);
  uint64_t v158 = v35;
  sub_24FAD5730((uint64_t)v35, v163, &qword_269A4EBE8);
  unint64_t v49 = v164;
  char v50 = v159;
  (*(void (**)(char *, void, uint64_t))(v164 + 104))(v159, *MEMORY[0x263F40748], v40);
  LOBYTE(v47) = sub_24FB47018();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v40);
  if ((v47 & 1) == 0)
  {
    uint64_t v76 = v165[13];
    uint64_t v77 = *(void *)(v162 + v165[12]);
    uint64_t v79 = *(void *)(v162 + 48);
    uint64_t v78 = *(void *)(v162 + 56);
    uint64_t v80 = v162;
    unint64_t v82 = *(void *)(v162 + v76 + 8);
    unint64_t v170 = *(void *)(v162 + v76);
    uint64_t v81 = v170;
    unint64_t v171 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
    sub_24FB47D18();
    uint64_t v83 = v166;
    unint64_t v164 = v167;
    uint64_t v159 = v168;
    uint64_t v166 = v81;
    unint64_t v167 = v82;
    uint64_t result = sub_24FB47CF8();
    if ((v170 & 0x8000000000000000) == 0)
    {
      if (v170 < *(void *)(v77 + 16))
      {
        uint64_t v84 = v77 + 40 * v170;
        LODWORD(v156) = *(_DWORD *)(v84 + 64);
        LODWORD(v155) = *(unsigned __int8 *)(v84 + 68);
        uint64_t v85 = v78;
        uint64_t v86 = v79;
        uint64_t v88 = *(void *)(v80 + 64);
        uint64_t v87 = *(void *)(v80 + 72);
        uint64_t v89 = v83;
        uint64_t v90 = v137;
        uint64_t v91 = (uint64_t)v138;
        v135(&v138[*(int *)(v137 + 36)], v160, v44);
        char v92 = v165;
        sub_24FAD5834(v80 + v165[10], v91 + *(int *)(v90 + 40), &qword_269A4E720);
        sub_24FAD5834(v80 + v92[11], v91 + *(int *)(v90 + 44), &qword_269A4E528);
        *(void *)uint64_t v91 = v86;
        *(void *)(v91 + 8) = v85;
        *(void *)(v91 + 16) = v77;
        *(void *)(v91 + 24) = v89;
        char v93 = v159;
        *(void *)(v91 + 32) = v164;
        *(void *)(v91 + 40) = v93;
        *(_DWORD *)(v91 + 48) = v156;
        *(unsigned char *)(v91 + 52) = v155;
        *(void *)(v91 + 56) = v88;
        *(void *)(v91 + 64) = v87;
        swift_bridgeObjectRetain();
        uint64_t v94 = sub_24FB47E68();
        uint64_t v95 = v140;
        sub_24FAF1300(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v140, 0.0, 1, 0.0, 1, v94, v96);
        sub_24FAE9C4C(v91, type metadata accessor for FileDetailsView);
        uint64_t v97 = v143;
        sub_24FADFCE0(1, v143);
        unint64_t v164 = sub_24FAEA094();
        uint64_t v98 = sub_24FAD57F0(&qword_269A4E710, &qword_269A4E6B0);
        uint64_t v99 = v139;
        uint64_t v100 = v149;
        uint64_t v101 = v147;
        sub_24FB47B18();
        sub_24FAD5794(v97, &qword_269A4E6B0);
        sub_24FAD5794(v95, &qword_269A4EBB0);
        uint64_t v102 = v142;
        long long v103 = v141;
        uint64_t v104 = v150;
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v141, v99, v150);
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v148, v103, v104);
        swift_storeEnumTagMultiPayload();
        unint64_t v105 = sub_24FAEA140();
        uint64_t v166 = v144;
        unint64_t v167 = v101;
        uint64_t v168 = (char *)v105;
        uint64_t v169 = v98;
        swift_getOpaqueTypeConformance2();
        uint64_t v166 = v100;
        unint64_t v167 = v101;
        uint64_t v168 = (char *)v164;
        uint64_t v169 = v98;
        swift_getOpaqueTypeConformance2();
        sub_24FB476C8();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v104);
        goto LABEL_10;
      }
LABEL_19:
      __break(1u);
      return result;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v51 = v165;
  uint64_t v52 = v165[13];
  uint64_t v53 = v162;
  uint64_t v54 = *(void *)(v162 + v165[12]);
  uint64_t v55 = *(void *)(v162 + v52);
  unint64_t v56 = *(void *)(v162 + v52 + 8);
  uint64_t v166 = v55;
  unint64_t v167 = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
  uint64_t result = sub_24FB47CF8();
  if ((v170 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v170 >= *(void *)(v54 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  char v58 = *(unsigned char *)(v54 + 32 + 40 * v170 + 37);
  uint64_t v166 = v55;
  unint64_t v167 = v56;
  uint64_t result = sub_24FB47CF8();
  if ((v170 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v170 >= *(void *)(v54 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v59 = v54 + 32 + 40 * v170;
  int v60 = *(_DWORD *)(v59 + 32);
  char v61 = *(unsigned char *)(v59 + 36);
  uint64_t v62 = (uint64_t)v130;
  sub_24FAD5834(v53 + v51[11], (uint64_t)&v130[*(int *)(v129 + 24)], &qword_269A4E528);
  *(unsigned char *)uint64_t v62 = v58;
  *(_DWORD *)(v62 + 4) = v60;
  *(unsigned char *)(v62 + 8) = v61;
  uint64_t v63 = sub_24FB47E68();
  uint64_t v64 = v132;
  sub_24FAF129C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v132, 0.0, 1, 0.0, 1, v63, v65);
  sub_24FAE9C4C(v62, type metadata accessor for ImageDetailsView);
  uint64_t v66 = v143;
  sub_24FADFCE0(1, v143);
  unint64_t v67 = sub_24FAEA140();
  uint64_t v68 = sub_24FAD57F0(&qword_269A4E710, &qword_269A4E6B0);
  uint64_t v69 = v131;
  uint64_t v70 = v144;
  uint64_t v71 = v147;
  sub_24FB47B18();
  sub_24FAD5794(v66, &qword_269A4E6B0);
  sub_24FAD5794(v64, &qword_269A4EBC8);
  uint64_t v72 = v134;
  uint64_t v73 = v133;
  uint64_t v74 = v146;
  (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v133, v69, v146);
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v148, v73, v74);
  swift_storeEnumTagMultiPayload();
  uint64_t v166 = v70;
  unint64_t v167 = v71;
  uint64_t v168 = (char *)v67;
  uint64_t v169 = v68;
  swift_getOpaqueTypeConformance2();
  unint64_t v75 = sub_24FAEA094();
  uint64_t v166 = v149;
  unint64_t v167 = v71;
  uint64_t v168 = (char *)v75;
  uint64_t v169 = v68;
  swift_getOpaqueTypeConformance2();
  sub_24FB476C8();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
LABEL_10:
  uint64_t v106 = v162;
  uint64_t v107 = *(void *)(v162 + 56);
  uint64_t v108 = (uint64_t)v152;
  if (v107)
  {
    uint64_t v109 = *(void *)(v162 + 48);
    char v110 = v165;
    uint64_t v111 = v162 + v165[14];
    char v112 = *(unsigned char *)v111;
    unint64_t v113 = *(void *)(v111 + 8);
    LOBYTE(v170) = v112;
    unint64_t v171 = v113;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
    sub_24FB47D18();
    uint64_t v114 = v166;
    unint64_t v115 = v167;
    char v116 = (char)v168;
    uint64_t v117 = (uint64_t *)(v106 + v110[16]);
    uint64_t v119 = *v117;
    uint64_t v118 = v117[1];
    uint64_t v120 = type metadata accessor for RemoveAttachmentButton(0);
    swift_bridgeObjectRetain();
    _s21GenerativeAssistantUI0A13TAHandoffViewVACycfC_0();
    *(void *)uint64_t v108 = v109;
    *(void *)(v108 + 8) = v107;
    *(void *)(v108 + 16) = v114;
    *(void *)(v108 + 24) = v115;
    *(unsigned char *)(v108 + 32) = v116;
    *(void *)(v108 + 40) = v119;
    *(void *)(v108 + 48) = v118;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v108, 0, 1, v120);
  }
  else
  {
    uint64_t v121 = type metadata accessor for RemoveAttachmentButton(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v108, 1, 1, v121);
  }
  uint64_t v122 = v163;
  uint64_t v123 = (uint64_t)v158;
  sub_24FAD5834(v163, (uint64_t)v158, &qword_269A4EBE8);
  uint64_t v124 = v161;
  uint64_t v125 = v151;
  sub_24FAD5834(v161, v151, &qword_269A4EBD8);
  uint64_t v126 = v154;
  sub_24FAD5834(v108, v154, &qword_269A4EBA8);
  uint64_t v127 = v153;
  sub_24FAD5834(v123, v153, &qword_269A4EBE8);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EC18);
  sub_24FAD5834(v125, v127 + *(int *)(v128 + 48), &qword_269A4EBD8);
  sub_24FAD5834(v126, v127 + *(int *)(v128 + 64), &qword_269A4EBA8);
  sub_24FAD5794(v108, &qword_269A4EBA8);
  sub_24FAD5794(v124, &qword_269A4EBD8);
  sub_24FAD5794(v122, &qword_269A4EBE8);
  sub_24FAD5794(v126, &qword_269A4EBA8);
  sub_24FAD5794(v125, &qword_269A4EBD8);
  return sub_24FAD5794(v123, &qword_269A4EBE8);
}

uint64_t sub_24FADFAFC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AttachmentConfirmationView(0) + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
  uint64_t result = sub_24FB47CF8();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v3 = *(void *)(v1 + 16);
  if (v15 >= v3)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v4 = v1 + 40 * v15;
  unint64_t v5 = *(void *)(v4 + 48);
  if (v5 >> 60 == 15)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = (unint64_t *)(v1 + 48);
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      unint64_t v9 = *v6;
      if (*v6 >> 60 != 15)
      {
        uint64_t v10 = *(v6 - 1);
        sub_24FAE9930(v10, *v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_24FAD4B3C(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_24FAD4B3C((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        v7[2] = v12 + 1;
        uint64_t v8 = &v7[2 * v12];
        v8[4] = v10;
        v8[5] = v9;
      }
      v6 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
    if (v7[2])
    {
      uint64_t v13 = v7[4];
      unint64_t v5 = v7[5];
      sub_24FAE9930(v13, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      unint64_t v5 = 0xF000000000000000;
    }
  }
  else
  {
    uint64_t v13 = *(void *)(v4 + 40);
    sub_24FAE9930(v13, v5);
  }
  sub_24FAD59E4(0, &qword_269A4EC20);
  uint64_t v14 = sub_24FB48368();
  sub_24FAE9988(v13, v5);
  return v14;
}

uint64_t sub_24FADFCE0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EA98);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6B0);
  MEMORY[0x270FA5388](v9);
  unint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24FB47358();
  unint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v39 = v3;
  uint64_t v40 = v9;
  if ((a1 & 1) == 0)
  {
    char v28 = sub_24FADCD78();
    uint64_t v29 = (void (*)(char *, void, uint64_t))v12[13];
    v29(v17, *MEMORY[0x263F18D48], v11);
    if (v28)
    {
      v29(v15, *MEMORY[0x263F18D70], v11);
      sub_24FAE8F8C(&qword_269A4EAA0, MEMORY[0x263F18D80]);
      if (sub_24FB48008()) {
        goto LABEL_8;
      }
      __break(1u);
    }
    v29(v15, *MEMORY[0x263F18CF8], v11);
    sub_24FAE8F8C(&qword_269A4EAA0, MEMORY[0x263F18D80]);
    uint64_t result = sub_24FB48008();
    if ((result & 1) == 0) {
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v30 = &v8[*(int *)(v3 + 48)];
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v12[4];
    v31(v8, v17, v11);
    uint64_t v32 = v30;
    uint64_t v38 = v30;
    v31(v30, v15, v11);
    uint64_t v33 = &v6[*(int *)(v3 + 48)];
    uint64_t v34 = (void (*)(char *, char *, uint64_t))v12[2];
    v34(v6, v8, v11);
    v34(v33, v32, v11);
    uint64_t v25 = (uint64_t)v41;
    v31(v41, v6, v11);
    uint64_t v35 = (void (*)(char *, uint64_t))v12[1];
    v35(v33, v11);
    uint64_t v36 = &v6[*(int *)(v39 + 48)];
    v31(v6, v8, v11);
    v31(v36, v38, v11);
    v31((char *)(v25 + *(int *)(v40 + 36)), v36, v11);
    v35(v6, v11);
    return sub_24FAD5730(v25, v42, &qword_269A4E6B0);
  }
  uint64_t v18 = (void (*)(char *, void, uint64_t))v12[13];
  v18((char *)&v37 - v16, *MEMORY[0x263F18D48], v11);
  v18(v15, *MEMORY[0x263F18D70], v11);
  sub_24FAE8F8C(&qword_269A4EAA0, MEMORY[0x263F18D80]);
  uint64_t result = sub_24FB48008();
  if (result)
  {
    uint64_t v20 = v3;
    uint64_t v21 = &v8[*(int *)(v3 + 48)];
    uint64_t v22 = (void (*)(char *, char *, uint64_t))v12[4];
    v22(v8, v17, v11);
    uint64_t v38 = v21;
    v22(v21, v15, v11);
    uint64_t v23 = &v6[*(int *)(v20 + 48)];
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v12[2];
    v24(v6, v8, v11);
    v24(v23, v21, v11);
    uint64_t v25 = (uint64_t)v41;
    v22(v41, v6, v11);
    uint64_t v26 = (void (*)(char *, uint64_t))v12[1];
    v26(v23, v11);
    uint64_t v27 = &v6[*(int *)(v39 + 48)];
    v22(v6, v8, v11);
    v22(v27, v38, v11);
    v22((char *)(v25 + *(int *)(v40 + 36)), v27, v11);
    v26(v6, v11);
    return sub_24FAD5730(v25, v42, &qword_269A4E6B0);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24FAE02B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for AttachmentConfirmationView(0) + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
  uint64_t result = sub_24FB47CF8();
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 >= *(void *)(v3 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (*(void *)(v3 + 40 * v6 + 56))
  {
    swift_retain();
    sub_24FB46FD8();
    return swift_release();
  }
  else
  {
    uint64_t v5 = sub_24FB46F68();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

void sub_24FAE03A4()
{
  if ((sub_24FADCD78() & 1) == 0) {
    sub_24FADCEB0();
  }
}

uint64_t sub_24FAE0408(uint64_t a1)
{
  uint64_t v2 = sub_24FB47068();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v9 = sub_24FB47038();
    MEMORY[0x270FA5388](v9);
    v10[-4] = a1;
    v10[-3] = v6;
    v10[-2] = v8;
    v10[-1] = v7;
    v10[1] = sub_24FB471F8();
    sub_24FB471E8();
    swift_retain();
    sub_24FB47378();
    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = (int *)type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[9];
  uint64_t v7 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + v3 + v1[10];
  uint64_t v9 = sub_24FB46F88();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v5 + v1[11];
  uint64_t v12 = sub_24FB46F68();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24FAE0810()
{
  return sub_24FAE91DC(type metadata accessor for AttachmentConfirmationView, sub_24FAE0408);
}

uint64_t sub_24FAE083C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (int *)type metadata accessor for AttachmentConfirmationView(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = sub_24FB47048();
  uint64_t v11 = a1 + v7[14];
  char v12 = *(unsigned char *)v11;
  uint64_t v13 = *(void *)(v11 + 8);
  LOBYTE(v21) = v12;
  *((void *)&v21 + 1) = v13;
  LOBYTE(v22) = (v10 & 1) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47D08();
  char v14 = sub_24FB47058();
  sub_24FAE8FD4(a1, (uint64_t)v9, type metadata accessor for AttachmentConfirmationView);
  if ((v14 & 1) == 0)
  {
    sub_24FAE9C4C((uint64_t)v9, type metadata accessor for AttachmentConfirmationView);
    goto LABEL_5;
  }
  unint64_t v15 = *(void *)(*(void *)&v9[v7[12]] + 16);
  sub_24FAE9C4C((uint64_t)v9, type metadata accessor for AttachmentConfirmationView);
  if (v15 <= 1)
  {
LABEL_5:
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  uint64_t v16 = 1;
LABEL_6:
  long long v21 = *(_OWORD *)(a1 + v7[13]);
  uint64_t v22 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E6E0);
  uint64_t result = sub_24FB47D08();
  if (qword_269A4E6A8)
  {
    if (qword_269A4E6A0 == a3 && qword_269A4E6A8 == a4 || (uint64_t result = sub_24FB48688(), (result & 1) != 0))
    {
      uint64_t v18 = a1 + v7[15];
      char v19 = *(unsigned char *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      LOBYTE(v21) = v19;
      *((void *)&v21 + 1) = v20;
      LOBYTE(v22) = 1;
      return sub_24FB47D08();
    }
  }
  return result;
}

void *sub_24FAE0A48(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x25336F1B0](v1);
  if (result)
  {
    uint64_t v3 = result;
    if (objc_msgSend(result, sel_respondsToSelector_, sel_informHostOfViewResize_)) {
      objc_msgSend(v3, sel_informHostOfViewResize_, 0.0, 0.0);
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24FAE0AC8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t AttachmentConfirmationView.init(payload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v5 = v4[13];
  sub_24FB47CE8();
  *(_OWORD *)(a2 + v5) = v22;
  uint64_t v6 = a2 + v4[14];
  sub_24FB47CE8();
  *(unsigned char *)uint64_t v6 = v22;
  *(void *)(v6 + 8) = *((void *)&v22 + 1);
  uint64_t v7 = a2 + v4[15];
  sub_24FB47CE8();
  *(unsigned char *)uint64_t v7 = v22;
  *(void *)(v7 + 8) = *((void *)&v22 + 1);
  uint64_t v8 = (uint64_t *)(a2 + v4[17]);
  sub_24FB47FA8();
  sub_24FAE8F8C(&qword_269A4E718, MEMORY[0x263F77980]);
  *uint64_t v8 = sub_24FB473D8();
  v8[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 40);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(void *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 72);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(void *)(a2 + 72) = v12;
  uint64_t v13 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v14 = a1 + v13[9];
  uint64_t v15 = a2 + v4[9];
  uint64_t v16 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v14, v16);
  sub_24FAD5730(a1 + v13[10], a2 + v4[10], &qword_269A4E720);
  uint64_t result = sub_24FAD5730(a1 + v13[11], a2 + v4[11], &qword_269A4E528);
  *(void *)(a2 + v4[12]) = *(void *)(a1 + v13[12]);
  uint64_t v18 = (uint64_t *)(a1 + v13[13]);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  long long v21 = (void *)(a2 + v4[16]);
  *long long v21 = v20;
  v21[1] = v19;
  return result;
}

uint64_t sub_24FAE0D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9C0);
  MEMORY[0x270FA5388](v46);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9C8);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9D0);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24FB47388();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (_OWORD *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24FB47C98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9D8);
  uint64_t v15 = MEMORY[0x270FA5388](v42);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  if (*v2)
  {
    id v40 = *v2;
    sub_24FB47C68();
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1B4B8], v11);
    uint64_t v20 = sub_24FB47CC8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_24FB47E38();
    sub_24FB47238();
    uint64_t v21 = v47;
    char v22 = v48;
    uint64_t v23 = v49;
    int v39 = v50;
    uint64_t v37 = v52;
    uint64_t v38 = v51;
    uint64_t v24 = (char *)v10 + *(int *)(v8 + 20);
    uint64_t v25 = *MEMORY[0x263F19860];
    uint64_t v26 = sub_24FB475C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
    __asm { FMOV            V0.2D, #10.0 }
    *uint64_t v10 = _Q0;
    sub_24FAE8FD4((uint64_t)v10, (uint64_t)v7, MEMORY[0x263F19048]);
    uint64_t v32 = v42;
    *(_WORD *)&v7[*(int *)(v41 + 36)] = 256;
    sub_24FAD5834((uint64_t)v7, (uint64_t)&v17[*(int *)(v32 + 36)], &qword_269A4E9D0);
    *(void *)uint64_t v17 = v20;
    *((void *)v17 + 1) = 0;
    *((_WORD *)v17 + 8) = 257;
    *((void *)v17 + 3) = v21;
    v17[32] = v22;
    *((void *)v17 + 5) = v23;
    v17[48] = v39;
    uint64_t v33 = v37;
    *((void *)v17 + 7) = v38;
    *((void *)v17 + 8) = v33;
    swift_retain();
    sub_24FAD5794((uint64_t)v7, &qword_269A4E9D0);
    sub_24FAE9C4C((uint64_t)v10, MEMORY[0x263F19048]);
    swift_release();
    uint64_t v34 = &qword_269A4E9D8;
    sub_24FAD5730((uint64_t)v17, (uint64_t)v19, &qword_269A4E9D8);
    sub_24FAD5834((uint64_t)v19, v44, &qword_269A4E9D8);
    swift_storeEnumTagMultiPayload();
    sub_24FAE99F4();
    sub_24FAE9B10();
    sub_24FB476C8();

    uint64_t v35 = (uint64_t)v19;
  }
  else
  {
    type metadata accessor for ThumbnailView(0);
    sub_24FADAB8C((uint64_t)v4);
    uint64_t v34 = &qword_269A4E9C0;
    sub_24FAD5834((uint64_t)v4, v44, &qword_269A4E9C0);
    swift_storeEnumTagMultiPayload();
    sub_24FAE99F4();
    sub_24FAE9B10();
    sub_24FB476C8();
    uint64_t v35 = (uint64_t)v4;
  }
  return sub_24FAD5794(v35, v34);
}

uint64_t sub_24FAE1244@<X0>(uint64_t a1@<X8>)
{
  sub_24FB47598();
  LOWORD(v25) = 256;
  uint64_t v2 = sub_24FB479F8();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_24FB478C8();
  uint64_t v7 = sub_24FB47988();
  uint64_t v27 = v8;
  uint64_t v28 = v7;
  uint64_t v29 = v9;
  char v26 = v10 & 1;
  sub_24FADAA34(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_24FAE145C();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  id v16 = objc_msgSend(self, sel_systemGrayColor, 0, v25);
  MEMORY[0x25336DFD0](v16);
  uint64_t v17 = sub_24FB47998();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  swift_release();
  v21 &= 1u;
  sub_24FADAA34(v11, v13, v15);
  swift_bridgeObjectRelease();
  *(void *)a1 = v28;
  *(void *)(a1 + 8) = v27;
  *(unsigned char *)(a1 + 16) = v26;
  *(void *)(a1 + 24) = v29;
  *(void *)(a1 + 32) = v17;
  *(void *)(a1 + 40) = v19;
  *(unsigned char *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v23;
  sub_24FAE9618(v28, v27, v26);
  swift_bridgeObjectRetain();
  sub_24FAE9618(v17, v19, v21);
  swift_bridgeObjectRetain();
  sub_24FADAA34(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v28, v27, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAE145C()
{
  char v1 = *v0;
  uint64_t v3 = sub_24FAE15E4();
  uint64_t v5 = v4;
  if ((v1 & 1) == 0)
  {
    char v18 = v2 & 1;
    sub_24FB47598();
    uint64_t v6 = sub_24FB479F8();
    uint64_t v8 = v7;
    char v10 = v9 & 1;
    sub_24FB47888();
    uint64_t v11 = sub_24FB479C8();
    uint64_t v13 = v12;
    char v15 = v14;
    swift_release();
    sub_24FADAA34(v6, v8, v10);
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_24FB479B8();
    sub_24FADAA34(v11, v13, v15 & 1);
    swift_bridgeObjectRelease();
    sub_24FADAA34(v3, v5, v18);
    swift_bridgeObjectRelease();
    return v17;
  }
  return v3;
}

uint64_t sub_24FAE15E4()
{
  if (*(unsigned char *)(v0 + 8))
  {
    sub_24FB47598();
    return sub_24FB479F8();
  }
  else
  {
    sub_24FADC650(*(float *)(v0 + 4));
    sub_24FADA9E0();
    uint64_t v2 = sub_24FB47A18();
    uint64_t v4 = v3;
    char v6 = v5 & 1;
    sub_24FB47888();
    uint64_t v1 = sub_24FB479C8();
    swift_release();
    sub_24FADAA34(v2, v4, v6);
    swift_bridgeObjectRelease();
  }
  return v1;
}

__n128 sub_24FAE1704@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24FB475F8();
  sub_24FAE1244((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  __n128 result = v9;
  long long v8 = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_24FAE1784@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E920);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v56 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (uint64_t)&v49 - v6;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E928);
  uint64_t v52 = *(void *)(v55 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v49 - v9;
  uint64_t v11 = a1[8];
  uint64_t v59 = a1[7];
  uint64_t v60 = v11;
  sub_24FADA9E0();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24FB47A18();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = v12;
  uint64_t v60 = v14;
  char v61 = v18;
  uint64_t v62 = v16;
  uint64_t v63 = KeyPath;
  uint64_t v64 = 1;
  char v65 = 0;
  sub_24FB478C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E938);
  sub_24FAE9578();
  uint64_t v57 = v10;
  sub_24FB47A98();
  sub_24FADAA34(v12, v14, v18);
  swift_release();
  uint64_t v20 = swift_bridgeObjectRelease();
  if (*(void *)(a1[2] + 16) < 2uLL)
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E958);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v58, 1, 1, v24);
  }
  else
  {
    uint64_t v21 = MEMORY[0x270FA5388](v20);
    *(&v49 - 2) = (uint64_t)a1;
    MEMORY[0x270FA5388](v21);
    *(&v49 - 2) = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E968);
    sub_24FAE9638();
    sub_24FAE97D0();
    uint64_t v22 = v58;
    sub_24FB47968();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E958);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  uint64_t v25 = sub_24FAE23A8();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  id v30 = objc_msgSend(self, sel_systemGrayColor);
  MEMORY[0x25336DFD0](v30);
  uint64_t v31 = sub_24FB47998();
  uint64_t v49 = v32;
  uint64_t v50 = v31;
  char v34 = v33;
  uint64_t v51 = v35;
  swift_release();
  v34 &= 1u;
  sub_24FADAA34(v25, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t v37 = v52;
  uint64_t v36 = v53;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v39 = v55;
  v38(v53, v57, v55);
  uint64_t v40 = v58;
  uint64_t v41 = v56;
  sub_24FAD5834(v58, v56, &qword_269A4E920);
  uint64_t v42 = v54;
  v38(v54, v36, v39);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E960);
  sub_24FAD5834(v41, (uint64_t)&v42[*(int *)(v43 + 48)], &qword_269A4E920);
  uint64_t v44 = &v42[*(int *)(v43 + 64)];
  uint64_t v46 = v49;
  uint64_t v45 = v50;
  *(void *)uint64_t v44 = v50;
  *((void *)v44 + 1) = v46;
  v44[16] = v34;
  *((void *)v44 + 3) = v51;
  sub_24FAE9618(v45, v46, v34);
  swift_bridgeObjectRetain();
  sub_24FAD5794(v40, &qword_269A4E920);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v37 + 8);
  v47(v57, v39);
  sub_24FADAA34(v45, v46, v34);
  swift_bridgeObjectRelease();
  sub_24FAD5794(v41, &qword_269A4E920);
  return ((uint64_t (*)(char *, uint64_t))v47)(v36, v39);
}

__n128 sub_24FAE1C8C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9B8);
  sub_24FB47DA8();
  __n128 result = v7;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v5;
  *(__n128 *)(a2 + 24) = v7;
  *(void *)(a2 + 40) = v8;
  return result;
}

uint64_t sub_24FAE1D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  __n128 v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24FB47518();
  sub_24FAE1F90(a1, (uint64_t)v16);
  *(_OWORD *)((char *)&v18[6] + 7) = v16[6];
  *(_OWORD *)((char *)&v18[7] + 7) = v16[7];
  *(_OWORD *)((char *)&v18[8] + 7) = v16[8];
  *(_OWORD *)((char *)&v18[2] + 7) = v16[2];
  *(_OWORD *)((char *)&v18[3] + 7) = v16[3];
  *(_OWORD *)((char *)&v18[4] + 7) = v16[4];
  *(_OWORD *)((char *)&v18[5] + 7) = v16[5];
  *(_OWORD *)((char *)v18 + 7) = v16[0];
  char v19 = 0;
  *(void *)((char *)&v18[9] + 7) = v17;
  *(_OWORD *)((char *)&v18[1] + 7) = v16[1];
  uint64_t v9 = sub_24FB47888();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v20 = v8;
  *((void *)&v20 + 1) = 0x4022000000000000;
  LOBYTE(v21[0]) = 0;
  *(_OWORD *)((char *)&v21[7] + 1) = v18[7];
  *(_OWORD *)((char *)&v21[6] + 1) = v18[6];
  *(_OWORD *)((char *)&v21[8] + 1) = v18[8];
  v21[9] = *(_OWORD *)((char *)&v18[8] + 15);
  *(_OWORD *)((char *)&v21[2] + 1) = v18[2];
  *(_OWORD *)((char *)&v21[3] + 1) = v18[3];
  *(_OWORD *)((char *)&v21[4] + 1) = v18[4];
  *(_OWORD *)((char *)&v21[5] + 1) = v18[5];
  *(_OWORD *)((char *)v21 + 1) = v18[0];
  *(_OWORD *)((char *)&v21[1] + 1) = v18[1];
  *(void *)&long long v22 = KeyPath;
  *((void *)&v22 + 1) = v9;
  v15[8] = v21[7];
  v15[9] = v21[8];
  v15[10] = *(_OWORD *)((char *)&v18[8] + 15);
  v15[11] = v22;
  v15[4] = v21[3];
  v15[5] = v21[4];
  v15[6] = v21[5];
  v15[7] = v21[6];
  v15[0] = v20;
  v15[1] = v21[0];
  v15[2] = v21[1];
  v15[3] = v21[2];
  sub_24FB478D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E978);
  sub_24FAE970C();
  sub_24FB47A98();
  sub_24FAE9824((uint64_t)&v20);
  uint64_t v11 = sub_24FB47BC8();
  uint64_t v12 = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  uint64_t v13 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4E968) + 36));
  *uint64_t v13 = v12;
  v13[1] = v11;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_24FAE1F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24FB47C98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  __n128 v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v56 = *(_OWORD *)(a1 + 24);
  uint64_t v57 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9B8);
  __n128 result = MEMORY[0x25336E100](&v58, v10);
  if ((v58 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v58 < *(void *)(v8 + 16))
  {
    uint64_t v47 = v7;
    uint64_t v12 = v8 + 40 * v58;
    uint64_t v13 = *(void *)(v12 + 40);
    unint64_t v14 = *(void *)(v12 + 48);
    sub_24FAE991C(v13, v14);
    swift_retain();
    sub_24FB47598();
    uint64_t v15 = sub_24FB479F8();
    uint64_t v45 = v16;
    uint64_t v46 = v15;
    uint64_t v44 = v17;
    char v19 = v18;
    sub_24FAE9988(v13, v14);
    swift_release();
    LOBYTE(v13) = v19 & 1;
    sub_24FB47598();
    uint64_t v20 = sub_24FB479F8();
    uint64_t v22 = v21;
    uint64_t v41 = v23;
    char v25 = v24 & 1;
    uint64_t v26 = sub_24FB47E58();
    uint64_t v42 = v27;
    uint64_t v43 = v26;
    sub_24FB47C78();
    char v28 = v47;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v47, *MEMORY[0x263F1B4B8], v4);
    uint64_t v29 = sub_24FB47CC8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
    LODWORD(v47) = sub_24FB47868();
    sub_24FB47178();
    char v48 = v13;
    char v55 = v13;
    char v54 = v25;
    char v53 = 0;
    char v50 = 0;
    *(_DWORD *)(a2 + 17) = v56;
    *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v56 + 3);
    *(_DWORD *)(a2 + 49) = v58;
    *(_DWORD *)(a2 + 52) = *(_DWORD *)((char *)&v58 + 3);
    int v30 = *(_DWORD *)&v51[7];
    *(_WORD *)(a2 + 86) = v52;
    *(_DWORD *)(a2 + 82) = v30;
    int v31 = *(_DWORD *)v51;
    *(_DWORD *)(a2 + 92) = *(_DWORD *)&v51[3];
    *(_DWORD *)(a2 + 89) = v31;
    int v32 = *(_DWORD *)v49;
    *(_DWORD *)(a2 + 132) = *(_DWORD *)&v49[3];
    *(_DWORD *)(a2 + 129) = v32;
    uint64_t v34 = v45;
    uint64_t v33 = v46;
    uint64_t v35 = v44;
    *(void *)a2 = v46;
    *(void *)(a2 + 8) = v35;
    *(unsigned char *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v34;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v22;
    *(unsigned char *)(a2 + 48) = v25;
    *(void *)(a2 + 56) = v41;
    *(void *)(a2 + 64) = v29;
    *(void *)(a2 + 72) = 0x3FE999999999999ALL;
    *(_WORD *)(a2 + 80) = 256;
    *(unsigned char *)(a2 + 88) = (_BYTE)v47;
    *(void *)(a2 + 96) = v36;
    *(void *)(a2 + 104) = v37;
    *(void *)(a2 + 112) = v38;
    *(void *)(a2 + 120) = v39;
    *(unsigned char *)(a2 + 128) = 0;
    uint64_t v40 = v42;
    *(void *)(a2 + 136) = v43;
    *(void *)(a2 + 144) = v40;
    sub_24FAE9618(v33, v35, v13);
    swift_bridgeObjectRetain();
    sub_24FAE9618(v20, v22, v25);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24FADAA34(v20, v22, v25);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24FADAA34(v33, v35, v48);
    return (void *)swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24FAE23A8()
{
  if (*(unsigned char *)(v0 + 52))
  {
    sub_24FB47598();
    return sub_24FB479F8();
  }
  else
  {
    sub_24FADC650(*(float *)(v0 + 48));
    sub_24FADA9E0();
    uint64_t v2 = sub_24FB47A18();
    uint64_t v4 = v3;
    char v6 = v5 & 1;
    sub_24FB47888();
    uint64_t v1 = sub_24FB479C8();
    swift_release();
    sub_24FADAA34(v2, v4, v6);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_24FAE24C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_24FB475F8();
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E918);
  return sub_24FAE1784(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_24FAE2514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EC58);
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EC60);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB47598();
  v20[1] = v10;
  v20[2] = v9;
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v21 = *(void *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v33 = v11;
  uint64_t v28 = v11;
  uint64_t v29 = v21;
  uint64_t v30 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9B8);
  sub_24FB47DA8();
  uint64_t v26 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EC68);
  sub_24FAEA648();
  sub_24FB47D48();
  uint64_t v14 = sub_24FAD57F0(&qword_269A4EC78, &qword_269A4EC58);
  uint64_t v15 = v22;
  sub_24FB47AE8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  v31[0] = v11;
  v31[1] = v21;
  v31[2] = v12;
  MEMORY[0x25336E100](&v27, v13);
  sub_24FAD5730(v1, (uint64_t)v31, &qword_269A4EC80);
  uint64_t v32 = *(void *)(v1 + 16);
  uint64_t v16 = (_OWORD *)swift_allocObject();
  long long v17 = *(_OWORD *)(v1 + 16);
  v16[1] = *(_OWORD *)v1;
  v16[2] = v17;
  v16[3] = *(_OWORD *)(v1 + 32);
  sub_24FAEA6C0((uint64_t)v31);
  sub_24FAEA6EC((uint64_t)&v32);
  sub_24FAEA718((uint64_t)&v33);
  swift_retain();
  uint64_t v28 = v15;
  uint64_t v29 = v14;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v23;
  sub_24FB47B78();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v18);
}

uint64_t sub_24FAE2894(uint64_t a1)
{
  uint64_t v7 = *(void *)(a1 + 16);
  swift_getKeyPath();
  sub_24FAD5730(a1, (uint64_t)v6, &qword_269A4EC80);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v3;
  v2[3] = *(_OWORD *)(a1 + 32);
  sub_24FAEA6C0((uint64_t)v6);
  sub_24FAEA6EC((uint64_t)&v7);
  sub_24FAEA718((uint64_t)&v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EC88);
  sub_24FAEA7A0();
  return sub_24FB47DE8();
}

unint64_t *sub_24FAE29B4@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (v4 < *(void *)(v5 + 16))
    {
      uint64_t v6 = v5 + 40 * v4;
      uint64_t v7 = *(void *)(v6 + 40);
      unint64_t v8 = *(void *)(v6 + 48);
      sub_24FAE991C(v7, v8);
      swift_retain();
      sub_24FB47598();
      uint64_t v9 = sub_24FB479F8();
      uint64_t v11 = v10;
      char v13 = v12;
      uint64_t v15 = v14;
      sub_24FAE9988(v7, v8);
      __n128 result = (unint64_t *)swift_release();
      *(void *)a3 = v9;
      *(void *)(a3 + 8) = v11;
      *(unsigned char *)(a3 + 16) = v13 & 1;
      *(void *)(a3 + 24) = v15;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24FAE2AFC(uint64_t a1)
{
  sub_24FAD5730(a1, (uint64_t)v4, &qword_269A4EC80);
  uint64_t result = sub_24FAD5730((uint64_t)v4, (uint64_t)v5, &qword_269A4EC80);
  if (v5[1])
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E9B8);
    MEMORY[0x25336E100](&v3, v2);
    return sub_24FB47078();
  }
  return result;
}

uint64_t sub_24FAE2B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAE2514(a1);
}

uint64_t sub_24FAE2BD8(uint64_t a1)
{
  uint64_t v2 = sub_24FB47F88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoveAttachmentButton(0);
  sub_24FB47F38();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E910);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24FB49BA0;
  v11[1] = 0x7972657571;
  v11[2] = 0xE500000000000000;
  uint64_t v7 = MEMORY[0x263F8D310];
  sub_24FB483F8();
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v8;
  swift_bridgeObjectRetain();
  sub_24FAF16F4(inited);
  sub_24FB47F78();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24FAE2D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_24FB47C98();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E908);
  uint64_t v5 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E890);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB47C78();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F1B4B8], v1);
  uint64_t v12 = sub_24FB47CC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  LOBYTE(v1) = sub_24FB47808();
  sub_24FB47178();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  LODWORD(v4) = sub_24FB47738();
  uint64_t v21 = sub_24FB47888();
  uint64_t KeyPath = swift_getKeyPath();
  long long v44 = (unint64_t)v12;
  LOWORD(v45) = 257;
  BYTE8(v45) = v1;
  *(void *)&long long v46 = v14;
  *((void *)&v46 + 1) = v16;
  uint64_t v47 = v18;
  uint64_t v48 = v20;
  char v49 = 0;
  int v50 = (int)v4;
  uint64_t v51 = KeyPath;
  uint64_t v52 = v21;
  sub_24FB478C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E898);
  sub_24FAE93A8();
  sub_24FB47A98();
  swift_release();
  swift_release();
  swift_release();
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v23 = v42;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v42);
  uint64_t v24 = &v11[*(int *)(v9 + 44)];
  long long v25 = v45;
  *(_OWORD *)uint64_t v24 = v44;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v46;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  uint64_t v26 = sub_24FB47BF8();
  LODWORD(v1) = sub_24FB47728();
  sub_24FB471D8();
  uint64_t v27 = v53;
  uint64_t v28 = v55;
  uint64_t v29 = v56;
  uint64_t v30 = v57;
  uint64_t v31 = sub_24FB47E58();
  uint64_t v33 = v32;
  uint64_t v34 = sub_24FB47E58();
  uint64_t v36 = v35;
  uint64_t v37 = v43;
  sub_24FAD5834((uint64_t)v11, v43, &qword_269A4E890);
  uint64_t v38 = v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4E878) + 36);
  uint64_t v39 = v54;
  *(void *)uint64_t v38 = v27;
  *(void *)(v38 + 8) = v39;
  *(void *)(v38 + 16) = v28;
  *(void *)(v38 + 24) = v29;
  *(void *)(v38 + 32) = v30;
  *(_DWORD *)(v38 + 40) = v1;
  *(_WORD *)(v38 + 44) = 256;
  *(void *)(v38 + 48) = v26;
  *(_WORD *)(v38 + 56) = 256;
  *(void *)(v38 + 64) = v31;
  *(void *)(v38 + 72) = v33;
  *(void *)(v38 + 80) = v34;
  *(void *)(v38 + 88) = v36;
  return sub_24FAD5794((uint64_t)v11, &qword_269A4E890);
}

uint64_t sub_24FAE3170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  v18[1] = a2;
  uint64_t v5 = sub_24FB476E8();
  v18[0] = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E870);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FAE8FD4(v4, (uint64_t)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RemoveAttachmentButton);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  sub_24FAE9148((uint64_t)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for RemoveAttachmentButton);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E878);
  sub_24FAE9258();
  sub_24FB47D28();
  sub_24FB476D8();
  sub_24FAD57F0(&qword_269A4E8F8, &qword_269A4E870);
  sub_24FAE8F8C(&qword_269A4E900, MEMORY[0x263F19CE8]);
  sub_24FB47AA8();
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_24FAE3494()
{
  uint64_t v0 = sub_24FB470E8();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16098]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E858);
  sub_24FB477D8();
  objc_msgSend(v3, sel_setDataSource_, v9[1]);
  swift_release();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v4, sel_clearColor);
  objc_msgSend(v3, sel_setFullscreenBackgroundColor_, v6);

  id v7 = v3;
  MEMORY[0x25336E690]();
  sub_24FB470D8();
  MEMORY[0x25336E6A0](v2);

  return v7;
}

id sub_24FAE3618(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v18 = a1;
  uint64_t v5 = sub_24FB46F68();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v16 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E858);
  v16[1] = a2;
  sub_24FB477D8();
  uint64_t v12 = v19
      + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_fileURL;
  swift_beginAccess();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, v12, v5);
  swift_release();
  uint64_t v17 = v3;
  v13(v9, v3, v5);
  sub_24FAE8F8C(&qword_269A4E860, MEMORY[0x263F06EA8]);
  LOBYTE(a2) = sub_24FB48018();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  id result = (id)((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((a2 & 1) == 0)
  {
    sub_24FB477D8();
    v13(v11, v17, v5);
    sub_24FAE3850(v11);
    swift_release();
    return objc_msgSend(v18, sel_reloadData);
  }
  return result;
}

uint64_t sub_24FAE3850(char *a1)
{
  uint64_t v3 = sub_24FB46F68();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_fileURL;
  swift_beginAccess();
  uint64_t v11 = (void (*)(char *, uint64_t, uint64_t))v4[2];
  v11(v9, v10, v3);
  swift_beginAccess();
  uint64_t v12 = (void (*)(uint64_t, char *, uint64_t))v4[3];
  uint64_t v19 = a1;
  v12(v10, a1, v3);
  swift_endAccess();
  uint64_t v13 = OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_isAccessing;
  uint64_t v14 = v1;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_isAccessing) == 1)
    sub_24FB46F38();
  v11(v7, v10, v3);
  char v15 = sub_24FB46F48();
  uint64_t v16 = (void (*)(char *, uint64_t))v4[1];
  v16(v7, v3);
  *(unsigned char *)(v14 + v13) = v15 & 1;
  v16(v19, v3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v9, v3);
}

uint64_t sub_24FAE3A3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24FB46F68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_isAccessing) & 1) != 0)
  {
    uint64_t v6 = v1
       + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_fileURL;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    sub_24FB46F38();
    uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
    v7(v5, v2);
  }
  else
  {
    uint64_t v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  }
  v7((char *)(v1+ OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_fileURL), v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24FAE3D1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_24FB46F68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, v1, v3);
  type metadata accessor for QuickLookPreview.Coordinator(0);
  uint64_t v8 = swift_allocObject();
  v7((char *)(v8+ OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_fileURL), (uint64_t)v6, v3);
  char v9 = sub_24FB46F48();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(unsigned char *)(v8
           + OBJC_IVAR____TtCV21GenerativeAssistantUIP33_E13B720E09BAE9A3AC6F33E81C90395E16QuickLookPreview11Coordinator_isAccessing) = v9 & 1;
  *a1 = v8;
  return result;
}

uint64_t sub_24FAE3E60()
{
  return sub_24FB47778();
}

uint64_t sub_24FAE3E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FAE8F8C(&qword_269A4E868, (void (*)(uint64_t))type metadata accessor for QuickLookPreview);
  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_24FAE3F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FAE8F8C(&qword_269A4E868, (void (*)(uint64_t))type metadata accessor for QuickLookPreview);
  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_24FAE3FC4()
{
}

uint64_t sub_24FAE401C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47428();
  *a1 = result;
  return result;
}

uint64_t sub_24FAE4048()
{
  return sub_24FB47438();
}

uint64_t sub_24FAE4074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47448();
  *a1 = result;
  return result;
}

uint64_t sub_24FAE40A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47448();
  *a1 = result;
  return result;
}

uint64_t sub_24FAE40CC()
{
  return sub_24FB47458();
}

uint64_t sub_24FAE40F8()
{
  return sub_24FB47458();
}

unint64_t sub_24FAE4124()
{
  unint64_t result = qword_269A4E6F0;
  if (!qword_269A4E6F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E6D0);
    sub_24FAE41C4();
    sub_24FAD57F0(&qword_269A4E700, &qword_269A4E708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E6F0);
  }
  return result;
}

unint64_t sub_24FAE41C4()
{
  unint64_t result = qword_269A4E6F8;
  if (!qword_269A4E6F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E6C8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E6B8);
    sub_24FAD57F0(&qword_269A4E6E8, &qword_269A4E6B8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E6F8);
  }
  return result;
}

uint64_t sub_24FAE42B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AttachmentConfirmationView(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    uint64_t v12 = a3[9];
    char v49 = (char *)a2 + v12;
    int v50 = (char *)a1 + v12;
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v13 = sub_24FB47028();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v50, v49, v13);
    uint64_t v14 = a3[10];
    char v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_24FB46F88();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[11];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_24FB46F68();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = a3[13];
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[14];
    uint64_t v32 = a3[15];
    uint64_t v33 = (char *)v4 + v31;
    uint64_t v34 = (char *)a2 + v31;
    *uint64_t v33 = *v34;
    *((void *)v33 + 1) = *((void *)v34 + 1);
    uint64_t v35 = (char *)v4 + v32;
    uint64_t v36 = (char *)a2 + v32;
    *uint64_t v35 = *v36;
    *((void *)v35 + 1) = *((void *)v36 + 1);
    uint64_t v37 = a3[16];
    uint64_t v38 = a3[17];
    uint64_t v39 = (uint64_t *)((char *)v4 + v37);
    uint64_t v40 = (uint64_t *)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = (uint64_t *)((char *)v4 + v38);
    uint64_t v43 = (char *)a2 + v38;
    long long v45 = *(void **)v43;
    uint64_t v44 = *((void *)v43 + 1);
    *uint64_t v42 = v45;
    v42[1] = v44;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v46 = v45;
  }
  return v4;
}

void destroy for AttachmentConfirmationView(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_24FB46F88();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_24FB46F68();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(a1 + a2[17]);
}

void *initializeWithCopy for AttachmentConfirmationView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  uint64_t v11 = a3[9];
  uint64_t v47 = (char *)a2 + v11;
  uint64_t v48 = (char *)a1 + v11;
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v12 = sub_24FB47028();
  id v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v48, v47, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (char *)a1 + v13;
  char v15 = (char *)a2 + v13;
  uint64_t v16 = sub_24FB46F88();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_24FB46F68();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[14];
  uint64_t v30 = a3[15];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *uint64_t v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = (char *)a1 + v30;
  uint64_t v34 = (char *)a2 + v30;
  *uint64_t v33 = *v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  uint64_t v35 = a3[16];
  uint64_t v36 = a3[17];
  uint64_t v37 = (void *)((char *)a1 + v35);
  uint64_t v38 = (void *)((char *)a2 + v35);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = (void *)((char *)a1 + v36);
  uint64_t v41 = (char *)a2 + v36;
  uint64_t v43 = *(void **)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v44 = v43;
  return a1;
}

void *assignWithCopy for AttachmentConfirmationView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24FB46F88();
  uint64_t v14 = *(void *)(v13 - 8);
  char v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_24FB46F68();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[13];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_retain();
  swift_release();
  uint64_t v31 = a3[14];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *uint64_t v32 = *v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_retain();
  swift_release();
  uint64_t v34 = a3[15];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *uint64_t v35 = *v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_retain();
  swift_release();
  uint64_t v37 = a3[16];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[17];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void **)((char *)a1 + v40);
  id v44 = *(void **)v42;
  *uint64_t v41 = *(void *)v42;
  id v45 = v44;

  v41[1] = *((void *)v42 + 1);
  return a1;
}

_OWORD *initializeWithTake for AttachmentConfirmationView(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_24FB46F88();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24FB46F68();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  uint64_t v25 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  uint64_t v26 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  return a1;
}

void *assignWithTake for AttachmentConfirmationView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_24FB46F88();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_24FB46F68();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_13:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_release();
  uint64_t v38 = a3[14];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  *uint64_t v39 = *v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_release();
  uint64_t v41 = a3[15];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  *uint64_t v42 = *v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_release();
  uint64_t v44 = a3[16];
  id v45 = (void *)((char *)a1 + v44);
  id v46 = (void *)((char *)a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *id v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[17];
  int v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  uint64_t v52 = *(void **)((char *)a1 + v49);
  *int v50 = *v51;

  v50[1] = v51[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE5750);
}

uint64_t sub_24FAE5750(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AttachmentConfirmationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE58E4);
}

uint64_t sub_24FAE58E4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];
  return v15(v17, a2, a2, v16);
}

void sub_24FAE5A64()
{
  sub_24FB47028();
  if (v0 <= 0x3F)
  {
    sub_24FAE5BDC(319, &qword_269A4E738, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_24FAE5BDC(319, (unint64_t *)&qword_269A4E740, MEMORY[0x263F06EA8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_24FAE5BDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24FB48388();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24FAE5C30()
{
  return type metadata accessor for QuickLookPreview.Coordinator(0);
}

uint64_t type metadata accessor for QuickLookPreview.Coordinator(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A4E7C8);
}

uint64_t sub_24FAE5C58()
{
  uint64_t result = sub_24FB46F68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24FAE5CF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAE5D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_24FAE5E00(uint64_t a1)
{
  uint64_t v2 = sub_24FB46F68();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_24FAE5E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_24FAE5EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_24FAE5F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_24FAE5F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24FAE5FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE6008);
}

uint64_t sub_24FAE6008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_24FAE6074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE6088);
}

uint64_t sub_24FAE6088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for QuickLookPreview(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4E7E0);
}

uint64_t sub_24FAE6118()
{
  uint64_t result = sub_24FB46F68();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24FAE61A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v11 = sub_24FB47F58();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_24FAE62C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24FB47F58();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_24FAE6354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v10 = sub_24FB47F58();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_24FAE6424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_24FAE6518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_24FAE65A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_24FAE6668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE667C);
}

uint64_t sub_24FAE667C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24FB47F58();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24FAE672C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE6740);
}

uint64_t sub_24FAE6740(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24FB47F58();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RemoveAttachmentButton(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A4E7F0);
}

uint64_t sub_24FAE6808()
{
  uint64_t result = sub_24FB47F58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_24FAE68AC(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
    uint64_t v10 = a2[8];
    uint64_t v11 = a3[9];
    uint64_t v28 = (uint64_t)a2 + v11;
    uint64_t v29 = a1 + v11;
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    uint64_t v12 = sub_24FB47028();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v27(v29, v28, v12);
    uint64_t v13 = a3[10];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_24FB46F88();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[11];
    int v21 = (char *)v4 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = sub_24FB46F68();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return v4;
}

uint64_t sub_24FAE6BC0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_24FB46F88();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_24FB46F68();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

uint64_t sub_24FAE6D98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = a3[9];
  uint64_t v26 = a2 + v10;
  uint64_t v27 = a1 + v10;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v11 = sub_24FB47028();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v25(v27, v26, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_24FB46F88();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_24FB46F68();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_24FAE705C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  int v6 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_24FB46F88();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = sub_24FB46F68();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_24FAE740C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v9 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_24FB46F88();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[11];
  int v17 = (void *)(a1 + v16);
  int v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_24FB46F68();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_24FAE7694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_24FB46F88();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_24FB46F68();
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_24FAE7A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE7A20);
}

uint64_t sub_24FAE7A20(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];
  return v15(v17, a2, v16);
}

uint64_t sub_24FAE7BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE7BB4);
}

uint64_t sub_24FAE7BB4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];
  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for FileDetailsView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A4E808);
}

void sub_24FAE7D54()
{
  sub_24FB47028();
  if (v0 <= 0x3F)
  {
    sub_24FAE5BDC(319, &qword_269A4E738, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_24FAE5BDC(319, (unint64_t *)&qword_269A4E740, MEMORY[0x263F06EA8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_24FAE7EC8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24FB46F68();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_24FAE803C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_24FB46F68();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_24FAE8110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_24FB46F68();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24FAE8234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = sub_24FB46F68();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t sub_24FAE83BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_24FB46F68();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_24FAE84E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = sub_24FB46F68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_24FAE8668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE867C);
}

uint64_t sub_24FAE867C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    int v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24FAE8730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE8744);
}

unsigned char *sub_24FAE8744(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ImageDetailsView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A4E820);
}

void sub_24FAE880C()
{
  sub_24FAE5BDC(319, (unint64_t *)&qword_269A4E740, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void **sub_24FAE88C8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    BOOL v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24FB47028();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    int v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_24FAE89A8(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24FB47028();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void **sub_24FAE8A20(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24FB47028();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_24FAE8AB4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  int v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *sub_24FAE8B44(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_24FAE8BC0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24FAE8C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAE8C60);
}

uint64_t sub_24FAE8C60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_24FB47028();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_24FAE8D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAE8D30);
}

void *sub_24FAE8D30(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_24FB47028();
    id v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ThumbnailView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A4E838);
}

uint64_t sub_24FAE8DF8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FAE8E30()
{
  uint64_t result = sub_24FB47028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FAE8EC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAE8EE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAE8F00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAE8F1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAE8F38()
{
  return MEMORY[0x263F1BB58];
}

uint64_t sub_24FAE8F44()
{
  return sub_24FAE8F8C(&qword_269A4E850, (void (*)(uint64_t))type metadata accessor for QuickLookPreview);
}

uint64_t sub_24FAE8F8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAE8FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAE903C()
{
  unint64_t v1 = (int *)(type metadata accessor for RemoveAttachmentButton(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24FAE9148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAE91B0()
{
  return sub_24FAE91DC(type metadata accessor for RemoveAttachmentButton, sub_24FAE2BD8);
}

uint64_t sub_24FAE91DC(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4);
}

unint64_t sub_24FAE9258()
{
  unint64_t result = qword_269A4E880;
  if (!qword_269A4E880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E878);
    sub_24FAE92F8();
    sub_24FAD57F0(&qword_269A4E8E8, &qword_269A4E8F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E880);
  }
  return result;
}

unint64_t sub_24FAE92F8()
{
  unint64_t result = qword_269A4E888;
  if (!qword_269A4E888)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E890);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E898);
    sub_24FAE93A8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E888);
  }
  return result;
}

unint64_t sub_24FAE93A8()
{
  unint64_t result = qword_269A4E8A0;
  if (!qword_269A4E8A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E898);
    sub_24FAE9448();
    sub_24FAD57F0(&qword_269A4E700, &qword_269A4E708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E8A0);
  }
  return result;
}

unint64_t sub_24FAE9448()
{
  unint64_t result = qword_269A4E8A8;
  if (!qword_269A4E8A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E8B0);
    sub_24FAE9A94(&qword_269A4E8B8, (uint64_t *)&unk_269A4E8C0, (void (*)(void))sub_24FADC9B8);
    sub_24FAD57F0(&qword_269A4E8D8, &qword_269A4E8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E8A8);
  }
  return result;
}

uint64_t sub_24FAE9514@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24FB47488();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24FAE9548()
{
  return sub_24FB47498();
}

unint64_t sub_24FAE9578()
{
  unint64_t result = qword_269A4E940;
  if (!qword_269A4E940)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E938);
    sub_24FAD57F0(&qword_269A4E948, &qword_269A4E950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E940);
  }
  return result;
}

uint64_t sub_24FAE9618(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

double sub_24FAE9628@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_24FAE1C8C((uint64_t *)*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_24FAE9630@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAE1D1C(*(void *)(v1 + 16), a1);
}

unint64_t sub_24FAE9638()
{
  unint64_t result = qword_269A4E970;
  if (!qword_269A4E970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E968);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E978);
    sub_24FAE970C();
    swift_getOpaqueTypeConformance2();
    sub_24FAD57F0(&qword_269A4E670, &qword_269A4E9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E970);
  }
  return result;
}

unint64_t sub_24FAE970C()
{
  unint64_t result = qword_269A4E980;
  if (!qword_269A4E980)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E978);
    sub_24FAD57F0(&qword_269A4E988, (uint64_t *)&unk_269A4E990);
    sub_24FAD57F0(&qword_269A4E700, &qword_269A4E708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E980);
  }
  return result;
}

unint64_t sub_24FAE97D0()
{
  unint64_t result = qword_269A4E9A8;
  if (!qword_269A4E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E9A8);
  }
  return result;
}

uint64_t sub_24FAE9824(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_24FADAA34(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_24FADAA34(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_24FAE98C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47428();
  *a1 = result;
  return result;
}

uint64_t sub_24FAE98F0()
{
  return sub_24FB47438();
}

uint64_t sub_24FAE991C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24FAE9930(a1, a2);
  }
  return a1;
}

uint64_t sub_24FAE9930(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24FAE9988(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24FAE999C(a1, a2);
  }
  return a1;
}

uint64_t sub_24FAE999C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_24FAE99F4()
{
  unint64_t result = qword_269A4E9E0;
  if (!qword_269A4E9E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4E9D8);
    sub_24FADC988();
    sub_24FAD57F0(&qword_269A4E680, &qword_269A4E9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4E9E0);
  }
  return result;
}

uint64_t sub_24FAE9A94(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAE9B10()
{
  return sub_24FAE9B4C((unint64_t *)&unk_269A4EA00, &qword_269A4E9C0, (void (*)(void))sub_24FAE9BD4, (void (*)(void))sub_24FAE9C10);
}

uint64_t sub_24FAE9B4C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAE9BD4()
{
  return sub_24FAE9B4C(&qword_269A4E688, (uint64_t *)&unk_269A4EA10, (void (*)(void))sub_24FADCD3C, (void (*)(void))sub_24FADC914);
}

uint64_t sub_24FAE9C10()
{
  return sub_24FAE9B4C(&qword_269A4E698, &qword_269A4EA90, (void (*)(void))sub_24FADC914, (void (*)(void))sub_24FADCA2C);
}

uint64_t sub_24FAE9C4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24FAE9CAC()
{
  return sub_24FAE083C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24FAE9CCC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_24FAE9D04()
{
  return sub_24FAE0A48(v0);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24FAE9D24()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AttachmentConfirmationView(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = v0 + *(int *)(v6 + 56);
  char v10 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v22 = v10;
  uint64_t v23 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EAA8);
  sub_24FB47CF8();
  if (v24 == 1)
  {
    sub_24FAE8FD4(v0, (uint64_t)v8, type metadata accessor for AttachmentConfirmationView);
    uint64_t v12 = &v8[*(int *)(v2 + 56)];
    char v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    char v22 = v13;
    uint64_t v23 = v14;
    sub_24FB47CF8();
    int v15 = v24;
    sub_24FAE8FD4((uint64_t)v8, (uint64_t)v5, type metadata accessor for AttachmentConfirmationView);
    if (v15 == 1)
    {
      uint64_t v16 = &v5[*(int *)(v2 + 60)];
      char v17 = *v16;
      uint64_t v18 = *((void *)v16 + 1);
      char v22 = v17;
      uint64_t v23 = v18;
      sub_24FB47CF8();
      int v19 = v24;
      sub_24FAE9C4C((uint64_t)v5, type metadata accessor for AttachmentConfirmationView);
      sub_24FAE9C4C((uint64_t)v8, type metadata accessor for AttachmentConfirmationView);
      if (v19 == 1) {
        v1 += 16;
      }
    }
    else
    {
      sub_24FAE9C4C((uint64_t)v5, type metadata accessor for AttachmentConfirmationView);
      sub_24FAE9C4C((uint64_t)v8, type metadata accessor for AttachmentConfirmationView);
    }
  }
  else
  {
    uint64_t v1 = v0 + 32;
  }
  return *(void *)v1;
}

uint64_t sub_24FAE9F24(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAE9FAC(uint64_t a1)
{
  return a1;
}

void sub_24FAEA038()
{
}

unint64_t sub_24FAEA094()
{
  unint64_t result = qword_269A4EBF8;
  if (!qword_269A4EBF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EBB0);
    sub_24FAE8F8C(&qword_269A4EC00, (void (*)(uint64_t))type metadata accessor for FileDetailsView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EBF8);
  }
  return result;
}

unint64_t sub_24FAEA140()
{
  unint64_t result = qword_269A4EC08;
  if (!qword_269A4EC08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EBC8);
    sub_24FAE8F8C(&qword_269A4EC10, (void (*)(uint64_t))type metadata accessor for ImageDetailsView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EC08);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Attribution(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AttachmentPicker()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for AttachmentPicker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AttachmentPicker(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AttachmentPicker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentPicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttachmentPicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentPicker()
{
  return &type metadata for AttachmentPicker;
}

uint64_t sub_24FAEA48C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAEA55C()
{
  return sub_24FAD57F0(&qword_269A4EC28, &qword_269A4EC30);
}

uint64_t sub_24FAEA598()
{
  return sub_24FAD57F0(&qword_269A4EC38, &qword_269A4EC40);
}

uint64_t sub_24FAEA5D4()
{
  return sub_24FAE9B4C(&qword_269A4EC48, &qword_269A4EC50, (void (*)(void))sub_24FAE99F4, (void (*)(void))sub_24FAE9B10);
}

uint64_t sub_24FAEA624()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAEA640()
{
  return sub_24FAE2894(*(void *)(v0 + 16));
}

unint64_t sub_24FAEA648()
{
  unint64_t result = qword_269A4EC70;
  if (!qword_269A4EC70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EC68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EC70);
  }
  return result;
}

uint64_t sub_24FAEA6B8()
{
  return sub_24FAE2AFC(v0 + 16);
}

uint64_t sub_24FAEA6C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAEA6EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAEA718(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_57Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

unint64_t *sub_24FAEA798@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24FAE29B4(a1, v2 + 16, a2);
}

unint64_t sub_24FAEA7A0()
{
  unint64_t result = qword_269A4EC90;
  if (!qword_269A4EC90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EC88);
    sub_24FAEA81C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EC90);
  }
  return result;
}

unint64_t sub_24FAEA81C()
{
  unint64_t result = qword_269A4EC98;
  if (!qword_269A4EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EC98);
  }
  return result;
}

uint64_t sub_24FAEA870()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *Attachment.init(localizedName:thumbnailImage:file:fileSizeInMB:isScreenshot:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = *result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(_DWORD *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 36) = BYTE4(a5) & 1;
  *(unsigned char *)(a7 + 37) = a6;
  return result;
}

uint64_t AttachmentConfirmationPayload.init(message:condensedMessage:attachmentRemovedMessage:sessionId:contentName:sourceContentType:sourceContentCreationDate:webpageURL:availableAttachments:userQuery:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  uint64_t v18 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  int v19 = (char *)a9 + v18[9];
  uint64_t v20 = sub_24FB47028();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a12, v20);
  sub_24FAD5730(a13, (uint64_t)a9 + v18[10], &qword_269A4E720);
  uint64_t result = sub_24FAD5730(a14, (uint64_t)a9 + v18[11], &qword_269A4E528);
  *(void *)((char *)a9 + v18[12]) = a15;
  char v22 = (void *)((char *)a9 + v18[13]);
  *char v22 = a16;
  v22[1] = a17;
  return result;
}

uint64_t type metadata accessor for AttachmentConfirmationPayload(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4EDF8);
}

uint64_t GenerativeMediaConfirmationSnippetModel.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAEAA8C(v1, a1);
}

uint64_t sub_24FAEAA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GenerativeMediaConfirmationSnippetModel.payload.setter(uint64_t a1)
{
  return sub_24FAEAAF8(a1, v1);
}

uint64_t sub_24FAEAAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*GenerativeMediaConfirmationSnippetModel.payload.modify())()
{
  return nullsub_1;
}

uint64_t GenerativeMediaConfirmationSnippetModel.init(payload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24FAEB0EC(a1, a2, type metadata accessor for AttachmentConfirmationPayload);
}

uint64_t sub_24FAEABB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FAF0858(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24FAEABDC(uint64_t a1)
{
  unint64_t v2 = sub_24FAEADC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAEAC18(uint64_t a1)
{
  unint64_t v2 = sub_24FAEADC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeMediaConfirmationSnippetModel.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED00);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEADC8();
  sub_24FB48768();
  type metadata accessor for AttachmentConfirmationPayload(0);
  sub_24FAEB0A4(&qword_269A4ED10, (void (*)(uint64_t))type metadata accessor for AttachmentConfirmationPayload);
  sub_24FB48658();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24FAEADC8()
{
  unint64_t result = qword_269A4ED08;
  if (!qword_269A4ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED08);
  }
  return result;
}

uint64_t GenerativeMediaConfirmationSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED18);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GenerativeMediaConfirmationSnippetModel(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEADC8();
  sub_24FB48758();
  if (!v2)
  {
    sub_24FAEB0A4(&qword_269A4ED20, (void (*)(uint64_t))type metadata accessor for AttachmentConfirmationPayload);
    sub_24FB485D8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_24FAEB0EC(v15, (uint64_t)v11, type metadata accessor for AttachmentConfirmationPayload);
    sub_24FAEB0EC((uint64_t)v11, v13, type metadata accessor for GenerativeMediaConfirmationSnippetModel);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for GenerativeMediaConfirmationSnippetModel(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4EDE8);
}

uint64_t sub_24FAEB0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAEB0EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAEB154@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenerativeMediaConfirmationSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_24FAEB16C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED00);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEADC8();
  sub_24FB48768();
  type metadata accessor for AttachmentConfirmationPayload(0);
  sub_24FAEB0A4(&qword_269A4ED10, (void (*)(uint64_t))type metadata accessor for AttachmentConfirmationPayload);
  sub_24FB48658();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

GenerativeAssistantUI::Attachment::LocalizedName_optional __swiftcall Attachment.LocalizedName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24FB48558();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Attachment.LocalizedName.rawValue.getter()
{
  if (*v0) {
    return 0x68736E6565726373;
  }
  else {
    return 0x746E6F436C6C7566;
  }
}

uint64_t sub_24FAEB38C(char *a1, char *a2)
{
  return sub_24FAEB398(*a1, *a2);
}

uint64_t sub_24FAEB398(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68736E6565726373;
  }
  else {
    uint64_t v3 = 0x746E6F436C6C7566;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000746E65;
  }
  else {
    unint64_t v4 = 0xEA0000000000746FLL;
  }
  if (a2) {
    uint64_t v5 = 0x68736E6565726373;
  }
  else {
    uint64_t v5 = 0x746E6F436C6C7566;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000746FLL;
  }
  else {
    unint64_t v6 = 0xEB00000000746E65;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24FB48688();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24FAEB448()
{
  return sub_24FAEB450();
}

uint64_t sub_24FAEB450()
{
  return sub_24FB48748();
}

uint64_t sub_24FAEB4E0()
{
  return sub_24FAEB4E8();
}

uint64_t sub_24FAEB4E8()
{
  sub_24FB480C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAEB560()
{
  return sub_24FAEB568();
}

uint64_t sub_24FAEB568()
{
  return sub_24FB48748();
}

GenerativeAssistantUI::Attachment::LocalizedName_optional sub_24FAEB5F4(Swift::String *a1)
{
  return Attachment.LocalizedName.init(rawValue:)(*a1);
}

uint64_t sub_24FAEB600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Attachment.LocalizedName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24FAEB628()
{
  return sub_24FB48138();
}

uint64_t sub_24FAEB688()
{
  return sub_24FB48128();
}

void Attachment.localizedName.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t Attachment.thumbnailImage.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24FAE991C(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t Attachment.file.getter()
{
  return swift_retain();
}

unint64_t Attachment.fileSizeInMB.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t Attachment.isScreenshot.getter()
{
  return *(unsigned __int8 *)(v0 + 37);
}

uint64_t sub_24FAEB748(char a1)
{
  return *(void *)&aLocalizethumbn[8 * a1];
}

uint64_t sub_24FAEB770()
{
  return sub_24FAEB748(*v0);
}

uint64_t sub_24FAEB778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FAF08F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24FAEB7A0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24FAEB7AC(uint64_t a1)
{
  unint64_t v2 = sub_24FAEBADC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAEB7E8(uint64_t a1)
{
  unint64_t v2 = sub_24FAEBADC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Attachment.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED28);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v18 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v15 = *((unsigned int *)v1 + 8);
  uint64_t v16 = v10;
  int v21 = v1[36];
  v14[3] = v1[37];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEBADC();
  sub_24FB48768();
  LOBYTE(v19) = v8;
  char v22 = 0;
  sub_24FAEBB30();
  sub_24FB48658();
  if (!v2)
  {
    uint64_t v12 = v16;
    char v13 = v21;
    uint64_t v19 = v18;
    uint64_t v20 = v17;
    char v22 = 1;
    sub_24FAEBB84();
    sub_24FB48628();
    uint64_t v19 = v12;
    char v22 = 2;
    sub_24FB46FE8();
    sub_24FAEB0A4(&qword_269A4ED48, MEMORY[0x263F818B0]);
    sub_24FB48628();
    LOBYTE(v19) = 3;
    char v22 = v13;
    sub_24FB48618();
    LOBYTE(v19) = 4;
    sub_24FB48648();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24FAEBADC()
{
  unint64_t result = qword_269A4ED30;
  if (!qword_269A4ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED30);
  }
  return result;
}

unint64_t sub_24FAEBB30()
{
  unint64_t result = qword_269A4ED38;
  if (!qword_269A4ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED38);
  }
  return result;
}

unint64_t sub_24FAEBB84()
{
  unint64_t result = qword_269A4ED40;
  if (!qword_269A4ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED40);
  }
  return result;
}

uint64_t Attachment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEBADC();
  sub_24FB48758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  sub_24FAEBFC0();
  sub_24FB485D8();
  int v9 = v22;
  char v25 = 1;
  sub_24FAEC014();
  sub_24FB485A8();
  int v24 = v9;
  uint64_t v10 = v22;
  unint64_t v11 = v23;
  sub_24FB46FE8();
  char v25 = 2;
  sub_24FAE991C(v10, v11);
  sub_24FAEB0A4(&qword_269A4ED68, MEMORY[0x263F818B0]);
  sub_24FB485A8();
  unint64_t v21 = v11;
  uint64_t v12 = v22;
  LOBYTE(v22) = 3;
  uint64_t v13 = v12;
  swift_retain();
  uint64_t v20 = 0;
  uint64_t v19 = sub_24FB48598();
  uint64_t v20 = v13;
  LOBYTE(v22) = 4;
  uint64_t v15 = sub_24FB485C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v16 = v21;
  sub_24FAE991C(v10, v21);
  sub_24FAE9988(v10, v16);
  *(unsigned char *)a2 = v24;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v16;
  uint64_t v17 = v19;
  *(void *)(a2 + 24) = v20;
  *(_DWORD *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 36) = BYTE4(v17) & 1;
  *(unsigned char *)(a2 + 37) = v15 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_24FAE9988(v10, v16);
  return swift_release();
}

unint64_t sub_24FAEBFC0()
{
  unint64_t result = qword_269A4ED58;
  if (!qword_269A4ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED58);
  }
  return result;
}

unint64_t sub_24FAEC014()
{
  unint64_t result = qword_269A4ED60;
  if (!qword_269A4ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED60);
  }
  return result;
}

unint64_t sub_24FAEC068(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x496E6F6973736573;
      break;
    case 4:
      unint64_t result = 0x4E746E65746E6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0x5565676170626577;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0x7265755172657375;
      break;
    default:
      unint64_t result = 0x6567617373656DLL;
      break;
  }
  return result;
}

uint64_t sub_24FAEC1A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Attachment.init(from:)(a1, a2);
}

uint64_t sub_24FAEC1C0(void *a1)
{
  return Attachment.encode(to:)(a1);
}

unint64_t sub_24FAEC1D8()
{
  return sub_24FAEC068(*v0);
}

uint64_t sub_24FAEC1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FAF0B38(a1, a2);
  *a3 = result;
  return result;
}

void sub_24FAEC208(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_24FAEC214(uint64_t a1)
{
  unint64_t v2 = sub_24FAEC688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAEC250(uint64_t a1)
{
  unint64_t v2 = sub_24FAEC688();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AttachmentConfirmationPayload.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAEC688();
  sub_24FB48768();
  LOBYTE(v12) = 0;
  sub_24FB48638();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_24FB48638();
    LOBYTE(v12) = 2;
    sub_24FB48638();
    LOBYTE(v12) = 3;
    sub_24FB48608();
    LOBYTE(v12) = 4;
    sub_24FB48638();
    uint64_t v9 = type metadata accessor for AttachmentConfirmationPayload(0);
    LOBYTE(v12) = 5;
    sub_24FB47028();
    sub_24FAEB0A4(&qword_269A4ED80, MEMORY[0x263F40780]);
    sub_24FB48658();
    LOBYTE(v12) = 6;
    sub_24FB46F88();
    sub_24FAEB0A4(&qword_269A4ED88, MEMORY[0x263F07490]);
    sub_24FB48628();
    LOBYTE(v12) = 7;
    sub_24FB46F68();
    sub_24FAEB0A4(&qword_269A4ED90, MEMORY[0x263F06EA8]);
    sub_24FB48628();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 48));
    v11[7] = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED98);
    sub_24FAECF98(&qword_269A4EDA0, (void (*)(void))sub_24FAEC6DC);
    sub_24FB48658();
    LOBYTE(v12) = 9;
    sub_24FB48638();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24FAEC688()
{
  unint64_t result = qword_269A4ED78;
  if (!qword_269A4ED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4ED78);
  }
  return result;
}

unint64_t sub_24FAEC6DC()
{
  unint64_t result = qword_269A4EDA8;
  if (!qword_269A4EDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EDA8);
  }
  return result;
}

uint64_t AttachmentConfirmationPayload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB47028();
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EDB0);
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  MEMORY[0x270FA5388](v15);
  id v46 = (uint64_t *)((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24FAEC688();
  uint64_t v41 = v14;
  uint64_t v18 = v45;
  sub_24FB48758();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  id v45 = v11;
  uint64_t v38 = v5;
  uint64_t v20 = v39;
  uint64_t v19 = v40;
  LOBYTE(v48) = 0;
  uint64_t v21 = sub_24FB485B8();
  uint64_t v22 = v46;
  *id v46 = v21;
  v22[1] = v23;
  LOBYTE(v48) = 1;
  v22[2] = sub_24FB485B8();
  v22[3] = v24;
  LOBYTE(v48) = 2;
  v22[4] = sub_24FB485B8();
  v22[5] = v25;
  LOBYTE(v48) = 3;
  v22[6] = sub_24FB48588();
  v22[7] = v26;
  LOBYTE(v48) = 4;
  v22[8] = sub_24FB485B8();
  v22[9] = v27;
  LOBYTE(v48) = 5;
  sub_24FAEB0A4(&qword_269A4EDB8, MEMORY[0x263F40780]);
  uint64_t v37 = v9;
  sub_24FB485D8();
  uint64_t v36 = v15;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v22 + v15[9], v45, v37);
  sub_24FB46F88();
  LOBYTE(v48) = 6;
  sub_24FAEB0A4(&qword_269A4EDC0, MEMORY[0x263F07490]);
  sub_24FB485A8();
  sub_24FAD5730((uint64_t)v8, (uint64_t)v46 + v36[10], &qword_269A4E720);
  sub_24FB46F68();
  LOBYTE(v48) = 7;
  sub_24FAEB0A4(&qword_269A4EDC8, MEMORY[0x263F06EA8]);
  uint64_t v28 = (uint64_t)v38;
  sub_24FB485A8();
  sub_24FAD5730(v28, (uint64_t)v46 + v15[11], &qword_269A4E528);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4ED98);
  char v47 = 8;
  sub_24FAECF98(&qword_269A4EDD0, (void (*)(void))sub_24FAED008);
  sub_24FB485D8();
  *(uint64_t *)((char *)v46 + v15[12]) = v48;
  LOBYTE(v48) = 9;
  uint64_t v29 = sub_24FB485B8();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  uint64_t v32 = v15[13];
  uint64_t v33 = (uint64_t)v46;
  uint64_t v34 = (uint64_t *)((char *)v46 + v32);
  *uint64_t v34 = v29;
  v34[1] = v31;
  sub_24FAEAA8C(v33, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_24FAED05C(v33);
}

uint64_t sub_24FAECF98(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4ED98);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FAED008()
{
  unint64_t result = qword_269A4EDD8;
  if (!qword_269A4EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EDD8);
  }
  return result;
}

uint64_t sub_24FAED05C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttachmentConfirmationPayload(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FAED0B8()
{
  return sub_24FAEB0A4(&qword_269A4E500, (void (*)(uint64_t))type metadata accessor for GenerativeMediaConfirmationSnippetModel);
}

uint64_t sub_24FAED100()
{
  return sub_24FAEB0A4(&qword_269A4E4A0, (void (*)(uint64_t))type metadata accessor for GenerativeMediaConfirmationSnippetModel);
}

unint64_t sub_24FAED14C()
{
  unint64_t result = qword_269A4EDE0;
  if (!qword_269A4EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EDE0);
  }
  return result;
}

uint64_t sub_24FAED1A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AttachmentConfirmationPayload.init(from:)(a1, a2);
}

uint64_t sub_24FAED1B8(void *a1)
{
  return AttachmentConfirmationPayload.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenerativeMediaConfirmationSnippetModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = *(int *)(v4 + 36);
    uint64_t v33 = (char *)a2 + v12;
    uint64_t v34 = (char *)a1 + v12;
    uint64_t v13 = sub_24FB47028();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v33, v13);
    uint64_t v14 = v6[10];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_24FB46F88();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = v6[11];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_24FB46F68();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    *(uint64_t *)((char *)a1 + v6[12]) = *(uint64_t *)((char *)a2 + v6[12]);
    uint64_t v27 = v6[13];
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GenerativeMediaConfirmationSnippetModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v3 = a1 + v2[9];
  uint64_t v4 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + v2[10];
  uint64_t v6 = sub_24FB46F88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + v2[11];
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GenerativeMediaConfirmationSnippetModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v10 = v9[9];
  uint64_t v30 = (char *)a2 + v10;
  uint64_t v31 = (char *)a1 + v10;
  uint64_t v11 = sub_24FB47028();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v31, v30, v11);
  uint64_t v12 = v9[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_24FB46F88();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = v9[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24FB46F68();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
  uint64_t v24 = v9[13];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GenerativeMediaConfirmationSnippetModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v5 = v4[9];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = v4[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24FB46F88();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = v4[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24FB46F68();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(void *)((char *)a1 + v4[12]) = *(void *)((char *)a2 + v4[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v4[13];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for GenerativeMediaConfirmationSnippetModel(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v7 = v6[9];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[10];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_24FB46F88();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = v6[11];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_24FB46F68();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  return a1;
}

void *assignWithTake for GenerativeMediaConfirmationSnippetModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v10 = v9[9];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = v9[10];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_24FB46F88();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  uint64_t v23 = v9[11];
  int v24 = (char *)a1 + v23;
  int v25 = (char *)a2 + v23;
  uint64_t v26 = sub_24FB46F68();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  *(void *)((char *)a1 + v9[12]) = *(void *)((char *)a2 + v9[12]);
  swift_bridgeObjectRelease();
  uint64_t v32 = v9[13];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeMediaConfirmationSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAEE40C);
}

uint64_t sub_24FAEE40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GenerativeMediaConfirmationSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAEE48C);
}

uint64_t sub_24FAEE48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentConfirmationPayload(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FAEE4FC()
{
  uint64_t result = type metadata accessor for AttachmentConfirmationPayload(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Attachment(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >> 60 != 15) {
    sub_24FAE999C(*(void *)(a1 + 8), v1);
  }
  return swift_release();
}

uint64_t initializeWithCopy for Attachment(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (uint64_t *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_24FAE9930(*v4, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v5;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Attachment(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (uint64_t *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_24FAE9930(*v5, *(void *)(a2 + 16));
      uint64_t v9 = *(void *)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v6;
      sub_24FAE999C(v9, v10);
      goto LABEL_8;
    }
    sub_24FAEE74C(a1 + 8);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *uint64_t v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  uint64_t v7 = *v5;
  sub_24FAE9930(*v5, *(void *)(a2 + 16));
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v6;
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  int v11 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

uint64_t sub_24FAEE74C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy38_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 30) = *(void *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Attachment(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (void *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 16);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = *v5;
      *(void *)(a1 + 16) = v7;
      sub_24FAE999C(v8, v6);
      goto LABEL_6;
    }
    sub_24FAEE74C(a1 + 8);
  }
  *uint64_t v4 = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

uint64_t getEnumTagSinglePayload for Attachment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 38)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Attachment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 38) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 38) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attachment()
{
  return &type metadata for Attachment;
}

uint64_t getEnumTagSinglePayload for Attachment.LocalizedName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Attachment.LocalizedName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FAEEA84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24FAEEAAC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Attachment.LocalizedName()
{
  return &type metadata for Attachment.LocalizedName;
}

uint64_t *initializeBufferWithCopyOfBuffer for AttachmentConfirmationPayload(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    uint64_t v12 = a3[9];
    uint64_t v33 = (char *)a2 + v12;
    uint64_t v34 = (char *)a1 + v12;
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v13 = sub_24FB47028();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v34, v33, v13);
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_24FB46F88();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v21 = a3[11];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_24FB46F68();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = a3[13];
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    int v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AttachmentConfirmationPayload(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_24FB47028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_24FB46F88();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_24FB46F68();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AttachmentConfirmationPayload(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  uint64_t v11 = a3[9];
  uint64_t v31 = (char *)a2 + v11;
  uint64_t v32 = (char *)a1 + v11;
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v12 = sub_24FB47028();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v32, v31, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_24FB46F88();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_24FB46F68();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AttachmentConfirmationPayload(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24FB46F88();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[11];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_24FB46F68();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[13];
  int v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *int v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AttachmentConfirmationPayload(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_24FB46F88();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24FB46F68();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  return a1;
}

void *assignWithTake for AttachmentConfirmationPayload(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_24FB47028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_24FB46F88();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = a3[11];
  int v25 = (char *)a1 + v24;
  int v26 = (char *)a2 + v24;
  uint64_t v27 = sub_24FB46F68();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_13:
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[13];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentConfirmationPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAEFCC8);
}

uint64_t sub_24FAEFCC8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];
  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for AttachmentConfirmationPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAEFE5C);
}

uint64_t sub_24FAEFE5C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_24FB47028();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E720);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];
  return v15(v17, a2, a2, v16);
}

void sub_24FAEFFDC()
{
  sub_24FB47028();
  if (v0 <= 0x3F)
  {
    sub_24FAE5BDC(319, &qword_269A4E738, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_24FAE5BDC(319, (unint64_t *)&qword_269A4E740, MEMORY[0x263F06EA8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for AttachmentConfirmationPayload.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AttachmentConfirmationPayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FAF02A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentConfirmationPayload.CodingKeys()
{
  return &type metadata for AttachmentConfirmationPayload.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Attachment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Attachment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FAF0434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attachment.CodingKeys()
{
  return &type metadata for Attachment.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GenerativeMediaConfirmationSnippetModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FAF0508);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeMediaConfirmationSnippetModel.CodingKeys()
{
  return &type metadata for GenerativeMediaConfirmationSnippetModel.CodingKeys;
}

unint64_t sub_24FAF0544()
{
  unint64_t result = qword_269A4EE08;
  if (!qword_269A4EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE08);
  }
  return result;
}

unint64_t sub_24FAF059C()
{
  unint64_t result = qword_269A4EE10;
  if (!qword_269A4EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE10);
  }
  return result;
}

unint64_t sub_24FAF05F4()
{
  unint64_t result = qword_269A4EE18;
  if (!qword_269A4EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE18);
  }
  return result;
}

unint64_t sub_24FAF064C()
{
  unint64_t result = qword_269A4EE20;
  if (!qword_269A4EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE20);
  }
  return result;
}

unint64_t sub_24FAF06A4()
{
  unint64_t result = qword_269A4EE28;
  if (!qword_269A4EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE28);
  }
  return result;
}

unint64_t sub_24FAF06FC()
{
  unint64_t result = qword_269A4EE30;
  if (!qword_269A4EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE30);
  }
  return result;
}

unint64_t sub_24FAF0754()
{
  unint64_t result = qword_269A4EE38;
  if (!qword_269A4EE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE38);
  }
  return result;
}

unint64_t sub_24FAF07AC()
{
  unint64_t result = qword_269A4EE40;
  if (!qword_269A4EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE40);
  }
  return result;
}

unint64_t sub_24FAF0804()
{
  unint64_t result = qword_269A4EE48;
  if (!qword_269A4EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE48);
  }
  return result;
}

uint64_t sub_24FAF0858(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24FB48688();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24FAF08E0()
{
  return 0x64616F6C796170;
}

uint64_t sub_24FAF08F8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x657A696C61636F6CLL && a2 == 0xED0000656D614E64;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xEE006567616D496CLL || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701603686 && a2 == 0xE400000000000000 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A6953656C6966 && a2 == 0xEC000000424D6E49 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E65657263537369 && a2 == 0xEC000000746F6873)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24FAF0B38(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024FB4FE50 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024FB4FE70 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E746E65746E6F63 && a2 == 0xEB00000000656D61 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024FB4FE90 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024FB4FEB0 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5565676170626577 && a2 == 0xEA00000000004C52 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024FB4FED0 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7265755172657375 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_24FAF0F18()
{
  unint64_t result = qword_269A4EE50;
  if (!qword_269A4EE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EE50);
  }
  return result;
}

uint64_t sub_24FAF0F7C()
{
  return sub_24FB48018() & 1;
}

uint64_t sub_24FAF0FD8()
{
  return sub_24FB47FE8();
}

void sub_24FAF1020()
{
}

void sub_24FAF1048()
{
}

uint64_t sub_24FAF1064@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v23 = (void *)sub_24FB477E8();
    sub_24FB47088();
  }
  sub_24FB473A8();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(void *)(a9 + 80) = *(void *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;
  return sub_24FAE9F24(v13);
}

double sub_24FAF1238@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FAF1364(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, type metadata accessor for QuickLookPreview, &qword_269A4EB40).n128_u64[0];
  return result;
}

double sub_24FAF129C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FAF1364(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, type metadata accessor for ImageDetailsView, &qword_269A4EBC8).n128_u64[0];
  return result;
}

double sub_24FAF1300@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FAF1364(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, type metadata accessor for FileDetailsView, &qword_269A4EBB0).n128_u64[0];
  return result;
}

__n128 sub_24FAF1364@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(void), uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    long long v28 = (void *)sub_24FB477E8();
    sub_24FB47088();

    uint64_t v19 = a17;
  }
  sub_24FB473A8();
  sub_24FAF7518(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_24FAF1534@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v23 = (void *)sub_24FB477E8();
    sub_24FB47088();
  }
  sub_24FB473A8();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 104) = v29;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 56) = v26;
  *(_OWORD *)(a9 + 72) = v27;
  *(void *)(a9 + 48) = *(void *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v28;
  return sub_24FAF8B78(v13);
}

unint64_t sub_24FAF16F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF58);
  uint64_t v2 = sub_24FB48528();
  BOOL v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24FAD5834(v6, (uint64_t)v15, &qword_269A4EF60);
    unint64_t result = sub_24FAF8154((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_24FAF8210(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24FAF1838(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF40);
  uint64_t v2 = sub_24FB48528();
  BOOL v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24FAD5834(v6, (uint64_t)&v15, &qword_269A4EF48);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24FAF8198(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24FAF8210(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t TextGenerationView.body.getter()
{
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE88);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = sub_24FB475F8();
  *((void *)v4 + 1) = 0;
  unsigned char v4[16] = 0;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE98);
  sub_24FAF1B94(v1, &v4[*(int *)(v9 + 44)]);
  uint64_t v14 = *(void *)((char *)v1 + *(int *)(type metadata accessor for TextGenerationView(0) + 40));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEA0);
  uint64_t v11 = sub_24FAD57F0(&qword_269A4EEA8, &qword_269A4EE88);
  sub_24FB47A48();
  sub_24FAD5794((uint64_t)v4, &qword_269A4EE88);
  uint64_t v14 = v2;
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  swift_getOpaqueTypeConformance2();
  sub_24FB47AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24FAF1B94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v90 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttributionsTextView();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v91 = (uint64_t *)((char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF80);
  MEMORY[0x270FA5388](v93);
  uint64_t v92 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF88);
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v104 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  long long v103 = (char *)&v83 - v11;
  uint64_t v12 = type metadata accessor for RateLimitTextView(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v84 = (uint64_t *)((char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF90);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v102 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = type metadata accessor for TextGenerationView(0);
  char v21 = *((unsigned char *)a1 + *(int *)(v20 + 44));
  uint64_t v95 = v8;
  if (v21)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v22 = *(void *)((char *)a1 + *(int *)(v20 + 40));
    swift_bridgeObjectRetain();
  }
  swift_retain();
  DocumentView.init(viewModel:linkTapped:contentsToCopy:forceOffsetFirstElement:)(0, 0, v22, 0, (uint64_t)&v139);
  uint64_t v89 = v139;
  uint64_t v99 = v140;
  uint64_t v100 = *((void *)&v139 + 1);
  int v88 = v141;
  uint64_t v107 = v142;
  uint64_t v101 = v143;
  int v87 = sub_24FB47828();
  uint64_t v106 = a1;
  sub_24FAF2570();
  uint64_t v23 = v106;
  sub_24FB47178();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v98 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v32 = *(void *)(*(void *)((char *)v23 + v98[9]) + 16);
  unint64_t v105 = v19;
  if (v32)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24FB47528();
    sub_24FAF2B18((uint64_t)v108);
    swift_bridgeObjectRelease();
    *(_OWORD *)&v110[151] = v108[9];
    *(_OWORD *)&v110[167] = v108[10];
    *(_OWORD *)&v110[183] = v108[11];
    *(_OWORD *)&v110[87] = v108[5];
    *(_OWORD *)&v110[103] = v108[6];
    *(_OWORD *)&v110[119] = v108[7];
    *(_OWORD *)&v110[135] = v108[8];
    *(_OWORD *)&v110[23] = v108[1];
    *(_OWORD *)&v110[39] = v108[2];
    *(_OWORD *)&v110[55] = v108[3];
    *(_OWORD *)&v110[71] = v108[4];
    char v111 = 1;
    *(void *)&v110[199] = v109;
    *(_OWORD *)&v110[7] = v108[0];
    LODWORD(v97) = 1;
    LODWORD(v96) = sub_24FB47818();
    sub_24FB47178();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    LOBYTE(v144) = 0;
    char v42 = sub_24FB47828();
    sub_24FB47178();
    long long v123 = *(_OWORD *)&v110[144];
    long long v124 = *(_OWORD *)&v110[160];
    *(_OWORD *)uint64_t v125 = *(_OWORD *)&v110[176];
    uint64_t v19 = v105;
    *(_OWORD *)&v125[15] = *(_OWORD *)&v110[191];
    long long v119 = *(_OWORD *)&v110[80];
    long long v120 = *(_OWORD *)&v110[96];
    long long v121 = *(_OWORD *)&v110[112];
    long long v122 = *(_OWORD *)&v110[128];
    long long v115 = *(_OWORD *)&v110[16];
    long long v116 = *(_OWORD *)&v110[32];
    long long v117 = *(_OWORD *)&v110[48];
    long long v118 = *(_OWORD *)&v110[64];
    LOBYTE(v145[0]) = 0;
    long long v112 = (unint64_t)v33;
    char v113 = v97;
    long long v114 = *(_OWORD *)v110;
    char v126 = v96;
    uint64_t v127 = v35;
    uint64_t v128 = v37;
    uint64_t v129 = v39;
    uint64_t v130 = v41;
    char v131 = v144;
    char v132 = v42;
    uint64_t v133 = v43;
    uint64_t v134 = v44;
    uint64_t v135 = v45;
    uint64_t v136 = v46;
    char v137 = 0;
    nullsub_1(&v112);
  }
  else
  {
    sub_24FAF8ADC(&v112);
  }
  sub_24FAD5730((uint64_t)&v112, (uint64_t)v138, &qword_269A4EF98);
  char v47 = (void *)((char *)v23 + v98[10]);
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = v47[2];
  uint64_t v51 = v47[3];
  uint64_t v52 = v47[4];
  uint64_t v96 = v47[5];
  uint64_t v97 = v52;
  uint64_t v85 = v51;
  if (v49)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v54 = (uint64_t)v84;
    *uint64_t v84 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(v12 + 20));
    *uint64_t v55 = v48;
    v55[1] = v49;
    v55[2] = v50;
    v55[3] = v51;
    uint64_t v56 = v96;
    v55[4] = v97;
    v55[5] = v56;
    sub_24FAF8BD4(v54, (uint64_t)v19, type metadata accessor for RateLimitTextView);
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19, v57, 1, v12);
  uint64_t v58 = v106[1];
  uint64_t v59 = v106[2];
  uint64_t v60 = v106[3];
  uint64_t v61 = v106[4];
  uint64_t v62 = v106[5];
  uint64_t v63 = *(int *)(v3 + 28);
  uint64_t v64 = v90;
  sub_24FAD5834((uint64_t)v106 + v98[8], (uint64_t)&v90[v63], &qword_269A4E528);
  *uint64_t v64 = v58;
  v64[1] = v59;
  v64[2] = v60;
  v64[3] = v61;
  v64[4] = v62;
  sub_24FAF86F0(v48, v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v65 = v91;
  AttributionsTextView.init(model:)((uint64_t)v64, v91);
  uint64_t v66 = sub_24FB47E68();
  uint64_t v67 = v92;
  sub_24FAF1364(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v92, 0.0, 1, 0.0, 1, v66, v68, (uint64_t (*)(void))type metadata accessor for AttributionsTextView, &qword_269A4EF80);
  sub_24FAF83CC((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for AttributionsTextView);
  sub_24FAF8740();
  uint64_t v69 = v104;
  sub_24FB47A58();
  sub_24FAD5794(v67, &qword_269A4EF80);
  uint64_t v71 = v94;
  uint64_t v70 = v95;
  uint64_t v72 = v103;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v103, v69, v95);
  sub_24FAD5730((uint64_t)v138, (uint64_t)v108, &qword_269A4EF98);
  uint64_t v73 = v102;
  sub_24FAD5834((uint64_t)v105, v102, &qword_269A4EF90);
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v74(v69, v72, v70);
  unint64_t v75 = v86;
  uint64_t v76 = v100;
  *uint64_t v86 = v89;
  v75[1] = v76;
  v75[2] = v99;
  *((unsigned char *)v75 + 24) = v88;
  uint64_t v77 = v101;
  v75[4] = v107;
  v75[5] = v77;
  *((unsigned char *)v75 + 48) = v87;
  v75[7] = v25;
  v75[8] = v27;
  v75[9] = v29;
  v75[10] = v31;
  *((unsigned char *)v75 + 88) = 0;
  sub_24FAD5730((uint64_t)v108, (uint64_t)v110, &qword_269A4EF98);
  sub_24FAD5730((uint64_t)v110, (uint64_t)(v75 + 12), &qword_269A4EF98);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EFB0);
  sub_24FAD5834(v73, (uint64_t)v75 + *(int *)(v78 + 64), &qword_269A4EF90);
  uint64_t v79 = v104;
  v74((char *)v75 + *(int *)(v78 + 80), v104, v70);
  v145[0] = v139;
  uint64_t v80 = v142;
  uint64_t v144 = v140;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24FAF8834(v107);
  sub_24FAF8978((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24FAF8844);
  sub_24FAF88E4((uint64_t)v145);
  sub_24FAEA6EC((uint64_t)&v144);
  sub_24FAF8834(v80);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v71 + 8);
  v81(v103, v70);
  sub_24FAD5794((uint64_t)v105, &qword_269A4EF90);
  sub_24FAF8910((uint64_t)v145);
  sub_24FAF893C((uint64_t)&v144);
  sub_24FAF8968(v80);
  v81(v79, v70);
  sub_24FAD5794(v102, &qword_269A4EF90);
  sub_24FAD5730((uint64_t)v108, (uint64_t)&v112, &qword_269A4EF98);
  sub_24FAF8978((uint64_t)&v112, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24FAF8A14);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_24FAF8968(v107);
}

uint64_t type metadata accessor for TextGenerationView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4EEB0);
}

uint64_t sub_24FAF2570()
{
  uint64_t v34 = type metadata accessor for DocumentParagraphElement();
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for TextGenerationView(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EFB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (long long *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DocumentOutlineElement();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DocumentCodeBlockElement();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v32 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v35 = v0;
  uint64_t v17 = DocumentViewModel.elements.getter();
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_24FAF8C3C(v17 + 40 * v18 - 8, (uint64_t)&v39);
  swift_bridgeObjectRelease();
  if (!*((void *)&v40 + 1))
  {
LABEL_6:
    uint64_t v20 = (uint64_t *)&unk_269A4EFC0;
    char v21 = &v39;
LABEL_7:
    sub_24FAD5794((uint64_t)v21, v20);
    uint64_t v22 = v35;
    goto LABEL_8;
  }
  sub_24FAF8CA0(&v39, (uint64_t)v42);
  sub_24FAF8C3C((uint64_t)v42, (uint64_t)&v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E2E8);
  if (swift_dynamicCast())
  {
    sub_24FAF83CC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DocumentCodeBlockElement);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  sub_24FAF8C3C((uint64_t)v42, (uint64_t)&v39);
  char v25 = swift_dynamicCast();
  uint64_t v26 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v25 & 1) == 0)
  {
    v26(v7, 1, 1, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    uint64_t v20 = &qword_269A4EFB8;
    char v21 = v7;
    goto LABEL_7;
  }
  v26(v7, 0, 1, v8);
  sub_24FAF8BD4((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DocumentOutlineElement);
  uint64_t v27 = *(void *)&v11[*(int *)(v8 + 20)];
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    sub_24FAF83CC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DocumentOutlineElement);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    uint64_t v22 = v35;
LABEL_23:
    sub_24FAD5794((uint64_t)&v36, &qword_269A4EFC8);
    goto LABEL_8;
  }
  uint64_t v29 = *(void *)(v27 + 8 * v28 + 24);
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    sub_24FAF8C3C(v29 + 40 * v30 - 8, (uint64_t)&v36);
  }
  else
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
  }
  uint64_t v22 = v35;
  sub_24FAF83CC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DocumentOutlineElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  if (!*((void *)&v37 + 1)) {
    goto LABEL_23;
  }
  sub_24FAF8CA0(&v36, (uint64_t)&v39);
  sub_24FAF8CA0(&v39, (uint64_t)&v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EFD0);
  uint64_t v31 = (uint64_t)v32;
  if (swift_dynamicCast()) {
    return sub_24FAF83CC(v31, (uint64_t (*)(void))type metadata accessor for DocumentCodeBlockElement);
  }
LABEL_8:
  uint64_t v23 = *(void *)(DocumentViewModel.elements.getter() + 16);
  swift_bridgeObjectRelease();
  sub_24FAF7518(v22, (uint64_t)v4, type metadata accessor for TextGenerationView);
  if (v23 != 1) {
    return sub_24FAF83CC((uint64_t)v4, type metadata accessor for TextGenerationView);
  }
  uint64_t result = DocumentViewModel.elements.getter();
  if (*(void *)(result + 16))
  {
    sub_24FAF8C3C(result + 32, (uint64_t)v42);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E2E8);
    uint64_t v24 = (uint64_t)v33;
    if (swift_dynamicCast())
    {
      sub_24FAF83CC(v24, (uint64_t (*)(void))type metadata accessor for DocumentParagraphElement);
      return sub_24FAF83CC((uint64_t)v4, type metadata accessor for TextGenerationView);
    }
    return sub_24FAF83CC((uint64_t)v4, type metadata accessor for TextGenerationView);
  }
  __break(1u);
  return result;
}

uint64_t sub_24FAF2B18@<X0>(uint64_t a1@<X8>)
{
  sub_24FB47C78();
  uint64_t v2 = sub_24FB47A28();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_24FB478A8();
  uint64_t v7 = sub_24FB479C8();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_24FADAA34(v2, v4, v6);
  swift_bridgeObjectRelease();
  LODWORD(v47) = sub_24FB47738();
  uint64_t v12 = sub_24FB479A8();
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_24FADAA34(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24FB47598();
  uint64_t v18 = sub_24FB479F8();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  LOBYTE(v9) = v23 & 1;
  uint64_t v24 = sub_24FB478A8();
  uint64_t v58 = v18;
  uint64_t v59 = v20;
  char v60 = v9;
  uint64_t v61 = v22;
  __int16 v62 = 256;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = v24;
  sub_24FB47E38();
  sub_24FAF1534(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v47, 0.0, 1, 0.0, 1);
  sub_24FADAA34(v18, v20, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v38 = v51;
  long long v39 = v52;
  long long v40 = v53;
  long long v41 = v54;
  long long v35 = v48;
  long long v36 = v49;
  long long v37 = v50;
  long long v25 = v55;
  v43[8] = v55;
  v43[9] = v56;
  v43[4] = v51;
  v43[5] = v52;
  long long v26 = v52;
  v43[6] = v53;
  v43[7] = v54;
  long long v27 = v47;
  long long v28 = v47;
  v43[0] = v47;
  v43[1] = v48;
  long long v29 = v50;
  v43[2] = v49;
  v43[3] = v50;
  long long v30 = v56;
  long long v31 = v56;
  *(_OWORD *)(a1 + 160) = v55;
  *(_OWORD *)(a1 + 176) = v30;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v26;
  *(_OWORD *)(a1 + 128) = v40;
  *(_OWORD *)(a1 + 144) = v41;
  *(_OWORD *)(a1 + 32) = v27;
  *(_OWORD *)(a1 + 48) = v35;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v37;
  long long v55 = v25;
  long long v56 = v31;
  long long v51 = v38;
  long long v52 = v39;
  long long v53 = v40;
  long long v54 = v41;
  uint64_t v42 = v57;
  uint64_t v44 = v57;
  char v46 = v17;
  *(void *)(a1 + 192) = v57;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v45;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v45[3];
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v33;
  uint64_t v57 = v42;
  long long v47 = v28;
  long long v48 = v35;
  long long v49 = v36;
  long long v50 = v29;
  sub_24FAE9618(v34, v15, v17);
  swift_bridgeObjectRetain();
  sub_24FAF8B78((uint64_t)v43);
  sub_24FAF8B1C((uint64_t)&v47);
  sub_24FADAA34(v34, v15, v17);
  return swift_bridgeObjectRelease();
}

void sub_24FAF2E54()
{
  if (qword_269A4E2C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24FB470C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_269A4EE70);
  uint64_t v1 = sub_24FB470A8();
  os_log_type_t v2 = sub_24FB482E8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = v4;
    *(_DWORD *)uint64_t v3 = 136315394;
    sub_24FAF7AFC(0xD000000000000012, 0x800000024FB4A7E0, &v10);
    sub_24FB48398();
    *(_WORD *)(v3 + 12) = 2080;
    sub_24FAF7AFC(2036625250, 0xE400000000000000, &v10);
    sub_24FB48398();
    _os_log_impl(&dword_24FACE000, v1, v2, "%s.%s User tapped on response view. Activating TTS.", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25336F100](v4, -1, -1);
    MEMORY[0x25336F100](v3, -1, -1);
  }

  id v5 = objc_msgSend(objc_allocWithZone((Class)GenerativeAssistantSiriInvocationManager), sel_init);
  objc_msgSend(v5, sel_invokeTypeToSiriForFollowup);
  char v6 = sub_24FB470A8();
  os_log_type_t v7 = sub_24FB482E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_24FAF7AFC(0xD000000000000012, 0x800000024FB4A7E0, &v10);
    sub_24FB48398();
    *(_WORD *)(v8 + 12) = 2080;
    sub_24FAF7AFC(2036625250, 0xE400000000000000, &v10);
    sub_24FB48398();
    _os_log_impl(&dword_24FACE000, v6, v7, "%s.%s Finished activating TTS.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25336F100](v9, -1, -1);
    MEMORY[0x25336F100](v8, -1, -1);
  }
}

uint64_t TextGenerationView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for TextGenerationView(0);
  *(void *)(a2 + v4[6]) = 0x401C000000000000;
  *(void *)(a2 + v4[7]) = 0x4026000000000000;
  *(void *)(a2 + v4[8]) = 0x402E000000000000;
  uint64_t v24 = v4;
  *(void *)(a2 + v4[9]) = 0x4010000000000000;
  sub_24FAF7518(a1, a2, (uint64_t (*)(void))type metadata accessor for GenerativeRichTextResultSnippetModel);
  id v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v6 = MarkdownParser.init(documentElementParsers:includeDefaultDocumentElementParsers:inlineParsers:includeDefaultInlineParsers:)(MEMORY[0x263F8EE78], 1, MEMORY[0x263F8EE78], 1);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  long long v28 = v5;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
  long long v27 = v5;
  uint64_t v13 = *(void *)(*(void *)a1 + 16);
  if (v13)
  {
    uint64_t v22 = a2;
    uint64_t v14 = (char *)(swift_bridgeObjectRetain() + 48);
    do
    {
      uint64_t v16 = *((void *)v14 - 2);
      unint64_t v15 = *((void *)v14 - 1);
      char v17 = *v14;
      v14 += 24;
      v25[0] = v16;
      v25[1] = v15;
      char v26 = v17;
      sub_24FAF3FB8(v16, v15, v17);
      sub_24FAF33A4((uint64_t)v25, &v27, &v28, v6, v8, v10, v12);
      sub_24FAF3FC8(v16, v15, v17);
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v18 = v27;
    a2 = v22;
  }
  else
  {
    uint64_t v18 = v5;
  }
  *(void *)(a2 + v24[10]) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = MarkdownParser.makeDocumentViewModel(from:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a2 + v24[5]) = v19;
  swift_retain();
  Swift::Bool v20 = DocumentViewModel.hasCodeblockOrImage()();
  swift_release();

  sub_24FAF83CC(a1, (uint64_t (*)(void))type metadata accessor for GenerativeRichTextResultSnippetModel);
  *(unsigned char *)(a2 + v24[11]) = v20;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAF33A4(uint64_t a1, void **a2, void **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v103 = a6;
  uint64_t v104 = a7;
  uint64_t v101 = a4;
  uint64_t v102 = a5;
  unint64_t v105 = a3;
  uint64_t v97 = a2;
  uint64_t v87 = sub_24FB46BB8();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_24FB46DF8();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E308);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v77 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v80 = (char *)&v76 - v13;
  uint64_t v84 = sub_24FB46D88();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  unint64_t v82 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v94 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_24FB46BC8();
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_24FB46BD8();
  uint64_t v18 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  Swift::Bool v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24FB46BF8();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v93 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24FB46D18();
  uint64_t v95 = *(void *)(v23 - 8);
  uint64_t v96 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v100 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v99 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v76 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v90 = (char *)&v76 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v98 = (char *)&v76 - v30;
  uint64_t v31 = sub_24FB47008();
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v32 = sub_24FB47F08();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  long long v35 = (char *)&v76 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void *)a1;
  unint64_t v36 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24FAE9930(*(void *)a1, *(void *)(a1 + 8));
    sub_24FB46FF8();
    sub_24FAE9930(v37, v36);
    uint64_t v38 = v37;
    sub_24FB47EF8();
    long long v39 = v97;
    long long v40 = *v97;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v39 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v40 = sub_24FAD4C60(0, v40[2] + 1, 1, v40);
      *long long v39 = v40;
    }
    unint64_t v43 = v40[2];
    unint64_t v42 = v40[3];
    if (v43 >= v42 >> 1)
    {
      long long v40 = sub_24FAD4C60((void *)(v42 > 1), v43 + 1, 1, v40);
      *long long v39 = v40;
    }
    uint64_t v107 = v32;
    uint64_t v108 = (char **)&protocol witness table for DataPasteboardItem;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v106);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(boxed_opaque_existential_1, v35, v32);
    v40[2] = v43 + 1;
    sub_24FAF8CA0(&v106, (uint64_t)&v40[5 * v43 + 4]);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    MarkdownParser.makeDocumentElement(imageData:)(v38, v36, (uint64_t *)&v106);
    uint64_t v45 = v105;
    char v46 = *v105;
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v45 = v46;
    if ((v47 & 1) == 0)
    {
      char v46 = sub_24FAD4C4C(0, v46[2] + 1, 1, v46);
      *uint64_t v45 = v46;
    }
    unint64_t v49 = v46[2];
    unint64_t v48 = v46[3];
    if (v49 >= v48 >> 1)
    {
      char v46 = sub_24FAD4C4C((void *)(v48 > 1), v49 + 1, 1, v46);
      *uint64_t v45 = v46;
    }
    v46[2] = v49 + 1;
    sub_24FAF8CA0(&v106, (uint64_t)&v46[5 * v49 + 4]);
    return sub_24FAF3FC8(v38, v36, 1);
  }
  else
  {
    swift_getKeyPath();
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F06760], v88);
    (*(void (**)(char *, void, uint64_t))(v89 + 104))(v92, *MEMORY[0x263F06750], v91);
    sub_24FAF3FB8(v37, v36, 0);
    swift_bridgeObjectRetain();
    sub_24FB46BE8();
    uint64_t v51 = sub_24FB46F68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v94, 1, 1, v51);
    type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
    sub_24FAF87EC(&qword_269A4EF70, (void (*)(uint64_t))type metadata accessor for AttributeScopes.MarkdownDocumentAttributes);
    long long v52 = v90;
    id v53 = v109;
    sub_24FB46CE8();
    id v109 = v53;
    if (v53)
    {
      uint64_t v54 = (uint64_t)v98;
      sub_24FB46B28();
      long long v55 = v82;
      sub_24FB46D78();
      uint64_t KeyPath = swift_getKeyPath();
      *(&v76 - 2) = MEMORY[0x270FA5388](KeyPath);
      swift_getKeyPath();
      (*(void (**)(char *, void, uint64_t))(v78 + 104))(v81, *MEMORY[0x263F06938], v79);
      uint64_t v57 = sub_24FB46E08();
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
      v58(v77, 1, 1, v57);
      uint64_t v59 = v80;
      sub_24FB46E18();
      v58(v59, 0, 1, v57);
      sub_24FAD55D4();
      sub_24FB46D68();
      uint64_t v60 = v86;
      uint64_t v61 = v85;
      uint64_t v62 = v87;
      (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *MEMORY[0x263F06728], v87);
      sub_24FB46B48();

      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v55, v84);
      id v109 = 0;
      uint64_t v63 = v96;
      uint64_t v64 = v97;
      uint64_t v65 = v95;
    }
    else
    {
      sub_24FAF3FC8(v37, v36, 0);
      uint64_t v65 = v95;
      uint64_t v63 = v96;
      uint64_t v54 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v98, v52, v96);
      uint64_t v64 = v97;
    }
    uint64_t v66 = MarkdownParser.makeDocumentElements(attributedString:)(v54, v101, v102, v103, v104);
    sub_24FAF3FD8((uint64_t)v66);
    uint64_t v67 = v99;
    sub_24FAD0FC0(v99);
    uint64_t v68 = *(void (**)(char *, void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v65 + 16);
    v68(v100, v67, v63);
    uint64_t v69 = *v64;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v64 = v69;
    if ((v70 & 1) == 0)
    {
      uint64_t v69 = sub_24FAD4C60(0, v69[2] + 1, 1, v69);
      *uint64_t v64 = v69;
    }
    unint64_t v72 = v69[2];
    unint64_t v71 = v69[3];
    if (v72 >= v71 >> 1)
    {
      uint64_t v69 = sub_24FAD4C60((void *)(v71 > 1), v72 + 1, 1, v69);
      *uint64_t v64 = v69;
    }
    uint64_t v107 = v63;
    uint64_t v108 = &protocol witness table for AttributedString;
    uint64_t v73 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v106);
    uint64_t v74 = v100;
    v68((char *)v73, (void (**)(char *, uint64_t, uint64_t, uint64_t))v100, v63);
    v69[2] = v72 + 1;
    sub_24FAF8CA0(&v106, (uint64_t)&v69[5 * v72 + 4]);
    unint64_t v75 = *(void (**)(char *, uint64_t))(v65 + 8);
    v75(v74, v63);
    v75((char *)v99, v63);
    return ((uint64_t (*)(char *, uint64_t))v75)(v98, v63);
  }
}

uint64_t sub_24FAF3FB8(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_24FAE9930(a1, a2);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24FAF3FC8(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_24FAE999C(a1, a2);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24FAF3FD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_24FAD4C4C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E2E8);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FAF4144(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE88);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE90);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_24FB475F8();
  *((void *)v6 + 1) = 0;
  unsigned char v6[16] = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EE98);
  sub_24FAF1B94(v3, &v6[*(int *)(v11 + 44)]);
  uint64_t v16 = *(void *)((char *)v3 + *(int *)(a1 + 40));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEA0);
  uint64_t v13 = sub_24FAD57F0(&qword_269A4EEA8, &qword_269A4EE88);
  sub_24FB47A48();
  sub_24FAD5794((uint64_t)v6, &qword_269A4EE88);
  uint64_t v16 = v4;
  uint64_t v17 = v12;
  uint64_t v18 = v13;
  swift_getOpaqueTypeConformance2();
  sub_24FB47AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24FAF4364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v112 = a1;
  uint64_t v2 = type metadata accessor for RateLimitTextView(0);
  uint64_t v108 = *(void *)(v2 - 8);
  uint64_t v107 = *(void *)(v108 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v105 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEE8);
  MEMORY[0x270FA5388](v111);
  uint64_t v103 = (uint64_t)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEF0);
  uint64_t v109 = *(void *)(v5 - 8);
  uint64_t v110 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v104 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  long long v106 = (char *)&v88 - v8;
  uint64_t v9 = sub_24FB474F8();
  uint64_t v101 = *(void *)(v9 - 8);
  uint64_t v102 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v100 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v99 = (char *)&v88 - v12;
  uint64_t v13 = sub_24FB471A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v88 - v18;
  uint64_t v93 = sub_24FB47E98();
  uint64_t v20 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v89 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_24FB47DD8();
  uint64_t v90 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v88 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEF8);
  uint64_t v24 = v23 - 8;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF00) - 8;
  MEMORY[0x270FA5388](v94);
  uint64_t v91 = (uint64_t)&v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF08) - 8;
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (uint64_t)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF10) - 8;
  uint64_t v29 = MEMORY[0x270FA5388](v98);
  uint64_t v114 = (uint64_t)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v96 = (uint64_t)&v88 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v113 = (uint64_t)&v88 - v33;
  sub_24FB47DC8();
  sub_24FAF7844(&qword_269A4EEC0, MEMORY[0x263F18520], 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v19);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x263F18508], v13);
  char v34 = sub_24FB47198();
  long long v35 = *(void (**)(char *, uint64_t))(v14 + 8);
  v35(v17, v13);
  v35(v19, v13);
  unint64_t v36 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v34 & 1) == 0) {
    unint64_t v36 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v37 = v89;
  uint64_t v38 = v93;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v89, *v36, v93);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v26[*(int *)(v24 + 44)], v37, v38);
  uint64_t v39 = v90;
  long long v40 = v88;
  uint64_t v41 = v92;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v26, v88, v92);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  unint64_t v42 = v99;
  sub_24FB474E8();
  uint64_t v43 = v101;
  uint64_t v44 = v102;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v100, v42, v102);
  sub_24FAF87EC(&qword_269A4EF18, MEMORY[0x263F196B8]);
  uint64_t v45 = v44;
  uint64_t v46 = sub_24FB47248();
  uint64_t v47 = v91;
  sub_24FAD5834((uint64_t)v26, v91, &qword_269A4EEF8);
  *(void *)(v47 + *(int *)(v94 + 44)) = v46;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v45);
  sub_24FAD5794((uint64_t)v26, &qword_269A4EEF8);
  LOBYTE(v46) = sub_24FB47818();
  sub_24FB47178();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v56 = v95;
  sub_24FAD5834(v47, v95, &qword_269A4EF00);
  uint64_t v57 = v56 + *(int *)(v97 + 44);
  *(unsigned char *)uint64_t v57 = v46;
  *(void *)(v57 + 8) = v49;
  *(void *)(v57 + 16) = v51;
  *(void *)(v57 + 24) = v53;
  *(void *)(v57 + 32) = v55;
  *(unsigned char *)(v57 + 40) = 0;
  sub_24FAD5794(v47, &qword_269A4EF00);
  LOBYTE(v46) = sub_24FB47828();
  sub_24FB47178();
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v96;
  sub_24FAD5834(v56, v96, &qword_269A4EF08);
  uint64_t v67 = v66 + *(int *)(v98 + 44);
  *(unsigned char *)uint64_t v67 = v46;
  *(void *)(v67 + 8) = v59;
  *(void *)(v67 + 16) = v61;
  *(void *)(v67 + 24) = v63;
  *(void *)(v67 + 32) = v65;
  *(unsigned char *)(v67 + 40) = 0;
  sub_24FAD5794(v56, &qword_269A4EF08);
  uint64_t v68 = v113;
  sub_24FAD5730(v66, v113, &qword_269A4EF10);
  uint64_t v69 = v103;
  sub_24FAF4E2C(v103);
  uint64_t v70 = v105;
  sub_24FAF7518(v1, v105, type metadata accessor for RateLimitTextView);
  unint64_t v71 = (*(unsigned __int8 *)(v108 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  uint64_t v72 = swift_allocObject();
  sub_24FAF8BD4(v70, v72 + v71, type metadata accessor for RateLimitTextView);
  sub_24FAF7714();
  uint64_t v73 = v104;
  sub_24FB47AF8();
  swift_release();
  sub_24FAD5794(v69, &qword_269A4EEE8);
  uint64_t v75 = v109;
  uint64_t v74 = v110;
  uint64_t v76 = v106;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v106, v73, v110);
  uint64_t v77 = v114;
  sub_24FAD5834(v68, v114, &qword_269A4EF10);
  uint64_t v78 = v75;
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  uint64_t v80 = v73;
  uint64_t v81 = v74;
  v79(v73, v76, v74);
  uint64_t v82 = v112;
  sub_24FAD5834(v77, v112, &qword_269A4EF10);
  uint64_t v83 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF38);
  uint64_t v84 = v82 + v83[12];
  *(void *)uint64_t v84 = 0;
  *(unsigned char *)(v84 + 8) = 1;
  v79((char *)(v82 + v83[16]), v80, v81);
  uint64_t v85 = v82 + v83[20];
  *(void *)uint64_t v85 = 0;
  *(unsigned char *)(v85 + 8) = 1;
  uint64_t v86 = *(void (**)(char *, uint64_t))(v78 + 8);
  v86(v76, v81);
  sub_24FAD5794(v113, &qword_269A4EF10);
  v86(v80, v81);
  return sub_24FAD5794(v114, &qword_269A4EF10);
}

uint64_t sub_24FAF4E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v98 = a1;
  uint64_t v2 = sub_24FB47398();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v97 = &v80[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_24FB471A8();
  uint64_t v94 = *(void *)(v4 - 8);
  uint64_t v95 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v91 = &v80[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v89 = &v80[-v7];
  uint64_t v96 = sub_24FB47E98();
  uint64_t v93 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v92 = &v80[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = sub_24FB47318();
  uint64_t v87 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v10 = &v80[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF30) - 8;
  MEMORY[0x270FA5388](v90);
  uint64_t v88 = &v80[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RateLimitTextView(0) + 20));
  uint64_t v13 = v12[1];
  uint64_t v99 = *v12;
  uint64_t v100 = v13;
  unint64_t v85 = sub_24FADA9E0();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_24FB47A18();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_24FB47598();
  uint64_t v19 = sub_24FB479F8();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v83 = sub_24FB479B8();
  uint64_t v82 = v24;
  uint64_t v84 = v25;
  int v81 = v26 & 1;
  sub_24FADAA34(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v27 = v12[3];
  uint64_t v99 = v12[2];
  uint64_t v100 = v27;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_24FB47A18();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_24FB47308();
  uint64_t v33 = v86;
  uint64_t v34 = sub_24FB479A8();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_24FADAA34(v28, v30, v32);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v10, v33);
  uint64_t v39 = v83;
  uint64_t v40 = v82;
  LOBYTE(v30) = v81;
  uint64_t v86 = sub_24FB479B8();
  uint64_t v42 = v41;
  uint64_t v87 = v43;
  LOBYTE(v28) = v44 & 1;
  sub_24FADAA34(v34, v36, v38);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v39, v40, v30);
  swift_bridgeObjectRelease();
  sub_24FB47958();
  uint64_t v45 = v86;
  uint64_t v46 = sub_24FB479C8();
  uint64_t v48 = v47;
  char v50 = v49;
  uint64_t v52 = v51;
  swift_release();
  sub_24FADAA34(v45, v42, v28);
  swift_bridgeObjectRelease();
  uint64_t v53 = v89;
  sub_24FAF7844(&qword_269A4EEC0, MEMORY[0x263F18520], 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v89);
  uint64_t v55 = v94;
  uint64_t v54 = v95;
  uint64_t v56 = v91;
  (*(void (**)(unsigned char *, void, uint64_t))(v94 + 104))(v91, *MEMORY[0x263F18508], v95);
  uint64_t v57 = v56;
  LOBYTE(v56) = sub_24FB47198();
  uint64_t v58 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
  v58(v57, v54);
  v58(v53, v54);
  uint64_t v60 = v92;
  uint64_t v59 = v93;
  uint64_t v61 = (unsigned int *)MEMORY[0x263F1B950];
  if ((v56 & 1) == 0) {
    uint64_t v61 = (unsigned int *)MEMORY[0x263F1B968];
  }
  uint64_t v62 = v96;
  (*(void (**)(unsigned char *, void, uint64_t))(v93 + 104))(v92, *v61, v96);
  char v63 = v50 & 1;
  uint64_t v64 = v59;
  uint64_t v65 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 16);
  uint64_t v66 = (uint64_t)v97;
  v65(v97, v60, v62);
  uint64_t v67 = (uint64_t)v88;
  sub_24FAF7518(v66, (uint64_t)&v88[*(int *)(v90 + 44)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v67 = v46;
  *(void *)(v67 + 8) = v48;
  *(unsigned char *)(v67 + 16) = v63;
  *(void *)(v67 + 24) = v52;
  sub_24FAE9618(v46, v48, v63);
  swift_bridgeObjectRetain();
  sub_24FAF83CC(v66, MEMORY[0x263F190D8]);
  (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v60, v62);
  sub_24FADAA34(v46, v48, v63);
  swift_bridgeObjectRelease();
  char v68 = sub_24FB47828();
  sub_24FB47178();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v77 = v98;
  sub_24FAD5834(v67, v98, &qword_269A4EF30);
  uint64_t v78 = v77 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEE8) + 36);
  *(unsigned char *)uint64_t v78 = v68;
  *(void *)(v78 + 8) = v70;
  *(void *)(v78 + 16) = v72;
  *(void *)(v78 + 24) = v74;
  *(void *)(v78 + 32) = v76;
  *(unsigned char *)(v78 + 40) = 0;
  return sub_24FAD5794(v67, &qword_269A4EF30);
}

uint64_t sub_24FAF55AC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24FB46F68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RateLimitTextView(0);
  sub_24FB46F58();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_24FAD5794((uint64_t)v2, &qword_269A4E528);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = objc_msgSend(self, sel_defaultWorkspace);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (void *)sub_24FB46F18();
    sub_24FAF1838(MEMORY[0x263F8EE78]);
    uint64_t v11 = (void *)sub_24FB47FB8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_openSensitiveURL_withOptions_, v10, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24FAF57C8(uint64_t a1)
{
  uint64_t v2 = sub_24FB471A8();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24FB47418();
}

uint64_t sub_24FAF5894(uint64_t a1)
{
  return sub_24FAF5940(a1, qword_269A4EE58);
}

uint64_t static Logger.sessionTimeout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAF59CC(&qword_269A4E2B8, (uint64_t)qword_269A4EE58, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24FAF591C(uint64_t a1)
{
  return sub_24FAF5940(a1, qword_269A4EE70);
}

uint64_t sub_24FAF5940(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24FB470C8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_24FB47098();
  return sub_24FB470B8();
}

uint64_t static Logger.responseTapGesture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAF59CC(&qword_269A4E2C0, (uint64_t)qword_269A4EE70, a1);
}

uint64_t sub_24FAF59CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24FB470C8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_24FAF5A64()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TextGenerationView(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    a1[5] = a2[5];
    uint64_t v10 = type metadata accessor for GenerativeRichTextResultSnippetModel();
    uint64_t v11 = *(int *)(v10 + 32);
    __dst = (char *)v7 + v11;
    uint64_t v30 = v10;
    uint64_t v28 = (char *)a2 + v11;
    uint64_t v12 = sub_24FB46F68();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v28, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(__dst, v28, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v28, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(void *)((char *)v7 + *(int *)(v30 + 36)) = *(void *)((char *)a2 + *(int *)(v30 + 36));
    uint64_t v15 = *(int *)(v30 + 40);
    uint64_t v16 = (void *)((char *)v7 + v15);
    char v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    if (v18)
    {
      *uint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v17[3];
      void v16[2] = v17[2];
      v16[3] = v19;
      uint64_t v20 = v17[4];
      uint64_t v21 = v17[5];
      v16[4] = v20;
      v16[5] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v22;
      *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
    }
    uint64_t v23 = a3[6];
    *(void *)((char *)v7 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)v7 + v23) = *(void *)((char *)a2 + v23);
    uint64_t v24 = a3[8];
    *(void *)((char *)v7 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)v7 + v24) = *(void *)((char *)a2 + v24);
    uint64_t v25 = a3[10];
    *(void *)((char *)v7 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v7 + v25) = *(void *)((char *)a2 + v25);
    *((unsigned char *)v7 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for TextGenerationView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v3 = a1 + *(int *)(v2 + 32);
  uint64_t v4 = sub_24FB46F68();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v2 + 40) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TextGenerationView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v9 = *(int *)(v8 + 32);
  __dst = (char *)a1 + v9;
  uint64_t v28 = v8;
  char v26 = (char *)a2 + v9;
  uint64_t v10 = sub_24FB46F68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v26, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(__dst, v26, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v26, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(v28 + 36)) = *(void *)((char *)a2 + *(int *)(v28 + 36));
  uint64_t v14 = *(int *)(v28 + 40);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  if (v17)
  {
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v16[3];
    _OWORD v15[2] = v16[2];
    v15[3] = v18;
    uint64_t v19 = v16[4];
    uint64_t v20 = v16[5];
    v15[4] = v19;
    v15[5] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v21;
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  }
  uint64_t v22 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  uint64_t v24 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextGenerationView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v6 = v5[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v5[10];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = *(void *)((char *)a1 + v15 + 8);
  uint64_t v19 = *(void *)((char *)a2 + v15 + 8);
  if (v18)
  {
    if (v19)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v16[2] = v17[2];
      v16[3] = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16[4] = v17[4];
      v16[5] = v17[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24FAF6414((uint64_t)v16);
      long long v21 = *((_OWORD *)v17 + 1);
      long long v20 = *((_OWORD *)v17 + 2);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      *((_OWORD *)v16 + 2) = v20;
    }
  }
  else if (v19)
  {
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    void v16[2] = v17[2];
    v16[3] = v17[3];
    v16[4] = v17[4];
    v16[5] = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)v17;
    long long v23 = *((_OWORD *)v17 + 2);
    *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
    *((_OWORD *)v16 + 2) = v23;
    *(_OWORD *)uint64_t v16 = v22;
  }
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_24FAF6414(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for TextGenerationView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v7 = v6[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24FB46F68();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  uint64_t v13 = v6[10];
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  v14[2] = v15[2];
  uint64_t v17 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

void *assignWithTake for TextGenerationView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v27 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v8 = v27[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24FB46F68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(void *)((char *)a1 + v27[9]) = *(void *)((char *)a2 + v27[9]);
  swift_bridgeObjectRelease();
  uint64_t v17 = v27[10];
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  if (!*(void *)((char *)a1 + v17 + 8))
  {
LABEL_11:
    long long v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    *(_OWORD *)(v18 + 32) = *((_OWORD *)v19 + 2);
    goto LABEL_12;
  }
  uint64_t v20 = *((void *)v19 + 1);
  if (!v20)
  {
    sub_24FAF6414(v18);
    goto LABEL_11;
  }
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v19 + 3);
  *(void *)(v18 + 16) = *((void *)v19 + 2);
  *(void *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v19 + 5);
  *(void *)(v18 + 32) = *((void *)v19 + 4);
  *(void *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
LABEL_12:
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_release();
  uint64_t v24 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextGenerationView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAF68E0);
}

uint64_t sub_24FAF68E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TextGenerationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAF69B4);
}

uint64_t sub_24FAF69B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for GenerativeRichTextResultSnippetModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FAF6A70()
{
  uint64_t result = type metadata accessor for GenerativeRichTextResultSnippetModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FAF6B34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_24FAF6C04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24FB471A8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v11[3];
    void v10[2] = v11[2];
    v10[3] = v13;
    uint64_t v14 = v11[5];
    v10[4] = v11[4];
    v10[5] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24FAF6D4C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_24FB471A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_24FAF6E00(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24FB471A8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24FAF6EF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24FAD5794((uint64_t)a1, &qword_269A4EEC0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24FB471A8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = *(void *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24FAF703C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24FB471A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  return a1;
}

char *sub_24FAF7120(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24FAD5794((uint64_t)a1, &qword_269A4EEC0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24FB471A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 3);
  *((void *)v9 + 2) = *((void *)v10 + 2);
  *((void *)v9 + 3) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v10 + 5);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  *((void *)v9 + 5) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24FAF723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAF7250);
}

uint64_t sub_24FAF7250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_24FAF7318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAF732C);
}

uint64_t sub_24FAF732C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RateLimitTextView(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A4EED0);
}

void sub_24FAF7410()
{
  sub_24FAF74A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24FAF74A4()
{
  if (!qword_269A4EEE0)
  {
    sub_24FB471A8();
    unint64_t v0 = sub_24FB471C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A4EEE0);
    }
  }
}

uint64_t sub_24FAF74FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FAF7518(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAF7580()
{
  uint64_t v1 = *(void *)(type metadata accessor for RateLimitTextView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EEC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24FB471A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24FAF76B4()
{
  type metadata accessor for RateLimitTextView(0);
  return sub_24FAF55AC();
}

unint64_t sub_24FAF7714()
{
  unint64_t result = qword_269A4EF20;
  if (!qword_269A4EF20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EEE8);
    sub_24FAF7790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EF20);
  }
  return result;
}

unint64_t sub_24FAF7790()
{
  unint64_t result = qword_269A4EF28;
  if (!qword_269A4EF28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EF30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EF28);
  }
  return result;
}

uint64_t sub_24FAF7804@<X0>(uint64_t a1@<X8>)
{
  return sub_24FAF7844(&qword_269A4EF68, MEMORY[0x263F18948], 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_24FAF7844@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_24FB474B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FAD5834(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_24FB48308();
    uint64_t v21 = sub_24FB477E8();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      long long v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)long long v23 = 136315138;
      uint64_t v29 = sub_24FAF7AFC(v28, v26, &v30);
      sub_24FB48398();
      _os_log_impl(&dword_24FACE000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25336F100](v24, -1, -1);
      MEMORY[0x25336F100](v23, -1, -1);
    }

    sub_24FB474A8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_24FAF7AFC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24FAF7BD0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24FAF842C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24FAF842C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24FAF7BD0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24FB483A8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24FAF7D8C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24FB484B8();
  if (!v8)
  {
    sub_24FB48508();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24FB48538();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24FAF7D8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24FAF7E24(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24FAF8004(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24FAF8004(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24FAF7E24(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24FAF7F9C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24FB48458();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24FB48508();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24FB480F8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24FB48538();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24FB48508();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24FAF7F9C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF50);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24FAF8004(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

unint64_t sub_24FAF8154(uint64_t a1)
{
  uint64_t v2 = sub_24FB483D8();
  return sub_24FAF8220(a1, v2);
}

unint64_t sub_24FAF8198(uint64_t a1, uint64_t a2)
{
  sub_24FB48728();
  sub_24FB480C8();
  uint64_t v4 = sub_24FB48748();
  return sub_24FAF82E8(a1, a2, v4);
}

_OWORD *sub_24FAF8210(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_24FAF8220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_24FAF8488(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25336E760](v9, a1);
      sub_24FAF84E4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24FAF82E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24FB48688() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24FB48688() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_24FAF83CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24FAF842C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24FAF8488(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24FAF84E4(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24FAF859C@<X0>(uint64_t *a1@<X8>)
{
  AttributeScopes.markdownDocumentAttributes.getter();
  uint64_t result = type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
  *a1 = result;
  return result;
}

void sub_24FAF85CC()
{
}

void sub_24FAF85EC()
{
}

uint64_t sub_24FAF8614()
{
  return 8;
}

uint64_t sub_24FAF8620()
{
  return swift_release();
}

uint64_t sub_24FAF8628(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FAF8638()
{
  return sub_24FB47FE8();
}

void *sub_24FAF8680(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24FAF86F0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24FAF8740()
{
  unint64_t result = qword_269A4EFA0;
  if (!qword_269A4EFA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4EF80);
    sub_24FAF87EC(&qword_269A4EFA8, (void (*)(uint64_t))type metadata accessor for AttributionsTextView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4EFA0);
  }
  return result;
}

uint64_t sub_24FAF87EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAF8834(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24FAF8844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a7)
  {
    sub_24FAE9618(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_24FAE9618(a8, a9, a10 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24FAF88E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAF8910(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAF893C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAF8968(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24FAF8978(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v8 = *(unsigned char *)(a1 + 312);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    *(void *)(a1 + 304),
    v8);
  return a1;
}

uint64_t sub_24FAF8A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a7)
  {
    sub_24FADAA34(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_24FADAA34(a8, a9, a10 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_24FAF8AB4()
{
  return sub_24FB47408();
}

double sub_24FAF8ADC(_OWORD *a1)
{
  double result = 0.0;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 297) = 0u;
  return result;
}

uint64_t sub_24FAF8B1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAF8B78(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FAF8BD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAF8C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24FAF8CA0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24FAF8CB8()
{
  return sub_24FAD57F0(&qword_269A4EFD8, &qword_269A4EFE0);
}

uint64_t GenerativeTAHandoffView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GenerativeTAHandoffView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  sub_24FB47598();
  uint64_t v6 = sub_24FB479F8();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  sub_24FAF9058(v1, (uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t result = sub_24FAF90C0((uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v10 & 1;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = sub_24FAF9124;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  return result;
}

uint64_t type metadata accessor for GenerativeTAHandoffView()
{
  uint64_t result = qword_269A4F000;
  if (!qword_269A4F000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FAF8EA4()
{
  uint64_t v0 = sub_24FB47F88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269A4E2C8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24FB470C8();
  __swift_project_value_buffer(v4, (uint64_t)qword_269A4EFE8);
  uint64_t v5 = sub_24FB470A8();
  os_log_type_t v6 = sub_24FB482E8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_24FACE000, v5, v6, "Dismissing Siri by sending SAUICloseAssistant", v7, 2u);
    MEMORY[0x25336F100](v7, -1, -1);
  }

  sub_24FB47F38();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F64F10]), sel_init);
  sub_24FB47F68();

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_24FAF9058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeTAHandoffView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAF90C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeTAHandoffView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAF912C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_24FB47598();
  uint64_t v6 = sub_24FB479F8();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  sub_24FAF9058(v2, (uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t result = sub_24FAF90C0((uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v10 & 1;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = sub_24FAF9124;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_24FAF9288()
{
  uint64_t v0 = sub_24FB470C8();
  __swift_allocate_value_buffer(v0, qword_269A4EFE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269A4EFE8);
  sub_24FB47098();
  return sub_24FB470B8();
}

uint64_t static Logger.taHandoffView.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A4E2C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24FB470C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269A4EFE8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24FAF93A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for GenerativeTAHandoffView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for GenerativeTAHandoffView(uint64_t a1)
{
  uint64_t v2 = sub_24FB47F58();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for GenerativeTAHandoffView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for GenerativeTAHandoffView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for GenerativeTAHandoffView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for GenerativeTAHandoffView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeTAHandoffView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAF9634);
}

uint64_t sub_24FAF9634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GenerativeTAHandoffView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAF96B4);
}

uint64_t sub_24FAF96B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB47F58();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FAF9724()
{
  uint64_t result = sub_24FB47F58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24FAF97B4()
{
  unint64_t result = qword_269A4F010;
  if (!qword_269A4F010)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F010);
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(type metadata accessor for GenerativeTAHandoffView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24FB47F58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24FAF9904()
{
  type metadata accessor for GenerativeTAHandoffView();
  return sub_24FAF8EA4();
}

uint64_t sub_24FAF9964(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t AttributionsTextView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v44 = sub_24FB47EE8();
  uint64_t v4 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (void *)((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v45 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24FB47F28();
  uint64_t v8 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  char v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (int *)type metadata accessor for AttributionsTextView();
  uint64_t v12 = (char *)a2 + v11[5];
  type metadata accessor for CGSize(0);
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  sub_24FB47CE8();
  uint64_t v13 = v49;
  *(_OWORD *)uint64_t v12 = v48;
  *((void *)v12 + 2) = v13;
  *(uint64_t *)((char *)a2 + v11[8]) = 0x4020000000000000;
  uint64_t v14 = (uint64_t)a2 + v11[6];
  sub_24FAFD8B0(a1, v14, (uint64_t (*)(void))type metadata accessor for GenerativeResultAttributionSnippetModel);
  uint64_t v15 = *(void *)(v14 + 32);
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v34 = v11;
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    *(void *)&long long v48 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24FAFC5D0(0, v16, 0);
    uint64_t v38 = v8 + 32;
    uint64_t v39 = (void (**)(void *, void, uint64_t))(v4 + 104);
    unsigned int v37 = *MEMORY[0x263F77518];
    v33[1] = v15;
    uint64_t v17 = v15 + 56;
    uint64_t v40 = v10;
    uint64_t v41 = v8;
    do
    {
      id v18 = objc_allocWithZone(MEMORY[0x263F64EE0]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = objc_msgSend(v18, sel_init);
      os_log_type_t v20 = v45;
      sub_24FB46F58();
      uint64_t v21 = sub_24FB46F68();
      uint64_t v22 = *(void *)(v21 - 8);
      long long v23 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
      {
        uint64_t v24 = v45;
        long long v23 = (void *)sub_24FB46F18();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
      }
      objc_msgSend(v19, sel_setPunchOutUri_, v23);

      unint64_t v26 = v43;
      uint64_t v25 = v44;
      *uint64_t v43 = v19;
      (*v39)(v26, v37, v25);
      swift_bridgeObjectRetain();
      uint64_t v27 = v40;
      sub_24FB47F18();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24FAFC5D0(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v48;
      }
      uint64_t v29 = v41;
      unint64_t v31 = *(void *)(v28 + 16);
      unint64_t v30 = *(void *)(v28 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_24FAFC5D0(v30 > 1, v31 + 1, 1);
        uint64_t v28 = v48;
      }
      v17 += 32;
      *(void *)(v28 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v28+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v31, v27, v42);
      *(void *)&long long v48 = v28;
      --v16;
    }
    while (v16);
    a1 = v35;
    a2 = v36;
    uint64_t v11 = v34;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  sub_24FAFC5F0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a2 + v11[7]) = v28;
  return result;
}

uint64_t AttributionsTextView.body.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F020);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F028);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F030);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(*(void *)&v0[*(int *)(type metadata accessor for AttributionsTextView() + 24) + 32] + 16))
  {
    *uint64_t v3 = sub_24FB47E38();
    v3[1] = v10;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F038);
    sub_24FAFAB20(v0, (uint64_t *)((char *)v3 + *(int *)(v11 + 44)));
    sub_24FAD5834((uint64_t)v3, (uint64_t)v6, &qword_269A4F020);
    swift_storeEnumTagMultiPayload();
    sub_24FAD57F0(&qword_269A4F040, &qword_269A4F030);
    sub_24FAD57F0(&qword_269A4F048, &qword_269A4F020);
    sub_24FB476C8();
    uint64_t v12 = (uint64_t)v3;
    uint64_t v13 = &qword_269A4F020;
  }
  else
  {
    *(void *)uint64_t v9 = sub_24FB47518();
    *((void *)v9 + 1) = 0;
    v9[16] = 0;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F050);
    sub_24FAFA108((uint64_t)v0, &v9[*(int *)(v14 + 44)]);
    sub_24FAD5834((uint64_t)v9, (uint64_t)v6, &qword_269A4F030);
    swift_storeEnumTagMultiPayload();
    sub_24FAD57F0(&qword_269A4F040, &qword_269A4F030);
    sub_24FAD57F0(&qword_269A4F048, &qword_269A4F020);
    sub_24FB476C8();
    uint64_t v12 = (uint64_t)v9;
    uint64_t v13 = &qword_269A4F030;
  }
  return sub_24FAD5794(v12, v13);
}

uint64_t sub_24FAFA108@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_24FB47588();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for AttributionsTextView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F088);
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v7 = v42;
  uint64_t v8 = MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v41 - v10;
  uint64_t v47 = sub_24FAFA580();
  uint64_t v48 = v11;
  char v49 = v12 & 1;
  uint64_t v50 = v13;
  sub_24FAFD8B0(a1, (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AttributionsTextView);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_24FAFD91C((uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_24FB47AF8();
  swift_release();
  sub_24FADAA34(v47, v48, v49);
  swift_bridgeObjectRelease();
  sub_24FB47578();
  sub_24FB47568();
  sub_24FB47558();
  sub_24FB47568();
  sub_24FB475A8();
  uint64_t v16 = sub_24FB479F8();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_24FB47958();
  sub_24FB478D8();
  sub_24FB47928();
  swift_release();
  uint64_t v21 = sub_24FB479C8();
  uint64_t v23 = v22;
  char v25 = v24;
  swift_release();
  sub_24FADAA34(v16, v18, v20);
  swift_bridgeObjectRelease();
  LODWORD(v47) = sub_24FB47738();
  uint64_t v26 = sub_24FB479A8();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_24FADAA34(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v34 = v43;
  uint64_t v35 = v44;
  uint64_t v36 = v45;
  v33(v44, v43, v45);
  unsigned int v37 = v46;
  v33(v46, v35, v36);
  uint64_t v38 = &v37[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4F090) + 48)];
  *(void *)uint64_t v38 = v26;
  *((void *)v38 + 1) = v28;
  v38[16] = v32;
  *((void *)v38 + 3) = v30;
  sub_24FAE9618(v26, v28, v32);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v42 + 8);
  swift_bridgeObjectRetain();
  v39(v34, v36);
  sub_24FADAA34(v26, v28, v32);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v39)(v35, v36);
}

uint64_t sub_24FAFA580()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F098);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v65 = &v57[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = sub_24FB47318();
  uint64_t v70 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v3 = &v57[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24FB47CA8();
  uint64_t v4 = sub_24FB47A28();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_24FB47958();
  sub_24FB478D8();
  sub_24FB47928();
  swift_release();
  uint64_t v9 = sub_24FB479C8();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  sub_24FADAA34(v4, v6, v8);
  swift_bridgeObjectRelease();
  sub_24FB47308();
  uint64_t v66 = v3;
  uint64_t v14 = v68;
  uint64_t v60 = sub_24FB479A8();
  uint64_t v59 = v15;
  uint64_t v61 = v16;
  int v58 = v17 & 1;
  sub_24FADAA34(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v70 + 8);
  v70 += 8;
  uint64_t v67 = v18;
  v18(v3, v14);
  sub_24FB47598();
  uint64_t v19 = sub_24FB479F8();
  uint64_t v21 = v20;
  LOBYTE(v11) = v22 & 1;
  type metadata accessor for AttributionsTextView();
  uint64_t v23 = sub_24FB478B8();
  uint64_t v24 = (uint64_t)v65;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v65, 1, 1, v23);
  sub_24FB478F8();
  sub_24FAD5794(v24, &qword_269A4F098);
  uint64_t v25 = sub_24FB479C8();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_release();
  sub_24FADAA34(v19, v21, v11);
  swift_bridgeObjectRelease();
  uint64_t v30 = v60;
  uint64_t v31 = v59;
  LOBYTE(v11) = v58;
  uint64_t v32 = sub_24FB479B8();
  uint64_t v63 = v33;
  uint64_t v64 = v32;
  uint64_t v65 = v34;
  int v62 = v35 & 1;
  sub_24FADAA34(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v30, v31, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24FB47598();
  uint64_t v36 = sub_24FB479F8();
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  sub_24FB47958();
  sub_24FB478E8();
  sub_24FB47928();
  swift_release();
  uint64_t v41 = sub_24FB479C8();
  uint64_t v43 = v42;
  LOBYTE(v21) = v44;
  swift_release();
  sub_24FADAA34(v36, v38, v40);
  swift_bridgeObjectRelease();
  uint64_t v45 = v66;
  sub_24FB47308();
  uint64_t v46 = v68;
  uint64_t v47 = sub_24FB479A8();
  uint64_t v49 = v48;
  char v51 = v50 & 1;
  sub_24FADAA34(v41, v43, v21 & 1);
  swift_bridgeObjectRelease();
  v67(v45, v46);
  uint64_t v52 = v63;
  uint64_t v53 = v64;
  LOBYTE(v41) = v62;
  uint64_t v54 = sub_24FB479B8();
  uint64_t v69 = v55;
  uint64_t v70 = v54;
  sub_24FADAA34(v47, v49, v51);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v53, v52, v41);
  swift_bridgeObjectRelease();
  return v70;
}

uint64_t sub_24FAFAB20@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  v223 = a1;
  long long v214 = a2;
  uint64_t v204 = sub_24FB47EE8();
  uint64_t v216 = *(void *)(v204 - 8);
  MEMORY[0x270FA5388](v204);
  uint64_t v203 = (uint64_t *)((char *)&v186 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0A0);
  uint64_t v211 = *(void *)(v213 - 8);
  MEMORY[0x270FA5388](v213);
  uint64_t v205 = (char *)&v186 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0A8) - 8;
  MEMORY[0x270FA5388](v209);
  uint64_t v206 = (char *)&v186 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0B0) - 8;
  MEMORY[0x270FA5388](v210);
  uint64_t v207 = (uint64_t)&v186 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0B8) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v212);
  uint64_t v219 = (uint64_t)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v220 = (uint64_t)&v186 - v8;
  uint64_t v9 = type metadata accessor for AttributionsTextView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v222 = (int *)(v9 - 8);
  uint64_t v202 = v10;
  uint64_t v201 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v200 = (uint64_t)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0C0);
  uint64_t v218 = *(void *)(v208 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v208);
  long long v217 = (char *)&v186 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v221 = (char *)&v186 - v14;
  uint64_t v15 = sub_24FB47588();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v199 = (char *)&v186 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F098);
  MEMORY[0x270FA5388](v17 - 8);
  long long v215 = (char *)&v186 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24FAFA580();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_24FB47958();
  uint64_t v24 = sub_24FB479C8();
  uint64_t v26 = v25;
  char v28 = v27;
  swift_release();
  sub_24FADAA34(v19, v21, v23);
  swift_bridgeObjectRelease();
  LODWORD(v225) = sub_24FB47738();
  uint64_t v29 = sub_24FB479A8();
  uint64_t v196 = v30;
  uint64_t v197 = v29;
  uint64_t v198 = v31;
  LODWORD(v195) = v32 & 1;
  sub_24FADAA34(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_24FAFBD44();
  uint64_t v35 = v34;
  LOBYTE(v26) = v36 & 1;
  sub_24FB47958();
  uint64_t v37 = sub_24FB479C8();
  uint64_t v39 = v38;
  char v41 = v40;
  swift_release();
  sub_24FADAA34(v33, v35, v26);
  swift_bridgeObjectRelease();
  LODWORD(v225) = sub_24FB47738();
  uint64_t v42 = sub_24FB479A8();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_24FADAA34(v37, v39, v41 & 1);
  swift_bridgeObjectRelease();
  uint64_t v48 = v196;
  uint64_t v47 = v197;
  LOBYTE(v26) = (_BYTE)v195;
  uint64_t v49 = sub_24FB479B8();
  uint64_t v189 = v50;
  uint64_t v190 = v49;
  uint64_t v192 = v51;
  int v187 = v52 & 1;
  sub_24FADAA34(v42, v44, v46);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v47, v48, v26);
  swift_bridgeObjectRelease();
  sub_24FB47598();
  uint64_t v53 = sub_24FB479F8();
  uint64_t v55 = v54;
  LOBYTE(v24) = v56 & 1;
  uint64_t v198 = v222[10];
  uint64_t v196 = sub_24FB478B8();
  uint64_t v57 = *(void *)(v196 - 8);
  uint64_t v195 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  uint64_t v197 = v57 + 56;
  uint64_t v58 = (uint64_t)v215;
  v195(v215, 1, 1, v196);
  sub_24FB478F8();
  sub_24FAD5794(v58, &qword_269A4F098);
  uint64_t v59 = sub_24FB479C8();
  uint64_t v61 = v60;
  char v63 = v62;
  swift_release();
  sub_24FADAA34(v53, v55, v24);
  swift_bridgeObjectRelease();
  uint64_t v65 = v189;
  uint64_t v64 = v190;
  LOBYTE(v24) = v187;
  uint64_t v193 = sub_24FB479B8();
  uint64_t v194 = v66;
  uint64_t v191 = v67;
  int v188 = v68 & 1;
  sub_24FADAA34(v59, v61, v63 & 1);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v64, v65, v24);
  swift_bridgeObjectRelease();
  sub_24FB47598();
  uint64_t v69 = sub_24FB479F8();
  uint64_t v71 = v70;
  LOBYTE(v24) = v72 & 1;
  sub_24FB47958();
  sub_24FB478D8();
  sub_24FB47928();
  swift_release();
  uint64_t v73 = sub_24FB479C8();
  uint64_t v75 = v74;
  LOBYTE(v65) = v76;
  swift_release();
  sub_24FADAA34(v69, v71, v24);
  swift_bridgeObjectRelease();
  LODWORD(v225) = sub_24FB47738();
  uint64_t v77 = sub_24FB479A8();
  uint64_t v79 = v78;
  LOBYTE(v69) = v80 & 1;
  sub_24FADAA34(v73, v75, v65 & 1);
  swift_bridgeObjectRelease();
  uint64_t v81 = v193;
  uint64_t v82 = v191;
  LOBYTE(v73) = v188;
  uint64_t v83 = sub_24FB479B8();
  uint64_t v189 = v84;
  uint64_t v190 = v83;
  uint64_t v192 = v85;
  int v187 = v86 & 1;
  sub_24FADAA34(v77, v79, v69);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v81, v82, v73);
  swift_bridgeObjectRelease();
  sub_24FB47598();
  uint64_t v87 = sub_24FB479F8();
  uint64_t v89 = v88;
  LOBYTE(v24) = v90 & 1;
  uint64_t v91 = (uint64_t)v215;
  v195(v215, 1, 1, v196);
  sub_24FB478F8();
  sub_24FAD5794(v91, &qword_269A4F098);
  uint64_t v92 = sub_24FB479C8();
  uint64_t v94 = v93;
  char v96 = v95;
  swift_release();
  LOBYTE(v79) = v96 & 1;
  sub_24FADAA34(v87, v89, v24);
  swift_bridgeObjectRelease();
  LODWORD(v225) = sub_24FB47738();
  uint64_t v97 = sub_24FB479A8();
  uint64_t v99 = v98;
  LOBYTE(v89) = v100 & 1;
  sub_24FADAA34(v92, v94, v79);
  swift_bridgeObjectRelease();
  uint64_t v102 = v189;
  uint64_t v101 = v190;
  LOBYTE(v73) = v187;
  uint64_t v103 = sub_24FB479B8();
  uint64_t v194 = v104;
  uint64_t v195 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v103;
  uint64_t v196 = v105;
  LODWORD(v193) = v106 & 1;
  sub_24FADAA34(v97, v99, v89);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v101, v102, v73);
  swift_bridgeObjectRelease();
  sub_24FB47578();
  sub_24FB47568();
  sub_24FB47558();
  sub_24FB47568();
  sub_24FB475A8();
  uint64_t v107 = sub_24FB479F8();
  uint64_t v109 = v108;
  LOBYTE(v24) = v110 & 1;
  sub_24FB47958();
  sub_24FB478D8();
  sub_24FB47928();
  swift_release();
  uint64_t v111 = sub_24FB479C8();
  uint64_t v113 = v112;
  LOBYTE(v79) = v114;
  swift_release();
  LOBYTE(v101) = v79 & 1;
  sub_24FADAA34(v107, v109, v24);
  swift_bridgeObjectRelease();
  LODWORD(v225) = sub_24FB47738();
  uint64_t v115 = sub_24FB479A8();
  uint64_t v117 = v116;
  LOBYTE(v89) = v118 & 1;
  sub_24FADAA34(v111, v113, v101);
  swift_bridgeObjectRelease();
  uint64_t v120 = v194;
  uint64_t v119 = (uint64_t)v195;
  LOBYTE(v113) = v193;
  uint64_t v121 = sub_24FB479B8();
  uint64_t v198 = v122;
  uint64_t v199 = (char *)v121;
  long long v215 = v123;
  LODWORD(v197) = v124 & 1;
  sub_24FADAA34(v115, v117, v89);
  swift_bridgeObjectRelease();
  sub_24FADAA34(v119, v120, v113);
  swift_bridgeObjectRelease();
  uint64_t v125 = sub_24FAFA580();
  uint64_t v127 = v126;
  LOBYTE(v113) = v128 & 1;
  sub_24FB47958();
  uint64_t v129 = sub_24FB479C8();
  uint64_t v131 = v130;
  LOBYTE(v111) = v132;
  swift_release();
  LOBYTE(v117) = v111 & 1;
  sub_24FADAA34(v125, v127, v113);
  swift_bridgeObjectRelease();
  *(void *)&long long v225 = sub_24FB47BF8();
  uint64_t v133 = sub_24FB479A8();
  uint64_t v195 = v134;
  uint64_t v196 = v135;
  LOBYTE(v113) = v136;
  sub_24FADAA34(v129, v131, v117);
  swift_release();
  swift_bridgeObjectRelease();
  char v137 = v223;
  uint64_t v138 = v200;
  sub_24FAFD8B0((uint64_t)v223, v200, (uint64_t (*)(void))type metadata accessor for AttributionsTextView);
  unint64_t v139 = (*(unsigned __int8 *)(v202 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80);
  uint64_t v140 = swift_allocObject();
  sub_24FAFD91C(v138, v140 + v139);
  uint64_t v141 = sub_24FB47E58();
  *(void *)&long long v225 = v133;
  *((void *)&v225 + 1) = v195;
  LOBYTE(v226) = v113 & 1;
  uint64_t v227 = v196;
  unint64_t v228 = sub_24FAFD988;
  uint64_t v229 = v140;
  uint64_t v230 = v141;
  uint64_t v231 = v142;
  sub_24FAFD8B0((uint64_t)v137, v138, (uint64_t (*)(void))type metadata accessor for AttributionsTextView);
  uint64_t v143 = swift_allocObject();
  sub_24FAFD91C(v138, v143 + v139);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0C8);
  sub_24FAFDC44();
  sub_24FB47AF8();
  swift_release();
  sub_24FADAA34(v225, *((uint64_t *)&v225 + 1), v226);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v144 = v137;
  uint64_t v145 = sub_24FAFBD44();
  uint64_t v147 = v146;
  LOBYTE(v137) = v148 & 1;
  uint64_t v149 = *(void *)&v144[v222[9]];
  uint64_t v151 = v203;
  uint64_t v150 = v204;
  void *v203 = v149;
  (*(void (**)(void *, void, uint64_t))(v216 + 104))(v151, *MEMORY[0x263F77520], v150);
  swift_bridgeObjectRetain();
  uint64_t v152 = sub_24FB47978();
  uint64_t v202 = v153;
  uint64_t v155 = v154;
  LOBYTE(v139) = v156 & 1;
  sub_24FADAA34(v145, v147, (char)v137);
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v216 + 8))(v151, v150);
  uint64_t v157 = v202;
  *(void *)&long long v225 = v152;
  *((void *)&v225 + 1) = v202;
  LOBYTE(v226) = v139;
  uint64_t v227 = v155;
  uint64_t v158 = v205;
  sub_24FB47A38();
  sub_24FADAA34(v152, v157, v139);
  swift_bridgeObjectRelease();
  uint64_t v159 = sub_24FB47958();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v161 = v211;
  uint64_t v162 = (uint64_t)v206;
  uint64_t v163 = v158;
  unint64_t v164 = v158;
  uint64_t v165 = v213;
  (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v206, v163, v213);
  uint64_t v166 = (uint64_t *)(v162 + *(int *)(v209 + 44));
  *uint64_t v166 = KeyPath;
  v166[1] = v159;
  (*(void (**)(char *, uint64_t))(v161 + 8))(v164, v165);
  uint64_t v167 = sub_24FB47BF8();
  uint64_t v168 = v207;
  sub_24FAD5834(v162, v207, &qword_269A4F0A8);
  *(void *)(v168 + *(int *)(v210 + 44)) = v167;
  sub_24FAD5794(v162, &qword_269A4F0A8);
  uint64_t v169 = &v223[v222[7]];
  uint64_t v170 = *((void *)v169 + 2);
  long long v225 = *(_OWORD *)v169;
  uint64_t v226 = v170;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0E8);
  sub_24FB47CF8();
  uint64_t v171 = v224;
  uint64_t v172 = v219;
  sub_24FAD5834(v168, v219, &qword_269A4F0B0);
  uint64_t v173 = (void *)(v172 + *(int *)(v212 + 44));
  *uint64_t v173 = v171;
  v173[1] = 0;
  sub_24FAD5794(v168, &qword_269A4F0B0);
  uint64_t v174 = v220;
  sub_24FAFDCEC(v172, v220);
  LOBYTE(v147) = v197;
  LOBYTE(v225) = v197;
  int v175 = v217;
  v223 = *(char **)(v218 + 16);
  uint64_t v176 = v208;
  ((void (*)(char *, char *, uint64_t))v223)(v217, v221, v208);
  sub_24FAD5834(v174, v172, &qword_269A4F0B8);
  uint64_t v177 = v214;
  uint64_t v178 = v215;
  uint64_t v179 = v198;
  uint64_t v180 = (uint64_t)v199;
  *long long v214 = v199;
  v177[1] = v179;
  *((unsigned char *)v177 + 16) = v147;
  v177[3] = v178;
  char v181 = v177;
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0F0);
  ((void (*)(char *, char *, uint64_t))v223)((char *)v181 + *(int *)(v182 + 48), v175, v176);
  uint64_t v183 = v219;
  sub_24FAD5834(v219, (uint64_t)v181 + *(int *)(v182 + 64), &qword_269A4F0B8);
  sub_24FAE9618(v180, v179, v147);
  swift_bridgeObjectRetain();
  sub_24FAE9618(v180, v179, v147);
  swift_bridgeObjectRetain();
  sub_24FAD5794(v220, &qword_269A4F0B8);
  long long v184 = *(void (**)(char *, uint64_t))(v218 + 8);
  v184(v221, v176);
  sub_24FADAA34(v180, v179, v147);
  swift_bridgeObjectRelease();
  sub_24FAD5794(v183, &qword_269A4F0B8);
  v184(v217, v176);
  sub_24FADAA34(v180, v179, v225);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAFBD44()
{
  if (*(void *)(*(void *)(v0 + *(int *)(type metadata accessor for AttributionsTextView() + 24) + 32) + 16))
  {
    sub_24FAFC3C0();
    sub_24FB47598();
    uint64_t v1 = sub_24FB479F8();
    uint64_t v3 = v2;
    char v5 = v4 & 1;
    sub_24FB47958();
    sub_24FB478D8();
    sub_24FB47928();
    swift_release();
    uint64_t v6 = sub_24FB479C8();
    uint64_t v8 = v7;
    char v10 = v9;
    swift_release();
    sub_24FADAA34(v1, v3, v5);
    swift_bridgeObjectRelease();
    sub_24FB47738();
    uint64_t v11 = sub_24FB479A8();
    sub_24FADAA34(v6, v8, v10 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24FB47598();
    return sub_24FB479F8();
  }
  return v11;
}

uint64_t sub_24FAFBEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v5 = sub_24FB47268();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = type metadata accessor for AttributionsTextView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24FB47BF8();
  sub_24FAFD8B0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AttributionsTextView);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  sub_24FAFD91C((uint64_t)v11, v15 + v13);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *a3 = v12;
  a3[1] = (uint64_t)sub_24FAFDFCC;
  a3[2] = v15;
  a3[3] = 0;
  a3[4] = 0;
  return result;
}

uint64_t sub_24FAFC0F4()
{
  return sub_24FB47D08();
}

uint64_t sub_24FAFC174(uint64_t a1)
{
  uint64_t v2 = sub_24FB472B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for AttributionsTextView() + 24);
  uint64_t v14 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  sub_24FAD5834(v13 + *(int *)(v14 + 28), (uint64_t)v8, &qword_269A4E528);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_24FAD5794((uint64_t)v8, &qword_269A4E528);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_24FAF7804((uint64_t)v5);
  sub_24FB47278();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24FAFC3C0()
{
  uint64_t result = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for AttributionsTextView() + 24) + 32) + 16);
  if (result)
  {
    if (result == 1)
    {
      return 0x72756F7320312820;
    }
    else
    {
      sub_24FB48668();
      sub_24FB480E8();
      swift_bridgeObjectRelease();
      sub_24FB480E8();
      return 10272;
    }
  }
  return result;
}

uint64_t sub_24FAFC494()
{
  return sub_24FB47468();
}

uint64_t sub_24FAFC4B8(uint64_t a1)
{
  uint64_t v2 = sub_24FB472B8();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24FB47478();
}

uint64_t type metadata accessor for AttributionsTextView()
{
  uint64_t result = qword_269A4F060;
  if (!qword_269A4F060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FAFC5D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FAFE098(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FAFC5F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FAFC64C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributionsTextView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24FB472B8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v26 = a3;
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((void *)v11 + 2) = *((void *)v12 + 2);
    uint64_t v13 = (uint64_t *)((char *)a1 + v10);
    uint64_t v14 = (char *)a2 + v10;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v10 + 8);
    *uint64_t v13 = *(uint64_t *)((char *)a2 + v10);
    v13[1] = v15;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v10 + 24);
    v13[2] = *(uint64_t *)((char *)a2 + v10 + 16);
    v13[3] = v16;
    v13[4] = *(uint64_t *)((char *)a2 + v10 + 32);
    uint64_t v17 = *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
    __dst = (char *)v13 + v17;
    uint64_t v18 = &v14[v17];
    uint64_t v19 = sub_24FB46F68();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v22 = *(int *)(v26 + 32);
    *(uint64_t *)((char *)a1 + *(int *)(v26 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v26 + 28));
    *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AttributionsTextView(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24FB472B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v7 = sub_24FB46F68();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AttributionsTextView(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24FB472B8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  uint64_t v11 = (void *)((char *)a1 + v8);
  uint64_t v12 = (char *)a2 + v8;
  uint64_t v13 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v11 = *(void *)((char *)a2 + v8);
  v11[1] = v13;
  uint64_t v14 = *(void *)((char *)a2 + v8 + 24);
  v11[2] = *(void *)((char *)a2 + v8 + 16);
  void v11[3] = v14;
  v11[4] = *(void *)((char *)a2 + v8 + 32);
  uint64_t v15 = *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  __dst = (char *)v11 + v15;
  uint64_t v16 = &v12[v15];
  uint64_t v17 = sub_24FB46F68();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v21 = *(int *)(v24 + 32);
  *(void *)((char *)a1 + *(int *)(v24 + 28)) = *(void *)((char *)v25 + *(int *)(v24 + 28));
  *(void *)((char *)a1 + v21) = *(void *)((char *)v25 + v21);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AttributionsTextView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24FAD5794((uint64_t)a1, &qword_269A4EF68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24FB472B8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *(void *)((char *)a2 + v10);
  v11[1] = *(void *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  void v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = (char *)v12 + v13;
  uint64_t v16 = sub_24FB46F68();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_11;
  }
  if (v20)
  {
LABEL_11:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_12:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

char *initializeWithTake for AttributionsTextView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24FB472B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  uint64_t v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  long long v14 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *(void *)&a2[v9 + 32];
  uint64_t v15 = *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v16 = &v12[v15];
  uint64_t v17 = &v13[v15];
  uint64_t v18 = sub_24FB46F68();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

char *assignWithTake for AttributionsTextView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_24FAD5794((uint64_t)a1, &qword_269A4EF68);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24FB472B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)&a2[v11 + 8];
  *(void *)uint64_t v12 = *(void *)&a2[v11];
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v13 + 3);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = v15;
  swift_bridgeObjectRelease();
  *((void *)v12 + 4) = *((void *)v13 + 4);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = sub_24FB46F68();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_10;
  }
  if (v23)
  {
LABEL_10:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_11:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionsTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FAFD464);
}

uint64_t sub_24FAFD464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F058);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionsTextView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FAFD590);
}

uint64_t sub_24FAFD590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F058);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for GenerativeResultAttributionSnippetModel();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24FAFD6A4()
{
  sub_24FAFD790();
  if (v0 <= 0x3F)
  {
    type metadata accessor for GenerativeResultAttributionSnippetModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24FAFD790()
{
  if (!qword_269A4F070)
  {
    sub_24FB472B8();
    unint64_t v0 = sub_24FB471C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A4F070);
    }
  }
}

unint64_t sub_24FAFD7EC()
{
  unint64_t result = qword_269A4F078;
  if (!qword_269A4F078)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F080);
    sub_24FAD57F0(&qword_269A4F040, &qword_269A4F030);
    sub_24FAD57F0(&qword_269A4F048, &qword_269A4F020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F078);
  }
  return result;
}

uint64_t sub_24FAFD8B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24FAFD91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributionsTextView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAFD988@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AttributionsTextView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_24FAFBEF8(a1, v6, a2);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = type metadata accessor for AttributionsTextView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24FB472B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v8 = sub_24FB46F68();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24FAFDBF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for AttributionsTextView() - 8);
  return sub_24FAFC174(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

unint64_t sub_24FAFDC44()
{
  unint64_t result = qword_269A4F0D0;
  if (!qword_269A4F0D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F0C8);
    sub_24FAD57F0(&qword_269A4F0D8, &qword_269A4F0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F0D0);
  }
  return result;
}

uint64_t sub_24FAFDCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAFDD54()
{
  uint64_t v1 = type metadata accessor for AttributionsTextView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_24FB47268();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4EF68);
  uint64_t v17 = v4;
  uint64_t v18 = v5;
  uint64_t v16 = v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_24FB472B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v10 = v0 + v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  uint64_t v12 = sub_24FB46F68();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = (v3 + v17 + v7) & ~v7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v14, v18);
  return MEMORY[0x270FA0238](v0, v14 + v16, v2 | v7 | 7);
}

uint64_t sub_24FAFDFCC()
{
  type metadata accessor for AttributionsTextView();
  sub_24FB47268();
  return sub_24FAFC0F4();
}

uint64_t sub_24FAFE098(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F0F8);
  uint64_t v10 = *(void *)(sub_24FB47F28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24FB47F28() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

GenerativeAssistantUI::GenerativeNoResultSnippetModel __swiftcall GenerativeNoResultSnippetModel.init(result:)(GenerativeAssistantUI::GenerativeNoResultSnippetModel result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_24FAFE2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FAFE9C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24FAFE310(uint64_t a1)
{
  unint64_t v2 = sub_24FAFE4C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAFE34C(uint64_t a1)
{
  unint64_t v2 = sub_24FAFE4C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeNoResultSnippetModel.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F100);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFE4C0();
  sub_24FB48768();
  sub_24FB48638();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24FAFE4C0()
{
  unint64_t result = qword_269A4F108;
  if (!qword_269A4F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F108);
  }
  return result;
}

uint64_t GenerativeNoResultSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F110);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFE4C0();
  sub_24FB48758();
  if (!v2)
  {
    uint64_t v9 = sub_24FB485B8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24FAFE68C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return GenerativeNoResultSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_24FAFE6A4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F100);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFE4C0();
  sub_24FB48768();
  sub_24FB48638();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for GenerativeNoResultSnippetModel()
{
  return &type metadata for GenerativeNoResultSnippetModel;
}

unsigned char *storeEnumTagSinglePayload for GenerativeNoResultSnippetModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FAFE888);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeNoResultSnippetModel.CodingKeys()
{
  return &type metadata for GenerativeNoResultSnippetModel.CodingKeys;
}

unint64_t sub_24FAFE8C4()
{
  unint64_t result = qword_269A4F118;
  if (!qword_269A4F118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F118);
  }
  return result;
}

unint64_t sub_24FAFE91C()
{
  unint64_t result = qword_269A4F120;
  if (!qword_269A4F120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F120);
  }
  return result;
}

unint64_t sub_24FAFE974()
{
  unint64_t result = qword_269A4F128;
  if (!qword_269A4F128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F128);
  }
  return result;
}

uint64_t sub_24FAFE9C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24FB48688();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24FAFEA48()
{
  return 0x746C75736572;
}

uint64_t sub_24FAFEA60()
{
  return 0;
}

uint64_t sub_24FAFEA6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24FAFEA9C(uint64_t a1)
{
  unint64_t v2 = sub_24FAFEC24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAFEAD8(uint64_t a1)
{
  unint64_t v2 = sub_24FAFEC24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeTAHandoffSnippetModel.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F130);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFEC24();
  sub_24FB48768();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24FAFEC24()
{
  unint64_t result = qword_269A4F138;
  if (!qword_269A4F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F138);
  }
  return result;
}

uint64_t GenerativeTAHandoffSnippetModel.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24FAFECA8(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24FAFECD0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F130);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFEC24();
  sub_24FB48768();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ValueMetadata *type metadata accessor for GenerativeTAHandoffSnippetModel()
{
  return &type metadata for GenerativeTAHandoffSnippetModel;
}

ValueMetadata *type metadata accessor for GenerativeTAHandoffSnippetModel.CodingKeys()
{
  return &type metadata for GenerativeTAHandoffSnippetModel.CodingKeys;
}

unint64_t sub_24FAFEE04()
{
  unint64_t result = qword_269A4F140;
  if (!qword_269A4F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F140);
  }
  return result;
}

unint64_t sub_24FAFEE5C()
{
  unint64_t result = qword_269A4F148;
  if (!qword_269A4F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F148);
  }
  return result;
}

uint64_t GenerativeResultAttributionSnippetModel.init(provider:disclaimer:attributions:punchOutURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  uint64_t v8 = (uint64_t)a7 + *(int *)(type metadata accessor for GenerativeResultAttributionSnippetModel() + 28);
  return sub_24FAFEF50(a6, v8);
}

uint64_t type metadata accessor for GenerativeResultAttributionSnippetModel()
{
  uint64_t result = qword_269A4F1B8;
  if (!qword_269A4F1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FAFEF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAFEFB8(char a1)
{
  return *(void *)&aProviderdiscla[8 * a1];
}

uint64_t sub_24FAFEFD8()
{
  return sub_24FAFEFB8(*v0);
}

uint64_t sub_24FAFEFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FB00F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24FAFF008(uint64_t a1)
{
  unint64_t v2 = sub_24FAFF2DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAFF044(uint64_t a1)
{
  unint64_t v2 = sub_24FAFF2DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeResultAttributionSnippetModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F150);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFF2DC();
  sub_24FB48768();
  char v13 = 0;
  sub_24FB48638();
  if (!v2)
  {
    char v12 = 1;
    sub_24FB48638();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F160);
    sub_24FAFF784(&qword_269A4F168, (void (*)(void))sub_24FAFF330);
    sub_24FB48658();
    type metadata accessor for GenerativeResultAttributionSnippetModel();
    v10[14] = 3;
    sub_24FB46F68();
    sub_24FAFFE48(&qword_269A4ED90, MEMORY[0x263F06EA8]);
    sub_24FB48628();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24FAFF2DC()
{
  unint64_t result = qword_269A4F158;
  if (!qword_269A4F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F158);
  }
  return result;
}

unint64_t sub_24FAFF330()
{
  unint64_t result = qword_269A4F170;
  if (!qword_269A4F170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F170);
  }
  return result;
}

uint64_t GenerativeResultAttributionSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F178);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  MEMORY[0x270FA5388](v10);
  char v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFF2DC();
  sub_24FB48758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v10;
  uint64_t v13 = (uint64_t)v6;
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  char v28 = 0;
  *char v12 = sub_24FB485B8();
  v12[1] = v16;
  char v27 = 1;
  v12[2] = sub_24FB485B8();
  uint64_t v12[3] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F160);
  char v26 = 2;
  sub_24FAFF784(&qword_269A4F180, (void (*)(void))sub_24FAFF7F4);
  sub_24FB485D8();
  uint64_t v19 = 0;
  v12[4] = v24;
  sub_24FB46F68();
  char v25 = 3;
  sub_24FAFFE48(&qword_269A4EDC8, MEMORY[0x263F06EA8]);
  sub_24FB485A8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  sub_24FAFEF50(v13, *(int *)(v20 + 28));
  sub_24FAFF848(0, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24FAFC5F0(0);
}

uint64_t sub_24FAFF784(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F160);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FAFF7F4()
{
  unint64_t result = qword_269A4F188;
  if (!qword_269A4F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F188);
  }
  return result;
}

uint64_t sub_24FAFF848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeResultAttributionSnippetModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FAFF8AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenerativeResultAttributionSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_24FAFF8C4(void *a1)
{
  return GenerativeResultAttributionSnippetModel.encode(to:)(a1);
}

GenerativeAssistantUI::Attribution __swiftcall Attribution.init(displayUrl:url:)(Swift::String displayUrl, Swift::String url)
{
  *uint64_t v2 = displayUrl;
  v2[1] = url;
  result.url = url;
  result.displayUrl = displayUrl;
  return result;
}

uint64_t sub_24FAFF8E8(char a1)
{
  if (a1) {
    return 7107189;
  }
  else {
    return 0x5579616C70736964;
  }
}

BOOL sub_24FAFF91C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24FAFF934()
{
  return sub_24FAFF8E8(*v0);
}

uint64_t sub_24FAFF93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FB01160(a1, a2);
  *a3 = result;
  return result;
}

void sub_24FAFF964(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24FAFF970(uint64_t a1)
{
  unint64_t v2 = sub_24FAFFB60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FAFF9AC(uint64_t a1)
{
  unint64_t v2 = sub_24FAFFB60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Attribution.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F190);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFFB60();
  sub_24FB48768();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_24FB48638();
  if (!v8)
  {
    char v11 = 1;
    sub_24FB48638();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24FAFFB60()
{
  unint64_t result = qword_269A4F198;
  if (!qword_269A4F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F198);
  }
  return result;
}

uint64_t Attribution.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F1A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FAFFB60();
  sub_24FB48758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_24FB485B8();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24FB485B8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FAFFDB8()
{
  return sub_24FAFFE48(&qword_269A4F1A8, (void (*)(uint64_t))type metadata accessor for GenerativeResultAttributionSnippetModel);
}

uint64_t sub_24FAFFE00()
{
  return sub_24FAFFE48(&qword_269A4F1B0, (void (*)(uint64_t))type metadata accessor for GenerativeResultAttributionSnippetModel);
}

uint64_t sub_24FAFFE48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FAFFE90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Attribution.init(from:)(a1, a2);
}

uint64_t sub_24FAFFEA8(void *a1)
{
  return Attribution.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenerativeResultAttributionSnippetModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_24FB46F68();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for GenerativeResultAttributionSnippetModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24FB46F68();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for GenerativeResultAttributionSnippetModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for GenerativeResultAttributionSnippetModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for GenerativeResultAttributionSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_24FB46F68();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for GenerativeResultAttributionSnippetModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24FB46F68();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeResultAttributionSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB00730);
}

uint64_t sub_24FB00730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GenerativeResultAttributionSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB007F8);
}

uint64_t sub_24FB007F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24FB008A4()
{
  sub_24FB0094C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24FB0094C()
{
  if (!qword_269A4E740)
  {
    sub_24FB46F68();
    unint64_t v0 = sub_24FB48388();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A4E740);
    }
  }
}

uint64_t destroy for Attribution()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Attribution(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Attribution(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for Attribution(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Attribution(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Attribution(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attribution()
{
  return &type metadata for Attribution;
}

unsigned char *storeEnumTagSinglePayload for Attribution.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB00C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Attribution.CodingKeys()
{
  return &type metadata for Attribution.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GenerativeResultAttributionSnippetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB00D4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeResultAttributionSnippetModel.CodingKeys()
{
  return &type metadata for GenerativeResultAttributionSnippetModel.CodingKeys;
}

unint64_t sub_24FB00D88()
{
  unint64_t result = qword_269A4F1C8;
  if (!qword_269A4F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1C8);
  }
  return result;
}

unint64_t sub_24FB00DE0()
{
  unint64_t result = qword_269A4F1D0;
  if (!qword_269A4F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1D0);
  }
  return result;
}

unint64_t sub_24FB00E38()
{
  unint64_t result = qword_269A4F1D8;
  if (!qword_269A4F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1D8);
  }
  return result;
}

unint64_t sub_24FB00E90()
{
  unint64_t result = qword_269A4F1E0;
  if (!qword_269A4F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1E0);
  }
  return result;
}

unint64_t sub_24FB00EE8()
{
  unint64_t result = qword_269A4F1E8;
  if (!qword_269A4F1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1E8);
  }
  return result;
}

unint64_t sub_24FB00F40()
{
  unint64_t result = qword_269A4F1F0;
  if (!qword_269A4F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F1F0);
  }
  return result;
}

uint64_t sub_24FB00F94(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x72656469766F7270 && a2 == 0xE800000000000000;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D69616C63736964 && a2 == 0xEA00000000007265 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEC000000736E6F69 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74754F68636E7570 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24FB01160(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x5579616C70736964 && a2 == 0xEA00000000006C72;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t GenerativeRichTextResultSnippetModel.results.getter()
{
  return swift_bridgeObjectRetain();
}

double GenerativeRichTextResultSnippetModel.init(results:contentProviderName:contentDisclaimer:attributions:punchOutURL:criticalDisclaimers:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  uint64_t v12 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  sub_24FAFEF50(a7, (uint64_t)a9 + v12[8]);
  *(void *)((char *)a9 + v12[9]) = a8;
  int v13 = (_OWORD *)((char *)a9 + v12[10]);
  double result = 0.0;
  v13[1] = 0u;
  v13[2] = 0u;
  *int v13 = 0u;
  return result;
}

__n128 GenerativeRichTextResultSnippetModel.init(results:contentProviderName:contentDisclaimer:attributions:punchOutURL:criticalDisclaimers:modelDisclaimer:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, __n128 *a10)
{
  __n128 v18 = a10[1];
  __n128 v19 = *a10;
  unint64_t v13 = a10[2].n128_u64[0];
  unint64_t v14 = a10[2].n128_u64[1];
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  int v15 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  sub_24FAFEF50(a7, (uint64_t)a9 + v15[8]);
  *(void *)((char *)a9 + v15[9]) = a8;
  uint64_t v16 = (__n128 *)((char *)a9 + v15[10]);
  __n128 result = v18;
  *uint64_t v16 = v19;
  v16[1] = v18;
  v16[2].n128_u64[0] = v13;
  v16[2].n128_u64[1] = v14;
  return result;
}

uint64_t type metadata accessor for GenerativeRichTextResultSnippetModel()
{
  uint64_t result = qword_269A4F2C0;
  if (!qword_269A4F2C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24FB013A8(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72656469766F7270;
      break;
    case 2:
      unint64_t result = 0x6D69616C63736964;
      break;
    case 3:
      unint64_t result = 0x7475626972747461;
      break;
    case 4:
      unint64_t result = 0x74754F68636E7570;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0x7369446C65646F6DLL;
      break;
    default:
      unint64_t result = 0x73746C75736572;
      break;
  }
  return result;
}

unint64_t sub_24FB014B4()
{
  return sub_24FB013A8(*v0);
}

uint64_t sub_24FB014BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FB050CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24FB014E4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24FB014F0(uint64_t a1)
{
  unint64_t v2 = sub_24FB01918();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FB0152C(uint64_t a1)
{
  unint64_t v2 = sub_24FB01918();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GenerativeRichTextResultSnippetModel.encode(to:)(void *a1)
{
  BOOL v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F1F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FB01918();
  sub_24FB48768();
  *(void *)&v13[0] = *v3;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F208);
  sub_24FB020D8(&qword_269A4F210, &qword_269A4F208, (void (*)(void))sub_24FB0196C);
  sub_24FB48658();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_24FB48638();
    LOBYTE(v13[0]) = 2;
    sub_24FB48638();
    *(void *)&v13[0] = v3[5];
    char v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F160);
    sub_24FB020D8(&qword_269A4F168, &qword_269A4F160, (void (*)(void))sub_24FAFF330);
    sub_24FB48658();
    uint64_t v9 = type metadata accessor for GenerativeRichTextResultSnippetModel();
    LOBYTE(v13[0]) = 4;
    sub_24FB46F68();
    sub_24FB03430(&qword_269A4ED90, MEMORY[0x263F06EA8]);
    sub_24FB48628();
    *(void *)&v13[0] = *(void *)((char *)v3 + *(int *)(v9 + 36));
    char v14 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F220);
    sub_24FB02144(&qword_269A4F228);
    sub_24FB48658();
    uint64_t v10 = (_OWORD *)((char *)v3 + *(int *)(v9 + 40));
    long long v11 = v10[1];
    v13[0] = *v10;
    v13[1] = v11;
    v13[2] = v10[2];
    char v14 = 6;
    sub_24FB019C0();
    sub_24FB48628();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24FB01918()
{
  unint64_t result = qword_269A4F200;
  if (!qword_269A4F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F200);
  }
  return result;
}

unint64_t sub_24FB0196C()
{
  unint64_t result = qword_269A4F218;
  if (!qword_269A4F218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F218);
  }
  return result;
}

unint64_t sub_24FB019C0()
{
  unint64_t result = qword_269A4F230;
  if (!qword_269A4F230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F230);
  }
  return result;
}

uint64_t GenerativeRichTextResultSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F238);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = (int *)type metadata accessor for GenerativeRichTextResultSnippetModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = a1[3];
  uint64_t v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_24FB01918();
  sub_24FB48758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  uint64_t v12 = (uint64_t)v6;
  uint64_t v13 = (uint64_t)v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F208);
  char v28 = 0;
  sub_24FB020D8(&qword_269A4F240, &qword_269A4F208, (void (*)(void))sub_24FB02084);
  uint64_t v14 = v23;
  sub_24FB485D8();
  *uint64_t v10 = v25;
  LOBYTE(v25) = 1;
  v10[1] = sub_24FB485B8();
  void v10[2] = v15;
  LOBYTE(v25) = 2;
  v10[3] = sub_24FB485B8();
  void v10[4] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F160);
  char v28 = 3;
  sub_24FB020D8(&qword_269A4F180, &qword_269A4F160, (void (*)(void))sub_24FAFF7F4);
  sub_24FB485D8();
  v10[5] = v25;
  sub_24FB46F68();
  LOBYTE(v25) = 4;
  sub_24FB03430(&qword_269A4EDC8, MEMORY[0x263F06EA8]);
  sub_24FB485A8();
  sub_24FAFEF50(v12, (uint64_t)v10 + v8[8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F220);
  char v28 = 5;
  sub_24FB02144(&qword_269A4F250);
  sub_24FB485D8();
  uint64_t v17 = v22;
  *(void *)(v13 + v8[9]) = v25;
  char v28 = 6;
  sub_24FB021A8();
  sub_24FB485A8();
  (*(void (**)(void, uint64_t))(v17 + 8))(0, v14);
  __n128 v18 = (_OWORD *)(v13 + v8[10]);
  long long v19 = v26;
  *__n128 v18 = v25;
  v18[1] = v19;
  void v18[2] = v27;
  sub_24FB021FC(v13, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_24FB02260(v13);
}

uint64_t sub_24FB02024(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24FB02084()
{
  unint64_t result = qword_269A4F248;
  if (!qword_269A4F248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F248);
  }
  return result;
}

uint64_t sub_24FB020D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB02144(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F220);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB021A8()
{
  unint64_t result = qword_269A4F258;
  if (!qword_269A4F258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F258);
  }
  return result;
}

uint64_t sub_24FB021FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB02260(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenerativeRichTextResultSnippetModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FB022BC(char a1)
{
  if (a1) {
    return 0x7461446567616D69;
  }
  else {
    return 0x676E69727473;
  }
}

uint64_t sub_24FB022F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GenerativeRichTextResultSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_24FB0230C(void *a1)
{
  return GenerativeRichTextResultSnippetModel.encode(to:)(a1);
}

uint64_t sub_24FB02324()
{
  return sub_24FB022BC(*v0);
}

uint64_t sub_24FB0232C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FB053C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24FB02354(uint64_t a1)
{
  unint64_t v2 = sub_24FB02804();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FB02390(uint64_t a1)
{
  unint64_t v2 = sub_24FB02804();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FB023CC(uint64_t a1)
{
  unint64_t v2 = sub_24FB02858();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FB02408(uint64_t a1)
{
  unint64_t v2 = sub_24FB02858();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24FB02444(uint64_t a1)
{
  unint64_t v2 = sub_24FB028AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FB02480(uint64_t a1)
{
  unint64_t v2 = sub_24FB028AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RichContentResultSegment.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F260);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F268);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F270);
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  unint64_t v12 = *(void *)(v1 + 8);
  char v13 = *(unsigned char *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FB02804();
  sub_24FB48768();
  if (v13)
  {
    LOBYTE(v28) = 1;
    sub_24FAE9930(v11, v12);
    sub_24FB02858();
    uint64_t v14 = v23;
    uint64_t v15 = v27;
    sub_24FB485F8();
    uint64_t v28 = v11;
    unint64_t v29 = v12;
    sub_24FAEBB84();
    uint64_t v16 = v25;
    sub_24FB48658();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v16);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v15);
    return sub_24FAF3FC8(v11, v12, 1);
  }
  else
  {
    LOBYTE(v28) = 0;
    sub_24FB028AC();
    uint64_t v18 = v27;
    sub_24FB485F8();
    uint64_t v19 = v22;
    sub_24FB48638();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v18);
  }
}

unint64_t sub_24FB02804()
{
  unint64_t result = qword_269A4F278;
  if (!qword_269A4F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F278);
  }
  return result;
}

unint64_t sub_24FB02858()
{
  unint64_t result = qword_269A4F280;
  if (!qword_269A4F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F280);
  }
  return result;
}

unint64_t sub_24FB028AC()
{
  unint64_t result = qword_269A4F288;
  if (!qword_269A4F288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F288);
  }
  return result;
}

uint64_t RichContentResultSegment.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F290);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F298);
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F2A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24FB02804();
  uint64_t v13 = v37;
  sub_24FB48758();
  if (!v13)
  {
    uint64_t v14 = v33;
    uint64_t v37 = v9;
    uint64_t v15 = sub_24FB485E8();
    if (*(void *)(v15 + 16) == 1)
    {
      int v16 = *(unsigned __int8 *)(v15 + 32);
      uint64_t v29 = v15;
      if (v16)
      {
        LODWORD(v32) = v16;
        LOBYTE(v35) = 1;
        sub_24FB02858();
        sub_24FB48568();
        sub_24FAEC014();
        sub_24FB485D8();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        uint64_t v18 = v35;
        uint64_t v17 = v36;
        LOBYTE(v16) = v32;
      }
      else
      {
        LOBYTE(v35) = 0;
        sub_24FB028AC();
        uint64_t v23 = v7;
        sub_24FB48568();
        uint64_t v25 = sub_24FB485B8();
        uint64_t v26 = v37;
        uint64_t v18 = v25;
        uint64_t v17 = v27;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
      }
      uint64_t v28 = v30;
      *uint64_t v30 = v18;
      v28[1] = v17;
      *((unsigned char *)v28 + 16) = v16;
    }
    else
    {
      uint64_t v19 = sub_24FB484A8();
      swift_allocError();
      uint64_t v20 = v11;
      uint64_t v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E4F0);
      *uint64_t v22 = &type metadata for RichContentResultSegment;
      sub_24FB48578();
      sub_24FB48498();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_24FB02DE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RichContentResultSegment.init(from:)(a1, a2);
}

uint64_t sub_24FB02DFC(void *a1)
{
  return RichContentResultSegment.encode(to:)(a1);
}

void __swiftcall ModelDisclaimer.init(message:displayUrl:url:)(GenerativeAssistantUI::ModelDisclaimer *__return_ptr retstr, Swift::String message, Swift::String displayUrl, Swift::String url)
{
  retstr->message = message;
  retstr->displayUrl = displayUrl;
  retstr->url = url;
}

uint64_t sub_24FB02E24(char a1)
{
  return *(void *)&aMessage_2[8 * a1];
}

uint64_t sub_24FB02E44()
{
  return sub_24FB02E24(*v0);
}

uint64_t sub_24FB02E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24FB054B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24FB02E74(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24FB02E80(uint64_t a1)
{
  unint64_t v2 = sub_24FB030AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24FB02EBC(uint64_t a1)
{
  unint64_t v2 = sub_24FB030AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ModelDisclaimer.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F2A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  void v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FB030AC();
  sub_24FB48768();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_24FB48638();
  if (!v9)
  {
    char v13 = 1;
    sub_24FB48638();
    char v12 = 2;
    sub_24FB48638();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24FB030AC()
{
  unint64_t result = qword_269A4F2B0;
  if (!qword_269A4F2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2B0);
  }
  return result;
}

uint64_t ModelDisclaimer.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F2B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24FB030AC();
  sub_24FB48758();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_24FB485B8();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24FB485B8();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_24FB485B8();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FB033A0()
{
  return sub_24FB03430(&qword_269A4E510, (void (*)(uint64_t))type metadata accessor for GenerativeRichTextResultSnippetModel);
}

uint64_t sub_24FB033E8()
{
  return sub_24FB03430(&qword_269A4E4C0, (void (*)(uint64_t))type metadata accessor for GenerativeRichTextResultSnippetModel);
}

uint64_t sub_24FB03430(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB03478@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ModelDisclaimer.init(from:)(a1, a2);
}

uint64_t sub_24FB03490(void *a1)
{
  return ModelDisclaimer.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for GenerativeRichTextResultSnippetModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    uint64_t v10 = a3[8];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[5] = a2[5];
    uint64_t v12 = sub_24FB46F68();
    uint64_t v23 = *(void *)(v12 - 8);
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v11, 1, v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v15 = (uint64_t *)((char *)v7 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    swift_bridgeObjectRetain();
    if (v17)
    {
      *uint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = v16[3];
      _OWORD v15[2] = v16[2];
      v15[3] = v18;
      uint64_t v19 = v16[4];
      uint64_t v20 = v16[5];
      v15[4] = v19;
      v15[5] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v21 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v21;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
  }
  return v7;
}

uint64_t destroy for GenerativeRichTextResultSnippetModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_24FB46F68();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 40) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for GenerativeRichTextResultSnippetModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[8];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_24FB46F68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v13 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = *(void *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  if (v16)
  {
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    uint64_t v18 = v15[4];
    uint64_t v19 = v15[5];
    _DWORD v14[4] = v18;
    v14[5] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v20;
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  }
  return a1;
}

void *assignWithCopy for GenerativeRichTextResultSnippetModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = *(void *)((char *)a1 + v15 + 8);
  uint64_t v19 = v17[1];
  if (v18)
  {
    if (v19)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v16[2] = v17[2];
      v16[3] = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16[4] = v17[4];
      v16[5] = v17[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24FAF6414((uint64_t)v16);
      long long v21 = *((_OWORD *)v17 + 1);
      long long v20 = *((_OWORD *)v17 + 2);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v21;
      *((_OWORD *)v16 + 2) = v20;
    }
  }
  else if (v19)
  {
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    void v16[2] = v17[2];
    v16[3] = v17[3];
    v16[4] = v17[4];
    v16[5] = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)v17;
    long long v23 = *((_OWORD *)v17 + 2);
    *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
    *((_OWORD *)v16 + 2) = v23;
    *(_OWORD *)uint64_t v16 = v22;
  }
  return a1;
}

uint64_t initializeWithTake for GenerativeRichTextResultSnippetModel(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24FB46F68();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  int v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  long long v15 = v14[1];
  *int v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  return a1;
}

void *assignWithTake for GenerativeRichTextResultSnippetModel(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24FB46F68();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  if (!*(void *)((char *)a1 + v17 + 8))
  {
LABEL_11:
    long long v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    *(_OWORD *)(v18 + 32) = *((_OWORD *)v19 + 2);
    return a1;
  }
  uint64_t v20 = *((void *)v19 + 1);
  if (!v20)
  {
    sub_24FAF6414(v18);
    goto LABEL_11;
  }
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v19 + 3);
  *(void *)(v18 + 16) = *((void *)v19 + 2);
  *(void *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v19 + 5);
  *(void *)(v18 + 32) = *((void *)v19 + 4);
  *(void *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativeRichTextResultSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB0407C);
}

uint64_t sub_24FB0407C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GenerativeRichTextResultSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB04144);
}

void *sub_24FB04144(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4E528);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24FB041F0()
{
  sub_24FB0094C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for RichContentResultSegment(uint64_t a1)
{
  return sub_24FAF3FC8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s21GenerativeAssistantUI24RichContentResultSegmentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24FAF3FB8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RichContentResultSegment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24FAF3FB8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24FAF3FC8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RichContentResultSegment(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24FAF3FC8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RichContentResultSegment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RichContentResultSegment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24FB04444(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24FB0444C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RichContentResultSegment()
{
  return &type metadata for RichContentResultSegment;
}

uint64_t destroy for ModelDisclaimer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ModelDisclaimer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ModelDisclaimer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ModelDisclaimer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelDisclaimer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelDisclaimer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelDisclaimer()
{
  return &type metadata for ModelDisclaimer;
}

uint64_t getEnumTagSinglePayload for ModelDisclaimer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModelDisclaimer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB047ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelDisclaimer.CodingKeys()
{
  return &type metadata for ModelDisclaimer.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RichContentResultSegment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB048F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RichContentResultSegment.CodingKeys()
{
  return &type metadata for RichContentResultSegment.CodingKeys;
}

ValueMetadata *type metadata accessor for RichContentResultSegment.StringCodingKeys()
{
  return &type metadata for RichContentResultSegment.StringCodingKeys;
}

unsigned char *_s21GenerativeAssistantUI24RichContentResultSegmentO16StringCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FB049D8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RichContentResultSegment.ImageDataCodingKeys()
{
  return &type metadata for RichContentResultSegment.ImageDataCodingKeys;
}

uint64_t getEnumTagSinglePayload for GenerativeRichTextResultSnippetModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GenerativeRichTextResultSnippetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB04B6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativeRichTextResultSnippetModel.CodingKeys()
{
  return &type metadata for GenerativeRichTextResultSnippetModel.CodingKeys;
}

unint64_t sub_24FB04BA8()
{
  unint64_t result = qword_269A4F2D0;
  if (!qword_269A4F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2D0);
  }
  return result;
}

unint64_t sub_24FB04C00()
{
  unint64_t result = qword_269A4F2D8;
  if (!qword_269A4F2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2D8);
  }
  return result;
}

unint64_t sub_24FB04C58()
{
  unint64_t result = qword_269A4F2E0;
  if (!qword_269A4F2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2E0);
  }
  return result;
}

unint64_t sub_24FB04CB0()
{
  unint64_t result = qword_269A4F2E8;
  if (!qword_269A4F2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2E8);
  }
  return result;
}

unint64_t sub_24FB04D08()
{
  unint64_t result = qword_269A4F2F0;
  if (!qword_269A4F2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2F0);
  }
  return result;
}

unint64_t sub_24FB04D60()
{
  unint64_t result = qword_269A4F2F8;
  if (!qword_269A4F2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F2F8);
  }
  return result;
}

unint64_t sub_24FB04DB8()
{
  unint64_t result = qword_269A4F300;
  if (!qword_269A4F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F300);
  }
  return result;
}

unint64_t sub_24FB04E10()
{
  unint64_t result = qword_269A4F308;
  if (!qword_269A4F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F308);
  }
  return result;
}

unint64_t sub_24FB04E68()
{
  unint64_t result = qword_269A4F310;
  if (!qword_269A4F310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F310);
  }
  return result;
}

unint64_t sub_24FB04EC0()
{
  unint64_t result = qword_269A4F318;
  if (!qword_269A4F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F318);
  }
  return result;
}

unint64_t sub_24FB04F18()
{
  unint64_t result = qword_269A4F320;
  if (!qword_269A4F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F320);
  }
  return result;
}

unint64_t sub_24FB04F70()
{
  unint64_t result = qword_269A4F328;
  if (!qword_269A4F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F328);
  }
  return result;
}

unint64_t sub_24FB04FC8()
{
  unint64_t result = qword_269A4F330;
  if (!qword_269A4F330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F330);
  }
  return result;
}

unint64_t sub_24FB05020()
{
  unint64_t result = qword_269A4F338;
  if (!qword_269A4F338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F338);
  }
  return result;
}

unint64_t sub_24FB05078()
{
  unint64_t result = qword_269A4F340;
  if (!qword_269A4F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F340);
  }
  return result;
}

uint64_t sub_24FB050CC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x73746C75736572 && a2 == 0xE700000000000000;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69616C63736964 && a2 == 0xEA00000000007265 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEC000000736E6F69 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74754F68636E7570 && a2 == 0xEB000000004C5255 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024FB50110 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7369446C65646F6DLL && a2 == 0xEF72656D69616C63)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24FB053C4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24FB054B0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
  if (v3 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5579616C70736964 && a2 == 0xEA00000000006C72 || (sub_24FB48688() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24FB48688();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24FB055F0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t variable initialization expression of DocumentView.linkTapped()
{
  return 0;
}

double variable initialization expression of DocumentBlockQuoteView.spacing()
{
  return 13.0;
}

double variable initialization expression of DocumentBlockQuoteView.separatorSize()
{
  return 1.0;
}

double variable initialization expression of DocumentBlockQuoteView.separatorWidth()
{
  return 2.0;
}

double variable initialization expression of DocumentBlockQuoteView.separatorPadding()
{
  return 5.0;
}

uint64_t variable initialization expression of CopyButton._state()
{
  return 0;
}

uint64_t variable initialization expression of SaveImageButton._saveState()
{
  return 0;
}

double variable initialization expression of DocumentCodeBlockView.backgroundCornerSize()
{
  return 20.0;
}

double variable initialization expression of DocumentCodeBlockView.padding()
{
  return 16.0;
}

double variable initialization expression of DocumentHeadingView.additionalPaddingForH123()
{
  return 8.0;
}

uint64_t variable initialization expression of DocumentListImageView._listImageStyle()
{
  return swift_getKeyPath();
}

double sub_24FB056AC@<D0>(_OWORD *a1@<X8>)
{
  sub_24FB05CE4();
  sub_24FB474C8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_24FB056FC()
{
  return sub_24FB474D8();
}

double variable initialization expression of DocumentImageView.imageLength()
{
  return 210.0;
}

double variable initialization expression of DocumentImageView.cornerRadius()
{
  return 20.0;
}

double variable initialization expression of DocumentOutlineItemView._scaledSingleDigitIconWidth()
{
  return 13.0;
}

double variable initialization expression of DocumentOutlineItemView._scaledDoubleDigitIconWidth()
{
  return 25.0;
}

double variable initialization expression of DocumentOutlineItemView._scaledTripleDigitIconWidth()
{
  return 38.0;
}

double variable initialization expression of DocumentOutlineItemView._extraIndentPerLevel()
{
  return 19.0;
}

double variable initialization expression of DocumentOutlineItemView.spacing()
{
  return 7.0;
}

double variable initialization expression of DocumentOutlineView.spacing()
{
  return 8.0;
}

double variable initialization expression of DocumentOutlineView.minorPadding()
{
  return 2.0;
}

uint64_t variable initialization expression of DocumentCapsuleView._labelColor()
{
  return swift_getKeyPath();
}

double variable initialization expression of DocumentCapsuleView._imageSize()
{
  return 14.0;
}

uint64_t variable initialization expression of MarkdownParser.defaultDocumentElementParsers()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F3A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24FB4BA10;
  unint64_t v1 = sub_24FB058D4();
  *(void *)(v0 + 32) = &type metadata for DocumentElementCapsuleParser;
  *(void *)(v0 + 40) = v1;
  unint64_t v2 = sub_24FB05928();
  *(void *)(v0 + 48) = &type metadata for DocumentElementListImageParser;
  *(void *)(v0 + 56) = v2;
  unint64_t v3 = sub_24FB0597C();
  *(void *)(v0 + 64) = &type metadata for DocumentElementOutlineParser;
  *(void *)(v0 + 72) = v3;
  unint64_t v4 = sub_24FB059D0();
  *(void *)(v0 + 80) = &type metadata for DocumentElementHeadingParser;
  *(void *)(v0 + 88) = v4;
  unint64_t v5 = sub_24FB05A24();
  *(void *)(v0 + 96) = &type metadata for DocumentElementEmbeddedVideoParser;
  *(void *)(v0 + 104) = v5;
  unint64_t v6 = sub_24FB05A78();
  *(void *)(v0 + 112) = &type metadata for DocumentElementBreakParser;
  *(void *)(v0 + 120) = v6;
  unint64_t v7 = sub_24FB05ACC();
  *(void *)(v0 + 128) = &type metadata for DocumentElementTableParser;
  *(void *)(v0 + 136) = v7;
  unint64_t v8 = sub_24FB05B20();
  *(void *)(v0 + 144) = &type metadata for DocumentElementBlockQuoteParser;
  *(void *)(v0 + 152) = v8;
  unint64_t v9 = sub_24FB05B74();
  *(void *)(v0 + 160) = &type metadata for DocumentElementCodeBlockParser;
  *(void *)(v0 + 168) = v9;
  unint64_t v10 = sub_24FB05BC8();
  *(void *)(v0 + 176) = &type metadata for DocumentElementParagraphParser;
  *(void *)(v0 + 184) = v10;
  return v0;
}

unint64_t sub_24FB058D4()
{
  unint64_t result = qword_269A4F3B0;
  if (!qword_269A4F3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3B0);
  }
  return result;
}

unint64_t sub_24FB05928()
{
  unint64_t result = qword_269A4F3B8;
  if (!qword_269A4F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3B8);
  }
  return result;
}

unint64_t sub_24FB0597C()
{
  unint64_t result = qword_269A4F3C0;
  if (!qword_269A4F3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3C0);
  }
  return result;
}

unint64_t sub_24FB059D0()
{
  unint64_t result = qword_269A4F3C8;
  if (!qword_269A4F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3C8);
  }
  return result;
}

unint64_t sub_24FB05A24()
{
  unint64_t result = qword_269A4F3D0;
  if (!qword_269A4F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3D0);
  }
  return result;
}

unint64_t sub_24FB05A78()
{
  unint64_t result = qword_269A4F3D8;
  if (!qword_269A4F3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3D8);
  }
  return result;
}

unint64_t sub_24FB05ACC()
{
  unint64_t result = qword_269A4F3E0;
  if (!qword_269A4F3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3E0);
  }
  return result;
}

unint64_t sub_24FB05B20()
{
  unint64_t result = qword_269A4F3E8;
  if (!qword_269A4F3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3E8);
  }
  return result;
}

unint64_t sub_24FB05B74()
{
  unint64_t result = qword_269A4F3F0;
  if (!qword_269A4F3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3F0);
  }
  return result;
}

unint64_t sub_24FB05BC8()
{
  unint64_t result = qword_269A4F3F8;
  if (!qword_269A4F3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F3F8);
  }
  return result;
}

double variable initialization expression of MarkdownParser.defaultInlineParsers()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F400);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_24FB4BA20;
  *(void *)(v0 + 32) = &type metadata for InlineElementGlossaryLinkParser;
  *(void *)(v0 + 40) = &protocol witness table for InlineElementGlossaryLinkParser;
  *(void *)(v0 + 48) = &type metadata for InlineElementTextColorParser;
  *(void *)(v0 + 56) = &protocol witness table for InlineElementTextColorParser;
  return result;
}

__n128 __swift_memcpy16_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void _s3__C6CGSizeVMa_0()
{
  if (!qword_269A4F408)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_269A4F408);
    }
  }
}

unint64_t sub_24FB05CE4()
{
  unint64_t result = qword_269A4F410;
  if (!qword_269A4F410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F410);
  }
  return result;
}

uint64_t sub_24FB05D38(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24FB47368();
  uint64_t v12 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v11);
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  int v15 = (char *)v20 - v14;
  (*(void (**)(uint64_t, uint64_t, double, double))(a3 + 72))(a2, a3, a4, a5);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  sub_24FB47B68();
  v20[0] = v17;
  v20[1] = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v18 = sub_24FB47D78();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  return v18;
}

uint64_t DocumentElement.supportTextWrapTop.getter()
{
  return 0;
}

uint64_t DocumentElement.makeView(textWrapOffset:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

__n128 sub_24FB05FA0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
  uint64_t v6 = type metadata accessor for DocumentCodeBlockView();
  __asm { FMOV            V0.2D, #20.0 }
  *(__n128 *)(a2 + *(int *)(v6 + 20)) = result;
  *(void *)(a2 + *(int *)(v6 + 24)) = 0x4030000000000000;
  return result;
}

uint64_t sub_24FB06024@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(v2 + *(int *)(a1 + 20));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24FB06038@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24FB06044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  char v4 = *(unsigned char *)(v2 + *(int *)(a1 + 24));
  uint64_t v5 = *v3;
  unint64_t v6 = v3[1];
  *(void *)a2 = *v3;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v4;
  return sub_24FAE9930(v5, v6);
}

uint64_t sub_24FB06060(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_24FB06074@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + *(int *)(a1 + 24));
  *a2 = *(void *)(v2 + *(int *)(a1 + 20));
  a2[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_24FB060B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentCodeBlockElement();
  MEMORY[0x270FA5388](v2);
  char v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB062C0(a1, (uint64_t)&v6);
  if (v7)
  {
    sub_24FAF8CA0(&v6, (uint64_t)v8);
    sub_24FAF8C3C((uint64_t)v8, (uint64_t)&v6);
    __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
    if (swift_dynamicCast())
    {
      sub_24FB06388((uint64_t)v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return 16.0;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return 10.0;
    }
  }
  else
  {
    sub_24FB06328((uint64_t)&v6);
    return 0.0;
  }
}

double DocumentElementView.topPadding(previousElement:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentCodeBlockElement();
  MEMORY[0x270FA5388](v2);
  char v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB062C0(a1, (uint64_t)&v6);
  if (v7)
  {
    sub_24FAF8CA0(&v6, (uint64_t)v8);
    sub_24FAF8C3C((uint64_t)v8, (uint64_t)&v6);
    __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
    if (swift_dynamicCast())
    {
      sub_24FB06388((uint64_t)v4);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return 16.0;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      return 10.0;
    }
  }
  else
  {
    sub_24FB06328((uint64_t)&v6);
    return 0.0;
  }
}

uint64_t sub_24FB062C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB06328(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F480);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FB06388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DocumentCodeBlockElement();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24FB063E4()
{
  type metadata accessor for MarkdownFont();
  uint64_t v0 = swift_allocObject();
  id v1 = objc_msgSend(self, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  *(unsigned char *)(v0 + 16) = v2 == (id)1;
  qword_269A58F38 = v0;
}

uint64_t sub_24FB06468()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MarkdownFont()
{
  return self;
}

double sub_24FB0649C(uint64_t a1)
{
  return sub_24FB060B8(a1);
}

uint64_t property wrapper backing initializer of DocumentView.viewModel()
{
  sub_24FB07C08((unint64_t *)&qword_269A4F4A8, (void (*)(uint64_t))type metadata accessor for DocumentViewModel);
  return sub_24FB472F8();
}

uint64_t DocumentView.init(viewModel:linkTapped:contentsToCopy:forceOffsetFirstElement:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  type metadata accessor for DocumentViewModel();
  sub_24FB07C08((unint64_t *)&qword_269A4F4A8, (void (*)(uint64_t))type metadata accessor for DocumentViewModel);
  uint64_t result = sub_24FB472F8();
  *(void *)a5 = result;
  *(void *)(a5 + 8) = v11;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = a1;
  *(void *)(a5 + 40) = a2;
  return result;
}

uint64_t DocumentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = sub_24FB472B8();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v21 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4B0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_24FB475F8();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  v20[1] = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4B8) + 44)];
  long long v27 = *v1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24FB47148();
  swift_release();
  swift_release();
  sub_24FAF8910((uint64_t)&v27);
  uint64_t v25 = v26;
  v20[0] = swift_getKeyPath();
  uint64_t v26 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = v1[1];
  v7[1] = *v1;
  v7[2] = v8;
  v7[3] = v1[2];
  sub_24FAF88E4((uint64_t)&v27);
  sub_24FAEA6EC((uint64_t)&v26);
  sub_24FAF8834(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C8);
  sub_24FAD57F0(&qword_269A4F4D0, &qword_269A4F4C0);
  sub_24FB07C08(&qword_269A4F4D8, MEMORY[0x263F07508]);
  sub_24FB07C78(&qword_269A4F4E0, &qword_269A4F4C8, (void (*)(void))sub_24FB07C50);
  sub_24FB47DE8();
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v10 = (_OWORD *)swift_allocObject();
  long long v11 = v1[1];
  v10[1] = *v1;
  void v10[2] = v11;
  v10[3] = v1[2];
  sub_24FAF88E4((uint64_t)&v27);
  sub_24FAEA6EC((uint64_t)&v26);
  sub_24FAF8834(v6);
  uint64_t v12 = v21;
  sub_24FB472A8();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F538);
  uint64_t v14 = v23;
  int v15 = (uint64_t *)(v23 + *(int *)(v13 + 36));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F540);
  uint64_t v17 = v22;
  uint64_t v18 = v24;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v15 + *(int *)(v16 + 28), v12, v24);
  *int v15 = KeyPath;
  sub_24FB07EBC((uint64_t)v5, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v18);
  return sub_24FAD5794((uint64_t)v5, &qword_269A4F4B0);
}

uint64_t sub_24FB069D8@<X0>(void *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v77 = a3;
  uint64_t v80 = sub_24FB46FB8();
  uint64_t v4 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v79 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)v76 - v7;
  v76[0] = (uint64_t)a2;
  v96[0] = *a2;
  uint64_t v9 = *((void *)&v96[0] + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v76[1] = v9;
  sub_24FB47148();
  swift_release();
  swift_release();
  sub_24FAF8910((uint64_t)v96);
  uint64_t v82 = v88;
  uint64_t v10 = *(void *)(v88 + 16);
  if (!v10)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v25 = v81[3];
    uint64_t v26 = v81[4];
    __swift_project_boxed_opaque_existential_1(v81, v25);
    *(void *)&long long v90 = 0;
    long long v88 = 0u;
    long long v89 = 0u;
    uint64_t v27 = sub_24FB05D38((uint64_t)&v88, v25, v26, 0.0, 0.0);
    sub_24FAD5794((uint64_t)&v88, &qword_269A4F480);
    *(void *)uint64_t v85 = v27;
    memset(&v85[8], 0, 80);
    __int16 v86 = 0;
    char v87 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4F0);
    sub_24FB07C50();
    uint64_t result = sub_24FB476C8();
    long long v29 = v88;
    long long v30 = v89;
    long long v31 = v90;
    long long v32 = v91;
    long long v33 = v92;
    uint64_t v34 = v93;
    __int16 v35 = v94;
    char v36 = v95;
    uint64_t v37 = v77;
LABEL_16:
    *(_OWORD *)uint64_t v37 = v29;
    *(_OWORD *)(v37 + 16) = v30;
    *(_OWORD *)(v37 + 32) = v31;
    *(_OWORD *)(v37 + 48) = v32;
    *(_OWORD *)(v37 + 64) = v33;
    *(void *)(v37 + 80) = v34;
    *(_WORD *)(v37 + 88) = v35;
    *(unsigned char *)(v37 + 90) = v36;
    return result;
  }
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v78 = -v10;
  while (1)
  {
    uint64_t v14 = v82 + v11;
    int v15 = (void *)(v82 + v11 + 32);
    uint64_t v16 = v81[3];
    uint64_t v17 = v81[4];
    __swift_project_boxed_opaque_existential_1(v81, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v19 = *(void *)(v14 + 64);
    __swift_project_boxed_opaque_existential_1(v15, v18);
    uint64_t v20 = v79;
    (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
    char v21 = _s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0();
    uint64_t v22 = *v13;
    uint64_t v23 = v20;
    uint64_t v24 = v80;
    (*v13)(v23, v80);
    v22(v8, v24);
    if (v21) {
      break;
    }
    --v12;
    v11 += 40;
    if (v78 == v12) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24FB47148();
  swift_release();
  swift_release();
  sub_24FAF8910((uint64_t)v96);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24FB47148();
  swift_release();
  swift_release();
  sub_24FAF8910((uint64_t)v96);
  uint64_t v38 = *(void *)(v88 + 16);
  swift_bridgeObjectRelease();
  if (!v12 || -v12 > v38)
  {
    uint64_t v84 = 0;
    memset(v83, 0, sizeof(v83));
    if (!v12)
    {
      uint64_t v50 = *(void *)(v76[0] + 16);
      uint64_t v51 = *(void *)(v50 + 16);
      if (v51 || (*(unsigned char *)(v76[0] + 24) & 1) != 0)
      {
        char v52 = v81;
        uint64_t v53 = v81[3];
        uint64_t v54 = v81[4];
        __swift_project_boxed_opaque_existential_1(v81, v53);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v54 + 56))(v53, v54))
        {
          uint64_t v55 = v52[3];
          uint64_t v56 = v52[4];
          __swift_project_boxed_opaque_existential_1(v52, v55);
          uint64_t v57 = sub_24FB05D38((uint64_t)v83, v55, v56, 28.0, 28.0);
          uint64_t v58 = sub_24FB47E48();
          uint64_t v60 = v59;
          if (v51)
          {
            v85[0] = 0;
            swift_bridgeObjectRetain();
            sub_24FB47CE8();
            uint64_t v61 = v88;
            uint64_t v62 = *((void *)&v88 + 1);
            __asm { FMOV            V0.2D, #4.0 }
            *(void *)&_Q0 = v50;
          }
          else
          {
            uint64_t v61 = 0;
            uint64_t v62 = 0;
            _Q0 = 0uLL;
          }
          uint64_t v37 = v77;
          *(void *)uint64_t v85 = v57;
          *(void *)&v85[8] = v61;
          *(void *)&v85[16] = v62;
          *(_OWORD *)&v85[24] = _Q0;
          *(void *)&v85[40] = 0;
          *(void *)&v85[48] = v58;
          *(void *)&v85[56] = v60;
          memset(&v85[64], 0, 24);
          LOBYTE(v86) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F510);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F530);
          sub_24FB07D98();
          sub_24FAD57F0(&qword_269A4F528, &qword_269A4F530);
          sub_24FB476C8();
          long long v69 = v88;
          long long v70 = v89;
          long long v71 = v90;
          long long v72 = v91;
          long long v73 = v92;
          uint64_t v74 = v93;
          unsigned __int8 v75 = v94;
        }
        else
        {
          uint64_t v68 = sub_24FB47528();
          sub_24FB07264(v52, (uint64_t)v83, v76[0], (uint64_t)&v88);
          *(void *)uint64_t v85 = v68;
          *(_OWORD *)&v85[8] = xmmword_24FB4BA30;
          *(_OWORD *)&v85[24] = v88;
          *(void *)&v85[40] = v89;
          *(void *)&v85[48] = BYTE8(v89);
          *(_OWORD *)&v85[56] = v90;
          *(_OWORD *)&v85[72] = v91;
          LOBYTE(v86) = 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F510);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F530);
          sub_24FB07D98();
          sub_24FAD57F0(&qword_269A4F528, &qword_269A4F530);
          sub_24FB476C8();
          long long v69 = v88;
          long long v70 = v89;
          long long v71 = v90;
          long long v72 = v91;
          long long v73 = v92;
          uint64_t v74 = v93;
          unsigned __int8 v75 = v94;
          uint64_t v37 = v77;
        }
        *(_OWORD *)uint64_t v85 = v69;
        *(_OWORD *)&v85[16] = v70;
        *(_OWORD *)&v85[32] = v71;
        *(_OWORD *)&v85[48] = v72;
        *(_OWORD *)&v85[64] = v73;
        *(void *)&v85[80] = v74;
        __int16 v86 = v75;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F500);
        sub_24FB07CF8();
        sub_24FB476C8();
        long long v41 = v88;
        long long v42 = v89;
        long long v43 = v90;
        long long v44 = v91;
        long long v45 = v92;
        uint64_t v46 = v93;
        __int16 v47 = v94;
        int v48 = HIBYTE(v94);
        goto LABEL_12;
      }
    }
LABEL_11:
    uint64_t v39 = v81[3];
    uint64_t v40 = v81[4];
    __swift_project_boxed_opaque_existential_1(v81, v39);
    *(void *)uint64_t v85 = sub_24FB05D38((uint64_t)v83, v39, v40, 0.0, 0.0);
    memset(&v85[8], 0, 80);
    __int16 v86 = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F500);
    sub_24FB07CF8();
    sub_24FB476C8();
    long long v41 = v88;
    long long v42 = v89;
    long long v43 = v90;
    long long v44 = v91;
    long long v45 = v92;
    uint64_t v46 = v93;
    __int16 v47 = v94;
    int v48 = HIBYTE(v94);
    uint64_t v37 = v77;
LABEL_12:
    if (v48) {
      __int16 v49 = 256;
    }
    else {
      __int16 v49 = 0;
    }
    *(_OWORD *)uint64_t v85 = v41;
    *(_OWORD *)&v85[16] = v42;
    *(_OWORD *)&v85[32] = v43;
    *(_OWORD *)&v85[48] = v44;
    *(_OWORD *)&v85[64] = v45;
    *(void *)&v85[80] = v46;
    __int16 v86 = v49 | v47;
    char v87 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4F0);
    sub_24FB07C50();
    sub_24FB476C8();
    uint64_t result = sub_24FAD5794((uint64_t)v83, &qword_269A4F480);
    long long v29 = v88;
    long long v30 = v89;
    long long v31 = v90;
    long long v32 = v91;
    long long v33 = v92;
    uint64_t v34 = v93;
    __int16 v35 = v94;
    char v36 = v95;
    goto LABEL_16;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_24FB47148();
  swift_release();
  swift_release();
  uint64_t result = sub_24FAF8910((uint64_t)v96);
  if ((unint64_t)~v12 < *(void *)(v88 + 16))
  {
    sub_24FAF8C3C(v88 + v11 - 8, (uint64_t)v83);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

double sub_24FB07264@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = sub_24FB05D38(a2, v7, v8, 0.0, 0.0);
  uint64_t v10 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  sub_24FB47CE8();
  *(void *)a4 = v9;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  *(unsigned char *)(a4 + 24) = v12;
  *(void *)(a4 + 32) = v13;
  *(void *)(a4 + 40) = v10;
  double result = 4.0;
  *(_OWORD *)(a4 + 48) = xmmword_24FB4BA40;
  return result;
}

uint64_t sub_24FB07320(uint64_t a1)
{
  uint64_t v2 = sub_24FB472B8();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24FB47478();
}

void sub_24FB073E8(uint64_t a1, uint64_t a2)
{
  v16[11] = *(id *)MEMORY[0x263EF8340];
  __n128 v3 = *(void (**)(uint64_t))(a2 + 32);
  if (v3)
  {
    swift_retain();
    v3(a1);
    sub_24FB47298();
    sub_24FAF8968((uint64_t)v3);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24FB4BA20;
    *(void *)(inited + 32) = sub_24FB48068();
    *(void *)(inited + 40) = v5;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 56) = sub_24FB48068();
    *(void *)(inited + 64) = v6;
    *(unsigned char *)(inited + 72) = 1;
    unint64_t v7 = sub_24FB0762C(inited);
    id v8 = objc_msgSend(self, sel_defaultWorkspace);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = (void *)sub_24FB46F18();
      sub_24FB07740(v7);
      swift_bridgeObjectRelease();
      uint64_t v11 = (void *)sub_24FB47FB8();
      swift_bridgeObjectRelease();
      v16[0] = 0;
      unsigned __int8 v12 = objc_msgSend(v9, sel_openURL_withOptions_error_, v10, v11, v16);

      if (v12)
      {
        id v13 = v16[0];
        sub_24FB47298();
      }
      else
      {
        id v14 = v16[0];
        int v15 = (void *)sub_24FB46EC8();

        swift_willThrow();
        sub_24FB47288();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_24FB47288();
    }
  }
}

unint64_t sub_24FB0762C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F570);
  uint64_t v2 = (void *)sub_24FB48528();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24FAF8198(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24FB07740(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F568);
    uint64_t v2 = (void *)sub_24FB48528();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  char v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D4F8];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_24FB08274();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_24FAF8210(v6, v7);
    sub_24FAF8210(v7, v40);
    sub_24FAF8210(v40, &v38);
    unint64_t result = sub_24FAF8198(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      BOOL v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      char v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_24FAF8210(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_24FAF8210(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24FB07AA0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB47148();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24FB07B24()
{
  return sub_24FB47158();
}

uint64_t sub_24FB07BA4(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t sub_24FB07C00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24FB069D8(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_24FB07C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB07C50()
{
  return sub_24FB07C78(&qword_269A4F4E8, &qword_269A4F4F0, (void (*)(void))sub_24FB07CF8);
}

uint64_t sub_24FB07C78(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB07CF8()
{
  unint64_t result = qword_269A4F4F8;
  if (!qword_269A4F4F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F500);
    sub_24FB07D98();
    sub_24FAD57F0(&qword_269A4F528, &qword_269A4F530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F4F8);
  }
  return result;
}

unint64_t sub_24FB07D98()
{
  unint64_t result = qword_269A4F508;
  if (!qword_269A4F508)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F510);
    sub_24FAD57F0(&qword_269A4F518, &qword_269A4F520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F508);
  }
  return result;
}

uint64_t sub_24FB07E38()
{
  return sub_24FB47468();
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_24FB07EB4(uint64_t a1)
{
  sub_24FB073E8(a1, v1 + 16);
}

uint64_t sub_24FB07EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB07F24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DocumentView(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DocumentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for DocumentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DocumentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DocumentView()
{
  return &type metadata for DocumentView;
}

unint64_t sub_24FB081B0()
{
  unint64_t result = qword_269A4F548;
  if (!qword_269A4F548)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F538);
    sub_24FAD57F0(&qword_269A4F550, &qword_269A4F4B0);
    sub_24FAD57F0(&qword_269A4F558, &qword_269A4F540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F548);
  }
  return result;
}

uint64_t sub_24FB08274()
{
  return swift_release();
}

uint64_t DocumentViewModel.elements.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB47148();
  swift_release();
  swift_release();
  return v1;
}

uint64_t property wrapper backing initializer of DocumentViewModel.elements()
{
  return sub_24FB47108();
}

uint64_t DocumentViewModel.elements.setter()
{
  return sub_24FB47158();
}

void (*DocumentViewModel.elements.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_24FB47138();
  return sub_24FB0843C;
}

void sub_24FB0843C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t DocumentViewModel.$elements.getter()
{
  return swift_endAccess();
}

uint64_t DocumentViewModel.$elements.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F588);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F580);
  sub_24FB47128();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*DocumentViewModel.$elements.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F588);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MarkdownDocument17DocumentViewModel__elements;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F580);
  sub_24FB47118();
  swift_endAccess();
  return sub_24FB08744;
}

void sub_24FB08744(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_24FB47128();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_24FB47128();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t DocumentViewModel.__allocating_init(elements:)()
{
  uint64_t v0 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
  sub_24FB47108();
  swift_endAccess();
  return v0;
}

uint64_t DocumentViewModel.init(elements:)()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
  sub_24FB47108();
  swift_endAccess();
  return v0;
}

Swift::Bool __swiftcall DocumentViewModel.hasCodeblockOrImage()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F590);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for DocumentOutlineElement();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DocumentDataImageElement();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DocumentCodeBlockElement();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v32 = (char *)&v27 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB47148();
  swift_release();
  Swift::Bool result = swift_release();
  uint64_t v13 = v41[0];
  uint64_t v34 = *(void *)(v41[0] + 16);
  if (v34)
  {
    int64_t v31 = v5;
    unint64_t v14 = 0;
    uint64_t v35 = v41[0] + 32;
    uint64_t v15 = (void (**)(void, void, void, void))(v3 + 56);
    uint64_t v16 = v29;
    uint64_t v17 = (uint64_t)v32;
    uint64_t v28 = v41[0];
    while (v14 < *(void *)(v13 + 16))
    {
      uint64_t v18 = v15;
      sub_24FAF8C3C(v35 + 40 * v14, (uint64_t)v41);
      sub_24FAF8C3C((uint64_t)v41, (uint64_t)v40);
      __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
      if (swift_dynamicCast())
      {
        sub_24FB09044(v17, (uint64_t (*)(void))type metadata accessor for DocumentCodeBlockElement);
        sub_24FAF8C3C((uint64_t)v41, (uint64_t)v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
LABEL_25:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
LABEL_21:
        swift_bridgeObjectRelease();
        return 1;
      }
      sub_24FAF8C3C((uint64_t)v41, (uint64_t)v40);
      sub_24FAF8CA0(v40, (uint64_t)v39);
      if (swift_dynamicCast())
      {
        sub_24FB09044(v37, (uint64_t (*)(void))type metadata accessor for DocumentDataImageElement);
        goto LABEL_25;
      }
      sub_24FAF8C3C((uint64_t)v41, (uint64_t)v39);
      char v19 = swift_dynamicCast();
      int64_t v20 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v15;
      if (v19)
      {
        v20(v2, 0, 1, v16);
        uint64_t v21 = (uint64_t)v31;
        sub_24FB08FE0((uint64_t)v2, (uint64_t)v31);
        uint64_t v22 = *(void *)(v21 + *(int *)(v16 + 20));
        uint64_t v30 = *(void *)(v22 + 16);
        if (v30)
        {
          uint64_t v27 = v2;
          uint64_t v33 = v22 + 32;
          swift_bridgeObjectRetain_n();
          uint64_t v23 = 0;
          while (1)
          {
            uint64_t v24 = *(void *)(v33 + 8 * v23);
            uint64_t v25 = *(void *)(v24 + 16);
            if (v25) {
              break;
            }
LABEL_9:
            if (++v23 == v30)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v21 = (uint64_t)v31;
              uint64_t v2 = v27;
              uint64_t v16 = v29;
              goto LABEL_17;
            }
          }
          uint64_t v26 = v24 + 32;
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_24FAF8C3C(v26, (uint64_t)v39);
            sub_24FAF8C3C((uint64_t)v39, (uint64_t)v38);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4F598);
            if (swift_dynamicCast()) {
              break;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
            v26 += 40;
            if (!--v25)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v15 = v18;
              goto LABEL_9;
            }
          }
          sub_24FB09044((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DocumentCodeBlockElement);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_24FB09044((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for DocumentOutlineElement);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
          goto LABEL_21;
        }
LABEL_17:
        sub_24FB09044(v21, (uint64_t (*)(void))type metadata accessor for DocumentOutlineElement);
        Swift::Bool result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        uint64_t v13 = v28;
        uint64_t v17 = (uint64_t)v32;
      }
      else
      {
        v20(v2, 1, 1, v16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        Swift::Bool result = sub_24FB08F80((uint64_t)v2);
      }
      if (++v14 == v34) {
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_24FB08F80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F590);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FB08FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentOutlineElement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB09044(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t DocumentViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MarkdownDocument17DocumentViewModel__elements;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DocumentViewModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MarkdownDocument17DocumentViewModel__elements;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24FB091B0()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_24FB091BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB470F8();
  *a1 = result;
  return result;
}

uint64_t sub_24FB0920C()
{
  return type metadata accessor for DocumentViewModel();
}

uint64_t type metadata accessor for DocumentViewModel()
{
  uint64_t result = qword_269A4F5A8;
  if (!qword_269A4F5A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24FB09260()
{
  sub_24FB092F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24FB092F0()
{
  if (!qword_269A4F5B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F4C0);
    unint64_t v0 = sub_24FB47168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A4F5B8);
    }
  }
}

uint64_t DocumentBlockQuoteElement.init(id:text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for DocumentBlockQuoteElement() + 20);
  uint64_t v8 = sub_24FB46D18();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a2, v8);
}

uint64_t type metadata accessor for DocumentBlockQuoteElement()
{
  uint64_t result = qword_269A4F5F8;
  if (!qword_269A4F5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentBlockQuoteElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentBlockQuoteElement.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentBlockQuoteElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

__n128 DocumentBlockQuoteElement.makeView(textWrapOffset:)@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for DocumentBlockQuoteElement() + 20);
  uint64_t v8 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for DocumentBlockQuoteView();
  uint64_t v10 = (double *)(a1 + v9[5]);
  *uint64_t v10 = a2;
  v10[1] = a3;
  *(void *)(a1 + v9[6]) = 0x402A000000000000;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a1 + v9[7]) = result;
  *(void *)(a1 + v9[8]) = 0x4000000000000000;
  *(void *)(a1 + v9[9]) = 0x4014000000000000;
  return result;
}

__n128 DocumentBlockQuoteElement.makeView()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentBlockQuoteElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  uint64_t v5 = (int *)type metadata accessor for DocumentBlockQuoteView();
  uint64_t v6 = (void *)(a1 + v5[5]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(a1 + v5[6]) = 0x402A000000000000;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a1 + v5[7]) = result;
  *(void *)(a1 + v5[8]) = 0x4000000000000000;
  *(void *)(a1 + v5[9]) = 0x4014000000000000;
  return result;
}

uint64_t DocumentBlockQuoteElement.append(_:)@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for DocumentBlockQuoteElement();
  a1[4] = sub_24FB09B54(&qword_269A4F5C8, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteElement);
  __swift_allocate_boxed_opaque_existential_1(a1);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  return sub_24FB46B98();
}

uint64_t DocumentBlockQuoteElement.supportTextWrapTop.getter()
{
  return 1;
}

uint64_t static DocumentBlockQuoteElement.__derived_struct_equals(_:_:)()
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DocumentBlockQuoteElement();
  return sub_24FB46C08();
}

uint64_t sub_24FB097B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  __swift_allocate_boxed_opaque_existential_1(a3);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  return sub_24FB46B98();
}

uint64_t sub_24FB09808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24FB46D18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_24FB09878(uint64_t a1)
{
  uint64_t result = sub_24FB09B54(&qword_269A4F5D0, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteElement);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_24FB098D0()
{
  return &protocol witness table for DocumentBlockQuoteView;
}

uint64_t sub_24FB098DC()
{
  return sub_24FB09B54(&qword_269A4F5D8, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteView);
}

__n128 sub_24FB09928@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
  uint64_t v6 = (int *)type metadata accessor for DocumentBlockQuoteView();
  uint64_t v7 = (void *)(a2 + v6[5]);
  void *v7 = 0;
  v7[1] = 0;
  *(void *)(a2 + v6[6]) = 0x402A000000000000;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a2 + v6[7]) = result;
  *(void *)(a2 + v6[8]) = 0x4000000000000000;
  *(void *)(a2 + v6[9]) = 0x4014000000000000;
  return result;
}

__n128 sub_24FB099D0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = v4 + *(int *)(a1 + 20);
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DocumentBlockQuoteView();
  uint64_t v11 = (double *)(a2 + v10[5]);
  *uint64_t v11 = a3;
  v11[1] = a4;
  *(void *)(a2 + v10[6]) = 0x402A000000000000;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a2 + v10[7]) = result;
  *(void *)(a2 + v10[8]) = 0x4000000000000000;
  *(void *)(a2 + v10[9]) = 0x4014000000000000;
  return result;
}

uint64_t sub_24FB09A88(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB09B54(&qword_269A4F5E0, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteElement);
  uint64_t result = sub_24FB09B54((unint64_t *)&unk_269A4F5E8, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB09B0C()
{
  return sub_24FB09B54(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB09B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16MarkdownDocument0B9TableViewV9RowHeaderV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_24FB09C04()
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  return sub_24FB46C08();
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentBlockQuoteElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24FB46D18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_24FB46D18();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB0A110);
}

uint64_t sub_24FB0A110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24FB46D18();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentBlockQuoteElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB0A21C);
}

uint64_t sub_24FB0A21C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24FB46FB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24FB46D18();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_24FB0A320()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24FB46D18();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t DocumentBlockQuoteView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F610);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + *(int *)(type metadata accessor for DocumentBlockQuoteView() + 24));
  *(void *)uint64_t v6 = sub_24FB47538();
  *((void *)v6 + 1) = v7;
  unsigned char v6[16] = 0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F618);
  sub_24FB0A524(v2, (uint64_t)&v6[*(int *)(v8 + 44)]);
  sub_24FAD5834((uint64_t)v6, a1, &qword_269A4F610);
  *(_WORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4F620) + 36)) = 256;
  return sub_24FAD5794((uint64_t)v6, &qword_269A4F610);
}

uint64_t type metadata accessor for DocumentBlockQuoteView()
{
  uint64_t result = qword_269A4F630;
  if (!qword_269A4F630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB0A524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v85 = sub_24FB46D18();
  uint64_t v89 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F658);
  uint64_t v91 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  long long v90 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F660);
  MEMORY[0x270FA5388](v88);
  uint64_t v94 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v87 = (char *)&v81 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v92 = (uint64_t)&v81 - v9;
  uint64_t v10 = sub_24FB47388();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F668);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F670);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v82 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F678);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v86 = (char *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4F680) - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v25 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v96 = (uint64_t)&v81 - v27;
  uint64_t v28 = type metadata accessor for DocumentBlockQuoteView();
  uint64_t v29 = (uint64_t *)(a1 + *(int *)(v28 + 28));
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v32 = (char *)v13 + *(int *)(v11 + 28);
  uint64_t v33 = *MEMORY[0x263F19860];
  uint64_t v34 = sub_24FB475C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  *uint64_t v13 = v30;
  v13[1] = v31;
  uint64_t v35 = a1;
  sub_24FB47E58();
  sub_24FB47238();
  sub_24FADC744((uint64_t)v13, (uint64_t)v17);
  uint64_t v36 = &v17[*(int *)(v15 + 44)];
  long long v37 = v102;
  *(_OWORD *)uint64_t v36 = v101;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v103;
  sub_24FADC7FC((uint64_t)v13);
  uint64_t v38 = sub_24FB47E58();
  uint64_t v39 = v82;
  sub_24FB1AE14(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v82, 0.0, 1, INFINITY, 0, v38, v40);
  sub_24FAD5794((uint64_t)v17, &qword_269A4F668);
  LOBYTE(v15) = sub_24FB47838();
  uint64_t v83 = v28;
  sub_24FB47178();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_24FAD5834(v39, (uint64_t)v23, &qword_269A4F670);
  __int16 v49 = &v23[*(int *)(v21 + 44)];
  char *v49 = v15;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_24FAD5794(v39, &qword_269A4F670);
  id v50 = objc_msgSend(self, sel_separatorColor);
  uint64_t v51 = MEMORY[0x25336DFD0](v50);
  uint64_t KeyPath = swift_getKeyPath();
  sub_24FAD5834((uint64_t)v23, (uint64_t)v25, &qword_269A4F678);
  uint64_t v53 = (uint64_t *)&v25[*((int *)v86 + 11)];
  *uint64_t v53 = KeyPath;
  v53[1] = v51;
  sub_24FAD5794((uint64_t)v23, &qword_269A4F678);
  __int16 v86 = v25;
  sub_24FAD5730((uint64_t)v25, v96, &qword_269A4F680);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
  uint64_t v89 = v35;
  v54(v84, v35, v85);
  uint64_t v55 = sub_24FB47A08();
  uint64_t v57 = v56;
  char v59 = v58;
  if (qword_269A4F350 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_269A58F38 + 16) == 1) {
    sub_24FB478A8();
  }
  else {
    sub_24FB47918();
  }
  char v60 = v59 & 1;
  uint64_t v61 = sub_24FB479C8();
  uint64_t v63 = v62;
  char v65 = v64;
  uint64_t v67 = v66;
  swift_release();
  sub_24FADAA34(v55, v57, v60);
  swift_bridgeObjectRelease();
  uint64_t v97 = v61;
  uint64_t v98 = v63;
  char v99 = v65 & 1;
  uint64_t v100 = v67;
  uint64_t v68 = v90;
  sub_24FB47B38();
  sub_24FADAA34(v61, v63, v65 & 1);
  swift_bridgeObjectRelease();
  int v69 = sub_24FB47708();
  uint64_t v70 = v91;
  long long v71 = v87;
  uint64_t v72 = v93;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v87, v68, v93);
  *(_DWORD *)&v71[*(int *)(v88 + 36)] = v69;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v72);
  uint64_t v73 = (uint64_t)v71;
  uint64_t v74 = v92;
  sub_24FAD5730(v73, v92, &qword_269A4F660);
  uint64_t v75 = v96;
  uint64_t v76 = (uint64_t)v86;
  sub_24FAD5834(v96, (uint64_t)v86, &qword_269A4F680);
  uint64_t v77 = v94;
  sub_24FAD5834(v74, v94, &qword_269A4F660);
  uint64_t v78 = v95;
  sub_24FAD5834(v76, v95, &qword_269A4F680);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F688);
  sub_24FAD5834(v77, v78 + *(int *)(v79 + 48), &qword_269A4F660);
  sub_24FAD5794(v74, &qword_269A4F660);
  sub_24FAD5794(v75, &qword_269A4F680);
  sub_24FAD5794(v77, &qword_269A4F660);
  return sub_24FAD5794(v76, &qword_269A4F680);
}

uint64_t sub_24FB0AD7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB0AD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F610);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + *(int *)(a1 + 24));
  *(void *)uint64_t v7 = sub_24FB47538();
  *((void *)v7 + 1) = v8;
  v7[16] = 0;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F618);
  sub_24FB0A524(v2, (uint64_t)&v7[*(int *)(v9 + 44)]);
  sub_24FAD5834((uint64_t)v7, a2, &qword_269A4F610);
  *(_WORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4F620) + 36)) = 256;
  return sub_24FAD5794((uint64_t)v7, &qword_269A4F610);
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentBlockQuoteView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46D18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for DocumentBlockQuoteView(uint64_t a1)
{
  uint64_t v2 = sub_24FB46D18();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB0B2A4);
}

uint64_t sub_24FB0B2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DocumentBlockQuoteView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB0B324);
}

uint64_t sub_24FB0B324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FB0B394()
{
  uint64_t result = sub_24FB46D18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24FB0B440()
{
  unint64_t result = qword_269A4F648;
  if (!qword_269A4F648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4F620);
    sub_24FB0B4BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F648);
  }
  return result;
}

unint64_t sub_24FB0B4BC()
{
  unint64_t result = qword_269A4F650;
  if (!qword_269A4F650)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F650);
  }
  return result;
}

uint64_t DocumentElementBlockQuoteParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a1;
  uint64_t v93 = a2;
  uint64_t v89 = sub_24FB46E68();
  uint64_t v96 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v95 = (char *)v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v88 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v87 = (char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F690);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v108 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_24FB46D18();
  uint64_t v92 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v94 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v97 = (char *)v80 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v91 = (char *)v80 - v11;
  MEMORY[0x270FA5388](v12);
  __int16 v86 = (char *)v80 - v13;
  uint64_t v107 = (void *)sub_24FB46DF8();
  uint64_t v14 = *(v107 - 1);
  MEMORY[0x270FA5388](v107);
  char v106 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v105 = (char *)v80 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24FB46DB8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  long long v90 = (char *)v80 - v29;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  uint64_t v30 = sub_24FB46E08();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 1, v30) == 1)
  {
    sub_24FAD5794((uint64_t)v20, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    uint64_t v32 = v93;
LABEL_11:
    sub_24FAD5794((uint64_t)v23, &qword_269A4F6A0);
    uint64_t v50 = type metadata accessor for DocumentBlockQuoteElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v32, 1, 1, v50);
  }
  uint64_t v82 = v23;
  uint64_t v84 = v24;
  uint64_t v81 = v3;
  uint64_t v33 = sub_24FB46DC8();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v30);
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v83 = v25;
  if (v34)
  {
    uint64_t v36 = *(void (***)(char *, uint64_t))(v25 + 16);
    uint64_t v35 = v25 + 16;
    long long v103 = v36;
    unint64_t v37 = v33 + ((*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64));
    LODWORD(v102) = *MEMORY[0x263F068E8];
    uint64_t v38 = (void (**)(char *, void *))(v14 + 8);
    uint64_t v100 = (void (**)(char *, uint64_t))(v35 - 8);
    long long v101 = (void (**)(char *, void, void *))(v14 + 104);
    uint64_t v104 = (void (**)(char *, char *, uint64_t))v35;
    uint64_t v99 = *(void *)(v35 + 56);
    v80[1] = v33;
    swift_bridgeObjectRetain();
    uint64_t v39 = v84;
    uint64_t v41 = v105;
    uint64_t v40 = (char *)v106;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v103)(v27, v37, v39);
      uint64_t v42 = v39;
      sub_24FB46D98();
      uint64_t v43 = v27;
      uint64_t v44 = v107;
      (*v101)(v40, v102, v107);
      char v45 = MEMORY[0x25336D160](v41, v40);
      uint64_t v46 = *v38;
      (*v38)(v40, v44);
      v46(v41, v44);
      if (v45) {
        break;
      }
      (*v100)(v43, v42);
      v37 += v99;
      --v34;
      uint64_t v39 = v42;
      uint64_t v27 = v43;
      if (!v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = 1;
        uint64_t v32 = v93;
        uint64_t v48 = v89;
        uint64_t v25 = v83;
        uint64_t v23 = v82;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v83;
    uint64_t v23 = v82;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v43, v42);
    uint64_t v47 = 0;
    uint64_t v32 = v93;
    uint64_t v48 = v89;
    uint64_t v39 = v42;
    uint64_t v25 = v49;
  }
  else
  {
    uint64_t v47 = 1;
    uint64_t v48 = v89;
    uint64_t v39 = v84;
    uint64_t v23 = v82;
    uint64_t v32 = v93;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, v47, 1, v39);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v39) == 1) {
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v90, v23, v39);
  uint64_t v52 = sub_24FB46DA8();
  uint64_t v53 = v85;
  unint64_t v54 = sub_24FB3F66C(v52);
  MEMORY[0x270FA5388](v54);
  v80[-2] = v53;
  uint64_t v55 = sub_24FB0C3B0((void (*)(uint64_t))sub_24FB0C390, (uint64_t)&v80[-4], v54);
  swift_bridgeObjectRelease();
  uint64_t v56 = v91;
  sub_24FB46D08();
  uint64_t v57 = v92;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v97, v56, v98);
  uint64_t v58 = *(void *)(v55 + 16);
  uint64_t v102 = v55;
  if (v58)
  {
    char v59 = *(void **)(v96 + 16);
    unint64_t v60 = v55 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    char v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
    uint64_t v107 = v59;
    uint64_t v62 = *(char **)(v96 + 72);
    uint64_t v104 = (void (**)(char *, char *, uint64_t))(v96 + 32);
    uint64_t v105 = v62;
    v96 += 16;
    long long v103 = (void (**)(char *, uint64_t))(v96 - 8);
    uint64_t v63 = v57;
    char v64 = (void (**)(char *, uint64_t))(v57 + 8);
    char v65 = (void (**)(char *, char *, uint64_t))(v63 + 32);
    swift_bridgeObjectRetain();
    long long v101 = (void (**)(char *, void, void *))((unint64_t)v61 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    uint64_t v66 = v108;
    uint64_t v67 = v94;
    uint64_t v68 = v97;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v107)(v66, v60, v48);
      int v69 = *v61;
      (*v61)(v66, 0, 1, v48);
      if ((*v106)(v66, 1, v48) == 1) {
        break;
      }
      uint64_t v70 = v95;
      (*v104)(v95, v108, v48);
      sub_24FB0CB28((unint64_t *)&unk_269A4F6B0, MEMORY[0x263F06970]);
      sub_24FB46BA8();
      (*v103)(v70, v48);
      uint64_t v71 = v98;
      (*v64)(v68, v98);
      uint64_t v72 = v71;
      uint64_t v66 = v108;
      (*v65)(v68, v67, v72);
      v60 += (unint64_t)v105;
      if (!--v58) {
        goto LABEL_18;
      }
    }
  }
  else
  {
    int v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    swift_bridgeObjectRetain();
    uint64_t v66 = v108;
LABEL_18:
    v69(v66, 1, 1, v48);
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = v92;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  uint64_t v75 = v86;
  uint64_t v76 = v98;
  v74(v86, v97, v98);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v91, v76);
  swift_bridgeObjectRelease();
  uint64_t v77 = v87;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v90, v84);
  uint64_t v78 = type metadata accessor for DocumentBlockQuoteElement();
  uint64_t v79 = v93;
  v74((char *)(v93 + *(int *)(v78 + 20)), v75, v76);
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v79, v77, v81);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v79, 0, 1, v78);
}

uint64_t sub_24FB0C0E0()
{
  return sub_24FB48018() & 1;
}

uint64_t sub_24FB0C13C()
{
  return sub_24FB47FE8();
}

void sub_24FB0C184()
{
}

void sub_24FB0C1AC()
{
}

unint64_t sub_24FB0C1CC()
{
  unint64_t result = qword_269A4F6A8;
  if (!qword_269A4F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F6A8);
  }
  return result;
}

void sub_24FB0C220()
{
}

uint64_t sub_24FB0C248()
{
  return 8;
}

uint64_t sub_24FB0C254()
{
  return swift_release();
}

uint64_t sub_24FB0C25C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FB0C26C()
{
  return sub_24FB47FE8();
}

void *sub_24FB0C2B4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB0C2C0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  return sub_24FAD5794((uint64_t)v2, &qword_269A4F6C0);
}

uint64_t sub_24FB0C390()
{
  return sub_24FB0C2C0();
}

uint64_t sub_24FB0C3B0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v18 = sub_24FB46E68();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_24FB2E58C(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v11 = *(void *)(sub_24FB46C78() - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v17 = *(void *)(v11 + 72);
    v16[1] = v6 + 32;
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_24FB2E58C(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v18);
      v12 += v17;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_24FB0C5BC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for DocumentTableView.RowHeader(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_24FB2E634(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(sub_24FB46C78() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_24FB2E634(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_24FB0CB84((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for DocumentTableView.RowHeader);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_24FB0C7B8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v6 = type metadata accessor for DocumentTableView.TableDatum(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_24FB2E5F8(0, v10, 0);
    uint64_t v11 = v20;
    for (int64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v19 = *i;
      swift_bridgeObjectRetain();
      v17(&v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v20 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_24FB2E5F8(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v20;
      }
      *(void *)(v11 + 16) = v14 + 1;
      sub_24FB0CB84((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, type metadata accessor for DocumentTableView.TableDatum);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_24FB0C978(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24FB2E6AC(0, v5, 0);
    uint64_t v6 = v19;
    uint64_t v8 = *(void *)(sub_24FB46C78() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      a1(v18, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v18[0];
      uint64_t v11 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24FB2E6AC(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
      v9 += v16;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_24FB0CAE0()
{
  return sub_24FB0CB28(&qword_269A4F5D0, (void (*)(uint64_t))type metadata accessor for DocumentBlockQuoteElement);
}

uint64_t sub_24FB0CB28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementBlockQuoteParser()
{
  return &type metadata for DocumentElementBlockQuoteParser;
}

uint64_t sub_24FB0CB84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24FB0CBEC()
{
  unint64_t result = qword_269A4F6C8;
  if (!qword_269A4F6C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F6C8);
  }
  return result;
}

uint64_t DocumentBreakElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentBreakElement.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*DocumentBreakElement.id.modify())()
{
  return nullsub_1;
}

_UNKNOWN **sub_24FB0CD44()
{
  return &protocol witness table for DocumentBreakView;
}

unint64_t sub_24FB0CD54()
{
  unint64_t result = qword_269A4F6D8;
  if (!qword_269A4F6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F6D8);
  }
  return result;
}

uint64_t sub_24FB0CDA8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB0CEC0(&qword_269A4F6E0, (void (*)(uint64_t))type metadata accessor for DocumentBreakElement);
  uint64_t result = sub_24FB0CEC0((unint64_t *)&unk_269A4F6E8, (void (*)(uint64_t))type metadata accessor for DocumentBreakElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for DocumentBreakElement()
{
  uint64_t result = qword_269A4F6F8;
  if (!qword_269A4F6F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB0CE78()
{
  return sub_24FB0CEC0(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB0CEC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DocumentBreakElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for DocumentBreakElement(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DocumentBreakElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DocumentBreakElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DocumentBreakElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DocumentBreakElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentBreakElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB0D180);
}

uint64_t sub_24FB0D180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DocumentBreakElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB0D200);
}

uint64_t sub_24FB0D200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FB0D270()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DocumentBreakView.body.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24FB47E58();
  sub_24FB47238();
  sub_24FB47C28();
  uint64_t v2 = sub_24FB47C18();
  swift_release();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = v2;
  return result;
}

uint64_t sub_24FB0D3C0@<X0>(uint64_t a1@<X8>)
{
  sub_24FB47E58();
  sub_24FB47238();
  sub_24FB47C28();
  uint64_t v2 = sub_24FB47C18();
  swift_release();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = v2;
  return result;
}

uint64_t sub_24FB0D484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47428();
  *a1 = result;
  return result;
}

uint64_t sub_24FB0D4B0()
{
  return sub_24FB47438();
}

uint64_t sub_24FB0D4DC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DocumentBreakView()
{
  return &type metadata for DocumentBreakView;
}

unint64_t sub_24FB0D50C()
{
  unint64_t result = qword_269A4F710;
  if (!qword_269A4F710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F718);
    sub_24FB0D588();
    sub_24FB0D658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F710);
  }
  return result;
}

unint64_t sub_24FB0D588()
{
  unint64_t result = qword_269A4F720;
  if (!qword_269A4F720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F728);
    sub_24FB0D604();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F720);
  }
  return result;
}

unint64_t sub_24FB0D604()
{
  unint64_t result = qword_269A4F730;
  if (!qword_269A4F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F730);
  }
  return result;
}

unint64_t sub_24FB0D658()
{
  unint64_t result = qword_269A4F738;
  if (!qword_269A4F738)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F738);
  }
  return result;
}

uint64_t DocumentElementBreakParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = sub_24FB46DF8();
  uint64_t v39 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24FB46DB8();
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24FB46E08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24FB0DB60((uint64_t)v9);
LABEL_10:
    uint64_t v25 = type metadata accessor for DocumentBreakElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a1, 1, 1, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  uint64_t v14 = sub_24FB46DC8();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_10;
  }
  uint64_t v30 = v13;
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  uint64_t v33 = a1;
  uint64_t v16 = v4 + 16;
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v29[1] = v14;
  unint64_t v18 = v14 + v17;
  uint64_t v19 = (uint64_t (**)(char *, uint64_t))(v39 + 88);
  int v37 = *MEMORY[0x263F068F8];
  uint64_t v20 = (void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v21 = (void (**)(char *, uint64_t))(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v36 = *(void *)(v16 + 56);
  uint64_t v23 = v34;
  uint64_t v22 = v35;
  while (1)
  {
    v38(v6, v18, v23);
    sub_24FB46D98();
    int v24 = (*v19)(v3, v22);
    if (v24 == v37) {
      break;
    }
    (*v20)(v3, v22);
    (*v21)(v6, v23);
    v18 += v36;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v32;
      a1 = v33;
      unint64_t v13 = v30;
      uint64_t v11 = v31;
      goto LABEL_9;
    }
  }
  (*v21)(v6, v23);
  swift_bridgeObjectRelease();
  uint64_t v27 = v33;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  uint64_t v28 = type metadata accessor for DocumentBreakElement();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
}

uint64_t sub_24FB0DB2C()
{
  return 8;
}

uint64_t sub_24FB0DB38()
{
  return swift_release();
}

uint64_t sub_24FB0DB40(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB0DB54(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB0DB60(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24FB0DBC8()
{
  unint64_t result = qword_269A4F748[0];
  if (!qword_269A4F748[0])
  {
    type metadata accessor for DocumentBreakElement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269A4F748);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementBreakParser()
{
  return &type metadata for DocumentElementBreakParser;
}

uint64_t sub_24FB0DC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

void sub_24FB0DC3C()
{
  sub_24FB47DB8();
  if (v0 <= 0x3F)
  {
    sub_24FB0F25C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_24FB0DD1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  unint64_t v8 = ((v7 + 16) & ~(unint64_t)v7) + *(void *)(v6 + 64);
  uint64_t v9 = sub_24FB471A8();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 & 0xF8 | 7;
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  int v14 = (v11 | v7) & 0x100000;
  uint64_t v15 = *a2;
  *a1 = *a2;
  if ((v12 | v7) != 7
    || v14 != 0
    || ((v13 + 8 + ((v12 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (void *)(v15 + (((v12 | v7) + 16) & ~(v12 | v7)));
  }
  else
  {
    uint64_t v40 = v10;
    uint64_t v41 = v9;
    uint64_t v43 = v13 + 8;
    unint64_t v18 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v18 = *v19;
    unint64_t v20 = ((unint64_t)v18 + v7 + 8) & ~(unint64_t)v7;
    uint64_t v42 = a2;
    uint64_t v21 = v5;
    uint64_t v22 = v13;
    unint64_t v23 = ((unint64_t)v19 + v7 + 8) & ~(unint64_t)v7;
    int v24 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    uint64_t v25 = v22;
    v24(v20, v23, v21);
    uint64_t v26 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)(((unint64_t)v42 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (void *)(((unint64_t)v26 + v12 + 16) & ~v12);
    uint64_t v30 = (unsigned __int8 *)(((unint64_t)v27 + v12 + 16) & ~v12);
    unsigned int v31 = v30[v25];
    swift_retain();
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v32 = v25;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v30;
          goto LABEL_22;
        case 2:
          int v33 = *(unsigned __int16 *)v30;
          goto LABEL_22;
        case 3:
          int v33 = *(unsigned __int16 *)v30 | (v30[2] << 16);
          goto LABEL_22;
        case 4:
          int v33 = *(_DWORD *)v30;
LABEL_22:
          int v34 = (v33 | ((v31 - 2) << (8 * v25))) + 2;
          unsigned int v35 = v33 + 2;
          if (v25 >= 4) {
            unsigned int v31 = v35;
          }
          else {
            unsigned int v31 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v40 + 16))(v29, v30, v41);
      char v36 = 1;
    }
    else
    {
      *uint64_t v29 = *(void *)v30;
      swift_retain();
      char v36 = 0;
    }
    *((unsigned char *)v29 + v25) = v36;
    int v37 = (void *)(((unint64_t)v29 + v43) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = (void *)((unint64_t)&v30[v43] & 0xFFFFFFFFFFFFFFF8);
    *int v37 = *v38;
    v37[1] = v38[1];
  }
  swift_retain();
  return a1;
}

uint64_t sub_24FB0E038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = v5 + 8;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7);
  unint64_t v8 = (a1 + *(void *)(v6 + 56) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v9 = sub_24FB471A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v12 = (unsigned __int8 *)((v8 + v11 + 16) & ~v11);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v12, v9);
  }
  else {
    swift_release();
  }
  return swift_release();
}

void *sub_24FB0E224(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v11, v12, v7);
  uint64_t v13 = ((v10 + 16) & ~v10) + *(void *)(v9 + 48) + 7;
  unsigned int v14 = (void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  uint64_t v16 = (void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v14;
  v16[1] = v15;
  uint64_t v17 = sub_24FB471A8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v20 = v19 + 23;
  unint64_t v21 = (unint64_t)v16 + v19 + 23;
  unint64_t v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (void *)(v21 & v22);
  int v24 = (unsigned __int8 *)(((unint64_t)v14 + v20) & v22);
  if (*(void *)(v18 + 64) <= 8uLL) {
    uint64_t v25 = 8;
  }
  else {
    uint64_t v25 = *(void *)(*(void *)(v17 - 8) + 64);
  }
  unsigned int v26 = v24[v25];
  swift_retain();
  if (v26 >= 2)
  {
    if (v25 <= 3) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v24;
        goto LABEL_13;
      case 2:
        int v28 = *(unsigned __int16 *)v24;
        goto LABEL_13;
      case 3:
        int v28 = *(unsigned __int16 *)v24 | (v24[2] << 16);
        goto LABEL_13;
      case 4:
        int v28 = *(_DWORD *)v24;
LABEL_13:
        int v29 = (v28 | ((v26 - 2) << (8 * v25))) + 2;
        unsigned int v30 = v28 + 2;
        if (v25 >= 4) {
          unsigned int v26 = v30;
        }
        else {
          unsigned int v26 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v26 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v18 + 16))(v23, v24, v17);
    char v31 = 1;
  }
  else
  {
    *unint64_t v23 = *(void *)v24;
    swift_retain();
    char v31 = 0;
  }
  *((unsigned char *)v23 + v25) = v31;
  uint64_t v32 = (void *)(((unint64_t)v23 + v25 + 8) & 0xFFFFFFFFFFFFFFF8);
  int v33 = (void *)((unint64_t)&v24[v25 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_retain();
  return a1;
}

void *sub_24FB0E490(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  void *v7 = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 40) + 7;
  uint64_t v12 = (void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = sub_24FB471A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = v17 + 23;
  unint64_t v19 = (unint64_t)v12 + v17 + 23;
  unint64_t v20 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v19 & v20;
  unint64_t v22 = ((unint64_t)v13 + v18) & v20;
  if (*(void *)(v16 + 64) <= 8uLL) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  if (v21 != v22)
  {
    uint64_t v24 = v15;
    unsigned int v25 = *(unsigned __int8 *)(v21 + v23);
    unsigned int v26 = v25 - 2;
    if (v25 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v27 = v23;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *(unsigned __int8 *)v21;
          goto LABEL_14;
        case 2:
          int v28 = *(unsigned __int16 *)v21;
          goto LABEL_14;
        case 3:
          int v28 = *(unsigned __int16 *)(v19 & v20) | (*(unsigned __int8 *)((v19 & v20) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v28 = *(_DWORD *)v21;
LABEL_14:
          int v29 = (v28 | (v26 << (8 * v23))) + 2;
          unsigned int v25 = v28 + 2;
          if (v23 < 4) {
            unsigned int v25 = v29;
          }
          break;
        default:
          break;
      }
    }
    if (v25 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v21, v15);
    }
    else {
      swift_release();
    }
    unsigned int v30 = *(unsigned __int8 *)(v22 + v23);
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v32 = v23;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *(unsigned __int8 *)v22;
          goto LABEL_28;
        case 2:
          int v33 = *(unsigned __int16 *)v22;
          goto LABEL_28;
        case 3:
          int v33 = *(unsigned __int16 *)v22 | (*(unsigned __int8 *)(v22 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v33 = *(_DWORD *)v22;
LABEL_28:
          int v34 = (v33 | (v31 << (8 * v23))) + 2;
          unsigned int v30 = v33 + 2;
          if (v23 < 4) {
            unsigned int v30 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v30 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))(v21, v22, v24);
      *(unsigned char *)(v21 + v23) = 1;
    }
    else
    {
      *(void *)unint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + v23) = 0;
      swift_retain();
    }
  }
  unsigned int v35 = (void *)(((v21 | 7) + v23 + 1) & 0xFFFFFFFFFFFFFFF8);
  char v36 = (void *)(((v22 | 7) + v23 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v35 = *v36;
  v35[1] = v36[1];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24FB0E7E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9);
  uint64_t v10 = ((v9 + 16) & ~v9) + *(void *)(v8 + 32) + 7;
  uint64_t v11 = (_OWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = sub_24FB471A8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = v15 + 23;
  unint64_t v17 = (unint64_t)v11 + v15 + 23;
  unint64_t v18 = ~v15 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (void *)(v17 & v18);
  unint64_t v20 = (unsigned __int8 *)(((unint64_t)v12 + v16) & v18);
  if (*(void *)(v14 + 64) <= 8uLL) {
    uint64_t v21 = 8;
  }
  else {
    uint64_t v21 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  unsigned int v22 = v20[v21];
  unsigned int v23 = v22 - 2;
  if (v22 >= 2)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *v20;
        goto LABEL_13;
      case 2:
        int v25 = *(unsigned __int16 *)v20;
        goto LABEL_13;
      case 3:
        int v25 = *(unsigned __int16 *)v20 | (v20[2] << 16);
        goto LABEL_13;
      case 4:
        int v25 = *(_DWORD *)v20;
LABEL_13:
        int v26 = (v25 | (v23 << (8 * v21))) + 2;
        unsigned int v22 = v25 + 2;
        if (v21 < 4) {
          unsigned int v22 = v26;
        }
        break;
      default:
        break;
    }
  }
  if (v22 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 32))(v19, v20, v13);
    char v27 = 1;
  }
  else
  {
    char v27 = 0;
    *unint64_t v19 = *(void *)v20;
  }
  *((unsigned char *)v19 + v21) = v27;
  *(_OWORD *)(((unint64_t)v19 + v21 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v20[v21 + 8] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_24FB0EA00(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  void *v7 = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 24) + 7;
  uint64_t v12 = (_OWORD *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (_OWORD *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  uint64_t v14 = sub_24FB471A8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  uint64_t v17 = v16 + 23;
  unint64_t v18 = (unint64_t)v12 + v16 + 23;
  unint64_t v19 = ~v16 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v18 & v19;
  unint64_t v21 = ((unint64_t)v13 + v17) & v19;
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v22 = 8;
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (v20 != v21)
  {
    uint64_t v23 = v14;
    unsigned int v24 = *(unsigned __int8 *)(v20 + v22);
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v26 = v22;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *(unsigned __int8 *)v20;
          goto LABEL_14;
        case 2:
          int v27 = *(unsigned __int16 *)v20;
          goto LABEL_14;
        case 3:
          int v27 = *(unsigned __int16 *)(v18 & v19) | (*(unsigned __int8 *)((v18 & v19) + 2) << 16);
          goto LABEL_14;
        case 4:
          int v27 = *(_DWORD *)v20;
LABEL_14:
          int v28 = (v27 | (v25 << (8 * v22))) + 2;
          unsigned int v24 = v27 + 2;
          if (v22 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v20, v14);
    }
    else {
      swift_release();
    }
    unsigned int v29 = *(unsigned __int8 *)(v21 + v22);
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v22 <= 3) {
        uint64_t v31 = v22;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *(unsigned __int8 *)v21;
          goto LABEL_28;
        case 2:
          int v32 = *(unsigned __int16 *)v21;
          goto LABEL_28;
        case 3:
          int v32 = *(unsigned __int16 *)v21 | (*(unsigned __int8 *)(v21 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v32 = *(_DWORD *)v21;
LABEL_28:
          int v33 = (v32 | (v30 << (8 * v22))) + 2;
          unsigned int v29 = v32 + 2;
          if (v22 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 32))(v20, v21, v23);
      char v34 = 1;
    }
    else
    {
      char v34 = 0;
      *(void *)unint64_t v20 = *(void *)v21;
    }
    *(unsigned char *)(v20 + v22) = v34;
  }
  unsigned int v35 = (void *)(((v20 | 7) + v22 + 1) & 0xFFFFFFFFFFFFFFF8);
  char v36 = (void *)(((v21 | 7) + v22 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v35 = *v36;
  v35[1] = v36[1];
  swift_release();
  return a1;
}

uint64_t sub_24FB0ED24(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(sub_24FB471A8() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
    unint64_t v13 = ((v10 + ((v12 + ((*(void *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v14 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v8 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v13);
        if (!v18) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v18) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24FB0EF6CLL);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v13);
        if (!v18) {
          break;
        }
LABEL_24:
        int v20 = v18 - 1;
        if (v14)
        {
          int v20 = 0;
          LODWORD(v14) = *a1;
        }
        return v8 + (v14 | v20) + 1;
      default:
        break;
    }
  }
  unint64_t v21 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v23 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    return v23(((unint64_t)v21 + v11 + 8) & ~v11, v7, v5);
  }
  else
  {
    unint64_t v22 = *v21;
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    return (v22 + 1);
  }
}

void sub_24FB0EF80(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(sub_24FB471A8() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = ((v12 + ((v14 + ((*(void *)(v8 + 64) + ((v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14) + 8) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v10 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v10;
    if (a2 <= v10)
    {
LABEL_19:
      switch(v18)
      {
        case 1:
          *((unsigned char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_45;
        case 4:
          *(_DWORD *)((char *)a1 + v15) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            unint64_t v21 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
            if ((v9 & 0x80000000) != 0)
            {
              uint64_t v23 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
              v23(((unint64_t)v21 + v13 + 8) & ~v13, a2, v9, v7);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = (a2 - 1);
              }
              *unint64_t v21 = v22;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (v15) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a3 - v10 + 1;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v10;
    if (a2 <= v10) {
      goto LABEL_19;
    }
  }
  if (v15) {
    int v20 = 1;
  }
  else {
    int v20 = v19;
  }
  if (v15)
  {
    bzero(a1, v15);
    *a1 = ~v10 + a2;
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v15) = v20;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v15) = v20;
      break;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x24FB0F21CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = v20;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AnimatedCornerButton()
{
  return __swift_instantiateGenericMetadata();
}

void sub_24FB0F25C()
{
  if (!qword_269A4F7D8)
  {
    sub_24FB471A8();
    unint64_t v0 = sub_24FB471C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A4F7D8);
    }
  }
}

uint64_t sub_24FB0F2B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB0F2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24FB48248();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_24FB48238();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24FAD5794(a1, &qword_269A4F8B8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24FB48208();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_24FB0F480()
{
  sub_24FB47DB8();
  JUMPOUT(0x25336E100);
}

uint64_t sub_24FB0F4C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v93 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v92 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB471A8();
  uint64_t v94 = *(void *)(v5 - 8);
  uint64_t v95 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v96 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a1;
  uint64_t v89 = *(void *)(a1 - 8);
  uint64_t v90 = *(void *)(v89 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v88 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E0);
  uint64_t v9 = sub_24FB481E8();
  uint64_t v100 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v125 = v9;
  *((void *)&v125 + 1) = AssociatedTypeWitness;
  uint64_t v126 = v11;
  unint64_t v127 = WitnessTable;
  uint64_t v128 = AssociatedConformanceWitness;
  sub_24FB47E08();
  uint64_t v124 = sub_24FB128A0(&qword_269A4F7F0, &qword_269A4F7E8, (void (*)(void))sub_24FB12870);
  swift_getWitnessTable();
  sub_24FB47D68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F828);
  sub_24FB47368();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F830);
  sub_24FB47368();
  sub_24FB475D8();
  sub_24FB47368();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
  uint64_t v122 = v14;
  uint64_t v123 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = sub_24FAD57F0(&qword_269A4F840, &qword_269A4F830);
  uint64_t v120 = v16;
  uint64_t v121 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v118 = v18;
  uint64_t v119 = v19;
  swift_getWitnessTable();
  sub_24FB473B8();
  sub_24FB47368();
  sub_24FB47398();
  sub_24FB47368();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F848);
  uint64_t v20 = sub_24FB47368();
  unint64_t v21 = sub_24FB129C0();
  uint64_t v22 = swift_getWitnessTable();
  unint64_t v116 = v21;
  uint64_t v117 = v22;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v115 = MEMORY[0x263F190D0];
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_24FAD57F0(&qword_269A4F868, &qword_269A4F848);
  uint64_t v112 = v23;
  uint64_t v113 = v24;
  uint64_t v79 = v20;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v25 = sub_24FB47D38();
  uint64_t v81 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v74 = (char *)&v71 - v26;
  uint64_t v76 = v25;
  uint64_t v27 = sub_24FB47368();
  uint64_t v80 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v77 = (char *)&v71 - v28;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v110 = v75;
  uint64_t v111 = MEMORY[0x263F18880];
  uint64_t v72 = v27;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v99 = v29;
  unint64_t v73 = sub_24FB12A60();
  *(void *)&long long v125 = v27;
  *((void *)&v125 + 1) = &type metadata for NoButtonStyle;
  uint64_t v126 = v29;
  unint64_t v127 = v73;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v84 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  int v32 = (char *)&v71 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F878);
  uint64_t v85 = OpaqueTypeMetadata2;
  uint64_t v33 = sub_24FB47368();
  uint64_t v86 = *(void *)(v33 - 8);
  uint64_t v87 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v82 = (char *)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v36 = MEMORY[0x270FA5388](v35);
  uint64_t v83 = (char *)&v71 - v37;
  uint64_t v39 = v88;
  uint64_t v38 = v89;
  uint64_t v40 = v91;
  uint64_t v41 = v98;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v89 + 16))(v88, v91, v98, v36);
  unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v100;
  *(void *)(v43 + 16) = v2;
  *(void *)(v43 + 24) = v44;
  unint64_t v45 = v43 + v42;
  uint64_t v46 = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v45, v39, v41);
  uint64_t v47 = v72;
  uint64_t v101 = v2;
  uint64_t v102 = v44;
  uint64_t v48 = v32;
  uint64_t v103 = v40;
  uint64_t v49 = v74;
  sub_24FB47D28();
  uint64_t v50 = (uint64_t *)(v46 + *(int *)(v41 + 44));
  uint64_t v51 = *v50;
  uint64_t v52 = v50[1];
  *(void *)&long long v125 = v51;
  *((void *)&v125 + 1) = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F880);
  sub_24FB47CF8();
  sub_24FB47EA8();
  uint64_t v53 = v76;
  unint64_t v54 = v77;
  sub_24FB47AD8();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v53);
  unint64_t v55 = v73;
  sub_24FB47AB8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v54, v47);
  swift_getKeyPath();
  uint64_t v56 = sub_24FB47DB8();
  uint64_t v57 = v92;
  MEMORY[0x25336E100](v56);
  (*(void (**)(long long *__return_ptr, uint64_t))(v100 + 32))(&v125, v2);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v57, v2);
  LOBYTE(OpaqueTypeMetadata2) = v128;
  long long v130 = v125;
  sub_24FB12B58((uint64_t)&v130);
  uint64_t v129 = v126;
  sub_24FB12B84((uint64_t)&v129);
  if (OpaqueTypeMetadata2)
  {
    uint64_t v60 = v94;
    uint64_t v59 = v95;
    uint64_t v58 = v96;
    (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))(v96, *MEMORY[0x263F18508], v95);
  }
  else
  {
    uint64_t v58 = v96;
    sub_24FB3718C(v96);
    uint64_t v60 = v94;
    uint64_t v59 = v95;
  }
  uint64_t v106 = v47;
  uint64_t v107 = &type metadata for NoButtonStyle;
  uint64_t v108 = v99;
  unint64_t v109 = v55;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v62 = v82;
  uint64_t v63 = v85;
  sub_24FB47AC8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v63);
  uint64_t v64 = sub_24FAD57F0(&qword_269A4F888, &qword_269A4F878);
  uint64_t v104 = OpaqueTypeConformance2;
  uint64_t v105 = v64;
  uint64_t v65 = v87;
  swift_getWitnessTable();
  uint64_t v66 = v86;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  uint64_t v68 = v83;
  v67(v83, v62, v65);
  int v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  v69(v62, v65);
  v67(v97, v68, v65);
  return ((uint64_t (*)(char *, uint64_t))v69)(v68, v65);
}

uint64_t sub_24FB10060(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB48248();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  sub_24FB48228();
  uint64_t v10 = sub_24FB48218();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8F500];
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v13;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, a1);
  sub_24FB0F2F8((uint64_t)v8, (uint64_t)&unk_269A4F8C8, v12);
  return swift_release();
}

uint64_t sub_24FB1023C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v69 = a1;
  unint64_t v73 = a4;
  uint64_t v72 = sub_24FB47E98();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F860);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F7E0);
  MEMORY[0x270FA5388](v64);
  uint64_t v68 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24FB481E8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v90 = v11;
  *((void *)&v90 + 1) = AssociatedTypeWitness;
  *(void *)&long long v91 = v13;
  *((void *)&v91 + 1) = WitnessTable;
  *(void *)&long long v92 = AssociatedConformanceWitness;
  sub_24FB47E08();
  uint64_t v89 = sub_24FB128A0(&qword_269A4F7F0, &qword_269A4F7E8, (void (*)(void))sub_24FB12870);
  swift_getWitnessTable();
  sub_24FB47D68();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F828);
  sub_24FB47368();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F830);
  sub_24FB47368();
  sub_24FB475D8();
  uint64_t v16 = sub_24FB47368();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
  uint64_t v87 = v17;
  uint64_t v88 = v18;
  uint64_t v19 = MEMORY[0x263F18E48];
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_24FAD57F0(&qword_269A4F840, &qword_269A4F830);
  uint64_t v85 = v20;
  uint64_t v86 = v21;
  uint64_t v65 = v19;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v83 = v22;
  uint64_t v84 = v23;
  uint64_t v58 = v16;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v61 = sub_24FB473B8();
  uint64_t v24 = v64;
  uint64_t v59 = sub_24FB47368();
  uint64_t v63 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v26 = (char *)&v54 - v25;
  sub_24FB47398();
  uint64_t v60 = sub_24FB47368();
  uint64_t v67 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  unint64_t v55 = (char *)&v54 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F848);
  uint64_t v28 = sub_24FB47368();
  uint64_t v66 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v56 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v62 = (char *)&v54 - v31;
  uint64_t *v9 = sub_24FB47E58();
  v9[1] = v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F890);
  uint64_t v34 = v69;
  sub_24FB10B58(v69, a2, a3, (uint64_t *)((char *)v9 + *(int *)(v33 + 44)));
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v35 = v68;
  sub_24FAD5834((uint64_t)v9, v68, &qword_269A4F860);
  __n128 v36 = (_OWORD *)(v35 + *(int *)(v24 + 36));
  long long v37 = v91;
  *__n128 v36 = v90;
  v36[1] = v37;
  v36[2] = v92;
  sub_24FAD5794((uint64_t)v9, &qword_269A4F860);
  sub_24FB47E58();
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v76 = v34;
  unint64_t v38 = sub_24FB129C0();
  sub_24FB47B58();
  sub_24FAD5794(v35, &qword_269A4F7E0);
  uint64_t v39 = type metadata accessor for AnimatedCornerButton();
  uint64_t v40 = v70;
  sub_24FB11EEC(v39, v70);
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v81 = v38;
  uint64_t v82 = v41;
  uint64_t v42 = v59;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v55;
  sub_24FB47B98();
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v40, v72);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v42);
  uint64_t v79 = v43;
  uint64_t v80 = MEMORY[0x263F190D0];
  uint64_t v45 = v60;
  uint64_t v46 = swift_getWitnessTable();
  sub_24FB12BE0();
  uint64_t v47 = v56;
  sub_24FB47BA8();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v45);
  uint64_t v48 = sub_24FAD57F0(&qword_269A4F868, &qword_269A4F848);
  uint64_t v77 = v46;
  uint64_t v78 = v48;
  swift_getWitnessTable();
  uint64_t v49 = v66;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v51 = v62;
  v50(v62, v47, v28);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
  v52(v47, v28);
  v50(v73, v51, v28);
  return ((uint64_t (*)(char *, uint64_t))v52)(v51, v28);
}

uint64_t sub_24FB10B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void (*v18)(long long *__return_ptr, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  long long v37;
  uint64_t v38;
  char v39;
  long long v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  long long v44;
  uint64_t v45;
  long long v46;

  __n128 v36 = a4;
  uint64_t v32 = sub_24FB47E28();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8A8);
  MEMORY[0x270FA5388](v31);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v35 = (uint64_t)&v28 - v13;
  uint64_t v14 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnimatedCornerButton();
  uint64_t v29 = sub_24FB47DB8();
  uint64_t v33 = a1;
  MEMORY[0x25336E100]();
  uint64_t v18 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 32);
  uint64_t v34 = a3;
  uint64_t v30 = v18;
  v18(&v37, a2, a3);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v14 + 8);
  v19(v17, a2);
  LOBYTE(a1) = v39;
  uint64_t v46 = v37;
  sub_24FB12B58((uint64_t)&v46);
  uint64_t v45 = v38;
  sub_24FB12B84((uint64_t)&v45);
  uint64_t v20 = 0;
  if ((a1 & 1) == 0)
  {
    sub_24FB47C28();
    uint64_t v20 = sub_24FB47C18();
    swift_release();
  }
  sub_24FB47E18();
  uint64_t v21 = v32;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v32);
  *(_WORD *)&v11[*(int *)(v31 + 56)] = 256;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  uint64_t v22 = v35;
  sub_24FB12E7C((uint64_t)v11, v35);
  MEMORY[0x25336E100](v29);
  v30(&v40, a2, v34);
  v19(v17, a2);
  uint64_t v23 = v42;
  uint64_t v44 = v40;
  sub_24FB12B58((uint64_t)&v44);
  uint64_t v43 = v41;
  sub_24FB12B84((uint64_t)&v43);
  if (v23)
  {
    sub_24FB47BE8();
    uint64_t v24 = sub_24FB47C18();
    swift_release();
  }
  else
  {
    uint64_t v24 = 0;
  }
  sub_24FAD5834(v22, (uint64_t)v11, &qword_269A4F8A8);
  uint64_t v25 = v36;
  *__n128 v36 = v20;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8B0);
  sub_24FAD5834((uint64_t)v11, (uint64_t)v25 + *(int *)(v26 + 48), &qword_269A4F8A8);
  *(uint64_t *)((char *)v25 + *(int *)(v26 + 64)) = v24;
  swift_retain();
  swift_retain();
  sub_24FAD5794(v22, &qword_269A4F8A8);
  swift_release();
  sub_24FAD5794((uint64_t)v11, &qword_269A4F8A8);
  return swift_release();
}

uint64_t sub_24FB10F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v58 = a4;
  uint64_t v57 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v56 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8A0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24FB481E8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v71 = v10;
  *((void *)&v71 + 1) = AssociatedTypeWitness;
  uint64_t v72 = v12;
  uint64_t v73 = WitnessTable;
  uint64_t v74 = AssociatedConformanceWitness;
  sub_24FB47E08();
  uint64_t v70 = sub_24FB128A0(&qword_269A4F7F0, &qword_269A4F7E8, (void (*)(void))sub_24FB12870);
  swift_getWitnessTable();
  uint64_t v15 = sub_24FB47D68();
  uint64_t v45 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v44 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F828);
  uint64_t v18 = sub_24FB47368();
  uint64_t v49 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v44 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F830);
  uint64_t v48 = sub_24FB47368();
  uint64_t v55 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v46 = (char *)&v44 - v21;
  uint64_t v50 = *(void *)(a3 + 16);
  uint64_t v52 = sub_24FB475D8();
  uint64_t v54 = sub_24FB47368();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v47 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v51 = (char *)&v44 - v24;
  sub_24FB47E58();
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = v59;
  sub_24FB47D58();
  uint64_t v25 = sub_24FB478B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
  sub_24FB478F8();
  sub_24FAD5794((uint64_t)v9, &qword_269A4F8A0);
  sub_24FB478E8();
  sub_24FB47928();
  swift_release();
  uint64_t v26 = swift_getWitnessTable();
  sub_24FB47B48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v15);
  type metadata accessor for AnimatedCornerButton();
  uint64_t v27 = sub_24FB47DB8();
  uint64_t v28 = v56;
  MEMORY[0x25336E100]();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v71, a2, a3);
  uint64_t v57 = *(void *)(v57 + 8);
  ((void (*)(char *, uint64_t))v57)(v28, a2);
  uint64_t v29 = v72;
  uint64_t v76 = v72;
  long long v75 = v71;
  sub_24FB12B58((uint64_t)&v75);
  uint64_t v69 = v29;
  uint64_t v30 = sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
  uint64_t v67 = v26;
  uint64_t v68 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = v46;
  sub_24FB47B28();
  sub_24FB12B84((uint64_t)&v76);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v18);
  sub_24FB47E78();
  MEMORY[0x25336E100](v27);
  uint64_t v33 = sub_24FAD57F0(&qword_269A4F840, &qword_269A4F830);
  uint64_t v65 = v31;
  uint64_t v66 = v33;
  uint64_t v34 = v48;
  uint64_t v35 = swift_getWitnessTable();
  __n128 v36 = v47;
  sub_24FB47B88();
  swift_release();
  ((void (*)(char *, uint64_t))v57)(v28, a2);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v34);
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v63 = v35;
  uint64_t v64 = v37;
  uint64_t v38 = v54;
  swift_getWitnessTable();
  uint64_t v39 = v53;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v41 = v51;
  v40(v51, v36, v38);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v36, v38);
  v40(v58, v41, v38);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v38);
}

uint64_t sub_24FB117F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v37 = a4;
  uint64_t v35 = type metadata accessor for AnimatedCornerButton();
  uint64_t v6 = *(void *)(v35 - 8);
  uint64_t v34 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v32 = a3;
  uint64_t v33 = (char *)v31 - v7;
  uint64_t v8 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = sub_24FB481E8();
  v31[5] = v10;
  void v31[3] = *(void *)(v8 + 24);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  v31[4] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E8);
  v31[2] = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  v31[1] = WitnessTable;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v39 = v10;
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  uint64_t v42 = WitnessTable;
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v15 = sub_24FB47E08();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v31 - v20;
  sub_24FB48468();
  swift_getAssociatedConformanceWitness();
  uint64_t v39 = sub_24FB481F8();
  uint64_t v22 = v33;
  uint64_t v23 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v33, v36, v35);
  unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v32;
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v25 + v24, v22, v23);
  uint64_t v27 = sub_24FB128A0(&qword_269A4F7F0, &qword_269A4F7E8, (void (*)(void))sub_24FB12870);
  sub_24FB47DF8();
  uint64_t v38 = v27;
  swift_getWitnessTable();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v28(v21, v18, v15);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v18, v15);
  v28(v37, v21, v15);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v15);
}

uint64_t sub_24FB11C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v12)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  double v17;
  double v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v32;
  void v33[5];
  long long v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  uint64_t v39;

  uint64_t v7 = *(void *)(a2 - 8);
  __n128 v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 32);
  uint64_t v30 = v11 + 32;
  uint64_t v31 = v12;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, __n128))v12)(v33, v13, v11, v8);
  uint64_t v39 = v33[2];
  sub_24FB12B84((uint64_t)&v39);
  uint64_t v32 = sub_24FB47C78();
  uint64_t v29 = a3;
  type metadata accessor for AnimatedCornerButton();
  uint64_t v14 = sub_24FB47DB8();
  MEMORY[0x25336E100]();
  uint64_t v15 = sub_24FB48018();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, a2);
  uint64_t v17 = 0.0;
  if (v15) {
    uint64_t v18 = 1.0;
  }
  else {
    uint64_t v18 = 0.0;
  }
  MEMORY[0x25336E100](v14);
  uint64_t v19 = sub_24FB48018();
  v16(v10, a2);
  if (v19) {
    uint64_t v20 = 1.0;
  }
  else {
    uint64_t v20 = 0.0;
  }
  sub_24FB47EA8();
  uint64_t v22 = v21;
  unint64_t v24 = v23;
  MEMORY[0x25336E100](v14);
  uint64_t v25 = sub_24FB48018();
  v16(v10, a2);
  if ((v25 & 1) == 0) {
    uint64_t v17 = 12.0;
  }
  v31(&v34, a2, v29);
  uint64_t v26 = v36;
  uint64_t v38 = v34;
  sub_24FB12B58((uint64_t)&v38);
  uint64_t v37 = v35;
  unint64_t result = sub_24FB12B84((uint64_t)&v37);
  *(void *)a4 = v32;
  *(double *)(a4 + 8) = v18;
  *(double *)(a4 + 16) = v20;
  *(double *)(a4 + 24) = v20;
  *(void *)(a4 + 32) = v22;
  *(void *)(a4 + 40) = v24;
  *(double *)(a4 + 48) = v17;
  *(unsigned char *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = v26;
  return result;
}

uint64_t sub_24FB11EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_24FB471A8();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24FB47E98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24FB47DB8();
  MEMORY[0x25336E100](v15);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(a1 + 24) + 32))(&v26, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  long long v30 = v26;
  sub_24FB12B58((uint64_t)&v30);
  uint64_t v29 = v27;
  sub_24FB12B84((uint64_t)&v29);
  if (v28) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v7 + 104))(v25, *MEMORY[0x263F1B998], v6);
  }
  sub_24FB3718C((uint64_t)v5);
  uint64_t v17 = v23;
  uint64_t v16 = v24;
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v5, v24);
  uint64_t v19 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  uint64_t v20 = v25;
  if (v18 == *MEMORY[0x263F184F8])
  {
    v19(v9, *MEMORY[0x263F1B968], v6);
  }
  else
  {
    v19(v9, *MEMORY[0x263F1B950], v6);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20, v9, v6);
}

uint64_t sub_24FB12200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_24FB484E8();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_24FB48228();
  v6[11] = sub_24FB48218();
  uint64_t v9 = sub_24FB48208();
  v6[12] = v9;
  v6[13] = v8;
  return MEMORY[0x270FA2498](sub_24FB122F8, v9, v8);
}

uint64_t sub_24FB122F8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AnimatedCornerButton() + 44));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F880);
  sub_24FB47CF8();
  if (*(double *)(v0 + 32) == 1.0)
  {
    uint64_t v5 = *(void *)(v0 + 40);
    long long v13 = *(_OWORD *)(v0 + 48);
    sub_24FB47E88();
    uint64_t v6 = swift_task_alloc();
    *(_OWORD *)(v6 + 16) = v13;
    *(void *)(v6 + 32) = v5;
    sub_24FB472C8();
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = sub_24FB48778();
    uint64_t v9 = v8;
    sub_24FB484D8();
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269A4F8D0 + dword_269A4F8D0);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_24FB12500;
    return v14(v7, v9, 0, 0, 1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_24FB12500()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[9] + 8))(v2[10], v2[8]);
  uint64_t v3 = v2[13];
  uint64_t v4 = v2[12];
  if (v0) {
    uint64_t v5 = sub_24FB12688;
  }
  else {
    uint64_t v5 = sub_24FB126F4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24FB12688()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24FB126F4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 48);
  swift_release();
  sub_24FB47E88();
  uint64_t v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = v5;
  *(void *)(v2 + 32) = v1;
  sub_24FB472C8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24FB127F0()
{
  return sub_24FB47D08();
}

uint64_t sub_24FB12870()
{
  return sub_24FB128A0(&qword_269A4F7F8, &qword_269A4F800, (void (*)(void))sub_24FB1291C);
}

uint64_t sub_24FB128A0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB1291C()
{
  return sub_24FB128A0(&qword_269A4F808, &qword_269A4F810, (void (*)(void))sub_24FB1294C);
}

unint64_t sub_24FB1294C()
{
  unint64_t result = qword_269A4F818;
  if (!qword_269A4F818)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F818);
  }
  return result;
}

unint64_t sub_24FB129C0()
{
  unint64_t result = qword_269A4F850;
  if (!qword_269A4F850)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F7E0);
    sub_24FAD57F0(&qword_269A4F858, &qword_269A4F860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F850);
  }
  return result;
}

unint64_t sub_24FB12A60()
{
  unint64_t result = qword_269A4F870;
  if (!qword_269A4F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F870);
  }
  return result;
}

uint64_t sub_24FB12AB8()
{
  uint64_t v1 = type metadata accessor for AnimatedCornerButton();
  (*(void (**)(void))(v0
                    + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))
                    + *(int *)(v1 + 36)))();
  return sub_24FB10060(v1);
}

uint64_t sub_24FB12B44@<X0>(char *a1@<X8>)
{
  return sub_24FB1023C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24FB12B58(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FB12B84(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FB12BB0()
{
  return sub_24FB47748();
}

uint64_t sub_24FB12BD4@<X0>(char *a1@<X8>)
{
  return sub_24FB10F64(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_24FB12BE0()
{
  unint64_t result = qword_269A4F898;
  if (!qword_269A4F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F898);
  }
  return result;
}

uint64_t sub_24FB12C34@<X0>(char *a1@<X8>)
{
  return sub_24FB117F8(v1[4], v1[2], v1[3], a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for AnimatedCornerButton();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v6 = sub_24FB47DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v6 + 32), v1);
  swift_release();
  uint64_t v7 = v0 + v4 + *(int *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24FB471A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t sub_24FB12DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  type metadata accessor for AnimatedCornerButton();
  return sub_24FB11C20(a1, v5, v6, a2);
}

uint64_t sub_24FB12E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB12EE4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for AnimatedCornerButton();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = sub_24FB47DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v4 + *(int *)(v6 + 32), v1);
  swift_release();
  uint64_t v7 = v0 + v4 + *(int *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24FB471A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, v4 + v5, v3 | 7);
}

uint64_t sub_24FB13088(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AnimatedCornerButton() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24FB13190;
  return sub_24FB12200(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_24FB13190()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24FB13284()
{
  return sub_24FB127F0();
}

uint64_t sub_24FB132AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_24FB484C8();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_24FB133B0, 0, 0);
}

uint64_t sub_24FB133B0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_24FB484E8();
  uint64_t v5 = sub_24FB13D00(&qword_269A4F8D8, MEMORY[0x263F8F710]);
  sub_24FB486A8();
  sub_24FB13D00(&qword_269A4F8E0, MEMORY[0x263F8F6D8]);
  sub_24FB484F8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_24FB13550;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_24FB13550()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24FB1370C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_24FB1370C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24FB13778()
{
  return sub_24FB127F0();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for NoButtonStyle()
{
  return &type metadata for NoButtonStyle;
}

uint64_t sub_24FB137DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24FB13C9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB13CB8()
{
  return sub_24FB13D00(&qword_269A4F8E8, MEMORY[0x263F1A0D0]);
}

uint64_t sub_24FB13D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CopyButton.init(contentsToCopy:)()
{
  sub_24FB47CE8();
  return v1;
}

uint64_t sub_24FB13D94()
{
  return sub_24FB47408();
}

uint64_t sub_24FB13DB8(uint64_t a1)
{
  uint64_t v2 = sub_24FB471A8();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24FB47418();
}

uint64_t sub_24FB13E80@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_24FB47C28();
  uint64_t v4 = sub_24FB47C18();
  uint64_t result = swift_release();
  uint64_t v6 = 0x72616D6B63656863;
  if ((a1 & 1) == 0) {
    uint64_t v6 = 0x642E6E6F2E636F64;
  }
  unint64_t v7 = 0xE90000000000006BLL;
  if ((a1 & 1) == 0) {
    unint64_t v7 = 0xEF6C6C69662E636FLL;
  }
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_24FB13F1C(char a1)
{
  if (a1) {
    return 0x64656B63656863;
  }
  else {
    return 1701602409;
  }
}

uint64_t sub_24FB13F4C(char *a1, char *a2)
{
  return sub_24FB14D68(*a1, *a2);
}

uint64_t sub_24FB13F58()
{
  return sub_24FB15E14();
}

uint64_t sub_24FB13F60()
{
  return sub_24FB15F50();
}

uint64_t sub_24FB13F68()
{
  return sub_24FB15FB4();
}

uint64_t sub_24FB13F70@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_24FB48558();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_24FB13FD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB13F1C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_24FB13FFC@<D0>(uint64_t a1@<X8>)
{
  sub_24FB13E80(*v1, (uint64_t)v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

void sub_24FB14044(void *a1@<X8>)
{
  *a1 = &unk_270126758;
}

void sub_24FB14054(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t property wrapper backing initializer of CopyButton.state()
{
  sub_24FB47CE8();
  return v1;
}

double CopyButton.body.getter@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8F0);
  sub_24FB47D18();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(double *)a4 = v13;
  *(void *)(a4 + 8) = v14;
  *(unsigned char *)(a4 + 16) = v15;
  *(void *)(a4 + 24) = sub_24FB14308;
  *(void *)(a4 + 32) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8F8);
  uint64_t v10 = (uint64_t *)(a4 + *(int *)(v9 + 40));
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F900);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (double *)(a4 + *(int *)(v9 + 44));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24FB47CE8();
  double result = v13;
  *uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  return result;
}

uint64_t sub_24FB141D4(char a1, uint64_t a2, uint64_t a3)
{
  char v4 = a1 & 1;
  sub_24FB14858(a3);
  LOBYTE(v8) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8F0);
  sub_24FB47CF8();
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v5 = sub_24FB48688();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_5:
    sub_24FB47D18();
    sub_24FB17338(v8, a2, v9, 1, 0, 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24FB142C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24FB14308()
{
  return sub_24FB141D4(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24FB14314()
{
  return sub_24FB47408();
}

uint64_t sub_24FB1433C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_24FB14358@<D0>(uint64_t a1@<X8>)
{
  return CopyButton.body.getter(*(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t destroy for CopyButton()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s16MarkdownDocument10CopyButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CopyButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CopyButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CopyButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CopyButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyButton()
{
  return &type metadata for CopyButton;
}

uint64_t sub_24FB14540()
{
  return sub_24FAD57F0(&qword_269A4F908, &qword_269A4F8F8);
}

unsigned char *__swift_memcpy1_1_0(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CopyButton.CopyButtonState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB14654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyButton.CopyButtonState()
{
  return &type metadata for CopyButton.CopyButtonState;
}

unint64_t sub_24FB14690()
{
  unint64_t result = qword_269A4F910;
  if (!qword_269A4F910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F910);
  }
  return result;
}

uint64_t sub_24FB146E4()
{
  return sub_24FAD57F0(&qword_269A4F918, &qword_269A4F920);
}

unint64_t sub_24FB14720(void *a1)
{
  a1[1] = sub_24FB14758();
  a1[2] = sub_24FB147AC();
  unint64_t result = sub_24FB14800();
  a1[3] = result;
  return result;
}

unint64_t sub_24FB14758()
{
  unint64_t result = qword_269A4F928;
  if (!qword_269A4F928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F928);
  }
  return result;
}

unint64_t sub_24FB147AC()
{
  unint64_t result = qword_269A4F930;
  if (!qword_269A4F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F930);
  }
  return result;
}

unint64_t sub_24FB14800()
{
  unint64_t result = qword_269A4F938;
  if (!qword_269A4F938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F938);
  }
  return result;
}

void sub_24FB14858(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F940);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46D18();
  MEMORY[0x270FA5388](v5);
  uint64_t v27 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = a1 + 32;
    double v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    long long v26 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    v23[1] = a1;
    uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24FAF8C3C(v12, (uint64_t)v30);
      sub_24FAF8C3C((uint64_t)v30, (uint64_t)v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F948);
      int v15 = swift_dynamicCast();
      uint64_t v16 = *v13;
      if (v15)
      {
        v16(v4, 0, 1, v5);
        if ((*v14)(v4, 1, v5) != 1)
        {
          (*v26)(v10, v4, v5);
          sub_24FAD59E4(0, (unint64_t *)&qword_269A4F9C0);
          (*v25)(v27, v10, v5);
          uint64_t v17 = (void *)sub_24FB48358();
          id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088E0]), sel_initWithObject_, v17);

          (*v24)(v10, v5);
          goto LABEL_11;
        }
      }
      else
      {
        v16(v4, 1, 1, v5);
      }
      sub_24FB14C80((uint64_t)v4);
      sub_24FAF8C3C((uint64_t)v30, (uint64_t)v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9B0);
      if (swift_dynamicCast())
      {
        uint64_t v19 = v28;
        sub_24FAD59E4(0, &qword_269A4F9B8);
        id v18 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithObject_, v19);
        swift_unknownObjectRelease();
LABEL_11:
        uint64_t v20 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
        if (v18)
        {
          MEMORY[0x25336E4C0](v20);
          if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24FB48188();
          }
          sub_24FB481B8();
          sub_24FB48168();
        }
        goto LABEL_4;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
LABEL_4:
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  id v21 = objc_msgSend(self, sel_generalPasteboard);
  sub_24FAD59E4(0, &qword_269A4F9B8);
  uint64_t v22 = (void *)sub_24FB48158();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setItemProviders_localOnly_expirationDate_, v22, 0, 0);
}

uint64_t sub_24FB14C80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FB14CE0(char a1, char a2)
{
  if (*(void *)&aIdle_2[8 * a1] == *(void *)&aIdle_2[8 * a2] && qword_24FB4C808[a1] == qword_24FB4C808[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24FB48688();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24FB14D68(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64656B63656863;
  }
  else {
    uint64_t v3 = 1701602409;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64656B63656863;
  }
  else {
    uint64_t v5 = 1701602409;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24FB48688();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24FB14E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 38) = v17;
  *(unsigned char *)(v8 + 37) = a8;
  *(unsigned char *)(v8 + 36) = a7;
  char v11 = a6 & 1;
  uint64_t v12 = sub_24FB484E8();
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 48) = *(void *)(v12 - 8);
  *(void *)(v8 + 56) = swift_task_alloc();
  *(void *)(v8 + 64) = swift_task_alloc();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  *(unsigned char *)(v8 + 32) = v11;
  sub_24FB48228();
  *(void *)(v8 + 72) = sub_24FB48218();
  uint64_t v14 = sub_24FB48208();
  *(void *)(v8 + 80) = v14;
  *(void *)(v8 + 88) = v13;
  return MEMORY[0x270FA2498](sub_24FB14F34, v14, v13);
}

uint64_t sub_24FB14F34()
{
  uint64_t v1 = sub_24FB48778();
  uint64_t v3 = v2;
  sub_24FB484D8();
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269A4F8D0 + dword_269A4F8D0);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_24FB15014;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24FB15014()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 40);
  v2[13] = v0;
  swift_task_dealloc();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[14] = v6;
  v2[15] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  uint64_t v7 = v2[11];
  uint64_t v8 = v2[10];
  if (v0) {
    uint64_t v9 = sub_24FB1546C;
  }
  else {
    uint64_t v9 = sub_24FB151C0;
  }
  return MEMORY[0x270FA2498](v9, v8, v7);
}

uint64_t sub_24FB151C0()
{
  *(unsigned char *)(v0 + 33) = *(unsigned char *)(v0 + 36) & 1;
  *(void *)(v0 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FA68);
  sub_24FB47D98();
  sub_24FB484D8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269A4F8D0 + dword_269A4F8D0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24FB152C4;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24FB152C4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v8 = sub_24FB15618;
  }
  else {
    uint64_t v8 = sub_24FB154E0;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24FB1546C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24FB154E0()
{
  int v1 = *(unsigned __int8 *)(v0 + 37);
  swift_release();
  if (v1 != 1) {
    goto LABEL_21;
  }
  char v2 = *(unsigned char *)(v0 + 36);
  MEMORY[0x25336E100](*(void *)(v0 + 128));
  if (*(unsigned char *)(v0 + 35)) {
    uint64_t v3 = 0x64656B63656863;
  }
  else {
    uint64_t v3 = 1701602409;
  }
  if (*(unsigned char *)(v0 + 35)) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (v2) {
    uint64_t v5 = 0x64656B63656863;
  }
  else {
    uint64_t v5 = 1701602409;
  }
  if (v2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  char v8 = sub_24FB48688();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_21:
    *(unsigned char *)(v0 + 34) = *(unsigned char *)(v0 + 38) & 1;
    sub_24FB47D98();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_24FB15618()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24FB1568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 38) = v17;
  *(unsigned char *)(v8 + 37) = a8;
  *(unsigned char *)(v8 + 36) = a7;
  uint64_t v12 = sub_24FB484E8();
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 48) = *(void *)(v12 - 8);
  *(void *)(v8 + 56) = swift_task_alloc();
  *(void *)(v8 + 64) = swift_task_alloc();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  *(unsigned char *)(v8 + 32) = a6;
  sub_24FB48228();
  *(void *)(v8 + 72) = sub_24FB48218();
  uint64_t v14 = sub_24FB48208();
  *(void *)(v8 + 80) = v14;
  *(void *)(v8 + 88) = v13;
  return MEMORY[0x270FA2498](sub_24FB157BC, v14, v13);
}

uint64_t sub_24FB157BC()
{
  uint64_t v1 = sub_24FB48778();
  uint64_t v3 = v2;
  sub_24FB484D8();
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269A4F8D0 + dword_269A4F8D0);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_24FB1589C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_24FB1589C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 40);
  v2[13] = v0;
  swift_task_dealloc();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[14] = v6;
  v2[15] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  uint64_t v7 = v2[11];
  uint64_t v8 = v2[10];
  if (v0) {
    uint64_t v9 = sub_24FB1546C;
  }
  else {
    uint64_t v9 = sub_24FB15A48;
  }
  return MEMORY[0x270FA2498](v9, v8, v7);
}

uint64_t sub_24FB15A48()
{
  *(unsigned char *)(v0 + 33) = *(unsigned char *)(v0 + 36);
  *(void *)(v0 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FA48);
  sub_24FB47D98();
  sub_24FB484D8();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269A4F8D0 + dword_269A4F8D0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24FB15B48;
  return v3(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_24FB15B48()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v8 = sub_24FB15618;
  }
  else {
    uint64_t v8 = sub_24FB15CF0;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_24FB15CF0()
{
  int v1 = *(unsigned __int8 *)(v0 + 37);
  swift_release();
  if (v1 != 1) {
    goto LABEL_9;
  }
  MEMORY[0x25336E100](*(void *)(v0 + 128));
  if (*(void *)&aIdle_2[8 * *(char *)(v0 + 35)] == *(void *)&aIdle_2[8 * *(char *)(v0 + 36)]
    && qword_24FB4C808[*(char *)(v0 + 35)] == qword_24FB4C808[*(char *)(v0 + 36)])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v3 = sub_24FB48688();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_9:
    *(unsigned char *)(v0 + 34) = *(unsigned char *)(v0 + 38);
    sub_24FB47D98();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24FB15E14()
{
  return sub_24FB48748();
}

uint64_t sub_24FB15E90()
{
  return sub_24FB48748();
}

uint64_t sub_24FB15EFC()
{
  sub_24FB480C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FB15F50()
{
  sub_24FB480C8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FB15FB4()
{
  return sub_24FB48748();
}

uint64_t sub_24FB1602C()
{
  return sub_24FB48748();
}

uint64_t sub_24FB16094()
{
  uint64_t v0 = sub_24FB470C8();
  __swift_allocate_value_buffer(v0, qword_269A4F9D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269A4F9D0);
  return sub_24FB470B8();
}

uint64_t sub_24FB1611C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3 = 0xD000000000000015;
  if (a1)
  {
    double v4 = 0.0;
    if (a1 == 1) {
      unint64_t v3 = 0x72616D6B63656863;
    }
    else {
      unint64_t v3 = 0xD000000000000018;
    }
    if (a1 == 1) {
      unint64_t v5 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v5 = 0x800000024FB50490;
    }
  }
  else
  {
    unint64_t v5 = 0x800000024FB504B0;
    double v4 = -1.0;
  }
  uint64_t result = sub_24FB47C08();
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = result;
  *(double *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = 1;
  return result;
}

uint64_t sub_24FB161C8(char a1)
{
  return *(void *)&aIdle_2[8 * a1];
}

uint64_t sub_24FB161E8(char *a1, char *a2)
{
  return sub_24FB14CE0(*a1, *a2);
}

uint64_t sub_24FB161F4()
{
  return sub_24FB15E90();
}

uint64_t sub_24FB161FC()
{
  return sub_24FB15EFC();
}

uint64_t sub_24FB16204()
{
  return sub_24FB1602C();
}

uint64_t sub_24FB1620C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24FB175F4();
  *a1 = result;
  return result;
}

uint64_t sub_24FB1623C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB161C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double sub_24FB16268@<D0>(uint64_t a1@<X8>)
{
  sub_24FB1611C(*v1, (uint64_t)v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return result;
}

void sub_24FB162B0(void *a1@<X8>)
{
  *a1 = &unk_270126780;
}

uint64_t property wrapper backing initializer of SaveImageButton.saveState()
{
  sub_24FB47CE8();
  return v1;
}

uint64_t SaveImageButton.init(imageData:)()
{
  sub_24FB47CE8();
  return v1;
}

double SaveImageButton.body.getter@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9E8);
  sub_24FB47D18();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(double *)a5 = v15;
  *(void *)(a5 + 8) = v16;
  *(unsigned char *)(a5 + 16) = v17;
  *(void *)(a5 + 24) = sub_24FB16570;
  *(void *)(a5 + 32) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9F0);
  uint64_t v12 = (uint64_t *)(a5 + *(int *)(v11 + 40));
  *uint64_t v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F900);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (double *)(a5 + *(int *)(v11 + 44));
  swift_retain();
  sub_24FAE9930(a3, a4);
  sub_24FB47CE8();
  double result = v15;
  *uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  return result;
}

void sub_24FB16490(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9E8);
  sub_24FB47CF8();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v8 = sub_24FB48688();
  swift_bridgeObjectRelease();
  if (v8) {
LABEL_5:
  }
    sub_24FB165A4(a1, a2, a3, a4);
}

void sub_24FB16570()
{
  sub_24FB16490(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24FB16588()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24FB165A4(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v8 = objc_msgSend(self, sel_sharedPhotoLibrary);
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  char v17 = sub_24FB17644;
  uint64_t v18 = v9;
  uint64_t v13 = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  double v15 = sub_24FAE0AC8;
  uint64_t v16 = &block_descriptor_0;
  uint64_t v10 = _Block_copy(&v13);
  swift_retain();
  sub_24FAE9930(a3, a4);
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  char v17 = sub_24FB176B0;
  uint64_t v18 = v11;
  uint64_t v13 = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  double v15 = sub_24FB16B9C;
  uint64_t v16 = &block_descriptor_15;
  uint64_t v12 = _Block_copy(&v13);
  swift_retain();
  sub_24FAE9930(a3, a4);
  swift_release();
  objc_msgSend(v8, sel_performChanges_completionHandler_, v10, v12);
  _Block_release(v12);
  _Block_release(v10);
}

void sub_24FB16788()
{
  id v0 = objc_msgSend(self, sel_creationRequestForAsset);
  id v1 = (id)sub_24FB46F78();
  objc_msgSend(v0, sel_addResourceWithType_data_options_, 1, v1, 0);
}

uint64_t sub_24FB16824(char a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_24FB470C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    LOBYTE(v26) = a3;
    uint64_t v27 = a4;
    LOBYTE(v24) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9E8);
    return sub_24FB47D08();
  }
  else
  {
    LOBYTE(v24) = a3;
    uint64_t v25 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F9E8);
    sub_24FB47D18();
    sub_24FB174A0(v26, v27, v28, 2, 0, 1);
    swift_release();
    swift_release();
    LOBYTE(v24) = a3;
    uint64_t v25 = a4;
    sub_24FB47D18();
    sub_24FB174A0(v26, v27, v28, 2, 0, 1);
    swift_release();
    swift_release();
    if (qword_269A4F358 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v8, (uint64_t)qword_269A4F9D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
    id v14 = a2;
    id v15 = a2;
    uint64_t v16 = sub_24FB470A8();
    os_log_type_t v17 = sub_24FB482F8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v20 = sub_24FB486C8();
        unint64_t v22 = v21;
      }
      else
      {
        unint64_t v22 = 0xED0000726F727265;
        uint64_t v20 = 0x206E776F6E6B6E55;
      }
      uint64_t v24 = sub_24FB37870(v20, v22, &v26);
      sub_24FB48398();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24FACE000, v16, v17, "Failed to save image to album: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25336F100](v19, -1, -1);
      MEMORY[0x25336F100](v18, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_24FB16B9C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

double sub_24FB16C14@<D0>(uint64_t a1@<X8>)
{
  return SaveImageButton.body.getter(*(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t destroy for SaveImageButton(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  return sub_24FAE999C(v2, v3);
}

uint64_t initializeWithCopy for SaveImageButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 24);
  swift_retain();
  sub_24FAE9930(v3, v4);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for SaveImageButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  sub_24FAE9930(v5, v4);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  sub_24FAE999C(v6, v7);
  return a1;
}

__n128 __swift_memcpy32_8_0(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for SaveImageButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_24FAE999C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaveImageButton(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SaveImageButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SaveImageButton()
{
  return &type metadata for SaveImageButton;
}

uint64_t sub_24FB16E3C()
{
  return sub_24FAD57F0(&qword_269A4F9F8, &qword_269A4F9F0);
}

unsigned char *storeEnumTagSinglePayload for SaveImageButton.SaveState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB16F44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SaveImageButton.SaveState()
{
  return &type metadata for SaveImageButton.SaveState;
}

unint64_t sub_24FB16F80()
{
  unint64_t result = qword_269A4FA00;
  if (!qword_269A4FA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FA00);
  }
  return result;
}

uint64_t sub_24FB16FD4()
{
  return sub_24FAD57F0(&qword_269A4FA08, &qword_269A4FA10);
}

unint64_t sub_24FB17010(void *a1)
{
  a1[1] = sub_24FB17048();
  a1[2] = sub_24FB1709C();
  unint64_t result = sub_24FB170F0();
  a1[3] = result;
  return result;
}

unint64_t sub_24FB17048()
{
  unint64_t result = qword_269A4FA18;
  if (!qword_269A4FA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FA18);
  }
  return result;
}

unint64_t sub_24FB1709C()
{
  unint64_t result = qword_269A4FA20;
  if (!qword_269A4FA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FA20);
  }
  return result;
}

unint64_t sub_24FB170F0()
{
  unint64_t result = qword_269A4FA28;
  if (!qword_269A4FA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FA28);
  }
  return result;
}

uint64_t sub_24FB17148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, char a6)
{
  uint64_t v11 = *(void *)a4;
  uint64_t v12 = *(void *)(a4 + 8);
  char v13 = *(unsigned char *)(a4 + 16);
  char v14 = *a5;
  id v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *id v15 = v6;
  v15[1] = sub_24FB13190;
  return sub_24FB14E04(a1, a2, a3, v11, v12, v13, v14, a6);
}

uint64_t sub_24FB17240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, char a6)
{
  uint64_t v11 = *(void *)a4;
  uint64_t v12 = *(void *)(a4 + 8);
  char v13 = *a5;
  char v14 = *(unsigned char *)(a4 + 16);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v15;
  *id v15 = v6;
  v15[1] = sub_24FB178E0;
  return sub_24FB1568C(a1, a2, a3, v11, v12, v14, v13, a6);
}

uint64_t sub_24FB17338(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6)
{
  char v9 = a3 & 1;
  char v10 = a4 & 1;
  char v11 = a5 & 1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8B8);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24FB48248();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  char v22 = v10;
  char v21 = v11;
  sub_24FB48228();
  swift_retain();
  swift_retain();
  uint64_t v16 = sub_24FB48218();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8F500];
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v18;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  *(unsigned char *)(v17 + 48) = v9;
  *(unsigned char *)(v17 + 49) = v22;
  *(unsigned char *)(v17 + 50) = a6;
  *(unsigned char *)(v17 + 51) = v21;
  sub_24FB0F2F8((uint64_t)v14, (uint64_t)&unk_269A4FA58, v17);
  return swift_release();
}

uint64_t sub_24FB174A0(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8B8);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24FB48248();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_24FB48228();
  swift_retain();
  swift_retain();
  uint64_t v16 = sub_24FB48218();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8F500];
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v18;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = a2;
  *(unsigned char *)(v17 + 48) = a3;
  *(unsigned char *)(v17 + 49) = a4;
  *(unsigned char *)(v17 + 50) = a6;
  *(unsigned char *)(v17 + 51) = a5;
  sub_24FB0F2F8((uint64_t)v14, (uint64_t)&unk_269A4FA38, v17);
  return swift_release();
}

uint64_t sub_24FB175F4()
{
  unint64_t v0 = sub_24FB48558();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_24FB17644()
{
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  sub_24FAE999C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24FB176B0(char a1, void *a2)
{
  return sub_24FB16824(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24FB176C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 50);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_24FB178E0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char))((char *)&dword_269A4FA30
                                                                                + dword_269A4FA30);
  return v8(a1, v4, v5, v1 + 32, (char *)(v1 + 49), v6);
}

uint64_t objectdestroy_17Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 52, 7);
}

uint64_t sub_24FB177F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 50);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_24FB13190;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char))((char *)&dword_269A4FA50
                                                                                + dword_269A4FA50);
  return v8(a1, v4, v5, v1 + 32, (char *)(v1 + 49), v6);
}

uint64_t DocumentCodeBlockElement.init(id:text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for DocumentCodeBlockElement() + 20);
  uint64_t v8 = sub_24FB46D18();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a2, v8);
}

uint64_t type metadata accessor for DocumentCodeBlockElement()
{
  uint64_t result = qword_269A4FAA0;
  if (!qword_269A4FAA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentCodeBlockElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentCodeBlockElement.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentCodeBlockElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

__n128 DocumentCodeBlockElement.makeView()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentCodeBlockElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  uint64_t v5 = type metadata accessor for DocumentCodeBlockView();
  __asm { FMOV            V0.2D, #20.0 }
  *(__n128 *)(a1 + *(int *)(v5 + 20)) = result;
  *(void *)(a1 + *(int *)(v5 + 24)) = 0x4030000000000000;
  return result;
}

uint64_t DocumentCodeBlockElement.append(_:)@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for DocumentCodeBlockElement();
  a1[4] = sub_24FB17DDC(&qword_269A4FA70, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockElement);
  __swift_allocate_boxed_opaque_existential_1(a1);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  return sub_24FB46B98();
}

uint64_t static DocumentCodeBlockElement.__derived_struct_equals(_:_:)()
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DocumentCodeBlockElement();
  return sub_24FB46C08();
}

uint64_t sub_24FB17C64(uint64_t a1)
{
  uint64_t result = sub_24FB17DDC(&qword_269A4FA78, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockElement);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_24FB17CBC()
{
  return &protocol witness table for DocumentCodeBlockView;
}

uint64_t sub_24FB17CC8()
{
  return sub_24FB17DDC(&qword_269A4FA80, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockView);
}

uint64_t sub_24FB17D10(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB17DDC(&qword_269A4FA88, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockElement);
  uint64_t result = sub_24FB17DDC((unint64_t *)&unk_269A4FA90, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB17D94()
{
  return sub_24FB17DDC(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB17DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DocumentCodeBlockElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB17E38);
}

uint64_t sub_24FB17E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24FB46D18();
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentCodeBlockElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB17F44);
}

uint64_t sub_24FB17F44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24FB46FB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24FB46D18();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

double DocumentCodeBlockView.topPadding(previousElement:)(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return *(double *)(v1 + *(int *)(type metadata accessor for DocumentCodeBlockView() + 24));
  }
  else {
    return 0.0;
  }
}

uint64_t type metadata accessor for DocumentCodeBlockView()
{
  uint64_t result = qword_269A4FAE0;
  if (!qword_269A4FAE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentCodeBlockView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAB8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAC0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v5 = sub_24FB47E68();
  v5[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAC8);
  sub_24FB18274(v1, (uint64_t)v5 + *(int *)(v11 + 44));
  sub_24FAD5834((uint64_t)v5, (uint64_t)v9, &qword_269A4FAB8);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 256;
  sub_24FAD5794((uint64_t)v5, &qword_269A4FAB8);
  char v12 = sub_24FB477F8();
  type metadata accessor for DocumentCodeBlockView();
  sub_24FB47178();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_24FAD5834((uint64_t)v9, a1, &qword_269A4FAC0);
  uint64_t v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4FAD0) + 36);
  *(unsigned char *)uint64_t v21 = v12;
  *(void *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = v18;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 40) = 0;
  return sub_24FAD5794((uint64_t)v9, &qword_269A4FAC0);
}

uint64_t sub_24FB18274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v3 = sub_24FB46D18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v93 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F658);
  uint64_t v100 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v97 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F660);
  MEMORY[0x270FA5388](v95);
  uint64_t v101 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB08);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v99 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB10);
  MEMORY[0x270FA5388](v96);
  uint64_t v104 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB18);
  MEMORY[0x270FA5388](v98);
  uint64_t v105 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB20);
  MEMORY[0x270FA5388](v102);
  uint64_t v108 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB28);
  MEMORY[0x270FA5388](v107);
  uint64_t v110 = (uint64_t)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v109 = (uint64_t)&v92 - v15;
  uint64_t v16 = sub_24FB47388();
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB30);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v92 - v25;
  uint64_t v92 = type metadata accessor for DocumentCodeBlockView();
  uint64_t v27 = (uint64_t *)(a1 + *(int *)(v92 + 20));
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  long long v30 = (char *)v19 + *(int *)(v17 + 28);
  uint64_t v31 = *MEMORY[0x263F19860];
  uint64_t v32 = sub_24FB475C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  *uint64_t v19 = v28;
  v19[1] = v29;
  LODWORD(v31) = sub_24FB47718();
  sub_24FADC744((uint64_t)v19, (uint64_t)v23);
  *(_DWORD *)&v23[*(int *)(v21 + 44)] = v31;
  sub_24FADC7FC((uint64_t)v19);
  uint64_t v106 = v26;
  sub_24FAD5730((uint64_t)v23, (uint64_t)v26, &qword_269A4FB30);
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v112 = v3;
  uint64_t v113 = a1;
  uint64_t v111 = v4 + 16;
  uint64_t v94 = v33;
  v33((uint64_t *)v93, a1, v3);
  uint64_t v34 = sub_24FB47A08();
  uint64_t v36 = v35;
  char v38 = v37;
  if (qword_269A4F350 != -1) {
    swift_once();
  }
  sub_24FB47888();
  sub_24FB47878();
  swift_release();
  uint64_t v39 = sub_24FB479C8();
  uint64_t v41 = v40;
  char v43 = v42;
  uint64_t v45 = v44;
  swift_release();
  sub_24FADAA34(v34, v36, v38 & 1);
  swift_bridgeObjectRelease();
  uint64_t v116 = v39;
  uint64_t v117 = v41;
  char v118 = v43 & 1;
  uint64_t v119 = v45;
  uint64_t v46 = v97;
  sub_24FB47B38();
  sub_24FADAA34(v39, v41, v43 & 1);
  swift_bridgeObjectRelease();
  int v47 = sub_24FB47708();
  uint64_t v48 = v100;
  uint64_t v49 = (uint64_t)v101;
  uint64_t v50 = v103;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v46, v103);
  *(_DWORD *)(v49 + *(int *)(v95 + 36)) = v47;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v50);
  uint64_t v51 = sub_24FB47E58();
  uint64_t v52 = v99;
  sub_24FB1AE70(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v99, 0.0, 1, INFINITY, 0, v51, v53);
  sub_24FAD5794(v49, &qword_269A4F660);
  uint64_t v54 = v104;
  sub_24FAD5834(v52, v104, &qword_269A4FB08);
  *(_WORD *)(v54 + *(int *)(v96 + 36)) = 256;
  sub_24FAD5794(v52, &qword_269A4FB08);
  LOBYTE(v47) = sub_24FB47818();
  uint64_t v55 = *(int *)(v92 + 24);
  uint64_t v56 = v113;
  sub_24FB47178();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v105;
  sub_24FAD5834(v54, v105, &qword_269A4FB10);
  uint64_t v66 = v65 + *(int *)(v98 + 36);
  *(unsigned char *)uint64_t v66 = v47;
  *(void *)(v66 + 8) = v58;
  *(void *)(v66 + 16) = v60;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v64;
  *(unsigned char *)(v66 + 40) = 0;
  sub_24FAD5794(v54, &qword_269A4FB10);
  LOBYTE(v47) = sub_24FB477F8();
  sub_24FB47178();
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v75 = v108;
  sub_24FAD5834(v65, v108, &qword_269A4FB18);
  uint64_t v76 = v75 + *(int *)(v102 + 36);
  *(unsigned char *)uint64_t v76 = v47;
  *(void *)(v76 + 8) = v68;
  *(void *)(v76 + 16) = v70;
  *(void *)(v76 + 24) = v72;
  *(void *)(v76 + 32) = v74;
  *(unsigned char *)(v76 + 40) = 0;
  sub_24FAD5794(v65, &qword_269A4FB18);
  uint64_t v77 = sub_24FB47E48();
  uint64_t v79 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FB38);
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_24FB49BA0;
  uint64_t v81 = v112;
  *(void *)(v80 + 56) = v112;
  *(void *)(v80 + 64) = &protocol witness table for AttributedString;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v80 + 32));
  v94(boxed_opaque_existential_1, v56, v81);
  char v115 = 0;
  sub_24FB47CE8();
  LOBYTE(v81) = v116;
  uint64_t v83 = v117;
  double v84 = *(double *)(v56 + v55);
  uint64_t v85 = v110;
  sub_24FAD5834(v75, v110, &qword_269A4FB20);
  uint64_t v86 = v85 + *(int *)(v107 + 36);
  *(unsigned char *)uint64_t v86 = v81;
  *(void *)(v86 + 8) = v83;
  *(void *)(v86 + 16) = v80;
  *(double *)(v86 + 24) = -v84;
  *(double *)(v86 + 32) = v84;
  *(void *)(v86 + 40) = v77;
  *(void *)(v86 + 48) = v79;
  sub_24FAD5794(v75, &qword_269A4FB20);
  uint64_t v87 = v109;
  sub_24FAD5730(v85, v109, &qword_269A4FB28);
  uint64_t v88 = (uint64_t)v106;
  sub_24FAD5834((uint64_t)v106, (uint64_t)v23, &qword_269A4FB30);
  sub_24FAD5834(v87, v85, &qword_269A4FB28);
  uint64_t v89 = v114;
  sub_24FAD5834((uint64_t)v23, v114, &qword_269A4FB30);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4FB40);
  sub_24FAD5834(v85, v89 + *(int *)(v90 + 48), &qword_269A4FB28);
  sub_24FAD5794(v87, &qword_269A4FB28);
  sub_24FAD5794(v88, &qword_269A4FB30);
  sub_24FAD5794(v85, &qword_269A4FB28);
  return sub_24FAD5794((uint64_t)v23, &qword_269A4FB30);
}

uint64_t sub_24FB18C18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB18C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAB8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAC0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v5 = sub_24FB47E68();
  v5[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FAC8);
  sub_24FB18274(v1, (uint64_t)v5 + *(int *)(v11 + 44));
  sub_24FAD5834((uint64_t)v5, (uint64_t)v9, &qword_269A4FAB8);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 256;
  sub_24FAD5794((uint64_t)v5, &qword_269A4FAB8);
  char v12 = sub_24FB477F8();
  sub_24FB47178();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_24FAD5834((uint64_t)v9, a1, &qword_269A4FAC0);
  uint64_t v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4FAD0) + 36);
  *(unsigned char *)uint64_t v21 = v12;
  *(void *)(v21 + 8) = v14;
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = v18;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 40) = 0;
  return sub_24FAD5794((uint64_t)v9, &qword_269A4FAC0);
}

double sub_24FB18DD8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    return *(double *)(v2 + *(int *)(a2 + 24));
  }
  else {
    return 0.0;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentCodeBlockView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46D18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t initializeWithCopy for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB19100);
}

uint64_t sub_24FB19100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DocumentCodeBlockView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB19180);
}

uint64_t sub_24FB19180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FB191F0()
{
  uint64_t result = sub_24FB46D18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB19294()
{
  return sub_24FB19308(&qword_269A4FAF0, (uint64_t *)&unk_269A4FAD0, (void (*)(void))sub_24FB192D8);
}

uint64_t sub_24FB192D8()
{
  return sub_24FB19308(&qword_269A4FAF8, &qword_269A4FAC0, (void (*)(void))sub_24FB19384);
}

uint64_t sub_24FB19308(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB19384()
{
  unint64_t result = qword_269A4FB00;
  if (!qword_269A4FB00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FB00);
  }
  return result;
}

uint64_t DocumentElementCodeBlockParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v90 = a2;
  long long v91 = (void (**)(void, void))sub_24FB46E68();
  uint64_t v94 = (uint64_t)*(v91 - 1);
  MEMORY[0x270FA5388](v91);
  uint64_t v93 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v84 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v83 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F690);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v101 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_24FB46D18();
  uint64_t v89 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v92 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v95 = (char *)&v76 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v88 = (char *)&v76 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v82 = (char *)&v76 - v13;
  uint64_t v14 = sub_24FB46DF8();
  uint64_t v86 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v85 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24FB46DB8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v87 = (char *)&v76 - v27;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  uint64_t v28 = sub_24FB46E08();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
  {
    sub_24FAD5794((uint64_t)v18, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    uint64_t v30 = v90;
LABEL_12:
    sub_24FAD5794((uint64_t)v21, &qword_269A4F6A0);
    uint64_t v48 = type metadata accessor for DocumentCodeBlockElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v30, 1, 1, v48);
  }
  uint64_t v78 = v21;
  uint64_t v80 = v22;
  uint64_t v77 = v3;
  uint64_t v31 = sub_24FB46DC8();
  uint64_t v32 = v18;
  uint64_t v33 = v31;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v79 = v23;
  if (v34)
  {
    uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
    uint64_t v35 = v23 + 16;
    uint64_t v100 = v36;
    uint64_t v37 = v33;
    unint64_t v38 = v33 + ((*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64));
    uint64_t v39 = (uint64_t (**)(char *, uint64_t))(v86 + 88);
    LODWORD(v98) = *MEMORY[0x263F06930];
    uint64_t v40 = (void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v99 = (unsigned int (**)(char *, uint64_t, void (**)(void, void)))v35;
    uint64_t v97 = *(void (***)(char *, char *, void))(v35 + 56);
    uint64_t v76 = v37;
    swift_bridgeObjectRetain();
    uint64_t v41 = v80;
    char v42 = v85;
    while (1)
    {
      v100(v25, v38, v41);
      sub_24FB46D98();
      int v43 = (*v39)(v42, v14);
      if (v43 == v98) {
        break;
      }
      (*v40)(v42, v14);
      (*(void (**)(char *, uint64_t))(v35 - 8))(v25, v41);
      v38 += (unint64_t)v97;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = 1;
        uint64_t v30 = v90;
        uint64_t v45 = v91;
        uint64_t v46 = v89;
        uint64_t v23 = v79;
        goto LABEL_9;
      }
    }
    (*(void (**)(char *, uint64_t))(v86 + 96))(v42, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v79;
    uint64_t v21 = v78;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v25, v41);
    uint64_t v44 = 0;
    uint64_t v30 = v90;
    uint64_t v45 = v91;
    uint64_t v46 = v89;
    uint64_t v23 = v47;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v30 = v90;
    uint64_t v45 = v91;
    uint64_t v46 = v89;
    uint64_t v41 = v80;
LABEL_9:
    uint64_t v21 = v78;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v44, 1, v41);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v41) == 1) {
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v87, v21, v41);
  uint64_t v50 = sub_24FB46DA8();
  uint64_t v51 = v81;
  unint64_t v52 = sub_24FB3F66C(v50);
  MEMORY[0x270FA5388](v52);
  *(&v76 - 2) = v51;
  uint64_t v53 = sub_24FB0C3B0((void (*)(uint64_t))sub_24FB1A04C, (uint64_t)(&v76 - 4), v52);
  swift_bridgeObjectRelease();
  uint64_t v54 = v88;
  sub_24FB46D08();
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v95, v54, v96);
  uint64_t v55 = *(void *)(v53 + 16);
  uint64_t v86 = v53;
  if (v55)
  {
    uint64_t v56 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
    unint64_t v57 = v53 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
    uint64_t v58 = v94 + 56;
    uint64_t v99 = (unsigned int (**)(char *, uint64_t, void (**)(void, void)))(v94 + 48);
    uint64_t v100 = v56;
    uint64_t v59 = *(void *)(v94 + 72);
    uint64_t v97 = (void (**)(char *, char *, void))(v94 + 32);
    uint64_t v98 = v59;
    v94 += 16;
    long long v91 = (void (**)(void, void))(v94 - 8);
    uint64_t v60 = (void (**)(char *, uint64_t))(v46 + 8);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v46 + 32);
    swift_bridgeObjectRetain();
    uint64_t v85 = (char *)(v58 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    uint64_t v62 = v101;
    uint64_t v63 = v92;
    uint64_t v64 = v95;
    while (1)
    {
      v100(v62, v57, (uint64_t)v45);
      uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void)))v58;
      (*(void (**)(char *, void, uint64_t, void (**)(void, void)))v58)(v62, 0, 1, v45);
      if ((*v99)(v62, 1, v45) == 1) {
        break;
      }
      uint64_t v66 = v93;
      (*v97)(v93, v101, v45);
      sub_24FB1A0B8((unint64_t *)&unk_269A4F6B0, MEMORY[0x263F06970]);
      sub_24FB46BA8();
      (*v91)(v66, v45);
      uint64_t v67 = v96;
      (*v60)(v64, v96);
      uint64_t v68 = v67;
      uint64_t v62 = v101;
      (*v61)(v64, v63, v68);
      v57 += v98;
      if (!--v55) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void)))(v94 + 56);
    swift_bridgeObjectRetain();
    uint64_t v62 = v101;
LABEL_19:
    v65(v62, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  uint64_t v69 = v89;
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  uint64_t v71 = v82;
  uint64_t v72 = v96;
  v70(v82, v95, v96);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v88, v72);
  swift_bridgeObjectRelease();
  uint64_t v73 = v83;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v87, v80);
  uint64_t v74 = type metadata accessor for DocumentCodeBlockElement();
  uint64_t v75 = v90;
  v70((char *)(v90 + *(int *)(v74 + 20)), v71, v72);
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v75, v73, v77);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v75, 0, 1, v74);
}

uint64_t sub_24FB19F48()
{
  return 8;
}

uint64_t sub_24FB19F54()
{
  return swift_release();
}

uint64_t sub_24FB19F5C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB19F70(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB19F7C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  return sub_24FAD5794((uint64_t)v2, &qword_269A4F6C0);
}

uint64_t sub_24FB1A04C()
{
  return sub_24FB19F7C();
}

uint64_t sub_24FB1A070()
{
  return sub_24FB1A0B8(&qword_269A4FA78, (void (*)(uint64_t))type metadata accessor for DocumentCodeBlockElement);
}

uint64_t sub_24FB1A0B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementCodeBlockParser()
{
  return &type metadata for DocumentElementCodeBlockParser;
}

uint64_t DocumentElementEmbeddedVideoParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB1A318();
  sub_24FB46C58();
  swift_release();
  if (v7)
  {
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    uint64_t v2 = type metadata accessor for DocumentEmbeddedVideoElement();
    uint64_t v3 = (void *)(a1 + *(int *)(v2 + 20));
    *uint64_t v3 = v6;
    v3[1] = v7;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DocumentEmbeddedVideoElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

uint64_t sub_24FB1A21C()
{
  return sub_24FB48018() & 1;
}

void sub_24FB1A278()
{
}

uint64_t sub_24FB1A2A0()
{
  return 8;
}

uint64_t sub_24FB1A2AC()
{
  return swift_release();
}

uint64_t sub_24FB1A2B4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FB1A2C4()
{
  return sub_24FB47FE8();
}

void *sub_24FB1A30C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24FB1A318()
{
  unint64_t result = qword_269A4FB50;
  if (!qword_269A4FB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FB50);
  }
  return result;
}

unint64_t sub_24FB1A374()
{
  unint64_t result = qword_269A4FB58;
  if (!qword_269A4FB58)
  {
    type metadata accessor for DocumentEmbeddedVideoElement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FB58);
  }
  return result;
}

uint64_t sub_24FB1A3CC@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB1A318();
  sub_24FB46C58();
  swift_release();
  if (v7)
  {
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    uint64_t v2 = type metadata accessor for DocumentEmbeddedVideoElement();
    uint64_t v3 = (void *)(a1 + *(int *)(v2 + 20));
    *uint64_t v3 = v6;
    v3[1] = v7;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DocumentEmbeddedVideoElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

ValueMetadata *type metadata accessor for DocumentElementEmbeddedVideoParser()
{
  return &type metadata for DocumentElementEmbeddedVideoParser;
}

uint64_t DocumentEmbeddedVideoElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

MarkdownDocument::DocumentEmbeddedVideoView __swiftcall DocumentEmbeddedVideoElement.makeView()()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for DocumentEmbeddedVideoElement() + 20));
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)v1[1];
  swift_bridgeObjectRetain();
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  result.embeddedVideoSource._object = v5;
  result.embeddedVideoSource._countAndFlagsBits = v4;
  return result;
}

uint64_t type metadata accessor for DocumentEmbeddedVideoElement()
{
  uint64_t result = qword_269A4FB90;
  if (!qword_269A4FB90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static DocumentEmbeddedVideoElement.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for DocumentEmbeddedVideoElement() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_24FB48688();
}

_UNKNOWN **sub_24FB1A658()
{
  return &protocol witness table for DocumentEmbeddedVideoView;
}

unint64_t sub_24FB1A668()
{
  unint64_t result = qword_269A4FB70;
  if (!qword_269A4FB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FB70);
  }
  return result;
}

uint64_t sub_24FB1A6BC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB1A788(&qword_269A4FB78, (void (*)(uint64_t))type metadata accessor for DocumentEmbeddedVideoElement);
  uint64_t result = sub_24FB1A788((unint64_t *)&unk_269A4FB80, (void (*)(uint64_t))type metadata accessor for DocumentEmbeddedVideoElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB1A740()
{
  return sub_24FB1A788(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB1A788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB1A7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_24FB48688();
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentEmbeddedVideoElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DocumentEmbeddedVideoElement(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB1ABE8);
}

uint64_t sub_24FB1ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentEmbeddedVideoElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB1ACC0);
}

uint64_t sub_24FB1ACC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB1AD80()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_24FB1AE14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FB1AECC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_269A4F668, &qword_269A4F670).n128_u64[0];
  return result;
}

double sub_24FB1AE70@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FB1AECC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_269A4F660, &qword_269A4FB08).n128_u64[0];
  return result;
}

__n128 sub_24FB1AECC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v28 = (void *)sub_24FB477E8();
    sub_24FB47088();

    uint64_t v19 = a17;
  }
  sub_24FB473A8();
  sub_24FAD5834(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  void v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_24FB1B09C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20)
{
  uint64_t v21 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v30 = (void *)sub_24FB477E8();
    sub_24FB47088();

    uint64_t v21 = a16;
  }
  sub_24FB473A8();
  *(void *)a9 = v21;
  *(void *)(a9 + 8) = a17;
  *(void *)(a9 + 16) = a18;
  *(unsigned char *)(a9 + 24) = a19 & 1;
  *(unsigned char *)(a9 + 25) = a20 & 1;
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v37;
  *(_OWORD *)(a9 + 128) = v38;
  *(_OWORD *)(a9 + 32) = v32;
  *(_OWORD *)(a9 + 48) = v33;
  *(_OWORD *)(a9 + 64) = v34;
  *(_OWORD *)(a9 + 80) = v35;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24FB1B284@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v23 = (void *)sub_24FB477E8();
    sub_24FB47088();
  }
  sub_24FB473A8();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(void *)(a9 + 80) = *(void *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;
  return sub_24FB1BDDC(v13);
}

uint64_t sub_24FB1B458@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v23 = (void *)sub_24FB477E8();
    sub_24FB47088();
  }
  sub_24FB473A8();
  long long v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 168) = v33;
  *(_OWORD *)(a9 + 72) = v27;
  *(_OWORD *)(a9 + 88) = v28;
  *(void *)(a9 + 64) = *(void *)(v13 + 64);
  *(_OWORD *)(a9 + 104) = v29;
  return sub_24FAEA718(v13);
}

uint64_t sub_24FB1B624@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    uint64_t v23 = (void *)sub_24FB477E8();
    sub_24FB47088();
  }
  sub_24FB473A8();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 104) = v29;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 56) = v26;
  *(_OWORD *)(a9 + 72) = v27;
  *(_WORD *)(a9 + 48) = *(_WORD *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v28;
  return sub_24FB1BD8C(v13);
}

double sub_24FB1B7F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24FB1AECC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_269A4FBD0, &qword_269A4FBD8).n128_u64[0];
  return result;
}

uint64_t sub_24FB1B84C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24FB48308();
    long long v31 = (void *)sub_24FB477E8();
    sub_24FB47088();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_24FB473A8();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_24FAE9618(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t DocumentEmbeddedVideoView.embeddedVideoSource.getter(uint64_t a1)
{
  return a1;
}

__n128 DocumentEmbeddedVideoView.body.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24FB47E58();
  sub_24FB1B09C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v6, v7, a1, a2, 0x3FFC71C71C71C71CLL, 0,
    1);
  swift_bridgeObjectRelease();
  long long v8 = v12[7];
  *(_OWORD *)(a3 + 96) = v12[6];
  *(_OWORD *)(a3 + 112) = v8;
  *(_OWORD *)(a3 + 128) = v12[8];
  long long v9 = v12[3];
  *(_OWORD *)(a3 + 32) = v12[2];
  *(_OWORD *)(a3 + 48) = v9;
  long long v10 = v12[5];
  *(_OWORD *)(a3 + 64) = v12[4];
  *(_OWORD *)(a3 + 80) = v10;
  __n128 result = (__n128)v12[1];
  *(_OWORD *)a3 = v12[0];
  *(__n128 *)(a3 + 16) = result;
  return result;
}

uint64_t sub_24FB1BB4C()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_24FB1BB68@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24FB47E58();
  sub_24FB1B09C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, 0.0, 1, v5, v6, v4, v3, 0x3FFC71C71C71C71CLL, 0,
    1);
  swift_bridgeObjectRelease();
  long long v7 = v11[7];
  *(_OWORD *)(a1 + 96) = v11[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v11[8];
  long long v8 = v11[3];
  *(_OWORD *)(a1 + 32) = v11[2];
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = v11[5];
  *(_OWORD *)(a1 + 64) = v11[4];
  *(_OWORD *)(a1 + 80) = v9;
  __n128 result = (__n128)v11[1];
  *(_OWORD *)a1 = v11[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for DocumentEmbeddedVideoView()
{
  return &type metadata for DocumentEmbeddedVideoView;
}

uint64_t sub_24FB1BC48()
{
  return sub_24FB1BCBC(&qword_269A4FBA8, &qword_269A4FBB0, (void (*)(void))sub_24FB1BC8C);
}

uint64_t sub_24FB1BC8C()
{
  return sub_24FB1BCBC(&qword_269A4FBB8, &qword_269A4FBC0, (void (*)(void))sub_24FB1BD38);
}

uint64_t sub_24FB1BCBC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB1BD38()
{
  unint64_t result = qword_269A4FBC8;
  if (!qword_269A4FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FBC8);
  }
  return result;
}

uint64_t sub_24FB1BD8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24FAF8834(v2);
  return a1;
}

uint64_t sub_24FB1BDDC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  swift_retain();
  sub_24FAE9618(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *EmbeddedVideoUrlAttribute.name.unsafeMutableAddressor()
{
  return &static EmbeddedVideoUrlAttribute.name;
}

uint64_t static EmbeddedVideoUrlAttribute.name.getter()
{
  swift_beginAccess();
  uint64_t v0 = static EmbeddedVideoUrlAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static EmbeddedVideoUrlAttribute.name.setter(uint64_t a1, void *a2)
{
  static EmbeddedVideoUrlAttribute.name = a1;
  off_269A4FBE8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static EmbeddedVideoUrlAttribute.name.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_24FB1BF64()
{
  return sub_24FB46ED8();
}

uint64_t sub_24FB1BF84()
{
  return sub_24FB46EE8();
}

uint64_t sub_24FB1BFA4()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB1C008()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_24FB1C014()
{
  swift_beginAccess();
  uint64_t v0 = static EmbeddedVideoUrlAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for EmbeddedVideoUrlAttribute()
{
  return &type metadata for EmbeddedVideoUrlAttribute;
}

unint64_t sub_24FB1C084()
{
  unint64_t result = qword_269A4FBF0;
  if (!qword_269A4FBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FBF0);
  }
  return result;
}

uint64_t static EmbeddedVideoView.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_24FB48688();
  }
}

id EmbeddedVideoView.Coordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void EmbeddedVideoView.Coordinator.init()()
{
}

id EmbeddedVideoView.Coordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmbeddedVideoView.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EmbeddedVideoView.Coordinator()
{
  return self;
}

id EmbeddedVideoView.makeCoordinator()(uint64_t a1, uint64_t a2)
{
  char v4 = (objc_class *)type metadata accessor for EmbeddedVideoView.Coordinator();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtCV16MarkdownDocument17EmbeddedVideoView11Coordinator_parent];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, sel_init);
}

id EmbeddedVideoView.makeUIView(context:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1FA58]), sel_init);
  id v1 = objc_msgSend(v0, sel_scrollView);
  objc_msgSend(v1, sel_setBounces_, 0);

  objc_msgSend(v0, sel_setOpaque_, 0);
  return v0;
}

void EmbeddedVideoView.updateUIView(_:context:)(void *a1)
{
  sub_24FB48448();
  sub_24FB480E8();
  swift_bridgeObjectRetain();
  sub_24FB480E8();
  swift_bridgeObjectRelease();
  sub_24FB480E8();
  id v2 = (id)sub_24FB48028();
  swift_bridgeObjectRelease();
}

id sub_24FB1C3F0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1FA58]), sel_init);
  id v1 = objc_msgSend(v0, sel_scrollView);
  objc_msgSend(v1, sel_setBounces_, 0);

  objc_msgSend(v0, sel_setOpaque_, 0);
  return v0;
}

void sub_24FB1C46C(void *a1)
{
}

id sub_24FB1C47C@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (objc_class *)type metadata accessor for EmbeddedVideoView.Coordinator();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  long long v7 = &v6[OBJC_IVAR____TtCV16MarkdownDocument17EmbeddedVideoView11Coordinator_parent];
  *(void *)long long v7 = v4;
  *((void *)v7 + 1) = v3;
  v9.receiver = v6;
  v9.super_class = v5;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_24FB1C4F4()
{
  return sub_24FB47638();
}

uint64_t sub_24FB1C538(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24FB48688();
  }
}

uint64_t sub_24FB1C568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_24FB1C668();
  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_24FB1C5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_24FB1C668();
  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_24FB1C630()
{
}

ValueMetadata *type metadata accessor for EmbeddedVideoView()
{
  return &type metadata for EmbeddedVideoView;
}

unint64_t sub_24FB1C668()
{
  unint64_t result = qword_269A4FC08;
  if (!qword_269A4FC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC08);
  }
  return result;
}

void sub_24FB1C6BC()
{
  HIWORD(qword_269A58F48) = -4864;
}

uint64_t *GlossaryLinkAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F360 != -1) {
    swift_once();
  }
  return &static GlossaryLinkAttribute.name;
}

uint64_t static GlossaryLinkAttribute.name.getter()
{
  if (qword_269A4F360 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static GlossaryLinkAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static GlossaryLinkAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F360 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static GlossaryLinkAttribute.name = a1;
  qword_269A58F48 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static GlossaryLinkAttribute.name.modify())()
{
  if (qword_269A4F360 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24FB1C8D4()
{
  unint64_t result = qword_269A4FC10;
  if (!qword_269A4FC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC10);
  }
  return result;
}

uint64_t sub_24FB1C928()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB1C988()
{
  if (qword_269A4F360 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static GlossaryLinkAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for GlossaryLinkAttribute()
{
  return &type metadata for GlossaryLinkAttribute;
}

unint64_t sub_24FB1CA1C()
{
  unint64_t result = qword_269A4FC18;
  if (!qword_269A4FC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC18);
  }
  return result;
}

uint64_t InlineElementGlossaryLinkParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = (char *)a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v42 - v6;
  uint64_t v7 = sub_24FB46F68();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB46E68();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC28);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24FB469D8();
  uint64_t v57 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = sub_24FB46D18();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v21);
  uint64_t v56 = (char *)&v42 - v22;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB1C8D4();
  sub_24FB46C58();
  swift_release();
  if (!v60[1]) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 16))(a2, v55, v19);
  }
  uint64_t v47 = a2;
  uint64_t v45 = v60[0];
  uint64_t v23 = v56;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v56, v55, v19);
  sub_24FB46C68();
  sub_24FB469C8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24FAD5794((uint64_t)v12, &qword_269A4FC28);
    sub_24FAD5794((uint64_t)v18, &qword_269A4F6C0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v47, v23, v19);
  }
  else
  {
    uint64_t v44 = v19;
    uint64_t v55 = v18;
    long long v25 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    long long v26 = v54;
    uint64_t v43 = v13;
    v25(v54, v12, v13);
    sub_24FB1D3BC();
    uint64_t v27 = (uint64_t)v49;
    sub_24FB46C68();
    unint64_t v42 = sub_24FB0CBEC();
    sub_24FB46D38();
    sub_24FAD5794(v27, &qword_269A4F6C0);
    sub_24FB46D48();
    long long v28 = (void *)sub_24FB48358();
    id v29 = objc_msgSend(v28, sel_string);

    sub_24FB48068();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC30);
    sub_24FB46978();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24FB4BA20;
    sub_24FB46948();
    swift_bridgeObjectRelease();
    sub_24FB46948();
    swift_bridgeObjectRelease();
    sub_24FB46998();
    uint64_t v30 = (uint64_t)v50;
    sub_24FB469B8();
    uint64_t v32 = v52;
    uint64_t v31 = v53;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v30, 1, v53) == 1)
    {
      sub_24FAD5794(v30, &qword_269A4FC20);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v43);
      sub_24FAD5794((uint64_t)v55, &qword_269A4F6C0);
      long long v33 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32);
      uint64_t v34 = v47;
      long long v35 = v56;
    }
    else
    {
      long long v36 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v51, v30, v31);
      long long v37 = v46;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v46, v36, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
      long long v38 = (void (*)(void *, void))sub_24FB46D28();
      sub_24FB1D3FC();
      sub_24FB46E78();
      v38(v60, 0);
      uint64_t v39 = (uint64_t)v55;
      sub_24FB1D450((uint64_t)v55, v27);
      uint64_t v59 = sub_24FB47BB8();
      uint64_t v40 = v56;
      uint64_t v41 = (void (*)(void *, void))sub_24FB46D28();
      sub_24FB1D4B8();
      sub_24FB46E78();
      v41(v60, 0);
      sub_24FAD5794(v27, &qword_269A4F6C0);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v51, v31);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v43);
      sub_24FAD5794(v39, &qword_269A4F6C0);
      long long v33 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32);
      uint64_t v34 = v47;
      long long v35 = v40;
    }
    return v33(v34, v35, v44);
  }
}

uint64_t sub_24FB1D2C0()
{
  return sub_24FB48018() & 1;
}

void sub_24FB1D31C()
{
}

uint64_t sub_24FB1D344()
{
  return 8;
}

uint64_t sub_24FB1D350()
{
  return swift_release();
}

uint64_t sub_24FB1D358(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FB1D368()
{
  return sub_24FB47FE8();
}

void *sub_24FB1D3B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24FB1D3BC()
{
  unint64_t result = qword_269A4F9C0;
  if (!qword_269A4F9C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269A4F9C0);
  }
  return result;
}

unint64_t sub_24FB1D3FC()
{
  unint64_t result = qword_269A4FC38;
  if (!qword_269A4FC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC38);
  }
  return result;
}

uint64_t sub_24FB1D450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24FB1D4B8()
{
  unint64_t result = qword_269A4FC40;
  if (!qword_269A4FC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC40);
  }
  return result;
}

ValueMetadata *type metadata accessor for InlineElementGlossaryLinkParser()
{
  return &type metadata for InlineElementGlossaryLinkParser;
}

uint64_t DocumentElementHeadingParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a1;
  uint64_t v105 = a2;
  uint64_t v91 = sub_24FB46FB8();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v3 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v92 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v95);
  uint64_t v94 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_24FB46E68();
  uint64_t v87 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v104 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v100 = (char *)&v79 - v9;
  uint64_t v107 = sub_24FB46C78();
  unint64_t v88 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v110 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v106 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24FB46D18();
  uint64_t v89 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v109 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_24FB46DF8();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (uint64_t *)((char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v93 = (char *)&v79 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v96 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_24FB46DB8();
  uint64_t v20 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v101 = (char *)&v79 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24FB46E08();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  uint64_t v32 = v28;
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_24FAD5794((uint64_t)v27, &qword_269A4F698);
    uint64_t v33 = v105;
LABEL_26:
    uint64_t v74 = type metadata accessor for DocumentHeadingElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v33, 1, 1, v74);
  }
  uint64_t v86 = v29;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
  uint64_t v34 = sub_24FB46DC8();
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v81 = v3;
  uint64_t v80 = v13;
  if (v35)
  {
    uint64_t v83 = v31;
    uint64_t v84 = v32;
    uint64_t v85 = v20;
    long long v37 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
    uint64_t v36 = v20 + 16;
    uint64_t v114 = v37;
    unint64_t v38 = (*(unsigned __int8 *)(v36 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 64);
    unint64_t v82 = v34;
    unint64_t v39 = v34 + v38;
    uint64_t v40 = (uint64_t (**)(char *, uint64_t))(v98 + 88);
    LODWORD(v112) = *MEMORY[0x263F06918];
    uint64_t v41 = (void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v113 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v36;
    unint64_t v111 = *(void *)(v36 + 56);
    uint64_t v42 = v102;
    uint64_t v43 = v99;
    uint64_t v44 = v93;
    while (1)
    {
      v114(v22, v39, v42);
      sub_24FB46D98();
      int v45 = (*v40)(v44, v43);
      if (v45 == v112) {
        break;
      }
      (*v41)(v44, v43);
      (*(void (**)(char *, uint64_t))(v36 - 8))(v22, v42);
      v39 += v111;
      if (!--v35)
      {
        uint64_t v46 = 1;
        uint64_t v33 = v105;
        uint64_t v20 = v85;
        uint64_t v32 = v84;
        uint64_t v31 = v83;
        uint64_t v47 = v96;
        goto LABEL_10;
      }
    }
    uint64_t v48 = v85;
    uint64_t v47 = v96;
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 32))(v96, v22, v42);
    uint64_t v46 = 0;
    uint64_t v33 = v105;
    uint64_t v20 = v48;
    uint64_t v32 = v84;
    uint64_t v31 = v83;
  }
  else
  {
    uint64_t v46 = 1;
    uint64_t v42 = v102;
    uint64_t v33 = v105;
    uint64_t v47 = v96;
  }
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v47, v46, 1, v42);
  swift_bridgeObjectRelease();
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v47, 1, v42);
  uint64_t v50 = v103;
  uint64_t v51 = v101;
  uint64_t v52 = v97;
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v31, v32);
    sub_24FAD5794(v47, &qword_269A4F6A0);
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v101, v47, v42);
  uint64_t v53 = v42;
  sub_24FB46D98();
  uint64_t v54 = v98;
  uint64_t v55 = v99;
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v98 + 88))(v52, v99) != *MEMORY[0x263F06918])
  {
    (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v52, v55);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v51, v53);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v31, v32);
    goto LABEL_26;
  }
  uint64_t v83 = v31;
  uint64_t v84 = v32;
  uint64_t v85 = v20;
  (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v52, v55);
  uint64_t v96 = *v52;
  uint64_t v56 = sub_24FB46DA8();
  unint64_t v57 = sub_24FB3F66C(v56);
  sub_24FB46D08();
  uint64_t v58 = *(void *)(v57 + 16);
  unint64_t v82 = v57;
  if (v58)
  {
    uint64_t v114 = *(void (**)(char *, unint64_t, uint64_t))(v88 + 16);
    unint64_t v59 = v57 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
    unint64_t v111 = v88 + 32;
    uint64_t v112 = (unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
    uint64_t v99 = *(void *)(v88 + 72);
    uint64_t v98 = v87 + 8;
    uint64_t v97 = (uint64_t *)(v88 + 8);
    LODWORD(v93) = *MEMORY[0x263F1A5F8];
    uint64_t v113 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
    unint64_t v88 = (v88 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v60 = (uint64_t)v94;
    uint64_t v62 = v106;
    uint64_t v61 = v107;
    v114(v106, v59, v107);
    while (1)
    {
      uint64_t v65 = *v113;
      (*v113)(v62, 0, 1, v61);
      if ((*v112)(v62, 1, v61) == 1) {
        break;
      }
      (*(void (**)(char *, char *, uint64_t))v111)(v110, v62, v61);
      uint64_t v66 = swift_getKeyPath();
      MEMORY[0x270FA5388](v66);
      *(&v79 - 2) = v67;
      swift_getKeyPath();
      sub_24FB1E5C8();
      sub_24FB46C58();
      swift_release();
      if ((v117 & 1) != 0 || v116 != 4 || v96 >= 4)
      {
        uint64_t v63 = v110;
        sub_24FB46C68();
        sub_24FB0CBEC();
        uint64_t v64 = v104;
        sub_24FB46D38();
        sub_24FAD5794(v60, &qword_269A4F6C0);
      }
      else
      {
        sub_24FB46C68();
        sub_24FB0CBEC();
        sub_24FB46D38();
        sub_24FAD5794(v60, &qword_269A4F6C0);
        uint64_t v68 = swift_getKeyPath();
        MEMORY[0x270FA5388](v68);
        *(&v79 - 2) = v69;
        swift_getKeyPath();
        if (qword_269A4F350 != -1) {
          swift_once();
        }
        sub_24FB478D8();
        uint64_t v70 = sub_24FB478B8();
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = (uint64_t)v92;
        (*(void (**)(char *, void, uint64_t))(v71 + 104))(v92, v93, v70);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v70);
        uint64_t v73 = sub_24FB478F8();
        sub_24FAD5794(v72, &qword_269A4F8A0);
        uint64_t v116 = v73;
        sub_24FB1E6A8();
        uint64_t v64 = v100;
        sub_24FB46E58();
        uint64_t v60 = (uint64_t)v94;
        uint64_t v50 = v103;
        uint64_t v63 = v110;
      }
      sub_24FB1E7A8((unint64_t *)&unk_269A4F6B0, MEMORY[0x263F06970]);
      sub_24FB46C18();
      (*(void (**)(char *, uint64_t))v98)(v64, v50);
      uint64_t v61 = v107;
      ((void (*)(char *, uint64_t))*v97)(v63, v107);
      v59 += v99;
      --v58;
      uint64_t v62 = v106;
      if (!v58)
      {
        v65(v106, 1, 1, v61);
        break;
      }
      v114(v106, v59, v61);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v106, 1, 1, v107);
  }
  swift_bridgeObjectRelease();
  uint64_t v76 = v81;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v101, v102);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v83, v84);
  uint64_t v77 = v105;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v105, v76, v91);
  uint64_t v78 = type metadata accessor for DocumentHeadingElement();
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v77 + *(int *)(v78 + 20), v109, v80);
  *(void *)(v77 + *(int *)(v78 + 24)) = v96;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
}

uint64_t sub_24FB1E4D8()
{
  return 8;
}

uint64_t sub_24FB1E4E4()
{
  return swift_release();
}

uint64_t sub_24FB1E4EC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB1E500(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB1E50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4FC80);
}

uint64_t sub_24FB1E518(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4FC80);
}

void sub_24FB1E524()
{
}

uint64_t sub_24FB1E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4FC78);
}

uint64_t sub_24FB1E558(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4FC78);
}

void sub_24FB1E564()
{
}

void sub_24FB1E58C()
{
}

void sub_24FB1E5A8()
{
}

unint64_t sub_24FB1E5C8()
{
  unint64_t result = qword_269A4FC58;
  if (!qword_269A4FC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC58);
  }
  return result;
}

void sub_24FB1E61C()
{
}

uint64_t sub_24FB1E644()
{
  return 8;
}

uint64_t sub_24FB1E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4FC80) & 1;
}

uint64_t sub_24FB1E674(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4FC80);
}

void sub_24FB1E688()
{
}

unint64_t sub_24FB1E6A8()
{
  unint64_t result = qword_269A4FC60;
  if (!qword_269A4FC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FC60);
  }
  return result;
}

void sub_24FB1E6FC()
{
}

uint64_t sub_24FB1E724()
{
  return 8;
}

uint64_t sub_24FB1E730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A4FC78) & 1;
}

uint64_t sub_24FB1E754(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A4FC78);
}

uint64_t sub_24FB1E760()
{
  return sub_24FB1E7A8((unint64_t *)&unk_269A4FC68, (void (*)(uint64_t))type metadata accessor for DocumentHeadingElement);
}

uint64_t sub_24FB1E7A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementHeadingParser()
{
  return &type metadata for DocumentElementHeadingParser;
}

uint64_t DocumentHeadingElement.init(id:text:level:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for DocumentHeadingElement();
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_24FB46D18();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(void *)(a4 + *(int *)(v9 + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for DocumentHeadingElement()
{
  uint64_t result = qword_269A4FCA8;
  if (!qword_269A4FCA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentHeadingElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentHeadingElement.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentHeadingElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DocumentHeadingElement.level.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DocumentHeadingElement() + 24));
}

uint64_t DocumentHeadingElement.makeView(textWrapOffset:)@<X0>(void *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = type metadata accessor for DocumentHeadingElement();
  uint64_t v8 = *(void *)(v3 + *(int *)(v7 + 24));
  uint64_t v9 = v3 + *(int *)(v7 + 20);
  uint64_t v10 = type metadata accessor for DocumentHeadingView();
  uint64_t v11 = (char *)a1 + *(int *)(v10 + 24);
  uint64_t v12 = sub_24FB46D18();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v9, v12);
  *a1 = v8;
  a1[1] = 0x4020000000000000;
  uint64_t v14 = (double *)((char *)a1 + *(int *)(v10 + 28));
  *uint64_t v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t DocumentHeadingElement.makeView()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentHeadingElement();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  uint64_t v5 = v1 + *(int *)(v3 + 20);
  uint64_t v6 = type metadata accessor for DocumentHeadingView();
  uint64_t v7 = (char *)a1 + *(int *)(v6 + 24);
  uint64_t v8 = sub_24FB46D18();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v5, v8);
  *a1 = v4;
  a1[1] = 0x4020000000000000;
  uint64_t v10 = (void *)((char *)a1 + *(int *)(v6 + 28));
  *uint64_t v10 = 0;
  v10[1] = 0;
  return result;
}

uint64_t DocumentHeadingElement.supportTextWrapTop.getter()
{
  return 1;
}

BOOL static DocumentHeadingElement.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) != 0
    && (uint64_t v4 = type metadata accessor for DocumentHeadingElement(), (sub_24FB46C08() & 1) != 0))
  {
    return *(void *)(a1 + *(int *)(v4 + 24)) == *(void *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

char **sub_24FB1EC10()
{
  return &protocol witness table for DocumentHeadingView;
}

uint64_t sub_24FB1EC1C()
{
  return sub_24FB1EE80(&qword_269A4FC88, (void (*)(uint64_t))type metadata accessor for DocumentHeadingView);
}

uint64_t sub_24FB1EC64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1 + 24));
  uint64_t v5 = v2 + *(int *)(a1 + 20);
  uint64_t v6 = type metadata accessor for DocumentHeadingView();
  uint64_t v7 = (char *)a2 + *(int *)(v6 + 24);
  uint64_t v8 = sub_24FB46D18();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v5, v8);
  *a2 = v4;
  a2[1] = 0x4020000000000000;
  uint64_t v10 = (void *)((char *)a2 + *(int *)(v6 + 28));
  *uint64_t v10 = 0;
  v10[1] = 0;
  return result;
}

uint64_t sub_24FB1ED04@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = *(void *)(v4 + *(int *)(a1 + 24));
  uint64_t v9 = v4 + *(int *)(a1 + 20);
  uint64_t v10 = type metadata accessor for DocumentHeadingView();
  uint64_t v11 = (char *)a2 + *(int *)(v10 + 24);
  uint64_t v12 = sub_24FB46D18();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v9, v12);
  *a2 = v8;
  a2[1] = 0x4020000000000000;
  uint64_t v14 = (double *)((char *)a2 + *(int *)(v10 + 28));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t sub_24FB1EDB4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB1EE80(&qword_269A4FC90, (void (*)(uint64_t))type metadata accessor for DocumentHeadingElement);
  uint64_t result = sub_24FB1EE80((unint64_t *)&unk_269A4FC98, (void (*)(uint64_t))type metadata accessor for DocumentHeadingElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB1EE38()
{
  return sub_24FB1EE80(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB1EE80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_24FB1EEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) != 0
      && (sub_24FB46C08() & 1) != 0
      && *(void *)(a1 + *(int *)(a3 + 24)) == *(void *)(a2 + *(int *)(a3 + 24));
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentHeadingElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24FB46D18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t initializeWithCopy for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB1F390);
}

uint64_t sub_24FB1F390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24FB46D18();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentHeadingElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB1F49C);
}

uint64_t sub_24FB1F49C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24FB46FB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24FB46D18();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_24FB1F5A0()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24FB46D18();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24FB1F674(uint64_t a1)
{
  if (a1 > 3)
  {
    if (qword_269A4F350 != -1) {
      swift_once();
    }
    if (*(unsigned char *)(qword_269A58F38 + 16) == 1)
    {
      sub_24FB478A8();
      goto LABEL_11;
    }
LABEL_10:
    sub_24FB47918();
    goto LABEL_11;
  }
  if (qword_269A4F350 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_269A58F38 + 16) == 1) {
    goto LABEL_10;
  }
  sub_24FB47908();
LABEL_11:
  sub_24FB478C8();
  uint64_t v1 = sub_24FB47928();
  swift_release();
  return v1;
}

double DocumentHeadingView.topPadding(previousElement:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DocumentCodeBlockElement();
  MEMORY[0x270FA5388](v3);
  int v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FAD5834(a1, (uint64_t)&v8, &qword_269A4F480);
  if (v9)
  {
    sub_24FAF8CA0(&v8, (uint64_t)v10);
    if (*(uint64_t *)v1 > 3)
    {
      sub_24FAF8C3C((uint64_t)v10, (uint64_t)&v8);
      __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
      double v6 = 10.0;
      if (swift_dynamicCast())
      {
        sub_24FB06388((uint64_t)v5);
        double v6 = 16.0;
      }
    }
    else
    {
      double v6 = *(double *)(v1 + 8) + 10.0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_24FAD5794((uint64_t)&v8, &qword_269A4F480);
    return 0.0;
  }
  return v6;
}

uint64_t DocumentHeadingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_24FB46D18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F658);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FCB8) - 8;
  MEMORY[0x270FA5388](v32);
  uint64_t v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4FCC0) - 8;
  MEMORY[0x270FA5388](v33);
  uint64_t v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DocumentHeadingView();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, (char *)v1 + *(int *)(v28 + 24), v2);
  uint64_t v10 = sub_24FB47A08();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_24FB1F674(*v1);
  uint64_t v15 = sub_24FB479C8();
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  v19 &= 1u;
  sub_24FADAA34(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v37 = v15;
  uint64_t v38 = v17;
  char v39 = v19;
  uint64_t v40 = v21;
  uint64_t v22 = v31;
  sub_24FB47B38();
  sub_24FADAA34(v15, v17, v19);
  swift_bridgeObjectRelease();
  uint64_t v24 = v34;
  uint64_t v23 = v35;
  uint64_t v25 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v22, v35);
  *(_WORD *)(v25 + *(int *)(v32 + 44)) = 256;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  LODWORD(v23) = sub_24FB47708();
  uint64_t v26 = v30;
  sub_24FAD5834(v25, v30, &qword_269A4FCB8);
  *(_DWORD *)(v26 + *(int *)(v33 + 44)) = v23;
  sub_24FAD5794(v25, &qword_269A4FCB8);
  return sub_24FB1FC3C(v26, v36);
}

uint64_t type metadata accessor for DocumentHeadingView()
{
  uint64_t result = qword_269A4FCD0;
  if (!qword_269A4FCD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB1FC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4FCC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB1FCA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentHeadingView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24FB46D18();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for DocumentHeadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_24FB46D18();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *initializeWithCopy for DocumentHeadingView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithCopy for DocumentHeadingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

_OWORD *initializeWithTake for DocumentHeadingView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for DocumentHeadingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentHeadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB200AC);
}

uint64_t sub_24FB200AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_24FB46D18();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for DocumentHeadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB20130);
}

uint64_t sub_24FB20130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_24FB46D18();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_24FB201A4()
{
  uint64_t result = sub_24FB46D18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24FB2024C()
{
  unint64_t result = qword_269A4FCE0;
  if (!qword_269A4FCE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269A4FCC0);
    sub_24FB202C8();
    sub_24FB20374();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FCE0);
  }
  return result;
}

unint64_t sub_24FB202C8()
{
  unint64_t result = qword_269A4FCE8;
  if (!qword_269A4FCE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FCB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FCE8);
  }
  return result;
}

unint64_t sub_24FB20374()
{
  unint64_t result = qword_269A4FCF0;
  if (!qword_269A4FCF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FCF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FCF0);
  }
  return result;
}

unint64_t sub_24FB203D0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ListImageItem();
  MEMORY[0x270FA5388](v24);
  uint64_t v23 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v22 = (uint64_t)&v20 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v20 = v10;
  char v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v21 = a3;
  do
  {
    uint64_t v26 = *(void *)(a3 + 8 * v14 + 32);
    swift_bridgeObjectRetain();
    v25(&v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    if ((*v13)(v7, 1, v24) == 1)
    {
      sub_24FAD5794((uint64_t)v7, &qword_269A4FD20);
    }
    else
    {
      uint64_t v16 = v22;
      sub_24FB220E8((uint64_t)v7, v22);
      sub_24FB220E8(v16, v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_24FB2AC00(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v15 = sub_24FB2AC00(v17 > 1, v18 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v18 + 1;
      sub_24FB220E8(v23, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18);
      a3 = v21;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t DocumentElementListImageParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v53 = a1;
  unint64_t v57 = a3;
  uint64_t v4 = sub_24FB46FB8();
  uint64_t v55 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_24FB46DF8();
  uint64_t v58 = *(void (***)(char *, uint64_t))(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24FB46DB8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v52 = (char *)v49 - v19;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  uint64_t v60 = a2;
  sub_24FB46C58();
  swift_release();
  uint64_t v20 = sub_24FB46E08();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    sub_24FAD5794((uint64_t)v10, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    uint64_t v22 = v57;
LABEL_13:
    sub_24FAD5794((uint64_t)v13, &qword_269A4F6A0);
    uint64_t v37 = type metadata accessor for DocumentListImageElement();
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v22, 1, 1, v37);
  }
  uint64_t v51 = v13;
  uint64_t v56 = v15;
  uint64_t v59 = v14;
  uint64_t v23 = sub_24FB46DC8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v50 = v4;
    uint64_t v62 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
    unint64_t v25 = v23 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    uint64_t v26 = (uint64_t (**)(char *, uint64_t))(v58 + 11);
    int v61 = *MEMORY[0x263F06900];
    ++v58;
    uint64_t v27 = (void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v28 = *(void *)(v56 + 72);
    v49[1] = v23;
    swift_bridgeObjectRetain();
    uint64_t v29 = v59;
    do
    {
      v62(v17, v25, v29);
      sub_24FB46D98();
      uint64_t v30 = v63;
      int v31 = (*v26)(v7, v63);
      if (v31 == v61)
      {
        uint64_t v32 = swift_getKeyPath();
        MEMORY[0x270FA5388](v32);
        v49[-2] = v33;
        swift_getKeyPath();
        sub_24FB22034();
        sub_24FB46C58();
        uint64_t v29 = v59;
        swift_release();
        uint64_t v34 = v65;
        swift_bridgeObjectRelease();
        if (v34)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v56;
          char v13 = v51;
          (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v51, v17, v29);
          uint64_t v36 = 0;
          uint64_t v22 = v57;
          uint64_t v4 = v50;
          goto LABEL_12;
        }
      }
      else
      {
        (*v58)(v7, v30);
      }
      (*v27)(v17, v29);
      v25 += v28;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v36 = 1;
    uint64_t v35 = v56;
    uint64_t v22 = v57;
    uint64_t v4 = v50;
    char v13 = v51;
  }
  else
  {
    uint64_t v36 = 1;
    uint64_t v29 = v59;
    uint64_t v35 = v56;
    uint64_t v22 = v57;
    char v13 = v51;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v13, v36, 1, v29);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v13, 1, v29) == 1) {
    goto LABEL_13;
  }
  char v39 = v52;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v52, v13, v29);
  uint64_t v40 = sub_24FB46DA8();
  uint64_t v41 = v53;
  unint64_t v42 = sub_24FB3F66C(v40);
  uint64_t v43 = v22;
  uint64_t v44 = sub_24FB20E54(v42);
  uint64_t v45 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v45);
  v49[-2] = v41;
  unint64_t v46 = sub_24FB203D0((void (*)(uint64_t *))sub_24FB21EC8, (uint64_t)&v49[-4], v44);
  swift_bridgeObjectRelease();
  uint64_t v47 = v54;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v29);
  uint64_t v48 = type metadata accessor for DocumentListImageElement();
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))((char *)v43 + *(int *)(v48 + 20), v47, v4);
  *uint64_t v43 = v46;
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v43, 0, 1, v48);
}

uint64_t sub_24FB20DC4()
{
  return 8;
}

uint64_t sub_24FB20DD0()
{
  return swift_release();
}

uint64_t sub_24FB20DD8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB20DEC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB20DF8()
{
  return sub_24FB48018() & 1;
}

uint64_t sub_24FB20E54(uint64_t a1)
{
  uint64_t v2 = sub_24FB46DF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v82 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v63 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24FB46C78();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v78 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v84 = (char *)v54 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *(void *)(a1 + 16);
  v54[1] = a1;
  if (!v61)
  {
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    unint64_t v25 = (void *)MEMORY[0x263F8EE78];
    v53(v18, 1, 1, v11);
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)v25;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v19 = v12 + 16;
  uint64_t v81 = v20;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 64);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v60 = a1 + v22;
  uint64_t v23 = *(void *)(v19 + 56);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
  uint64_t v73 = (void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v88 = v6 + 16;
  uint64_t v87 = (uint64_t (**)(void *, uint64_t))(v3 + 88);
  int v86 = *MEMORY[0x263F06920];
  uint64_t v58 = v6;
  uint64_t v85 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v77 = (void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v75 = v22;
  uint64_t v76 = (uint64_t (**)(void *, uint64_t))(v3 + 96);
  uint64_t v74 = v23;
  uint64_t v70 = v21 | 7;
  uint64_t v71 = v23 + v22;
  unint64_t v57 = (void (**)(char *, uint64_t))(v19 - 8);
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  unint64_t v25 = (void *)MEMORY[0x263F8EE78];
  long long v69 = xmmword_24FB49BA0;
  uint64_t v68 = v2;
  uint64_t v26 = (uint64_t)v63;
  uint64_t v67 = v5;
  uint64_t v79 = v19;
  uint64_t v56 = v18;
  uint64_t v66 = v8;
  uint64_t v80 = v11;
  while (1)
  {
    v81(v18, v60 + v74 * v24, v11);
    uint64_t v55 = *v62;
    v55(v18, 0, 1, v11);
    if ((*v59)(v18, 1, v11) == 1) {
      goto LABEL_33;
    }
    uint64_t v65 = v24;
    uint64_t v83 = v25;
    uint64_t v72 = *v73;
    v72(v84, v18, v11);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v54[-2] = v28;
    swift_getKeyPath();
    sub_24FB0C1CC();
    sub_24FB46C58();
    swift_release();
    uint64_t v29 = sub_24FB46E08();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29) == 1)
    {
      sub_24FAD5794(v26, &qword_269A4F698);
      uint64_t v31 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v31 = sub_24FB46DC8();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v29);
    }
    uint64_t v32 = v82;
    unint64_t v25 = v83;
    uint64_t v33 = *(void *)(v31 + 16);
    if (v33) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v11 = v80;
    uint64_t v26 = (uint64_t)v63;
    uint64_t v18 = v56;
    uint64_t v24 = v65 + 1;
    (*v57)(v84, v80);
    if (v24 == v61)
    {
      v55(v18, 1, 1, v11);
      goto LABEL_33;
    }
  }
  unint64_t v34 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v64 = v31;
  unint64_t v35 = v31 + v34;
  uint64_t v36 = *(void *)(v58 + 72);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
  v37(v8, v31 + v34, v5);
  while (1)
  {
    sub_24FB46D98();
    int v38 = (*v87)(v32, v2);
    if (v38 != v86)
    {
      (*v85)(v8, v5);
      (*v77)(v32, v2);
      goto LABEL_11;
    }
    uint64_t result = (*v76)(v32, v2);
    BOOL v40 = __OFSUB__(*v32, 1);
    uint64_t v41 = *v32 - 1;
    if (v40) {
      break;
    }
    if (v41 < 0 || v41 >= v25[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD28);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v69;
      v81((char *)(v49 + v75), (uint64_t)v84, v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_24FB2ABEC(0, v25[2] + 1, 1, v25);
      }
      unint64_t v51 = v25[2];
      unint64_t v50 = v25[3];
      uint64_t v52 = v25;
      if (v51 >= v50 >> 1) {
        uint64_t v52 = sub_24FB2ABEC((void *)(v50 > 1), v51 + 1, 1, v25);
      }
      v52[2] = v51 + 1;
      unint64_t v25 = v52;
      v52[v51 + 4] = v49;
      (*v85)(v8, v5);
      uint64_t v32 = v82;
    }
    else
    {
      uint64_t v42 = v80;
      v81(v78, (uint64_t)v84, v80);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24FB2AFC0(v25);
        unint64_t v25 = (void *)result;
      }
      if ((unint64_t)v41 >= v25[2]) {
        goto LABEL_35;
      }
      uint64_t v43 = v42;
      uint64_t v83 = v25;
      uint64_t v44 = v25 + 4;
      unint64_t v45 = v25[v41 + 4];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25[v41 + 4] = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v45 = sub_24FB2ABC8(0, *(void *)(v45 + 16) + 1, 1, v45);
        v44[v41] = v45;
      }
      unint64_t v48 = *(void *)(v45 + 16);
      unint64_t v47 = *(void *)(v45 + 24);
      if (v48 >= v47 >> 1)
      {
        unint64_t v45 = sub_24FB2ABC8(v47 > 1, v48 + 1, 1, v45);
        v44[v41] = v45;
      }
      uint64_t v32 = v82;
      *(void *)(v45 + 16) = v48 + 1;
      v72((char *)(v45 + v75 + v48 * v74), v78, v43);
      uint64_t v8 = v66;
      uint64_t v5 = v67;
      (*v85)(v66, v67);
      uint64_t v2 = v68;
      unint64_t v25 = v83;
    }
LABEL_11:
    v35 += v36;
    if (!--v33) {
      goto LABEL_3;
    }
    v37(v8, v35, v5);
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_24FB21750@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v60 = a3;
  uint64_t v4 = sub_24FB46E68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F690);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v58 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_24FB46D18();
  uint64_t v9 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v71 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)v54 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v54 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)v54 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  uint64_t v21 = *(void *)(*a1 + 16);
  uint64_t v22 = sub_24FB46C78();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = v23;
  if (!v21)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v22);
    goto LABEL_15;
  }
  uint64_t v73 = v4;
  (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v19, v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v22);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v22);
  if (result == 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v54[-2] = v27;
  swift_getKeyPath();
  sub_24FB22034();
  sub_24FB46C58();
  swift_release();
  uint64_t v28 = (uint64_t (**)(char *, uint64_t))(v24 + 8);
  if (v77)
  {
    uint64_t v56 = v77;
    uint64_t v55 = v76;
    uint64_t v29 = (*v28)(v19, v22);
    MEMORY[0x270FA5388](v29);
    v54[-2] = v70;
    uint64_t v30 = v62;
    uint64_t v31 = sub_24FB0C3B0((void (*)(uint64_t))sub_24FB2214C, (uint64_t)&v54[-4], v20);
    uint64_t v62 = v30;
    uint64_t v32 = v61;
    sub_24FB46D08();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v74, v32, v75);
    uint64_t v33 = *(void *)(v31 + 16);
    uint64_t v34 = v73;
    uint64_t v57 = v9;
    v54[1] = v31;
    if (v33)
    {
      long long v69 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v70 = v5 + 16;
      unint64_t v35 = v31 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v66 = *(void *)(v5 + 72);
      uint64_t v67 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      uint64_t v64 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v5 + 32);
      uint64_t v63 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v36 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      swift_bridgeObjectRetain();
      uint64_t v68 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v54[0] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v37 = v58;
      int v38 = v71;
      char v39 = v72;
      BOOL v40 = v74;
      while (1)
      {
        v69(v37, v35, v34);
        uint64_t v41 = *v68;
        (*v68)(v37, 0, 1, v34);
        if ((*v67)(v37, 1, v34) == 1) {
          break;
        }
        (*v65)(v39, v37, v34);
        sub_24FB2216C((unint64_t *)&unk_269A4F6B0, MEMORY[0x263F06970]);
        sub_24FB46BA8();
        (*v64)(v39, v34);
        uint64_t v42 = v75;
        (*v63)(v40, v75);
        uint64_t v43 = v42;
        uint64_t v34 = v73;
        (*v36)(v40, v38, v43);
        v35 += v66;
        if (!--v33)
        {
          uint64_t v44 = v37;
          goto LABEL_11;
        }
      }
    }
    else
    {
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_bridgeObjectRetain();
      uint64_t v44 = v58;
LABEL_11:
      v41(v44, 1, 1, v34);
    }
    swift_bridgeObjectRelease();
    uint64_t v46 = v57;
    unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    unint64_t v48 = v59;
    uint64_t v49 = v75;
    v47(v59, v74, v75);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v61, v49);
    swift_bridgeObjectRelease();
    uint64_t v50 = v60;
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    uint64_t v51 = type metadata accessor for ListImageItem();
    v47((char *)(v50 + *(int *)(v51 + 24)), v48, v49);
    uint64_t v52 = (void *)(v50 + *(int *)(v51 + 20));
    uint64_t v53 = v56;
    *uint64_t v52 = v55;
    v52[1] = v53;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
  }
  else
  {
    (*v28)(v19, v22);
    uint64_t v45 = type metadata accessor for ListImageItem();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v60, 1, 1, v45);
  }
}

uint64_t sub_24FB21EC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24FB21750(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24FB21EE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  return sub_24FAD5794((uint64_t)v2, &qword_269A4F6C0);
}

void sub_24FB21FB4()
{
}

uint64_t sub_24FB21FDC()
{
  return 8;
}

uint64_t sub_24FB21FEC()
{
  return sub_24FB47FE8();
}

unint64_t sub_24FB22034()
{
  unint64_t result = qword_269A4FD00;
  if (!qword_269A4FD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FD00);
  }
  return result;
}

uint64_t sub_24FB2208C()
{
  return sub_24FB2216C((unint64_t *)&unk_269A4FD08, (void (*)(uint64_t))type metadata accessor for DocumentListImageElement);
}

ValueMetadata *type metadata accessor for DocumentElementListImageParser()
{
  return &type metadata for DocumentElementListImageParser;
}

uint64_t sub_24FB220E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListImageItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB2214C()
{
  return sub_24FB21EE4();
}

uint64_t sub_24FB2216C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DocumentListImageElement.init(id:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for DocumentListImageElement() + 20);
  uint64_t v7 = sub_24FB46FB8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a1, v7);
  *a3 = a2;
  return result;
}

uint64_t type metadata accessor for DocumentListImageElement()
{
  uint64_t result = qword_269A4FD50;
  if (!qword_269A4FD50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentListImageElement.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DocumentListImageElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentListImageElement() + 20);
  uint64_t v4 = sub_24FB46FB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

MarkdownDocument::DocumentListImageItemsView __swiftcall DocumentListImageElement.makeView()()
{
  return (MarkdownDocument::DocumentListImageItemsView)swift_bridgeObjectRetain();
}

uint64_t static DocumentListImageElement.__derived_struct_equals(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_24FB22444(*a1, *a2) & 1) == 0) {
    return 0;
  }
  type metadata accessor for DocumentListImageElement();
  return _s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0();
}

uint64_t sub_24FB2237C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24FB48688(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (int64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24FB48688() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24FB22444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListImageItem();
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_19:
    char v20 = 0;
    return v20 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_24FB22E0C(a1 + v12, (uint64_t)v10);
      sub_24FB22E0C(a2 + v12, (uint64_t)v6);
      if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
        break;
      }
      uint64_t v15 = *(int *)(v4 + 20);
      uint64_t v16 = *(void *)&v10[v15];
      uint64_t v17 = *(void *)&v10[v15 + 8];
      uint64_t v18 = &v6[v15];
      BOOL v19 = v16 == *(void *)v18 && v17 == *((void *)v18 + 1);
      if (!v19 && (sub_24FB48688() & 1) == 0) {
        break;
      }
      char v20 = sub_24FB46C08();
      sub_24FB22E70((uint64_t)v6);
      sub_24FB22E70((uint64_t)v10);
      BOOL v22 = v14-- != 0;
      if (v20)
      {
        v12 += v13;
        if (v22) {
          continue;
        }
      }
      return v20 & 1;
    }
    sub_24FB22E70((uint64_t)v6);
    sub_24FB22E70((uint64_t)v10);
    goto LABEL_19;
  }
  char v20 = 1;
  return v20 & 1;
}

_UNKNOWN **sub_24FB22604()
{
  return &protocol witness table for DocumentListImageItemsView;
}

unint64_t sub_24FB22614()
{
  unint64_t result = qword_269A4FD30;
  if (!qword_269A4FD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FD30);
  }
  return result;
}

uint64_t sub_24FB2266C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB22738(&qword_269A4FD38, (void (*)(uint64_t))type metadata accessor for DocumentListImageElement);
  uint64_t result = sub_24FB22738((unint64_t *)&unk_269A4FD40, (void (*)(uint64_t))type metadata accessor for DocumentListImageElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB226F0()
{
  return sub_24FB22738(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB22738(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB22780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24FB46FB8();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_24FB227F0(uint64_t *a1, uint64_t *a2)
{
  if ((sub_24FB22444(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return _s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentListImageElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24FB46FB8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for DocumentListImageElement(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24FB46FB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for DocumentListImageElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24FB46FB8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for DocumentListImageElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46FB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for DocumentListImageElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24FB46FB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for DocumentListImageElement(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24FB46FB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentListImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB22C04);
}

uint64_t sub_24FB22C04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24FB46FB8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentListImageElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB22CC8);
}

void *sub_24FB22CC8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24FB22D70()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB22E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListImageItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB22E70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListImageItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DocumentListImageItemsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A4F368 != -1) {
    swift_once();
  }
  *(void *)a1 = qword_269A4FD68;
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD70);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD78);
  type metadata accessor for DocumentListImageView();
  sub_24FAD57F0(&qword_269A4FD80, &qword_269A4FD78);
  sub_24FB23730(&qword_269A4F4D8, MEMORY[0x263F07508]);
  sub_24FB23730((unint64_t *)&unk_269A4FD88, (void (*)(uint64_t))type metadata accessor for DocumentListImageView);
  return sub_24FB47DE8();
}

uint64_t sub_24FB2306C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ListImageItem();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB22E0C(a1, (uint64_t)v6);
  *(void *)a2 = swift_getKeyPath();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v7 = type metadata accessor for DocumentListImageView();
  return sub_24FB220E8((uint64_t)v6, a2 + *(int *)(v7 + 20));
}

uint64_t sub_24FB23118@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A4F368 != -1) {
    swift_once();
  }
  *(void *)a1 = qword_269A4FD68;
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD70);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD78);
  type metadata accessor for DocumentListImageView();
  sub_24FAD57F0(&qword_269A4FD80, &qword_269A4FD78);
  sub_24FB23730(&qword_269A4F4D8, MEMORY[0x263F07508]);
  sub_24FB23730((unint64_t *)&unk_269A4FD88, (void (*)(uint64_t))type metadata accessor for DocumentListImageView);
  return sub_24FB47DE8();
}

__n128 DocumentListImageView.body.getter@<Q0>(uint64_t a1@<X8>)
{
  sub_24FB47538();
  sub_24FB233F8(v1, (uint64_t)&v14);
  uint64_t v3 = *((void *)&v14 + 1);
  uint64_t v4 = v15.n128_u64[0];
  char v5 = v15.n128_i8[8];
  sub_24FB47E68();
  sub_24FB1B284(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v14, 0.0, 1, 0.0, 1);
  swift_release();
  sub_24FADAA34(v3, v4, v5);
  swift_release();
  swift_bridgeObjectRelease();
  long long v6 = v23;
  long long v7 = v25;
  *(_OWORD *)(a1 + 160) = v24;
  *(_OWORD *)(a1 + 176) = v7;
  long long v8 = v19;
  long long v9 = v21;
  long long v10 = v22;
  *(_OWORD *)(a1 + 96) = v20;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 144) = v6;
  long long v11 = v17;
  long long v12 = v18;
  *(_OWORD *)(a1 + 32) = v16;
  *(_OWORD *)(a1 + 48) = v11;
  *(void *)(a1 + 192) = v26;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v8;
  __n128 result = v15;
  *(_OWORD *)a1 = v14;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB233F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = sub_24FB46D18();
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  long long v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for DocumentListImageView() + 20);
  uint64_t v27 = v7;
  uint64_t v8 = type metadata accessor for ListImageItem();
  long long v9 = (uint64_t *)(v7 + *(int *)(v8 + 20));
  uint64_t v10 = v9[1];
  uint64_t v29 = *v9;
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  LOBYTE(a1) = *(unsigned char *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_24FB2392C();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))sub_24FB37448(v11, v12, a1);
  sub_24FB23A14();
  uint64_t v29 = v13(v29, v10);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v27 + *(int *)(v8 + 24), v28);
  uint64_t v14 = sub_24FB47A08();
  uint64_t v16 = v15;
  LOBYTE(v13) = v17 & 1;
  sub_24FB47C28();
  uint64_t v18 = sub_24FB47998();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  swift_release();
  sub_24FADAA34(v14, v16, (char)v13);
  swift_bridgeObjectRelease();
  if (qword_269A4F368 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_269A4FD68;
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v20;
  *(unsigned char *)(a2 + 24) = v22 & 1;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = v25;
  *(void *)(a2 + 48) = sub_24FB23684;
  *(void *)(a2 + 56) = 0;
  swift_retain();
  sub_24FAE9618(v18, v20, v22 & 1);
  swift_bridgeObjectRetain();
  sub_24FADAA34(v18, v20, v22 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FB23684()
{
  uint64_t v0 = sub_24FB475F8();
  return MEMORY[0x25336D6C0](v0);
}

uint64_t sub_24FB236B4()
{
  sub_24FB2414C();
  uint64_t result = sub_24FB47608();
  qword_269A4FD68 = result;
  return result;
}

uint64_t type metadata accessor for DocumentListImageView()
{
  uint64_t result = qword_269A4FD98;
  if (!qword_269A4FD98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB23730(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB23778()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB23794()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DocumentListImageItemsView()
{
  return &type metadata for DocumentListImageItemsView;
}

uint64_t initializeBufferWithCopyOfBuffer for DocumentListImageView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *(void *)a1 = *a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_24FB2392C();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_24FB46FB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = type metadata accessor for ListImageItem();
    uint64_t v15 = *(int *)(v14 + 20);
    uint64_t v16 = (void *)(v11 + v15);
    char v17 = (void *)(v12 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = v11 + v19;
    uint64_t v21 = v12 + v19;
    uint64_t v22 = sub_24FB46D18();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_24FB2392C()
{
  return swift_retain();
}

uint64_t destroy for DocumentListImageView(uint64_t a1, uint64_t a2)
{
  sub_24FB23A14();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for ListImageItem();
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + *(int *)(v6 + 24);
  uint64_t v8 = sub_24FB46D18();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t sub_24FB23A14()
{
  return swift_release();
}

uint64_t initializeWithCopy for DocumentListImageView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_24FB2392C();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = type metadata accessor for ListImageItem();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = (void *)(v10 + v14);
  uint64_t v16 = (void *)(v11 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = *(int *)(v13 + 24);
  uint64_t v19 = v10 + v18;
  uint64_t v20 = v11 + v18;
  uint64_t v21 = sub_24FB46D18();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for DocumentListImageView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_24FB2392C();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_24FB23A14();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = type metadata accessor for ListImageItem();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = (void *)(v10 + v14);
  uint64_t v16 = (void *)(v11 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(v13 + 24);
  uint64_t v18 = v10 + v17;
  uint64_t v19 = v11 + v17;
  uint64_t v20 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for DocumentListImageView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for ListImageItem();
  *(_OWORD *)(v5 + *(int *)(v8 + 20)) = *(_OWORD *)(v6 + *(int *)(v8 + 20));
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = v5 + v9;
  uint64_t v11 = v6 + v9;
  uint64_t v12 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DocumentListImageView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24FB23A14();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for ListImageItem();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentListImageView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB23E6C);
}

uint64_t sub_24FB23E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for ListImageItem();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentListImageView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB23F28);
}

uint64_t sub_24FB23F28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ListImageItem();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24FB23FCC()
{
  uint64_t result = type metadata accessor for ListImageItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB24064()
{
  return sub_24FAD57F0(&qword_269A4FDB0, &qword_269A4FDB8);
}

unint64_t sub_24FB240A4()
{
  unint64_t result = qword_269A4FDC0;
  if (!qword_269A4FDC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FDC8);
    sub_24FAD57F0(&qword_269A4FDD0, &qword_269A4FDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FDC0);
  }
  return result;
}

unint64_t sub_24FB2414C()
{
  unint64_t result = qword_269A4FDE0;
  if (!qword_269A4FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FDE0);
  }
  return result;
}

ValueMetadata *_s20LeadingTextAlignmentOMa()
{
  return &_s20LeadingTextAlignmentON;
}

void sub_24FB241B0()
{
  static ListImageAttribute.name = 0x616D695F7473696CLL;
  qword_269A58F58 = 0xEA00000000006567;
}

uint64_t *ListImageAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F370 != -1) {
    swift_once();
  }
  return &static ListImageAttribute.name;
}

uint64_t static ListImageAttribute.name.getter()
{
  if (qword_269A4F370 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static ListImageAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ListImageAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F370 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ListImageAttribute.name = a1;
  qword_269A58F58 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ListImageAttribute.name.modify())()
{
  if (qword_269A4F370 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24FB243C0()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB24420()
{
  if (qword_269A4F370 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static ListImageAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for ListImageAttribute()
{
  return &type metadata for ListImageAttribute;
}

unint64_t sub_24FB244B4()
{
  unint64_t result = qword_269A4FDE8;
  if (!qword_269A4FDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FDE8);
  }
  return result;
}

uint64_t ListImageItem.init(id:imageName:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = type metadata accessor for ListImageItem();
  uint64_t v12 = (void *)(a5 + *(int *)(v11 + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  uint64_t v13 = a5 + *(int *)(v11 + 24);
  uint64_t v14 = sub_24FB46D18();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  return v15(v13, a4, v14);
}

uint64_t type metadata accessor for ListImageItem()
{
  uint64_t result = qword_269A4FDF8;
  if (!qword_269A4FDF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ListImageItem.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ListImageItem.imageName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ListImageItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ListImageItem.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ListImageItem() + 24);
  uint64_t v4 = sub_24FB46D18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t static ListImageItem.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for ListImageItem() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  BOOL v8 = v5 == *v7 && v6 == v7[1];
  if (!v8 && (sub_24FB48688() & 1) == 0) {
    return 0;
  }
  return sub_24FB46C08();
}

uint64_t sub_24FB247F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_24FB48688() & 1) == 0) {
    return 0;
  }
  return sub_24FB46C08();
}

uint64_t *initializeBufferWithCopyOfBuffer for ListImageItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    BOOL v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *BOOL v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = sub_24FB46D18();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ListImageItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_24FB46D18();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  BOOL v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = sub_24FB46D18();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB24DE0);
}

uint64_t sub_24FB24DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_24FB46D18();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ListImageItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB24F24);
}

uint64_t sub_24FB24F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_24FB46D18();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_24FB25054()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24FB46D18();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24FB25124()
{
  sub_24FB05CE4();
  sub_24FB474C8();
  return v1;
}

uint64_t (*sub_24FB25160(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v8 + v7, a1, a2);
  return sub_24FB25ADC;
}

uint64_t sub_24FB25238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(a5 + 24))(a1, a2, a4, a5, v14);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = sub_24FB47D78();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, AssociatedTypeWitness);
  return v17;
}

uint64_t sub_24FB253D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*v1)();
  *a1 = result;
  return result;
}

uint64_t ListImageStyleConfiguration.Label.body.getter@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24FB47C78();
  *a1 = result;
  return result;
}

uint64_t sub_24FB2544C@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24FB47C78();
  *a1 = result;
  return result;
}

uint64_t ListImageStyleConfiguration.label.getter(uint64_t a1)
{
  return a1;
}

uint64_t DefaultListImageStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24FB47BB8();
  uint64_t result = swift_getKeyPath();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  a3[3] = v6;
  return result;
}

uint64_t sub_24FB25518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24FB47BB8();
  uint64_t result = swift_getKeyPath();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  a3[3] = v6;
  return result;
}

void sub_24FB25570(void *a1@<X8>)
{
  *a1 = sub_24FB25BA8;
  a1[1] = 0;
}

uint64_t View.listImageStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  sub_24FB25160((uint64_t)v9, a3, a5);
  uint64_t v12 = v11;
  swift_getKeyPath();
  v14[0] = sub_24FB25ADC;
  v14[1] = v12;
  sub_24FB47AC8();
  swift_release();
  return swift_release();
}

uint64_t sub_24FB256CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB256E8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ListImageStyleConfiguration()
{
  return &type metadata for ListImageStyleConfiguration;
}

ValueMetadata *type metadata accessor for ListImageStyleConfiguration.Label()
{
  return &type metadata for ListImageStyleConfiguration.Label;
}

ValueMetadata *type metadata accessor for DefaultListImageStyle()
{
  return &type metadata for DefaultListImageStyle;
}

uint64_t sub_24FB25740()
{
  return MEMORY[0x263F1B558];
}

unint64_t sub_24FB25750()
{
  unint64_t result = qword_269A4FE08;
  if (!qword_269A4FE08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FE10);
    sub_24FB257DC();
    sub_24FB258BC((unint64_t *)&qword_269A4F738, &qword_269A4F740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FE08);
  }
  return result;
}

unint64_t sub_24FB257DC()
{
  unint64_t result = qword_269A4FE18;
  if (!qword_269A4FE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FE18);
  }
  return result;
}

uint64_t sub_24FB25830()
{
  return swift_getWitnessTable();
}

uint64_t sub_24FB258BC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AnyListImageStyle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AnyListImageStyle()
{
  return swift_release();
}

void *assignWithCopy for AnyListImageStyle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AnyListImageStyle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyListImageStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyListImageStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyListImageStyle()
{
  return &type metadata for AnyListImageStyle;
}

uint64_t sub_24FB25A48()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_24FB25A54()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24FB25ADC(uint64_t a1, uint64_t a2)
{
  return sub_24FB25238(a1, a2, v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80)), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

ValueMetadata *type metadata accessor for ListImageStyleKey()
{
  return &type metadata for ListImageStyleKey;
}

uint64_t sub_24FB25B2C()
{
  return sub_24FB47D78();
}

uint64_t DocumentDataImageElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentDataImageElement.imageData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DocumentDataImageElement() + 20);
  uint64_t v2 = *(void *)v1;
  sub_24FAE9930(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for DocumentDataImageElement()
{
  uint64_t result = qword_269A4FE50;
  if (!qword_269A4FE50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentDataImageElement.aspectRatio.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DocumentDataImageElement() + 24));
}

uint64_t DocumentDataImageElement.init(id:imageData:aspectRatio:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = a4 & 1;
  uint64_t v10 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = type metadata accessor for DocumentDataImageElement();
  uint64_t v12 = (void *)(a5 + *(int *)(result + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  *(unsigned char *)(a5 + *(int *)(result + 24)) = v9;
  return result;
}

uint64_t DocumentDataImageElement.makeView()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DocumentDataImageElement() + 20);
  uint64_t v2 = *(void *)v1;
  sub_24FAE9930(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t static DocumentDataImageElement.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for DocumentDataImageElement();
  if ((sub_24FB2642C(*(void *)(a1 + *(int *)(v4 + 20)), *(void *)(a1 + *(int *)(v4 + 20) + 8), *(void *)(a2 + *(int *)(v4 + 20)), *(void *)(a2 + *(int *)(v4 + 20) + 8)) & 1) == 0)return 0; {
  uint64_t v5 = *(int *)(v4 + 24);
  }
  uint64_t v6 = *(unsigned __int8 *)(a1 + v5);
  uint64_t v7 = *(unsigned __int8 *)(a2 + v5);
  return MEMORY[0x270EFEF40](v6, v7);
}

uint64_t sub_24FB25E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0
    || (sub_24FB2642C(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a1 + *(int *)(a3 + 20) + 8), *(void *)(a2 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20) + 8)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = *(unsigned __int8 *)(a1 + v6);
  uint64_t v8 = *(unsigned __int8 *)(a2 + v6);
  return MEMORY[0x270EFEF40](v7, v8);
}

uint64_t sub_24FB25ED0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_24FAE9930(a2, a3);
      uint64_t v10 = (char *)sub_24FB469E8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_24FB46A08();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_24FB469F8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24FB26134);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_24FAE999C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_24FB469E8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_24FB46A08();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_24FB469F8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24FB26144(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_24FAE9930(a1, a2);
      char v5 = sub_24FB26374((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_24FAE999C(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_24FB26374(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_24FAE999C(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_24FB25ED0((uint64_t)__s1, a3, a4, &v14);
      sub_24FAE999C(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_24FB26374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_24FB469E8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_24FB46A08();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24FB469F8();
  sub_24FB25ED0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_24FB2642C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x24FB26568);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_24FAE9930(a3, a4);
              char v15 = sub_24FB26144(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

_UNKNOWN **sub_24FB26588()
{
  return &protocol witness table for DocumentImageDataView;
}

unint64_t sub_24FB26598()
{
  unint64_t result = qword_269A4FE30;
  if (!qword_269A4FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FE30);
  }
  return result;
}

uint64_t sub_24FB265EC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB266B8(&qword_269A4FE38, (void (*)(uint64_t))type metadata accessor for DocumentDataImageElement);
  uint64_t result = sub_24FB266B8((unint64_t *)&unk_269A4FE40, (void (*)(uint64_t))type metadata accessor for DocumentDataImageElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB26670()
{
  return sub_24FB266B8(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB266B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DocumentDataImageElement(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_24FAE9930(*v10, v12);
    uint64_t *v9 = v11;
    v9[1] = v12;
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for DocumentDataImageElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];
  return sub_24FAE999C(v6, v7);
}

uint64_t initializeWithCopy for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_24FAE9930(*v9, v11);
  *uint64_t v8 = v10;
  v8[1] = v11;
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_24FAE9930(*v9, v11);
  uint64_t v12 = *v8;
  unint64_t v13 = v8[1];
  *uint64_t v8 = v10;
  v8[1] = v11;
  sub_24FAE999C(v12, v13);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  unint64_t v9 = *(void *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_24FAE999C(v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB26AE8);
}

uint64_t sub_24FB26AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DocumentDataImageElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB26BB8);
}

uint64_t sub_24FB26BB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24FB26C74()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double DocumentImageDataView.body.getter@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7 = a3 & 1;
  id v8 = objc_allocWithZone(MEMORY[0x263F827E8]);
  sub_24FAE9930(a1, a2);
  uint64_t v9 = (void *)sub_24FB46F78();
  id v10 = objc_msgSend(v8, sel_initWithData_, v9);

  double result = 210.0;
  *(_OWORD *)a4 = xmmword_24FB4BA50;
  *(void *)(a4 + 16) = v10;
  *(void *)(a4 + 24) = a1;
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 32) = a2;
  *(unsigned char *)(a4 + 56) = v7;
  return result;
}

uint64_t sub_24FB26DB4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_24FB26DD0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  unint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
  id v6 = objc_allocWithZone(MEMORY[0x263F827E8]);
  sub_24FAE9930(v3, v4);
  char v7 = (void *)sub_24FB46F78();
  id v8 = objc_msgSend(v6, sel_initWithData_, v7);

  double result = 210.0;
  *(_OWORD *)a1 = xmmword_24FB4BA50;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  return result;
}

uint64_t destroy for DocumentImageDataView(uint64_t a1)
{
  return sub_24FAE999C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t _s16MarkdownDocument21DocumentImageDataViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_24FAE9930(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for DocumentImageDataView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_24FAE9930(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_24FAE999C(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DocumentImageDataView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_24FAE999C(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentImageDataView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DocumentImageDataView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentImageDataView()
{
  return &type metadata for DocumentImageDataView;
}

unint64_t sub_24FB27010()
{
  unint64_t result = qword_269A4FE60;
  if (!qword_269A4FE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FE60);
  }
  return result;
}

uint64_t DocumentImageView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FE68);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FE70);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FE78);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB272BC(v1, (uint64_t)v5);
  char v14 = sub_24FB47818();
  sub_24FB47178();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_24FAD5834((uint64_t)v5, (uint64_t)v9, &qword_269A4FE68);
  int v23 = &v9[*(int *)(v7 + 44)];
  *int v23 = v14;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_24FAD5794((uint64_t)v5, &qword_269A4FE68);
  char v24 = sub_24FB47828();
  sub_24FB47178();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_24FAD5834((uint64_t)v9, (uint64_t)v13, &qword_269A4FE70);
  uint64_t v33 = &v13[*(int *)(v11 + 44)];
  *uint64_t v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_24FAD5794((uint64_t)v9, &qword_269A4FE70);
  char v34 = sub_24FB477F8();
  sub_24FB47178();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_24FAD5834((uint64_t)v13, a1, &qword_269A4FE78);
  uint64_t v43 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4FE80) + 36);
  *(unsigned char *)uint64_t v43 = v34;
  *(void *)(v43 + 8) = v36;
  *(void *)(v43 + 16) = v38;
  *(void *)(v43 + 24) = v40;
  *(void *)(v43 + 32) = v42;
  *(unsigned char *)(v43 + 40) = 0;
  return sub_24FAD5794((uint64_t)v13, &qword_269A4FE78);
}

uint64_t sub_24FB272BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF28);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (_OWORD *)((char *)&v70 - v6);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FEC0);
  MEMORY[0x270FA5388](v81);
  uint64_t v9 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF30);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF10);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24FB47388();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t *)((char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FEE0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FED0);
  MEMORY[0x270FA5388](v78);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  char v24 = *(void **)(a1 + 16);
  if (v24)
  {
    id v25 = v24;
    uint64_t *v9 = sub_24FB47E48();
    v9[1] = v26;
    id v27 = v25;
    sub_24FB47C68();
    sub_24FB27B08(*(unsigned __int8 *)(a1 + 56), v7, *(double *)(a1 + 8));
    swift_release();
    uint64_t v28 = *(void *)(a1 + 24);
    unint64_t v29 = *(void *)(a1 + 32);
    LOBYTE(v92[0]) = 0;
    sub_24FAE9930(v28, v29);
    sub_24FB47CE8();
    char v30 = (char)v85;
    uint64_t v31 = v86;
    unsigned __int8 v32 = sub_24FB47818();
    char v33 = sub_24FB47858();
    char v34 = sub_24FB47848();
    sub_24FB47848();
    if (sub_24FB47848() != v32) {
      char v34 = sub_24FB47848();
    }
    sub_24FB47848();
    char v35 = sub_24FB47848();
    id v76 = v27;
    if (v35 != v33) {
      char v34 = sub_24FB47848();
    }
    uint64_t v36 = (uint64_t)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF48) + 44);
    sub_24FB47178();
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v45 = v77;
    sub_24FAD5834((uint64_t)v7, v77, &qword_269A4FF28);
    sub_24FAD5834(v45, v36, &qword_269A4FF28);
    uint64_t v46 = v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF50) + 48);
    *(unsigned char *)uint64_t v46 = v30;
    *(void *)(v46 + 8) = v31;
    *(void *)(v46 + 16) = v28;
    *(void *)(v46 + 24) = v29;
    *(unsigned char *)(v46 + 32) = v34;
    *(void *)(v46 + 40) = v38;
    *(void *)(v46 + 48) = v40;
    *(void *)(v46 + 56) = v42;
    *(void *)(v46 + 64) = v44;
    *(unsigned char *)(v46 + 72) = 0;
    swift_retain();
    sub_24FAE9930(v28, v29);
    sub_24FAD5794((uint64_t)v7, &qword_269A4FF28);
    swift_release();
    sub_24FAE999C(v28, v29);
    sub_24FAD5794(v45, &qword_269A4FF28);
    sub_24FAD5834((uint64_t)v9, v80, &qword_269A4FEC0);
    swift_storeEnumTagMultiPayload();
    sub_24FAD57F0(&qword_269A4FEB8, &qword_269A4FEC0);
    sub_24FB2840C();
    sub_24FB476C8();

    uint64_t v47 = (uint64_t)v9;
    unint64_t v48 = &qword_269A4FEC0;
  }
  else
  {
    uint64_t v77 = (uint64_t)&v70 - v23;
    uint64_t v49 = sub_24FB47BD8();
    sub_24FB47E58();
    sub_24FB47238();
    id v76 = v85;
    int v75 = v86;
    uint64_t v74 = v87;
    int v73 = v88;
    uint64_t v72 = v89;
    uint64_t v71 = v90;
    uint64_t v50 = *(void *)(a1 + 8);
    uint64_t v51 = (char *)v16 + *(int *)(v14 + 20);
    uint64_t v52 = *MEMORY[0x263F19860];
    uint64_t v53 = sub_24FB475C8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104))(v51, v52, v53);
    *uint64_t v16 = v50;
    v16[1] = v50;
    sub_24FADC744((uint64_t)v16, (uint64_t)v13);
    *(_WORD *)&v13[*(int *)(v11 + 36)] = 256;
    sub_24FAD5834((uint64_t)v13, (uint64_t)&v19[*(int *)(v17 + 36)], &qword_269A4FF10);
    *(void *)uint64_t v19 = v49;
    *((_WORD *)v19 + 4) = 256;
    *((void *)v19 + 2) = v76;
    v19[24] = v75;
    *((void *)v19 + 4) = v74;
    v19[40] = v73;
    uint64_t v54 = v71;
    *((void *)v19 + 6) = v72;
    *((void *)v19 + 7) = v54;
    swift_retain();
    sub_24FAD5794((uint64_t)v13, &qword_269A4FF10);
    sub_24FADC7FC((uint64_t)v16);
    swift_release();
    sub_24FAD5730(a1 + 40, (uint64_t)v91, &qword_269A4FF38);
    sub_24FAD5730((uint64_t)v91, (uint64_t)v92, &qword_269A4FF38);
    if (v92[1])
    {
      unint64_t v83 = 0;
      unint64_t v84 = 0xE000000000000000;
      sub_24FB48448();
      swift_bridgeObjectRelease();
      unint64_t v83 = 0xD000000000000016;
      unint64_t v84 = 0x800000024FB50960;
      sub_24FB480E8();
      unint64_t v56 = v83;
      unint64_t v55 = v84;
    }
    else
    {
      unint64_t v55 = 0x800000024FB50940;
      unint64_t v56 = 0xD000000000000014;
    }
    unint64_t v83 = v56;
    unint64_t v84 = v55;
    sub_24FB285EC();
    uint64_t v57 = sub_24FB47A18();
    uint64_t v59 = v58;
    char v61 = v60;
    uint64_t v63 = v62;
    uint64_t v64 = sub_24FB47E58();
    uint64_t v66 = v65;
    sub_24FAD5834((uint64_t)v19, (uint64_t)v21, &qword_269A4FEE0);
    uint64_t v67 = &v21[*(int *)(v78 + 36)];
    *(void *)uint64_t v67 = v57;
    *((void *)v67 + 1) = v59;
    v67[16] = v61 & 1;
    *((void *)v67 + 3) = v63;
    *((void *)v67 + 4) = v64;
    *((void *)v67 + 5) = v66;
    sub_24FAD5794((uint64_t)v19, &qword_269A4FEE0);
    uint64_t v68 = v77;
    sub_24FAD5730((uint64_t)v21, v77, &qword_269A4FED0);
    sub_24FAD5834(v68, v80, &qword_269A4FED0);
    swift_storeEnumTagMultiPayload();
    sub_24FAD57F0(&qword_269A4FEB8, &qword_269A4FEC0);
    sub_24FB2840C();
    sub_24FB476C8();
    uint64_t v47 = v68;
    unint64_t v48 = &qword_269A4FED0;
  }
  return sub_24FAD5794(v47, v48);
}

uint64_t sub_24FB27AEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24FB27B08@<X0>(int a1@<W0>, _OWORD *a2@<X8>, double a3@<D0>)
{
  int v31 = a1;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF10) - 8;
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_24FB47388();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (double *)&v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24FB47C98();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x263F1B4B8], v11, v13);
  sub_24FB47CC8();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v16 = sub_24FB47C88();
  swift_release();
  LOBYTE(v11) = v31 & 1;
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v52 = v16;
  uint64_t v53 = 0;
  char v54 = 1;
  char v55 = v11;
  uint64_t v56 = v47;
  char v57 = v48;
  uint64_t v58 = v49;
  char v59 = v50;
  long long v60 = v51;
  sub_24FB47E58();
  sub_24FB1B458(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v33, 0.0, 1, 0.0, 1);
  swift_release();
  uint64_t v17 = sub_24FB47BD8();
  char v18 = sub_24FB47808();
  long long v43 = v33[8];
  long long v44 = v33[9];
  long long v45 = v33[10];
  *(void *)&v46[0] = v34;
  long long v39 = v33[4];
  long long v40 = v33[5];
  long long v41 = v33[6];
  long long v42 = v33[7];
  long long v35 = v33[0];
  long long v36 = v33[1];
  long long v37 = v33[2];
  long long v38 = v33[3];
  WORD4(v46[0]) = 0;
  *(void *)&v46[1] = v17;
  BYTE8(v46[1]) = v18;
  uint64_t v19 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v20 = *MEMORY[0x263F19860];
  uint64_t v21 = sub_24FB475C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  *uint64_t v10 = a3;
  v10[1] = a3;
  sub_24FADC744((uint64_t)v10, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v32 + 44)] = 256;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF28);
  sub_24FAD5834((uint64_t)v6, (uint64_t)a2 + *(int *)(v22 + 36), &qword_269A4FF10);
  long long v23 = v46[0];
  a2[10] = v45;
  a2[11] = v23;
  *(_OWORD *)((char *)a2 + 185) = *(_OWORD *)((char *)v46 + 9);
  long long v24 = v42;
  a2[6] = v41;
  a2[7] = v24;
  long long v25 = v44;
  a2[8] = v43;
  a2[9] = v25;
  long long v26 = v38;
  a2[2] = v37;
  a2[3] = v26;
  long long v27 = v40;
  a2[4] = v39;
  a2[5] = v27;
  long long v28 = v36;
  *a2 = v35;
  a2[1] = v28;
  sub_24FB28640((uint64_t)&v35);
  sub_24FAD5794((uint64_t)v6, &qword_269A4FF10);
  sub_24FADC7FC((uint64_t)v10);
  return sub_24FB28678((uint64_t)&v35);
}

uint64_t sub_24FB27F0C@<X0>(uint64_t a1@<X8>)
{
  return DocumentImageView.body.getter(a1);
}

uint64_t destroy for DocumentImageView(uint64_t a1)
{
  sub_24FAE999C(*(void *)(a1 + 24), *(void *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentImageView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  unint64_t v6 = *(void *)(a2 + 32);
  id v7 = v4;
  sub_24FAE9930(v5, v6);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentImageView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  sub_24FAE9930(v7, v8);
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  sub_24FAE999C(v9, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DocumentImageView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_24FAE999C(v5, v6);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentImageView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DocumentImageView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentImageView()
{
  return &type metadata for DocumentImageView;
}

uint64_t sub_24FB281EC()
{
  return sub_24FB28250(&qword_269A4FE88, &qword_269A4FE80, (void (*)(void))sub_24FB28228);
}

uint64_t sub_24FB28228()
{
  return sub_24FB28250(&qword_269A4FE90, &qword_269A4FE78, (void (*)(void))sub_24FB282D0);
}

uint64_t sub_24FB28250(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB282D0()
{
  return sub_24FB28250(&qword_269A4FE98, &qword_269A4FE70, (void (*)(void))sub_24FB282F8);
}

unint64_t sub_24FB282F8()
{
  unint64_t result = qword_269A4FEA0;
  if (!qword_269A4FEA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FE68);
    sub_24FB2836C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FEA0);
  }
  return result;
}

unint64_t sub_24FB2836C()
{
  unint64_t result = qword_269A4FEA8;
  if (!qword_269A4FEA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FEB0);
    sub_24FAD57F0(&qword_269A4FEB8, &qword_269A4FEC0);
    sub_24FB2840C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FEA8);
  }
  return result;
}

unint64_t sub_24FB2840C()
{
  unint64_t result = qword_269A4FEC8;
  if (!qword_269A4FEC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FED0);
    sub_24FB284AC();
    sub_24FAD57F0(&qword_269A4FF18, &qword_269A4FF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FEC8);
  }
  return result;
}

unint64_t sub_24FB284AC()
{
  unint64_t result = qword_269A4FED8;
  if (!qword_269A4FED8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FEE0);
    sub_24FB2854C();
    sub_24FAD57F0(&qword_269A4FF08, &qword_269A4FF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FED8);
  }
  return result;
}

unint64_t sub_24FB2854C()
{
  unint64_t result = qword_269A4FEE8;
  if (!qword_269A4FEE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FEF0);
    sub_24FAD57F0(&qword_269A4FEF8, &qword_269A4FF00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FEE8);
  }
  return result;
}

unint64_t sub_24FB285EC()
{
  unint64_t result = qword_269A4FF40;
  if (!qword_269A4FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FF40);
  }
  return result;
}

uint64_t sub_24FB28640(uint64_t a1)
{
  return a1;
}

uint64_t sub_24FB28678(uint64_t a1)
{
  return a1;
}

void sub_24FB286B0()
{
  BYTE5(qword_269A58F68) = 0;
  HIWORD(qword_269A58F68) = -5120;
}

uint64_t *ImageAspectRatioAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F378 != -1) {
    swift_once();
  }
  return &static ImageAspectRatioAttribute.name;
}

uint64_t static ImageAspectRatioAttribute.name.getter()
{
  if (qword_269A4F378 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static ImageAspectRatioAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ImageAspectRatioAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F378 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ImageAspectRatioAttribute.name = a1;
  qword_269A58F68 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ImageAspectRatioAttribute.name.modify())()
{
  if (qword_269A4F378 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24FB288C4()
{
  unint64_t result = qword_269A4FF58;
  if (!qword_269A4FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FF58);
  }
  return result;
}

uint64_t sub_24FB28918()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB28978()
{
  if (qword_269A4F378 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static ImageAspectRatioAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for ImageAspectRatioAttribute()
{
  return &type metadata for ImageAspectRatioAttribute;
}

unint64_t sub_24FB28A0C()
{
  unint64_t result = qword_269A4FF60;
  if (!qword_269A4FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FF60);
  }
  return result;
}

void sub_24FB28A60()
{
  static NamedImageAttribute.name = 0x616E5F6567616D69;
  qword_269A58F78 = 0xEA0000000000656DLL;
}

uint64_t *NamedImageAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F380 != -1) {
    swift_once();
  }
  return &static NamedImageAttribute.name;
}

uint64_t static NamedImageAttribute.name.getter()
{
  if (qword_269A4F380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static NamedImageAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static NamedImageAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static NamedImageAttribute.name = a1;
  qword_269A58F78 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static NamedImageAttribute.name.modify())()
{
  if (qword_269A4F380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24FB28C70()
{
  unint64_t result = qword_269A4FF68;
  if (!qword_269A4FF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FF68);
  }
  return result;
}

uint64_t sub_24FB28CC4()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB28D24()
{
  if (qword_269A4F380 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static NamedImageAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for NamedImageAttribute()
{
  return &type metadata for NamedImageAttribute;
}

unint64_t sub_24FB28DB8()
{
  unint64_t result = qword_269A4FF70;
  if (!qword_269A4FF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FF70);
  }
  return result;
}

uint64_t DocumentElementOutlineParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v100 = a2;
  uint64_t v90 = sub_24FB46FB8();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v87 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24FB46E68();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v98 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v97);
  uint64_t v102 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_24FB46D18();
  uint64_t v103 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v106 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v85 = (char *)&v83 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v91 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_24FB46C78();
  uint64_t v95 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v99 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v86 = (char *)&v83 - v13;
  uint64_t v92 = (void *)sub_24FB46DF8();
  uint64_t v14 = *(v92 - 1);
  MEMORY[0x270FA5388](v92);
  uint64_t v93 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v16 - 8);
  char v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24FB46DB8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v96 = (char *)&v83 - v27;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  uint64_t v28 = sub_24FB46E08();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
  {
    sub_24FAD5794((uint64_t)v18, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    uint64_t v30 = v100;
    goto LABEL_15;
  }
  uint64_t v84 = (uint64_t)v21;
  uint64_t v94 = v23;
  uint64_t v88 = v22;
  uint64_t v31 = sub_24FB46DC8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    uint64_t v110 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
    unint64_t v33 = v31 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
    uint64_t v34 = v31;
    long long v35 = (uint64_t (**)(char *, void *))(v14 + 88);
    LODWORD(v109) = *MEMORY[0x263F068F0];
    LODWORD(v108) = *MEMORY[0x263F06900];
    long long v36 = (void (**)(char *, void *))(v14 + 8);
    long long v37 = (void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v111 = v94 + 16;
    uint64_t v107 = *(void (**)(char *, uint64_t))(v94 + 72);
    *(void *)&long long v83 = v34;
    swift_bridgeObjectRetain();
    uint64_t v38 = v88;
    long long v39 = v92;
    long long v40 = v93;
    while (1)
    {
      v110(v25, v33, v38);
      sub_24FB46D98();
      int v41 = (*v35)(v40, v39);
      if (v41 == v109 || v41 == v108) {
        break;
      }
      (*v36)(v40, v39);
      (*v37)(v25, v38);
      v33 += (unint64_t)v107;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = 1;
        uint64_t v30 = v100;
        long long v44 = (char *)v94;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    long long v44 = (char *)v94;
    uint64_t v21 = (char *)v84;
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v84, v25, v38);
    uint64_t v43 = 0;
    uint64_t v30 = v100;
  }
  else
  {
    uint64_t v43 = 1;
    uint64_t v38 = v88;
    long long v44 = (char *)v94;
    uint64_t v30 = v100;
LABEL_12:
    uint64_t v21 = (char *)v84;
  }
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v44 + 7))(v21, v43, 1, v38);
  swift_bridgeObjectRelease();
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v44 + 6))(v21, 1, v38) == 1)
  {
LABEL_15:
    sub_24FAD5794((uint64_t)v21, &qword_269A4F6A0);
    uint64_t v45 = type metadata accessor for DocumentOutlineElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v30, 1, 1, v45);
  }
  (*((void (**)(char *, char *, uint64_t))v44 + 4))(v96, v21, v38);
  uint64_t v47 = sub_24FB46DA8();
  unint64_t v48 = sub_24FB3F66C(v47);
  uint64_t v49 = v48;
  if (!*(void *)(v48 + 16))
  {
    uint64_t v52 = v91;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v91, 1, 1, v104);
    goto LABEL_47;
  }
  uint64_t v50 = v95;
  unint64_t v51 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v52 = v91;
  uint64_t v53 = v104;
  uint64_t v110 = *(void (**)(char *, unint64_t, uint64_t))(v95 + 16);
  uint64_t v111 = v95 + 16;
  v110((char *)v91, v48 + v51, v104);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v53) == 1)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    sub_24FAD5794(v52, &qword_269A4FC50);
    uint64_t v58 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_51;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v86, v52, v53);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF78);
  uint64_t DynamicType = swift_allocObject();
  long long v83 = xmmword_24FB49BA0;
  *(_OWORD *)(DynamicType + 16) = xmmword_24FB49BA0;
  uint64_t v55 = (uint64_t)v102;
  sub_24FB46C68();
  unint64_t v109 = sub_24FB0CBEC();
  sub_24FB46D38();
  sub_24FAD5794(v55, &qword_269A4F6C0);
  uint64_t v56 = (uint64_t)v85;
  sub_24FB46D48();
  sub_24FB29EFC(v56, (uint64_t *)(DynamicType + 32));
  char v57 = *(void (**)(char *, uint64_t))(v103 + 8);
  v103 += 8;
  uint64_t v107 = v57;
  v57((char *)v56, v101);
  uint64_t v58 = sub_24FB2AEA4(0, 1, 1, MEMORY[0x263F8EE78], &qword_269A4FFB8, &qword_269A4FFC0);
  unint64_t v60 = v58[2];
  unint64_t v59 = v58[3];
  char v61 = (char *)(v60 + 1);
  if (v60 >= v59 >> 1) {
    goto LABEL_57;
  }
  while (1)
  {
    v58[2] = v61;
    v58[v60 + 4] = DynamicType;
    unint64_t v108 = *(void *)(v49 + 16);
    if (v108 <= 1) {
      break;
    }
    uint64_t v91 = *(void *)(v95 + 72);
    long long v44 = (char *)(v49 + v91 + v51);
    unint64_t v51 = 2;
    uint64_t v93 = (char *)(v95 + 8);
    uint64_t v95 = (v95 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    do
    {
      uint64_t v62 = v99;
      uint64_t v63 = v49;
      uint64_t v64 = v104;
      v110(v99, (unint64_t)v44, v104);
      unint64_t v60 = (unint64_t)v102;
      sub_24FB46C68();
      uint64_t v65 = v64;
      uint64_t v49 = v63;
      uint64_t v92 = *(void **)v93;
      ((void (*)(char *, uint64_t))v92)(v62, v65);
      sub_24FB46D38();
      sub_24FAD5794(v60, &qword_269A4F6C0);
      char v61 = v106;
      sub_24FB46D48();
      sub_24FB2B46C(v51 - 1, v63);
      if ((v66 & 1) == 0)
      {
        uint64_t DynamicType = swift_allocObject();
        *(_OWORD *)(DynamicType + 16) = v83;
        sub_24FB29EFC((uint64_t)v61, (uint64_t *)(DynamicType + 32));
        unint64_t v60 = v58[2];
        unint64_t v76 = v58[3];
        char v61 = (char *)(v60 + 1);
        if (v60 >= v76 >> 1) {
          uint64_t v58 = sub_24FB2AEA4((void *)(v76 > 1), v60 + 1, 1, v58, &qword_269A4FFB8, &qword_269A4FFC0);
        }
        v58[2] = v61;
        v58[v60 + 4] = DynamicType;
        v107(v106, v101);
        goto LABEL_35;
      }
      sub_24FB29EFC((uint64_t)v61, v118);
      uint64_t v67 = v58[2];
      if (v67)
      {
        uint64_t v68 = v58 + 4;
        uint64_t v69 = v58[v67 + 3];
        uint64_t v70 = *(void *)(v69 + 16);
        if (v70)
        {
          sub_24FAF8C3C(v69 + 40 * v70 - 8, (uint64_t)&v115);
          __swift_project_boxed_opaque_existential_1(v118, v118[3]);
          uint64_t DynamicType = swift_getDynamicType();
          char v61 = v116;
          __swift_project_boxed_opaque_existential_1(&v115, (uint64_t)v116);
          if (DynamicType == swift_getDynamicType())
          {
            unint64_t v78 = v58[2];
            if (!v78) {
              goto LABEL_53;
            }
            uint64_t v49 = v78 - 1;
            uint64_t v85 = *(char **)(v68[v78 - 1] + 16);
            uint64_t DynamicType = (uint64_t)v116;
            unint64_t v60 = v117;
            char v61 = (char *)__swift_project_boxed_opaque_existential_1(&v115, (uint64_t)v116);
            (*(void (**)(long long *__return_ptr, char *, uint64_t, unint64_t))(v60 + 16))(&v113, v106, DynamicType, v60);
            unint64_t v59 = v58[2];
            if (v78 > v59) {
              goto LABEL_54;
            }
            uint64_t DynamicType = v68[v49];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v68[v49] = DynamicType;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t DynamicType = (uint64_t)sub_24FB2AFF8((void *)DynamicType);
              v68[v49] = DynamicType;
            }
            char v61 = v106;
            uint64_t v49 = v63;
            unint64_t v59 = (unint64_t)&v114;
            if (!v85) {
              goto LABEL_55;
            }
            unint64_t v59 = *(void *)(DynamicType + 16);
            if ((unint64_t)v85 > v59) {
              goto LABEL_56;
            }
            DynamicType += 40 * (void)(v85 - 1) + 32;
            __swift_destroy_boxed_opaque_existential_1(DynamicType);
            sub_24FAF8CA0(&v113, DynamicType);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
            v107(v61, v101);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
            goto LABEL_35;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
        }
      }
      uint64_t DynamicType = v58[2];
      sub_24FAF8C3C((uint64_t)v118, (uint64_t)&v115);
      if (!DynamicType) {
        goto LABEL_52;
      }
      unint64_t v60 = DynamicType - 1;
      uint64_t v71 = v58 + 4;
      uint64_t v72 = DynamicType - 1;
      uint64_t DynamicType = v58[v72 + 4];
      char v73 = swift_isUniquelyReferenced_nonNull_native();
      v58[v72 + 4] = DynamicType;
      if ((v73 & 1) == 0)
      {
        uint64_t DynamicType = (uint64_t)sub_24FAD4C74(0, *(void *)(DynamicType + 16) + 1, 1, (void *)DynamicType, &qword_269A4FF78, (uint64_t *)&unk_269A4F598);
        v71[v60] = DynamicType;
      }
      unint64_t v75 = *(void *)(DynamicType + 16);
      unint64_t v74 = *(void *)(DynamicType + 24);
      char v61 = (char *)(v75 + 1);
      if (v75 >= v74 >> 1)
      {
        uint64_t DynamicType = (uint64_t)sub_24FAD4C74((void *)(v74 > 1), v75 + 1, 1, (void *)DynamicType, &qword_269A4FF78, (uint64_t *)&unk_269A4F598);
        v71[v60] = DynamicType;
      }
      *(void *)(DynamicType + 16) = v61;
      sub_24FAF8CA0(&v115, DynamicType + 40 * v75 + 32);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
      v107(v106, v101);
LABEL_35:
      if (v108 == v51)
      {
        long long v44 = (char *)v94;
        ((void (*)(char *, uint64_t))v92)(v86, v104);
        goto LABEL_50;
      }
      unint64_t v59 = *(void *)(v49 + 16);
      v44 += v91;
    }
    while (v51++ < v59);
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    uint64_t v58 = sub_24FB2AEA4((void *)(v59 > 1), (int64_t)v61, 1, v58, &qword_269A4FFB8, &qword_269A4FFC0);
  }
  (*(void (**)(char *, uint64_t))(v95 + 8))(v86, v104);
LABEL_50:
  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v80 = v87;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*((void (**)(char *, uint64_t))v44 + 1))(v96, v88);
  uint64_t v81 = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v100, v80, v90);
  uint64_t v82 = type metadata accessor for DocumentOutlineElement();
  *(void *)(v81 + *(int *)(v82 + 20)) = v58;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
}

uint64_t sub_24FB29EC8()
{
  return 8;
}

uint64_t sub_24FB29ED4()
{
  return swift_release();
}

uint64_t sub_24FB29EDC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB29EF0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB29EFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v96 = *(void *)(v3 - 8);
  uint64_t v97 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v95 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_24FB46DF8();
  uint64_t v99 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v94 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v105 = (char *)&v83 - v7;
  MEMORY[0x270FA5388](v8);
  unint64_t v109 = (char *)&v83 - v9;
  uint64_t v108 = sub_24FB46DB8();
  uint64_t v98 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v93 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v107 = (char *)&v83 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v18 = (char *)&v83 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24FB46C98();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24FB46C78();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = a1;
  sub_24FB46CB8();
  sub_24FB2C4C4((uint64_t)v21);
  uint64_t v30 = v25;
  uint64_t v31 = v26;
  uint64_t v32 = v27;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 1, v31) != 1)
  {
    uint64_t v88 = v15;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v21, v31);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v83 - 2) = v36;
    swift_getKeyPath();
    unint64_t v37 = sub_24FB0C1CC();
    sub_24FB46C58();
    swift_release();
    uint64_t v38 = sub_24FB46E08();
    uint64_t v39 = *(void *)(v38 - 8);
    long long v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    unsigned int v41 = v40(v18, 1, v38);
    uint64_t v92 = v38;
    uint64_t v87 = v39;
    uint64_t v90 = v39 + 48;
    unint64_t v91 = v37;
    uint64_t v89 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
    if (v41 == 1)
    {
      sub_24FAD5794((uint64_t)v18, &qword_269A4F698);
    }
    else
    {
      uint64_t v42 = sub_24FB46DC8();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v38);
      uint64_t v43 = *(void *)(v42 + 16);
      if (v43)
      {
        uint64_t v84 = v29;
        uint64_t v85 = v27;
        uint64_t v86 = v31;
        uint64_t v104 = *(void (**)(char *, unint64_t, uint64_t))(v98 + 16);
        unint64_t v44 = v42 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
        unsigned int v103 = *MEMORY[0x263F068E8];
        uint64_t v45 = (void (**)(char *, void, uint64_t))(v99 + 104);
        uint64_t v46 = (void (**)(char *, uint64_t))(v99 + 8);
        uint64_t v47 = (void (**)(char *, uint64_t))(v98 + 8);
        uint64_t v102 = *(void *)(v98 + 72);
        uint64_t v83 = v42;
        swift_bridgeObjectRetain();
        uint64_t v48 = v108;
        uint64_t v49 = v107;
        while (1)
        {
          v104(v49, v44, v48);
          sub_24FB46D98();
          uint64_t v50 = v105;
          uint64_t v51 = v106;
          (*v45)(v105, v103, v106);
          char v52 = MEMORY[0x25336D160](v109, v50);
          uint64_t v53 = *v46;
          char v54 = v50;
          uint64_t v55 = v109;
          (*v46)(v54, v51);
          uint64_t v56 = v51;
          uint64_t v48 = v108;
          v53(v55, v56);
          uint64_t v49 = v107;
          (*v47)(v107, v48);
          if (v52) {
            break;
          }
          v44 += v102;
          if (!--v43)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v34 = v100;
            uint64_t v33 = v101;
            uint64_t v57 = v99;
            uint64_t v31 = v86;
            uint64_t v32 = v85;
            uint64_t v29 = v84;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v70 = v95;
        _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
        uint64_t v71 = type metadata accessor for DocumentBlockQuoteElement();
        uint64_t v72 = v100;
        v100[3] = v71;
        char v73 = &qword_269A4F5C8;
        unint64_t v74 = type metadata accessor for DocumentBlockQuoteElement;
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v57 = v99;
    uint64_t v34 = v100;
    uint64_t v48 = v108;
    uint64_t v33 = v101;
LABEL_12:
    uint64_t v58 = (uint64_t)v88;
    uint64_t v59 = swift_getKeyPath();
    MEMORY[0x270FA5388](v59);
    *(&v83 - 2) = v60;
    swift_getKeyPath();
    sub_24FB46C58();
    swift_release();
    uint64_t v61 = v92;
    if (v89(v58, 1, v92) == 1)
    {
      sub_24FAD5794(v58, &qword_269A4F698);
LABEL_21:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
      goto LABEL_22;
    }
    uint64_t v62 = sub_24FB46DC8();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v58, v61);
    uint64_t v63 = *(void *)(v62 + 16);
    if (!v63)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    uint64_t v84 = v29;
    uint64_t v85 = v32;
    uint64_t v86 = v31;
    unint64_t v109 = *(char **)(v98 + 16);
    unint64_t v64 = v62 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
    LODWORD(v108) = *MEMORY[0x263F06930];
    uint64_t v107 = (char *)(v98 + 8);
    uint64_t v65 = *(char **)(v98 + 72);
    uint64_t v104 = (void (*)(char *, unint64_t, uint64_t))v62;
    uint64_t v105 = v65;
    swift_bridgeObjectRetain();
    uint64_t v66 = v106;
    uint64_t v68 = v93;
    uint64_t v67 = v94;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v109)(v68, v64, v48);
      sub_24FB46D98();
      int v69 = (*(uint64_t (**)(char *, uint64_t))(v57 + 88))(v67, v66);
      if (v69 == v108) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v67, v66);
      (*(void (**)(char *, uint64_t))v107)(v68, v48);
      v64 += (unint64_t)v105;
      if (!--v63)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v34 = v100;
        uint64_t v33 = v101;
        uint64_t v31 = v86;
        uint64_t v32 = v85;
        uint64_t v29 = v84;
        goto LABEL_21;
      }
    }
    (*(void (**)(char *, uint64_t))(v99 + 96))(v67, v66);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))v107)(v68, v48);
    swift_bridgeObjectRelease_n();
    uint64_t v70 = v95;
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
    uint64_t v71 = type metadata accessor for DocumentCodeBlockElement();
    uint64_t v72 = v100;
    v100[3] = v71;
    char v73 = &qword_269A4FA70;
    unint64_t v74 = type metadata accessor for DocumentCodeBlockElement;
LABEL_25:
    v72[4] = sub_24FB2C47C(v73, (void (*)(uint64_t))v74);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v72);
    uint64_t v81 = (char *)boxed_opaque_existential_1 + *(int *)(v71 + 20);
    uint64_t v82 = sub_24FB46D18();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v81, v101, v82);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v96 + 32))(boxed_opaque_existential_1, v70, v97);
  }
  sub_24FAD5794((uint64_t)v21, &qword_269A4FC50);
  uint64_t v34 = v100;
  uint64_t v33 = v101;
LABEL_22:
  uint64_t v75 = type metadata accessor for DocumentParagraphElement();
  v34[3] = v75;
  v34[4] = sub_24FB2C47C(&qword_269A4FFC8, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
  unint64_t v76 = __swift_allocate_boxed_opaque_existential_1(v34);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t v77 = (char *)v76 + *(int *)(v75 + 20);
  uint64_t v78 = sub_24FB46D18();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v77, v33, v78);
}

void *sub_24FB2AA90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FB2AAA8(a1, a2, a3, a4, &qword_269A4F400);
}

void *sub_24FB2AA9C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FB2AAA8(a1, a2, a3, a4, &qword_269A4F3A8);
}

void *sub_24FB2AAA8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      void v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24FB2B278(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_24FB2ABB4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FAD4C74(a1, a2, a3, a4, &qword_269A4FF90, qword_269A4F488);
}

uint64_t sub_24FB2ABC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24FB2AC24(a1, a2, a3, a4, &qword_269A4FD28, MEMORY[0x263F067B0], MEMORY[0x263F067B0]);
}

void *sub_24FB2ABEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24FB2AEA4(a1, a2, a3, a4, &qword_269A4FF98, &qword_269A4FFA0);
}

uint64_t sub_24FB2AC00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24FB2AC24(a1, a2, a3, a4, &qword_269A4FFD0, (uint64_t (*)(void))type metadata accessor for ListImageItem, (uint64_t (*)(void))type metadata accessor for ListImageItem);
}

uint64_t sub_24FB2AC24(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24FB48508();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24FB2C320(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_24FB2AEA4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      _OWORD v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24FB2B364(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24FB2AFC0(void *a1)
{
  return sub_24FB2AEA4(0, a1[2], 0, a1, &qword_269A4FF98, &qword_269A4FFA0);
}

void *sub_24FB2AFF8(void *a1)
{
  return sub_24FAD4C74(0, a1[2], 0, a1, &qword_269A4FF78, (uint64_t *)&unk_269A4F598);
}

size_t sub_24FB2B030(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FFB0);
  uint64_t v3 = *(void *)(sub_24FB46DB8() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_24FB2B15C((uint64_t)&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24FB2B15C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v13 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v13 = *(void *)(a4 + 16);
LABEL_13:
    uint64_t v6 = a3;
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (v6)
    {
      uint64_t v8 = a2;
      uint64_t v9 = 0;
      while (v6 + v9 <= *(void *)(a4 + 16))
      {
        uint64_t v10 = sub_24FB46DB8();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v12 = *(void *)(v11 + 72);
        size_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v8, a4+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ v12 * (v6 + v9 - 1), v10);
        if (a3 + v9 == 1)
        {
          uint64_t v13 = v6 + v9 - 1;
          goto LABEL_13;
        }
        v8 += v12;
        --v9;
        if (!(v6 + v9)) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_9:
    uint64_t v13 = 0;
LABEL_14:
    *unint64_t v5 = a4;
    v5[1] = v13;
    return v6;
  }
LABEL_16:
  __break(1u);
  return result;
}

char *sub_24FB2B278(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  size_t result = (char *)sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2B364(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

void sub_24FB2B46C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46DF8();
  uint64_t v118 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v123 = (char *)&v107 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v107 - v10;
  MEMORY[0x270FA5388](v12);
  int64_t v14 = (char *)&v107 - v13;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v107 - v16;
  MEMORY[0x270FA5388](v18);
  long long v130 = (char *)&v107 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v112 = (char *)&v107 - v21;
  uint64_t v22 = sub_24FB46DB8();
  uint64_t v138 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v127 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  char v136 = (char *)&v107 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v131 = (char *)&v107 - v27;
  MEMORY[0x270FA5388](v28);
  char v137 = (char *)&v107 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v128 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v107 - v33;
  uint64_t v135 = sub_24FB46E08();
  uint64_t v35 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v124 = (char *)&v107 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  char v132 = (char *)&v107 - v38;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v120 = v4;
  unint64_t v39 = *(void *)(a2 + 16);
  if (v39 <= a1)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return;
  }
  uint64_t v129 = v14;
  uint64_t v133 = v17;
  uint64_t v134 = v22;
  uint64_t v121 = v6;
  uint64_t v122 = v11;
  sub_24FB46C78();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v107 - 2) = v41;
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v43 = v135;
  if (v42(v34, 1, v135) == 1)
  {
    sub_24FAD5794((uint64_t)v34, &qword_269A4F698);
    return;
  }
  uint64_t v119 = v35;
  uint64_t v126 = *(char **)(v35 + 32);
  ((void (*)(char *, char *, uint64_t))v126)(v132, v34, v43);
  if (a1 - 1 >= v39) {
    goto LABEL_54;
  }
  uint64_t v44 = swift_getKeyPath();
  MEMORY[0x270FA5388](v44);
  *(&v107 - 2) = v45;
  swift_getKeyPath();
  uint64_t v46 = (uint64_t)v128;
  sub_24FB46C58();
  uint64_t v47 = v135;
  swift_release();
  if (v42((char *)v46, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v119 + 8))(v132, v47);
    sub_24FAD5794(v46, &qword_269A4F698);
    return;
  }
  ((void (*)(char *, uint64_t, uint64_t))v126)(v124, v46, v47);
  uint64_t v48 = sub_24FB46DC8();
  size_t v49 = sub_24FB2B030(v48);
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_24FB46DC8();
  size_t v108 = sub_24FB2B030(v50);
  swift_bridgeObjectRelease();
  uint64_t v51 = *(char **)(sub_24FB46DC8() + 16);
  swift_bridgeObjectRelease();
  char v52 = *(char **)(sub_24FB46DC8() + 16);
  swift_bridgeObjectRelease();
  uint64_t v53 = v119;
  uint64_t v126 = v52;
  if (v51)
  {
    uint64_t v54 = v134;
    uint64_t v128 = v51;
    size_t v125 = v49;
    uint64_t v55 = 0;
    if (v52)
    {
      unint64_t v56 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      size_t v117 = v49 + v56;
      size_t v57 = v108;
      size_t v58 = v108 + v56;
      uint64_t v59 = (void (**)(char *, uint64_t))(v138 + 8);
      uint64_t v60 = v51 - 1;
      uint64_t v61 = v137;
      while (1)
      {
        if ((unint64_t)v55 >= *(void *)(v125 + 16))
        {
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v62 = *(void *)(v138 + 72) * (void)v55;
        uint64_t v63 = *(void (**)(char *, size_t, uint64_t))(v138 + 16);
        v63(v61, v117 + v62, v54);
        if ((unint64_t)v55 >= *(void *)(v57 + 16)) {
          goto LABEL_50;
        }
        unint64_t v64 = v131;
        v63(v131, v58 + v62, v54);
        sub_24FB2C47C(&qword_269A4FFA8, MEMORY[0x263F068D8]);
        char v65 = sub_24FB48018();
        uint64_t v66 = *v59;
        uint64_t v67 = v64;
        uint64_t v61 = v137;
        (*v59)(v67, v54);
        v66(v61, v54);
        if ((v65 & 1) == 0) {
          goto LABEL_17;
        }
        if (v60 == v55) {
          break;
        }
        if (v126 == ++v55)
        {
          uint64_t v55 = v126;
LABEL_17:
          uint64_t v51 = v128;
          size_t v49 = v125;
          goto LABEL_18;
        }
      }
      swift_release();
      uint64_t v69 = v120;
      uint64_t v87 = v128;
LABEL_30:
      char v52 = v126;
      uint64_t v47 = v135;
      uint64_t v53 = v119;
      if ((uint64_t)v87 >= (uint64_t)v126) {
        goto LABEL_34;
      }
      goto LABEL_31;
    }
LABEL_18:
    unint64_t v68 = *(void *)(v49 + 16);
    uint64_t v69 = v120;
    uint64_t v70 = v112;
    if (v68 < (unint64_t)v55 || v68 < (unint64_t)v51) {
      goto LABEL_56;
    }
    size_t v117 = v125 + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    uint64_t v116 = v138 + 16;
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v118 + 16);
    char v114 = (uint64_t (**)(char *, uint64_t))(v118 + 88);
    int v113 = *MEMORY[0x263F06920];
    uint64_t v72 = (void (**)(void, void))(v118 + 8);
    unsigned int v111 = *MEMORY[0x263F068F0];
    char v73 = (void (**)(char *, void, uint64_t))(v118 + 104);
    unsigned int v110 = *MEMORY[0x263F06900];
    long long v115 = (void (**)(char *, uint64_t))(v138 + 8);
    swift_retain();
    unint64_t v74 = v55;
    unint64_t v109 = v55;
    while (v74 < v51)
    {
      uint64_t v75 = v73;
      (*(void (**)(char *, size_t, uint64_t))(v138 + 16))(v136, v117 + *(void *)(v138 + 72) * (void)v74, v54);
      sub_24FB46D98();
      unint64_t v76 = *v71;
      uint64_t v77 = v130;
      (*v71)(v130, v70, v69);
      int v78 = (*v114)(v77, v69);
      uint64_t v79 = (void (*)(char *, uint64_t))*v72;
      if (v78 == v113) {
        goto LABEL_44;
      }
      uint64_t v131 = v74;
      v79(v77, v69);
      uint64_t v80 = v69;
      uint64_t v81 = v72;
      char v73 = v75;
      uint64_t v82 = *v75;
      uint64_t v83 = v133;
      (*v75)(v133, v111, v80);
      LODWORD(v137) = MEMORY[0x25336D160](v70, v83);
      v79(v83, v80);
      uint64_t v84 = v70;
      uint64_t v85 = v129;
      v76(v129, v84, v80);
      if (v137)
      {
        v79(v85, v80);
        uint64_t v69 = v80;
        uint64_t v70 = v84;
LABEL_44:
        v79(v70, v69);
        (*v115)(v136, v134);
LABEL_45:
        swift_release();
LABEL_48:
        swift_release_n();
        uint64_t v105 = *(void (**)(char *, uint64_t))(v119 + 8);
        uint64_t v106 = v135;
        v105(v124, v135);
        v105(v132, v106);
        return;
      }
      v82(v83, v110, v80);
      char v86 = MEMORY[0x25336D160](v85, v83);
      v79(v83, v80);
      v79(v85, v80);
      v79(v84, v80);
      uint64_t v54 = v134;
      (*v115)(v136, v134);
      if (v86) {
        goto LABEL_45;
      }
      uint64_t v69 = v80;
      uint64_t v70 = v84;
      uint64_t v72 = v81;
      unint64_t v74 = v131 + 1;
      uint64_t v51 = v128;
      uint64_t v87 = v109;
      if (v128 == v131 + 1)
      {
        swift_release_n();
        goto LABEL_30;
      }
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  swift_release();
  uint64_t v54 = v134;
  if (!v52) {
    goto LABEL_34;
  }
  uint64_t v87 = 0;
  uint64_t v69 = v120;
LABEL_31:
  unint64_t v88 = *(void *)(v108 + 16);
  if (v88 < (unint64_t)v87 || v88 < (unint64_t)v52) {
    goto LABEL_57;
  }
  if (v87 != v52)
  {
    char v136 = (char *)(v108
                  + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80)));
    uint64_t v90 = (void (**)(char *, char *, uint64_t))(v118 + 16);
    long long v130 = (char *)(v118 + 88);
    uint64_t v131 = (char *)(v138 + 16);
    LODWORD(v129) = *MEMORY[0x263F06920];
    unint64_t v91 = (void (**)(void, void))(v118 + 8);
    LODWORD(v120) = *MEMORY[0x263F068F0];
    uint64_t v92 = (void (**)(char *, void, uint64_t))(v118 + 104);
    LODWORD(v118) = *MEMORY[0x263F06900];
    size_t v125 = v138 + 8;
    swift_retain();
    while (v87 < v52)
    {
      uint64_t v93 = *(void *)(v138 + 72);
      uint64_t v128 = v87;
      (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v127, &v136[v93 * (void)v87], v54);
      uint64_t v94 = v122;
      sub_24FB46D98();
      uint64_t v95 = *v90;
      uint64_t v96 = v123;
      (*v90)(v123, v94, v69);
      int v97 = (*(uint64_t (**)(char *, uint64_t))v130)(v96, v69);
      uint64_t v98 = (void (*)(char *, uint64_t))*v91;
      if (v97 == v129) {
        goto LABEL_47;
      }
      v98(v96, v69);
      uint64_t v99 = v91;
      uint64_t v100 = v69;
      uint64_t v101 = *v92;
      uint64_t v102 = v133;
      (*v92)(v133, v120, v100);
      LODWORD(v137) = MEMORY[0x25336D160](v94, v102);
      v98(v102, v100);
      unsigned int v103 = v121;
      v95(v121, v94, v100);
      if (v137)
      {
        v98(v103, v100);
        uint64_t v54 = v134;
        uint64_t v69 = v100;
LABEL_47:
        v98(v94, v69);
        (*(void (**)(char *, uint64_t))v125)(v127, v54);
        goto LABEL_48;
      }
      v101(v102, v118, v100);
      char v104 = MEMORY[0x25336D160](v103, v102);
      v98(v102, v100);
      v98(v103, v100);
      v98(v94, v100);
      uint64_t v54 = v134;
      (*(void (**)(char *, uint64_t))v125)(v127, v134);
      if (v104) {
        goto LABEL_48;
      }
      uint64_t v69 = v100;
      uint64_t v87 = v128 + 1;
      char v52 = v126;
      unint64_t v91 = v99;
      if (v126 == v128 + 1)
      {
        swift_release_n();
        uint64_t v47 = v135;
        uint64_t v53 = v119;
        goto LABEL_35;
      }
    }
    goto LABEL_55;
  }
LABEL_34:
  swift_release();
LABEL_35:
  uint64_t v89 = *(void (**)(char *, uint64_t))(v53 + 8);
  v89(v124, v47);
  v89(v132, v47);
}

uint64_t sub_24FB2C2C8()
{
  return sub_24FB2C47C((unint64_t *)&unk_269A4FF80, (void (*)(uint64_t))type metadata accessor for DocumentOutlineElement);
}

ValueMetadata *type metadata accessor for DocumentElementOutlineParser()
{
  return &type metadata for DocumentElementOutlineParser;
}

uint64_t sub_24FB2C320(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2C47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB2C4C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24FB46C88();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v18[-v7];
  sub_24FB46C98();
  sub_24FB2EDE8(&qword_269A50050, MEMORY[0x263F067C8]);
  sub_24FB48288();
  sub_24FB482A8();
  sub_24FB2EDE8(&qword_269A50058, MEMORY[0x263F067B8]);
  char v9 = sub_24FB48018();
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  if (v9)
  {
    v10(v8, v2);
    uint64_t v11 = sub_24FB46C78();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    unint64_t v13 = (void (*)(unsigned char *, void))sub_24FB482C8();
    uint64_t v15 = v14;
    uint64_t v16 = sub_24FB46C78();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, v15, v16);
    v13(v18, 0);
    v10(v8, v2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
  }
}

uint64_t DocumentOutlineElement.init(id:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for DocumentOutlineElement();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for DocumentOutlineElement()
{
  uint64_t result = qword_269A4FFF8;
  if (!qword_269A4FFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentOutlineElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentOutlineElement.items.getter()
{
  type metadata accessor for DocumentOutlineElement();
  return swift_bridgeObjectRetain();
}

uint64_t DocumentOutlineElement.makeView(textWrapOffset:)()
{
  uint64_t v1 = type metadata accessor for DocumentOutlineView.Content();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for DocumentOutlineElement() + 20)) + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24FB2DDD0(0, v5, 0);
    uint64_t v7 = 0;
    uint64_t v6 = v13;
    do
    {
      uint64_t v8 = (void *)swift_bridgeObjectRetain();
      sub_24FB2CAA8(v8, (uint64_t)v4);
      swift_bridgeObjectRelease();
      uint64_t v13 = v6;
      unint64_t v10 = *(void *)(v6 + 16);
      unint64_t v9 = *(void *)(v6 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_24FB2DDD0(v9 > 1, v10 + 1, 1);
        uint64_t v6 = v13;
      }
      ++v7;
      *(void *)(v6 + 16) = v10 + 1;
      sub_24FB2DE0C((uint64_t)v4, v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v10);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_24FB2CAA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a2;
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v127 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v151 = sub_24FB46DF8();
  uint64_t v6 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v123 = (uint64_t *)&v105[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v122 = (uint64_t *)&v105[-v9];
  MEMORY[0x270FA5388](v10);
  uint64_t v149 = (uint64_t *)&v105[-v11];
  uint64_t v148 = sub_24FB46DB8();
  uint64_t v129 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148 - 8);
  uint64_t v118 = &v105[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v126 = &v105[-v14];
  MEMORY[0x270FA5388](v15);
  uint64_t v150 = &v105[-v16];
  uint64_t v17 = sub_24FB46C98();
  uint64_t v147 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v146 = &v105[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v105[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = &v105[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v131 = sub_24FB46E08();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v121 = &v105[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F940);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = &v105[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = sub_24FB46D18();
  uint64_t v30 = *(void *)(v29 - 8);
  __n128 v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = &v105[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = a1[2];
  uint64_t v128 = v4;
  char v132 = a1;
  uint64_t v134 = v36;
  uint64_t v133 = v30;
  uint64_t v144 = v6;
  if (!v35)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v30 + 56))(v28, 1, 1, v31, v32);
    goto LABEL_5;
  }
  uint64_t v37 = v17;
  uint64_t v38 = v21;
  unint64_t v39 = v24;
  uint64_t v40 = v3;
  uint64_t v41 = a1[7];
  uint64_t v42 = a1[8];
  uint64_t v124 = v34;
  uint64_t v43 = v31;
  __swift_project_boxed_opaque_existential_1(a1 + 4, v41);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 24);
  uint64_t v45 = v42;
  uint64_t v3 = v40;
  uint64_t v24 = v39;
  uint64_t v21 = v38;
  uint64_t v17 = v37;
  v44(v41, v45);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v43);
  uint64_t v46 = v43;
  uint64_t v34 = v124;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v46) == 1)
  {
LABEL_5:
    sub_24FB46D08();
    sub_24FAD5794((uint64_t)v28, &qword_269A4F940);
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v133 + 32))(v34, v28, v134);
LABEL_6:
  uint64_t v48 = v146;
  uint64_t v47 = v147;
  sub_24FB46CB8();
  sub_24FB2C4C4((uint64_t)v21);
  (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v48, v17);
  uint64_t v49 = sub_24FB46C78();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48))(v21, 1, v49) == 1)
  {
    sub_24FAD5794((uint64_t)v21, &qword_269A4FC50);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v24, 1, 1, v131);
    uint64_t v51 = (uint64_t)v132;
    uint64_t v52 = v135;
LABEL_9:
    sub_24FAD5794((uint64_t)v24, &qword_269A4F698);
    char v58 = 0;
    uint64_t v59 = 1;
    uint64_t v60 = 1;
LABEL_44:
    uint64_t v102 = v127;
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    uint64_t v103 = sub_24FB2DC14(v51);
    type metadata accessor for DocumentViewModel();
    uint64_t v104 = swift_allocObject();
    swift_beginAccess();
    uint64_t v152 = v103;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
    sub_24FB47108();
    swift_endAccess();
    (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v34, v134);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v128 + 32))(v52, v102, v3);
    uint64_t result = type metadata accessor for DocumentOutlineView.Content();
    *(void *)(v52 + *(int *)(result + 20)) = v104;
    *(void *)(v52 + *(int *)(result + 24)) = v60;
    *(void *)(v52 + *(int *)(result + 28)) = v59;
    *(unsigned char *)(v52 + *(int *)(result + 32)) = v58 & 1;
    return result;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(void *)&v105[-16] = v54;
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v21, v49);
  uint64_t v55 = v130;
  uint64_t v56 = v131;
  int v57 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v130 + 48))(v24, 1, v131);
  uint64_t v51 = (uint64_t)v132;
  uint64_t v52 = v135;
  if (v57 == 1) {
    goto LABEL_9;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 32))(v121, v24, v56);
  uint64_t result = sub_24FB46DC8();
  uint64_t v147 = *(void *)(result + 16);
  uint64_t v108 = v3;
  uint64_t v124 = v34;
  if (!v147)
  {
    int v112 = 0;
    uint64_t v125 = 0;
    uint64_t v111 = 1;
LABEL_43:
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v121, v131);
    uint64_t v3 = v108;
    uint64_t v51 = (uint64_t)v132;
    uint64_t v34 = v124;
    char v58 = v112;
    uint64_t v59 = v125;
    uint64_t v60 = v111;
    goto LABEL_44;
  }
  int v112 = 0;
  int v114 = 0;
  LODWORD(v142) = 0;
  uint64_t v125 = 0;
  unint64_t v62 = 0;
  unint64_t v117 = result + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
  uint64_t v116 = v129 + 16;
  unint64_t v119 = v144 + 88;
  int v145 = *MEMORY[0x263F06920];
  uint64_t v120 = v129 + 8;
  uint64_t v115 = v144 + 96;
  int v113 = (void (**)(uint64_t *, uint64_t))(v144 + 8);
  unsigned int v110 = *MEMORY[0x263F068F0];
  unint64_t v109 = (void (**)(uint64_t *, void, uint64_t))(v144 + 104);
  unsigned int v106 = *MEMORY[0x263F06900];
  uint64_t v111 = 1;
  uint64_t v144 = result;
  while (1)
  {
    unint64_t v64 = *(void *)(result + 16);
    unint64_t v136 = v62;
    if (v62 >= v64) {
      break;
    }
    unint64_t v65 = v136;
    unint64_t v66 = v136 + 1;
    uint64_t v67 = *(void *)(v129 + 72);
    unint64_t v68 = *(unsigned char **)(v129 + 16);
    unint64_t v69 = v116 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v70 = v150;
    uint64_t v71 = v148;
    ((void (*)(unsigned char *, unint64_t, uint64_t))v68)(v150, v117 + v67 * v136, v148);
    uint64_t v72 = v149;
    sub_24FB46D98();
    char v73 = *(void (**)(uint64_t *, uint64_t))v119;
    uint64_t v74 = v151;
    int v75 = (*(uint64_t (**)(uint64_t *, uint64_t))v119)(v72, v151);
    if (v75 == v145)
    {
      uint64_t v143 = v73;
      uint64_t v146 = v68;
      uint64_t v76 = v65 - v125 + 0x7FFFFFFFFFFFFFFFLL;
      unint64_t v139 = *(void (**)(unsigned char *, uint64_t))v120;
      v139(v70, v71);
      uint64_t v77 = *(uint64_t (**)(uint64_t *, uint64_t))v115;
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))v115)(v72, v74);
      uint64_t v140 = v76;
      if (v65 == v76) {
        goto LABEL_47;
      }
      uint64_t v141 = (void (*)(uint64_t *, void, uint64_t))(v119 & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000);
      uint64_t v138 = v120 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v137 = v115 & 0xFFFFFFFFFFFFLL | 0x41D000000000000;
      uint64_t v78 = v125 + 1;
      if (v142)
      {
        uint64_t v142 = v67;
        unint64_t v79 = v66;
LABEL_27:
        uint64_t result = v144;
        unint64_t v87 = v69;
        if (v79 == v147)
        {
LABEL_41:
          uint64_t v125 = v147 + v125 - v136;
          uint64_t v52 = v135;
          goto LABEL_43;
        }
        unint64_t v88 = v117 + v142 * v79;
        while (v79 < *(void *)(result + 16))
        {
          unint64_t v89 = v79 + 1;
          uint64_t v70 = v150;
          uint64_t v71 = v148;
          unint64_t v90 = v87;
          ((void (*)(unsigned char *, unint64_t, uint64_t))v146)(v150, v88, v148);
          uint64_t v72 = v149;
          sub_24FB46D98();
          uint64_t v74 = v151;
          int v91 = ((uint64_t (*)(uint64_t *, uint64_t))v143)(v72, v151);
          if (v91 != v145)
          {
            LODWORD(v142) = 1;
            unint64_t v136 = v79 + 1;
            uint64_t v125 = v78;
            uint64_t v80 = v123;
            uint64_t v81 = v122;
            uint64_t v82 = v126;
            uint64_t v83 = v113;
            unint64_t v68 = v146;
            goto LABEL_35;
          }
          v139(v70, v71);
          uint64_t result = v77(v72, v74);
          if (v140 == v79) {
            goto LABEL_47;
          }
          ++v78;
          v88 += v142;
          ++v79;
          uint64_t result = v144;
          unint64_t v87 = v90;
          if (v147 == v89) {
            goto LABEL_41;
          }
        }
        break;
      }
      uint64_t v111 = *v149;
      if (v66 == v147)
      {
        ++v125;
        uint64_t v52 = v135;
        goto LABEL_43;
      }
      uint64_t v107 = v125 + 1;
      if (v66 >= *(void *)(v144 + 16)) {
        break;
      }
      uint64_t v84 = *(void *)(v129 + 72);
      unint64_t v68 = *(unsigned char **)(v129 + 16);
      uint64_t v70 = v150;
      uint64_t v71 = v148;
      ((void (*)(unsigned char *, unint64_t, uint64_t))v68)(v150, v117 + v84 * v66, v148);
      uint64_t v72 = v149;
      sub_24FB46D98();
      uint64_t v85 = *(void (**)(uint64_t *, uint64_t))v119;
      uint64_t v74 = v151;
      int v86 = (*(uint64_t (**)(uint64_t *, uint64_t))v119)(v72, v151);
      if (v86 == v145)
      {
        uint64_t v143 = v85;
        uint64_t v146 = v68;
        unint64_t v139 = *(void (**)(unsigned char *, uint64_t))v120;
        v139(v70, v71);
        uint64_t v77 = *(uint64_t (**)(uint64_t *, uint64_t))v115;
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))v115)(v72, v74);
        if (v66 == v140) {
          goto LABEL_47;
        }
        uint64_t v142 = v84;
        unint64_t v79 = v136 + 2;
        uint64_t v78 = v125 + 2;
        uint64_t v125 = v107;
        unint64_t v136 = v66;
        goto LABEL_27;
      }
      v136 += 2;
      LODWORD(v142) = 1;
      uint64_t v125 = v107;
    }
    else
    {
      unint64_t v136 = v66;
    }
    uint64_t v80 = v123;
    uint64_t v81 = v122;
    uint64_t v82 = v126;
    uint64_t v83 = v113;
LABEL_35:
    uint64_t v92 = v72;
    uint64_t v93 = *v83;
    (*v83)(v92, v74);
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v68)(v82, v70, v71);
    if (v114)
    {
      uint64_t v63 = *(void (**)(unsigned char *, uint64_t))v120;
      (*(void (**)(unsigned char *, uint64_t))v120)(v82, v71);
      uint64_t v52 = v135;
    }
    else
    {
      sub_24FB46D98();
      uint64_t v146 = v68;
      uint64_t v94 = v151;
      uint64_t v141 = *v109;
      v141(v80, v110, v151);
      char v95 = MEMORY[0x25336D160](v81, v80);
      v93(v80, v94);
      uint64_t v143 = v93;
      v93(v81, v94);
      uint64_t v96 = v118;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v146)(v118, v82, v71);
      int v97 = (void (**)(unsigned char *, uint64_t))v120;
      if (v95)
      {
        uint64_t v63 = *(void (**)(unsigned char *, uint64_t))v120;
        (*(void (**)(unsigned char *, uint64_t))v120)(v96, v71);
        v63(v126, v71);
        uint64_t v52 = v135;
        uint64_t v70 = v150;
LABEL_39:
        uint64_t v99 = v94;
        sub_24FB46D98();
        v141(v80, v110, v94);
        int v112 = MEMORY[0x25336D160](v81, v80);
        uint64_t v100 = v94;
        uint64_t v101 = v143;
        v143(v80, v100);
        v101(v81, v99);
        v63(v70, v71);
        int v114 = 1;
        goto LABEL_14;
      }
      sub_24FB46D98();
      uint64_t v94 = v151;
      v141(v80, v106, v151);
      LODWORD(v146) = MEMORY[0x25336D160](v81, v80);
      uint64_t v98 = v143;
      v143(v80, v94);
      v98(v81, v94);
      uint64_t v63 = *v97;
      (*v97)(v96, v71);
      v63(v126, v71);
      uint64_t v52 = v135;
      uint64_t v70 = v150;
      if (v146) {
        goto LABEL_39;
      }
    }
    v63(v70, v71);
LABEL_14:
    uint64_t result = v144;
    unint64_t v62 = v136;
    if (v136 == v147) {
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

double DocumentOutlineElement.makeView()()
{
  return 8.0;
}

uint64_t DocumentOutlineElement.supportTextWrapTop.getter()
{
  return 1;
}

uint64_t sub_24FB2DC14(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_24FB2E5C8(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v10;
    do
    {
      sub_24FAF8C3C(v4, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A4F598);
      __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24FB2E5C8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_24FB2E5C8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_24FAF8CA0(&v9, v2 + 40 * v6 + 32);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double sub_24FB2DD50@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = DocumentOutlineElement.makeView(textWrapOffset:)();
  double result = 8.0;
  *(_OWORD *)a1 = xmmword_24FB4BA60;
  *(void *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 24) = v4 & 1;
  return result;
}

double sub_24FB2DD94@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = DocumentOutlineElement.makeView(textWrapOffset:)();
  double result = 8.0;
  *(_OWORD *)a1 = xmmword_24FB4BA60;
  *(void *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 24) = v4 & 1;
  return result;
}

uint64_t sub_24FB2DDD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E894(a1, a2, a3, (void *)*v3, &qword_269A50060, (uint64_t (*)(void))type metadata accessor for DocumentOutlineView.Content);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2DE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentOutlineView.Content();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_24FB2DE70()
{
  return &protocol witness table for DocumentOutlineView;
}

unint64_t sub_24FB2DE80()
{
  unint64_t result = qword_269A4FFD8;
  if (!qword_269A4FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4FFD8);
  }
  return result;
}

uint64_t sub_24FB2DED4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB2EDE8(&qword_269A4FFE0, (void (*)(uint64_t))type metadata accessor for DocumentOutlineElement);
  uint64_t result = sub_24FB2EDE8((unint64_t *)&unk_269A4FFE8, (void (*)(uint64_t))type metadata accessor for DocumentOutlineElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB2DF58()
{
  return sub_24FB2EDE8(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentOutlineElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DocumentOutlineElement(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB2E304);
}

uint64_t sub_24FB2E304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentOutlineElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB2E3D8);
}

uint64_t sub_24FB2E3D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB2E494()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB2E52C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E6EC(a1, a2, a3, (void *)*v3, &qword_269A50028, &qword_269A50030);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E55C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E6EC(a1, a2, a3, (void *)*v3, &qword_269A50018, &qword_269A50020);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E58C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E894(a1, a2, a3, (void *)*v3, &qword_269A50068, MEMORY[0x263F06970]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E5C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E6EC(a1, a2, a3, (void *)*v3, &qword_269A4FF90, qword_269A4F488);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E5F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E894(a1, a2, a3, (void *)*v3, &qword_269A50038, type metadata accessor for DocumentTableView.TableDatum);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E634(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E894(a1, a2, a3, (void *)*v3, &qword_269A50048, type metadata accessor for DocumentTableView.RowHeader);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E670(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2E894(a1, a2, a3, (void *)*v3, &qword_269A4FD28, MEMORY[0x263F067B0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24FB2E6AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2EADC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24FB2E6CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24FB2EC48(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24FB2E6EC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    _OWORD v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2E894(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2EADC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A50040);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2EC48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A50010);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB2EDB4()
{
  return 8;
}

uint64_t sub_24FB2EDC0()
{
  return swift_release();
}

uint64_t sub_24FB2EDC8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB2EDDC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB2EDE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB2EE34()
{
  unint64_t result = qword_269A50070;
  if (!qword_269A50070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50070);
  }
  return result;
}

uint64_t _s16MarkdownDocument0B15OutlineItemViewV26scaledSingleDigitIconWidth33_18FDE31A6DEEA1A58316F26DC41691EFLL12CoreGraphics7CGFloatVvpfP_0()
{
  return sub_24FB47208();
}

uint64_t sub_24FB2EEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v12 = a4 & 1;
  sub_24FB2EE34();
  sub_24FB47208();
  uint64_t v13 = (int *)type metadata accessor for DocumentOutlineItemView();
  sub_24FB47208();
  sub_24FB47208();
  uint64_t result = sub_24FB47208();
  *(void *)(a6 + v13[8]) = 0x401C000000000000;
  *(void *)(a6 + v13[9]) = a1;
  *(void *)(a6 + v13[10]) = a2;
  *(void *)(a6 + v13[12]) = a3;
  *(unsigned char *)(a6 + v13[13]) = v12;
  if (a4)
  {
    swift_retain();
    sub_24FB48668();
    uint64_t v15 = sub_24FB480D8();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v15 = 1;
  }
  *(void *)(a6 + v13[11]) = v15;
  *(unsigned char *)(a6 + v13[14]) = a5 & 1;
  return result;
}

uint64_t DocumentOutlineItemView.body.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269A4F388 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_269A58F80;
  uint64_t v4 = *(void *)(v1 + *(int *)(type metadata accessor for DocumentOutlineItemView() + 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50078);
  return sub_24FB2F0F4(v1, a1 + *(int *)(v5 + 44));
}

uint64_t sub_24FB2F0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v163 = a2;
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500B8);
  MEMORY[0x270FA5388](v162);
  uint64_t v158 = (void *)((char *)v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500C0);
  MEMORY[0x270FA5388](v142);
  uint64_t v144 = (uint64_t)v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500C8);
  MEMORY[0x270FA5388](v143);
  uint64_t v148 = (uint64_t)v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500D0);
  MEMORY[0x270FA5388](v146);
  uint64_t v147 = (uint64_t)v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500D8);
  MEMORY[0x270FA5388](v145);
  uint64_t v150 = (uint64_t)v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500E0);
  MEMORY[0x270FA5388](v8);
  uint64_t v149 = (uint64_t)v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v151 = (uint64_t)v130 - v11;
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500E8);
  MEMORY[0x270FA5388](v157);
  uint64_t v13 = (char *)v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500F0);
  MEMORY[0x270FA5388](v153);
  uint64_t v154 = (void *)((char *)v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_24FB47CB8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A500F8);
  MEMORY[0x270FA5388](v152);
  unint64_t v20 = (char *)v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v130 - v22;
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50100);
  MEMORY[0x270FA5388](v134);
  uint64_t v138 = (uint64_t)v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50108);
  MEMORY[0x270FA5388](v136);
  uint64_t v137 = (uint64_t)v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50110);
  MEMORY[0x270FA5388](v135);
  uint64_t v140 = (uint64_t)v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50118);
  MEMORY[0x270FA5388](v155);
  uint64_t v139 = (uint64_t)v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v141 = (uint64_t)v130 - v29;
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50120);
  MEMORY[0x270FA5388](v159);
  char v156 = (char *)v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50128);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v161 = (uint64_t)v130 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v160 = (char *)v130 - v34;
  uint64_t v35 = type metadata accessor for DocumentOutlineItemView();
  uint64_t v36 = v35;
  char v37 = *(unsigned char *)(a1 + *(int *)(v35 + 52));
  uint64_t v164 = a1;
  if (v37)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
    sub_24FB47218();
    *(void *)&long long v178 = *(void *)(a1 + *(int *)(v36 + 36));
    *(void *)&long long v178 = sub_24FB48668();
    *((void *)&v178 + 1) = v72;
    sub_24FB285EC();
    uint64_t v73 = sub_24FB47A18();
    char v156 = v74;
    uint64_t v157 = v73;
    char v76 = v75;
    uint64_t v155 = v77;
    char v78 = sub_24FB47838();
    uint64_t v79 = *(int *)(v36 + 48);
    if (*(uint64_t *)(a1 + v79) >= 2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
      sub_24FB47218();
    }
    sub_24FB47178();
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    int v88 = sub_24FB47738();
    if (qword_269A4F350 != -1) {
      swift_once();
    }
    uint64_t v59 = v36;
    if (*(unsigned char *)(qword_269A58F38 + 16) == 1) {
      sub_24FB478A8();
    }
    else {
      sub_24FB47918();
    }
    uint64_t v89 = sub_24FB47898();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    if (*(uint64_t *)(v164 + v79) >= 2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
      sub_24FB47218();
    }
    sub_24FB47E58();
    sub_24FB47238();
    uint64_t v91 = v189;
    char v92 = BYTE8(v189);
    uint64_t v93 = v190;
    LOBYTE(v178) = v76 & 1;
    LOBYTE(v176[0]) = 0;
    LOBYTE(v165) = BYTE8(v189);
    LOBYTE(v192) = BYTE8(v190);
    uint64_t v94 = v158;
    uint64_t *v158 = v157;
    v94[1] = (uint64_t)v156;
    *((unsigned char *)v94 + 16) = v76 & 1;
    v94[3] = v155;
    *((unsigned char *)v94 + 32) = v78;
    v94[5] = v81;
    v94[6] = v83;
    v94[7] = v85;
    v94[8] = v87;
    *((unsigned char *)v94 + 72) = 0;
    *((_DWORD *)v94 + 19) = v88;
    v94[10] = KeyPath;
    v94[11] = v89;
    *((_WORD *)v94 + 48) = 256;
    v94[13] = v91;
    *((unsigned char *)v94 + 112) = v92;
    v94[15] = v93;
    *((unsigned char *)v94 + 128) = v192;
    *(_OWORD *)(v94 + 17) = v191;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A50130);
    sub_24FB3103C();
    sub_24FB31148(&qword_269A50198, &qword_269A50130, (void (*)(void))sub_24FB314F0);
    uint64_t v48 = (uint64_t)v160;
    sub_24FB476C8();
    uint64_t v60 = v164;
  }
  else
  {
    uint64_t v131 = v13;
    uint64_t v132 = v8;
    uint64_t v38 = *(void *)(a1 + *(int *)(v35 + 48));
    v130[1] = v16 + 16;
    uint64_t v133 = v35;
    if (v38 == 1)
    {
      sub_24FB47C78();
      uint64_t v39 = sub_24FB47A28();
      uint64_t v41 = v40;
      uint64_t v151 = v42;
      char v44 = v43 & 1;
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F1B538], v15);
      uint64_t v45 = swift_getKeyPath();
      uint64_t v46 = v154;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))((char *)v154 + *(int *)(v153 + 28), v18, v15);
      *uint64_t v46 = v45;
      sub_24FAD5834((uint64_t)v46, (uint64_t)&v23[*(int *)(v152 + 36)], &qword_269A500F0);
      *(void *)uint64_t v23 = v39;
      *((void *)v23 + 1) = v41;
      v23[16] = v44;
      *((void *)v23 + 3) = v151;
      sub_24FAE9618(v39, v41, v44);
      swift_bridgeObjectRetain();
      sub_24FAD5794((uint64_t)v46, &qword_269A500F0);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_24FADAA34(v39, v41, v44);
      swift_bridgeObjectRelease();
      LODWORD(v45) = sub_24FB47738();
      uint64_t v47 = v138;
      sub_24FAD5834((uint64_t)v23, v138, &qword_269A500F8);
      *(_DWORD *)(v47 + *(int *)(v134 + 36)) = v45;
      sub_24FAD5794((uint64_t)v23, &qword_269A500F8);
      if (qword_269A4F350 != -1) {
        swift_once();
      }
      uint64_t v48 = (uint64_t)v160;
      if (*(unsigned char *)(qword_269A58F38 + 16) == 1) {
        uint64_t v49 = sub_24FB47948();
      }
      else {
        uint64_t v49 = sub_24FB47938();
      }
      uint64_t v95 = v49;
      uint64_t v60 = v164;
      uint64_t v96 = swift_getKeyPath();
      uint64_t v97 = v137;
      sub_24FAD5834(v47, v137, &qword_269A50100);
      uint64_t v98 = (uint64_t *)(v97 + *(int *)(v136 + 36));
      *uint64_t v98 = v96;
      v98[1] = v95;
      sub_24FAD5794(v47, &qword_269A50100);
      uint64_t v99 = v140;
      sub_24FAD5834(v97, v140, &qword_269A50108);
      *(_WORD *)(v99 + *(int *)(v135 + 36)) = 256;
      sub_24FAD5794(v97, &qword_269A50108);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
      sub_24FB47218();
      sub_24FB47E58();
      sub_24FB47238();
      uint64_t v100 = v139;
      sub_24FAD5834(v99, v139, &qword_269A50110);
      uint64_t v101 = (_OWORD *)(v100 + *(int *)(v155 + 36));
      long long v102 = v190;
      *uint64_t v101 = v189;
      v101[1] = v102;
      v101[2] = v191;
      sub_24FAD5794(v99, &qword_269A50110);
      uint64_t v103 = v141;
      sub_24FAD5730(v100, v141, &qword_269A50118);
      sub_24FAD5834(v103, (uint64_t)v131, &qword_269A50118);
      swift_storeEnumTagMultiPayload();
      sub_24FB31148(&qword_269A50140, &qword_269A50118, (void (*)(void))sub_24FB31118);
      sub_24FB31148(&qword_269A50170, &qword_269A500E0, (void (*)(void))sub_24FB313CC);
      uint64_t v104 = (uint64_t)v156;
      sub_24FB476C8();
      sub_24FAD5794(v103, &qword_269A50118);
      uint64_t v59 = v133;
    }
    else
    {
      sub_24FB47C78();
      uint64_t v50 = sub_24FB47A28();
      uint64_t v52 = v51;
      uint64_t v141 = v53;
      char v55 = v54 & 1;
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F1B538], v15);
      uint64_t v56 = swift_getKeyPath();
      int v57 = v154;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))((char *)v154 + *(int *)(v153 + 28), v18, v15);
      *int v57 = v56;
      sub_24FAD5834((uint64_t)v57, (uint64_t)&v20[*(int *)(v152 + 36)], &qword_269A500F0);
      *(void *)unint64_t v20 = v50;
      *((void *)v20 + 1) = v52;
      v20[16] = v55;
      *((void *)v20 + 3) = v141;
      sub_24FAE9618(v50, v52, v55);
      swift_bridgeObjectRetain();
      sub_24FAD5794((uint64_t)v57, &qword_269A500F0);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_24FADAA34(v50, v52, v55);
      swift_bridgeObjectRelease();
      char v58 = sub_24FB47838();
      uint64_t v59 = v133;
      uint64_t v60 = v164;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
      sub_24FB47218();
      sub_24FB47178();
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      uint64_t v68 = v67;
      uint64_t v69 = v144;
      sub_24FAD5834((uint64_t)v20, v144, &qword_269A500F8);
      uint64_t v70 = v69 + *(int *)(v142 + 36);
      *(unsigned char *)uint64_t v70 = v58;
      *(void *)(v70 + 8) = v62;
      *(void *)(v70 + 16) = v64;
      *(void *)(v70 + 24) = v66;
      *(void *)(v70 + 32) = v68;
      *(unsigned char *)(v70 + 40) = 0;
      sub_24FAD5794((uint64_t)v20, &qword_269A500F8);
      LODWORD(v56) = sub_24FB47738();
      uint64_t v71 = v148;
      sub_24FAD5834(v69, v148, &qword_269A500C0);
      *(_DWORD *)(v71 + *(int *)(v143 + 36)) = v56;
      sub_24FAD5794(v69, &qword_269A500C0);
      if (qword_269A4F350 != -1) {
        swift_once();
      }
      if (*(unsigned char *)(qword_269A58F38 + 16)) {
        sub_24FB47948();
      }
      else {
        sub_24FB47938();
      }
      sub_24FB478E8();
      uint64_t v105 = sub_24FB47928();
      swift_release();
      uint64_t v106 = swift_getKeyPath();
      uint64_t v107 = v147;
      sub_24FAD5834(v71, v147, &qword_269A500C8);
      uint64_t v108 = (uint64_t *)(v107 + *(int *)(v146 + 36));
      *uint64_t v108 = v106;
      v108[1] = v105;
      sub_24FAD5794(v71, &qword_269A500C8);
      uint64_t v109 = v150;
      sub_24FAD5834(v107, v150, &qword_269A500D0);
      *(_WORD *)(v109 + *(int *)(v145 + 36)) = 256;
      sub_24FAD5794(v107, &qword_269A500D0);
      sub_24FB47218();
      sub_24FB47218();
      sub_24FB47E58();
      sub_24FB47238();
      uint64_t v110 = v149;
      sub_24FAD5834(v109, v149, &qword_269A500D8);
      uint64_t v111 = (_OWORD *)(v110 + *(int *)(v132 + 36));
      long long v112 = v190;
      _OWORD *v111 = v189;
      v111[1] = v112;
      v111[2] = v191;
      sub_24FAD5794(v109, &qword_269A500D8);
      uint64_t v113 = v151;
      sub_24FAD5730(v110, v151, &qword_269A500E0);
      sub_24FAD5834(v113, (uint64_t)v131, &qword_269A500E0);
      swift_storeEnumTagMultiPayload();
      sub_24FB31148(&qword_269A50140, &qword_269A50118, (void (*)(void))sub_24FB31118);
      sub_24FB31148(&qword_269A50170, &qword_269A500E0, (void (*)(void))sub_24FB313CC);
      uint64_t v104 = (uint64_t)v156;
      sub_24FB476C8();
      sub_24FAD5794(v113, &qword_269A500E0);
      uint64_t v48 = (uint64_t)v160;
    }
    sub_24FAD5834(v104, (uint64_t)v158, &qword_269A50120);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A50130);
    sub_24FB3103C();
    sub_24FB31148(&qword_269A50198, &qword_269A50130, (void (*)(void))sub_24FB314F0);
    sub_24FB476C8();
    sub_24FAD5794(v104, &qword_269A50120);
  }
  char v114 = *(unsigned char *)(v60 + *(int *)(v59 + 56));
  type metadata accessor for DocumentViewModel();
  sub_24FB31658();
  swift_retain();
  uint64_t v192 = sub_24FB472F8();
  uint64_t v193 = v115;
  uint64_t v194 = MEMORY[0x263F8EE78];
  char v195 = v114;
  uint64_t v196 = 0;
  uint64_t v197 = 0;
  __int16 v198 = 256;
  sub_24FB47E68();
  sub_24FB1B624(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v178, 0.0, 1, 0.0, 1);
  swift_release();
  long long v173 = v186;
  long long v174 = v187;
  uint64_t v175 = v188;
  long long v169 = v182;
  long long v170 = v183;
  long long v171 = v184;
  long long v172 = v185;
  long long v165 = v178;
  long long v166 = v179;
  long long v167 = v180;
  long long v168 = v181;
  uint64_t v116 = v161;
  sub_24FAD5834(v48, v161, &qword_269A50128);
  uint64_t v117 = v163;
  sub_24FAD5834(v116, v163, &qword_269A50128);
  uint64_t v118 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269A501E0) + 48);
  long long v119 = v174;
  v176[8] = v173;
  v176[9] = v174;
  long long v120 = v169;
  long long v121 = v170;
  v176[4] = v169;
  v176[5] = v170;
  long long v123 = v171;
  long long v122 = v172;
  v176[6] = v171;
  v176[7] = v172;
  long long v124 = v165;
  long long v125 = v166;
  v176[0] = v165;
  v176[1] = v166;
  long long v127 = v167;
  long long v126 = v168;
  v176[2] = v167;
  v176[3] = v168;
  uint64_t v128 = v117 + v118;
  *(_OWORD *)(v128 + 128) = v173;
  *(_OWORD *)(v128 + 144) = v119;
  *(_OWORD *)(v128 + 64) = v120;
  *(_OWORD *)(v128 + 80) = v121;
  *(_OWORD *)(v128 + 96) = v123;
  *(_OWORD *)(v128 + 112) = v122;
  *(_OWORD *)uint64_t v128 = v124;
  *(_OWORD *)(v128 + 16) = v125;
  uint64_t v177 = v175;
  *(void *)(v128 + 160) = v175;
  *(_OWORD *)(v128 + 32) = v127;
  *(_OWORD *)(v128 + 48) = v126;
  sub_24FB1BD8C((uint64_t)v176);
  sub_24FAD5794(v48, &qword_269A50128);
  long long v186 = v173;
  long long v187 = v174;
  uint64_t v188 = v175;
  long long v182 = v169;
  long long v183 = v170;
  long long v184 = v171;
  long long v185 = v172;
  long long v178 = v165;
  long long v179 = v166;
  long long v180 = v167;
  long long v181 = v168;
  sub_24FB316B0((uint64_t)&v178);
  return sub_24FAD5794(v116, &qword_269A50128);
}

uint64_t sub_24FB3048C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_269A4F388 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v2 + *(int *)(a1 + 32));
  *(void *)a2 = qword_269A58F80;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50078);
  return sub_24FB2F0F4(v2, a2 + *(int *)(v6 + 44));
}

double sub_24FB3051C()
{
  sub_24FB47328();
  double v1 = v0;
  uint64_t v2 = sub_24FB47508();
  double v3 = MEMORY[0x25336D6B0](v2);
  uint64_t v4 = sub_24FB47518();
  return (v1 - (v3 - MEMORY[0x25336D6B0](v4))) * 0.5;
}

uint64_t sub_24FB30570()
{
  sub_24FB317EC();
  uint64_t result = sub_24FB47548();
  qword_269A58F80 = result;
  return result;
}

uint64_t type metadata accessor for DocumentOutlineItemView()
{
  uint64_t result = qword_269A50090;
  if (!qword_269A50090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB305EC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for DocumentOutlineItemView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    v8((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]), v7);
    v8((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]), v7);
    uint64_t v9 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
    uint64_t v11 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for DocumentOutlineItemView(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v5(a1 + a2[7], v4);
  return swift_release();
}

uint64_t initializeWithCopy for DocumentOutlineItemView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v8 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DocumentOutlineItemView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for DocumentOutlineItemView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v8 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for DocumentOutlineItemView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v8 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v9 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentOutlineItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB30CF4);
}

uint64_t sub_24FB30CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentOutlineItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB30DCC);
}

uint64_t sub_24FB30DCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50080);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

void sub_24FB30E8C()
{
  sub_24FB30F4C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24FB30F4C()
{
  if (!qword_269A500A0)
  {
    sub_24FB2EE34();
    unint64_t v0 = sub_24FB47228();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A500A0);
    }
  }
}

uint64_t sub_24FB30FA8()
{
  return sub_24FAD57F0(&qword_269A500A8, &qword_269A500B0);
}

uint64_t sub_24FB30FE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24FB47448();
  *a1 = result;
  return result;
}

uint64_t sub_24FB31010()
{
  return sub_24FB47458();
}

unint64_t sub_24FB3103C()
{
  unint64_t result = qword_269A50138;
  if (!qword_269A50138)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50120);
    sub_24FB31148(&qword_269A50140, &qword_269A50118, (void (*)(void))sub_24FB31118);
    sub_24FB31148(&qword_269A50170, &qword_269A500E0, (void (*)(void))sub_24FB313CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50138);
  }
  return result;
}

uint64_t sub_24FB31118()
{
  return sub_24FB31148(&qword_269A50148, &qword_269A50110, (void (*)(void))sub_24FB311C4);
}

uint64_t sub_24FB31148(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB311C4()
{
  unint64_t result = qword_269A50150;
  if (!qword_269A50150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50108);
    sub_24FB31288(&qword_269A50158, &qword_269A50100, (void (*)(void))sub_24FB3132C);
    sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50150);
  }
  return result;
}

uint64_t sub_24FB31288(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_24FAD57F0((unint64_t *)&qword_269A4FCF0, &qword_269A4FCF8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB3132C()
{
  unint64_t result = qword_269A50160;
  if (!qword_269A50160)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A500F8);
    sub_24FAD57F0(&qword_269A50168, &qword_269A500F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50160);
  }
  return result;
}

uint64_t sub_24FB313CC()
{
  return sub_24FB31148(&qword_269A50178, &qword_269A500D8, (void (*)(void))sub_24FB313FC);
}

unint64_t sub_24FB313FC()
{
  unint64_t result = qword_269A50180;
  if (!qword_269A50180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A500D0);
    sub_24FB31288(&qword_269A50188, &qword_269A500C8, (void (*)(void))sub_24FB314C0);
    sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50180);
  }
  return result;
}

uint64_t sub_24FB314C0()
{
  return sub_24FB31148(&qword_269A50190, &qword_269A500C0, (void (*)(void))sub_24FB3132C);
}

uint64_t sub_24FB314F0()
{
  return sub_24FB31148(&qword_269A501A0, &qword_269A501A8, (void (*)(void))sub_24FB31520);
}

unint64_t sub_24FB31520()
{
  unint64_t result = qword_269A501B0;
  if (!qword_269A501B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A501B8);
    sub_24FB31288(&qword_269A501C0, &qword_269A501C8, (void (*)(void))sub_24FB315E4);
    sub_24FAD57F0(&qword_269A4F838, &qword_269A4F828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A501B0);
  }
  return result;
}

unint64_t sub_24FB315E4()
{
  unint64_t result = qword_269A501D0;
  if (!qword_269A501D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A501D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A501D0);
  }
  return result;
}

unint64_t sub_24FB31658()
{
  unint64_t result = qword_269A4F4A8;
  if (!qword_269A4F4A8)
  {
    type metadata accessor for DocumentViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A4F4A8);
  }
  return result;
}

uint64_t sub_24FB316B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24FAF8968(v2);
  return a1;
}

uint64_t sub_24FB316FC()
{
  return sub_24FB473E8();
}

uint64_t sub_24FB31720(uint64_t a1)
{
  uint64_t v2 = sub_24FB47CB8();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_24FB473F8();
}

unint64_t sub_24FB317EC()
{
  unint64_t result = qword_269A501E8;
  if (!qword_269A501E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A501E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FirstTextCenter()
{
  return &type metadata for FirstTextCenter;
}

BOOL static DocumentOutlineView.OutlineType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t DocumentOutlineView.OutlineType.hash(into:)()
{
  return sub_24FB48738();
}

uint64_t DocumentOutlineView.OutlineType.hashValue.getter()
{
  return sub_24FB48748();
}

uint64_t DocumentOutlineView.Content.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentOutlineView.forceOffsetFirstElement.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t DocumentOutlineView.body.getter@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(void *)a3 = sub_24FB475E8();
  *(double *)(a3 + 8) = a4;
  *(unsigned char *)(a3 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A501F0);
  uint64_t v10 = swift_bridgeObjectRetain();
  size_t v11 = sub_24FB31FF4(v10);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(double *)(v12 + 16) = a4;
  *(double *)(v12 + 24) = a5;
  *(void *)(v12 + 32) = a1;
  *(unsigned char *)(v12 + 40) = a2;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24FB32390;
  *(void *)(v13 + 24) = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A501F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A50200);
  sub_24FAD57F0(&qword_269A50208, &qword_269A501F8);
  sub_24FB32398();
  return sub_24FB47DE8();
}

uint64_t sub_24FB31AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v44 = a4;
  uint64_t v48 = a5;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50258);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50260);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DocumentOutlineItemView();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50200);
  MEMORY[0x270FA5388](v47);
  uint64_t v45 = (uint64_t)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = (int *)type metadata accessor for DocumentOutlineView.Content();
  uint64_t v21 = *(void *)(a2 + v20[6]);
  uint64_t v22 = *(void *)(a2 + v20[5]);
  uint64_t v23 = *(void *)(a2 + v20[7]);
  char v24 = *(unsigned char *)(a2 + v20[8]);
  swift_retain();
  uint64_t v46 = v18;
  sub_24FB2EEDC(v21, v22, v23, v24, (a1 == 0) & a3, (uint64_t)v18);
  uint64_t result = sub_24FB47818();
  char v26 = result;
  if (!a1)
  {
    uint64_t v29 = 1;
    goto LABEL_7;
  }
  unint64_t v27 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v27 < *(void *)(v44 + 16))
  {
    uint64_t v28 = v42;
    sub_24FAD5834(v44+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v27, v42, &qword_269A50258);
    sub_24FB2DE0C(v28 + *(int *)(v43 + 48), (uint64_t)v15);
    uint64_t v29 = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, int *))(*((void *)v20 - 1) + 56))(v15, v29, 1, v20);
    sub_24FB32FA0(a2, (uint64_t)v15, a6, a7);
    sub_24FAD5794((uint64_t)v15, &qword_269A50260);
    sub_24FB47178();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v45;
    uint64_t v38 = (uint64_t)v46;
    sub_24FB33408((uint64_t)v46, v45, (uint64_t (*)(void))type metadata accessor for DocumentOutlineItemView);
    uint64_t v40 = v39 + *(int *)(v47 + 36);
    *(unsigned char *)uint64_t v40 = v26;
    *(void *)(v40 + 8) = v31;
    *(void *)(v40 + 16) = v33;
    *(void *)(v40 + 24) = v35;
    *(void *)(v40 + 32) = v37;
    *(unsigned char *)(v40 + 40) = 0;
    sub_24FB333A8(v38, (uint64_t (*)(void))type metadata accessor for DocumentOutlineItemView);
    return sub_24FAD5730(v39, v48, &qword_269A50200);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24FB31E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  char v6 = *((unsigned char *)v1 + 24);
  *(void *)a1 = sub_24FB475E8();
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A501F0);
  uint64_t v7 = swift_bridgeObjectRetain();
  size_t v8 = sub_24FB31FF4(v7);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v5;
  *(unsigned char *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24FB32390;
  *(void *)(v10 + 24) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A501F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A50200);
  sub_24FAD57F0(&qword_269A50208, &qword_269A501F8);
  sub_24FB32398();
  return sub_24FB47DE8();
}

size_t sub_24FB31FF4(uint64_t a1)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50258);
  MEMORY[0x270FA5388](v48);
  uint64_t v42 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (void *)((char *)v41 - v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v47 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  size_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v45 = v10;
  v41[1] = a1;
  if (v10)
  {
    uint64_t v43 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v43;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for DocumentOutlineView.Content() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v44 = *(void *)(v15 + 72);
    v41[2] = v9 | 7;
    uint64_t v17 = v11;
    uint64_t v18 = v42;
    while (1)
    {
      uint64_t v20 = v48;
      uint64_t v21 = (uint64_t)&v18[*(int *)(v48 + 48)];
      sub_24FB33408(v16, v21, (uint64_t (*)(void))type metadata accessor for DocumentOutlineView.Content);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v23 = (uint64_t)v46 + *(int *)(v20 + 48);
      *uint64_t v46 = v13;
      sub_24FB2DE0C(v21, v23);
      size_t result = sub_24FAD5730(v22, (uint64_t)v7, &qword_269A50258);
      if (v14)
      {
        size_t v11 = v17;
        BOOL v19 = __OFSUB__(v14--, 1);
        if (v19) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v17[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269A50268);
        uint64_t v28 = *(void *)(v47 + 72);
        uint64_t v29 = v43;
        size_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        v11[2] = v27;
        void v11[3] = 2 * (v30 / v28);
        uint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v17[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v18 = v42;
        BOOL v19 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v19)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      sub_24FAD5730((uint64_t)v7, v12, &qword_269A50258);
      v12 += *(void *)(v47 + 72);
      v16 += v44;
      uint64_t v17 = v11;
      if (v45 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v19 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v19) {
      goto LABEL_36;
    }
    v11[2] = v40;
  }
  return (size_t)v11;
}

unint64_t sub_24FB32398()
{
  unint64_t result = qword_269A50210;
  if (!qword_269A50210)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50200);
    sub_24FB324E4(&qword_269A50218, (void (*)(uint64_t))type metadata accessor for DocumentOutlineItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50210);
  }
  return result;
}

unint64_t sub_24FB32448()
{
  unint64_t result = qword_269A50220;
  if (!qword_269A50220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50220);
  }
  return result;
}

uint64_t sub_24FB3249C()
{
  return sub_24FB324E4(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB324E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB3252C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for DocumentOutlineView()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentOutlineView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentOutlineView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DocumentOutlineView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentOutlineView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DocumentOutlineView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentOutlineView()
{
  return &type metadata for DocumentOutlineView;
}

unsigned char *storeEnumTagSinglePayload for DocumentOutlineView.OutlineType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB327B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentOutlineView.OutlineType()
{
  return &type metadata for DocumentOutlineView.OutlineType;
}

void *initializeBufferWithCopyOfBuffer for DocumentOutlineView.Content(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for DocumentOutlineView.Content(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB32BE4);
}

uint64_t sub_24FB32BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentOutlineView.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB32CB8);
}

uint64_t sub_24FB32CB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DocumentOutlineView.Content()
{
  uint64_t result = qword_269A50230;
  if (!qword_269A50230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB32DC0()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB32E74()
{
  return sub_24FAD57F0(&qword_269A50248, &qword_269A50250);
}

uint64_t objectdestroyTm_5()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24FB32EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24FB31AD8(a1, a2, *(unsigned char *)(v3 + 40), *(void *)(v3 + 48), a3, *(double *)(v3 + 16), *(double *)(v3 + 24));
}

uint64_t sub_24FB32F08()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24FB32F40(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50258);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

double sub_24FB32FA0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for DocumentBlockQuoteElement();
  MEMORY[0x270FA5388](v8);
  int64_t v30 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DocumentCodeBlockElement();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50260);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v27 - v17;
  sub_24FAD5834(a2, (uint64_t)&v27 - v17, &qword_269A50260);
  uint64_t v19 = type metadata accessor for DocumentOutlineView.Content();
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  if (v20(v18, 1, v19) == 1)
  {
    sub_24FAD5794((uint64_t)v18, &qword_269A50260);
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v33 = 0;
LABEL_9:
    sub_24FAD5794((uint64_t)&v31, &qword_269A4F480);
    return 0.0;
  }
  uint64_t v28 = a2;
  uint64_t v29 = v8;
  swift_retain();
  sub_24FB333A8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DocumentOutlineView.Content);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB47148();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v21 = *(void *)(v34[0] + 16);
  if (v21)
  {
    sub_24FAF8C3C(v34[0] + 40 * v21 - 8, (uint64_t)&v31);
  }
  else
  {
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1)) {
    goto LABEL_9;
  }
  sub_24FAF8CA0(&v31, (uint64_t)v34);
  sub_24FAF8C3C((uint64_t)v34, (uint64_t)&v31);
  __swift_instantiateConcreteTypeFromMangledName(qword_269A4F488);
  int v22 = swift_dynamicCast();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  if (!v22)
  {
    uint64_t v24 = (uint64_t)v30;
    if (swift_dynamicCast())
    {
      sub_24FB333A8(v24, (uint64_t (*)(void))type metadata accessor for DocumentBlockQuoteElement);
LABEL_18:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      return a4;
    }
    uint64_t v25 = *(void *)(a1 + *(int *)(v19 + 28));
    sub_24FAD5834(v28, (uint64_t)v15, &qword_269A50260);
    if (v20(v15, 1, v19) == 1)
    {
      sub_24FAD5794((uint64_t)v15, &qword_269A50260);
      if (v25 != 1) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v26 = *(void *)&v15[*(int *)(v19 + 28)];
      sub_24FB333A8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DocumentOutlineView.Content);
      if (v25 != v26) {
        goto LABEL_18;
      }
    }
    a4 = 0.0;
    goto LABEL_18;
  }
  sub_24FB333A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DocumentCodeBlockElement);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  return a3;
}

uint64_t sub_24FB333A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24FB33408(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t DocumentElementParagraphParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v88 = a2;
  uint64_t v89 = (void (**)(void, void))sub_24FB46E68();
  uint64_t v92 = (uint64_t)*(v89 - 1);
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_24FB46FB8();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F690);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v99 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_24FB46D18();
  uint64_t v87 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  unint64_t v90 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v93 = (char *)&v74 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = (char *)&v74 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v80 = (char *)&v74 - v13;
  unint64_t v83 = sub_24FB46DF8();
  uint64_t v14 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v84 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24FB46DB8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v85 = (char *)&v74 - v27;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  sub_24FB46C58();
  swift_release();
  uint64_t v28 = sub_24FB46E08();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
  {
    sub_24FAD5794((uint64_t)v18, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    uint64_t v30 = v88;
LABEL_12:
    sub_24FAD5794((uint64_t)v21, &qword_269A4F6A0);
    uint64_t v46 = type metadata accessor for DocumentParagraphElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v30, 1, 1, v46);
  }
  char v76 = v21;
  uint64_t v78 = v22;
  uint64_t v31 = sub_24FB46DC8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
  uint64_t v32 = *(void *)(v31 + 16);
  char v75 = v4;
  uint64_t v77 = v23;
  if (v32)
  {
    uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
    uint64_t v33 = v23 + 16;
    uint64_t v98 = v34;
    unint64_t v35 = v31 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
    uint64_t v36 = (uint64_t (**)(char *, unint64_t))(v14 + 88);
    LODWORD(v96) = *MEMORY[0x263F06938];
    uint64_t v37 = (void (**)(char *, unint64_t))(v14 + 8);
    uint64_t v97 = (unsigned int (**)(char *, uint64_t, void (**)(void, void)))v33;
    uint64_t v95 = *(void (***)(char *, char *, void))(v33 + 56);
    uint64_t v74 = v31;
    swift_bridgeObjectRetain();
    uint64_t v38 = v78;
    unint64_t v40 = v83;
    unint64_t v39 = v84;
    while (1)
    {
      v98(v25, v35, v38);
      sub_24FB46D98();
      int v41 = (*v36)(v39, v40);
      if (v41 == v96) {
        break;
      }
      (*v37)(v39, v40);
      (*(void (**)(char *, uint64_t))(v33 - 8))(v25, v38);
      v35 += (unint64_t)v95;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = 1;
        uint64_t v30 = v88;
        uint64_t v43 = v89;
        uint64_t v44 = v87;
        uint64_t v23 = v77;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v45 = v77;
    uint64_t v21 = v76;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v25, v38);
    uint64_t v42 = 0;
    uint64_t v30 = v88;
    uint64_t v43 = v89;
    uint64_t v44 = v87;
    uint64_t v23 = v45;
  }
  else
  {
    uint64_t v42 = 1;
    uint64_t v30 = v88;
    uint64_t v43 = v89;
    uint64_t v44 = v87;
    uint64_t v38 = v78;
LABEL_9:
    uint64_t v21 = v76;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v42, 1, v38);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v38) == 1) {
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v85, v21, v38);
  uint64_t v48 = sub_24FB46DA8();
  uint64_t v49 = v79;
  unint64_t v50 = sub_24FB3F66C(v48);
  MEMORY[0x270FA5388](v50);
  *(&v74 - 2) = v49;
  uint64_t v51 = sub_24FB0C3B0((void (*)(uint64_t))sub_24FB340B0, (uint64_t)(&v74 - 4), v50);
  swift_bridgeObjectRelease();
  uint64_t v52 = v86;
  sub_24FB46D08();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v93, v52, v94);
  uint64_t v53 = *(void *)(v51 + 16);
  uint64_t v84 = (char *)v51;
  if (v53)
  {
    char v54 = *(void (**)(char *, unint64_t, uint64_t))(v92 + 16);
    unint64_t v55 = v51 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
    uint64_t v56 = v92 + 56;
    uint64_t v97 = (unsigned int (**)(char *, uint64_t, void (**)(void, void)))(v92 + 48);
    uint64_t v98 = v54;
    uint64_t v57 = *(void *)(v92 + 72);
    uint64_t v95 = (void (**)(char *, char *, void))(v92 + 32);
    uint64_t v96 = v57;
    v92 += 16;
    uint64_t v89 = (void (**)(void, void))(v92 - 8);
    char v58 = (void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v59 = (void (**)(char *, char *, uint64_t))(v44 + 32);
    swift_bridgeObjectRetain();
    unint64_t v83 = v56 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v60 = v99;
    uint64_t v61 = v90;
    uint64_t v62 = v93;
    while (1)
    {
      v98(v60, v55, (uint64_t)v43);
      uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void)))v56;
      (*(void (**)(char *, void, uint64_t, void (**)(void, void)))v56)(v60, 0, 1, v43);
      if ((*v97)(v60, 1, v43) == 1) {
        break;
      }
      uint64_t v64 = v91;
      (*v95)(v91, v99, v43);
      sub_24FB3411C((unint64_t *)&unk_269A4F6B0, MEMORY[0x263F06970]);
      sub_24FB46BA8();
      (*v89)(v64, v43);
      uint64_t v65 = v94;
      (*v58)(v62, v94);
      uint64_t v66 = v65;
      uint64_t v60 = v99;
      (*v59)(v62, v61, v66);
      v55 += v96;
      if (!--v53) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, void (**)(void, void)))(v92 + 56);
    swift_bridgeObjectRetain();
    uint64_t v60 = v99;
LABEL_19:
    v63(v60, 1, 1, v43);
  }
  swift_bridgeObjectRelease();
  uint64_t v67 = v87;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
  uint64_t v69 = v80;
  uint64_t v70 = v94;
  v68(v80, v93, v94);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v86, v70);
  swift_bridgeObjectRelease();
  uint64_t v71 = v75;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v85, v78);
  uint64_t v72 = type metadata accessor for DocumentParagraphElement();
  uint64_t v73 = v88;
  v68((char *)(v88 + *(int *)(v72 + 20)), v69, v70);
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v73, v71, v82);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v73, 0, 1, v72);
}

uint64_t sub_24FB33FAC()
{
  return 8;
}

uint64_t sub_24FB33FB8()
{
  return swift_release();
}

uint64_t sub_24FB33FC0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB33FD4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB33FE0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  return sub_24FAD5794((uint64_t)v2, &qword_269A4F6C0);
}

uint64_t sub_24FB340B0()
{
  return sub_24FB33FE0();
}

uint64_t sub_24FB340D4()
{
  return sub_24FB3411C((unint64_t *)&unk_269A50270, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
}

uint64_t sub_24FB3411C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementParagraphParser()
{
  return &type metadata for DocumentElementParagraphParser;
}

uint64_t DocumentParagraphElement.init(id:text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for DocumentParagraphElement() + 20);
  uint64_t v8 = sub_24FB46D18();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  return v9(v7, a2, v8);
}

uint64_t type metadata accessor for DocumentParagraphElement()
{
  uint64_t result = qword_269A502A0;
  if (!qword_269A502A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentParagraphElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentParagraphElement.text.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentParagraphElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DocumentParagraphElement.makeView(textWrapOffset:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v7 = v3 + *(int *)(type metadata accessor for DocumentParagraphElement() + 20);
  uint64_t v8 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, v7, v8);
  uint64_t result = type metadata accessor for DocumentParagraphView();
  uint64_t v10 = (double *)(a1 + *(int *)(result + 20));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t DocumentParagraphElement.makeView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DocumentParagraphElement() + 20);
  uint64_t v4 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  uint64_t result = type metadata accessor for DocumentParagraphView();
  uint64_t v6 = (void *)(a1 + *(int *)(result + 20));
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t DocumentParagraphElement.append(_:)@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for DocumentParagraphElement();
  a1[4] = sub_24FB347F4(&qword_269A4FFC8, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
  __swift_allocate_boxed_opaque_existential_1(a1);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  return sub_24FB46B98();
}

uint64_t DocumentParagraphElement.supportTextWrapTop.getter()
{
  return 1;
}

uint64_t static DocumentParagraphElement.__derived_struct_equals(_:_:)()
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DocumentParagraphElement();
  return sub_24FB46C08();
}

uint64_t sub_24FB3457C(uint64_t a1)
{
  uint64_t result = sub_24FB347F4((unint64_t *)&unk_269A50270, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_24FB345D4()
{
  return &protocol witness table for DocumentParagraphView;
}

uint64_t sub_24FB345E0()
{
  return sub_24FB347F4(&qword_269A50280, (void (*)(uint64_t))type metadata accessor for DocumentParagraphView);
}

uint64_t sub_24FB34628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
  uint64_t result = type metadata accessor for DocumentParagraphView();
  uint64_t v7 = (void *)(a2 + *(int *)(result + 20));
  void *v7 = 0;
  v7[1] = 0;
  return result;
}

uint64_t sub_24FB346A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = v4 + *(int *)(a1 + 20);
  uint64_t v9 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v8, v9);
  uint64_t result = type metadata accessor for DocumentParagraphView();
  uint64_t v11 = (double *)(a2 + *(int *)(result + 20));
  *uint64_t v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t sub_24FB34728(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB347F4(&qword_269A50288, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
  uint64_t result = sub_24FB347F4((unint64_t *)&unk_269A50290, (void (*)(uint64_t))type metadata accessor for DocumentParagraphElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB347AC()
{
  return sub_24FB347F4(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB347F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DocumentParagraphElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB34850);
}

uint64_t sub_24FB34850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24FB46D18();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentParagraphElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB3495C);
}

uint64_t sub_24FB3495C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24FB46FB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24FB46D18();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t DocumentParagraphView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = sub_24FB46D18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F658);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F660);
  __n128 v9 = MEMORY[0x270FA5388](v31);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  uint64_t v32 = v2;
  v12(v6, v2, v3, v9);
  uint64_t v13 = sub_24FB47A08();
  uint64_t v15 = v14;
  char v17 = v16;
  if (qword_269A4F350 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_269A58F38 + 16) == 1) {
    sub_24FB478A8();
  }
  else {
    sub_24FB47918();
  }
  uint64_t v18 = sub_24FB479C8();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  swift_release();
  sub_24FADAA34(v13, v15, v17 & 1);
  swift_bridgeObjectRelease();
  uint64_t v37 = v18;
  uint64_t v38 = v20;
  char v39 = v22 & 1;
  uint64_t v40 = v24;
  type metadata accessor for DocumentParagraphView();
  uint64_t v25 = v33;
  sub_24FB47B38();
  sub_24FADAA34(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  int v26 = sub_24FB47708();
  uint64_t v28 = v34;
  uint64_t v27 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v11, v25, v35);
  *(_DWORD *)&v11[*(int *)(v31 + 36)] = v26;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
  return sub_24FB34DDC((uint64_t)v11, v36);
}

uint64_t type metadata accessor for DocumentParagraphView()
{
  uint64_t result = qword_269A502B0;
  if (!qword_269A502B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB34DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB34E44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentParagraphView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46D18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  __n128 v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB35144);
}

uint64_t sub_24FB35144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DocumentParagraphView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB351C4);
}

uint64_t sub_24FB351C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46D18();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FB35234()
{
  uint64_t result = sub_24FB46D18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24FB352CC()
{
  unint64_t result = qword_269A502C8;
  if (!qword_269A502C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4F660);
    swift_getOpaqueTypeConformance2();
    sub_24FB20374();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A502C8);
  }
  return result;
}

void sub_24FB35378()
{
  HIWORD(qword_269A58FA8) = -4864;
}

uint64_t *CapsuleAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F390 != -1) {
    swift_once();
  }
  return &static CapsuleAttribute.name;
}

uint64_t static CapsuleAttribute.name.getter()
{
  if (qword_269A4F390 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static CapsuleAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static CapsuleAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F390 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static CapsuleAttribute.name = a1;
  qword_269A58FA8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CapsuleAttribute.name.modify())()
{
  if (qword_269A4F390 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_24FB35590()
{
  unint64_t result = qword_269A502D0;
  if (!qword_269A502D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A502D0);
  }
  return result;
}

uint64_t sub_24FB355E4()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB35644()
{
  if (qword_269A4F390 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static CapsuleAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for CapsuleAttribute()
{
  return &type metadata for CapsuleAttribute;
}

unint64_t sub_24FB356D8()
{
  unint64_t result = qword_269A502D8;
  if (!qword_269A502D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A502D8);
  }
  return result;
}

uint64_t DocumentCapsuleElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentCapsuleElement.imageName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DocumentCapsuleElement() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for DocumentCapsuleElement()
{
  uint64_t result = qword_269A50308;
  if (!qword_269A50308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentCapsuleElement.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DocumentCapsuleElement() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DocumentCapsuleElement.init(id:imageName:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t result = type metadata accessor for DocumentCapsuleElement();
  uint64_t v14 = (void *)(a6 + *(int *)(result + 20));
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t v15 = (void *)(a6 + *(int *)(result + 24));
  *uint64_t v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t DocumentCapsuleElement.makeView()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DocumentCapsuleElement();
  uint64_t v4 = *(int *)(v3 + 24);
  int v5 = (uint64_t *)(v1 + *(int *)(v3 + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = *(void *)(v1 + v4);
  uint64_t v8 = *(void *)(v1 + v4 + 8);
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  uint64_t v10 = type metadata accessor for DocumentCapsuleView();
  sub_24FB35BAC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24FB47208();
  uint64_t v12 = (void *)(a1 + *(int *)(v10 + 24));
  *uint64_t v12 = v7;
  v12[1] = v6;
  uint64_t v13 = (void *)(a1 + *(int *)(v10 + 28));
  *uint64_t v13 = v9;
  v13[1] = v8;
  return result;
}

uint64_t sub_24FB359D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(a1 + 20));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(a1 + 24));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v10 = type metadata accessor for DocumentCapsuleView();
  sub_24FB35BAC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_24FB47208();
  uint64_t v12 = (void *)(a2 + *(int *)(v10 + 24));
  *uint64_t v12 = v6;
  v12[1] = v5;
  uint64_t v13 = (void *)(a2 + *(int *)(v10 + 28));
  *uint64_t v13 = v9;
  v13[1] = v8;
  return result;
}

uint64_t sub_24FB35AA8@<X0>(void *a1@<X8>)
{
  sub_24FB3647C();
  uint64_t result = sub_24FB474C8();
  *a1 = v3;
  return result;
}

uint64_t sub_24FB35AF8@<X0>(void *a1@<X8>)
{
  sub_24FB3647C();
  uint64_t result = sub_24FB474C8();
  *a1 = v3;
  return result;
}

uint64_t sub_24FB35B48()
{
  return sub_24FB474D8();
}

unint64_t sub_24FB35BAC()
{
  unint64_t result = qword_269A502E0;
  if (!qword_269A502E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A502E0);
  }
  return result;
}

uint64_t _s16MarkdownDocument0B14CapsuleElementV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for DocumentCapsuleElement();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_24FB48688(), uint64_t result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = *(int *)(v4 + 24);
    uint64_t v13 = *(void *)(a1 + v12);
    uint64_t v14 = *(void *)(a1 + v12 + 8);
    uint64_t v15 = (void *)(a2 + v12);
    if (v13 == *v15 && v14 == v15[1])
    {
      return 1;
    }
    else
    {
      return sub_24FB48688();
    }
  }
  return result;
}

_UNKNOWN **sub_24FB35CC4()
{
  return &protocol witness table for DocumentCapsuleView;
}

uint64_t sub_24FB35CD0()
{
  return sub_24FB35DE4(&qword_269A502E8, (void (*)(uint64_t))type metadata accessor for DocumentCapsuleView);
}

uint64_t sub_24FB35D18(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB35DE4(&qword_269A502F0, (void (*)(uint64_t))type metadata accessor for DocumentCapsuleElement);
  uint64_t result = sub_24FB35DE4((unint64_t *)&unk_269A502F8, (void (*)(uint64_t))type metadata accessor for DocumentCapsuleElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB35D9C()
{
  return sub_24FB35DE4(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB35DE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentCapsuleElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    char v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DocumentCapsuleElement(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB3624C);
}

uint64_t sub_24FB3624C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentCapsuleElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB36324);
}

uint64_t sub_24FB36324(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB363E4()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24FB3647C()
{
  unint64_t result = qword_269A50318;
  if (!qword_269A50318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50318);
  }
  return result;
}

uint64_t EnvironmentValues.labelColor.getter()
{
  sub_24FB3647C();
  sub_24FB474C8();
  return v1;
}

uint64_t EnvironmentValues.labelColor.setter()
{
  return sub_24FB474D8();
}

uint64_t property wrapper backing initializer of DocumentCapsuleView.imageSize()
{
  return sub_24FB47208();
}

uint64_t DocumentCapsuleView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v97 = a1;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50320);
  MEMORY[0x270FA5388](v96);
  uint64_t v95 = (uint64_t *)&v71[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50328) - 8;
  MEMORY[0x270FA5388](v93);
  uint64_t v92 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FF10) - 8;
  MEMORY[0x270FA5388](v89);
  uint64_t v88 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = sub_24FB47388() - 8;
  MEMORY[0x270FA5388](v84);
  unint64_t v83 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50330) - 8;
  MEMORY[0x270FA5388](v86);
  uint64_t v85 = (uint64_t *)&v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FBD0) - 8;
  MEMORY[0x270FA5388](v87);
  uint64_t v9 = &v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FBD8);
  MEMORY[0x270FA5388](v94);
  unint64_t v90 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = &v71[-v12];
  uint64_t v82 = sub_24FB47538();
  sub_24FB36CC0(v2, (uint64_t)&v105);
  uint64_t v80 = *((void *)&v105 + 1);
  uint64_t v81 = v105;
  char v13 = v106;
  int v79 = BYTE1(v106);
  char v14 = v107;
  uint64_t v77 = *((void *)&v107 + 1);
  uint64_t v78 = *((void *)&v106 + 1);
  char v15 = v108[0];
  long long v76 = *(_OWORD *)((char *)v108 + 8);
  uint64_t v74 = v109;
  uint64_t v75 = *((void *)&v108[1] + 1);
  uint64_t v73 = v110;
  char v102 = 0;
  char v101 = v106;
  char v100 = v107;
  char v99 = v108[0];
  char v98 = BYTE8(v109);
  int v72 = BYTE8(v109);
  char v16 = sub_24FB477F8();
  sub_24FB47178();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v103 = 0;
  char v25 = sub_24FB47868();
  sub_24FB47178();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v34 = v103;
  char v104 = 0;
  LOBYTE(v2) = *(unsigned char *)(v2 + 8);
  uint64_t v35 = swift_retain();
  uint64_t v36 = sub_24FB37670(v35, v2);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v105 = v82;
  *((void *)&v105 + 1) = 0x4018000000000000;
  LOBYTE(v106) = 0;
  *((void *)&v106 + 1) = v81;
  *(void *)&long long v107 = v80;
  BYTE8(v107) = v13;
  BYTE9(v107) = v79;
  *(void *)&v108[0] = v78;
  BYTE8(v108[0]) = v14;
  *(void *)&v108[1] = v77;
  BYTE8(v108[1]) = v15;
  long long v109 = v76;
  *(void *)&long long v110 = v75;
  *((void *)&v110 + 1) = v74;
  LOBYTE(v111) = v72;
  *((void *)&v111 + 1) = v73;
  LOBYTE(v112) = v16;
  *((void *)&v112 + 1) = v18;
  *(void *)&long long v113 = v20;
  *((void *)&v113 + 1) = v22;
  *(void *)&long long v114 = v24;
  BYTE8(v114) = v34;
  LOBYTE(v115) = v25;
  *((void *)&v115 + 1) = v27;
  *(void *)&long long v116 = v29;
  *((void *)&v116 + 1) = v31;
  *(void *)&long long v117 = v33;
  BYTE8(v117) = v104;
  *(void *)&long long v118 = KeyPath;
  *((void *)&v118 + 1) = v36;
  id v38 = objc_msgSend(self, sel_quaternarySystemFillColor);
  uint64_t v39 = MEMORY[0x25336DFD0](v38);
  uint64_t v40 = v83;
  int v41 = &v83[*(int *)(v84 + 28)];
  uint64_t v42 = *MEMORY[0x263F19860];
  uint64_t v43 = sub_24FB475C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  __asm { FMOV            V0.2D, #9.0 }
  *uint64_t v40 = _Q0;
  uint64_t v49 = v88;
  sub_24FADC744((uint64_t)v40, (uint64_t)v88);
  *(_WORD *)&v49[*(int *)(v89 + 44)] = 256;
  unint64_t v50 = v85;
  sub_24FAD5834((uint64_t)v49, (uint64_t)v85 + *(int *)(v86 + 44), &qword_269A4FF10);
  *unint64_t v50 = v39;
  swift_retain();
  sub_24FAD5794((uint64_t)v49, &qword_269A4FF10);
  sub_24FADC7FC((uint64_t)v40);
  swift_release();
  uint64_t v51 = sub_24FB47E58();
  uint64_t v53 = v52;
  char v54 = v92;
  sub_24FAD5834((uint64_t)v50, (uint64_t)v92, &qword_269A50330);
  unint64_t v55 = (uint64_t *)&v54[*(int *)(v93 + 44)];
  *unint64_t v55 = v51;
  v55[1] = v53;
  sub_24FAD5834((uint64_t)v54, (uint64_t)v9 + *(int *)(v87 + 44), &qword_269A50328);
  long long v56 = v115;
  long long v57 = v117;
  long long v58 = v118;
  v9[12] = v116;
  v9[13] = v57;
  v9[14] = v58;
  long long v59 = v111;
  long long v60 = v113;
  long long v61 = v114;
  v9[8] = v112;
  v9[9] = v60;
  v9[10] = v61;
  v9[11] = v56;
  long long v62 = v109;
  long long v63 = v110;
  v9[4] = v108[1];
  v9[5] = v62;
  v9[6] = v63;
  v9[7] = v59;
  long long v64 = v106;
  _OWORD *v9 = v105;
  v9[1] = v64;
  long long v65 = v108[0];
  void v9[2] = v107;
  v9[3] = v65;
  sub_24FB37ED0((uint64_t)&v105);
  sub_24FAD5794((uint64_t)v54, &qword_269A50328);
  sub_24FAD5794((uint64_t)v50, &qword_269A50330);
  sub_24FB37F4C((uint64_t)&v105);
  uint64_t v66 = sub_24FB47E68();
  uint64_t v67 = v90;
  sub_24FB1B7F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v90, 0.0, 1, 0.0, 1, v66, v68);
  sub_24FAD5794((uint64_t)v9, &qword_269A4FBD0);
  uint64_t v69 = v91;
  sub_24FB37FC8((uint64_t)v67, (uint64_t)v91);
  sub_24FAD5834((uint64_t)v69, (uint64_t)v67, &qword_269A4FBD8);
  sub_24FB3819C(&qword_269A50338, &qword_269A4FBD8, (void (*)(void))sub_24FB38030);
  uint64_t *v95 = sub_24FB47D78();
  swift_storeEnumTagMultiPayload();
  sub_24FB476C8();
  return sub_24FAD5794((uint64_t)v69, &qword_269A4FBD8);
}

uint64_t sub_24FB36CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24FB47C98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DocumentCapsuleView();
  swift_bridgeObjectRetain();
  sub_24FB47C78();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F1B4B8], v4);
  uint64_t v24 = sub_24FB47CC8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  sub_24FB47218();
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v9 = v27;
  char v10 = v28;
  uint64_t v11 = v29;
  char v12 = v30;
  uint64_t v13 = v31;
  uint64_t v23 = v32;
  char v14 = (uint64_t *)(a1 + *(int *)(v8 + 28));
  uint64_t v15 = v14[1];
  uint64_t v25 = *v14;
  uint64_t v26 = v15;
  sub_24FB285EC();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24FB47A18();
  uint64_t v18 = v17;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = 0;
  LOBYTE(v7) = v19 & 1;
  *(_WORD *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
  *(unsigned char *)(a2 + 48) = v12;
  uint64_t v20 = v23;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v16;
  *(void *)(a2 + 80) = v17;
  *(unsigned char *)(a2 + 88) = v19 & 1;
  *(void *)(a2 + 96) = v21;
  swift_retain();
  sub_24FAE9618(v16, v18, (char)v7);
  swift_bridgeObjectRetain();
  sub_24FADAA34(v16, v18, (char)v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t View.labelColor(_:)()
{
  return swift_release();
}

uint64_t sub_24FB36FA8()
{
  uint64_t result = sub_24FB47BD8();
  qword_269A58FB0 = result;
  return result;
}

uint64_t sub_24FB36FC8@<X0>(void *a1@<X8>)
{
  if (qword_269A4F398 != -1) {
    swift_once();
  }
  *a1 = qword_269A58FB0;
  return swift_retain();
}

uint64_t sub_24FB37034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_24FB38C4C();
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.labelColor.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_24FB3647C();
  sub_24FB474C8();
  return sub_24FB370F8;
}

uint64_t sub_24FB370F8(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_24FB474D8();
  }
  swift_retain();
  sub_24FB474D8();
  return swift_release();
}

uint64_t sub_24FB3718C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24FB474B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F900);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FAD5834(v2, (uint64_t)v10, &qword_269A4F900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_24FB471A8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_24FB48308();
    char v14 = sub_24FB477E8();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_24FB37870(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_24FB48398();
      _os_log_impl(&dword_24FACE000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25336F100](v18, -1, -1);
      MEMORY[0x25336F100](v16, -1, -1);
    }

    sub_24FB474A8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_24FB37448(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_24FB474B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    os_log_type_t v9 = sub_24FB48308();
    char v10 = sub_24FB477E8();
    os_log_type_t v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = v13;
      *(_DWORD *)char v12 = 136315138;
      v15[0] = v12 + 4;
      v15[1] = sub_24FB37870(0xD000000000000011, 0x800000024FB509A0, &v16);
      sub_24FB48398();
      _os_log_impl(&dword_24FACE000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25336F100](v13, -1, -1);
      MEMORY[0x25336F100](v12, -1, -1);
    }

    sub_24FB474A8();
    swift_getAtKeyPath();
    sub_24FB23A14();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v16;
  }
  return a1;
}

uint64_t sub_24FB37670(uint64_t a1, char a2)
{
  uint64_t v4 = sub_24FB474B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_24FB48308();
    os_log_type_t v9 = sub_24FB477E8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      uint64_t v14 = sub_24FB37870(0x726F6C6F43, 0xE500000000000000, &v15);
      sub_24FB48398();
      _os_log_impl(&dword_24FACE000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25336F100](v12, -1, -1);
      MEMORY[0x25336F100](v11, -1, -1);
    }

    sub_24FB474A8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_24FB37870(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24FB37944(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24FAF842C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24FAF842C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24FB37944(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24FB483A8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24FB37B00(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24FB484B8();
  if (!v8)
  {
    sub_24FB48508();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24FB48538();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24FB37B00(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24FB37B98(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24FB37D78(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24FB37D78(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24FB37B98(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24FB37D10(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24FB48458();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24FB48508();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24FB480F8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24FB48538();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24FB48508();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24FB37D10(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A503E0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24FB37D78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A503E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB37ED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  swift_retain();
  sub_24FAE9618(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_24FB37F4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  swift_release();
  sub_24FADAA34(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_24FB37FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24FB38030()
{
  unint64_t result = qword_269A50340;
  if (!qword_269A50340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A4FBD0);
    sub_24FB380D0();
    sub_24FAD57F0(&qword_269A50388, &qword_269A50328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50340);
  }
  return result;
}

unint64_t sub_24FB380D0()
{
  unint64_t result = qword_269A50348;
  if (!qword_269A50348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50350);
    sub_24FB3819C(&qword_269A50358, &qword_269A50360, (void (*)(void))sub_24FB38218);
    sub_24FAD57F0((unint64_t *)&qword_269A4F738, &qword_269A4F740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50348);
  }
  return result;
}

uint64_t sub_24FB3819C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB38218()
{
  unint64_t result = qword_269A50368;
  if (!qword_269A50368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50370);
    sub_24FAD57F0(&qword_269A50378, &qword_269A50380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50368);
  }
  return result;
}

uint64_t sub_24FB382C0()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for DocumentCapsuleView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    swift_retain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)v4 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (void *)((char *)v4 + v13);
    uint64_t v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DocumentCapsuleView(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentCapsuleView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_retain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentCapsuleView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DocumentCapsuleView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for DocumentCapsuleView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentCapsuleView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB38800);
}

uint64_t sub_24FB38800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentCapsuleView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB388E0);
}

uint64_t sub_24FB388E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269A50390);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DocumentCapsuleView()
{
  uint64_t result = qword_269A503A0;
  if (!qword_269A503A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24FB389F4()
{
  sub_24FB38A98();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24FB38A98()
{
  if (!qword_269A503B0)
  {
    sub_24FB35BAC();
    unint64_t v0 = sub_24FB47228();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269A503B0);
    }
  }
}

unint64_t sub_24FB38AF8()
{
  unint64_t result = qword_269A503B8;
  if (!qword_269A503B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A503C0);
    sub_24FB3819C(&qword_269A50338, &qword_269A4FBD8, (void (*)(void))sub_24FB38030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A503B8);
  }
  return result;
}

uint64_t sub_24FB38BA0()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for LabelColorKey()
{
  return &type metadata for LabelColorKey;
}

unint64_t sub_24FB38C4C()
{
  unint64_t result = qword_269A503D8;
  if (!qword_269A503D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A503D8);
  }
  return result;
}

uint64_t DocumentElementCapsuleParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_24FB46E68();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46D18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB35590();
  sub_24FB46C58();
  swift_release();
  uint64_t v12 = v28;
  if (v28)
  {
    uint64_t v24 = v27;
    sub_24FB46C68();
    sub_24FB0CBEC();
    sub_24FB46D38();
    sub_24FB390BC((uint64_t)v4);
    sub_24FB46D48();
    sub_24FB1D3BC();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    uint64_t v13 = (void *)sub_24FB48358();
    id v14 = objc_msgSend(v13, sel_string);

    uint64_t v15 = sub_24FB48068();
    uint64_t v17 = v16;

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    uint64_t v18 = v25;
    _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
    uint64_t v19 = type metadata accessor for DocumentCapsuleElement();
    uint64_t v20 = (void *)(v18 + *(int *)(v19 + 20));
    void *v20 = v24;
    v20[1] = v12;
    uint64_t v21 = (uint64_t *)(v18 + *(int *)(v19 + 24));
    *uint64_t v21 = v15;
    v21[1] = v17;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  }
  else
  {
    uint64_t v23 = type metadata accessor for DocumentCapsuleElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v25, 1, 1, v23);
  }
}

uint64_t sub_24FB38FC0()
{
  return sub_24FB48018() & 1;
}

void sub_24FB3901C()
{
}

uint64_t sub_24FB39044()
{
  return 8;
}

uint64_t sub_24FB39050()
{
  return swift_release();
}

uint64_t sub_24FB39058(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FB39068()
{
  return sub_24FB47FE8();
}

void *sub_24FB390B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB390BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24FB39124()
{
  unint64_t result = qword_269A503E8;
  if (!qword_269A503E8)
  {
    type metadata accessor for DocumentCapsuleElement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A503E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementCapsuleParser()
{
  return &type metadata for DocumentElementCapsuleParser;
}

uint64_t DocumentElementTableParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v129 = a1;
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v127 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v144 = (char *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v139 = (uint64_t (**)(char *, uint64_t))((char *)v123 - v9);
  uint64_t v151 = sub_24FB46C78();
  uint64_t v160 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v132 = (char *)v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v138 = (char *)v123 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v133 = (char *)v123 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v159 = (char *)v123 - v16;
  uint64_t v173 = sub_24FB46DF8();
  uint64_t v130 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  long long v172 = (char *)v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v171 = (char *)v123 - v19;
  MEMORY[0x270FA5388](v20);
  long long v170 = (char *)v123 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v137 = (char *)v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v140 = (char *)v123 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v123 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6A0);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24FB46DB8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  long long v167 = (char *)v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  long long v168 = (char *)v123 - v36;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)v123 - v38;
  MEMORY[0x270FA5388](v40);
  uint64_t v128 = (char *)v123 - v41;
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v158 = sub_24FB0C1CC();
  sub_24FB46C58();
  uint64_t v42 = (uint64_t)v28;
  swift_release();
  uint64_t v43 = sub_24FB46E08();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  uint64_t v157 = v44 + 48;
  char v156 = v45;
  if (v45((char *)v42, 1, v43) == 1)
  {
    sub_24FAD5794(v42, &qword_269A4F698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, 1, 1, v32);
    uint64_t v46 = (uint64_t)v31;
LABEL_12:
    sub_24FAD5794(v46, &qword_269A4F6A0);
    uint64_t v64 = type metadata accessor for DocumentTableElement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(a2, 1, 1, v64);
  }
  uint64_t v164 = v31;
  uint64_t v125 = v3;
  uint64_t v47 = sub_24FB46DC8();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v152 = v44 + 8;
  uint64_t v155 = v48;
  v48((char *)v42, v43);
  uint64_t v49 = *(void *)(v47 + 16);
  uint64_t v149 = v33;
  uint64_t v145 = v43;
  uint64_t v126 = a2;
  long long v124 = v5;
  if (v49)
  {
    uint64_t v50 = v33 + 16;
    long long v169 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
    unint64_t v51 = v47 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v52 = (void (**)(char *, uint64_t))v47;
    uint64_t v53 = (uint64_t (**)(char *, uint64_t))(v130 + 88);
    LODWORD(v166) = *MEMORY[0x263F06910];
    uint64_t v54 = v32;
    unint64_t v55 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v165 = *(void *)(v50 + 56);
    uint64_t v163 = v52;
    swift_bridgeObjectRetain();
    uint64_t v56 = v173;
    while (1)
    {
      v169(v39, v51, v54);
      sub_24FB46D98();
      long long v57 = v170;
      int v58 = (*v53)(v170, v56);
      if (v58 == v166) {
        break;
      }
      (*v55)(v57, v56);
      (*(void (**)(char *, uint64_t))(v50 - 8))(v39, v54);
      v51 += v165;
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = 1;
        a2 = v126;
        uint64_t v32 = v54;
        uint64_t v33 = v149;
        uint64_t v43 = v145;
        goto LABEL_9;
      }
    }
    (*(void (**)(char *, uint64_t))(v130 + 96))(v57, v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v149;
    uint64_t v46 = (uint64_t)v164;
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v164, v39, v54);
    uint64_t v59 = 0;
    a2 = v126;
    uint64_t v32 = v54;
    uint64_t v33 = v60;
    uint64_t v43 = v145;
  }
  else
  {
    uint64_t v59 = 1;
LABEL_9:
    uint64_t v46 = (uint64_t)v164;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v46, v59, 1, v32);
  swift_bridgeObjectRelease();
  int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v46, 1, v32);
  uint64_t v62 = v151;
  long long v63 = v140;
  if (v61 == 1) {
    goto LABEL_12;
  }
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
  long long v170 = (char *)v32;
  v66(v128, v46, v32);
  uint64_t v67 = sub_24FB46DA8();
  unint64_t v68 = sub_24FB3F66C(v67);
  uint64_t v175 = MEMORY[0x263F8EE78];
  uint64_t v69 = *(char **)(v68 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v148 = result;
  uint64_t v154 = v69;
  if (v69)
  {
    unint64_t v70 = 0;
    uint64_t v136 = v160 + 16;
    uint64_t v134 = v160 + 48;
    uint64_t v147 = (char *)(v160 + 32);
    uint64_t v165 = v33 + 16;
    LODWORD(v164) = *MEMORY[0x263F06908];
    uint64_t v162 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v163 = (void (**)(char *, uint64_t))(v130 + 104);
    uint64_t v161 = (void (**)(char *, char *))(v33 + 8);
    uint64_t v131 = (uint64_t (**)(char *, uint64_t))(v160 + 8);
    uint64_t v135 = v160 + 56;
    v123[1] = (v160 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v71 = (char *)v139;
    while (v70 < *(void *)(v68 + 16))
    {
      uint64_t v72 = v160;
      unint64_t v73 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      uint64_t v143 = *(void *)(v160 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v160 + 16))(v71, v68 + v73 + v143 * v70, v62);
      uint64_t v150 = *(void (**)(uint64_t (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v72 + 56);
      v150((uint64_t (**)(char *, uint64_t))v71, 0, 1, v62);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v71, 1, v62) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v91 = (uint64_t)v144;
        uint64_t v92 = (uint64_t)v71;
        uint64_t v93 = v138;
        uint64_t v94 = v137;
        unint64_t v90 = v150;
        goto LABEL_35;
      }
      unint64_t v142 = v73;
      uint64_t v153 = (void (*)(char *, uint64_t, uint64_t))v70;
      uint64_t v146 = *(void (**)(char *, char *, uint64_t))v147;
      v146(v159, v71, v62);
      uint64_t v74 = swift_getKeyPath();
      MEMORY[0x270FA5388](v74);
      v123[-2] = v75;
      swift_getKeyPath();
      sub_24FB46C58();
      swift_release();
      uint64_t result = v156(v63, 1, v43);
      if (result == 1) {
        goto LABEL_57;
      }
      uint64_t v76 = sub_24FB46DC8();
      v155(v63, v43);
      uint64_t v77 = *(void *)(v76 + 16);
      if (v77)
      {
        unint64_t v78 = v76 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
        uint64_t v166 = *(void *)(v33 + 72);
        long long v169 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
        uint64_t v141 = v76;
        swift_bridgeObjectRetain();
        while (1)
        {
          int v79 = v168;
          uint64_t v80 = v170;
          v169(v168, v78, (uint64_t)v170);
          uint64_t v81 = v171;
          sub_24FB46D98();
          uint64_t v82 = v172;
          uint64_t v83 = v173;
          ((void (*)(char *, void, uint64_t))*v163)(v172, v164, v173);
          char v84 = MEMORY[0x25336D160](v81, v82);
          uint64_t v85 = *v162;
          (*v162)(v82, v83);
          v85(v81, v83);
          (*v161)(v79, v80);
          if (v84) {
            break;
          }
          v78 += v166;
          if (!--v77)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v62 = v151;
            uint64_t v33 = v149;
            uint64_t v43 = v145;
            uint64_t v71 = (char *)v139;
            long long v63 = v140;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v62 = v151;
        v146(v133, v159, v151);
        uint64_t v86 = v175;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24FB2E670(0, *(void *)(v86 + 16) + 1, 1);
          uint64_t v86 = v175;
        }
        uint64_t v33 = v149;
        uint64_t v43 = v145;
        uint64_t v71 = (char *)v139;
        unint64_t v68 = v148;
        uint64_t v87 = v143;
        unint64_t v89 = *(void *)(v86 + 16);
        unint64_t v88 = *(void *)(v86 + 24);
        if (v89 >= v88 >> 1)
        {
          sub_24FB2E670(v88 > 1, v89 + 1, 1);
          uint64_t v86 = v175;
        }
        *(void *)(v86 + 16) = v89 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v146)(v86 + v142 + v89 * v87, v133, v62);
        uint64_t v175 = v86;
        long long v63 = v140;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_16:
        uint64_t result = (*v131)(v159, v62);
        unint64_t v68 = v148;
      }
      unint64_t v70 = (unint64_t)v153 + 1;
      if ((char *)v153 + 1 == v154)
      {
        unint64_t v90 = v150;
        v150((uint64_t (**)(char *, uint64_t))v71, 1, 1, v62);
        goto LABEL_34;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v90 = *(void (**)(uint64_t (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v160 + 56);
    uint64_t v71 = (char *)v139;
    v90(v139, 1, 1, v62);
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v91 = (uint64_t)v144;
    uint64_t v92 = (uint64_t)v71;
    uint64_t v93 = v138;
    uint64_t v94 = v137;
LABEL_35:
    uint64_t result = sub_24FAD5794(v92, &qword_269A4FC50);
    uint64_t v136 = v175;
    uint64_t v175 = MEMORY[0x263F8EE78];
    if (!v154)
    {
LABEL_53:
      v90((uint64_t (**)(char *, uint64_t))v91, 1, 1, v62);
LABEL_54:
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_24FAD5794(v91, &qword_269A4FC50);
      uint64_t v114 = v175;
      MEMORY[0x270FA5388](v113);
      uint64_t v115 = v129;
      v123[-2] = v129;
      uint64_t v116 = sub_24FB0C5BC((void (*)(uint64_t))sub_24FB3A9AC, (uint64_t)&v123[-4], v136);
      swift_release();
      uint64_t v117 = sub_24FB3A9CC(v114);
      uint64_t v118 = swift_release();
      MEMORY[0x270FA5388](v118);
      v123[-2] = v115;
      uint64_t v119 = sub_24FB0C7B8((void (*)(uint64_t *))sub_24FB3B344, (uint64_t)&v123[-4], v117);
      swift_bridgeObjectRelease();
      long long v120 = v124;
      _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
      (*(void (**)(char *, char *))(v149 + 8))(v128, v170);
      uint64_t v121 = v126;
      (*(void (**)(uint64_t, char *, uint64_t))(v127 + 32))(v126, v120, v125);
      uint64_t v122 = type metadata accessor for DocumentTableElement();
      *(void *)(v121 + *(int *)(v122 + 20)) = v116;
      *(void *)(v121 + *(int *)(v122 + 24)) = v119;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v121, 0, 1, v122);
    }
    unint64_t v95 = 0;
    unint64_t v142 = v160 + 16;
    uint64_t v141 = v160 + 56;
    uint64_t v140 = (char *)(v160 + 48);
    uint64_t v159 = (char *)(v160 + 32);
    uint64_t v166 = v149 + 16;
    LODWORD(v165) = *MEMORY[0x263F06908];
    uint64_t v163 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v164 = (char *)(v130 + 104);
    uint64_t v162 = (void (**)(char *, uint64_t))(v149 + 8);
    uint64_t v139 = (uint64_t (**)(char *, uint64_t))(v160 + 8);
    uint64_t v150 = v90;
    while (v95 < *(void *)(v68 + 16))
    {
      uint64_t v96 = v160;
      uint64_t v147 = (char *)((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
      uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v160 + 72);
      (*(void (**)(uint64_t, char *, uint64_t))(v160 + 16))(v91, &v147[v68 + (void)v146 * v95], v62);
      v90((uint64_t (**)(char *, uint64_t))v91, 0, 1, v62);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v91, 1, v62) == 1) {
        goto LABEL_54;
      }
      uint64_t v161 = (void (**)(char *, char *))v95;
      uint64_t v153 = *(void (**)(char *, uint64_t, uint64_t))v159;
      v153(v93, v91, v62);
      uint64_t v97 = swift_getKeyPath();
      MEMORY[0x270FA5388](v97);
      v123[-2] = v98;
      swift_getKeyPath();
      sub_24FB46C58();
      swift_release();
      uint64_t result = v156(v94, 1, v43);
      if (result == 1) {
        goto LABEL_58;
      }
      uint64_t v99 = sub_24FB46DC8();
      v155(v94, v43);
      uint64_t v100 = *(void *)(v99 + 16);
      if (v100)
      {
        unint64_t v101 = v99 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
        char v102 = *(void (**)(char *, unint64_t, uint64_t))(v149 + 16);
        long long v168 = *(char **)(v149 + 72);
        long long v169 = v102;
        uint64_t v143 = v99;
        swift_bridgeObjectRetain();
        while (1)
        {
          char v103 = v167;
          char v104 = v170;
          v169(v167, v101, (uint64_t)v170);
          long long v105 = v171;
          sub_24FB46D98();
          long long v107 = v172;
          uint64_t v106 = v173;
          (*(void (**)(char *, void, uint64_t))v164)(v172, v165, v173);
          sub_24FB3B600(&qword_269A50400, MEMORY[0x263F06948]);
          char v108 = sub_24FB48018();
          long long v109 = *v163;
          (*v163)(v107, v106);
          v109(v105, v106);
          (*v162)(v103, (uint64_t)v104);
          if ((v108 & 1) == 0) {
            break;
          }
          v101 += (unint64_t)v168;
          if (!--v100)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v62 = v151;
            uint64_t v93 = v138;
            uint64_t v94 = v137;
            uint64_t v43 = v145;
            unint64_t v68 = v148;
            unint64_t v90 = v150;
            goto LABEL_38;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v93 = v138;
        uint64_t v62 = v151;
        v153(v132, (uint64_t)v138, v151);
        uint64_t v110 = v175;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24FB2E670(0, *(void *)(v110 + 16) + 1, 1);
          uint64_t v110 = v175;
        }
        uint64_t v91 = (uint64_t)v144;
        uint64_t v94 = v137;
        uint64_t v43 = v145;
        unint64_t v90 = v150;
        unint64_t v112 = *(void *)(v110 + 16);
        unint64_t v111 = *(void *)(v110 + 24);
        if (v112 >= v111 >> 1)
        {
          sub_24FB2E670(v111 > 1, v112 + 1, 1);
          uint64_t v110 = v175;
        }
        *(void *)(v110 + 16) = v112 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v153)(&v147[v110 + v112 * (void)v146], v132, v62);
        uint64_t v175 = v110;
        unint64_t v68 = v148;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_38:
        uint64_t result = (*v139)(v93, v62);
        uint64_t v91 = (uint64_t)v144;
      }
      unint64_t v95 = (unint64_t)v161 + 1;
      if ((char *)v161 + 1 == v154) {
        goto LABEL_53;
      }
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_24FB3A714()
{
  return 8;
}

uint64_t sub_24FB3A720()
{
  return swift_release();
}

uint64_t sub_24FB3A728(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB3A73C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB3A748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_24FB46E68();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46D18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v20 - v10;
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  sub_24FAD5794((uint64_t)v4, &qword_269A4F6C0);
  sub_24FB46D48();
  sub_24FB1D3BC();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  uint64_t v12 = (void *)sub_24FB48358();
  id v13 = objc_msgSend(v12, sel_string);

  uint64_t v14 = sub_24FB48068();
  uint64_t v16 = v15;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v17 = v21;
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t result = type metadata accessor for DocumentTableView.RowHeader(0);
  uint64_t v19 = (uint64_t *)(v17 + *(int *)(result + 20));
  *uint64_t v19 = v14;
  v19[1] = v16;
  return result;
}

uint64_t sub_24FB3A9AC@<X0>(uint64_t a1@<X8>)
{
  return sub_24FB3A748(a1);
}

uint64_t sub_24FB3A9CC(uint64_t a1)
{
  uint64_t v2 = sub_24FB46DF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v82 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46DB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v9 - 8);
  long long v63 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24FB46C78();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v78 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v84 = (char *)v54 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *(void *)(a1 + 16);
  v54[1] = a1;
  if (!v61)
  {
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x263F8EE78];
    v53(v18, 1, 1, v11);
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)v25;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v19 = v12 + 16;
  uint64_t v81 = v20;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 64);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v60 = a1 + v22;
  uint64_t v23 = *(void *)(v19 + 56);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
  unint64_t v73 = (void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v88 = v6 + 16;
  uint64_t v87 = (uint64_t (**)(void *, uint64_t))(v3 + 88);
  int v86 = *MEMORY[0x263F06928];
  uint64_t v58 = v6;
  uint64_t v85 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v77 = (void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v75 = v22;
  uint64_t v76 = (uint64_t (**)(void *, uint64_t))(v3 + 96);
  uint64_t v74 = v23;
  uint64_t v70 = v21 | 7;
  uint64_t v71 = v23 + v22;
  long long v57 = (void (**)(char *, uint64_t))(v19 - 8);
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v25 = (void *)MEMORY[0x263F8EE78];
  long long v69 = xmmword_24FB49BA0;
  uint64_t v68 = v2;
  uint64_t v26 = (uint64_t)v63;
  uint64_t v67 = v5;
  uint64_t v79 = v19;
  uint64_t v56 = v18;
  uint64_t v66 = v8;
  uint64_t v80 = v11;
  while (1)
  {
    v81(v18, v60 + v74 * v24, v11);
    unint64_t v55 = *v62;
    v55(v18, 0, 1, v11);
    if ((*v59)(v18, 1, v11) == 1) {
      goto LABEL_33;
    }
    uint64_t v65 = v24;
    uint64_t v83 = v25;
    uint64_t v72 = *v73;
    v72(v84, v18, v11);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v54[-2] = v28;
    swift_getKeyPath();
    sub_24FB0C1CC();
    sub_24FB46C58();
    swift_release();
    uint64_t v29 = sub_24FB46E08();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v29) == 1)
    {
      sub_24FAD5794(v26, &qword_269A4F698);
      uint64_t v31 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v31 = sub_24FB46DC8();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v29);
    }
    uint64_t v32 = v82;
    uint64_t v25 = v83;
    uint64_t v33 = *(void *)(v31 + 16);
    if (v33) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v11 = v80;
    uint64_t v26 = (uint64_t)v63;
    uint64_t v18 = v56;
    uint64_t v24 = v65 + 1;
    (*v57)(v84, v80);
    if (v24 == v61)
    {
      v55(v18, 1, 1, v11);
      goto LABEL_33;
    }
  }
  unint64_t v34 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v64 = v31;
  unint64_t v35 = v31 + v34;
  uint64_t v36 = *(void *)(v58 + 72);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
  v37(v8, v31 + v34, v5);
  while (1)
  {
    sub_24FB46D98();
    int v38 = (*v87)(v32, v2);
    if (v38 != v86)
    {
      (*v85)(v8, v5);
      (*v77)(v32, v2);
      goto LABEL_11;
    }
    uint64_t result = (*v76)(v32, v2);
    BOOL v40 = __OFSUB__(*v32, 1);
    uint64_t v41 = *v32 - 1;
    if (v40) {
      break;
    }
    if (v41 < 0 || v41 >= v25[2])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FD28);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v69;
      v81((char *)(v49 + v75), (uint64_t)v84, v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = sub_24FB2ABEC(0, v25[2] + 1, 1, v25);
      }
      unint64_t v51 = v25[2];
      unint64_t v50 = v25[3];
      uint64_t v52 = v25;
      if (v51 >= v50 >> 1) {
        uint64_t v52 = sub_24FB2ABEC((void *)(v50 > 1), v51 + 1, 1, v25);
      }
      v52[2] = v51 + 1;
      uint64_t v25 = v52;
      v52[v51 + 4] = v49;
      (*v85)(v8, v5);
      uint64_t v32 = v82;
    }
    else
    {
      uint64_t v42 = v80;
      v81(v78, (uint64_t)v84, v80);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24FB2AFC0(v25);
        uint64_t v25 = (void *)result;
      }
      if ((unint64_t)v41 >= v25[2]) {
        goto LABEL_35;
      }
      uint64_t v43 = v42;
      uint64_t v83 = v25;
      uint64_t v44 = v25 + 4;
      unint64_t v45 = v25[v41 + 4];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25[v41 + 4] = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v45 = sub_24FB2ABC8(0, *(void *)(v45 + 16) + 1, 1, v45);
        v44[v41] = v45;
      }
      unint64_t v48 = *(void *)(v45 + 16);
      unint64_t v47 = *(void *)(v45 + 24);
      if (v48 >= v47 >> 1)
      {
        unint64_t v45 = sub_24FB2ABC8(v47 > 1, v48 + 1, 1, v45);
        v44[v41] = v45;
      }
      uint64_t v32 = v82;
      *(void *)(v45 + 16) = v48 + 1;
      v72((char *)(v45 + v75 + v48 * v74), v78, v43);
      uint64_t v8 = v66;
      uint64_t v5 = v67;
      (*v85)(v66, v67);
      uint64_t v2 = v68;
      uint64_t v25 = v83;
    }
LABEL_11:
    v35 += v36;
    if (!--v33) {
      goto LABEL_3;
    }
    v37(v8, v35, v5);
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_24FB3B2C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  v7[2] = a2;
  uint64_t v5 = sub_24FB0C978((void (*)(void *__return_ptr, uint64_t))sub_24FB3B658, (uint64_t)v7, v4);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t result = type metadata accessor for DocumentTableView.TableDatum(0);
  *(void *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_24FB3B344@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24FB3B2C8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24FB3B364@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v1 = sub_24FB46E68();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46D18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - v10;
  sub_24FB46C68();
  sub_24FB0CBEC();
  sub_24FB46D38();
  sub_24FAD5794((uint64_t)v4, &qword_269A4F6C0);
  sub_24FB46D48();
  sub_24FB1D3BC();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  uint64_t v12 = (void *)sub_24FB48358();
  id v13 = objc_msgSend(v12, sel_string);

  uint64_t v14 = sub_24FB48068();
  uint64_t v16 = v15;

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v18 = v20;
  uint64_t *v20 = v14;
  v18[1] = v16;
  return result;
}

uint64_t sub_24FB3B5B8()
{
  return sub_24FB3B600((unint64_t *)&unk_269A50408, (void (*)(uint64_t))type metadata accessor for DocumentTableElement);
}

uint64_t sub_24FB3B600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentElementTableParser()
{
  return &type metadata for DocumentElementTableParser;
}

uint64_t sub_24FB3B658@<X0>(uint64_t *a1@<X8>)
{
  return sub_24FB3B364(a1);
}

uint64_t DocumentTableElement.init(id:headers:tableData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for DocumentTableElement();
  *(void *)(a4 + *(int *)(result + 20)) = a2;
  *(void *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for DocumentTableElement()
{
  uint64_t result = qword_269A50438;
  if (!qword_269A50438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DocumentTableElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46FB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DocumentTableElement.rowHeaders.getter()
{
  type metadata accessor for DocumentTableElement();
  return swift_bridgeObjectRetain();
}

uint64_t DocumentTableElement.tableData.getter()
{
  type metadata accessor for DocumentTableElement();
  return swift_bridgeObjectRetain();
}

uint64_t DocumentTableElement.makeView()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DocumentTableElement() + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

_UNKNOWN **sub_24FB3B868()
{
  return &protocol witness table for DocumentTableView;
}

unint64_t sub_24FB3B878()
{
  unint64_t result = qword_269A50418;
  if (!qword_269A50418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50418);
  }
  return result;
}

uint64_t sub_24FB3B8CC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24FB3B998(&qword_269A50420, (void (*)(uint64_t))type metadata accessor for DocumentTableElement);
  uint64_t result = sub_24FB3B998((unint64_t *)&unk_269A50428, (void (*)(uint64_t))type metadata accessor for DocumentTableElement);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24FB3B950()
{
  return sub_24FB3B998(&qword_269A4F4D8, MEMORY[0x263F07508]);
}

uint64_t sub_24FB3B998(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentTableElement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24FB46FB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DocumentTableElement(uint64_t a1)
{
  uint64_t v2 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB3BDA8);
}

uint64_t sub_24FB3BDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentTableElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB3BE7C);
}

uint64_t sub_24FB3BE7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB3BF38()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DocumentTableView.RowHeader.init(text:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t result = type metadata accessor for DocumentTableView.RowHeader(0);
  uint64_t v7 = (void *)(a3 + *(int *)(result + 20));
  void *v7 = a1;
  v7[1] = a2;
  return result;
}

uint64_t type metadata accessor for DocumentTableView.RowHeader(uint64_t a1)
{
  return sub_24FAE8DF8(a1, (uint64_t *)&unk_269A50460);
}

uint64_t DocumentTableView.TableDatum.init(cellInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t result = type metadata accessor for DocumentTableView.TableDatum(0);
  *(void *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t type metadata accessor for DocumentTableView.TableDatum(uint64_t a1)
{
  return sub_24FAE8DF8(a1, qword_269A50470);
}

uint64_t DocumentTableView.RowHeader.text.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DocumentTableView.RowHeader(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DocumentTableView.TableDatum.cellInfo.getter()
{
  type metadata accessor for DocumentTableView.TableDatum(0);
  return swift_bridgeObjectRetain();
}

uint64_t DocumentTableView.TableDatum.hash(into:)()
{
  sub_24FB46FB8();
  sub_24FB3C8EC(&qword_269A4F4D8, MEMORY[0x263F07508]);
  sub_24FB47FD8();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DocumentTableView.TableDatum(0) + 20));
  uint64_t result = sub_24FB48738();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24FB480C8();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static DocumentTableView.TableDatum.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for DocumentTableView.TableDatum(0) + 20);
  int v5 = *(void **)(a1 + v4);
  uint64_t v6 = *(void **)(a2 + v4);
  return sub_24FB2237C(v5, v6);
}

uint64_t DocumentTableView.TableDatum.hashValue.getter()
{
  return sub_24FB48748();
}

uint64_t sub_24FB3C2B8()
{
  return sub_24FB48748();
}

uint64_t sub_24FB3C2FC()
{
  return sub_24FB48748();
}

uint64_t sub_24FB3C338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void **)(a1 + v6);
  uint64_t v8 = *(void **)(a2 + v6);
  return sub_24FB2237C(v7, v8);
}

uint64_t DocumentTableView.tableData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DocumentTableView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_24FB475F8();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50448);
  return sub_24FB3C40C(a1, a2, a3 + *(int *)(v6 + 44));
}

uint64_t sub_24FB3C40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50498);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  int v38 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v29 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A504A0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v42 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v29 - v12;
  *(void *)id v13 = sub_24FB47538();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504A8);
  uint64_t v44 = a1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504B8);
  sub_24FAD57F0(&qword_269A504C0, &qword_269A504B0);
  sub_24FB3C8EC(&qword_269A4F4D8, MEMORY[0x263F07508]);
  sub_24FB3D30C();
  sub_24FB47DE8();
  sub_24FB47E58();
  sub_24FB47238();
  uint64_t v36 = v44;
  int v35 = v45;
  uint64_t v34 = v46;
  int v33 = v47;
  uint64_t v31 = v49;
  uint64_t v32 = v48;
  uint64_t v30 = sub_24FB47C38();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = a2;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504D8);
  sub_24FAD57F0(&qword_269A504E0, &qword_269A504D0);
  sub_24FAD57F0(&qword_269A504E8, &qword_269A504D8);
  uint64_t v15 = v37;
  sub_24FB47DE8();
  uint64_t v16 = v42;
  sub_24FB3D388((uint64_t)v13, v42);
  uint64_t v18 = v38;
  uint64_t v17 = v39;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  uint64_t v20 = v40;
  v19(v38, v15, v40);
  uint64_t v21 = v16;
  uint64_t v22 = v41;
  sub_24FB3D388(v21, v41);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A504F0);
  uint64_t v24 = v22 + *(int *)(v23 + 48);
  *(void *)uint64_t v24 = v36;
  *(unsigned char *)(v24 + 8) = v35;
  *(void *)(v24 + 16) = v34;
  *(unsigned char *)(v24 + 24) = v33;
  uint64_t v26 = v30;
  uint64_t v25 = v31;
  *(void *)(v24 + 32) = v32;
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = KeyPath;
  *(void *)(v24 + 56) = v26;
  v19((char *)(v22 + *(int *)(v23 + 64)), v18, v20);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  swift_retain();
  swift_retain();
  v27(v15, v20);
  sub_24FB3D3F0((uint64_t)v13);
  v27(v18, v20);
  swift_release();
  swift_release();
  return sub_24FB3D3F0(v42);
}

uint64_t sub_24FB3C8A4()
{
  return sub_24FB3C8EC((unint64_t *)&unk_269A50450, (void (*)(uint64_t))type metadata accessor for DocumentTableView.TableDatum);
}

uint64_t sub_24FB3C8EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB3C934()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_24FB3C950@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for DocumentTableView.RowHeader(0) + 20));
  uint64_t v4 = v3[1];
  *(void *)&v23[0] = *v3;
  *((void *)&v23[0] + 1) = v4;
  sub_24FB285EC();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24FB47A18();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_24FB478C8();
  uint64_t v10 = sub_24FB47988();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_24FADAA34(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_24FB47E68();
  sub_24FB1B84C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1, v17, v18, v10, v12, v16, v14);
  sub_24FADAA34(v10, v12, v16);
  swift_bridgeObjectRelease();
  long long v19 = v23[7];
  *(_OWORD *)(a2 + 96) = v23[6];
  *(_OWORD *)(a2 + 112) = v19;
  *(_OWORD *)(a2 + 128) = v23[8];
  long long v20 = v23[3];
  *(_OWORD *)(a2 + 32) = v23[2];
  *(_OWORD *)(a2 + 48) = v20;
  long long v21 = v23[5];
  *(_OWORD *)(a2 + 64) = v23[4];
  *(_OWORD *)(a2 + 80) = v21;
  __n128 result = (__n128)v23[1];
  *(_OWORD *)a2 = v23[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24FB3CAC0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_24FB47538();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A504F8);
  type metadata accessor for DocumentTableView.TableDatum(0);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A50500);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A50508);
  sub_24FAD57F0(&qword_269A50510, &qword_269A50500);
  sub_24FB3D45C();
  return sub_24FB47DE8();
}

double sub_24FB3CBDC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[1];
  *(void *)&long long v21 = *a1;
  *((void *)&v21 + 1) = v3;
  sub_24FB285EC();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24FB47A18();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_24FB47E68();
  sub_24FB1B84C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v11, v12, v4, v6, v10, v8);
  sub_24FADAA34(v4, v6, v10);
  swift_bridgeObjectRelease();
  long long v27 = v19[6];
  long long v28 = v19[7];
  long long v29 = v19[8];
  long long v23 = v19[2];
  long long v24 = v19[3];
  long long v25 = v19[4];
  long long v26 = v19[5];
  long long v21 = v19[0];
  long long v22 = v19[1];
  char v13 = sub_24FB47828();
  char v20 = 1;
  long long v14 = v28;
  *(_OWORD *)(a2 + 96) = v27;
  *(_OWORD *)(a2 + 112) = v14;
  *(_OWORD *)(a2 + 128) = v29;
  long long v15 = v24;
  *(_OWORD *)(a2 + 32) = v23;
  *(_OWORD *)(a2 + 48) = v15;
  long long v16 = v26;
  *(_OWORD *)(a2 + 64) = v25;
  *(_OWORD *)(a2 + 80) = v16;
  long long v17 = v22;
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v17;
  *(unsigned char *)(a2 + 144) = v13;
  *(_DWORD *)(a2 + 145) = v19[0];
  *(_DWORD *)(a2 + 148) = *(_DWORD *)((char *)v19 + 3);
  double result = 0.0;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(unsigned char *)(a2 + 184) = v20;
  return result;
}

uint64_t sub_24FB3CD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  *(void *)a1 = sub_24FB475F8();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50448);
  return sub_24FB3C40C(v4, v3, a1 + *(int *)(v5 + 44));
}

uint64_t destroy for DocumentTableView()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s16MarkdownDocument17DocumentTableViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DocumentTableView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DocumentTableView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DocumentTableView()
{
  return &type metadata for DocumentTableView;
}

uint64_t getEnumTagSinglePayload for DocumentTableView.RowHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB3CEE8);
}

uint64_t sub_24FB3CEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentTableView.RowHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB3CFC0);
}

uint64_t sub_24FB3CFC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB3D080()
{
  return sub_24FB3D240();
}

uint64_t getEnumTagSinglePayload for DocumentTableView.TableDatum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB3D0A0);
}

uint64_t sub_24FB3D0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24FB46FB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentTableView.TableDatum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB3D174);
}

uint64_t sub_24FB3D174(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24FB46FB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24FB3D230()
{
  return sub_24FB3D240();
}

uint64_t sub_24FB3D240()
{
  uint64_t result = sub_24FB46FB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB3D2D0()
{
  return sub_24FAD57F0(&qword_269A50488, &qword_269A50490);
}

unint64_t sub_24FB3D30C()
{
  unint64_t result = qword_269A504C8;
  if (!qword_269A504C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A504B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A504C8);
  }
  return result;
}

uint64_t sub_24FB3D388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A504A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB3D3F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A504A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24FB3D450@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24FB3D45C()
{
  unint64_t result = qword_269A50518;
  if (!qword_269A50518)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269A50508);
    sub_24FB3D30C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50518);
  }
  return result;
}

uint64_t InlineElementTextColorParser.parseElement(attributedString:run:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24FB46D18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB3D81C();
  sub_24FB46C58();
  swift_release();
  if (!v15[1]) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  }
  uint64_t v11 = sub_24FB47C48();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_24FB46C68();
  v15[4] = v11;
  swift_retain();
  sub_24FB0CBEC();
  uint64_t v12 = (void (*)(void *, void))sub_24FB46D28();
  sub_24FB1D4B8();
  sub_24FB46E78();
  v12(v15, 0);
  swift_release();
  sub_24FB390BC((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

uint64_t sub_24FB3D720()
{
  return sub_24FB48018() & 1;
}

void sub_24FB3D77C()
{
}

uint64_t sub_24FB3D7A4()
{
  return 8;
}

uint64_t sub_24FB3D7B0()
{
  return swift_release();
}

uint64_t sub_24FB3D7B8(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_24FB3D7C8()
{
  return sub_24FB47FE8();
}

void *sub_24FB3D810(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_24FB3D81C()
{
  unint64_t result = qword_269A50520;
  if (!qword_269A50520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50520);
  }
  return result;
}

ValueMetadata *type metadata accessor for InlineElementTextColorParser()
{
  return &type metadata for InlineElementTextColorParser;
}

void sub_24FB3D888()
{
  static TextColorAttribute.name = 0x6C6F635F74786574;
  qword_269A58FC0 = 0xEA0000000000726FLL;
}

uint64_t *TextColorAttribute.name.unsafeMutableAddressor()
{
  if (qword_269A4F3A0 != -1) {
    swift_once();
  }
  return &static TextColorAttribute.name;
}

uint64_t static TextColorAttribute.name.getter()
{
  if (qword_269A4F3A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static TextColorAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static TextColorAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_269A4F3A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static TextColorAttribute.name = a1;
  qword_269A58FC0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TextColorAttribute.name.modify())()
{
  if (qword_269A4F3A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24FB3DA98()
{
  return sub_24FB46EF8();
}

uint64_t sub_24FB3DAF8()
{
  if (qword_269A4F3A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static TextColorAttribute.name;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for TextColorAttribute()
{
  return &type metadata for TextColorAttribute;
}

unint64_t sub_24FB3DB8C()
{
  unint64_t result = qword_269A50530;
  if (!qword_269A50530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50530);
  }
  return result;
}

uint64_t static GlossaryLinkHandler.GlossaryLinkHandlerError.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t GlossaryLinkHandler.GlossaryLinkHandlerError.hash(into:)()
{
  return sub_24FB48738();
}

uint64_t GlossaryLinkHandler.GlossaryLinkHandlerError.hashValue.getter()
{
  return sub_24FB48748();
}

uint64_t GlossaryLinkHandler.GlossaryLink.id.getter(uint64_t a1)
{
  return a1;
}

uint64_t GlossaryLinkHandler.GlossaryLink.content.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t GlossaryLinkHandler.GlossaryLink.init(url:)(uint64_t a1)
{
  uint64_t result = sub_24FB3DDDC(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t GlossaryLinkHandler.getGlossaryLink(url:)(uint64_t a1)
{
  uint64_t v3 = sub_24FB46F68();
  __n128 v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v6, a1, v4);
  uint64_t result = sub_24FB3DDDC((uint64_t)v6);
  if (v1) {
    return v9;
  }
  return result;
}

uint64_t sub_24FB3DDDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50540);
  MEMORY[0x270FA5388](v2 - 8);
  __n128 v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24FB46978();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v48 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v60 = (char *)&v48 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC28);
  MEMORY[0x270FA5388](v13 - 8);
  long long v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24FB469D8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB469A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_24FAD5794((uint64_t)v15, &qword_269A4FC28);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    uint64_t v20 = sub_24FB46988();
    if (v20)
    {
      uint64_t v54 = v19;
      uint64_t v55 = v17;
      uint64_t v56 = v16;
      uint64_t v58 = v6;
      uint64_t v52 = v4;
      uint64_t v53 = a1;
      uint64_t v21 = *(void *)(v20 + 16);
      if (!v21) {
        goto LABEL_21;
      }
      long long v63 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
      unint64_t v22 = v20 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      uint64_t v62 = *(void *)(v58 + 72);
      long long v23 = (void (**)(char *, uint64_t))(v58 + 8);
      uint64_t v57 = v20;
      swift_bridgeObjectRetain();
      unint64_t v24 = v22;
      uint64_t v59 = v21;
      while (1)
      {
        v63(v10, v24, v5);
        if (sub_24FB46958() == 25705 && v25 == 0xE200000000000000) {
          break;
        }
        char v26 = sub_24FB48688();
        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_13;
        }
        (*v23)(v10, v5);
        v24 += v62;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v27 = v58 + 32;
      long long v28 = v60;
      unint64_t v50 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
      v50(v60, v10, v5);
      uint64_t v29 = sub_24FB46968();
      uint64_t v31 = v30;
      uint64_t v51 = v27;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v27 - 24);
      v32(v28, v5);
      if (v31)
      {
        uint64_t v49 = v29;
        uint64_t v60 = v31;
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v34 = 0;
        while (1)
        {
          uint64_t v35 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
            __break(1u);
            return result;
          }
          v63(v61, v22, v5);
          if (sub_24FB46958() == 0x746E65746E6F63 && v36 == 0xE700000000000000) {
            break;
          }
          char v37 = sub_24FB48688();
          swift_bridgeObjectRelease();
          if (v37) {
            goto LABEL_26;
          }
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v61, v5);
          ++v34;
          v22 += v62;
          if (v35 == v59)
          {
            swift_bridgeObjectRelease();
            uint64_t v38 = 1;
            uint64_t v39 = (uint64_t)v52;
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
LABEL_26:
        swift_bridgeObjectRelease();
        uint64_t v39 = (uint64_t)v52;
        v50(v52, v61, v5);
        uint64_t v38 = 0;
LABEL_27:
        uint64_t v41 = v58;
        uint64_t v43 = v55;
        uint64_t v42 = v56;
        uint64_t v44 = v54;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v39, v38, 1, v5);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v5) == 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
          sub_24FAD5794(v39, &qword_269A50540);
          goto LABEL_22;
        }
        sub_24FB46968();
        uint64_t v46 = v45;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
        v32((char *)v39, v5);
        if (v46)
        {
          uint64_t v47 = sub_24FB46F68();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v53, v47);
          return v49;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_21:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
      }
LABEL_22:
      a1 = v53;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  sub_24FB3E5F8();
  swift_allocError();
  swift_willThrow();
  uint64_t v40 = sub_24FB46F68();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
}

unint64_t sub_24FB3E4AC()
{
  unint64_t result = qword_269A50538;
  if (!qword_269A50538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50538);
  }
  return result;
}

ValueMetadata *type metadata accessor for GlossaryLinkHandler()
{
  return &type metadata for GlossaryLinkHandler;
}

unsigned char *storeEnumTagSinglePayload for GlossaryLinkHandler.GlossaryLinkHandlerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24FB3E5B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GlossaryLinkHandler.GlossaryLinkHandlerError()
{
  return &type metadata for GlossaryLinkHandler.GlossaryLinkHandlerError;
}

ValueMetadata *type metadata accessor for GlossaryLinkHandler.GlossaryLink()
{
  return &type metadata for GlossaryLinkHandler.GlossaryLink;
}

unint64_t sub_24FB3E5F8()
{
  unint64_t result = qword_269A50548;
  if (!qword_269A50548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50548);
  }
  return result;
}

uint64_t _s16MarkdownDocument13AssetLocationO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46F68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AssetLocation();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (void **)((char *)&v24 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50568);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void **)&v16[*(int *)(v17 + 56)];
  sub_24FB3EEC4(a1, (uint64_t)v16);
  sub_24FB3EEC4(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24FB3EEC4((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v18, v4);
      char v19 = MEMORY[0x25336D2A0](v10, v7);
      uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
LABEL_9:
      sub_24FB3EC04((uint64_t)v16);
      return v19 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    sub_24FB3EEC4((uint64_t)v16, (uint64_t)v13);
    uint64_t v21 = *v13;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      unint64_t v22 = *v18;
      sub_24FB3EF88();
      char v19 = sub_24FB48378();

      goto LABEL_9;
    }
  }
  sub_24FB3EF28((uint64_t)v16);
  char v19 = 0;
  return v19 & 1;
}

char *initializeBufferWithCopyOfBuffer for AssetLocation(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24FB46F68();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      uint64_t v9 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for AssetLocation(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_24FB46F68();
    int v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
    v3(a1, v2);
  }
  else
  {
    uint64_t v4 = *a1;
  }
}

void **initializeWithCopy for AssetLocation(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24FB46F68();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    int v5 = *a2;
    *a1 = *a2;
    id v6 = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for AssetLocation(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_24FB3EC04((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_24FB46F68();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      int v5 = *a2;
      *a1 = *a2;
      id v6 = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24FB3EC04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AssetLocation()
{
  uint64_t result = qword_269A50550;
  if (!qword_269A50550) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for AssetLocation(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24FB46F68();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AssetLocation(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24FB3EC04((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24FB46F68();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24FB3EE2C()
{
  uint64_t result = sub_24FB46F68();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_24FB3EEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB3EF28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A50568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24FB3EF88()
{
  unint64_t result = qword_269A50570;
  if (!qword_269A50570)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269A50570);
  }
  return result;
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return sub_24FB46EB8();
}

uint64_t AttributeScopes.MarkdownDocumentAttributes.swiftUI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24FB46AC8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_24FB3F094()
{
  return sub_24FB3F628(&qword_269A50578);
}

uint64_t type metadata accessor for AttributeScopes.MarkdownDocumentAttributes()
{
  uint64_t result = qword_269A50590;
  if (!qword_269A50590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24FB3F114()
{
  return sub_24FB3F628((unint64_t *)&unk_269A50580);
}

void sub_24FB3F150()
{
  sub_24FB3F628(&qword_269A505A0);
  JUMPOUT(0x25336CD90);
}

void sub_24FB3F1B8()
{
  sub_24FB3F628(&qword_269A505A0);
  JUMPOUT(0x25336CDA0);
}

uint64_t _s26MarkdownDocumentAttributesVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s26MarkdownDocumentAttributesVwxx(uint64_t a1)
{
  uint64_t v2 = sub_24FB46AC8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s26MarkdownDocumentAttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s26MarkdownDocumentAttributesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s26MarkdownDocumentAttributesVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s26MarkdownDocumentAttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s26MarkdownDocumentAttributesVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24FB3F494);
}

uint64_t sub_24FB3F494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s26MarkdownDocumentAttributesVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24FB3F514);
}

uint64_t sub_24FB3F514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24FB46AC8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24FB3F584()
{
  uint64_t result = sub_24FB46AC8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24FB3F628(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24FB3F66C(uint64_t a1)
{
  uint64_t v113 = a1;
  uint64_t v112 = sub_24FB46DB8();
  uint64_t v1 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  unint64_t v111 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v88 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_24FB46E08();
  char v102 = *(void (**)(char *))(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v82 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_24FB46C78();
  uint64_t v6 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v74 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v72 = (char *)&v71 - v9;
  MEMORY[0x270FA5388](v10);
  long long v109 = (char *)&v71 - v11;
  uint64_t v101 = sub_24FB46C88();
  uint64_t v12 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v98 = (char *)&v71 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v85 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = (char *)&v71 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505A8);
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  long long v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24FB46C98();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v71 - v29;
  sub_24FB46CB8();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v75 = v30;
  unint64_t v89 = v31;
  v31(v27, (uint64_t)v30, v24);
  sub_24FB40288(&qword_269A505B0, MEMORY[0x263F067C8]);
  unint64_t v90 = v27;
  uint64_t v95 = v24;
  sub_24FB48108();
  uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v32 = *(int *)(v21 + 44);
  uint64_t v96 = v23;
  int v33 = &v23[v32];
  uint64_t v100 = v12 + 16;
  uint64_t v93 = (void (**)(char *, uint64_t))(v12 + 8);
  char v104 = (void (**)(char *))(v6 + 16);
  uint64_t v91 = v25 + 16;
  char v103 = (void (**)(char *, uint64_t))(v25 + 8);
  long long v107 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  char v108 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v92 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v102 + 48);
  uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))((char *)v102 + 32);
  uint64_t v79 = v1 + 16;
  uint64_t v77 = v1;
  uint64_t v110 = (void (**)(char *, uint64_t))(v1 + 8);
  unint64_t v78 = (void (**)(char *, uint64_t))((char *)v102 + 8);
  unint64_t v76 = MEMORY[0x263F8EE78];
  uint64_t v73 = v6;
  int v86 = (void (**)(char *, uint64_t))(v6 + 8);
  char v84 = &v23[v32];
  while (1)
  {
    uint64_t v34 = v98;
    uint64_t v35 = v101;
    v94(v98, v33, v101);
    sub_24FB40288(&qword_269A50050, MEMORY[0x263F067C8]);
    uint64_t v36 = v99;
    uint64_t v37 = (uint64_t)v96;
    uint64_t v38 = v95;
    sub_24FB482A8();
    sub_24FB40288(&qword_269A50058, MEMORY[0x263F067B8]);
    char v39 = sub_24FB48018();
    uint64_t v40 = *v93;
    (*v93)(v36, v35);
    v40(v34, v35);
    if (v39) {
      break;
    }
    uint64_t v41 = (void (*)(char *, void))sub_24FB482C8();
    uint64_t v42 = *v104;
    uint64_t v43 = v97;
    uint64_t v44 = v106;
    (*v104)(v97);
    v41(v114, 0);
    uint64_t v45 = v90;
    v89(v90, v37, v38);
    sub_24FB482B8();
    (*v103)(v45, v38);
    uint64_t v46 = *v108;
    (*v108)(v43, 0, 1, v44);
    uint64_t v47 = *v107;
    if ((*v107)(v43, 1, v44) == 1) {
      goto LABEL_22;
    }
    char v102 = v42;
    uint64_t v48 = *v92;
    (*v92)(v109, v43, v44);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v71 - 2) = v50;
    swift_getKeyPath();
    sub_24FB0C1CC();
    uint64_t v51 = (uint64_t)v88;
    sub_24FB46C58();
    swift_release();
    uint64_t v52 = v105;
    if ((*v87)(v51, 1, v105) == 1)
    {
      sub_24FAD5794(v51, &qword_269A4F698);
      uint64_t v53 = 1;
      uint64_t v54 = (uint64_t)v85;
      int v33 = v84;
    }
    else
    {
      uint64_t v83 = v48;
      uint64_t v55 = v82;
      (*v80)(v82, v51, v52);
      uint64_t v56 = sub_24FB46DC8();
      uint64_t v57 = *(void *)(v56 + 16);
      if (v57)
      {
        unint64_t v58 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
        uint64_t v81 = v56;
        unint64_t v59 = v56 + v58;
        uint64_t v60 = *(void *)(v77 + 72);
        uint64_t v61 = *(void (**)(char *, unint64_t, uint64_t))(v77 + 16);
        while (1)
        {
          uint64_t v62 = v111;
          uint64_t v63 = v112;
          v61(v111, v59, v112);
          uint64_t v64 = sub_24FB46DA8();
          (*v110)(v62, v63);
          if (v64 == v113) {
            break;
          }
          v59 += v60;
          if (!--v57)
          {
            swift_bridgeObjectRelease();
            uint64_t v52 = v105;
            uint64_t v55 = v82;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        (*v78)(v82, v105);
        uint64_t v54 = (uint64_t)v85;
        uint64_t v44 = v106;
        ((void (*)(char *, char *, uint64_t))v102)(v85, v109, v106);
        uint64_t v53 = 0;
        int v33 = v84;
        uint64_t v48 = v83;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_12:
        uint64_t v54 = (uint64_t)v85;
        int v33 = v84;
        uint64_t v48 = v83;
        (*v78)(v55, v52);
        uint64_t v53 = 1;
        uint64_t v44 = v106;
      }
    }
    v46((char *)v54, v53, 1, v44);
    (*v86)(v109, v44);
    if (v47((char *)v54, 1, v44) == 1)
    {
      sub_24FAD5794(v54, &qword_269A4FC50);
    }
    else
    {
      uint64_t v65 = v72;
      v48(v72, (char *)v54, v44);
      v48(v74, v65, v44);
      unint64_t v66 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v66 = sub_24FB2ABC8(0, *(void *)(v66 + 16) + 1, 1, v66);
      }
      unint64_t v68 = *(void *)(v66 + 16);
      unint64_t v67 = *(void *)(v66 + 24);
      if (v68 >= v67 >> 1) {
        unint64_t v66 = sub_24FB2ABC8(v67 > 1, v68 + 1, 1, v66);
      }
      *(void *)(v66 + 16) = v68 + 1;
      unint64_t v69 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      unint64_t v76 = v66;
      v48((char *)(v66 + v69 + *(void *)(v73 + 72) * v68), v74, v44);
    }
  }
  (*v108)(v97, 1, 1, v106);
LABEL_22:
  sub_24FAD5794(v37, &qword_269A505A8);
  (*v103)(v75, v38);
  return v76;
}

uint64_t sub_24FB40288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB402D8()
{
  return 8;
}

uint64_t sub_24FB402E4()
{
  return swift_release();
}

uint64_t sub_24FB402EC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB40300(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t MarkdownParser.makeDocumentViewModel(attributedString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MarkdownParser.makeDocumentElements(attributedString:)(a1, a2, a3, a4, a5);
  type metadata accessor for DocumentViewModel();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
  sub_24FB47108();
  swift_endAccess();
  return v5;
}

char *MarkdownParser.makeDocumentViewModel(markdown:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = sub_24FB40444(a1, a2, KeyPath, a3, a4, a5, a6);
  swift_release();
  return v13;
}

char *sub_24FB40444(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = a3;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v36 = a1;
  unint64_t v37 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC20);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24FB46BC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24FB46BD8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24FB46BF8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24FB46D18();
  uint64_t v30 = *(void *)(v21 - 8);
  uint64_t v31 = v21;
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))(v17, *MEMORY[0x263F06760], v14, v22);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F06748], v10);
  sub_24FAE9930(v36, v37);
  swift_retain();
  sub_24FB46BE8();
  uint64_t v25 = sub_24FB46F68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
  type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
  sub_24FB46658(&qword_269A505A0, (void (*)(uint64_t))type metadata accessor for AttributeScopes.MarkdownDocumentAttributes);
  uint64_t v26 = v39;
  sub_24FB46CF8();
  if (!v26)
  {
    uint64_t v27 = MarkdownParser.makeDocumentElements(attributedString:)((uint64_t)v24, v32, v33, v34, v35);
    type metadata accessor for DocumentViewModel();
    uint64_t v20 = (char *)swift_allocObject();
    swift_beginAccess();
    uint64_t v40 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
    sub_24FB47108();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  }
  return v20;
}

char *MarkdownParser.makeDocumentViewModel<A>(markdown:including:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v40 = a8;
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  unint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v36 = a1;
  uint64_t v39 = a9;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24FB46BC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24FB46BD8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24FB46BF8();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v21 = sub_24FB46D18();
  uint64_t v30 = *(void *)(v21 - 8);
  uint64_t v31 = v21;
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v17 + 104))(v19, *MEMORY[0x263F06760], v16, v22);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F06748], v12);
  sub_24FAE9930(v36, v37);
  swift_retain();
  sub_24FB46BE8();
  uint64_t v25 = sub_24FB46F68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
  uint64_t v26 = v41;
  sub_24FB46CF8();
  if (!v26)
  {
    uint64_t v27 = MarkdownParser.makeDocumentElements(attributedString:)((uint64_t)v24, v32, v33, v34, v35);
    type metadata accessor for DocumentViewModel();
    uint64_t v19 = (char *)swift_allocObject();
    swift_beginAccess();
    uint64_t v42 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
    sub_24FB47108();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  }
  return v19;
}

uint64_t MarkdownParser.makeDocumentViewModelWithFormat(markdown:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a5;
  uint64_t v22 = a4;
  uint64_t v9 = sub_24FB480B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB480A8();
  sub_24FB48088();
  if (v13)
  {
    uint64_t v21 = a6;
    sub_24FB48038();
    swift_bridgeObjectRelease();
    sub_24FB480A8();
    uint64_t v14 = sub_24FB48078();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v16 >> 60 != 15)
    {
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v17 = (uint64_t)sub_24FB40444(v14, v16, KeyPath, v22, v23, v21, a7);
      swift_release();
      sub_24FAE9988(v14, v16);
      return v17;
    }
    uint64_t v17 = 1;
  }
  else
  {
    uint64_t v17 = 0;
  }
  sub_24FB44DA8();
  swift_allocError();
  *uint64_t v18 = v17;
  swift_willThrow();
  return v17;
}

uint64_t sub_24FB40E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24FB46C98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24FB46D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a3, a1, v10);
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v25 = v9;
    uint64_t v26 = a3;
    uint64_t v27 = v7;
    uint64_t v28 = v6;
    uint64_t v32 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24FB2E52C(0, v11, 0);
    uint64_t v13 = 0;
    uint64_t v12 = v32;
    do
    {
      long long v29 = *(_OWORD *)(a2 + 16 * v13 + 32);
      uint64_t v14 = *((void *)&v29 + 1);
      unint64_t v15 = *(uint64_t (**)(void, uint64_t))(*((void *)&v29 + 1) + 16);
      long long v31 = v29;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
      uint64_t v17 = v29;
      uint64_t v18 = v15(v29, v14);
      uint64_t v32 = v12;
      unint64_t v20 = *(void *)(v12 + 16);
      unint64_t v19 = *(void *)(v12 + 24);
      if (v20 >= v19 >> 1) {
        uint64_t v18 = sub_24FB2E52C(v19 > 1, v20 + 1, 1);
      }
      ++v13;
      MEMORY[0x270FA5388](v18);
      uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v23 + 16))(v22, boxed_opaque_existential_1, v17);
      sub_24FB44A84(v20, (uint64_t)v22, &v32, v17, v14, (uint64_t (*)(uint64_t *, uint64_t))sub_24FAF8CA0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      uint64_t v12 = v32;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    uint64_t v7 = v27;
    uint64_t v6 = v28;
    uint64_t v9 = v25;
    a3 = v26;
  }
  sub_24FB46CB8();
  swift_bridgeObjectRetain();
  sub_24FB44DFC((uint64_t)v9, v12, a3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24FB41110@<X0>(void (**a1)(unsigned char *)@<X0>, void (**a2)(unsigned char *)@<X8>)
{
  uint64_t v151 = a1;
  uint64_t v131 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F8A0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v110 = &v108[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505D0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v125 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC20);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v128 = &v108[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v116 = &v108[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v119 = &v108[-v12];
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505D8);
  MEMORY[0x270FA5388](v124);
  long long v123 = &v108[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F6C0);
  uint64_t v14 = MEMORY[0x270FA5388](v126);
  uint64_t v118 = &v108[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v115 = &v108[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = &v108[-v18];
  uint64_t v122 = sub_24FB46B68();
  uint64_t v150 = *(char **)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v121 = &v108[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v152 = sub_24FB46C78();
  uint64_t v137 = *(char **)(v152 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v152);
  uint64_t v153 = &v108[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v154 = &v108[-v22];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v144 = &v108[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v147 = sub_24FB46C88();
  uint64_t v149 = *(void *)(v147 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v147);
  uint64_t v143 = &v108[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  uint64_t v146 = &v108[-v27];
  uint64_t v145 = sub_24FB46C98();
  uint64_t v148 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  long long v29 = &v108[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = sub_24FB46D18();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = &v108[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505A8);
  uint64_t v35 = v34 - 8;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = &v108[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v36);
  uint64_t v40 = &v108[-v39];
  uint64_t v41 = *(void (**)(uint64_t, void (**)(unsigned char *), uint64_t))(v31 + 16);
  v41((uint64_t)a2, v151, v30);
  v41((uint64_t)v33, a2, v30);
  sub_24FB46CB8();
  uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
  uint64_t v112 = v33;
  uint64_t v114 = v30;
  uint64_t v113 = v31 + 8;
  unint64_t v111 = v42;
  v42(v33, v30);
  uint64_t v43 = v148;
  uint64_t v44 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v148 + 16);
  uint64_t v45 = v145;
  uint64_t v135 = v148 + 16;
  uint64_t v134 = v44;
  v44(v38, (uint64_t)v29, v145);
  uint64_t v46 = sub_24FB46658(&qword_269A50050, MEMORY[0x263F067C8]);
  uint64_t v47 = v146;
  uint64_t v141 = v46;
  sub_24FB48288();
  uint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v43 + 8);
  uint64_t v136 = v29;
  uint64_t v148 = v43 + 8;
  uint64_t v133 = v48;
  v48(v29, v45);
  uint64_t v49 = v149;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 32))(&v38[*(int *)(v35 + 44)], v47, v147);
  sub_24FB463D0((uint64_t)v38, (uint64_t)v40);
  uint64_t v50 = *(int *)(v35 + 44);
  unint64_t v142 = v40;
  uint64_t v51 = &v40[v50];
  uint64_t v139 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 16);
  uint64_t v149 = v49 + 16;
  uint64_t v138 = (void (**)(unsigned char *, uint64_t))(v49 + 8);
  uint64_t v151 = (void (**)(unsigned char *))(v137 + 16);
  uint64_t v140 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v137 + 56);
  uint64_t v132 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v137 + 48);
  uint64_t v129 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v137 + 32);
  long long v120 = (void (**)(unsigned char *, uint64_t))(v150 + 8);
  uint64_t v150 = v137 + 8;
  unsigned int v109 = *MEMORY[0x263F1A5F8];
  uint64_t v130 = &v40[v50];
  while (1)
  {
    uint64_t v60 = v146;
    uint64_t v59 = v147;
    v139(v146, v51, v147);
    uint64_t v62 = (uint64_t)v142;
    uint64_t v61 = v143;
    uint64_t v63 = v145;
    sub_24FB482A8();
    sub_24FB46658(&qword_269A50058, MEMORY[0x263F067B8]);
    char v64 = sub_24FB48018();
    uint64_t v65 = *v138;
    (*v138)(v61, v59);
    v65(v60, v59);
    if (v64) {
      break;
    }
    unint64_t v66 = (void (*)(uint64_t *, void))sub_24FB482C8();
    uint64_t v67 = v152;
    unint64_t v68 = (void (*)(void))*v151;
    unint64_t v69 = v144;
    (*v151)(v144);
    v66(&v157, 0);
    uint64_t v70 = v136;
    v134(v136, v62, v63);
    sub_24FB482B8();
    v133(v70, v63);
    (*v140)(v69, 0, 1, v67);
    if ((*v132)(v69, 1, v67) == 1) {
      return sub_24FAD5794(v62, &qword_269A505A8);
    }
    uint64_t v71 = v154;
    (*v129)(v154, v69, v67);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&v108[-16] = MEMORY[0x270FA5388](KeyPath);
    swift_getKeyPath();
    sub_24FB1E5C8();
    sub_24FB46C58();
    swift_release();
    if (v158)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v68)(v153, v71, v67);
      uint64_t v73 = (char **)v150;
LABEL_11:
      uint64_t v80 = *v73;
      ((void (*)(unsigned char *, uint64_t))*v73)(v153, v67);
LABEL_12:
      uint64_t v92 = swift_getKeyPath();
      *(void *)&v108[-16] = MEMORY[0x270FA5388](v92);
      swift_getKeyPath();
      sub_24FB1D3FC();
      uint64_t v93 = (uint64_t)v128;
      uint64_t v94 = v154;
      sub_24FB46C58();
      swift_release();
      uint64_t v95 = sub_24FB46F68();
      int v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v93, 1, v95);
      sub_24FAD5794(v93, &qword_269A4FC20);
      if (v96 != 1)
      {
        uint64_t v137 = v80;
        uint64_t v52 = (uint64_t)v127;
        sub_24FB46C68();
        uint64_t v53 = swift_getKeyPath();
        *(void *)&v108[-16] = MEMORY[0x270FA5388](v53);
        swift_getKeyPath();
        uint64_t v155 = sub_24FB47C28();
        sub_24FB0CBEC();
        uint64_t v54 = (void (*)(uint64_t *, void))sub_24FB46D28();
        sub_24FB1D4B8();
        sub_24FB46E58();
        v54(&v157, 0);
        sub_24FAD5794(v52, &qword_269A4F6C0);
        sub_24FB46C68();
        uint64_t v55 = swift_getKeyPath();
        *(void *)&v108[-16] = MEMORY[0x270FA5388](v55);
        swift_getKeyPath();
        uint64_t v56 = v125;
        sub_24FB479D8();
        uint64_t v57 = sub_24FB479E8();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
        unint64_t v58 = (void (*)(uint64_t *, void))sub_24FB46D28();
        sub_24FB465A0();
        sub_24FB46E58();
        v58(&v157, 0);
        sub_24FAD5794(v52, &qword_269A4F6C0);
        ((void (*)(unsigned char *, uint64_t))v137)(v94, v152);
        goto LABEL_3;
      }
      uint64_t v97 = swift_getKeyPath();
      *(void *)&v108[-16] = MEMORY[0x270FA5388](v97);
      swift_getKeyPath();
      sub_24FB46C58();
      swift_release();
      if (v158)
      {
        uint64_t v98 = v152;
        uint64_t v51 = v130;
        goto LABEL_19;
      }
      uint64_t v98 = v152;
      uint64_t v51 = v130;
      if (v157 == 4)
      {
        uint64_t v99 = v154;
        sub_24FB46C68();
        uint64_t v100 = swift_getKeyPath();
        *(void *)&v108[-16] = MEMORY[0x270FA5388](v100);
        swift_getKeyPath();
        if (qword_269A4F350 != -1) {
          swift_once();
        }
        LODWORD(v137) = *(unsigned __int8 *)(qword_269A58F38 + 16);
        sub_24FB478D8();
        uint64_t v101 = sub_24FB478B8();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v103 = (uint64_t)v110;
        (*(void (**)(unsigned char *, void, uint64_t))(v102 + 104))(v110, v109, v101);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v103, 0, 1, v101);
        uint64_t v104 = sub_24FB478F8();
        sub_24FAD5794(v103, &qword_269A4F8A0);
        uint64_t v155 = v104;
        sub_24FB0CBEC();
        uint64_t v105 = (uint64_t)v118;
        uint64_t v106 = (void (*)(uint64_t *, void))sub_24FB46D28();
        sub_24FB1E6A8();
        sub_24FB46E58();
        v106(&v157, 0);
        sub_24FAD5794(v105, &qword_269A4F6C0);
        ((void (*)(unsigned char *, uint64_t))v80)(v99, v152);
      }
      else
      {
LABEL_19:
        ((void (*)(unsigned char *, uint64_t))v80)(v154, v98);
      }
    }
    else
    {
      uint64_t v74 = v157;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v68)(v153, v71, v67);
      uint64_t v73 = (char **)v150;
      if (v74 != 64) {
        goto LABEL_11;
      }
      uint64_t v75 = v121;
      sub_24FB46B38();
      uint64_t v76 = (uint64_t)v127;
      sub_24FB46C68();
      uint64_t v77 = (uint64_t)v123;
      sub_24FB46B78();
      sub_24FAD5794(v76, &qword_269A4F6C0);
      (*v120)(v75, v122);
      sub_24FB46658(&qword_269A505E8, MEMORY[0x263F06710]);
      unint64_t v78 = (char **)v150;
      uint64_t v79 = sub_24FB48298();
      sub_24FAD5794(v77, &qword_269A505D8);
      uint64_t v80 = *v78;
      ((void (*)(unsigned char *, uint64_t))*v78)(v153, v67);
      if (v79 != 1) {
        goto LABEL_12;
      }
      uint64_t v81 = swift_getKeyPath();
      *(void *)&v108[-16] = MEMORY[0x270FA5388](v81);
      swift_getKeyPath();
      unint64_t v117 = sub_24FB0C1CC();
      uint64_t v82 = v154;
      sub_24FB46C58();
      swift_release();
      uint64_t v83 = (uint64_t)v115;
      sub_24FB46C68();
      char v84 = v112;
      sub_24FB46B28();
      sub_24FB0CBEC();
      sub_24FB46658(&qword_269A505F0, MEMORY[0x263F06828]);
      uint64_t v137 = v80;
      uint64_t v85 = v114;
      sub_24FB46B58();
      v111(v84, v85);
      sub_24FAD5794(v83, &qword_269A4F6C0);
      uint64_t v86 = (uint64_t)v127;
      sub_24FB46C68();
      uint64_t v87 = swift_getKeyPath();
      *(void *)&v108[-16] = MEMORY[0x270FA5388](v87);
      swift_getKeyPath();
      uint64_t v155 = 128;
      char v156 = 0;
      uint64_t v88 = (void (*)(uint64_t *, void))sub_24FB46D28();
      sub_24FB46E58();
      v88(&v157, 0);
      sub_24FAD5794(v86, &qword_269A4F6C0);
      sub_24FB46C68();
      uint64_t v89 = swift_getKeyPath();
      *(void *)&v108[-16] = MEMORY[0x270FA5388](v89);
      swift_getKeyPath();
      unint64_t v90 = v119;
      sub_24FB466A0((uint64_t)v119, (uint64_t)v116);
      uint64_t v91 = (void (*)(uint64_t *, void))sub_24FB46D28();
      sub_24FB46E58();
      v91(&v157, 0);
      sub_24FAD5794(v86, &qword_269A4F6C0);
      sub_24FAD5794((uint64_t)v90, &qword_269A4F698);
      ((void (*)(unsigned char *, uint64_t))v137)(v82, v152);
LABEL_3:
      uint64_t v51 = v130;
    }
  }
  (*v140)(v144, 1, 1, v152);
  return sub_24FAD5794(v62, &qword_269A505A8);
}

void *MarkdownParser.makeDocumentElements(attributedString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v42 = a5;
  uint64_t v41 = sub_24FB46C98();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24FB46D18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (void (**)(unsigned char *))((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (void (**)(unsigned char *))((char *)&v36 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v36 - v14, a1, v9);
  uint64_t v16 = v42;
  sub_24FB41110(v15, v13);
  uint64_t v39 = v10;
  uint64_t v17 = *(void (**)(void (**)(unsigned char *), void (**)(unsigned char *), uint64_t))(v10 + 40);
  v17(v15, v13, v9);
  sub_24FB40E20((uint64_t)v15, v16, (uint64_t)v13);
  uint64_t v37 = v15;
  uint64_t v40 = v9;
  v17(v15, v13, v9);
  uint64_t v46 = MEMORY[0x263F8EE88];
  int64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v36 = v7;
    uint64_t v45 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24FB2E55C(0, v18, 0);
    uint64_t v20 = 0;
    uint64_t v19 = v45;
    do
    {
      long long v42 = *(_OWORD *)(a2 + 16 * v20 + 32);
      uint64_t v21 = *((void *)&v42 + 1);
      uint64_t v22 = *(uint64_t (**)(void, uint64_t))(*((void *)&v42 + 1) + 32);
      long long v44 = v42;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
      uint64_t v24 = v42;
      uint64_t v25 = v22(v42, v21);
      uint64_t v45 = v19;
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v26 = *(void *)(v19 + 24);
      if (v27 >= v26 >> 1) {
        uint64_t v25 = sub_24FB2E55C(v26 > 1, v27 + 1, 1);
      }
      ++v20;
      MEMORY[0x270FA5388](v25);
      long long v29 = (char *)&v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v30 + 16))(v29, boxed_opaque_existential_1, v24);
      sub_24FB44A84(v27, (uint64_t)v29, &v45, v24, v21, (uint64_t (*)(uint64_t *, uint64_t))sub_24FAF8CA0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      uint64_t v19 = v45;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    uint64_t v31 = v41;
    uint64_t v7 = v36;
  }
  else
  {
    uint64_t v31 = v41;
  }
  uint64_t v32 = (uint64_t)v37;
  uint64_t v33 = (uint64_t)v38;
  sub_24FB46CB8();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24FB4564C(v33, &v46, v19, v32);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v32, v40);
  return v34;
}

uint64_t MarkdownParser.makeDocumentViewModel(from:)()
{
  type metadata accessor for DocumentViewModel();
  uint64_t v0 = swift_allocObject();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F4C0);
  sub_24FB47108();
  swift_endAccess();
  return v0;
}

uint64_t MarkdownParser.makeDocumentElement(imageData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DocumentDataImageElement();
  a3[3] = v6;
  a3[4] = sub_24FB46658(&qword_269A505C0, (void (*)(uint64_t))type metadata accessor for DocumentDataImageElement);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0();
  uint64_t v8 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v6 + 20));
  *uint64_t v8 = a1;
  v8[1] = a2;
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v6 + 24)) = 0;
  return sub_24FAE9930(a1, a2);
}

uint64_t sub_24FB42B84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v61 = a4;
  uint64_t v8 = sub_24FB46D18();
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = (uint64_t *)sub_24FB46DB8();
  uint64_t v65 = *(v70 - 1);
  MEMORY[0x270FA5388](v70);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24FB46E08();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_24FB0C1CC();
  uint64_t v60 = a1;
  sub_24FB46C58();
  uint64_t v19 = v16;
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t result = sub_24FAD5794((uint64_t)v14, &qword_269A4F698);
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(void *)(a5 + 32) = 0;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  uint64_t v21 = sub_24FB46DC8();
  int64_t v22 = *(void *)(v21 + 16);
  uint64_t v54 = a5;
  uint64_t v50 = a2;
  uint64_t v53 = v15;
  uint64_t v52 = v19;
  uint64_t v51 = v18;
  if (v22)
  {
    *(void *)&long long v67 = MEMORY[0x263F8EE78];
    sub_24FB2E6CC(0, v22, 0);
    uint64_t v23 = v65 + 16;
    uint64_t v24 = *(void *)(v65 + 16);
    uint64_t v25 = *(unsigned __int8 *)(v65 + 80);
    unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))v21;
    uint64_t v26 = v21 + ((v25 + 32) & ~v25);
    uint64_t v64 = *(void *)(v65 + 72);
    uint64_t v65 = v24;
    unint64_t v27 = (void (**)(char *, uint64_t *))(v23 - 8);
    do
    {
      uint64_t v28 = v70;
      ((void (*)(char *, uint64_t, uint64_t *))v65)(v11, v26, v70);
      uint64_t v29 = sub_24FB46DA8();
      (*v27)(v11, v28);
      uint64_t v30 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24FB2E6CC(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v67;
      }
      unint64_t v32 = *(void *)(v30 + 16);
      unint64_t v31 = *(void *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_24FB2E6CC(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v67;
      }
      *(void *)(v30 + 16) = v32 + 1;
      *(void *)(v30 + 8 * v32 + 32) = v29;
      v26 += v64;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v15 = v53;
    a5 = v54;
    a2 = v50;
    uint64_t v19 = v52;
    int64_t v18 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  uint64_t v33 = sub_24FB455D8(v30);
  swift_bridgeObjectRelease();
  uint64_t v34 = *a2;
  swift_bridgeObjectRetain();
  char v35 = sub_24FB43460(v33, v34);
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    sub_24FB43304(v33);
    goto LABEL_20;
  }
  uint64_t v36 = *(void *)(v55 + 16);
  if (!v36)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v18, v15);
    *(void *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    return result;
  }
  uint64_t v49 = v33;
  uint64_t v37 = (void *)(v55 + 32);
  uint64_t v57 = (void (**)(char *, uint64_t))(v62 + 8);
  unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v59;
  while (1)
  {
    uint64_t v62 = v36;
    uint64_t v40 = v37[3];
    uint64_t v39 = v37[4];
    __swift_project_boxed_opaque_existential_1(v37, v40);
    (*v58)(v38, v61, v63);
    uint64_t v41 = *(void *)(v39 + 24);
    uint64_t v64 = v39;
    uint64_t v65 = v41;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v43 = sub_24FB48388();
    uint64_t v70 = &v49;
    uint64_t v44 = *(void *)(v43 - 8);
    MEMORY[0x270FA5388](v43);
    uint64_t v46 = (char *)&v49 - v45;
    uint64_t v56 = v40;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v38, v60, v40, v64);
    (*v57)(v38, v63);
    uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v46, 1, AssociatedTypeWitness) != 1) {
      break;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
    uint64_t AssociatedConformanceWitness = 0;
    long long v67 = 0u;
    long long v68 = 0u;
    sub_24FAD5794((uint64_t)&v67, &qword_269A4F480);
    v37 += 5;
    uint64_t v36 = v62 - 1;
    if (v62 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v53;
      a5 = v54;
      uint64_t v19 = v52;
      int64_t v18 = v51;
      goto LABEL_18;
    }
  }
  *((void *)&v68 + 1) = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
  (*(void (**)(uint64_t *, char *, uint64_t))(v47 + 32))(boxed_opaque_existential_1, v46, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  sub_24FAF8CA0(&v67, v54);
  sub_24FB43304(v49);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v51, v53);
}

uint64_t sub_24FB43304(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_24FB441E4(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_24FB43460(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = a2;
  }
  if (v2 >= v3) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = result;
  }
  uint64_t v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v11 = (unint64_t)(63 - v8) >> 6;
  uint64_t v12 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v13 = v4;
      if (!v10) {
        break;
      }
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
        uint64_t result = sub_24FB48718();
        uint64_t v20 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v21 = result & ~v20;
        if ((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(v6 + 48);
          if (*(void *)(v22 + 8 * v21) == v19)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v24 = 0;
LABEL_35:
            sub_24FB08274();
            return v24;
          }
          uint64_t v23 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v23;
            if (((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v22 + 8 * v21) == v19) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v4;
    if (!v17)
    {
      int64_t v4 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_38;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v4);
      if (!v17)
      {
        int64_t v4 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_38;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v4);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v11)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v24 = 1;
            goto LABEL_35;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v18);
          int64_t v4 = v13 + 4;
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v4 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v4);
    ++v18;
    if (v17) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t static MarkdownParser.getAttributes<A>(keyPath:attributedString:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24FB46C98();
  uint64_t v15 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24FB46CB8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24FB48198();
  if (MEMORY[0x25336E550](v9, AssociatedTypeWitness))
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v11 = sub_24FB45D94(v9, AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v12 = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = swift_getAssociatedConformanceWitness();
    uint64_t v11 = MEMORY[0x263F8EE88];
  }
  uint64_t v16 = v11;
  MEMORY[0x270FA5388](v12);
  *(&v14 - 2) = a3;
  *(&v14 - 1) = a1;
  sub_24FB48278();
  sub_24FB46658(&qword_269A505B0, MEMORY[0x263F067C8]);
  sub_24FB48118();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
  return v17;
}

uint64_t sub_24FB4392C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v29 = a1;
  uint64_t v30 = a4;
  uint64_t v28 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24FB48388();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_24FB46D88();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v24 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v25 = (char *)&v23 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v23 - v18;
  sub_24FB46C48();
  sub_24FB46D58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v7, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v19, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_24FB48278();
  unint64_t v21 = v25;
  sub_24FB48268();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v21, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, AssociatedTypeWitness);
}

char *static MarkdownParser.getAttributes<A>(keyPath:markdown:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24FB46BC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24FB46BD8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24FB46BF8();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v16 = sub_24FB46D18();
  uint64_t v25 = *(void *)(v16 - 8);
  uint64_t v26 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F06760], v11);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F06748], v7);
  sub_24FAE9930(v30, v31);
  sub_24FB46BE8();
  uint64_t v19 = sub_24FB46F68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
  sub_24FB46658(&qword_269A505A0, (void (*)(uint64_t))type metadata accessor for AttributeScopes.MarkdownDocumentAttributes);
  uint64_t v20 = v32;
  sub_24FB46CF8();
  if (!v20)
  {
    uint64_t v22 = v25;
    uint64_t v21 = v26;
    uint64_t v10 = (char *)static MarkdownParser.getAttributes<A>(keyPath:attributedString:)(v27, (uint64_t)v18, v28);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v21);
  }
  return v10;
}

uint64_t sub_24FB44088(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v5 + v3) <= *(void *)(v4 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v4 = a2();
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = (void *)(v4 + 16 * v9 + 32);
  if (a1 + 32 < (unint64_t)v10 + 16 * v8 && (unint64_t)v10 < a1 + 32 + 16 * v8) {
    goto LABEL_21;
  }
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_24FB48538();
  __break(1u);
  return result;
}

uint64_t sub_24FB441E4(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24FB48718();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_24FB44564(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24FB442E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A505C8);
  uint64_t result = sub_24FB48418();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24FB48718();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24FB44564(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24FB442E0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24FB44688();
      goto LABEL_14;
    }
    sub_24FB44820();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24FB48718();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_24FB48698();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_24FB44688()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A505C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24FB48408();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24FB44820()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A505C8);
  uint64_t result = sub_24FB48418();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24FB48718();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24FB44A84(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  v14[3] = a4;
  _DWORD v14[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v12 = *a3;
  *(void *)(v12 + 16) = a1 + 1;
  return a6(v14, v12 + 40 * a1 + 32);
}

void *_s16MarkdownDocument0A6ParserV22documentElementParsers014includeDefaultbeF006inlineF00gh6InlineF0ACSayAA0be16AttributedStringC0_pXpG_SbSayAA0jeklC0_pXpGSbtcfC_0(void *a1, char a2, uint64_t a3, char a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F3A8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24FB4BA10;
  unint64_t v9 = sub_24FB058D4();
  *(void *)(v8 + 32) = &type metadata for DocumentElementCapsuleParser;
  *(void *)(v8 + 40) = v9;
  unint64_t v10 = sub_24FB05928();
  *(void *)(v8 + 48) = &type metadata for DocumentElementListImageParser;
  *(void *)(v8 + 56) = v10;
  unint64_t v11 = sub_24FB0597C();
  *(void *)(v8 + 64) = &type metadata for DocumentElementOutlineParser;
  *(void *)(v8 + 72) = v11;
  unint64_t v12 = sub_24FB059D0();
  *(void *)(v8 + 80) = &type metadata for DocumentElementHeadingParser;
  *(void *)(v8 + 88) = v12;
  unint64_t v13 = sub_24FB05A24();
  *(void *)(v8 + 96) = &type metadata for DocumentElementEmbeddedVideoParser;
  *(void *)(v8 + 104) = v13;
  unint64_t v14 = sub_24FB05A78();
  *(void *)(v8 + 112) = &type metadata for DocumentElementBreakParser;
  *(void *)(v8 + 120) = v14;
  unint64_t v15 = sub_24FB05ACC();
  *(void *)(v8 + 128) = &type metadata for DocumentElementTableParser;
  *(void *)(v8 + 136) = v15;
  unint64_t v16 = sub_24FB05B20();
  *(void *)(v8 + 144) = &type metadata for DocumentElementBlockQuoteParser;
  *(void *)(v8 + 152) = v16;
  unint64_t v17 = sub_24FB05B74();
  *(void *)(v8 + 160) = &type metadata for DocumentElementCodeBlockParser;
  *(void *)(v8 + 168) = v17;
  unint64_t v18 = sub_24FB05BC8();
  *(void *)(v8 + 176) = &type metadata for DocumentElementParagraphParser;
  *(void *)(v8 + 184) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F400);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24FB4BA20;
  *(void *)(v19 + 32) = &type metadata for InlineElementGlossaryLinkParser;
  *(void *)(v19 + 40) = &protocol witness table for InlineElementGlossaryLinkParser;
  *(void *)(v19 + 48) = &type metadata for InlineElementTextColorParser;
  *(void *)(v19 + 56) = &protocol witness table for InlineElementTextColorParser;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24FB44088((uint64_t)a1, (uint64_t (*)(void))sub_24FB2AA9C);
    a1 = (void *)v8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_24FB2AA9C(0, a1[2] + 1, 1, a1);
  }
  unint64_t v21 = a1[2];
  unint64_t v20 = a1[3];
  if (v21 >= v20 >> 1) {
    a1 = sub_24FB2AA9C((void *)(v20 > 1), v21 + 1, 1, a1);
  }
  a1[2] = v21 + 1;
  char v22 = &a1[2 * v21];
  v22[4] = &type metadata for DocumentElementParagraphParser;
  v22[5] = v18;
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_24FB44088(a3, (uint64_t (*)(void))sub_24FB2AA90);
  }
  return a1;
}

uint64_t sub_24FB44D7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = type metadata accessor for AttributeScopes.MarkdownDocumentAttributes();
  *a1 = result;
  return result;
}

unint64_t sub_24FB44DA8()
{
  unint64_t result = qword_269A505B8;
  if (!qword_269A505B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A505B8);
  }
  return result;
}

uint64_t sub_24FB44DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v73 = a3;
  uint64_t v47 = sub_24FB46D18();
  unint64_t v69 = *(void (***)(uint64_t, unsigned char *, uint64_t))(v47 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v47);
  uint64_t v46 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v72 = &v44[-v7];
  uint64_t v68 = sub_24FB46C78();
  uint64_t v48 = *(void (***)(unsigned char *, uint64_t))(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v75 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = sub_24FB46C88();
  uint64_t v9 = *(void *)(v65 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v65);
  uint64_t v63 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = &v44[-v12];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v61 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_24FB46C98();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505A8);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  char v22 = &v44[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16);
  v55(v18, a1, v15);
  sub_24FB46658(&qword_269A505B0, MEMORY[0x263F067C8]);
  uint64_t v56 = v18;
  sub_24FB48108();
  unint64_t v23 = &v22[*(int *)(v20 + 44)];
  uint64_t v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  uint64_t v64 = v9 + 16;
  unint64_t v58 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
  uint64_t v24 = v15;
  uint64_t v54 = (void (**)(unsigned char *))(v48 + 2);
  uint64_t v57 = v16 + 16;
  uint64_t v53 = (void (**)(unsigned char *, uint64_t))(v16 + 8);
  uint64_t v59 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v48 + 7);
  uint64_t v52 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v48 + 6);
  uint64_t v49 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v48 + 4);
  uint64_t v66 = a2;
  uint64_t v45 = (void *)(a2 + 32);
  uint64_t v70 = (void (**)(unsigned char *, uint64_t))(v69 + 1);
  uint64_t v71 = (void (**)(unsigned char *, uint64_t, uint64_t))(v69 + 2);
  v69 += 5;
  ++v48;
  uint64_t v51 = v15;
  uint64_t v50 = v22;
  long long v67 = v23;
  while (1)
  {
    uint64_t v25 = v62;
    uint64_t v26 = v65;
    v60(v62, v23, v65);
    sub_24FB46658(&qword_269A50050, MEMORY[0x263F067C8]);
    uint64_t v27 = v63;
    sub_24FB482A8();
    sub_24FB46658(&qword_269A50058, MEMORY[0x263F067B8]);
    char v28 = sub_24FB48018();
    uint64_t v29 = *v58;
    (*v58)(v27, v26);
    v29(v25, v26);
    if (v28) {
      break;
    }
    unint64_t v23 = v67;
    uint64_t v30 = (void (*)(char *, void))sub_24FB482C8();
    unint64_t v31 = v61;
    uint64_t v32 = v68;
    (*v54)(v61);
    v30(v74, 0);
    uint64_t v33 = v56;
    v55(v56, (uint64_t)v22, v24);
    sub_24FB482B8();
    (*v53)(v33, v24);
    (*v59)(v31, 0, 1, v32);
    if ((*v52)(v31, 1, v32) == 1) {
      return sub_24FAD5794((uint64_t)v22, &qword_269A505A8);
    }
    uint64_t v34 = v75;
    (*v49)(v75, v31, v32);
    uint64_t v35 = *(void *)(v66 + 16);
    if (v35)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = v45;
      uint64_t v37 = v46;
      uint64_t v38 = v47;
      do
      {
        uint64_t v39 = v36[3];
        uint64_t v40 = v36[4];
        __swift_project_boxed_opaque_existential_1(v36, v39);
        uint64_t v41 = v73;
        (*v71)(v37, v73, v38);
        long long v42 = v72;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t, uint64_t))(v40 + 8))(v37, v75, v39, v40);
        (*v70)(v37, v38);
        (*v69)(v41, v42, v38);
        v36 += 5;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
      unint64_t v23 = v67;
      uint64_t v32 = v68;
      uint64_t v34 = v75;
    }
    (*v48)(v34, v32);
    uint64_t v24 = v51;
    char v22 = v50;
  }
  (*v59)(v61, 1, 1, v68);
  return sub_24FAD5794((uint64_t)v22, &qword_269A505A8);
}

uint64_t sub_24FB455D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_24FB48258();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_24FB441E4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void *sub_24FB4564C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v48 = a3;
  uint64_t v47 = a2;
  uint64_t v57 = sub_24FB46C78();
  uint64_t v5 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_24FB46C88();
  uint64_t v7 = *(void *)(v59 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v59);
  uint64_t v63 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v44 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4FC50);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v58 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24FB46C98();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505A8);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v53(v16, a1, v13);
  sub_24FB46658(&qword_269A505B0, MEMORY[0x263F067C8]);
  uint64_t v54 = v16;
  sub_24FB48108();
  uint64_t v21 = *(int *)(v18 + 44);
  char v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v70 = v20;
  unint64_t v23 = &v20[v21];
  uint64_t v64 = v7 + 16;
  uint64_t v60 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v61 = v22;
  uint64_t v52 = (void (**)(char *))(v5 + 16);
  uint64_t v55 = v14 + 16;
  uint64_t v51 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v50 = (uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v44 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v65 = (void *)MEMORY[0x263F8EE78];
  uint64_t v24 = v59;
  while (1)
  {
    uint64_t v25 = v62;
    v61(v62, v23, v24);
    sub_24FB46658(&qword_269A50050, MEMORY[0x263F067C8]);
    uint64_t v26 = v23;
    uint64_t v27 = v63;
    sub_24FB482A8();
    sub_24FB46658(&qword_269A50058, MEMORY[0x263F067B8]);
    char v28 = sub_24FB48018();
    uint64_t v29 = *v60;
    (*v60)(v27, v24);
    v29(v25, v24);
    if (v28)
    {
      (*v56)(v58, 1, 1, v57);
      uint64_t v30 = (uint64_t)v70;
LABEL_13:
      sub_24FAD5794(v30, &qword_269A505A8);
      return v65;
    }
    unint64_t v23 = v26;
    uint64_t v30 = (uint64_t)v70;
    unint64_t v31 = (void (*)(long long *, void))sub_24FB482C8();
    uint64_t v32 = v57;
    uint64_t v33 = v58;
    (*v52)(v58);
    v31(v69, 0);
    uint64_t v34 = v54;
    v53(v54, v30, v13);
    uint64_t v35 = v32;
    sub_24FB482B8();
    (*v51)(v34, v13);
    (*v56)(v33, 0, 1, v32);
    int v36 = (*v50)(v33, 1, v32);
    uint64_t v37 = v66;
    if (v36 == 1) {
      goto LABEL_13;
    }
    uint64_t v38 = (uint64_t)v46;
    (*v45)(v46, v33, v35);
    sub_24FB42B84(v38, v47, v48, v49, (uint64_t)&v67);
    if (v37) {
      break;
    }
    (*v44)(v38, v35);
    uint64_t v66 = 0;
    if (v68)
    {
      sub_24FAF8CA0(&v67, (uint64_t)v69);
      sub_24FAF8CA0(v69, (uint64_t)&v67);
      uint64_t v39 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v39 = sub_24FB2ABB4(0, v39[2] + 1, 1, v39);
      }
      unint64_t v41 = v39[2];
      unint64_t v40 = v39[3];
      if (v41 >= v40 >> 1) {
        uint64_t v39 = sub_24FB2ABB4((void *)(v40 > 1), v41 + 1, 1, v39);
      }
      v39[2] = v41 + 1;
      uint64_t v65 = v39;
      sub_24FAF8CA0(&v67, (uint64_t)&v39[5 * v41 + 4]);
    }
    else
    {
      sub_24FAD5794((uint64_t)&v67, &qword_269A4F480);
    }
  }
  (*v44)(v38, v35);
  sub_24FAD5794(v30, &qword_269A505A8);
  long long v42 = v65;
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_24FB45D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v51 = (char *)&v39 - v10;
  uint64_t v40 = v11;
  __n128 v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x25336E540](v13))
  {
    sub_24FB48438();
    uint64_t v16 = sub_24FB48428();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE88];
  }
  uint64_t v44 = MEMORY[0x25336E550](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_24FB481A8();
    sub_24FB48178();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_24FB48478();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_24FB47FC8();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v8, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_24FB48018();
        uint64_t v33 = *v48;
        (*v48)(v8, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24FB46150(uint64_t a1, uint64_t a2)
{
  return sub_24FB4392C(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 16));
}

uint64_t destroy for MarkdownParser()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MarkdownParser(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MarkdownParser(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MarkdownParser(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MarkdownParser(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MarkdownParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkdownParser()
{
  return &type metadata for MarkdownParser;
}

uint64_t sub_24FB4639C()
{
  return 8;
}

uint64_t sub_24FB463A8()
{
  return swift_release();
}

uint64_t sub_24FB463B0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_24FB463C4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24FB463D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A505A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24FB46444()
{
  return 8;
}

void sub_24FB46458()
{
}

void sub_24FB46478()
{
}

uint64_t sub_24FB464A0()
{
  return 8;
}

uint64_t sub_24FB464AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A50608) & 1;
}

uint64_t sub_24FB464D0(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A50608);
}

uint64_t sub_24FB464E8()
{
  return 8;
}

void sub_24FB464FC()
{
}

void sub_24FB4651C()
{
}

uint64_t sub_24FB46544()
{
  return 8;
}

uint64_t sub_24FB46550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A50600) & 1;
}

uint64_t sub_24FB46574(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A50600);
}

void sub_24FB46580()
{
}

unint64_t sub_24FB465A0()
{
  unint64_t result = qword_269A505E0;
  if (!qword_269A505E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A505E0);
  }
  return result;
}

void sub_24FB465F4()
{
}

uint64_t sub_24FB4661C()
{
  return 8;
}

uint64_t sub_24FB46628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24FAD4274(a1, a2, a3, &qword_269A505F8) & 1;
}

uint64_t sub_24FB4664C(uint64_t a1, uint64_t a2)
{
  return keypath_hash_29Tm(a1, a2, &qword_269A505F8);
}

uint64_t sub_24FB46658(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24FB466A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269A4F698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static MarkdownParserErrors.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t MarkdownParserErrors.hash(into:)()
{
  return sub_24FB48738();
}

uint64_t MarkdownParserErrors.hashValue.getter()
{
  return sub_24FB48748();
}

unint64_t sub_24FB467C8()
{
  unint64_t result = qword_269A50610;
  if (!qword_269A50610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269A50610);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MarkdownParserErrors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24FB468E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkdownParserErrors()
{
  return &type metadata for MarkdownParserErrors;
}

void __getSiriSimpleActivationSourceClass_block_invoke_cold_1()
{
}

uint64_t sub_24FB46948()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_24FB46958()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_24FB46968()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_24FB46978()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_24FB46988()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_24FB46998()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_24FB469A8()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_24FB469B8()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_24FB469C8()
{
  return MEMORY[0x270EEE5C0]();
}

uint64_t sub_24FB469D8()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_24FB469E8()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24FB469F8()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24FB46A08()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24FB46A18()
{
  return MEMORY[0x270EEE6A0]();
}

uint64_t sub_24FB46A28()
{
  return MEMORY[0x270EEE6B0]();
}

uint64_t sub_24FB46A38()
{
  return MEMORY[0x270EEEA28]();
}

uint64_t sub_24FB46A48()
{
  return MEMORY[0x270EEEA30]();
}

uint64_t sub_24FB46A58()
{
  return MEMORY[0x270EEEA38]();
}

uint64_t sub_24FB46A68()
{
  return MEMORY[0x270F816A8]();
}

uint64_t sub_24FB46A78()
{
  return MEMORY[0x270F816C0]();
}

uint64_t sub_24FB46A88()
{
  return MEMORY[0x270EFEAD8]();
}

uint64_t sub_24FB46A98()
{
  return MEMORY[0x270EFEAE8]();
}

uint64_t sub_24FB46AA8()
{
  return MEMORY[0x270EFEAF8]();
}

uint64_t sub_24FB46AB8()
{
  return MEMORY[0x270EFEB00]();
}

uint64_t sub_24FB46AC8()
{
  return MEMORY[0x270EFEB20]();
}

uint64_t sub_24FB46AD8()
{
  return MEMORY[0x270EEEA88]();
}

uint64_t sub_24FB46AE8()
{
  return MEMORY[0x270EEEAA8]();
}

uint64_t sub_24FB46AF8()
{
  return MEMORY[0x270EEEAB8]();
}

uint64_t sub_24FB46B08()
{
  return MEMORY[0x270EEEAE8]();
}

uint64_t sub_24FB46B18()
{
  return MEMORY[0x270EEEB18]();
}

uint64_t sub_24FB46B28()
{
  return MEMORY[0x270EEEB40]();
}

uint64_t sub_24FB46B38()
{
  return MEMORY[0x270EEEB68]();
}

uint64_t sub_24FB46B48()
{
  return MEMORY[0x270EEEB70]();
}

uint64_t sub_24FB46B58()
{
  return MEMORY[0x270EEEB78]();
}

uint64_t sub_24FB46B68()
{
  return MEMORY[0x270EEEBA8]();
}

uint64_t sub_24FB46B78()
{
  return MEMORY[0x270EEEBB8]();
}

uint64_t sub_24FB46B88()
{
  return MEMORY[0x270EEEBC0]();
}

uint64_t sub_24FB46B98()
{
  return MEMORY[0x270EEEBE0]();
}

uint64_t sub_24FB46BA8()
{
  return MEMORY[0x270EEEBF0]();
}

uint64_t sub_24FB46BB8()
{
  return MEMORY[0x270EEEBF8]();
}

uint64_t sub_24FB46BC8()
{
  return MEMORY[0x270EEEC10]();
}

uint64_t sub_24FB46BD8()
{
  return MEMORY[0x270EEEC18]();
}

uint64_t sub_24FB46BE8()
{
  return MEMORY[0x270EEEC20]();
}

uint64_t sub_24FB46BF8()
{
  return MEMORY[0x270EEEC28]();
}

uint64_t sub_24FB46C08()
{
  return MEMORY[0x270EEEC38]();
}

uint64_t sub_24FB46C18()
{
  return MEMORY[0x270EEEC48]();
}

uint64_t sub_24FB46C28()
{
  return MEMORY[0x270EEEC58]();
}

uint64_t sub_24FB46C38()
{
  return MEMORY[0x270EEEC60]();
}

uint64_t sub_24FB46C48()
{
  return MEMORY[0x270EEEC70]();
}

uint64_t sub_24FB46C58()
{
  return MEMORY[0x270EEEC80]();
}

uint64_t sub_24FB46C68()
{
  return MEMORY[0x270EEEC90]();
}

uint64_t sub_24FB46C78()
{
  return MEMORY[0x270EEECA8]();
}

uint64_t sub_24FB46C88()
{
  return MEMORY[0x270EEECC0]();
}

uint64_t sub_24FB46C98()
{
  return MEMORY[0x270EEECD0]();
}

uint64_t sub_24FB46CA8()
{
  return MEMORY[0x270EEECE8]();
}

uint64_t sub_24FB46CB8()
{
  return MEMORY[0x270EEECF8]();
}

uint64_t sub_24FB46CC8()
{
  return MEMORY[0x270EEED18]();
}

uint64_t sub_24FB46CD8()
{
  return MEMORY[0x270EEED50]();
}

uint64_t sub_24FB46CE8()
{
  return MEMORY[0x270EEED78]();
}

uint64_t sub_24FB46CF8()
{
  return MEMORY[0x270EEED80]();
}

uint64_t sub_24FB46D08()
{
  return MEMORY[0x270EEEDD0]();
}

uint64_t sub_24FB46D18()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_24FB46D28()
{
  return MEMORY[0x270EEEE18]();
}

uint64_t sub_24FB46D38()
{
  return MEMORY[0x270EEEE28]();
}

uint64_t sub_24FB46D48()
{
  return MEMORY[0x270EEEE50]();
}

uint64_t sub_24FB46D58()
{
  return MEMORY[0x270EEF010]();
}

uint64_t sub_24FB46D68()
{
  return MEMORY[0x270EEF020]();
}

uint64_t sub_24FB46D78()
{
  return MEMORY[0x270EEF060]();
}

uint64_t sub_24FB46D88()
{
  return MEMORY[0x270EEF070]();
}

uint64_t sub_24FB46D98()
{
  return MEMORY[0x270EEF0D8]();
}

uint64_t sub_24FB46DA8()
{
  return MEMORY[0x270EEF0E0]();
}

uint64_t sub_24FB46DB8()
{
  return MEMORY[0x270EEF0E8]();
}

uint64_t sub_24FB46DC8()
{
  return MEMORY[0x270EEF0F0]();
}

uint64_t sub_24FB46DD8()
{
  return MEMORY[0x270EEF0F8]();
}

uint64_t sub_24FB46DE8()
{
  return MEMORY[0x270EEF100]();
}

uint64_t sub_24FB46DF8()
{
  return MEMORY[0x270EEF108]();
}

uint64_t sub_24FB46E08()
{
  return MEMORY[0x270EEF110]();
}

uint64_t sub_24FB46E18()
{
  return MEMORY[0x270EEF118]();
}

uint64_t sub_24FB46E28()
{
  return MEMORY[0x270EEF138]();
}

uint64_t sub_24FB46E38()
{
  return MEMORY[0x270EEF140]();
}

uint64_t sub_24FB46E48()
{
  return MEMORY[0x270EEF150]();
}

uint64_t sub_24FB46E58()
{
  return MEMORY[0x270EEF180]();
}

uint64_t sub_24FB46E68()
{
  return MEMORY[0x270EEF1B8]();
}

uint64_t sub_24FB46E78()
{
  return MEMORY[0x270EEF1C8]();
}

uint64_t sub_24FB46E88()
{
  return MEMORY[0x270EEF810]();
}

uint64_t sub_24FB46E98()
{
  return MEMORY[0x270F816D8]();
}

uint64_t sub_24FB46EA8()
{
  return MEMORY[0x270EFEB28]();
}

uint64_t sub_24FB46EB8()
{
  return MEMORY[0x270EEF818]();
}

uint64_t sub_24FB46EC8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24FB46ED8()
{
  return MEMORY[0x270EEFA90]();
}

uint64_t sub_24FB46EE8()
{
  return MEMORY[0x270EEFA98]();
}

uint64_t sub_24FB46EF8()
{
  return MEMORY[0x270EEFB90]();
}

uint64_t sub_24FB46F08()
{
  return MEMORY[0x270EEFB98]();
}

uint64_t sub_24FB46F18()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24FB46F28()
{
  return MEMORY[0x270EEFDF0]();
}

uint64_t sub_24FB46F38()
{
  return MEMORY[0x270EEFE18]();
}

uint64_t sub_24FB46F48()
{
  return MEMORY[0x270EEFE38]();
}

uint64_t sub_24FB46F58()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24FB46F68()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24FB46F78()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24FB46F88()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t _s16MarkdownDocument0B12BreakElementV23__derived_struct_equalsySbAC_ACtFZ_0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t _s16MarkdownDocument0B20EmbeddedVideoElementV2id10Foundation4UUIDVvpfi_0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24FB46FB8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24FB46FC8()
{
  return MEMORY[0x270F739D8]();
}

uint64_t sub_24FB46FD8()
{
  return MEMORY[0x270F80BE8]();
}

uint64_t sub_24FB46FE8()
{
  return MEMORY[0x270F80BF8]();
}

uint64_t sub_24FB46FF8()
{
  return MEMORY[0x270FA1850]();
}

uint64_t sub_24FB47008()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_24FB47018()
{
  return MEMORY[0x270F2EA60]();
}

uint64_t sub_24FB47028()
{
  return MEMORY[0x270F2EA68]();
}

uint64_t sub_24FB47038()
{
  return MEMORY[0x270F2EA78]();
}

uint64_t sub_24FB47048()
{
  return MEMORY[0x270F2EAA0]();
}

uint64_t sub_24FB47058()
{
  return MEMORY[0x270F2EAA8]();
}

uint64_t sub_24FB47068()
{
  return MEMORY[0x270F2EAB0]();
}

uint64_t sub_24FB47078()
{
  return MEMORY[0x270F2EAC8]();
}

uint64_t sub_24FB47088()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24FB47098()
{
  return MEMORY[0x270F2EC68]();
}

uint64_t sub_24FB470A8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24FB470B8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24FB470C8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24FB470D8()
{
  return MEMORY[0x270F81A00]();
}

uint64_t sub_24FB470E8()
{
  return MEMORY[0x270F81B08]();
}

uint64_t sub_24FB470F8()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_24FB47108()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_24FB47118()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_24FB47128()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_24FB47138()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_24FB47148()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_24FB47158()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_24FB47168()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_24FB47178()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_24FB47188()
{
  return MEMORY[0x270EFEED0]();
}

uint64_t sub_24FB47198()
{
  return MEMORY[0x270EFEF10]();
}

uint64_t sub_24FB471A8()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_24FB471C8()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_24FB471D8()
{
  return MEMORY[0x270EFF128]();
}

uint64_t sub_24FB471E8()
{
  return MEMORY[0x270EFF1B8]();
}

uint64_t sub_24FB471F8()
{
  return MEMORY[0x270EFF1E0]();
}

uint64_t sub_24FB47208()
{
  return MEMORY[0x270EFF3F8]();
}

uint64_t sub_24FB47218()
{
  return MEMORY[0x270EFF408]();
}

uint64_t sub_24FB47228()
{
  return MEMORY[0x270EFF418]();
}

uint64_t sub_24FB47238()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_24FB47248()
{
  return MEMORY[0x270EFF648]();
}

uint64_t sub_24FB47258()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_24FB47268()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_24FB47278()
{
  return MEMORY[0x270EFF800]();
}

uint64_t sub_24FB47288()
{
  return MEMORY[0x270EFF808]();
}

uint64_t sub_24FB47298()
{
  return MEMORY[0x270EFF828]();
}

uint64_t sub_24FB472A8()
{
  return MEMORY[0x270EFF838]();
}

uint64_t sub_24FB472B8()
{
  return MEMORY[0x270EFF850]();
}

uint64_t sub_24FB472C8()
{
  return MEMORY[0x270EFF940]();
}

uint64_t sub_24FB472D8()
{
  return MEMORY[0x270EFF9A0]();
}

uint64_t sub_24FB472F8()
{
  return MEMORY[0x270EFFB80]();
}

uint64_t sub_24FB47308()
{
  return MEMORY[0x270EFFD10]();
}

uint64_t sub_24FB47318()
{
  return MEMORY[0x270EFFD18]();
}

uint64_t sub_24FB47328()
{
  return MEMORY[0x270EFFD48]();
}

uint64_t sub_24FB47338()
{
  return MEMORY[0x270EFFD60]();
}

uint64_t sub_24FB47348()
{
  return MEMORY[0x270EFFD68]();
}

uint64_t sub_24FB47358()
{
  return MEMORY[0x270EFFEE0]();
}

uint64_t sub_24FB47368()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_24FB47378()
{
  return MEMORY[0x270F00340]();
}

uint64_t sub_24FB47388()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_24FB47398()
{
  return MEMORY[0x270F00670]();
}

uint64_t sub_24FB473A8()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_24FB473B8()
{
  return MEMORY[0x270F00698]();
}

uint64_t sub_24FB473C8()
{
  return MEMORY[0x270F00828]();
}

uint64_t sub_24FB473D8()
{
  return MEMORY[0x270F00840]();
}

uint64_t sub_24FB473E8()
{
  return MEMORY[0x270F00860]();
}

uint64_t sub_24FB473F8()
{
  return MEMORY[0x270F00868]();
}

uint64_t sub_24FB47408()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_24FB47418()
{
  return MEMORY[0x270F008D8]();
}

uint64_t sub_24FB47428()
{
  return MEMORY[0x270F00A20]();
}

uint64_t sub_24FB47438()
{
  return MEMORY[0x270F00A30]();
}

uint64_t sub_24FB47448()
{
  return MEMORY[0x270F00D80]();
}

uint64_t sub_24FB47458()
{
  return MEMORY[0x270F00D90]();
}

uint64_t sub_24FB47468()
{
  return MEMORY[0x270F00DF0]();
}

uint64_t sub_24FB47478()
{
  return MEMORY[0x270F00E00]();
}

uint64_t sub_24FB47488()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_24FB47498()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_24FB474A8()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_24FB474B8()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_24FB474C8()
{
  return MEMORY[0x270F00F10]();
}

uint64_t sub_24FB474D8()
{
  return MEMORY[0x270F00F20]();
}

uint64_t sub_24FB474E8()
{
  return MEMORY[0x270F00FA0]();
}

uint64_t sub_24FB474F8()
{
  return MEMORY[0x270F00FA8]();
}

uint64_t sub_24FB47508()
{
  return MEMORY[0x270F01028]();
}

uint64_t sub_24FB47518()
{
  return MEMORY[0x270F01038]();
}

uint64_t sub_24FB47528()
{
  return MEMORY[0x270F01050]();
}

uint64_t sub_24FB47538()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_24FB47548()
{
  return MEMORY[0x270F01078]();
}

uint64_t sub_24FB47558()
{
  return MEMORY[0x270F01228]();
}

uint64_t sub_24FB47568()
{
  return MEMORY[0x270F01238]();
}

uint64_t sub_24FB47578()
{
  return MEMORY[0x270F01248]();
}

uint64_t sub_24FB47588()
{
  return MEMORY[0x270F01258]();
}

uint64_t sub_24FB47598()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_24FB475A8()
{
  return MEMORY[0x270F01280]();
}

uint64_t sub_24FB475B8()
{
  return MEMORY[0x270F01290]();
}

uint64_t sub_24FB475C8()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_24FB475D8()
{
  return MEMORY[0x270F01378]();
}

uint64_t sub_24FB475E8()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_24FB475F8()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_24FB47608()
{
  return MEMORY[0x270F01538]();
}

uint64_t sub_24FB47618()
{
  return MEMORY[0x270F016E0]();
}

uint64_t sub_24FB47628()
{
  return MEMORY[0x270F016F8]();
}

uint64_t sub_24FB47638()
{
  return MEMORY[0x270F01708]();
}

uint64_t sub_24FB47658()
{
  return MEMORY[0x270F01728]();
}

uint64_t sub_24FB47668()
{
  return MEMORY[0x270F01738]();
}

uint64_t sub_24FB47678()
{
  return MEMORY[0x270F01748]();
}

uint64_t sub_24FB47688()
{
  return MEMORY[0x270F01758]();
}

uint64_t sub_24FB47698()
{
  return MEMORY[0x270F01768]();
}

uint64_t sub_24FB476A8()
{
  return MEMORY[0x270F01778]();
}

uint64_t sub_24FB476C8()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_24FB476D8()
{
  return MEMORY[0x270F01B20]();
}

uint64_t sub_24FB476E8()
{
  return MEMORY[0x270F01B30]();
}

uint64_t sub_24FB476F8()
{
  return MEMORY[0x270F01D10]();
}

uint64_t sub_24FB47708()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_24FB47718()
{
  return MEMORY[0x270F01D28]();
}

uint64_t sub_24FB47728()
{
  return MEMORY[0x270F01D30]();
}

uint64_t sub_24FB47738()
{
  return MEMORY[0x270F01D38]();
}

uint64_t sub_24FB47748()
{
  return MEMORY[0x270F020F0]();
}

uint64_t sub_24FB47758()
{
  return MEMORY[0x270F026A0]();
}

uint64_t sub_24FB47768()
{
  return MEMORY[0x270F026B0]();
}

uint64_t sub_24FB47778()
{
  return MEMORY[0x270F026C8]();
}

uint64_t sub_24FB47798()
{
  return MEMORY[0x270F026E0]();
}

uint64_t sub_24FB477A8()
{
  return MEMORY[0x270F026F0]();
}

uint64_t sub_24FB477B8()
{
  return MEMORY[0x270F02700]();
}

uint64_t sub_24FB477D8()
{
  return MEMORY[0x270F02988]();
}

uint64_t sub_24FB477E8()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_24FB477F8()
{
  return MEMORY[0x270F02A20]();
}

uint64_t sub_24FB47808()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_24FB47818()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_24FB47828()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_24FB47838()
{
  return MEMORY[0x270F02A60]();
}

uint64_t sub_24FB47848()
{
  return MEMORY[0x270F02A68]();
}

uint64_t sub_24FB47858()
{
  return MEMORY[0x270F02A78]();
}

uint64_t sub_24FB47868()
{
  return MEMORY[0x270F02A90]();
}

uint64_t sub_24FB47878()
{
  return MEMORY[0x270F02AD8]();
}

uint64_t sub_24FB47888()
{
  return MEMORY[0x270F02AE8]();
}

uint64_t sub_24FB47898()
{
  return MEMORY[0x270F02B08]();
}

uint64_t sub_24FB478A8()
{
  return MEMORY[0x270F02B48]();
}

uint64_t sub_24FB478B8()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_24FB478C8()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_24FB478D8()
{
  return MEMORY[0x270F02BF8]();
}

uint64_t sub_24FB478E8()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_24FB478F8()
{
  return MEMORY[0x270F02C40]();
}

uint64_t sub_24FB47908()
{
  return MEMORY[0x270F02C70]();
}

uint64_t sub_24FB47918()
{
  return MEMORY[0x270F02C88]();
}

uint64_t sub_24FB47928()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_24FB47938()
{
  return MEMORY[0x270F02CD0]();
}

uint64_t sub_24FB47948()
{
  return MEMORY[0x270F02CF8]();
}

uint64_t sub_24FB47958()
{
  return MEMORY[0x270F02D08]();
}

uint64_t sub_24FB47968()
{
  return MEMORY[0x270F02DF8]();
}

uint64_t sub_24FB47978()
{
  return MEMORY[0x270F75938]();
}

uint64_t sub_24FB47988()
{
  return MEMORY[0x270F02F28]();
}

uint64_t sub_24FB47998()
{
  return MEMORY[0x270F03008]();
}

uint64_t sub_24FB479A8()
{
  return MEMORY[0x270F03010]();
}

uint64_t sub_24FB479B8()
{
  return MEMORY[0x270F03060]();
}

uint64_t sub_24FB479C8()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_24FB479D8()
{
  return MEMORY[0x270F031C8]();
}

uint64_t sub_24FB479E8()
{
  return MEMORY[0x270F031F0]();
}

uint64_t sub_24FB479F8()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_24FB47A08()
{
  return MEMORY[0x270F03238]();
}

uint64_t sub_24FB47A18()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_24FB47A28()
{
  return MEMORY[0x270F03260]();
}

uint64_t sub_24FB47A38()
{
  return MEMORY[0x270F75980]();
}

uint64_t sub_24FB47A48()
{
  return MEMORY[0x270F75A20]();
}

uint64_t sub_24FB47A58()
{
  return MEMORY[0x270F75A38]();
}

uint64_t sub_24FB47A68()
{
  return MEMORY[0x270F75A50]();
}

uint64_t sub_24FB47A78()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_24FB47A88()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_24FB47A98()
{
  return MEMORY[0x270F03360]();
}

uint64_t sub_24FB47AA8()
{
  return MEMORY[0x270F03438]();
}

uint64_t sub_24FB47AB8()
{
  return MEMORY[0x270F03448]();
}

uint64_t sub_24FB47AC8()
{
  return MEMORY[0x270F034A0]();
}

uint64_t sub_24FB47AD8()
{
  return MEMORY[0x270F03520]();
}

uint64_t sub_24FB47AE8()
{
  return MEMORY[0x270F035C0]();
}

uint64_t sub_24FB47AF8()
{
  return MEMORY[0x270F035E0]();
}

uint64_t sub_24FB47B08()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_24FB47B18()
{
  return MEMORY[0x270F03790]();
}

uint64_t sub_24FB47B28()
{
  return MEMORY[0x270F037B0]();
}

uint64_t sub_24FB47B38()
{
  return MEMORY[0x270F03840]();
}

uint64_t sub_24FB47B48()
{
  return MEMORY[0x270F03F00]();
}

uint64_t sub_24FB47B58()
{
  return MEMORY[0x270F040E0]();
}

uint64_t sub_24FB47B68()
{
  return MEMORY[0x270F04108]();
}

uint64_t sub_24FB47B78()
{
  return MEMORY[0x270F041A0]();
}

uint64_t sub_24FB47B88()
{
  return MEMORY[0x270F041E8]();
}

uint64_t sub_24FB47B98()
{
  return MEMORY[0x270F041F0]();
}

uint64_t sub_24FB47BA8()
{
  return MEMORY[0x270F041F8]();
}

uint64_t sub_24FB47BB8()
{
  return MEMORY[0x270F04388]();
}

uint64_t sub_24FB47BC8()
{
  return MEMORY[0x270F043F8]();
}

uint64_t sub_24FB47BD8()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_24FB47BE8()
{
  return MEMORY[0x270F04460]();
}

uint64_t sub_24FB47BF8()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_24FB47C08()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_24FB47C18()
{
  return MEMORY[0x270F044E8]();
}

uint64_t sub_24FB47C28()
{
  return MEMORY[0x270F044F0]();
}

uint64_t sub_24FB47C38()
{
  return MEMORY[0x270F04558]();
}

uint64_t sub_24FB47C48()
{
  return MEMORY[0x270F04588]();
}

uint64_t sub_24FB47C58()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_24FB47C68()
{
  return MEMORY[0x270F04630]();
}

uint64_t sub_24FB47C78()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_24FB47C88()
{
  return MEMORY[0x270F04668]();
}

uint64_t sub_24FB47C98()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_24FB47CA8()
{
  return MEMORY[0x270F046C8]();
}

uint64_t sub_24FB47CB8()
{
  return MEMORY[0x270F04708]();
}

uint64_t sub_24FB47CC8()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_24FB47CD8()
{
  return MEMORY[0x270F04738]();
}

uint64_t sub_24FB47CE8()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_24FB47CF8()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_24FB47D08()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_24FB47D18()
{
  return MEMORY[0x270F04848]();
}

uint64_t sub_24FB47D28()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_24FB47D38()
{
  return MEMORY[0x270F04900]();
}

uint64_t sub_24FB47D48()
{
  return MEMORY[0x270F049D0]();
}

uint64_t sub_24FB47D58()
{
  return MEMORY[0x270F04B08]();
}

uint64_t sub_24FB47D68()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_24FB47D78()
{
  return MEMORY[0x270F04B20]();
}

uint64_t sub_24FB47D88()
{
  return MEMORY[0x270F04B30]();
}

uint64_t sub_24FB47D98()
{
  return MEMORY[0x270F04B48]();
}

uint64_t sub_24FB47DA8()
{
  return MEMORY[0x270F04B68]();
}

uint64_t sub_24FB47DB8()
{
  return MEMORY[0x270F04BF8]();
}

uint64_t sub_24FB47DC8()
{
  return MEMORY[0x270F04C20]();
}

uint64_t sub_24FB47DD8()
{
  return MEMORY[0x270F04C30]();
}

uint64_t sub_24FB47DE8()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_24FB47DF8()
{
  return MEMORY[0x270F04CA8]();
}

uint64_t sub_24FB47E08()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_24FB47E18()
{
  return MEMORY[0x270F04FA0]();
}

uint64_t sub_24FB47E28()
{
  return MEMORY[0x270F04FB0]();
}

uint64_t sub_24FB47E38()
{
  return MEMORY[0x270F05010]();
}

uint64_t sub_24FB47E48()
{
  return MEMORY[0x270F05020]();
}

uint64_t sub_24FB47E58()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_24FB47E68()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_24FB47E78()
{
  return MEMORY[0x270F05110]();
}

uint64_t sub_24FB47E88()
{
  return MEMORY[0x270F05120]();
}

uint64_t sub_24FB47E98()
{
  return MEMORY[0x270F05198]();
}

uint64_t sub_24FB47EA8()
{
  return MEMORY[0x270F053C8]();
}

uint64_t sub_24FB47EB8()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24FB47EC8()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24FB47ED8()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24FB47EE8()
{
  return MEMORY[0x270F75B00]();
}

uint64_t sub_24FB47EF8()
{
  return MEMORY[0x270F75D78]();
}

uint64_t sub_24FB47F08()
{
  return MEMORY[0x270F75D80]();
}

uint64_t sub_24FB47F18()
{
  return MEMORY[0x270F75DA0]();
}

uint64_t sub_24FB47F28()
{
  return MEMORY[0x270F75DA8]();
}

uint64_t sub_24FB47F38()
{
  return MEMORY[0x270F75E28]();
}

uint64_t _s21GenerativeAssistantUI0A13TAHandoffViewVACycfC_0()
{
  return MEMORY[0x270F75E40]();
}

uint64_t sub_24FB47F58()
{
  return MEMORY[0x270F75E48]();
}

uint64_t sub_24FB47F68()
{
  return MEMORY[0x270F76080]();
}

uint64_t sub_24FB47F78()
{
  return MEMORY[0x270F76090]();
}

uint64_t sub_24FB47F88()
{
  return MEMORY[0x270F760B0]();
}

uint64_t sub_24FB47F98()
{
  return MEMORY[0x270F761D0]();
}

uint64_t sub_24FB47FA8()
{
  return MEMORY[0x270F76280]();
}

uint64_t sub_24FB47FB8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24FB47FC8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24FB47FD8()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24FB47FE8()
{
  return MEMORY[0x270F9D328]();
}

uint64_t sub_24FB47FF8()
{
  return MEMORY[0x270F9D410]();
}

uint64_t sub_24FB48008()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_24FB48018()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24FB48028()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24FB48038()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_24FB48048()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24FB48058()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24FB48068()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24FB48078()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_24FB48088()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24FB480A8()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24FB480B8()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24FB480C8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24FB480D8()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24FB480E8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24FB480F8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24FB48108()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24FB48118()
{
  return MEMORY[0x270F9D9A0]();
}

uint64_t sub_24FB48128()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24FB48138()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24FB48148()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24FB48158()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24FB48168()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24FB48178()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_24FB48188()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24FB48198()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24FB481A8()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_24FB481B8()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24FB481C8()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_24FB481D8()
{
  return MEMORY[0x270F9DCB0]();
}

uint64_t sub_24FB481E8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24FB481F8()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_24FB48208()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24FB48218()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24FB48228()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24FB48238()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24FB48248()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24FB48258()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24FB48268()
{
  return MEMORY[0x270F9DF58]();
}

uint64_t sub_24FB48278()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_24FB48288()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_24FB48298()
{
  return MEMORY[0x270F9E0D0]();
}

uint64_t sub_24FB482A8()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_24FB482B8()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_24FB482C8()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_24FB482D8()
{
  return MEMORY[0x270F9E200]();
}

uint64_t sub_24FB482E8()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24FB482F8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24FB48308()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24FB48318()
{
  return MEMORY[0x270F82548]();
}

uint64_t sub_24FB48328()
{
  return MEMORY[0x270F82558]();
}

uint64_t sub_24FB48338()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_24FB48348()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24FB48358()
{
  return MEMORY[0x270EF1FD0]();
}

uint64_t sub_24FB48368()
{
  return MEMORY[0x270F2EC88]();
}

uint64_t sub_24FB48378()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24FB48388()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24FB48398()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24FB483A8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24FB483B8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24FB483C8()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24FB483D8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_24FB483E8()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_24FB483F8()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24FB48408()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24FB48418()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24FB48428()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24FB48438()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_24FB48448()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24FB48458()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24FB48468()
{
  return MEMORY[0x270F9E9C8]();
}

uint64_t sub_24FB48478()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_24FB48488()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24FB48498()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24FB484A8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24FB484B8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24FB484C8()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_24FB484D8()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_24FB484E8()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_24FB484F8()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_24FB48508()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24FB48518()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24FB48528()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24FB48538()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24FB48558()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24FB48568()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24FB48578()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24FB48588()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24FB48598()
{
  return MEMORY[0x270F9F288]();
}

uint64_t sub_24FB485A8()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24FB485B8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24FB485C8()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24FB485D8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24FB485E8()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24FB485F8()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24FB48608()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24FB48618()
{
  return MEMORY[0x270F9F3C8]();
}

uint64_t sub_24FB48628()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24FB48638()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24FB48648()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24FB48658()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24FB48668()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24FB48678()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_24FB48688()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24FB48698()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24FB486A8()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_24FB486C8()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24FB486D8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24FB486E8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24FB486F8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24FB48708()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24FB48718()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24FB48728()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24FB48738()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24FB48748()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24FB48758()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24FB48768()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24FB48778()
{
  return MEMORY[0x270F9FFE8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x270F76310]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x270ED8458]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}